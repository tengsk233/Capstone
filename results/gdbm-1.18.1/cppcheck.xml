<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_close&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_close&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c" line="28" column="17"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="56" column="30"/>
            <symbol>dbm_close</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_delete&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_delete&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdelete.c" line="28" column="18"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdelete.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="59" column="30"/>
            <symbol>dbm_delete</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_dirfno&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_dirfno&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdirfno.c" line="29" column="18"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdirfno.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="64" column="30"/>
            <symbol>dbm_dirfno</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_fetch&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_fetch&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmfetch.c" line="30" column="17"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmfetch.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="57" column="31"/>
            <symbol>dbm_fetch</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_pagfno&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_pagfno&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmpagfno.c" line="29" column="18"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmpagfno.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="65" column="30"/>
            <symbol>dbm_pagfno</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_rdonly&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_rdonly&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmrdonly.c" line="28" column="18"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmrdonly.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="66" column="30"/>
            <symbol>dbm_rdonly</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_firstkey&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_firstkey&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c" line="31" column="20"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="60" column="34"/>
            <symbol>dbm_firstkey</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_nextkey&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_nextkey&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c" line="51" column="19"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="61" column="33"/>
            <symbol>dbm_nextkey</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;dbm_store&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." verbose="Function &apos;dbm_store&apos; argument 1 names different: declaration &apos;dbf&apos; definition &apos;dbm&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmstore.c" line="30" column="17"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmstore.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h" line="58" column="29"/>
            <symbol>dbm_store</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;filename&apos; is assigned a value that is never used." verbose="Variable &apos;filename&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/debian/tests/files/read-back.c" line="30" column="11"/>
            <symbol>filename</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;_gdbm_base64_encode&apos; argument 5 names different: declaration &apos;outbytes&apos; definition &apos;nbytes&apos;." verbose="Function &apos;_gdbm_base64_encode&apos; argument 5 names different: declaration &apos;outbytes&apos; definition &apos;nbytes&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c" line="37" column="16"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/proto.h" line="78" column="13"/>
            <symbol>_gdbm_base64_encode</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" line="70" column="7"/>
            <symbol>rc</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" line="73" column="9"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;new_bits&apos; can be reduced." verbose="The scope of the variable &apos;new_bits&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" line="218" column="16"/>
            <symbol>new_bits</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index1&apos; can be reduced." verbose="The scope of the variable &apos;index1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" line="237" column="16"/>
            <symbol>index1</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;s&apos; shadows outer variable" verbose="Local variable &apos;s&apos; shadows outer variable" cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c" line="348" column="11" info="Shadow variable"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c" line="319" column="17" info="Shadowed declaration"/>
            <symbol>s</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;c&apos; can be reduced." verbose="The scope of the variable &apos;c&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c" line="82" column="16"/>
            <symbol>c</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/err.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/err.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key_size&apos; can be reduced." verbose="The scope of the variable &apos;key_size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c" line="148" column="10"/>
            <symbol>key_size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buf&apos; can be reduced." verbose="The scope of the variable &apos;buf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c" line="85" column="9"/>
            <symbol>buf</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c" line="32" column="7"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmcount.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmcount.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdelete.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdelete.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;home&apos; can be reduced." verbose="The scope of the variable &apos;home&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdelete.c" line="34" column="7"/>
            <symbol>home</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexists.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexists.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfdesc.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfdesc.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;size&apos; can be reduced." verbose="The scope of the variable &apos;size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c" line="31" column="24"/>
            <symbol>size</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;n==0&apos; is always false" verbose="Condition &apos;n==0&apos; is always false" cwe="570">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c" line="161" column="13" info="Condition &apos;n==0&apos; is always false"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c" line="154" column="13" info="Assuming that condition &apos;n=get_dump_line(file)&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buf&apos; can be reduced." verbose="The scope of the variable &apos;buf&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c" line="79" column="8"/>
            <symbol>buf</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c" line="241" column="14"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c" line="724" column="7"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmreorg.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmreorg.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="duplicateBranch" severity="style" msg="Found duplicate branches for &apos;if&apos; and &apos;else&apos;." verbose="Finding the same code in an &apos;if&apos; and related &apos;else&apos; branch is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" line="120" column="7"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" line="122" column="7"/>
        </error>
        <error id="duplicateBranch" severity="style" msg="Found duplicate branches for &apos;if&apos; and &apos;else&apos;." verbose="Finding the same code in an &apos;if&apos; and related &apos;else&apos; branch is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" line="166" column="3"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" line="168" column="3"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;free_size&apos; can be reduced." verbose="The scope of the variable &apos;free_size&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c" line="47" column="8"/>
            <symbol>free_size</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsync.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsync.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;index&apos; can be reduced." verbose="The scope of the variable &apos;index&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" line="328" column="19"/>
            <symbol>index</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;changed&apos; can be reduced." verbose="The scope of the variable &apos;changed&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" line="329" column="19"/>
            <symbol>changed</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;gdbmarg_kvpair&apos; argument 1 names different: declaration &apos;kvl&apos; definition &apos;kvp&apos;." verbose="Function &apos;gdbmarg_kvpair&apos; argument 1 names different: declaration &apos;kvl&apos; definition &apos;kvp&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" line="1595" column="32"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.h" line="257" column="48"/>
            <symbol>gdbmarg_kvpair</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" line="0" column="0"/>
        </error>
        <error id="uselessAssignmentPtrArg" severity="warning" msg="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" verbose="Assignment of function parameter has no effect outside the function. Did you forget dereferencing it?" cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.c" line="1264" column="5"/>
        </error>
        <error id="negativeIndex" severity="warning" msg="Either the condition &apos;yytoken!=-2&apos; is redundant or the array &apos;yytname[50]&apos; is accessed at index -2, which is out of bounds." verbose="Either the condition &apos;yytoken!=-2&apos; is redundant or the array &apos;yytname[50]&apos; is accessed at index -2, which is out of bounds." cwe="786">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.c" line="1114" column="49" info="Negative array index"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.c" line="1152" column="15" info="Assuming that condition &apos;yytoken!=-2&apos; is not redundant"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="135" column="55"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="143" column="65"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="152" column="49"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="160" column="49"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="176" column="63"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="184" column="58"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="185" column="52"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="194" column="19"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="195" column="36"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="203" column="52"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="219" column="74"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="227" column="50"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="245" column="51"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="261" column="52"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="269" column="31"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="271" column="36"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="276" column="40"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="286" column="69"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="294" column="61"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="295" column="55"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="304" column="77"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="321" column="40"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="330" column="40"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="348" column="35"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="364" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="368" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="372" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="374" column="24"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="382" column="82"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="397" column="106"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="404" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="412" column="44"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="419" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="423" column="25"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;-&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c" file="gram.y" line="426" column="24"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;EXIT_SUCCESS;_ALLOCA_H;_MSC_VER;__C99__FUNC__;__STDC__;YYSTACK_USE_ALLOCA;yyoverflow&apos; since the value of &apos;yyoverflow&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;EXIT_SUCCESS;_ALLOCA_H;_MSC_VER;__C99__FUNC__;__STDC__;YYSTACK_USE_ALLOCA;yyoverflow&apos; since the value of &apos;yyoverflow&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1428" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLEX_PARAM&apos; since the value of &apos;YYLEX_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLEX_PARAM&apos; since the value of &apos;YYLEX_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1502" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="197" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="384" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1257" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1294" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1354" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1355" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1356" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1359" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1370" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYLTYPE;YYLTYPE_IS_DECLARED&apos; since the value of &apos;YYLTYPE&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1452" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1316" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1317" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM;_MSC_VER;__C99__FUNC__;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM;_MSC_VER;__C99__FUNC__;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="200" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM;_MSC_VER;__C99__FUNC__;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM;_MSC_VER;__C99__FUNC__;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1313" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="200" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YYPARSE_PARAM;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YYPARSE_PARAM;__STDC__&apos; since the value of &apos;YYPARSE_PARAM&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="gram.c" line="1313" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="nullPointer" severity="warning" msg="Possible null pointer dereference: b" verbose="Possible null pointer dereference: b" cwe="476">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1736" column="2" info="Null pointer dereference"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1629" column="17" info="Calling function &apos;yy_init_buffer&apos;, 1st argument &apos;(yy_buffer_stack)?(yy_buffer_stack)[yy_buffer_stack_top]:NULL&apos; value is 0"/>
            <symbol>b</symbol>
        </error>
        <error id="nullPointer" severity="warning" msg="Possible null pointer dereference: b" verbose="Possible null pointer dereference: b" cwe="476">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1737" column="2" info="Null pointer dereference"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1629" column="17" info="Calling function &apos;yy_init_buffer&apos;, 1st argument &apos;(yy_buffer_stack)?(yy_buffer_stack)[yy_buffer_stack_top]:NULL&apos; value is 0"/>
            <symbol>b</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;num_to_read&apos; is less than zero." verbose="The unsigned expression &apos;num_to_read&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1432" column="23" info="Unsigned less than zero"/>
            <symbol>num_to_read</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;yy_try_NUL_trans&apos; argument 1 names different: declaration &apos;current_state&apos; definition &apos;yy_current_state&apos;." verbose="Function &apos;yy_try_NUL_trans&apos; argument 1 names different: declaration &apos;current_state&apos; definition &apos;yy_current_state&apos;." cwe="628" inconclusive="true">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1520" column="59"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="349" column="54"/>
            <symbol>yy_try_NUL_trans</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;yy_scan_string&apos; argument 1 names different: declaration &apos;yy_str&apos; definition &apos;yystr&apos;." verbose="Function &apos;yy_scan_string&apos; argument 1 names different: declaration &apos;yy_str&apos; definition &apos;yystr&apos;." cwe="628" inconclusive="true">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1921" column="48"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="302" column="47"/>
            <symbol>yy_scan_string</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;yy_scan_bytes&apos; argument 1 names different: declaration &apos;bytes&apos; definition &apos;yybytes&apos;." verbose="Function &apos;yy_scan_bytes&apos; argument 1 names different: declaration &apos;bytes&apos; definition &apos;yybytes&apos;." cwe="628" inconclusive="true">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1934" column="48"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="303" column="46"/>
            <symbol>yy_scan_bytes</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;yy_scan_bytes&apos; argument 2 names different: declaration &apos;len&apos; definition &apos;_yybytes_len&apos;." verbose="Function &apos;yy_scan_bytes&apos; argument 2 names different: declaration &apos;len&apos; definition &apos;_yybytes_len&apos;." cwe="628" inconclusive="true">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1934" column="68"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="303" column="62"/>
            <symbol>yy_scan_bytes</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;yyset_debug&apos; argument 1 names different: declaration &apos;debug_flag&apos; definition &apos;bdebug&apos;." verbose="Function &apos;yyset_debug&apos; argument 1 names different: declaration &apos;debug_flag&apos; definition &apos;bdebug&apos;." cwe="628" inconclusive="true">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="2066" column="24"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="762" column="23"/>
            <symbol>yyset_debug</symbol>
        </error>
        <error id="constArgument" severity="style" msg="Argument &apos;num_to_alloc*sizeof(struct yy_buffer_state*)&apos; to function yyalloc is always 8" verbose="Argument &apos;num_to_alloc*sizeof(struct yy_buffer_state*)&apos; to function yyalloc is always 8" cwe="570">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1847" column="23" info="Argument &apos;num_to_alloc*sizeof(struct yy_buffer_state*)&apos; to function yyalloc is always 8"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c" file="lex.c" line="1845" column="18" info="Assignment &apos;num_to_alloc=1&apos;, assigned value is 1"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;YY_USER_INIT&apos; since the value of &apos;YY_USER_INIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;YY_USER_INIT&apos; since the value of &apos;YY_USER_INIT&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="lex.c" line="929" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="0" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The expression &apos;lock_val == -1&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="152" column="16"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="103" column="19" info="&apos;lock_val&apos; is assigned value &apos;-1&apos; here."/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_RDLCK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_RDLCK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="141" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_SETLK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_SETLK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="85" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_SETLK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_SETLK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="146" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_WRLCK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;F_RDLCK;F_SETLK;F_WRLCK&apos; since the value of &apos;F_WRLCK&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c" line="143" column="0"/>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="funcArgNamesDifferent" severity="style" msg="Function &apos;parseopt_first&apos; argument 3 names different: declaration &apos;options&apos; definition &apos;opts&apos;." verbose="Function &apos;parseopt_first&apos; argument 3 names different: declaration &apos;options&apos; definition &apos;opts&apos;." cwe="628" inconclusive="true">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" line="193" column="56"/>
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmapp.h" line="50" column="60"/>
            <symbol>parseopt_first</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;PACKAGE_URL&apos; since the value of &apos;PACKAGE_URL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;PACKAGE_URL&apos; since the value of &apos;PACKAGE_URL&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c" line="378" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/progname.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/progname.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" line="94" column="7"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;new_name&apos; can be reduced." verbose="The scope of the variable &apos;new_name&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" line="354" column="9"/>
            <symbol>new_name</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;len&apos; can be reduced." verbose="The scope of the variable &apos;len&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" line="355" column="10"/>
            <symbol>len</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;fd&apos; can be reduced." verbose="The scope of the variable &apos;fd&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c" line="356" column="7"/>
            <symbol>fd</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/update.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/update.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;rc&apos; can be reduced." verbose="The scope of the variable &apos;rc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/update.c" line="65" column="7"/>
            <symbol>rc</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: c" verbose="Uninitialized variable: c" cwe="908">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c" line="88" column="8"/>
            <symbol>c</symbol>
        </error>
        <error id="toomanyconfigs" severity="information" msg="Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations." verbose="The checking of the file will be interrupted because there are too many #ifdef configurations. Checking of all #ifdef configurations can be forced by --force command line option or from GUI preferences. However that may increase the checking time." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="209" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;translation&apos; can be reduced." verbose="The scope of the variable &apos;translation&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file0="/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c" file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h" line="255" column="15"/>
            <symbol>translation</symbol>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;__DATE__;__STDC__;__TIME__&apos; since the value of &apos;__DATE__&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;__DATE__;__STDC__;__TIME__&apos; since the value of &apos;__DATE__&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c" line="29" column="0"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &apos;__DATE__;__STDC__;__TIME__&apos; since the value of &apos;__TIME__&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &apos;__DATE__;__STDC__;__TIME__&apos; since the value of &apos;__TIME__&apos; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly.">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c" line="29" column="0"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: rc" verbose="Unused variable: rc" cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/closerr.c" line="31" column="7"/>
            <symbol>rc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;flags&apos; is assigned a value that is never used." verbose="Variable &apos;flags&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/dtdel.c" line="30" column="13"/>
            <symbol>flags</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;flags&apos; is assigned a value that is never used." verbose="Variable &apos;flags&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/dtdel.c" line="47" column="8"/>
            <symbol>flags</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;flags&apos; is assigned a value that is never used." verbose="Variable &apos;flags&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/dtdel.c" line="49" column="8"/>
            <symbol>flags</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;flags&apos; is assigned a value that is never used." verbose="Variable &apos;flags&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/dtdel.c" line="51" column="8"/>
            <symbol>flags</symbol>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always false because &apos;else if&apos; condition matches previous condition at line 129." verbose="Expression is always false because &apos;else if&apos; condition matches previous condition at line 129." cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtload.c" line="139" column="15"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;verbose&apos; shadows outer variable" verbose="Local variable &apos;verbose&apos; shadows outer variable" cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtload.c" line="96" column="7" info="Shadow variable"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtload.c" line="28" column="5" info="Shadowed declaration"/>
            <symbol>verbose</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;size&apos; shadows outer variable" verbose="Local variable &apos;size&apos; shadows outer variable" cwe="398">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtopt.c" line="38" column="10" info="Shadow variable"/>
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtopt.c" line="85" column="8" info="Shadowed declaration"/>
            <symbol>size</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;_gdbm_read_bucket_at&apos; is never used." verbose="The function &apos;_gdbm_read_bucket_at&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c" line="170" column="0"/>
            <symbol>_gdbm_read_bucket_at</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;dbm_clearerr&apos; is never used." verbose="The function &apos;dbm_clearerr&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmerr.c" line="29" column="0"/>
            <symbol>dbm_clearerr</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;dbm_error&apos; is never used." verbose="The function &apos;dbm_error&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmerr.c" line="23" column="0"/>
            <symbol>dbm_error</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;dbm_rdonly&apos; is never used." verbose="The function &apos;dbm_rdonly&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmrdonly.c" line="28" column="0"/>
            <symbol>dbm_rdonly</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;ezalloc&apos; is never used." verbose="The function &apos;ezalloc&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c" line="57" column="0"/>
            <symbol>ezalloc</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gdbm_errno_location&apos; is never used." verbose="The function &apos;gdbm_errno_location&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c" line="29" column="0"/>
            <symbol>gdbm_errno_location</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gdbm_exists&apos; is never used." verbose="The function &apos;gdbm_exists&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexists.c" line="29" column="0"/>
            <symbol>gdbm_exists</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gdbm_export&apos; is never used." verbose="The function &apos;gdbm_export&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c" line="103" column="0"/>
            <symbol>gdbm_export</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;gdbm_import&apos; is never used." verbose="The function &apos;gdbm_import&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c" line="172" column="0"/>
            <symbol>gdbm_import</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;input_history_begin&apos; is never used." verbose="The function &apos;input_history_begin&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c" line="73" column="0"/>
            <symbol>input_history_begin</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;input_history_handler&apos; is never used." verbose="The function &apos;input_history_handler&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c" line="110" column="0"/>
            <symbol>input_history_handler</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;test_bool&apos; is never used." verbose="The function &apos;test_bool&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/tests/gtopt.c" line="161" column="0"/>
            <symbol>test_bool</symbol>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &apos;variable_is_set&apos; is never used." verbose="The function &apos;variable_is_set&apos; is never used." cwe="561">
            <location file="/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c" line="371" column="0"/>
            <symbol>variable_is_set</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
