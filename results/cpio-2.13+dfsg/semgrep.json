{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":51,"offset":1503},"extra":{"metavars":{"$FUN":{"start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":24,"offset":1476},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9a6e5f4441b63110ad1024d9c282b0d548445427fe9af5caad5af066bc2ca83bcea56b7458fc48d810c6c63568ad3edb8f934f4d9c567dfd2f6518e62c94cc29_0","lines":"      bytes_read = read (in_file_des, buf, BUFSIZ);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":51,"offset":1503},"extra":{"metavars":{"$TYPE":{"start":{"line":40,"col":3,"offset":1298},"end":{"line":40,"col":7,"offset":1302},"abstract_content":"char"},"$LEN":{"start":{"line":40,"col":12,"offset":1307},"end":{"line":40,"col":18,"offset":1313},"abstract_content":"BUFSIZ"},"$FUN":{"start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":24,"offset":1476},"abstract_content":"read"},"$ARG1":{"start":{"line":49,"col":26,"offset":1478},"end":{"line":49,"col":37,"offset":1489},"abstract_content":"in_file_des"},"$BUF":{"start":{"line":49,"col":39,"offset":1491},"end":{"line":49,"col":42,"offset":1494},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"00bc9ad61fdf127fab5addccc1d7434c152c1387b99c8d46311a5374fc1fb73ddf90a023e7add329de360ccdef29ccd899cc392d772bb777076cf2a4fea84662_0","lines":"      bytes_read = read (in_file_des, buf, BUFSIZ);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":84,"col":5,"offset":2435},"end":{"line":84,"col":33,"offset":2463},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":84,"col":5,"offset":2435},"end":{"line":84,"col":8,"offset":2438},"abstract_content":"pad"},"$SIGNED":{"start":{"line":84,"col":12,"offset":2442},"end":{"line":84,"col":13,"offset":2443},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4b8161f26b2345ad6b5043ff0323b5bb7dc7cf2bf92270160309a8c2a72459ff7d0ad4148ac72c88b0c73aaad384a00dda5a3973ef1b42fc77c6b46e782326e0_0","lines":"    pad = (4 - (offset % 4)) % 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":86,"col":5,"offset":2538},"end":{"line":86,"col":39,"offset":2572},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":5,"offset":2538},"end":{"line":86,"col":8,"offset":2541},"abstract_content":"pad"},"$SIGNED":{"start":{"line":86,"col":12,"offset":2545},"end":{"line":86,"col":15,"offset":2548},"abstract_content":"512"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bbda4887aec38ead24705741da1c06cfa979bf8d9f60f9a8f6d045b344fe4336ef65f756b64b27117f1f1d130f84bba4f38792617fd57f9fe950bf9a6aedf009_0","lines":"    pad = (512 - (offset % 512)) % 512;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":88,"col":5,"offset":2657},"end":{"line":88,"col":33,"offset":2685},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":88,"col":5,"offset":2657},"end":{"line":88,"col":8,"offset":2660},"abstract_content":"pad"},"$SIGNED":{"start":{"line":88,"col":12,"offset":2664},"end":{"line":88,"col":13,"offset":2665},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"847d1002ead11bcc24ee27f678c9ae490dd984a99cf05593de2e54dc9d5a418b0b3e47efea08d9b7f8ccad918a00751656695accc71daad2ba7e41bdba93eaba_0","lines":"    pad = (2 - (offset % 2)) % 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":90,"col":5,"offset":2698},"end":{"line":90,"col":12,"offset":2705},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":90,"col":5,"offset":2698},"end":{"line":90,"col":8,"offset":2701},"abstract_content":"pad"},"$SIGNED":{"start":{"line":90,"col":11,"offset":2704},"end":{"line":90,"col":12,"offset":2705},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"be6da01d3b601075d193939d8f2fbc932413ca6a3a394d81d57375d936e689e85bc8ce31b9211126b2fe978a367f93f3382c4ac297da5f55b1634905dd36f858_0","lines":"    pad = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":116,"col":10,"offset":3510},"end":{"line":116,"col":19,"offset":3519},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":116,"col":10,"offset":3510},"end":{"line":116,"col":15,"offset":3515},"abstract_content":"count"},"$SIGNED":{"start":{"line":116,"col":18,"offset":3518},"end":{"line":116,"col":19,"offset":3519},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"749706c13bd0e08a895721e6775c73a423781747e2673ace71ecefb0fd62ef02ec5b474cd9422c838b5dd11f5ff8d6adc5ef58c1e5173f19a8f5f84aa1998106_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":206,"col":17,"offset":5597},"end":{"line":207,"col":32,"offset":5650},"extra":{"metavars":{"$FUN":{"start":{"line":206,"col":17,"offset":5597},"end":{"line":206,"col":21,"offset":5601},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf2c85da44a8da78923b9033d9e254ddafce3ab656cbb2bdb894d9eaf10da4a30d1ae5724aa0ba3976f1849d6b3d31ba48379a2bb18af5ff4cc5bcfe415c223c_0","lines":"  in_file_des = open (header->c_name,\n\t\t      O_RDONLY | O_BINARY, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":303,"col":3,"offset":8333},"end":{"line":304,"col":63,"offset":8433},"extra":{"metavars":{"$EXPR1":{"start":{"line":303,"col":7,"offset":8337},"end":{"line":303,"col":18,"offset":8348},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":303,"col":21,"offset":8351},"end":{"line":303,"col":39,"offset":8369},"abstract_content":"CPIO_WARN_TRUNCATE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0961cdfb8381010aa817b9c5cd342dfa5ea80d487d338744141022b6838c962fe911c65e44f4b89810144ed23b501ab928b14db468f95dddacd6b42a349b6c39_0","lines":"  if (warn_option & CPIO_WARN_TRUNCATE)\n    error (0, 0, _(\"%s: truncating %s\"), filename, fieldname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":337,"col":7,"offset":9140},"end":{"line":337,"col":42,"offset":9175},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"c29e637ff3d0560e40f87be5185dd35fa7bae2ebf38850f36c9f5b32c6ad47c323299e8e1e8f42c8987c5c1dca16b686a6f7c893f6049b4d82eb1ed517ecb293_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":337,"col":7,"offset":9140},"end":{"line":337,"col":42,"offset":9175},"extra":{"metavars":{"$FUN":{"start":{"line":337,"col":7,"offset":9140},"end":{"line":337,"col":13,"offset":9146},"abstract_content":"stpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dcc73c80475c126f33737803d3b5bfcc9d095caa086d9c6a6ca7d3e2fce1aff7d7595a407c01f1c5699e62a5c9db83e7e14ebae4fdcab563329914ae178ef94c_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":337,"col":7,"offset":9140},"end":{"line":337,"col":42,"offset":9175},"extra":{"metavars":{"$TYPE":{"start":{"line":334,"col":3,"offset":9098},"end":{"line":334,"col":7,"offset":9102},"abstract_content":"char"},"$LEN":{"start":{"line":334,"col":21,"offset":9116},"end":{"line":334,"col":24,"offset":9119},"abstract_content":"110"},"$FUN":{"start":{"line":337,"col":7,"offset":9140},"end":{"line":337,"col":13,"offset":9146},"abstract_content":"stpcpy"},"$BUF":{"start":{"line":337,"col":15,"offset":9148},"end":{"line":337,"col":27,"offset":9160},"abstract_content":"ascii_header"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cb6d6a0b08a48940a790716ebd3f5b8cb50eba9a37ede5c41915c14d8a06608fbf315a0d980e4f2e611f09c4fa947236c7576824e34c426c66afab73658ca2c0_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":471,"col":3,"offset":13307},"end":{"line":472,"col":70,"offset":13448},"extra":{"metavars":{"$EXPR1":{"start":{"line":471,"col":8,"offset":13312},"end":{"line":471,"col":19,"offset":13323},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":471,"col":22,"offset":13326},"end":{"line":471,"col":40,"offset":13344},"abstract_content":"CPIO_WARN_TRUNCATE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0961cdfb8381010aa817b9c5cd342dfa5ea80d487d338744141022b6838c962fe911c65e44f4b89810144ed23b501ab928b14db468f95dddacd6b42a349b6c39_1","lines":"  if ((warn_option & CPIO_WARN_TRUNCATE) && (file_hdr->c_ino >> 16) != 0)\n    error (0, 0, _(\"%s: truncating inode number\"), file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":587,"col":13,"offset":16951},"end":{"line":587,"col":49,"offset":16987},"extra":{"metavars":{"$FUN":{"start":{"line":587,"col":13,"offset":16951},"end":{"line":587,"col":21,"offset":16959},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0c3668f297b614ef9343b0dd95cb5849a286cb2c084c1f08ab54c7d433168759289b78eb07dccd7247c8a0278eee3f8b296b8e6f53c490cdb1913fd2dd2e8ae0_0","lines":"  char *p = xrealloc (*pvar, strlen (value) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":588,"col":3,"offset":16991},"end":{"line":588,"col":20,"offset":17008},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"c29e637ff3d0560e40f87be5185dd35fa7bae2ebf38850f36c9f5b32c6ad47c323299e8e1e8f42c8987c5c1dca16b686a6f7c893f6049b4d82eb1ed517ecb293_1","lines":"  strcpy (p, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":588,"col":3,"offset":16991},"end":{"line":588,"col":20,"offset":17008},"extra":{"metavars":{"$FUN":{"start":{"line":588,"col":3,"offset":16991},"end":{"line":588,"col":9,"offset":16997},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"10aab861b120d2554560495270cd90c0030434d16bc7272c76c8441bd26dfdf82d860bad317da95b3523d28e5784b776ac442e0159efcd64109338d260703026_0","lines":"  strcpy (p, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":620,"col":11,"offset":17921},"end":{"line":620,"col":43,"offset":17953},"extra":{"metavars":{"$FUN":{"start":{"line":620,"col":11,"offset":17921},"end":{"line":620,"col":16,"offset":17926},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a37f310e66e21b34bce09856115702c2d8189e9e50a45cbd8ebe54fd8708152b6d2ee7b02c48577aba97d9378e98bc0cddb1adfb0c8a59593b42af34fc99e4c_0","lines":"      if (fstat (out_file_des, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":658,"col":8,"offset":18863},"end":{"line":668,"col":4,"offset":19178},"extra":{"metavars":{"$EXPR1":{"start":{"line":658,"col":12,"offset":18867},"end":{"line":658,"col":27,"offset":18882},"abstract_content":"file_hdr.c_mode"},"$EXPR2":{"start":{"line":658,"col":30,"offset":18885},"end":{"line":658,"col":38,"offset":18893},"abstract_content":"CP_IFDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fcd0ede4d846e27e8253eec87336a70bdd0cc58115d35c2ec2ec8208130730253256281ae4fd6519756df1a5b9d195c4f858f7d1fef829673a458522e05ba375_0","lines":"\t      if (file_hdr.c_mode & CP_IFDIR)\n\t\t{\n\t\t  int len = strlen (input_name.ds_string);\n\t\t  /* Make sure the name ends with a slash */\n\t\t  if (input_name.ds_string[len-1] != '/')\n\t\t    {\n\t\t      ds_resize (&input_name, len + 2);\n\t\t      input_name.ds_string[len] = '/';\n\t\t      input_name.ds_string[len+1] = 0;\n\t\t    }\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":683,"col":5,"offset":19600},"end":{"line":691,"col":8,"offset":19856},"extra":{"metavars":{"$EXPR1":{"start":{"line":683,"col":10,"offset":19605},"end":{"line":683,"col":19,"offset":19614},"abstract_content":"otherfile","propagated_value":{"svalue_start":{"line":683,"col":22,"offset":19617},"svalue_end":{"line":685,"col":30,"offset":19709},"svalue_abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"$EXPR2":{"start":{"line":683,"col":22,"offset":19617},"end":{"line":685,"col":30,"offset":19709},"abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"979fbb99533103425523b65d67ed43948cecd91372cb31158dff68d66e5904b1bb29b184d4a30dfeb9134aa68ab35cafa4d342c07c3506a6c131a8e13f5d11eb_0","lines":"\t\t  if ((otherfile = find_inode_file (file_hdr.c_ino,\n\t\t\t\t\t\t    file_hdr.c_dev_maj,\n\t\t\t\t\t\t    file_hdr.c_dev_min)))\n\t\t    {\n\t\t      file_hdr.c_tar_linkname = otherfile;\n\t\t      if (write_out_header (&file_hdr, out_file_des))\n\t\t\tcontinue;\n\t\t      break;\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":696,"col":9,"offset":19984},"end":{"line":696,"col":30,"offset":20005},"extra":{"metavars":{"$FUN":{"start":{"line":696,"col":9,"offset":19984},"end":{"line":696,"col":18,"offset":19993},"abstract_content":"last_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff39c9d04ba58cd9df7cd2a0c7f80942e9720626d5fce833385d0d907b0a98daa9150f132d3eeee8301ee0261f3bfcd465afe99bfbcb882f03a1e7b7c7d2cb1c_0","lines":"\t\t  if (last_link (&file_hdr) )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":706,"col":22,"offset":20182},"end":{"line":707,"col":30,"offset":20233},"extra":{"metavars":{"$FUN":{"start":{"line":706,"col":22,"offset":20182},"end":{"line":706,"col":26,"offset":20186},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf2c85da44a8da78923b9033d9e254ddafce3ab656cbb2bdb894d9eaf10da4a30d1ae5724aa0ba3976f1849d6b3d31ba48379a2bb18af5ff4cc5bcfe415c223c_1","lines":"\t      in_file_des = open (orig_file_name,\n\t\t\t\t  O_RDONLY | O_BINARY, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":764,"col":5,"offset":21733},"end":{"line":776,"col":8,"offset":22199},"extra":{"metavars":{"$EXPR1":{"start":{"line":764,"col":10,"offset":21738},"end":{"line":764,"col":19,"offset":21747},"abstract_content":"otherfile","propagated_value":{"svalue_start":{"line":764,"col":22,"offset":21750},"svalue_end":{"line":766,"col":30,"offset":21842},"svalue_abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"$EXPR2":{"start":{"line":764,"col":22,"offset":21750},"end":{"line":766,"col":30,"offset":21842},"abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"979fbb99533103425523b65d67ed43948cecd91372cb31158dff68d66e5904b1bb29b184d4a30dfeb9134aa68ab35cafa4d342c07c3506a6c131a8e13f5d11eb_1","lines":"\t\t  if ((otherfile = find_inode_file (file_hdr.c_ino,\n\t\t\t\t\t\t    file_hdr.c_dev_maj,\n\t\t\t\t\t\t    file_hdr.c_dev_min)))\n\t\t    {\n\t\t      /* This file is linked to another file already in the \n\t\t         archive, so write it out as a hard link. */\n\t\t      file_hdr.c_mode = (file_stat.st_mode & 07777);\n\t\t      file_hdr.c_mode |= CP_IFREG;\n\t\t      file_hdr.c_tar_linkname = otherfile;\n\t\t      if (write_out_header (&file_hdr, out_file_des))\n\t\t\tcontinue;\n\t\t      break;\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":788,"col":30,"offset":22489},"end":{"line":788,"col":61,"offset":22520},"extra":{"metavars":{"$FUN":{"start":{"line":788,"col":30,"offset":22489},"end":{"line":788,"col":37,"offset":22496},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2233cceb93a92a64647f449a8fc500291707ed41b770d355838843cf6fbd523d84bf7d14b274aed35c4161704c088cbe9cad1324d8b3a2ddd11bbc63e6c52c77_0","lines":"\t\tchar *link_name = (char *) xmalloc (file_stat.st_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":791,"col":15,"offset":22554},"end":{"line":792,"col":36,"offset":22626},"extra":{"metavars":{"$FUN":{"start":{"line":791,"col":15,"offset":22554},"end":{"line":791,"col":23,"offset":22562},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3d13f654ec9408e38ecd9d44202acfe38a5f086548c4b7f76a0e074bdc9cd417871c76e75e5863e0655046132885dc88d0accf9854befd4b01b1c0976034c0b2_0","lines":"\t\tlink_size = readlink (orig_file_name, link_name,\n\t\t\t              file_stat.st_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":796,"col":7,"offset":22699},"end":{"line":796,"col":24,"offset":22716},"extra":{"metavars":{"$PTR":{"start":{"line":796,"col":13,"offset":22705},"end":{"line":796,"col":22,"offset":22714},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":788,"col":21,"offset":22480},"svalue_end":{"line":788,"col":61,"offset":22520},"svalue_abstract_content":"(char*xmalloc(file_stat.st_size+1)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb834c6128bb20aeb82fb4ea83153841abd6cb42c7ae4caf9c3e2e96b4418644745293cd1102ed9a4f6f1e5befe2ce6234a34897d908abd4acf7b4df3ad7b155_0","lines":"\t\t    free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":826,"col":3,"offset":23491},"end":{"line":826,"col":20,"offset":23508},"extra":{"metavars":{"$PTR":{"start":{"line":826,"col":9,"offset":23497},"end":{"line":826,"col":18,"offset":23506},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb834c6128bb20aeb82fb4ea83153841abd6cb42c7ae4caf9c3e2e96b4418644745293cd1102ed9a4f6f1e5befe2ce6234a34897d908abd4acf7b4df3ad7b155_1","lines":"\t\tfree (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":842,"col":3,"offset":23753},"end":{"line":842,"col":25,"offset":23775},"extra":{"metavars":{"$PTR":{"start":{"line":842,"col":9,"offset":23759},"end":{"line":842,"col":23,"offset":23773},"abstract_content":"orig_file_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3e0090d955875c241a1e17a4d5ca85ca30a1938b5226dbeaa5ff560f469308ec3ec61764381cc153dbe8d8eeb87778776a113a8d7074e2d48a518e15f0bb921d_0","lines":"  free (orig_file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":872,"col":14,"offset":24642},"end":{"line":872,"col":73,"offset":24701},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":872,"col":14,"offset":24642},"end":{"line":872,"col":20,"offset":24648},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":872,"col":55,"offset":24683},"end":{"line":872,"col":56,"offset":24684},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5cf265ab6bb0a7fb290a12e13348d2cdbfbf5dde6caa16bf115b1ac38afddfd0adeb5b8e4f1725066363cdf005022ed1b3c5aab0de2664aecd1bd0f3fbbb2626_0","lines":"      size_t blocks = (output_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":873,"col":7,"offset":24709},"end":{"line":875,"col":53,"offset":24827},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"50dc330ccd20dc62c93820dea6071bdc6a9de277e38413bd016d43ba349fbc024fb1908f2f15a8318c04d8df15f4b9f24120bf20ae695f0e5426eab241b392fa_0","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks), (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":211,"col":17,"offset":4793},"end":{"line":211,"col":28,"offset":4804},"extra":{"metavars":{"$NARROW":{"start":{"line":211,"col":17,"offset":4793},"end":{"line":211,"col":22,"offset":4798},"abstract_content":"count"},"$LARGE":{"start":{"line":211,"col":25,"offset":4801},"end":{"line":211,"col":28,"offset":4804},"abstract_content":"val"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9d8729ccc6a6a4db823ec7396a76c75c543fad7fd8cbced3382dfaa5ae9af98282d5e5678e41c82fd3dac744771083b91e40c4e49b66bc4277129cbf735c3e5a_0","lines":"\t    if (*p || (count = val) != count)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":226,"col":14,"offset":5052},"end":{"line":226,"col":29,"offset":5067},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":226,"col":14,"offset":5052},"end":{"line":226,"col":20,"offset":5058},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1d767330c6d3493b0b6ff0f64053168f94d721e2bd6ce3768479c9f7cdc8759fa9d512c4fab5286c31f5c71dab7bdca1eb7bd3e2e55dd6f9a16238fe48e12ffd_0","lines":"\t  tapedev = getenv (\"TAPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":227,"col":4,"offset":5072},"end":{"line":227,"col":24,"offset":5092},"extra":{"metavars":{"$COND":{"start":{"line":227,"col":8,"offset":5076},"end":{"line":227,"col":23,"offset":5091},"abstract_content":"tapedev==NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ac0fd52128c0afbf44ed8625760c8f4fbeaea18dd461dfa37528abf79313ca2262ddd2bcca47d1ea400eb6df9ccd775d010c5e3bcbbe60a694cb00b4db4f88c7_0","lines":"\t  if (tapedev == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":268,"col":7,"offset":5671},"end":{"line":268,"col":27,"offset":5691},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":7,"offset":5671},"end":{"line":268,"col":12,"offset":5676},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd60f9fdfd19f6b602a020f4439b5d983a4f4c2556d494963979e203dab846fe5c0893d35ae294f75f52e4aef526d980b09d35c6730c77189ca24cf49ddfde7c_0","lines":"  if (fstat (desc, &stats) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":319,"col":3,"offset":7040},"end":{"line":319,"col":25,"offset":7062},"extra":{"metavars":{"$FUN":{"start":{"line":319,"col":3,"offset":7040},"end":{"line":319,"col":12,"offset":7049},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"751243df4548211d1a23bf91886d09e0d46dac2ce558081bf3087d7c475f0bec747775450bdda3f3a78bec8ecf9f8b49a954d443387d19658ce2d03f82b8e216_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":323,"col":21,"offset":7150},"end":{"line":323,"col":25,"offset":7154},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f979730407d35bf12c84136ae68da00fd5d6740eb69841c044f3b6921cc4853cf42474ec3eb0e3cbf692eb1bfab61909193228514424a035c10397cfec571de9_0","lines":"  set_program_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":327,"col":32,"offset":7306},"end":{"line":327,"col":36,"offset":7310},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f979730407d35bf12c84136ae68da00fd5d6740eb69841c044f3b6921cc4853cf42474ec3eb0e3cbf692eb1bfab61909193228514424a035c10397cfec571de9_1","lines":"  if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, NULL, NULL))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":336,"col":18,"offset":7468},"end":{"line":336,"col":68,"offset":7518},"extra":{"metavars":{"$FUN":{"start":{"line":336,"col":18,"offset":7468},"end":{"line":336,"col":25,"offset":7475},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c961bcfcf5377b26790b7764619da3133534d57be42c70d9d1d12fbedb446f91743adcaf5125513ab1a001d12e3e51ef24968ca70fe766c61583a9060a67592_0","lines":"      tapedesc = rmtopen (tapedev, O_WRONLY, 0, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":340,"col":18,"offset":7564},"end":{"line":340,"col":68,"offset":7614},"extra":{"metavars":{"$FUN":{"start":{"line":340,"col":18,"offset":7564},"end":{"line":340,"col":25,"offset":7571},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c961bcfcf5377b26790b7764619da3133534d57be42c70d9d1d12fbedb446f91743adcaf5125513ab1a001d12e3e51ef24968ca70fe766c61583a9060a67592_1","lines":"      tapedesc = rmtopen (tapedev, O_RDONLY, 0, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":125,"col":38,"offset":4184},"end":{"line":125,"col":63,"offset":4209},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"fb0e3d2b0fa728cd9aac1d215644a85784870b3a97591d33037854ed12faab738b5ab37f149b68e1122719518a973d915534967393f0bcdc1742e09986e6c298_0","lines":"  RETSIGTYPE (*pipe_handler) (int) = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":127,"col":3,"offset":4283},"end":{"line":127,"col":33,"offset":4313},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"fb0e3d2b0fa728cd9aac1d215644a85784870b3a97591d33037854ed12faab738b5ab37f149b68e1122719518a973d915534967393f0bcdc1742e09986e6c298_1","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":150,"col":11,"offset":4727},"end":{"line":150,"col":52,"offset":4768},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":11,"offset":4727},"end":{"line":150,"col":20,"offset":4736},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"265fc247ff27f6d5df3d9918fc4de5503b810e15cf16305d95a6a19ad2bd7188977948ae1196fefbdce656325055026343faa5e9e759fb50f82a945103ce1097_0","lines":"      if (safe_read (READ_SIDE (handle), cursor, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":184,"col":9,"offset":5377},"end":{"line":184,"col":54,"offset":5422},"extra":{"metavars":{"$FUN":{"start":{"line":184,"col":9,"offset":5377},"end":{"line":184,"col":18,"offset":5386},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"265fc247ff27f6d5df3d9918fc4de5503b810e15cf16305d95a6a19ad2bd7188977948ae1196fefbdce656325055026343faa5e9e759fb50f82a945103ce1097_1","lines":"\twhile (safe_read (READ_SIDE (handle), &character, 1) == 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":189,"col":15,"offset":5490},"end":{"line":189,"col":32,"offset":5507},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"46988369e5763a09844bb1a0e1347fe119b497a39db5eb3efd3866c30c28f5e0b7a540a335a680b61c781e515256c49fc9e3010f0e7e588e5b8765aa780332d5_0","lines":"      errno = atoi (cursor + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":219,"col":25,"offset":6099},"end":{"line":219,"col":38,"offset":6112},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"46988369e5763a09844bb1a0e1347fe119b497a39db5eb3efd3866c30c28f5e0b7a540a335a680b61c781e515256c49fc9e3010f0e7e588e5b8765aa780332d5_1","lines":"      long int result = atol (status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":247,"col":7,"offset":6654},"end":{"line":247,"col":33,"offset":6680},"extra":{"metavars":{"$EXPR1":{"start":{"line":247,"col":18,"offset":6665},"end":{"line":247,"col":25,"offset":6672},"abstract_content":"*status"},"$EXPR2":{"start":{"line":247,"col":29,"offset":6676},"end":{"line":247,"col":32,"offset":6679},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4b3bd985ca47e2dac3cacd7936c364ba0a9e41b3c2c896dc49727a60e9c5c265c33159b8be8e4b400c1077025d1cf8ace9bd107c8079eb8df63d1ed100d8551_0","lines":"      negative = *status == '-';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":248,"col":7,"offset":6687},"end":{"line":248,"col":44,"offset":6724},"extra":{"metavars":{"$EXPR1":{"start":{"line":248,"col":29,"offset":6709},"end":{"line":248,"col":36,"offset":6716},"abstract_content":"*status"},"$EXPR2":{"start":{"line":248,"col":40,"offset":6720},"end":{"line":248,"col":43,"offset":6723},"abstract_content":"'+'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4ca4aae0032e7b7206c212b09db7add12956796cc66537ce58a806b7b16a05c304d83aa8da266f7aedfa5c2a5578706f3866f2b1216f261c8e7646bf681d7b2_0","lines":"      status += negative || *status == '+';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":294,"col":9,"offset":8076},"end":{"line":294,"col":41,"offset":8108},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":9,"offset":8076},"end":{"line":294,"col":16,"offset":8083},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d5784937bc46401575c3f2473fc5d1aaa4ef5960956514a4a8fad1b1f3d6115751906bf64de5a36f111bf5a9f95d27199a139648e72f32e53c4a2a43e4a7756_0","lines":"  if (! freopen (\"/dev/tty\", \"r\", stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":295,"col":5,"offset":8114},"end":{"line":295,"col":38,"offset":8147},"extra":{"metavars":{"$FUN":{"start":{"line":295,"col":5,"offset":8114},"end":{"line":295,"col":12,"offset":8121},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d5784937bc46401575c3f2473fc5d1aaa4ef5960956514a4a8fad1b1f3d6115751906bf64de5a36f111bf5a9f95d27199a139648e72f32e53c4a2a43e4a7756_1","lines":"    freopen (\"/dev/null\", \"r\", stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":296,"col":9,"offset":8157},"end":{"line":296,"col":42,"offset":8190},"extra":{"metavars":{"$FUN":{"start":{"line":296,"col":9,"offset":8157},"end":{"line":296,"col":16,"offset":8164},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d5784937bc46401575c3f2473fc5d1aaa4ef5960956514a4a8fad1b1f3d6115751906bf64de5a36f111bf5a9f95d27199a139648e72f32e53c4a2a43e4a7756_2","lines":"  if (! freopen (\"/dev/tty\", \"w\", stdout))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":297,"col":5,"offset":8196},"end":{"line":297,"col":39,"offset":8230},"extra":{"metavars":{"$FUN":{"start":{"line":297,"col":5,"offset":8196},"end":{"line":297,"col":12,"offset":8203},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d5784937bc46401575c3f2473fc5d1aaa4ef5960956514a4a8fad1b1f3d6115751906bf64de5a36f111bf5a9f95d27199a139648e72f32e53c4a2a43e4a7756_3","lines":"    freopen (\"/dev/null\", \"w\", stdout);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":299,"col":3,"offset":8235},"end":{"line":300,"col":73,"offset":8366},"extra":{"metavars":{"$EXPR1":{"start":{"line":299,"col":7,"offset":8239},"end":{"line":299,"col":16,"offset":8248},"abstract_content":"rexecserv"},"$EXPR2":{"start":{"line":299,"col":19,"offset":8251},"end":{"line":299,"col":48,"offset":8280},"abstract_content":"getservbyname(\"exec\"\"tcp\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"60c0b5a9a7fdfda2787a53f93a00ac945e741c0a96ab6c754e1be4456ee6a0951a2ccad7fa72ef5c354aa516014b224f0a240865b11a85873e387b20c03ca831_0","lines":"  if (rexecserv = getservbyname (\"exec\", \"tcp\"), !rexecserv)\n    error (EXIT_ON_EXEC_ERROR, 0, _(\"exec/tcp: Service not available\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":302,"col":12,"offset":8379},"end":{"line":302,"col":69,"offset":8436},"extra":{"metavars":{"$FUN":{"start":{"line":302,"col":12,"offset":8379},"end":{"line":302,"col":17,"offset":8384},"abstract_content":"rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ba450e9a9690bbab2277bae17bf436881e48c0130390ea89cd370afc3356747efcdf2593bb4df4163c2b540d8d01e7790fec5e873b98ecbe5b4f3b93b75654ba_0","lines":"  result = rexec (&host, rexecserv->s_port, user, 0, rmt_command, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":305,"col":3,"offset":8503},"end":{"line":305,"col":28,"offset":8528},"extra":{"metavars":{"$FUN":{"start":{"line":305,"col":3,"offset":8503},"end":{"line":305,"col":9,"offset":8509},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2afdae2018353dfca5160ad9b926dc8787bff3fb4f44284f295df57c3d9ab3868b741fa7aafdca28506eb316dc4b82f6272090de9932c4077d2793009dbc9ef3_0","lines":"  fdopen (saved_stdin, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":308,"col":3,"offset":8597},"end":{"line":308,"col":29,"offset":8623},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":3,"offset":8597},"end":{"line":308,"col":9,"offset":8603},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2afdae2018353dfca5160ad9b926dc8787bff3fb4f44284f295df57c3d9ab3868b741fa7aafdca28506eb316dc4b82f6272090de9932c4077d2793009dbc9ef3_1","lines":"  fdopen (saved_stdout, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":322,"col":3,"offset":8946},"end":{"line":322,"col":30,"offset":8973},"extra":{"metavars":{"$FUN":{"start":{"line":322,"col":3,"offset":8946},"end":{"line":322,"col":10,"offset":8953},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_0","lines":"  sprintf (buf, \"%d \", oflag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":326,"col":20,"offset":9030},"end":{"line":326,"col":44,"offset":9054},"extra":{"metavars":{"$FUN":{"start":{"line":326,"col":20,"offset":9030},"end":{"line":326,"col":26,"offset":9036},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_0","lines":"    case O_RDONLY: strcat (buf, \"O_RDONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":327,"col":18,"offset":9080},"end":{"line":327,"col":40,"offset":9102},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":18,"offset":9080},"end":{"line":327,"col":24,"offset":9086},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_1","lines":"    case O_RDWR: strcat (buf, \"O_RDWR\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":328,"col":20,"offset":9130},"end":{"line":328,"col":44,"offset":9154},"extra":{"metavars":{"$FUN":{"start":{"line":328,"col":20,"offset":9130},"end":{"line":328,"col":26,"offset":9136},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_2","lines":"    case O_WRONLY: strcat (buf, \"O_WRONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":333,"col":3,"offset":9211},"end":{"line":333,"col":51,"offset":9259},"extra":{"metavars":{"$EXPR1":{"start":{"line":333,"col":7,"offset":9215},"end":{"line":333,"col":12,"offset":9220},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":333,"col":15,"offset":9223},"end":{"line":333,"col":23,"offset":9231},"abstract_content":"O_APPEND"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1397e143efcf7606b8cddd7e32199d469235617ed57dd1885fe1f4ca1c8df9f87c86500b85b47778054cd45c7d21d58b9addf6319ab4b5c242860cd52d59d31_0","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":333,"col":25,"offset":9233},"end":{"line":333,"col":50,"offset":9258},"extra":{"metavars":{"$FUN":{"start":{"line":333,"col":25,"offset":9233},"end":{"line":333,"col":31,"offset":9239},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_3","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":335,"col":3,"offset":9269},"end":{"line":335,"col":49,"offset":9315},"extra":{"metavars":{"$EXPR1":{"start":{"line":335,"col":7,"offset":9273},"end":{"line":335,"col":12,"offset":9278},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":335,"col":15,"offset":9281},"end":{"line":335,"col":22,"offset":9288},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fdc91862f515c88984d65aa43ddac8fae48a633fe6692f81859d383276549de5e43e38df7023a1cfac790a116d7d8bde2dcd88d5219c13e4ca09be7a00802583_0","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":335,"col":24,"offset":9290},"end":{"line":335,"col":48,"offset":9314},"extra":{"metavars":{"$FUN":{"start":{"line":335,"col":24,"offset":9290},"end":{"line":335,"col":30,"offset":9296},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_4","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":337,"col":3,"offset":9333},"end":{"line":337,"col":49,"offset":9379},"extra":{"metavars":{"$EXPR1":{"start":{"line":337,"col":7,"offset":9337},"end":{"line":337,"col":12,"offset":9342},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":337,"col":15,"offset":9345},"end":{"line":337,"col":22,"offset":9352},"abstract_content":"O_DSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d6ddf0d045b2495fd738f82531d83b08e19de99e7ccbb5936ed84276b751546ca8934335a4204efaab201550902ab97cd7acba41f7d61946dded647eb5dc74e7_0","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":337,"col":24,"offset":9354},"end":{"line":337,"col":48,"offset":9378},"extra":{"metavars":{"$FUN":{"start":{"line":337,"col":24,"offset":9354},"end":{"line":337,"col":30,"offset":9360},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_5","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":339,"col":3,"offset":9389},"end":{"line":339,"col":47,"offset":9433},"extra":{"metavars":{"$EXPR1":{"start":{"line":339,"col":7,"offset":9393},"end":{"line":339,"col":12,"offset":9398},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":339,"col":15,"offset":9401},"end":{"line":339,"col":21,"offset":9407},"abstract_content":"O_EXCL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7692ae8f57da48ea9d0affac2e4d07804a00a643f69f4e75ab60f10965c1a4157023638931c3d82268a201e7905a8e6b2a68942cb8f3c355f4961ecd72fb87d4_0","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":339,"col":23,"offset":9409},"end":{"line":339,"col":46,"offset":9432},"extra":{"metavars":{"$FUN":{"start":{"line":339,"col":23,"offset":9409},"end":{"line":339,"col":29,"offset":9415},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_6","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":341,"col":3,"offset":9455},"end":{"line":341,"col":57,"offset":9509},"extra":{"metavars":{"$EXPR1":{"start":{"line":341,"col":7,"offset":9459},"end":{"line":341,"col":12,"offset":9464},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":341,"col":15,"offset":9467},"end":{"line":341,"col":26,"offset":9478},"abstract_content":"O_LARGEFILE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"24bcd703f304b7638b1cb3903e784fbd27a921f8226b926d644e044d4f01c6fd11b963c136adb3bb4f2b46190170c81a5f28bb46b3fa805a6e61cb0c13656748_0","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":341,"col":28,"offset":9480},"end":{"line":341,"col":56,"offset":9508},"extra":{"metavars":{"$FUN":{"start":{"line":341,"col":28,"offset":9480},"end":{"line":341,"col":34,"offset":9486},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_7","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":344,"col":3,"offset":9535},"end":{"line":344,"col":51,"offset":9583},"extra":{"metavars":{"$EXPR1":{"start":{"line":344,"col":7,"offset":9539},"end":{"line":344,"col":12,"offset":9544},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":344,"col":15,"offset":9547},"end":{"line":344,"col":23,"offset":9555},"abstract_content":"O_NOCTTY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c1addb20ff79d6b7e3bf95502154618797d431f48c5eff959a23de770f600456696b07927d2d71b93eb4b14dbda927d4fda0dd4ea7cf29f9ebab84e8ceeb26c_0","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":344,"col":25,"offset":9557},"end":{"line":344,"col":50,"offset":9582},"extra":{"metavars":{"$FUN":{"start":{"line":344,"col":25,"offset":9557},"end":{"line":344,"col":31,"offset":9563},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_8","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":346,"col":3,"offset":9593},"end":{"line":346,"col":55,"offset":9645},"extra":{"metavars":{"$EXPR1":{"start":{"line":346,"col":7,"offset":9597},"end":{"line":346,"col":12,"offset":9602},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":346,"col":15,"offset":9605},"end":{"line":346,"col":25,"offset":9615},"abstract_content":"O_NONBLOCK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2a01a5e0e5d074af973e906976f5247d885d61b18da6746c36006173e5561046de0e61f179bf530e11eb0d8f58e54748e097ab6c72c526348aabe3594555b38d_0","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":346,"col":27,"offset":9617},"end":{"line":346,"col":54,"offset":9644},"extra":{"metavars":{"$FUN":{"start":{"line":346,"col":27,"offset":9617},"end":{"line":346,"col":33,"offset":9623},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_9","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":348,"col":3,"offset":9663},"end":{"line":348,"col":49,"offset":9709},"extra":{"metavars":{"$EXPR1":{"start":{"line":348,"col":7,"offset":9667},"end":{"line":348,"col":12,"offset":9672},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":348,"col":15,"offset":9675},"end":{"line":348,"col":22,"offset":9682},"abstract_content":"O_RSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"262bf7b70c59b7704401df443c42e2dbb6680d8f85740476c43571a8b9f1cd317bb8beca1d71d342c5df56e34ab619aa3eda2269dcb0e09ea85c1e72dcbef878_0","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":348,"col":24,"offset":9684},"end":{"line":348,"col":48,"offset":9708},"extra":{"metavars":{"$FUN":{"start":{"line":348,"col":24,"offset":9684},"end":{"line":348,"col":30,"offset":9690},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_10","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":351,"col":3,"offset":9733},"end":{"line":351,"col":47,"offset":9777},"extra":{"metavars":{"$EXPR1":{"start":{"line":351,"col":7,"offset":9737},"end":{"line":351,"col":12,"offset":9742},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":351,"col":15,"offset":9745},"end":{"line":351,"col":21,"offset":9751},"abstract_content":"O_SYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"246439119f5f2c02074945871b2ee8b997733ea3268aae8f0d05d50718cb5642064268311fa98aec9ed3ac0deb8c41053b21b2774f12890c4dd94fac859fab6c_0","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":351,"col":23,"offset":9753},"end":{"line":351,"col":46,"offset":9776},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":23,"offset":9753},"end":{"line":351,"col":29,"offset":9759},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_11","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":353,"col":3,"offset":9787},"end":{"line":353,"col":49,"offset":9833},"extra":{"metavars":{"$EXPR1":{"start":{"line":353,"col":7,"offset":9791},"end":{"line":353,"col":12,"offset":9796},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":353,"col":15,"offset":9799},"end":{"line":353,"col":22,"offset":9806},"abstract_content":"O_TRUNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"66ff02bc5ebc034ef01cfce474a39a8284c907a08e2a40f86ebed4d51aa882ee1a6e884294aa3a1f2af1944342e1ad4f2103958b2053e2abb29687bdc6adba29_0","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":353,"col":24,"offset":9808},"end":{"line":353,"col":48,"offset":9832},"extra":{"metavars":{"$FUN":{"start":{"line":353,"col":24,"offset":9808},"end":{"line":353,"col":30,"offset":9814},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_12","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":405,"col":4,"offset":11279},"end":{"line":405,"col":26,"offset":11301},"extra":{"metavars":{"$PTR":{"start":{"line":405,"col":10,"offset":11285},"end":{"line":405,"col":24,"offset":11299},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_0","lines":"\t  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":440,"col":36,"offset":11969},"end":{"line":440,"col":73,"offset":12006},"extra":{"metavars":{"$FUN":{"start":{"line":440,"col":36,"offset":11969},"end":{"line":440,"col":46,"offset":11979},"abstract_content":"_rmt_rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9853ccd396b082e1cf62f04cfacc94509d6cf346c7ea9fda7992eb7bbf868586ca10d9a68ce48a1f20cfcbe7fe3f0e841cce46667aa3a327195c86d74afc843f_0","lines":"  READ_SIDE (remote_pipe_number) = _rmt_rexec (remote_host, remote_user);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":444,"col":7,"offset":12083},"end":{"line":444,"col":29,"offset":12105},"extra":{"metavars":{"$PTR":{"start":{"line":444,"col":13,"offset":12089},"end":{"line":444,"col":27,"offset":12103},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_1","lines":"      free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":463,"col":2,"offset":12449},"end":{"line":463,"col":24,"offset":12471},"extra":{"metavars":{"$PTR":{"start":{"line":463,"col":8,"offset":12455},"end":{"line":463,"col":22,"offset":12469},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_2","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":472,"col":9,"offset":12643},"end":{"line":472,"col":45,"offset":12679},"extra":{"metavars":{"$FUN":{"start":{"line":472,"col":9,"offset":12643},"end":{"line":472,"col":13,"offset":12647},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e75a9157fc4b8925bf23c2f1871f7bdd2beddd0a936112beaf8a1692dcab7d43122373189d3fa219570975c8cb2fb4b6d9fb239a6cd3daf786c0bb72b97a7ed_0","lines":"    if (pipe (to_remote[remote_pipe_number]) == -1","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":473,"col":5,"offset":12690},"end":{"line":473,"col":43,"offset":12728},"extra":{"metavars":{"$FUN":{"start":{"line":473,"col":5,"offset":12690},"end":{"line":473,"col":9,"offset":12694},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e75a9157fc4b8925bf23c2f1871f7bdd2beddd0a936112beaf8a1692dcab7d43122373189d3fa219570975c8cb2fb4b6d9fb239a6cd3daf786c0bb72b97a7ed_1","lines":"\t|| pipe (from_remote[remote_pipe_number]) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":476,"col":2,"offset":12761},"end":{"line":476,"col":24,"offset":12783},"extra":{"metavars":{"$PTR":{"start":{"line":476,"col":8,"offset":12767},"end":{"line":476,"col":22,"offset":12781},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_3","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":481,"col":14,"offset":12830},"end":{"line":481,"col":21,"offset":12837},"extra":{"metavars":{"$FUN":{"start":{"line":481,"col":14,"offset":12830},"end":{"line":481,"col":18,"offset":12834},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7cb4299317252ff0d56e23b67a4113703c6f35fb82ab8d7d4e7a63e0262da84ff3e999b3cd0a53b7c4b505681ea5e3942f1af231c0907315fc6c307799386efe_0","lines":"    status = fork ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":485,"col":2,"offset":12886},"end":{"line":485,"col":24,"offset":12908},"extra":{"metavars":{"$PTR":{"start":{"line":485,"col":8,"offset":12892},"end":{"line":485,"col":22,"offset":12906},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_4","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":505,"col":2,"offset":13576},"end":{"line":505,"col":22,"offset":13596},"extra":{"metavars":{"$1":{"start":{"line":1,"col":15,"offset":14},"end":{"line":1,"col":16,"offset":15},"abstract_content":"g"},"$FUN":{"start":{"line":505,"col":2,"offset":13576},"end":{"line":505,"col":19,"offset":13593},"abstract_content":"sys_reset_uid_gid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d7c9ed30ae88ac6ffb95e0f32606338e50474ae99a333ede4430ac4c25f6353d6ab133ab7126df3ad2bdf9da6ce2a04662d68fcf56a17208bcb589395b07cd95_0","lines":"\tsys_reset_uid_gid ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":508,"col":4,"offset":13620},"end":{"line":509,"col":47,"offset":13723},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":508,"col":4,"offset":13620},"end":{"line":508,"col":9,"offset":13625},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a34ba1580de1519550057c3843cce0a29a23fa4761c36e5b18010542cd35b513788acb1bc4a876a7d0c00f85e9a2c5d5043a61a7dd29130ede3ad1dcbea5f371_0","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t \"-l\", remote_user, rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":511,"col":4,"offset":13734},"end":{"line":512,"col":28,"offset":13818},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":511,"col":4,"offset":13734},"end":{"line":511,"col":9,"offset":13739},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a34ba1580de1519550057c3843cce0a29a23fa4761c36e5b18010542cd35b513788acb1bc4a876a7d0c00f85e9a2c5d5043a61a7dd29130ede3ad1dcbea5f371_1","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":531,"col":28,"offset":14287},"end":{"line":531,"col":60,"offset":14319},"extra":{"metavars":{"$FUN":{"start":{"line":531,"col":28,"offset":14287},"end":{"line":531,"col":35,"offset":14294},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6a27f2cafd9f1178e4bf4d2de828f0561a94f9bb2f74426c02e3d65867ff9c32e759fe23c6fc88df6abb70abcb3584c7b048a77ccdde062fbb684b2e6877f2f1_0","lines":"    char *command_buffer = xmalloc (remote_file_len + 1000);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":532,"col":5,"offset":14325},"end":{"line":532,"col":51,"offset":14371},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"O%s\\n\""},"$BUF":{"start":{"line":532,"col":14,"offset":14334},"end":{"line":532,"col":28,"offset":14348},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":531,"col":28,"offset":14287},"svalue_end":{"line":531,"col":60,"offset":14319},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}},"$FMT":{"start":{"line":532,"col":30,"offset":14350},"end":{"line":532,"col":37,"offset":14357},"abstract_content":"\"O%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"29bc13cfa404ed8bb162a921158b42ec6c0606850c8731b0dd97e6142cf86fb14e52fa50ec9e45aefabc3ee116bfd10afa7ba483e300f6945c86f1353188cb2f_0","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":532,"col":5,"offset":14325},"end":{"line":532,"col":51,"offset":14371},"extra":{"metavars":{"$FUN":{"start":{"line":532,"col":5,"offset":14325},"end":{"line":532,"col":12,"offset":14332},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_1","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":534,"col":5,"offset":14445},"end":{"line":534,"col":34,"offset":14474},"extra":{"metavars":{"$FUN":{"start":{"line":534,"col":5,"offset":14445},"end":{"line":534,"col":11,"offset":14451},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25610b4b0d3b36fd6b6e902a6f1fbefa391db6f47ed1837fa4cef73295002f00201261fb2fae2cf5ced11cd824b653dca4954cfdb3a94cbf04ca827ba28e74d_13","lines":"    strcat (command_buffer, \"\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":539,"col":2,"offset":14606},"end":{"line":539,"col":24,"offset":14628},"extra":{"metavars":{"$PTR":{"start":{"line":539,"col":8,"offset":14612},"end":{"line":539,"col":22,"offset":14626},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":531,"col":28,"offset":14287},"svalue_end":{"line":531,"col":60,"offset":14319},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a0819ff12cdff257eca474ac1ce99b9155e0468c103f0d4013956ce14d3442899162c217285a870d02697b6ed83f26fa38eb7e5a600ac37fdf8de523867b600c_0","lines":"\tfree (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":540,"col":2,"offset":14630},"end":{"line":540,"col":24,"offset":14652},"extra":{"metavars":{"$PTR":{"start":{"line":540,"col":8,"offset":14636},"end":{"line":540,"col":22,"offset":14650},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_5","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":544,"col":5,"offset":14717},"end":{"line":544,"col":27,"offset":14739},"extra":{"metavars":{"$PTR":{"start":{"line":544,"col":11,"offset":14723},"end":{"line":544,"col":25,"offset":14737},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":531,"col":28,"offset":14287},"svalue_end":{"line":531,"col":60,"offset":14319},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a0819ff12cdff257eca474ac1ce99b9155e0468c103f0d4013956ce14d3442899162c217285a870d02697b6ed83f26fa38eb7e5a600ac37fdf8de523867b600c_1","lines":"    free (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":547,"col":3,"offset":14747},"end":{"line":547,"col":25,"offset":14769},"extra":{"metavars":{"$PTR":{"start":{"line":547,"col":9,"offset":14753},"end":{"line":547,"col":23,"offset":14767},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f52737c8c377e45b4aba81e6d2242514e8224324a27ab34828e79d66b69c3f4f45469d67aada1adac05731b12f994d8b043d70ca38f60264c5b3a874c4c3581_6","lines":"  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":576,"col":3,"offset":15411},"end":{"line":576,"col":61,"offset":15469},"extra":{"metavars":{"$FUN":{"start":{"line":576,"col":3,"offset":15411},"end":{"line":576,"col":10,"offset":15418},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_2","lines":"  sprintf (command_buffer, \"R%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":578,"col":11,"offset":15529},"end":{"line":578,"col":39,"offset":15557},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":578,"col":11,"offset":15529},"end":{"line":578,"col":17,"offset":15535},"abstract_content":"status"},"$SIGNED":{"start":{"line":578,"col":32,"offset":15550},"end":{"line":578,"col":38,"offset":15556},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3ce3e7f9a6fca20d158ef445bb1ad9e0918e85b4879da73155a32d046c9c9de65fad44c845368955f9d788319f4e32ab0be045d57b4bea3fb34e52aecb4c6aa_0","lines":"      || (status = get_status (handle)) == SAFE_READ_ERROR","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":582,"col":8,"offset":15640},"end":{"line":582,"col":19,"offset":15651},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":582,"col":8,"offset":15640},"end":{"line":582,"col":15,"offset":15647},"abstract_content":"counter"},"$SIGNED":{"start":{"line":582,"col":18,"offset":15650},"end":{"line":582,"col":19,"offset":15651},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d904b9c2e4e74149d388bc513caa08a7c75b23437f07bcd951b1651e798294df11597f90fa1217ab0d62c32a77004521e718ec71aab3b06464fa935492fae3a6_0","lines":"  for (counter = 0; counter < status; counter += rlen, buffer += rlen)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":584,"col":7,"offset":15716},"end":{"line":584,"col":70,"offset":15779},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":584,"col":7,"offset":15716},"end":{"line":584,"col":11,"offset":15720},"abstract_content":"rlen"},"$SIGNED":{"start":{"line":584,"col":36,"offset":15745},"end":{"line":584,"col":42,"offset":15751},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"01998fbf1ec0031a9cbe0babeac26b2f1aa84c5561d1e04ddf1e8d5c86d0b3241ca73ffdd19b8e17f493f47cc4ffa5bc3f69eb5a2070367894dcd93d4b753a99_0","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":584,"col":14,"offset":15723},"end":{"line":584,"col":70,"offset":15779},"extra":{"metavars":{"$FUN":{"start":{"line":584,"col":14,"offset":15723},"end":{"line":584,"col":23,"offset":15732},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"265fc247ff27f6d5df3d9918fc4de5503b810e15cf16305d95a6a19ad2bd7188977948ae1196fefbdce656325055026343faa5e9e759fb50f82a945103ce1097_2","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":598,"col":1,"offset":16039},"end":{"line":598,"col":12,"offset":16050},"extra":{"metavars":{"$FUN":{"start":{"line":598,"col":1,"offset":16039},"end":{"line":598,"col":12,"offset":16050},"abstract_content":"rmt_write__"},"$SIGNED":{"start":{"line":606,"col":12,"offset":16316},"end":{"line":606,"col":13,"offset":16317},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5cd5114e12334744f390adb490ab7b60ccfc6c2954fc40d92dfc3ebf2a9d99c7f033b85358e20112d140e162a3d8eeff706d94d85519bf59f214ded270b34d56_0","lines":"rmt_write__ (int handle, char *buffer, size_t length)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":604,"col":3,"offset":16196},"end":{"line":604,"col":61,"offset":16254},"extra":{"metavars":{"$FUN":{"start":{"line":604,"col":3,"offset":16196},"end":{"line":604,"col":10,"offset":16203},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_3","lines":"  sprintf (command_buffer, \"W%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":608,"col":18,"offset":16337},"end":{"line":608,"col":43,"offset":16362},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"fb0e3d2b0fa728cd9aac1d215644a85784870b3a97591d33037854ed12faab738b5ab37f149b68e1122719518a973d915534967393f0bcdc1742e09986e6c298_2","lines":"  pipe_handler = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":609,"col":3,"offset":16366},"end":{"line":609,"col":61,"offset":16424},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":609,"col":3,"offset":16366},"end":{"line":609,"col":10,"offset":16373},"abstract_content":"written"},"$SIGNED":{"start":{"line":609,"col":37,"offset":16400},"end":{"line":609,"col":43,"offset":16406},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"97e00667200a2a557f8c8a6a8b8447b79f35e72727fdcb9f6b2a713cc0d9a749a73ab7df289842fd28aadcb6b3233eaf84e5219c9b6b0644cc7971cffa343028_0","lines":"  written = full_write (WRITE_SIDE (handle), buffer, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":610,"col":3,"offset":16428},"end":{"line":610,"col":33,"offset":16458},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"fb0e3d2b0fa728cd9aac1d215644a85784870b3a97591d33037854ed12faab738b5ab37f149b68e1122719518a973d915534967393f0bcdc1742e09986e6c298_3","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":652,"col":3,"offset":17394},"end":{"line":652,"col":51,"offset":17442},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$BUF":{"start":{"line":652,"col":12,"offset":17403},"end":{"line":652,"col":26,"offset":17417},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":652,"col":28,"offset":17419},"end":{"line":652,"col":39,"offset":17430},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"697e1b90bb22a0ae8847f57cc11a4fbddb6bd48e0c69af4349b6313b4880aa07d1e7022d31e46fd28337199bdaf065faefaee9db924e87567d5c2717c9d635ce_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":652,"col":3,"offset":17394},"end":{"line":652,"col":51,"offset":17442},"extra":{"metavars":{"$FUN":{"start":{"line":652,"col":3,"offset":17394},"end":{"line":652,"col":10,"offset":17401},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_4","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":652,"col":3,"offset":17394},"end":{"line":652,"col":51,"offset":17442},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$TYPE":{"start":{"line":632,"col":3,"offset":16900},"end":{"line":632,"col":7,"offset":16904},"abstract_content":"char"},"$LEN":{"start":{"line":632,"col":23,"offset":16920},"end":{"line":632,"col":42,"offset":16939},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":652,"col":3,"offset":17394},"end":{"line":652,"col":10,"offset":17401},"abstract_content":"sprintf"},"$BUF":{"start":{"line":652,"col":12,"offset":17403},"end":{"line":652,"col":26,"offset":17417},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":652,"col":28,"offset":17419},"end":{"line":652,"col":39,"offset":17430},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"21cbd7e02604bdfcd77af24650c3a6bea7762867852f97ff01195d4c098b308aa9608d7689a61e99ecb052cef95cf08dd0da8e474de527d4f3347ee9a22313e2_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":690,"col":2,"offset":18392},"end":{"line":691,"col":41,"offset":18470},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$BUF":{"start":{"line":690,"col":11,"offset":18401},"end":{"line":690,"col":25,"offset":18415},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":690,"col":27,"offset":18417},"end":{"line":690,"col":38,"offset":18428},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2b2212eaa71703e03e034ba2b9971453ad9eddede50783b69a38e9d145e7ff5c84582aea010703eed29af969e5963b63c096a86d6dbb4a307d5efd9d7c54d79c_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":690,"col":2,"offset":18392},"end":{"line":691,"col":41,"offset":18470},"extra":{"metavars":{"$FUN":{"start":{"line":690,"col":2,"offset":18392},"end":{"line":690,"col":9,"offset":18399},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c73e8e3ae73090d6bf2fe81d7ecaa62abb2f37f3e3fcefce6a5417b8b4082a0924ee00a828656d34518016b135642fd9ba25f06e78b98a8eda7dea6a67acd85_5","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":690,"col":2,"offset":18392},"end":{"line":691,"col":41,"offset":18470},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$TYPE":{"start":{"line":674,"col":2,"offset":17859},"end":{"line":674,"col":6,"offset":17863},"abstract_content":"char"},"$LEN":{"start":{"line":674,"col":22,"offset":17879},"end":{"line":674,"col":41,"offset":17898},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":690,"col":2,"offset":18392},"end":{"line":690,"col":9,"offset":18399},"abstract_content":"sprintf"},"$BUF":{"start":{"line":690,"col":11,"offset":18401},"end":{"line":690,"col":25,"offset":18415},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":690,"col":27,"offset":18417},"end":{"line":690,"col":38,"offset":18428},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"14fe9fc7f45e2ce1405c74bb75555103683548077bf208328859172972da872b9224865bc48cb8fa9d2d4879bff505c6cbe6a7994e0cfc8b782be7f8a8256106_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":711,"col":2,"offset":18962},"end":{"line":713,"col":14,"offset":19064},"extra":{"metavars":{"$EXPR1":{"start":{"line":712,"col":10,"offset":19006},"end":{"line":712,"col":16,"offset":19012},"abstract_content":"status"},"$EXPR2":{"start":{"line":712,"col":19,"offset":19015},"end":{"line":712,"col":38,"offset":19034},"abstract_content":"get_status(handle)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"47ecab38b6dbf4111c66f08234c1756e1fa3533724a41faa9ebe34c19ed214b0684c8e3a34752b3af0231b54e82270e54870dd6364a314356d96da52dd53d03f_0","lines":"\tif (do_command (handle, \"S\") == -1\n\t    || (status = get_status (handle), status == -1))\n\t  return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":723,"col":6,"offset":19223},"end":{"line":723,"col":64,"offset":19281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":723,"col":6,"offset":19223},"end":{"line":723,"col":13,"offset":19230},"abstract_content":"counter"},"$SIGNED":{"start":{"line":723,"col":38,"offset":19255},"end":{"line":723,"col":44,"offset":19261},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e07ad1a6e3646259e376aa7b1523d06e8b90793be831efa6ea29ecb9424186811c1abc660f3fd8d4fa197b6a4cfa54a58760d85b810975f3966eb5d4fe22f89c_0","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":723,"col":16,"offset":19233},"end":{"line":723,"col":64,"offset":19281},"extra":{"metavars":{"$FUN":{"start":{"line":723,"col":16,"offset":19233},"end":{"line":723,"col":25,"offset":19242},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"265fc247ff27f6d5df3d9918fc4de5503b810e15cf16305d95a6a19ad2bd7188977948ae1196fefbdce656325055026343faa5e9e759fb50f82a945103ce1097_3","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":739,"col":7,"offset":19730},"end":{"line":739,"col":18,"offset":19741},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":739,"col":7,"offset":19730},"end":{"line":739,"col":14,"offset":19737},"abstract_content":"counter"},"$SIGNED":{"start":{"line":739,"col":17,"offset":19740},"end":{"line":739,"col":18,"offset":19741},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d904b9c2e4e74149d388bc513caa08a7c75b23437f07bcd951b1651e798294df11597f90fa1217ab0d62c32a77004521e718ec71aab3b06464fa935492fae3a6_1","lines":"\tfor (counter = 0; counter < status; counter += 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":322,"col":23,"offset":10749},"end":{"line":322,"col":33,"offset":10759},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5248f9430cc490fd48baa15ce3db16eb438c690c6cca38ed6e9471dfbc67439d0d21a6d658e53c0c687e266ca0c474a36c39621d95e4a438c940679473a2b5bd_0","lines":"      io_block_size = atoi (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":339,"col":23,"offset":11277},"end":{"line":339,"col":33,"offset":11287},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5248f9430cc490fd48baa15ce3db16eb438c690c6cca38ed6e9471dfbc67439d0d21a6d658e53c0c687e266ca0c474a36c39621d95e4a438c940679473a2b5bd_1","lines":"      io_block_size = atoi (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":495,"col":8,"offset":15334},"end":{"line":495,"col":17,"offset":15343},"extra":{"metavars":{"$PTR":{"start":{"line":495,"col":14,"offset":15340},"end":{"line":495,"col":15,"offset":15341},"abstract_content":"u"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cfc638578f96c2e1e92ef47c74d844403f30e3d914c14305b5e00a4a48f09b73fb01a29ca619f93461f793ab6478a64a79503e833bf67b25e7785a0b63169450_0","lines":"\t      free (u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":500,"col":8,"offset":15405},"end":{"line":500,"col":17,"offset":15414},"extra":{"metavars":{"$PTR":{"start":{"line":500,"col":14,"offset":15411},"end":{"line":500,"col":15,"offset":15412},"abstract_content":"g"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"916531d8c53ddc8f7bbc0ba1e1542694e2f64b6d069653e4f1d18b79c4ab750c1b98fba02d030fd8fef7f2edfa04abaf7b776b40b230c1bd0764ea71542e2c9c_0","lines":"\t      free (g);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":587,"col":32,"offset":16943},"end":{"line":587,"col":36,"offset":16947},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5797b4d9bca04caf81fa557b50cf327f0dab6f9cb0cc595868bdadd0d411d066c878b7069ea7cda37add93167eadd98ad746e5cbbc4f02a45ba12b2a0d5f1d6d_0","lines":"  if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &index, NULL))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":629,"col":24,"offset":18421},"end":{"line":629,"col":28,"offset":18425},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5797b4d9bca04caf81fa557b50cf327f0dab6f9cb0cc595868bdadd0d411d066c878b7069ea7cda37add93167eadd98ad746e5cbbc4f02a45ba12b2a0d5f1d6d_1","lines":"      save_patterns = &argv[index];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":701,"col":24,"offset":21334},"end":{"line":701,"col":28,"offset":21338},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5797b4d9bca04caf81fa557b50cf327f0dab6f9cb0cc595868bdadd0d411d066c878b7069ea7cda37add93167eadd98ad746e5cbbc4f02a45ba12b2a0d5f1d6d_2","lines":"      directory_name = argv[index];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":755,"col":27,"offset":22977},"end":{"line":755,"col":48,"offset":22998},"extra":{"metavars":{"$FUN":{"start":{"line":755,"col":27,"offset":22977},"end":{"line":755,"col":34,"offset":22984},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ca178a4ee4203882d9bb6c5373e9d3de80b73424d9f8fb7c2b6d8cc95e1119dc127b991db08f678b8cb440a661a25a132df25e47ede87d04863027cbc7ccb69c_0","lines":"  input_buffer = (char *) xmalloc (in_buf_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":761,"col":28,"offset":23126},"end":{"line":761,"col":50,"offset":23148},"extra":{"metavars":{"$FUN":{"start":{"line":761,"col":28,"offset":23126},"end":{"line":761,"col":35,"offset":23133},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ca178a4ee4203882d9bb6c5373e9d3de80b73424d9f8fb7c2b6d8cc95e1119dc127b991db08f678b8cb440a661a25a132df25e47ede87d04863027cbc7ccb69c_1","lines":"  output_buffer = (char *) xmalloc (out_buf_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":770,"col":3,"offset":23258},"end":{"line":770,"col":25,"offset":23280},"extra":{"metavars":{"$FUN":{"start":{"line":770,"col":3,"offset":23258},"end":{"line":770,"col":12,"offset":23267},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32d70fcce60d8e067c85af3d74b06a1553ed545572953c1c9bed6fe8e391d0d86a6ced32745e9fd6341c1d0793c507cbecaef410e16f173b6aa9ae7993843d43_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":774,"col":21,"offset":23366},"end":{"line":774,"col":25,"offset":23370},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5797b4d9bca04caf81fa557b50cf327f0dab6f9cb0cc595868bdadd0d411d066c878b7069ea7cda37add93167eadd98ad746e5cbbc4f02a45ba12b2a0d5f1d6d_3","lines":"  set_program_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":776,"col":23,"offset":23446},"end":{"line":776,"col":27,"offset":23450},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5797b4d9bca04caf81fa557b50cf327f0dab6f9cb0cc595868bdadd0d411d066c878b7069ea7cda37add93167eadd98ad746e5cbbc4f02a45ba12b2a0d5f1d6d_4","lines":"  process_args (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":124,"col":38,"offset":4164},"end":{"line":124,"col":63,"offset":4189},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"9e39c263cd873443c1d6bda83b354ea4152279997ebb664845d8090385a250f54dc8f1b48daf43ad3ce63474823a7b70e2783fa99cdfae9192e8580323a9563c_0","lines":"  RETSIGTYPE (*pipe_handler) (int) = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":126,"col":3,"offset":4263},"end":{"line":126,"col":33,"offset":4293},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"9e39c263cd873443c1d6bda83b354ea4152279997ebb664845d8090385a250f54dc8f1b48daf43ad3ce63474823a7b70e2783fa99cdfae9192e8580323a9563c_1","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":149,"col":11,"offset":4707},"end":{"line":149,"col":52,"offset":4748},"extra":{"metavars":{"$FUN":{"start":{"line":149,"col":11,"offset":4707},"end":{"line":149,"col":20,"offset":4716},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3beb299abdd3c263a106bd35852a834a624085da9f018381e687306d4d638dcc3c6e808d4ecf39a3dca3778c34245420a87a2359ecde97703e2df0599c973b00_0","lines":"      if (safe_read (READ_SIDE (handle), cursor, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":183,"col":9,"offset":5357},"end":{"line":183,"col":54,"offset":5402},"extra":{"metavars":{"$FUN":{"start":{"line":183,"col":9,"offset":5357},"end":{"line":183,"col":18,"offset":5366},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3beb299abdd3c263a106bd35852a834a624085da9f018381e687306d4d638dcc3c6e808d4ecf39a3dca3778c34245420a87a2359ecde97703e2df0599c973b00_1","lines":"\twhile (safe_read (READ_SIDE (handle), &character, 1) == 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":188,"col":15,"offset":5470},"end":{"line":188,"col":32,"offset":5487},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5c8b5ba533ae4baf5b44d5f3bf06c0874082ed1e2a2b4d86d8ef3c78b1ac741518c3aba0bb83f5c421ce25aa4c477ed0a7e68d7bccf85923b24acab6ff73ccbf_0","lines":"      errno = atoi (cursor + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":218,"col":25,"offset":6079},"end":{"line":218,"col":38,"offset":6092},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5c8b5ba533ae4baf5b44d5f3bf06c0874082ed1e2a2b4d86d8ef3c78b1ac741518c3aba0bb83f5c421ce25aa4c477ed0a7e68d7bccf85923b24acab6ff73ccbf_1","lines":"      long int result = atol (status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":246,"col":7,"offset":6634},"end":{"line":246,"col":33,"offset":6660},"extra":{"metavars":{"$EXPR1":{"start":{"line":246,"col":18,"offset":6645},"end":{"line":246,"col":25,"offset":6652},"abstract_content":"*status"},"$EXPR2":{"start":{"line":246,"col":29,"offset":6656},"end":{"line":246,"col":32,"offset":6659},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3e469466bdcf86f081c91b418709dc71ddfc9e8f32cf5fcdfafac9d7923c7acd8127db403d7bbcb8c6ffe13610fc7beaadbcb0397557b188622781108541d5b0_0","lines":"      negative = *status == '-';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":247,"col":7,"offset":6667},"end":{"line":247,"col":44,"offset":6704},"extra":{"metavars":{"$EXPR1":{"start":{"line":247,"col":29,"offset":6689},"end":{"line":247,"col":36,"offset":6696},"abstract_content":"*status"},"$EXPR2":{"start":{"line":247,"col":40,"offset":6700},"end":{"line":247,"col":43,"offset":6703},"abstract_content":"'+'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2277c63f98316e2e51ac09a635a9a062be8a3c4229cfb11cfab73fde840e18ba630b87ef072c4ae6703e3232b6610ea42bd5fd3636d33ded9bccd6aa069706a7_0","lines":"      status += negative || *status == '+';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":293,"col":9,"offset":8056},"end":{"line":293,"col":41,"offset":8088},"extra":{"metavars":{"$FUN":{"start":{"line":293,"col":9,"offset":8056},"end":{"line":293,"col":16,"offset":8063},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45d147e6b8d2f3a300bf067b5f21371c459da2ef9caf451fc836d55ccc5e75904d0d0149bd858fb3259dac962f95b1fb1ba49afe0287e7a9ad1fe0584b804f1e_0","lines":"  if (! freopen (\"/dev/tty\", \"r\", stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":294,"col":5,"offset":8094},"end":{"line":294,"col":38,"offset":8127},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":5,"offset":8094},"end":{"line":294,"col":12,"offset":8101},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45d147e6b8d2f3a300bf067b5f21371c459da2ef9caf451fc836d55ccc5e75904d0d0149bd858fb3259dac962f95b1fb1ba49afe0287e7a9ad1fe0584b804f1e_1","lines":"    freopen (\"/dev/null\", \"r\", stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":295,"col":9,"offset":8137},"end":{"line":295,"col":42,"offset":8170},"extra":{"metavars":{"$FUN":{"start":{"line":295,"col":9,"offset":8137},"end":{"line":295,"col":16,"offset":8144},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45d147e6b8d2f3a300bf067b5f21371c459da2ef9caf451fc836d55ccc5e75904d0d0149bd858fb3259dac962f95b1fb1ba49afe0287e7a9ad1fe0584b804f1e_2","lines":"  if (! freopen (\"/dev/tty\", \"w\", stdout))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":296,"col":5,"offset":8176},"end":{"line":296,"col":39,"offset":8210},"extra":{"metavars":{"$FUN":{"start":{"line":296,"col":5,"offset":8176},"end":{"line":296,"col":12,"offset":8183},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45d147e6b8d2f3a300bf067b5f21371c459da2ef9caf451fc836d55ccc5e75904d0d0149bd858fb3259dac962f95b1fb1ba49afe0287e7a9ad1fe0584b804f1e_3","lines":"    freopen (\"/dev/null\", \"w\", stdout);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":298,"col":3,"offset":8215},"end":{"line":299,"col":73,"offset":8346},"extra":{"metavars":{"$EXPR1":{"start":{"line":298,"col":7,"offset":8219},"end":{"line":298,"col":16,"offset":8228},"abstract_content":"rexecserv"},"$EXPR2":{"start":{"line":298,"col":19,"offset":8231},"end":{"line":298,"col":48,"offset":8260},"abstract_content":"getservbyname(\"exec\"\"tcp\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4f11d317025cb45967eae542101d8f444632c987a34c6a33adc4001139290f740868a8ea68a163664da3eee3915eef438ebc8aad760b0a2a5efc9b4942a3fb2d_0","lines":"  if (rexecserv = getservbyname (\"exec\", \"tcp\"), !rexecserv)\n    error (EXIT_ON_EXEC_ERROR, 0, _(\"exec/tcp: Service not available\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":301,"col":12,"offset":8359},"end":{"line":301,"col":69,"offset":8416},"extra":{"metavars":{"$FUN":{"start":{"line":301,"col":12,"offset":8359},"end":{"line":301,"col":17,"offset":8364},"abstract_content":"rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"001a09494c73644d0f8cbcda8a297c530212d9d8544a253d046fe984bd300973a91369888e9da426331ace348207dfb9903788bcab57b669c63373a737cb6024_0","lines":"  result = rexec (&host, rexecserv->s_port, user, 0, rmt_command, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":304,"col":3,"offset":8483},"end":{"line":304,"col":28,"offset":8508},"extra":{"metavars":{"$FUN":{"start":{"line":304,"col":3,"offset":8483},"end":{"line":304,"col":9,"offset":8489},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eca2accedd0370c3e8018663ffaaf5ceb8d65ef5449dbf008d325037ead626b265681861e65e4d449fb5d96bd7a2530f9c9a40ccc72b4560e75c0df0f934a3b4_0","lines":"  fdopen (saved_stdin, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":307,"col":3,"offset":8577},"end":{"line":307,"col":29,"offset":8603},"extra":{"metavars":{"$FUN":{"start":{"line":307,"col":3,"offset":8577},"end":{"line":307,"col":9,"offset":8583},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eca2accedd0370c3e8018663ffaaf5ceb8d65ef5449dbf008d325037ead626b265681861e65e4d449fb5d96bd7a2530f9c9a40ccc72b4560e75c0df0f934a3b4_1","lines":"  fdopen (saved_stdout, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":321,"col":3,"offset":8926},"end":{"line":321,"col":30,"offset":8953},"extra":{"metavars":{"$FUN":{"start":{"line":321,"col":3,"offset":8926},"end":{"line":321,"col":10,"offset":8933},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_0","lines":"  sprintf (buf, \"%d \", oflag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":325,"col":20,"offset":9010},"end":{"line":325,"col":44,"offset":9034},"extra":{"metavars":{"$FUN":{"start":{"line":325,"col":20,"offset":9010},"end":{"line":325,"col":26,"offset":9016},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_0","lines":"    case O_RDONLY: strcat (buf, \"O_RDONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":326,"col":18,"offset":9060},"end":{"line":326,"col":40,"offset":9082},"extra":{"metavars":{"$FUN":{"start":{"line":326,"col":18,"offset":9060},"end":{"line":326,"col":24,"offset":9066},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_1","lines":"    case O_RDWR: strcat (buf, \"O_RDWR\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":327,"col":20,"offset":9110},"end":{"line":327,"col":44,"offset":9134},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":20,"offset":9110},"end":{"line":327,"col":26,"offset":9116},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_2","lines":"    case O_WRONLY: strcat (buf, \"O_WRONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":332,"col":3,"offset":9191},"end":{"line":332,"col":51,"offset":9239},"extra":{"metavars":{"$EXPR1":{"start":{"line":332,"col":7,"offset":9195},"end":{"line":332,"col":12,"offset":9200},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":332,"col":15,"offset":9203},"end":{"line":332,"col":23,"offset":9211},"abstract_content":"O_APPEND"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e49e36872f66b885338a9072fc9a951ff5cfd62ec734f3fe16d08d503066ef30692ac1f587ca4ae802dd2094c10f1d18604f07ede78ecf8bf362389a9d0bdde5_0","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":332,"col":25,"offset":9213},"end":{"line":332,"col":50,"offset":9238},"extra":{"metavars":{"$FUN":{"start":{"line":332,"col":25,"offset":9213},"end":{"line":332,"col":31,"offset":9219},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_3","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":334,"col":3,"offset":9249},"end":{"line":334,"col":49,"offset":9295},"extra":{"metavars":{"$EXPR1":{"start":{"line":334,"col":7,"offset":9253},"end":{"line":334,"col":12,"offset":9258},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":334,"col":15,"offset":9261},"end":{"line":334,"col":22,"offset":9268},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"832ec2a41d85a808b6ddae6132d97f50cc2d9ceb858c3b0c44cf9eab8ec115e2d8ec3623b08042940e92f9b6dfd28b74d78f8f4beff2b01e85d64f8973856262_0","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":334,"col":24,"offset":9270},"end":{"line":334,"col":48,"offset":9294},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":24,"offset":9270},"end":{"line":334,"col":30,"offset":9276},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_4","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":336,"col":3,"offset":9313},"end":{"line":336,"col":49,"offset":9359},"extra":{"metavars":{"$EXPR1":{"start":{"line":336,"col":7,"offset":9317},"end":{"line":336,"col":12,"offset":9322},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":336,"col":15,"offset":9325},"end":{"line":336,"col":22,"offset":9332},"abstract_content":"O_DSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4f64e9af4030ae48a87823a4e51d8d4bf3f6c8e7736426d43576b34dbba80f2fbecd9cd9fd13ceadf642b338654557bcbb435a9be9646415083f7bef54b1b56e_0","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":336,"col":24,"offset":9334},"end":{"line":336,"col":48,"offset":9358},"extra":{"metavars":{"$FUN":{"start":{"line":336,"col":24,"offset":9334},"end":{"line":336,"col":30,"offset":9340},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_5","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":338,"col":3,"offset":9369},"end":{"line":338,"col":47,"offset":9413},"extra":{"metavars":{"$EXPR1":{"start":{"line":338,"col":7,"offset":9373},"end":{"line":338,"col":12,"offset":9378},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":338,"col":15,"offset":9381},"end":{"line":338,"col":21,"offset":9387},"abstract_content":"O_EXCL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f57bf4d5263704d8310a1fea833d187a891a980c7c42762feea02e29db8ef1cdb4ce3bb5c0e65b5cf466dcf91b52a856ad499b149ee0207a06f0d98a81350a8a_0","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":338,"col":23,"offset":9389},"end":{"line":338,"col":46,"offset":9412},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":23,"offset":9389},"end":{"line":338,"col":29,"offset":9395},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_6","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":340,"col":3,"offset":9435},"end":{"line":340,"col":57,"offset":9489},"extra":{"metavars":{"$EXPR1":{"start":{"line":340,"col":7,"offset":9439},"end":{"line":340,"col":12,"offset":9444},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":340,"col":15,"offset":9447},"end":{"line":340,"col":26,"offset":9458},"abstract_content":"O_LARGEFILE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2859df6f97a22089fbb17da09c27d524bd4a29af2d42431c054027683398f0534047e3fc2256b6f5937ed1451e3f04e61534a5657ebc93c36ba4249547b4fc2_0","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":340,"col":28,"offset":9460},"end":{"line":340,"col":56,"offset":9488},"extra":{"metavars":{"$FUN":{"start":{"line":340,"col":28,"offset":9460},"end":{"line":340,"col":34,"offset":9466},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_7","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":343,"col":3,"offset":9515},"end":{"line":343,"col":51,"offset":9563},"extra":{"metavars":{"$EXPR1":{"start":{"line":343,"col":7,"offset":9519},"end":{"line":343,"col":12,"offset":9524},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":343,"col":15,"offset":9527},"end":{"line":343,"col":23,"offset":9535},"abstract_content":"O_NOCTTY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b524a2fd35e9d1d6565e855760a56887008907482e4fe2ac794082e2d4b34ca7566a5fda0ddce920d8b71c5a46f3426b48fa8a334058bb1d35a16e0ceca0cced_0","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":343,"col":25,"offset":9537},"end":{"line":343,"col":50,"offset":9562},"extra":{"metavars":{"$FUN":{"start":{"line":343,"col":25,"offset":9537},"end":{"line":343,"col":31,"offset":9543},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_8","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":345,"col":3,"offset":9573},"end":{"line":345,"col":55,"offset":9625},"extra":{"metavars":{"$EXPR1":{"start":{"line":345,"col":7,"offset":9577},"end":{"line":345,"col":12,"offset":9582},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":345,"col":15,"offset":9585},"end":{"line":345,"col":25,"offset":9595},"abstract_content":"O_NONBLOCK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a2cc748931566c8e02c0d30eed01415128aadd0f0811251c4e5519009018374197f1d8ffce24317765c0de3efdd6e6ffec696a9757b65899147db947b653e42_0","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":345,"col":27,"offset":9597},"end":{"line":345,"col":54,"offset":9624},"extra":{"metavars":{"$FUN":{"start":{"line":345,"col":27,"offset":9597},"end":{"line":345,"col":33,"offset":9603},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_9","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":347,"col":3,"offset":9643},"end":{"line":347,"col":49,"offset":9689},"extra":{"metavars":{"$EXPR1":{"start":{"line":347,"col":7,"offset":9647},"end":{"line":347,"col":12,"offset":9652},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":347,"col":15,"offset":9655},"end":{"line":347,"col":22,"offset":9662},"abstract_content":"O_RSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08d878e3e0e3d3cf03bb2db0b8be305011d3ab6cdacda90762ef6b18ce2da195b335bd46ab63453afa8632da02758a8659434d1cb6e93ecb3899ec1c22c2c898_0","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":347,"col":24,"offset":9664},"end":{"line":347,"col":48,"offset":9688},"extra":{"metavars":{"$FUN":{"start":{"line":347,"col":24,"offset":9664},"end":{"line":347,"col":30,"offset":9670},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_10","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":350,"col":3,"offset":9713},"end":{"line":350,"col":47,"offset":9757},"extra":{"metavars":{"$EXPR1":{"start":{"line":350,"col":7,"offset":9717},"end":{"line":350,"col":12,"offset":9722},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":350,"col":15,"offset":9725},"end":{"line":350,"col":21,"offset":9731},"abstract_content":"O_SYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9eeff8842d06cad3f7052cea9c5ac914fbc65306b768c0aa0f21e776198789815c95502a04c3fab482c53b76d9a5ec1eaae080aa4c6566ac91cf27e64e7f99f_0","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":350,"col":23,"offset":9733},"end":{"line":350,"col":46,"offset":9756},"extra":{"metavars":{"$FUN":{"start":{"line":350,"col":23,"offset":9733},"end":{"line":350,"col":29,"offset":9739},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_11","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":352,"col":3,"offset":9767},"end":{"line":352,"col":49,"offset":9813},"extra":{"metavars":{"$EXPR1":{"start":{"line":352,"col":7,"offset":9771},"end":{"line":352,"col":12,"offset":9776},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":352,"col":15,"offset":9779},"end":{"line":352,"col":22,"offset":9786},"abstract_content":"O_TRUNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fbacc9d3d9f056d29001dfd49513b4c7d80b178cd37f2cb921ef9f3f4f2a37d376db2de3d309948cd6508a3a686feeca4090ece560302ef8559023a53534f3fe_0","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":352,"col":24,"offset":9788},"end":{"line":352,"col":48,"offset":9812},"extra":{"metavars":{"$FUN":{"start":{"line":352,"col":24,"offset":9788},"end":{"line":352,"col":30,"offset":9794},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_12","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":404,"col":4,"offset":11259},"end":{"line":404,"col":26,"offset":11281},"extra":{"metavars":{"$PTR":{"start":{"line":404,"col":10,"offset":11265},"end":{"line":404,"col":24,"offset":11279},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_0","lines":"\t  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":439,"col":36,"offset":11949},"end":{"line":439,"col":73,"offset":11986},"extra":{"metavars":{"$FUN":{"start":{"line":439,"col":36,"offset":11949},"end":{"line":439,"col":46,"offset":11959},"abstract_content":"_rmt_rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b93e0981f1abea762c98298c8ab5f98d908bb3596f8f48080592d35ad214fb9c96a6b87183167bd420fb14385fe396cd2b1e6b98d204e88b0b82ab539c44b96d_0","lines":"  READ_SIDE (remote_pipe_number) = _rmt_rexec (remote_host, remote_user);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":443,"col":7,"offset":12063},"end":{"line":443,"col":29,"offset":12085},"extra":{"metavars":{"$PTR":{"start":{"line":443,"col":13,"offset":12069},"end":{"line":443,"col":27,"offset":12083},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_1","lines":"      free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":462,"col":2,"offset":12429},"end":{"line":462,"col":24,"offset":12451},"extra":{"metavars":{"$PTR":{"start":{"line":462,"col":8,"offset":12435},"end":{"line":462,"col":22,"offset":12449},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_2","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":471,"col":9,"offset":12623},"end":{"line":471,"col":45,"offset":12659},"extra":{"metavars":{"$FUN":{"start":{"line":471,"col":9,"offset":12623},"end":{"line":471,"col":13,"offset":12627},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31b5896b74dd2962663d4d50b449e48cce53b9041ab8e4e64ce53e5c4b1f4e35e9581a090dd337d242c8b0ff16225bc7dc2b14952a9de6ebaa84736d17cffcd1_0","lines":"    if (pipe (to_remote[remote_pipe_number]) == -1","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":472,"col":5,"offset":12670},"end":{"line":472,"col":43,"offset":12708},"extra":{"metavars":{"$FUN":{"start":{"line":472,"col":5,"offset":12670},"end":{"line":472,"col":9,"offset":12674},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31b5896b74dd2962663d4d50b449e48cce53b9041ab8e4e64ce53e5c4b1f4e35e9581a090dd337d242c8b0ff16225bc7dc2b14952a9de6ebaa84736d17cffcd1_1","lines":"\t|| pipe (from_remote[remote_pipe_number]) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":475,"col":2,"offset":12741},"end":{"line":475,"col":24,"offset":12763},"extra":{"metavars":{"$PTR":{"start":{"line":475,"col":8,"offset":12747},"end":{"line":475,"col":22,"offset":12761},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_3","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":480,"col":14,"offset":12810},"end":{"line":480,"col":21,"offset":12817},"extra":{"metavars":{"$FUN":{"start":{"line":480,"col":14,"offset":12810},"end":{"line":480,"col":18,"offset":12814},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ac0d656e83fb228c685951631e116c546ab0e3952846f9b9a3a5b0e3bb34311cadafc23b91dd55466fe42bb02b9685c9ab5a88fd65159f1df7f5051230fcb9_0","lines":"    status = fork ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":484,"col":2,"offset":12866},"end":{"line":484,"col":24,"offset":12888},"extra":{"metavars":{"$PTR":{"start":{"line":484,"col":8,"offset":12872},"end":{"line":484,"col":22,"offset":12886},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_4","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":504,"col":2,"offset":13556},"end":{"line":504,"col":22,"offset":13576},"extra":{"metavars":{"$1":{"start":{"line":1,"col":15,"offset":14},"end":{"line":1,"col":16,"offset":15},"abstract_content":"g"},"$FUN":{"start":{"line":504,"col":2,"offset":13556},"end":{"line":504,"col":19,"offset":13573},"abstract_content":"sys_reset_uid_gid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6e69688588e84733374119316b092d0f421764a1d8e02365305ce21ef9e61af9afc98f109b0d00ee97735c87e69685f1d23f086a4f5c6f77bb1d3ad7d3dd328d_0","lines":"\tsys_reset_uid_gid ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":507,"col":4,"offset":13600},"end":{"line":508,"col":47,"offset":13703},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":507,"col":4,"offset":13600},"end":{"line":507,"col":9,"offset":13605},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86b0e799bdae2db370cdb828cbf4dbdf60bf2cda36f12ddff85ece950a9de98e990581b562072b8cefeaef99f16ffc53bc1a445407909d064b0cf8b157e41f5c_0","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t \"-l\", remote_user, rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":510,"col":4,"offset":13714},"end":{"line":511,"col":28,"offset":13798},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":510,"col":4,"offset":13714},"end":{"line":510,"col":9,"offset":13719},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86b0e799bdae2db370cdb828cbf4dbdf60bf2cda36f12ddff85ece950a9de98e990581b562072b8cefeaef99f16ffc53bc1a445407909d064b0cf8b157e41f5c_1","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":530,"col":28,"offset":14267},"end":{"line":530,"col":60,"offset":14299},"extra":{"metavars":{"$FUN":{"start":{"line":530,"col":28,"offset":14267},"end":{"line":530,"col":35,"offset":14274},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1ad578e210277c2b365f605e9cd9539770525b4bab40e20288a010f884dcd72944e28f4f15652aa2c41b6f4893d819da21c5897d21bcf4e3d377c5299baee267_0","lines":"    char *command_buffer = xmalloc (remote_file_len + 1000);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":531,"col":5,"offset":14305},"end":{"line":531,"col":51,"offset":14351},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"O%s\\n\""},"$BUF":{"start":{"line":531,"col":14,"offset":14314},"end":{"line":531,"col":28,"offset":14328},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":530,"col":28,"offset":14267},"svalue_end":{"line":530,"col":60,"offset":14299},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}},"$FMT":{"start":{"line":531,"col":30,"offset":14330},"end":{"line":531,"col":37,"offset":14337},"abstract_content":"\"O%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b184501be17e13b1534f008b938a34be0387e6678719e13ad1193e5ee8d155983963191d65b0f9c22cba031dc3f92244ca6afd264a08dcbf50c2c8f5b8218e4e_0","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":531,"col":5,"offset":14305},"end":{"line":531,"col":51,"offset":14351},"extra":{"metavars":{"$FUN":{"start":{"line":531,"col":5,"offset":14305},"end":{"line":531,"col":12,"offset":14312},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_1","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":533,"col":5,"offset":14425},"end":{"line":533,"col":34,"offset":14454},"extra":{"metavars":{"$FUN":{"start":{"line":533,"col":5,"offset":14425},"end":{"line":533,"col":11,"offset":14431},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9b617150aa1582d492d58aa9f68b97186fa4e9eeb7d49af3d8b4ef0f094ac80af4f8fcf2df26e7f8292b2e3bb3f83ddcc079d94da7a52ebd431dc4854aae750_13","lines":"    strcat (command_buffer, \"\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":538,"col":2,"offset":14586},"end":{"line":538,"col":24,"offset":14608},"extra":{"metavars":{"$PTR":{"start":{"line":538,"col":8,"offset":14592},"end":{"line":538,"col":22,"offset":14606},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":530,"col":28,"offset":14267},"svalue_end":{"line":530,"col":60,"offset":14299},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"91f2b4e78036fe91237c08e518b5e7a988efafb9bb6c098394b13c724aaf36ae0b3e7f046f26721a0285d17622c083f145a3684e3acf9677d06385f5e2261a24_0","lines":"\tfree (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":539,"col":2,"offset":14610},"end":{"line":539,"col":24,"offset":14632},"extra":{"metavars":{"$PTR":{"start":{"line":539,"col":8,"offset":14616},"end":{"line":539,"col":22,"offset":14630},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_5","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":543,"col":5,"offset":14697},"end":{"line":543,"col":27,"offset":14719},"extra":{"metavars":{"$PTR":{"start":{"line":543,"col":11,"offset":14703},"end":{"line":543,"col":25,"offset":14717},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":530,"col":28,"offset":14267},"svalue_end":{"line":530,"col":60,"offset":14299},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"91f2b4e78036fe91237c08e518b5e7a988efafb9bb6c098394b13c724aaf36ae0b3e7f046f26721a0285d17622c083f145a3684e3acf9677d06385f5e2261a24_1","lines":"    free (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":546,"col":3,"offset":14727},"end":{"line":546,"col":25,"offset":14749},"extra":{"metavars":{"$PTR":{"start":{"line":546,"col":9,"offset":14733},"end":{"line":546,"col":23,"offset":14747},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"133bfc2667d47a9b0ffffeb50ed761c9c087d2d642b59421e68973f5f2d312515db7ccfbab8cfe41479fa6cd71f2132b35d7e24cf0bc4d71f6e62ac2cf67399c_6","lines":"  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":575,"col":3,"offset":15391},"end":{"line":575,"col":61,"offset":15449},"extra":{"metavars":{"$FUN":{"start":{"line":575,"col":3,"offset":15391},"end":{"line":575,"col":10,"offset":15398},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_2","lines":"  sprintf (command_buffer, \"R%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":577,"col":11,"offset":15509},"end":{"line":577,"col":39,"offset":15537},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":577,"col":11,"offset":15509},"end":{"line":577,"col":17,"offset":15515},"abstract_content":"status"},"$SIGNED":{"start":{"line":577,"col":32,"offset":15530},"end":{"line":577,"col":38,"offset":15536},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"19b19ab998b6d27317dc6f56acfddbfa6776c2bd88d8f5b07452a015b7799874b90a58afad5957e1985c64b34c8a70ed43615e8fd187a720899a1e92fc190078_0","lines":"      || (status = get_status (handle)) == SAFE_READ_ERROR","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":581,"col":8,"offset":15620},"end":{"line":581,"col":19,"offset":15631},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":581,"col":8,"offset":15620},"end":{"line":581,"col":15,"offset":15627},"abstract_content":"counter"},"$SIGNED":{"start":{"line":581,"col":18,"offset":15630},"end":{"line":581,"col":19,"offset":15631},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3f8aa315e4e2a9627729425f42bdebdadf7e7d5bb8c4a606364af5fd2dd0ee84e637185e803d0ac4f929379dc5a2e4b49eccbc2d6925a3f20be3bb6845c11134_0","lines":"  for (counter = 0; counter < status; counter += rlen, buffer += rlen)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":583,"col":7,"offset":15696},"end":{"line":583,"col":70,"offset":15759},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":583,"col":7,"offset":15696},"end":{"line":583,"col":11,"offset":15700},"abstract_content":"rlen"},"$SIGNED":{"start":{"line":583,"col":36,"offset":15725},"end":{"line":583,"col":42,"offset":15731},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4f921ca852b8520559ad0612caea50ab80f22a5efbcdbf445045ef7cb84afedfa0bd1266b0696b3c300c6ac9717b7d0338d12ca038bf841226dc006669090958_0","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":583,"col":14,"offset":15703},"end":{"line":583,"col":70,"offset":15759},"extra":{"metavars":{"$FUN":{"start":{"line":583,"col":14,"offset":15703},"end":{"line":583,"col":23,"offset":15712},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3beb299abdd3c263a106bd35852a834a624085da9f018381e687306d4d638dcc3c6e808d4ecf39a3dca3778c34245420a87a2359ecde97703e2df0599c973b00_2","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":597,"col":1,"offset":16019},"end":{"line":597,"col":12,"offset":16030},"extra":{"metavars":{"$FUN":{"start":{"line":597,"col":1,"offset":16019},"end":{"line":597,"col":12,"offset":16030},"abstract_content":"rmt_write__"},"$SIGNED":{"start":{"line":605,"col":12,"offset":16296},"end":{"line":605,"col":13,"offset":16297},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2b837645f825110db851cbb51ea62d367b2bda31d7d8f32888243deaca40a70147f4245696444f3d06abc3d2e869a1855e00dc2098795674101aed715355cae1_0","lines":"rmt_write__ (int handle, char *buffer, size_t length)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":603,"col":3,"offset":16176},"end":{"line":603,"col":61,"offset":16234},"extra":{"metavars":{"$FUN":{"start":{"line":603,"col":3,"offset":16176},"end":{"line":603,"col":10,"offset":16183},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_3","lines":"  sprintf (command_buffer, \"W%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":607,"col":18,"offset":16317},"end":{"line":607,"col":43,"offset":16342},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"9e39c263cd873443c1d6bda83b354ea4152279997ebb664845d8090385a250f54dc8f1b48daf43ad3ce63474823a7b70e2783fa99cdfae9192e8580323a9563c_2","lines":"  pipe_handler = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":608,"col":3,"offset":16346},"end":{"line":608,"col":61,"offset":16404},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":608,"col":3,"offset":16346},"end":{"line":608,"col":10,"offset":16353},"abstract_content":"written"},"$SIGNED":{"start":{"line":608,"col":37,"offset":16380},"end":{"line":608,"col":43,"offset":16386},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e31b6fe87832013420222a96851fca5e2b848b5cb8fee8070ebcb1daeda5b9cfa74175297779efd532cb4cbb8cd118c86d69dc3491410bd3b52b0f1c3f05338d_0","lines":"  written = full_write (WRITE_SIDE (handle), buffer, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":609,"col":3,"offset":16408},"end":{"line":609,"col":33,"offset":16438},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"9e39c263cd873443c1d6bda83b354ea4152279997ebb664845d8090385a250f54dc8f1b48daf43ad3ce63474823a7b70e2783fa99cdfae9192e8580323a9563c_3","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":651,"col":3,"offset":17374},"end":{"line":651,"col":51,"offset":17422},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$BUF":{"start":{"line":651,"col":12,"offset":17383},"end":{"line":651,"col":26,"offset":17397},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":651,"col":28,"offset":17399},"end":{"line":651,"col":39,"offset":17410},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"a927c0939b7b022e21ba80ca29f4e4ece1256677d72f6877c59d3038588576d0fd23b9405c32e891337170cc47a8e06cf352eeedcd58e9e64632a774b5d24c22_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":651,"col":3,"offset":17374},"end":{"line":651,"col":51,"offset":17422},"extra":{"metavars":{"$FUN":{"start":{"line":651,"col":3,"offset":17374},"end":{"line":651,"col":10,"offset":17381},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_4","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":651,"col":3,"offset":17374},"end":{"line":651,"col":51,"offset":17422},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$TYPE":{"start":{"line":631,"col":3,"offset":16880},"end":{"line":631,"col":7,"offset":16884},"abstract_content":"char"},"$LEN":{"start":{"line":631,"col":23,"offset":16900},"end":{"line":631,"col":42,"offset":16919},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":651,"col":3,"offset":17374},"end":{"line":651,"col":10,"offset":17381},"abstract_content":"sprintf"},"$BUF":{"start":{"line":651,"col":12,"offset":17383},"end":{"line":651,"col":26,"offset":17397},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":651,"col":28,"offset":17399},"end":{"line":651,"col":39,"offset":17410},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d186e88d70210412c37130616ac1742cccaae4ff785932dd232d0f513da8474b8021bd31aeee90612172347493840d1ee77256dcaf3b9b4f592f9d2f94ac10c5_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":689,"col":2,"offset":18372},"end":{"line":690,"col":41,"offset":18450},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$BUF":{"start":{"line":689,"col":11,"offset":18381},"end":{"line":689,"col":25,"offset":18395},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":689,"col":27,"offset":18397},"end":{"line":689,"col":38,"offset":18408},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"22e5169211b74feca3a2ad52eafaa6a9444363433c891492d9c36c8b2429d33c98b8ea2100f0e41f15a89b1ac21526d0be7f2c0b0fd9c61d5530a9c67b708993_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":689,"col":2,"offset":18372},"end":{"line":690,"col":41,"offset":18450},"extra":{"metavars":{"$FUN":{"start":{"line":689,"col":2,"offset":18372},"end":{"line":689,"col":9,"offset":18379},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32aa568235af0067b0b395eb44ca9fd1f788afac3187ef7f1f8a58d5c10af79ace8e8cbde1be90e144d64e9a405d4f254be5458e91d5ef2a85d99d7e6ef081cb_5","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":689,"col":2,"offset":18372},"end":{"line":690,"col":41,"offset":18450},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$TYPE":{"start":{"line":673,"col":2,"offset":17839},"end":{"line":673,"col":6,"offset":17843},"abstract_content":"char"},"$LEN":{"start":{"line":673,"col":22,"offset":17859},"end":{"line":673,"col":41,"offset":17878},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":689,"col":2,"offset":18372},"end":{"line":689,"col":9,"offset":18379},"abstract_content":"sprintf"},"$BUF":{"start":{"line":689,"col":11,"offset":18381},"end":{"line":689,"col":25,"offset":18395},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":689,"col":27,"offset":18397},"end":{"line":689,"col":38,"offset":18408},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b5b779d1e4609ca9e24a81559f5d19ef0c731f573c263f37786604a2719ad2ae7149e18ed713672c73cac42dfa669b6fa2e7010af1676131cd636352ba7977d1_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":710,"col":2,"offset":18942},"end":{"line":712,"col":14,"offset":19044},"extra":{"metavars":{"$EXPR1":{"start":{"line":711,"col":10,"offset":18986},"end":{"line":711,"col":16,"offset":18992},"abstract_content":"status"},"$EXPR2":{"start":{"line":711,"col":19,"offset":18995},"end":{"line":711,"col":38,"offset":19014},"abstract_content":"get_status(handle)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fe709d64747a9d20834958d75cb9581ad5c5cdc0a6f8ef2feff3970e167b8f60228de9f19c1ddebfced036adda23922bcd2ac76b958a8457bc6ddea93b0d2b0d_0","lines":"\tif (do_command (handle, \"S\") == -1\n\t    || (status = get_status (handle), status == -1))\n\t  return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":722,"col":6,"offset":19203},"end":{"line":722,"col":64,"offset":19261},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":722,"col":6,"offset":19203},"end":{"line":722,"col":13,"offset":19210},"abstract_content":"counter"},"$SIGNED":{"start":{"line":722,"col":38,"offset":19235},"end":{"line":722,"col":44,"offset":19241},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"77776b074a7b5019155b1b2b60cee3794852364579bf904c332e5c3f37df9c7761596085711f2a4185f88850e5a7ffd1ddf63cbeea773e6726ee61fd74fa8b22_0","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":722,"col":16,"offset":19213},"end":{"line":722,"col":64,"offset":19261},"extra":{"metavars":{"$FUN":{"start":{"line":722,"col":16,"offset":19213},"end":{"line":722,"col":25,"offset":19222},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3beb299abdd3c263a106bd35852a834a624085da9f018381e687306d4d638dcc3c6e808d4ecf39a3dca3778c34245420a87a2359ecde97703e2df0599c973b00_3","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":738,"col":7,"offset":19710},"end":{"line":738,"col":18,"offset":19721},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":738,"col":7,"offset":19710},"end":{"line":738,"col":14,"offset":19717},"abstract_content":"counter"},"$SIGNED":{"start":{"line":738,"col":17,"offset":19720},"end":{"line":738,"col":18,"offset":19721},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3f8aa315e4e2a9627729425f42bdebdadf7e7d5bb8c4a606364af5fd2dd0ee84e637185e803d0ac4f929379dc5a2e4b49eccbc2d6925a3f20be3bb6845c11134_1","lines":"\tfor (counter = 0; counter < status; counter += 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":66,"col":7,"offset":1850},"end":{"line":66,"col":62,"offset":1905},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ca6c2b5ce05fedb48d1738b28dfed3e844162fcb5c4d9b18e9a93ee0cadba68cbdeef07efbcb94d237e8f9749cb51f503aaa1f2729ebddb958c1be400a15b3cb_0","lines":"      fprintf (tty_out, _(\"rename %s -> \"), file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":68,"col":17,"offset":1947},"end":{"line":68,"col":45,"offset":1975},"extra":{"metavars":{"$1":{"start":{"line":1,"col":8,"offset":7},"end":{"line":1,"col":9,"offset":8},"abstract_content":"s"},"$FUN":{"start":{"line":68,"col":17,"offset":1947},"end":{"line":68,"col":25,"offset":1955},"abstract_content":"ds_fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"265c4be2709cb92b3ac43bc1f74b2e34034cf5aa36e106cd79b6f91389c1a9aca9cd9181a66ecc0253a2aeb9e8629ba00ab5e46e37dc7e2710c48ddf9d6fdb64_0","lines":"      str_res = ds_fgets (tty_in, &new_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":120,"col":19,"offset":3262},"end":{"line":120,"col":53,"offset":3296},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":19,"offset":3262},"end":{"line":120,"col":26,"offset":3269},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f92753233992f9a5427072b3bd2a311f5c7f63799ca60a7ff347080d301cfe9afa95fbc5a163ab48787b6fb4e68948e7de837664f70a9e070ce22d3e6d1376c_0","lines":"      link_name = xmalloc (file_hdr->c_filesize + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":121,"col":7,"offset":3304},"end":{"line":121,"col":72,"offset":3369},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":7,"offset":3304},"end":{"line":121,"col":25,"offset":3322},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_0","lines":"      tape_buffered_read (link_name, in_file_des, file_hdr->c_filesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":142,"col":5,"offset":3885},"end":{"line":142,"col":22,"offset":3902},"extra":{"metavars":{"$PTR":{"start":{"line":142,"col":11,"offset":3891},"end":{"line":142,"col":20,"offset":3900},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":138,"col":26,"offset":3777},"svalue_end":{"line":138,"col":63,"offset":3814},"svalue_abstract_content":"get_link_name(file_hdr in_file_des)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c674dcffbba604b7537fa29d7552ee647bea6803fcfd2039c74c32b678eca7e510c0de6c2e4bf92afa38de0661bf336b95064ab5b85090b0dc73dfe8fe59a5d_0","lines":"\t\t  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":186,"col":7,"offset":4864},"end":{"line":186,"col":43,"offset":4900},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f3ee561ff3d2673ac73fbbdc96b75bd57232a728473d627656bd936bf1b97201f9b728a279f18ce1555779378ac80dd1c1bec737a517577e0f36ad42c04e40a5_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":186,"col":7,"offset":4864},"end":{"line":186,"col":43,"offset":4900},"extra":{"metavars":{"$FUN":{"start":{"line":186,"col":7,"offset":4864},"end":{"line":186,"col":12,"offset":4869},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79b1641751cedae09dd97ea8bc53020e57ee058791e71ee96a5bf0caafc57a0f8d7e23da48f79f5e4bf33483f12581045b20986bafe2e46f37c984fb7510b740_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":208,"col":5,"offset":5579},"end":{"line":208,"col":30,"offset":5604},"extra":{"metavars":{"$FUN":{"start":{"line":208,"col":5,"offset":5579},"end":{"line":208,"col":11,"offset":5585},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1dcfa0b43a39c0f3ae2f1cef4bd6f0e91b52c8eca7c85c35e6551a2d9a4f2beb87cdf267c46436efd57e2ed71d428f26f64252f190052715bebe8a8d5bceaa09_0","lines":"\t\t: unlink (file_hdr->c_name))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":366,"col":22,"offset":10005},"end":{"line":367,"col":43,"offset":10071},"extra":{"metavars":{"$FUN":{"start":{"line":366,"col":22,"offset":10005},"end":{"line":366,"col":26,"offset":10009},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a53a87de3996a3d1470627b11c4a9fc00c8c658be766c238379531427de93724d8638873249ba23cd37e499a6891b174bd86a94cc9c090c04e5eceecb1068a86_0","lines":"      out_file_des = open (d->header.c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":371,"col":19,"offset":10187},"end":{"line":373,"col":16,"offset":10267},"extra":{"metavars":{"$FUN":{"start":{"line":371,"col":19,"offset":10187},"end":{"line":371,"col":23,"offset":10191},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a53a87de3996a3d1470627b11c4a9fc00c8c658be766c238379531427de93724d8638873249ba23cd37e499a6891b174bd86a94cc9c090c04e5eceecb1068a86_1","lines":"\t  out_file_des = open (d->header.c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":419,"col":8,"offset":11602},"end":{"line":419,"col":31,"offset":11625},"extra":{"metavars":{"$3":{"start":{"line":1,"col":11,"offset":10},"end":{"line":1,"col":13,"offset":12},"abstract_content":"in"},"$FUN":{"start":{"line":419,"col":8,"offset":11602},"end":{"line":419,"col":20,"offset":11614},"abstract_content":"defer_copyin"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9818a09ee0f0f87740f11ee88d2a0b1fee1baf5cd708cf31b0b933b1536e695daca783920c66f4cbd01cabf04a3d7dadc76501b404548fae9ccf7c2120811058_0","lines":"\t      defer_copyin (file_hdr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":474,"col":22,"offset":13524},"end":{"line":475,"col":43,"offset":13590},"extra":{"metavars":{"$FUN":{"start":{"line":474,"col":22,"offset":13524},"end":{"line":474,"col":26,"offset":13528},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a53a87de3996a3d1470627b11c4a9fc00c8c658be766c238379531427de93724d8638873249ba23cd37e499a6891b174bd86a94cc9c090c04e5eceecb1068a86_2","lines":"      out_file_des = open (file_hdr->c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":480,"col":19,"offset":13709},"end":{"line":482,"col":16,"offset":13789},"extra":{"metavars":{"$FUN":{"start":{"line":480,"col":19,"offset":13709},"end":{"line":480,"col":23,"offset":13713},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a53a87de3996a3d1470627b11c4a9fc00c8c658be766c238379531427de93724d8638873249ba23cd37e499a6891b174bd86a94cc9c090c04e5eceecb1068a86_3","lines":"\t  out_file_des = open (file_hdr->c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":611,"col":12,"offset":17430},"end":{"line":611,"col":46,"offset":17464},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":611,"col":12,"offset":17430},"end":{"line":611,"col":17,"offset":17435},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b15b7ac8f34096f72b4d966e215348920ad95647a1189373bd3fdbbdd5775f21a96ed3fe2f01764e512753f454ccf9860ad0dbe967e75f7103fa5968747eb51f_0","lines":"      if ((chown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":616,"col":7,"offset":17624},"end":{"line":616,"col":49,"offset":17666},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":616,"col":7,"offset":17624},"end":{"line":616,"col":12,"offset":17629},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ed25556161fa037c19f78cffb1c73d409b525bfeca7f4d823db3db73e3f640f7aa1397cc153c935ecf010c25692a64938ea00135c35b98c22b770ae4ac89427_0","lines":"  if (chmod (file_hdr->c_name, file_hdr->c_mode) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":661,"col":7,"offset":18993},"end":{"line":661,"col":24,"offset":19010},"extra":{"metavars":{"$PTR":{"start":{"line":661,"col":13,"offset":18999},"end":{"line":661,"col":22,"offset":19008},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c674dcffbba604b7537fa29d7552ee647bea6803fcfd2039c74c32b678eca7e510c0de6c2e4bf92afa38de0661bf336b95064ab5b85090b0dc73dfe8fe59a5d_1","lines":"      free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":668,"col":12,"offset":19198},"end":{"line":668,"col":47,"offset":19233},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":668,"col":12,"offset":19198},"end":{"line":668,"col":18,"offset":19204},"abstract_content":"lchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d4acfd376a900e1a59ead2c9327341b82f564a5fc13c62fd0fc4dcea88ebc4f963ec47538f948411d68d6ea47f1cdf329e1b907636f3c030bd961d1b9fdc6cc1_0","lines":"      if ((lchown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":672,"col":3,"offset":19322},"end":{"line":672,"col":20,"offset":19339},"extra":{"metavars":{"$PTR":{"start":{"line":672,"col":9,"offset":19328},"end":{"line":672,"col":18,"offset":19337},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c674dcffbba604b7537fa29d7552ee647bea6803fcfd2039c74c32b678eca7e510c0de6c2e4bf92afa38de0661bf336b95064ab5b85090b0dc73dfe8fe59a5d_2","lines":"  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":708,"col":7,"offset":20014},"end":{"line":708,"col":42,"offset":20049},"extra":{"metavars":{"$FUN":{"start":{"line":708,"col":7,"offset":20014},"end":{"line":708,"col":18,"offset":20025},"abstract_content":"copyin_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c93772587c72626c2975f9715112ce2b5b03f7836ad5bdd552e57271550e9b1786db685a0d7e7a93a638544e8f8f3178e8020076f3e932c839cbc05f45aef8d_0","lines":"      copyin_link (file_hdr, in_file_des);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":740,"col":3,"offset":20765},"end":{"line":740,"col":31,"offset":20793},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"18023b1e661976b6cb3937155842039a6028c55dba33df766e107fc73e51289b501fe76d36cf3083a70ed60ee30aa5f9ee5bcb72be98829e0ba7e0c5cc06b22b_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":740,"col":3,"offset":20765},"end":{"line":740,"col":31,"offset":20793},"extra":{"metavars":{"$FUN":{"start":{"line":740,"col":3,"offset":20765},"end":{"line":740,"col":9,"offset":20771},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b65a39e6f2fda0c128053d4dab8b268253cbcfedb556298d540821385206474817b52b0c5a7d3aa3726ef650bccf0fb9a95f90df4ad9476b01239919221ae75_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":740,"col":3,"offset":20765},"end":{"line":740,"col":31,"offset":20793},"extra":{"metavars":{"$TYPE":{"start":{"line":732,"col":3,"offset":20603},"end":{"line":732,"col":7,"offset":20607},"abstract_content":"char"},"$LEN":{"start":{"line":732,"col":13,"offset":20613},"end":{"line":732,"col":15,"offset":20615},"abstract_content":"40"},"$FUN":{"start":{"line":740,"col":3,"offset":20765},"end":{"line":740,"col":9,"offset":20771},"abstract_content":"strcpy"},"$BUF":{"start":{"line":740,"col":11,"offset":20773},"end":{"line":740,"col":15,"offset":20777},"abstract_content":"tbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"42c3f699a2f6d32556035a867ad29b71c2e792fabb6f676719249cbe2ccf63d71ac0f1637d55ed69ed58392407799a1a48ef7b2ec763eea4dd4c67425a71a0c5_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":746,"col":7,"offset":21005},"end":{"line":746,"col":36,"offset":21034},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"18023b1e661976b6cb3937155842039a6028c55dba33df766e107fc73e51289b501fe76d36cf3083a70ed60ee30aa5f9ee5bcb72be98829e0ba7e0c5cc06b22b_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":746,"col":7,"offset":21005},"end":{"line":746,"col":36,"offset":21034},"extra":{"metavars":{"$FUN":{"start":{"line":746,"col":7,"offset":21005},"end":{"line":746,"col":13,"offset":21011},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9b65a39e6f2fda0c128053d4dab8b268253cbcfedb556298d540821385206474817b52b0c5a7d3aa3726ef650bccf0fb9a95f90df4ad9476b01239919221ae75_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":794,"col":33,"offset":22276},"end":{"line":794,"col":77,"offset":22320},"extra":{"metavars":{"$FUN":{"start":{"line":794,"col":33,"offset":22276},"end":{"line":794,"col":40,"offset":22283},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0f92753233992f9a5427072b3bd2a311f5c7f63799ca60a7ff347080d301cfe9afa95fbc5a163ab48787b6fb4e68948e7de837664f70a9e070ce22d3e6d1376c_1","lines":"  new_save_patterns = (char **) xmalloc (max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":798,"col":16,"offset":22405},"end":{"line":798,"col":46,"offset":22435},"extra":{"metavars":{"$FUN":{"start":{"line":798,"col":16,"offset":22405},"end":{"line":798,"col":21,"offset":22410},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"589d2faeb6b66ff0520aead337575bec5d73486ee1e25f74ff2673234e6870cf32741997d72e4657db2974cbb5bd734b6de8ddc74536b2b0cb7099e8036661e8_0","lines":"  pattern_fp = fopen (pattern_file_name, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":807,"col":6,"offset":22683},"end":{"line":808,"col":44,"offset":22764},"extra":{"metavars":{"$FUN":{"start":{"line":807,"col":6,"offset":22683},"end":{"line":807,"col":14,"offset":22691},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6ca7cc2a5f8b44f5fa5377afa5dd6092a7e06d2bf6fb21900aaefb3f73fd64bcb32cb6cf0040d1af7da1709583c8780b9df51df3943eadf9fb887f89416ace8a_0","lines":"\t    xrealloc ((char *) new_save_patterns,\n\t\t      max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":918,"col":9,"offset":25365},"end":{"line":930,"col":7,"offset":25643},"extra":{"metavars":{"$EXPR1":{"start":{"line":919,"col":10,"offset":25398},"end":{"line":919,"col":19,"offset":25407},"abstract_content":"check_tar"},"$EXPR2":{"start":{"line":919,"col":22,"offset":25410},"end":{"line":919,"col":46,"offset":25434},"abstract_content":"is_tar_header(tmpbuf.s)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4139b65794205a082a2bbd35cc2e8289d18e5ce95b1814eff52c04f53070538c738f57e9849abab50a6f114152eac562961f95ee6af9f6bd9c0fbe46898ecc0_0","lines":"\t  else if (peeked_bytes >= 512\n\t\t   && (check_tar = is_tar_header (tmpbuf.s)))\n\t    {\n\t      if (check_tar == 2)\n\t\tarchive_format = arf_ustar;\n\t      else\n\t\tarchive_format = arf_tar;\n\t    }\n\t  else\n\t    {\n\t      tape_buffered_read (tmpbuf.s, in_des, 1L);\n\t      ++bytes_skipped;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":928,"col":8,"offset":25570},"end":{"line":928,"col":49,"offset":25611},"extra":{"metavars":{"$FUN":{"start":{"line":928,"col":8,"offset":25570},"end":{"line":928,"col":26,"offset":25588},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_1","lines":"\t      tape_buffered_read (tmpbuf.s, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":948,"col":3,"offset":25995},"end":{"line":948,"col":61,"offset":26053},"extra":{"metavars":{"$FUN":{"start":{"line":948,"col":3,"offset":25995},"end":{"line":948,"col":21,"offset":26013},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_2","lines":"  tape_buffered_read (magic.str, in_des, sizeof (magic.str));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":993,"col":7,"offset":27352},"end":{"line":993,"col":65,"offset":27410},"extra":{"metavars":{"$FUN":{"start":{"line":993,"col":7,"offset":27352},"end":{"line":993,"col":14,"offset":27359},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c603e7d19bc2e90e65049dbbb2ebc27e7a70b67b3f75f95acb1013a4b49b45792297146001187cfd5fa1abd79777e5d855a7cf082a6b4698e4848f0067085852_0","lines":"      memmove (magic.str, magic.str + 1, sizeof (magic.str) - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":994,"col":7,"offset":27418},"end":{"line":994,"col":74,"offset":27485},"extra":{"metavars":{"$FUN":{"start":{"line":994,"col":7,"offset":27418},"end":{"line":994,"col":25,"offset":27436},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_3","lines":"      tape_buffered_read (magic.str + sizeof (magic.str) - 1, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1002,"col":3,"offset":27628},"end":{"line":1002,"col":49,"offset":27674},"extra":{"metavars":{"$FUN":{"start":{"line":1002,"col":3,"offset":27628},"end":{"line":1002,"col":21,"offset":27646},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_4","lines":"  tape_buffered_read (file_hdr->c_name, fd, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1016,"col":3,"offset":28011},"end":{"line":1017,"col":59,"offset":28117},"extra":{"metavars":{"$FUN":{"start":{"line":1016,"col":3,"offset":28011},"end":{"line":1016,"col":21,"offset":28029},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_5","lines":"  tape_buffered_read (ascii_header.c_dev, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1074,"col":3,"offset":29938},"end":{"line":1075,"col":59,"offset":30044},"extra":{"metavars":{"$FUN":{"start":{"line":1074,"col":3,"offset":29938},"end":{"line":1074,"col":21,"offset":29956},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_6","lines":"  tape_buffered_read (ascii_header.c_ino, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1108,"col":3,"offset":31375},"end":{"line":1109,"col":42,"offset":31470},"extra":{"metavars":{"$FUN":{"start":{"line":1108,"col":3,"offset":31375},"end":{"line":1108,"col":21,"offset":31393},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1ce803a9a2ce7756e714d682226ca6087eae33fe3766780cbfa061d97453133f0afaed54e946062401b5a257f258d884964c7fe3b73946033aadde393b55ec2_7","lines":"  tape_buffered_read (((char *) short_hdr) + 6, in_des,\n\t\t      sizeof *short_hdr - 6 /* = 20 */);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1118,"col":11,"offset":31739},"end":{"line":1118,"col":22,"offset":31750},"extra":{"metavars":{"$EXPR":{"start":{"line":1118,"col":11,"offset":31739},"end":{"line":1118,"col":17,"offset":31745},"abstract_content":"warned","propagated_value":{"svalue_start":{"line":1114,"col":27,"offset":31632},"svalue_end":{"line":1114,"col":28,"offset":31633},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e6803a8c345b82e765764eedd555eff8d12719485fb4d9fd51273af06e19260d4c340be007e34564437c35b17f81923ea350a265cde4766ddf1d3de707d7a0b7_0","lines":"      if (warned == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1223,"col":19,"offset":34889},"end":{"line":1223,"col":49,"offset":34919},"extra":{"metavars":{"$FUN":{"start":{"line":1223,"col":19,"offset":34889},"end":{"line":1223,"col":24,"offset":34894},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"589d2faeb6b66ff0520aead337575bec5d73486ee1e25f74ff2673234e6870cf32741997d72e4657db2974cbb5bd734b6de8ddc74536b2b0cb7099e8036661e8_1","lines":"      rename_in = fopen (rename_batch_file, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1232,"col":16,"offset":35114},"end":{"line":1232,"col":37,"offset":35135},"extra":{"metavars":{"$FUN":{"start":{"line":1232,"col":16,"offset":35114},"end":{"line":1232,"col":21,"offset":35119},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"589d2faeb6b66ff0520aead337575bec5d73486ee1e25f74ff2673234e6870cf32741997d72e4657db2974cbb5bd734b6de8ddc74536b2b0cb7099e8036661e8_2","lines":"      tty_in = fopen (TTY_NAME, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1237,"col":17,"offset":35230},"end":{"line":1237,"col":38,"offset":35251},"extra":{"metavars":{"$FUN":{"start":{"line":1237,"col":17,"offset":35230},"end":{"line":1237,"col":22,"offset":35235},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"589d2faeb6b66ff0520aead337575bec5d73486ee1e25f74ff2673234e6870cf32741997d72e4657db2974cbb5bd734b6de8ddc74536b2b0cb7099e8036661e8_3","lines":"      tty_out = fopen (TTY_NAME, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1259,"col":11,"offset":35687},"end":{"line":1259,"col":42,"offset":35718},"extra":{"metavars":{"$FUN":{"start":{"line":1259,"col":11,"offset":35687},"end":{"line":1259,"col":16,"offset":35692},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b88412180d9c8f6831583c5dab41388bc4b11ceb97638f15b753e212bd71e9cc3648b16deb468ebbe64e6e1e72ba25549fa0633aa2904422f2e7fd4f90d63491_0","lines":"      if (fstat (in_file_des, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1288,"col":4,"offset":36504},"end":{"line":1290,"col":55,"offset":36637},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":58,"offset":57},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""},"$ARG1":{"start":{"line":1288,"col":13,"offset":36513},"end":{"line":1288,"col":19,"offset":36519},"abstract_content":"stderr"},"$FMT":{"start":{"line":1289,"col":3,"offset":36524},"end":{"line":1289,"col":60,"offset":36581},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"919030dd4b719d9698712f4fb4e7eb347ec54b9e19581bd40673532a38c90cde9df228573394f0d08044edd8b0a1c43a7890c0f2065e128edff6ad6179a662de_0","lines":"\t  fprintf (stderr, \n\t\t\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\",\n\t\th->c_nlink, h->c_mtime, h->c_filesize, h->c_dev_maj);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1291,"col":4,"offset":36642},"end":{"line":1293,"col":61,"offset":36798},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":68,"offset":67},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""},"$ARG1":{"start":{"line":1291,"col":13,"offset":36651},"end":{"line":1291,"col":19,"offset":36657},"abstract_content":"stderr"},"$FMT":{"start":{"line":1292,"col":10,"offset":36669},"end":{"line":1292,"col":77,"offset":36736},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ad51ea9e90094e894f605b293a4450068f8979bbd384ca7f9f144aab5c8c601fdcaa80d4e00d20e4d663f152feb9333946e1007eda7ad0df94998aaea04e8859_0","lines":"\t  fprintf (stderr, \n\t        \"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\",\n\t\th->c_dev_min, h->c_rdev_maj, h->c_rdev_min, h->c_namesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1399,"col":12,"offset":39658},"end":{"line":1399,"col":63,"offset":39709},"extra":{"metavars":{"$FUN":{"start":{"line":1399,"col":12,"offset":39658},"end":{"line":1399,"col":24,"offset":39670},"abstract_content":"query_rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ffed2b233d126d58941dbc5190d9867e0d35f5bac6c25f574aed61d7231c51d903bf20519a4380ae21c40258b2cd43a5f54f56a86a6369d34827103cd53a06b3_0","lines":"\t      if (query_rename(&file_hdr, tty_in, tty_out, rename_in) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1419,"col":3,"offset":40074},"end":{"line":1419,"col":28,"offset":40099},"extra":{"metavars":{"$FUN":{"start":{"line":1419,"col":3,"offset":40074},"end":{"line":1419,"col":25,"offset":40096},"abstract_content":"apply_delayed_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9aa7d7a81c0f8807b4e6a824d3f17eef96b1edfe2729e16e8ffa6b05c47fdc4ceb3942e0864b88ceb6d717f1b4490b67081686199aeee2e3aeb5066d6a129a76_0","lines":"  apply_delayed_set_stat ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1433,"col":7,"offset":40338},"end":{"line":1433,"col":65,"offset":40396},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1433,"col":7,"offset":40338},"end":{"line":1433,"col":13,"offset":40344},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":1433,"col":47,"offset":40378},"end":{"line":1433,"col":48,"offset":40379},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3b79676a32237c3be1fbdb8858633d686815c989223186d7d215851db73fd2c1c3b0eef11c9a0ed828a2f74207e39dc0431d648142e4c9dfc30a2254e94e7f3_0","lines":"      blocks = (input_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1434,"col":7,"offset":40404},"end":{"line":1437,"col":32,"offset":40530},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ca6c2b5ce05fedb48d1738b28dfed3e844162fcb5c4d9b18e9a93ee0cadba68cbdeef07efbcb94d237e8f9749cb51f503aaa1f2729ebddb958c1be400a15b3cb_1","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks),\n\t       (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":69,"col":28,"offset":1731},"end":{"line":69,"col":60,"offset":1763},"extra":{"metavars":{"$FUN":{"start":{"line":69,"col":28,"offset":1731},"end":{"line":69,"col":35,"offset":1738},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21348037b5eb81808b97f12197b71be46152c2e4a2ac9157edbe011c3ff3d6034ecff2f4c0ef71eb40f7b4e8fab689e3162a317044dec200e0cd8bdb6c5cccd8_0","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":73,"col":7,"offset":1815},"end":{"line":73,"col":53,"offset":1861},"extra":{"metavars":{"$FUN":{"start":{"line":73,"col":7,"offset":1815},"end":{"line":73,"col":14,"offset":1822},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c72e8090bd129b528714d8921b0af7d1de64e43a04da07964bb446ac2cd21653024e34d62d5824aa43ffb58c7358fccb1dcd87682f007d0ad0f59d0bca33c074_0","lines":"      sprintf (usernum_string, \"%u\", (unsigned) uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":108,"col":28,"offset":2822},"end":{"line":108,"col":60,"offset":2854},"extra":{"metavars":{"$FUN":{"start":{"line":108,"col":28,"offset":2822},"end":{"line":108,"col":35,"offset":2829},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21348037b5eb81808b97f12197b71be46152c2e4a2ac9157edbe011c3ff3d6034ecff2f4c0ef71eb40f7b4e8fab689e3162a317044dec200e0cd8bdb6c5cccd8_1","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":144,"col":28,"offset":3633},"end":{"line":144,"col":60,"offset":3665},"extra":{"metavars":{"$FUN":{"start":{"line":144,"col":28,"offset":3633},"end":{"line":144,"col":35,"offset":3640},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21348037b5eb81808b97f12197b71be46152c2e4a2ac9157edbe011c3ff3d6034ecff2f4c0ef71eb40f7b4e8fab689e3162a317044dec200e0cd8bdb6c5cccd8_2","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":148,"col":7,"offset":3717},"end":{"line":148,"col":58,"offset":3768},"extra":{"metavars":{"$FUN":{"start":{"line":148,"col":7,"offset":3717},"end":{"line":148,"col":14,"offset":3724},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c72e8090bd129b528714d8921b0af7d1de64e43a04da07964bb446ac2cd21653024e34d62d5824aa43ffb58c7358fccb1dcd87682f007d0ad0f59d0bca33c074_1","lines":"      sprintf (groupnum_string, \"%u\", (unsigned int) gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","start":{"line":183,"col":28,"offset":4741},"end":{"line":183,"col":60,"offset":4773},"extra":{"metavars":{"$FUN":{"start":{"line":183,"col":28,"offset":4741},"end":{"line":183,"col":35,"offset":4748},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21348037b5eb81808b97f12197b71be46152c2e4a2ac9157edbe011c3ff3d6034ecff2f4c0ef71eb40f7b4e8fab689e3162a317044dec200e0cd8bdb6c5cccd8_3","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":62,"col":3,"offset":2169},"end":{"line":62,"col":36,"offset":2202},"extra":{"metavars":{"$EXPR1":{"start":{"line":62,"col":21,"offset":2187},"end":{"line":62,"col":30,"offset":2196},"abstract_content":"getuid()"},"$EXPR2":{"start":{"line":62,"col":34,"offset":2200},"end":{"line":62,"col":35,"offset":2201},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2412d97bdcc0ab6ebe97dc1912b2778b3c873141465bc1a474817b0bd360e2b579c4670343f22c1be9a5a095532d278888d4f224d44b273d108998b5c110f598_0","lines":"  int we_are_root = getuid () == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":63,"col":13,"offset":2215},"end":{"line":63,"col":42,"offset":2244},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"9026d0e5f40b0cbe3b40cbb2d30c335edf764f8c38e3d41fd06a7a34d5da81a054f60c7cf5b173d4a3e0242603a7f19ad0240a9535f1536b247736ceed724958_0","lines":"  dirpath = alloca (strlen (argpath) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":63,"col":13,"offset":2215},"end":{"line":63,"col":42,"offset":2244},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":63,"col":13,"offset":2215},"end":{"line":63,"col":19,"offset":2221},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"07c1b23b04b5c0e4e62cb14fb4704e5a452671e2ce4d61cfdcb269d9dcaec5eefc1610419bb6e9189b79f92e377c7883b1ae781face1384bb213814c3e39026b_0","lines":"  dirpath = alloca (strlen (argpath) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":65,"col":3,"offset":2249},"end":{"line":65,"col":28,"offset":2274},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"f5022fffc9bb806b859c86ba8cba66e8a681b2a7a67e613dbcfa1dd376d9acb9ccb6896436e1aab83a5f5bbf974717266a0491da6712a671a185141714779833_0","lines":"  strcpy (dirpath, argpath);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":65,"col":3,"offset":2249},"end":{"line":65,"col":28,"offset":2274},"extra":{"metavars":{"$FUN":{"start":{"line":65,"col":3,"offset":2249},"end":{"line":65,"col":9,"offset":2255},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"753b9ba599e6fb8a0a0ee35f22c3585b49ef3a44eb870b65f5e14ea6de6729c560065df0c2dae9f2cb9e38e13a79c838394dbaa40aeb6842a6ac94426299e3ae_0","lines":"  strcpy (dirpath, argpath);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":67,"col":7,"offset":2283},"end":{"line":67,"col":29,"offset":2305},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cba46bebf23ccd39cc1e9ba7b29f05ed78796777416f47d5d646e8deba9b466009e7481b2ffdedef9a734b0230651d850df42399f08cb6976caa572d6c3b4bf2_0","lines":"  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":67,"col":7,"offset":2283},"end":{"line":67,"col":29,"offset":2305},"extra":{"metavars":{"$FUN":{"start":{"line":67,"col":7,"offset":2283},"end":{"line":67,"col":11,"offset":2287},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8113b4c27da48e000b7d24a9ab5b360ffdc7ef49cccc9c05ae7b210617989a0c7e4190649a8be29353a960da35b54b1ed0faf5edd7bda487cc287d501e2679c9_0","lines":"  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":78,"col":8,"offset":2565},"end":{"line":78,"col":30,"offset":2587},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cba46bebf23ccd39cc1e9ba7b29f05ed78796777416f47d5d646e8deba9b466009e7481b2ffdedef9a734b0230651d850df42399f08cb6976caa572d6c3b4bf2_1","lines":"\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":78,"col":8,"offset":2565},"end":{"line":78,"col":30,"offset":2587},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":8,"offset":2565},"end":{"line":78,"col":12,"offset":2569},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8113b4c27da48e000b7d24a9ab5b360ffdc7ef49cccc9c05ae7b210617989a0c7e4190649a8be29353a960da35b54b1ed0faf5edd7bda487cc287d501e2679c9_1","lines":"\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":80,"col":12,"offset":2607},"end":{"line":80,"col":57,"offset":2652},"extra":{"metavars":{"$FUN":{"start":{"line":80,"col":12,"offset":2607},"end":{"line":80,"col":17,"offset":2612},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db6257d714326972282638f70bc54d71e5fa4543c3f190011f21ccb6c31226e292eabd1151e0b4c44168b73cb40b37abd4b8cc3530738e7d036b741c29d5f66b_0","lines":"\t      if (mkdir (dirpath, tmpmode ^ invert_permissions))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":90,"col":9,"offset":2850},"end":{"line":90,"col":31,"offset":2872},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cba46bebf23ccd39cc1e9ba7b29f05ed78796777416f47d5d646e8deba9b466009e7481b2ffdedef9a734b0230651d850df42399f08cb6976caa572d6c3b4bf2_2","lines":"\t\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":90,"col":9,"offset":2850},"end":{"line":90,"col":31,"offset":2872},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":9,"offset":2850},"end":{"line":90,"col":13,"offset":2854},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8113b4c27da48e000b7d24a9ab5b360ffdc7ef49cccc9c05ae7b210617989a0c7e4190649a8be29353a960da35b54b1ed0faf5edd7bda487cc287d501e2679c9_2","lines":"\t\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":99,"col":9,"offset":3036},"end":{"line":99,"col":61,"offset":3088},"extra":{"metavars":{"$FUN":{"start":{"line":99,"col":9,"offset":3036},"end":{"line":99,"col":23,"offset":3050},"abstract_content":"delay_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d58a4a7e09a7ee88aa7895e83c84a9f43252f81aeef5ad72aecade16f3d8c3aa614d600ee8854a346d3b757dea51ba3b8d0b8902a43b423fde44f2e465f742cc_0","lines":"\t\t      delay_set_stat (dirpath, &stats, invert_permissions);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":120,"col":11,"offset":3524},"end":{"line":120,"col":56,"offset":3569},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":11,"offset":3524},"end":{"line":120,"col":16,"offset":3529},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db6257d714326972282638f70bc54d71e5fa4543c3f190011f21ccb6c31226e292eabd1151e0b4c44168b73cb40b37abd4b8cc3530738e7d036b741c29d5f66b_1","lines":"      if (mkdir (dirpath, tmpmode ^ invert_permissions))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":126,"col":10,"offset":3781},"end":{"line":126,"col":32,"offset":3803},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cba46bebf23ccd39cc1e9ba7b29f05ed78796777416f47d5d646e8deba9b466009e7481b2ffdedef9a734b0230651d850df42399f08cb6976caa572d6c3b4bf2_3","lines":"\t       (stat (dirpath, &stats) != 0) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":126,"col":10,"offset":3781},"end":{"line":126,"col":32,"offset":3803},"extra":{"metavars":{"$FUN":{"start":{"line":126,"col":10,"offset":3781},"end":{"line":126,"col":14,"offset":3785},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8113b4c27da48e000b7d24a9ab5b360ffdc7ef49cccc9c05ae7b210617989a0c7e4190649a8be29353a960da35b54b1ed0faf5edd7bda487cc287d501e2679c9_3","lines":"\t       (stat (dirpath, &stats) != 0) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":133,"col":16,"offset":3967},"end":{"line":133,"col":38,"offset":3989},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cba46bebf23ccd39cc1e9ba7b29f05ed78796777416f47d5d646e8deba9b466009e7481b2ffdedef9a734b0230651d850df42399f08cb6976caa572d6c3b4bf2_4","lines":"      else if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":133,"col":16,"offset":3967},"end":{"line":133,"col":38,"offset":3989},"extra":{"metavars":{"$FUN":{"start":{"line":133,"col":16,"offset":3967},"end":{"line":133,"col":20,"offset":3971},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8113b4c27da48e000b7d24a9ab5b360ffdc7ef49cccc9c05ae7b210617989a0c7e4190649a8be29353a960da35b54b1ed0faf5edd7bda487cc287d501e2679c9_4","lines":"      else if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","start":{"line":142,"col":4,"offset":4129},"end":{"line":142,"col":56,"offset":4181},"extra":{"metavars":{"$FUN":{"start":{"line":142,"col":4,"offset":4129},"end":{"line":142,"col":18,"offset":4143},"abstract_content":"delay_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d58a4a7e09a7ee88aa7895e83c84a9f43252f81aeef5ad72aecade16f3d8c3aa614d600ee8854a346d3b757dea51ba3b8d0b8902a43b423fde44f2e465f742cc_1","lines":"\t  delay_set_stat (dirpath, &stats, invert_permissions);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":126,"col":8,"offset":3446},"end":{"line":126,"col":59,"offset":3497},"extra":{"metavars":{"$EXPR1":{"start":{"line":126,"col":48,"offset":3486},"end":{"line":126,"col":49,"offset":3487},"abstract_content":"g"},"$EXPR2":{"start":{"line":126,"col":53,"offset":3491},"end":{"line":126,"col":57,"offset":3495},"abstract_content":"NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04df7c15783da56dd4e9918d9e372e41eea882be128353f7f34a08e4d823e0c4bdc8bf261a53ddbb7af4c7b156ca0ac1a692de8aa0ee930276a5cf95ddf416e4_0","lines":"\t      use_login_group = (separator != NULL && g == NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":130,"col":10,"offset":3611},"end":{"line":130,"col":18,"offset":3619},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"3574297512fc489e51fb71c3bce28f276b26d4ba005966b4a59520bd570bfe3f6f42db6170b999dac18640984fd4e35c2f4be9af0fd626f343286c449b7b1b81_0","lines":"\t\t*uid = atoi (u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":148,"col":5,"offset":4075},"end":{"line":148,"col":55,"offset":4125},"extra":{"metavars":{"$FUN":{"start":{"line":148,"col":5,"offset":4075},"end":{"line":148,"col":12,"offset":4082},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"07ea20c4a2f71aac826f2817b6d4c954a22ad47476fb870d48a09f12e5133973375057ed75d71ef84d23795b67c0c03fa74ab1e5760b64f1e90d271974e27559_0","lines":"\t\t  sprintf (uint_buf, \"%u\", (unsigned) (pwd->pw_gid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":177,"col":13,"offset":4546},"end":{"line":177,"col":21,"offset":4554},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"3574297512fc489e51fb71c3bce28f276b26d4ba005966b4a59520bd570bfe3f6f42db6170b999dac18640984fd4e35c2f4be9af0fd626f343286c449b7b1b81_1","lines":"\t    *gid = atoi (g);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":196,"col":11,"offset":4859},"end":{"line":196,"col":28,"offset":4876},"extra":{"metavars":{"$EXPR":{"start":{"line":196,"col":11,"offset":4859},"end":{"line":196,"col":20,"offset":4868},"abstract_content":"groupname","propagated_value":{"svalue_start":{"line":85,"col":15,"offset":2621},"svalue_end":{"line":85,"col":19,"offset":2625},"svalue_abstract_content":"NULL"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8e61d7f177276892c5d57527a9912ff25941feac4a00c9224ffd099f1351c7c66647a8794265d1a22c4725f794940f5ca5dccfc15f3ded00a7e158275794ac62_0","lines":"      if (groupname != NULL && error_msg == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":203,"col":5,"offset":5022},"end":{"line":203,"col":26,"offset":5043},"extra":{"metavars":{"$PTR":{"start":{"line":203,"col":11,"offset":5028},"end":{"line":203,"col":24,"offset":5041},"abstract_content":"*username_arg"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ad317b3abfcbfb5243805e2b7be6d831aa4a6bb836dd94af9e343c5525f63065b3e7185d3fd20aacff3626decb879fa424196f3afebef7cd5965053eb5ccd294_0","lines":"\t\t  free (*username_arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":231,"col":7,"offset":5400},"end":{"line":231,"col":29,"offset":5422},"extra":{"metavars":{"$RET":{"start":{"line":231,"col":7,"offset":5400},"end":{"line":231,"col":10,"offset":5403},"abstract_content":"tmp"},"$FUN":{"start":{"line":231,"col":13,"offset":5406},"end":{"line":231,"col":19,"offset":5412},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"23c0c3404d6994e3ab2eaf0c273c3567440f1eebd8884bf37b3d3b0467adae5be8b06b4e5e2b7102a62b78fb71ba8e28c97d5c732c0fadb7ef30f495ecab3f9e_0","lines":"      tmp = strdup (argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":231,"col":21,"offset":5414},"end":{"line":231,"col":25,"offset":5418},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b4b22f90d5f2f17da6cb7bbf22050aa49361bbe69977f10c0860cf109fb923ff15628137ede3694c5bdb9f4f616c407d8462d190c1dc39afc60d0561d401ce11_0","lines":"      tmp = strdup (argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","start":{"line":235,"col":8,"offset":5555},"end":{"line":235,"col":12,"offset":5559},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b4b22f90d5f2f17da6cb7bbf22050aa49361bbe69977f10c0860cf109fb923ff15628137ede3694c5bdb9f4f616c407d8462d190c1dc39afc60d0561d401ce11_1","lines":"\t      argv[i],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":507,"col":10,"offset":12940},"end":{"line":507,"col":23,"offset":12953},"extra":{"metavars":{"$FUN":{"start":{"line":507,"col":10,"offset":12940},"end":{"line":507,"col":16,"offset":12946},"abstract_content":"_mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"073ea9f6385c896e1565e89023596ac7983cd072a90f90c5ab0795d3d7b8fb77f9e3806f9816f04940927aa4f1e87dac3b983ec07525c30df82f76c0c565c542_0","lines":"  return _mkdir (name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":67,"col":7,"offset":1870},"end":{"line":67,"col":62,"offset":1925},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9cd4698439708ee6e5dc2dceed3f8040b63fbacd9f60f380e1eabd564ccf493ce97010cecfb79b376fc03736846a5006d15228d4d2b2b192b14220167aed9908_0","lines":"      fprintf (tty_out, _(\"rename %s -> \"), file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":69,"col":17,"offset":1967},"end":{"line":69,"col":45,"offset":1995},"extra":{"metavars":{"$1":{"start":{"line":1,"col":8,"offset":7},"end":{"line":1,"col":9,"offset":8},"abstract_content":"s"},"$FUN":{"start":{"line":69,"col":17,"offset":1967},"end":{"line":69,"col":25,"offset":1975},"abstract_content":"ds_fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dcfe032981f221b8ebb231e88eaca393f921c337256fb53eec8c5d654f95ea067adb441a4f8b663279d4efb790c70d7f89b1482e196c8f20b54aa3814e5fc03e_0","lines":"      str_res = ds_fgets (tty_in, &new_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":121,"col":19,"offset":3282},"end":{"line":121,"col":53,"offset":3316},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":19,"offset":3282},"end":{"line":121,"col":26,"offset":3289},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b45a46106d910ff79e7ead0e8923daab228af1123415657b5b6a3c9ebee2a113c1a2d633c2a56885083dec76e899fad7e0fde896fab61ac9201afe1d993f196_0","lines":"      link_name = xmalloc (file_hdr->c_filesize + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":122,"col":7,"offset":3324},"end":{"line":122,"col":72,"offset":3389},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":7,"offset":3324},"end":{"line":122,"col":25,"offset":3342},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_0","lines":"      tape_buffered_read (link_name, in_file_des, file_hdr->c_filesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":143,"col":5,"offset":3905},"end":{"line":143,"col":22,"offset":3922},"extra":{"metavars":{"$PTR":{"start":{"line":143,"col":11,"offset":3911},"end":{"line":143,"col":20,"offset":3920},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":139,"col":26,"offset":3797},"svalue_end":{"line":139,"col":63,"offset":3834},"svalue_abstract_content":"get_link_name(file_hdr in_file_des)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"38b71838e47b44c9d6e4f8443800f4e6fdcc8cc7cab70a7001c25a93ae35c6596957e4331d1ab39097c0b68a4d6aa1cdcf7d1c87f344910df6d0a154a02a9d58_0","lines":"\t\t  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":43,"offset":4920},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"ac271988309f9456e76378e0c9aeea943bb6a8dc867f50861711e49453ca6b88f19db18fa1e8538669285c6d81dec7e5295ef10bcce8514919cdf18beef05876_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":43,"offset":4920},"extra":{"metavars":{"$FUN":{"start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":12,"offset":4889},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ae2f3442197c276049a65f5e4971ededf84f26cab85520a8eb94951875a7d4d4b90e88f9ab55454bcaaa4188fece325a228f81e5bdd3bb1b881d14a337a8058_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":209,"col":5,"offset":5599},"end":{"line":209,"col":30,"offset":5624},"extra":{"metavars":{"$FUN":{"start":{"line":209,"col":5,"offset":5599},"end":{"line":209,"col":11,"offset":5605},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"02539c795600d371dd51f594a649209064dd87dbdcd27eb557be65783fcb2a9e3fce20c822d9b558f5565b21b42785f547ebc01d690db07e53ef626456e96cd0_0","lines":"\t\t: unlink (file_hdr->c_name))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":367,"col":22,"offset":10025},"end":{"line":368,"col":43,"offset":10091},"extra":{"metavars":{"$FUN":{"start":{"line":367,"col":22,"offset":10025},"end":{"line":367,"col":26,"offset":10029},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ada4db40c513539c15172d4bec8bb47411372518e5c9ec9fe6571a8979ad9d3712cc210840627eb48d4e3b3405cf3c7fe83788bbd1476728e402829e50e857d_0","lines":"      out_file_des = open (d->header.c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":372,"col":19,"offset":10207},"end":{"line":374,"col":16,"offset":10287},"extra":{"metavars":{"$FUN":{"start":{"line":372,"col":19,"offset":10207},"end":{"line":372,"col":23,"offset":10211},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ada4db40c513539c15172d4bec8bb47411372518e5c9ec9fe6571a8979ad9d3712cc210840627eb48d4e3b3405cf3c7fe83788bbd1476728e402829e50e857d_1","lines":"\t  out_file_des = open (d->header.c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":420,"col":8,"offset":11622},"end":{"line":420,"col":31,"offset":11645},"extra":{"metavars":{"$3":{"start":{"line":1,"col":11,"offset":10},"end":{"line":1,"col":13,"offset":12},"abstract_content":"in"},"$FUN":{"start":{"line":420,"col":8,"offset":11622},"end":{"line":420,"col":20,"offset":11634},"abstract_content":"defer_copyin"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86a1f53ba836b964eaa09fb3f18865527eeee0669dee49cbf83be939a57300189370cdd28683caf1c03469e0edebea326332a581229993ded53016630fc2beb8_0","lines":"\t      defer_copyin (file_hdr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":475,"col":22,"offset":13544},"end":{"line":476,"col":43,"offset":13610},"extra":{"metavars":{"$FUN":{"start":{"line":475,"col":22,"offset":13544},"end":{"line":475,"col":26,"offset":13548},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ada4db40c513539c15172d4bec8bb47411372518e5c9ec9fe6571a8979ad9d3712cc210840627eb48d4e3b3405cf3c7fe83788bbd1476728e402829e50e857d_2","lines":"      out_file_des = open (file_hdr->c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":481,"col":19,"offset":13729},"end":{"line":483,"col":16,"offset":13809},"extra":{"metavars":{"$FUN":{"start":{"line":481,"col":19,"offset":13729},"end":{"line":481,"col":23,"offset":13733},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ada4db40c513539c15172d4bec8bb47411372518e5c9ec9fe6571a8979ad9d3712cc210840627eb48d4e3b3405cf3c7fe83788bbd1476728e402829e50e857d_3","lines":"\t  out_file_des = open (file_hdr->c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":612,"col":12,"offset":17450},"end":{"line":612,"col":46,"offset":17484},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":612,"col":12,"offset":17450},"end":{"line":612,"col":17,"offset":17455},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fa15dc3686de251bc40c92cd69a6c78d366d508f8a867baf6e215bea97556e482e9ad4364e847272baf4f2981cbea6039118f4bf0ee227d12727114793fb3f13_0","lines":"      if ((chown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":617,"col":7,"offset":17644},"end":{"line":617,"col":49,"offset":17686},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":617,"col":7,"offset":17644},"end":{"line":617,"col":12,"offset":17649},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8897f5f9c0fdfe3ba3cb133360b04f0e953eba4507a9e572fbf7c851bcdb519a5d934a3bc206af493fefe5bf8df312fb05b88ad38911e973f6ccbad46baf3c99_0","lines":"  if (chmod (file_hdr->c_name, file_hdr->c_mode) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":662,"col":7,"offset":19013},"end":{"line":662,"col":24,"offset":19030},"extra":{"metavars":{"$PTR":{"start":{"line":662,"col":13,"offset":19019},"end":{"line":662,"col":22,"offset":19028},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"38b71838e47b44c9d6e4f8443800f4e6fdcc8cc7cab70a7001c25a93ae35c6596957e4331d1ab39097c0b68a4d6aa1cdcf7d1c87f344910df6d0a154a02a9d58_1","lines":"      free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":669,"col":12,"offset":19218},"end":{"line":669,"col":47,"offset":19253},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":669,"col":12,"offset":19218},"end":{"line":669,"col":18,"offset":19224},"abstract_content":"lchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ec37b3f07f81a1252c0867f07e87b92499ac9640f661168de48b295b614a4a5b88076d41c2c6eefc3438fbdd3dd9b0db97726e048dfffbd62ef549c98090d581_0","lines":"      if ((lchown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":673,"col":3,"offset":19342},"end":{"line":673,"col":20,"offset":19359},"extra":{"metavars":{"$PTR":{"start":{"line":673,"col":9,"offset":19348},"end":{"line":673,"col":18,"offset":19357},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"38b71838e47b44c9d6e4f8443800f4e6fdcc8cc7cab70a7001c25a93ae35c6596957e4331d1ab39097c0b68a4d6aa1cdcf7d1c87f344910df6d0a154a02a9d58_2","lines":"  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":709,"col":7,"offset":20034},"end":{"line":709,"col":42,"offset":20069},"extra":{"metavars":{"$FUN":{"start":{"line":709,"col":7,"offset":20034},"end":{"line":709,"col":18,"offset":20045},"abstract_content":"copyin_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d8023035c6ceb8ca7ef2dc2987083cfd047c1f081f2f9dd59d480bdd5c12f256e4500aab3f5386c82a6fba82cba6d67ac75674834d093dec90ca0c06e2d9d45b_0","lines":"      copyin_link (file_hdr, in_file_des);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":741,"col":3,"offset":20785},"end":{"line":741,"col":31,"offset":20813},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6fa8e0806f0cef5271732fcc100c217197565420a4d0d6caef11e243c8547a2ef8e08e6767bcd8aead198caafed4724f83ef63c7c8f44d4513ffc9e425c4d639_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":741,"col":3,"offset":20785},"end":{"line":741,"col":31,"offset":20813},"extra":{"metavars":{"$FUN":{"start":{"line":741,"col":3,"offset":20785},"end":{"line":741,"col":9,"offset":20791},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"137e43ac198f30369f80ef85a13e47174987f0278b128dce5192b6be794a63c05693b624a47f897b45f51ee2f330fa0a946f2863e1e0a26bb406be0d5cccc151_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":741,"col":3,"offset":20785},"end":{"line":741,"col":31,"offset":20813},"extra":{"metavars":{"$TYPE":{"start":{"line":733,"col":3,"offset":20623},"end":{"line":733,"col":7,"offset":20627},"abstract_content":"char"},"$LEN":{"start":{"line":733,"col":13,"offset":20633},"end":{"line":733,"col":15,"offset":20635},"abstract_content":"40"},"$FUN":{"start":{"line":741,"col":3,"offset":20785},"end":{"line":741,"col":9,"offset":20791},"abstract_content":"strcpy"},"$BUF":{"start":{"line":741,"col":11,"offset":20793},"end":{"line":741,"col":15,"offset":20797},"abstract_content":"tbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"172cf0fbe623d864275ffd3bc8da88ec7a96edc337f5d4752047b727620f11e25b9a2558d4bf8e06f4e8a596f9266b0f98cd7c517c7e576d719f5eb7be7b3b49_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":747,"col":7,"offset":21025},"end":{"line":747,"col":36,"offset":21054},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6fa8e0806f0cef5271732fcc100c217197565420a4d0d6caef11e243c8547a2ef8e08e6767bcd8aead198caafed4724f83ef63c7c8f44d4513ffc9e425c4d639_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":747,"col":7,"offset":21025},"end":{"line":747,"col":36,"offset":21054},"extra":{"metavars":{"$FUN":{"start":{"line":747,"col":7,"offset":21025},"end":{"line":747,"col":13,"offset":21031},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"137e43ac198f30369f80ef85a13e47174987f0278b128dce5192b6be794a63c05693b624a47f897b45f51ee2f330fa0a946f2863e1e0a26bb406be0d5cccc151_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":795,"col":33,"offset":22296},"end":{"line":795,"col":77,"offset":22340},"extra":{"metavars":{"$FUN":{"start":{"line":795,"col":33,"offset":22296},"end":{"line":795,"col":40,"offset":22303},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b45a46106d910ff79e7ead0e8923daab228af1123415657b5b6a3c9ebee2a113c1a2d633c2a56885083dec76e899fad7e0fde896fab61ac9201afe1d993f196_1","lines":"  new_save_patterns = (char **) xmalloc (max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":799,"col":16,"offset":22425},"end":{"line":799,"col":46,"offset":22455},"extra":{"metavars":{"$FUN":{"start":{"line":799,"col":16,"offset":22425},"end":{"line":799,"col":21,"offset":22430},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b597113904c9d894d40144b7a0ac3ff2a22a7869d0ee0800aa1d50cd55849fc9145084f9d776b9d9989c64f02a2e829569d61c6d98f673b5b9f87fededf771dc_0","lines":"  pattern_fp = fopen (pattern_file_name, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":808,"col":6,"offset":22703},"end":{"line":809,"col":44,"offset":22784},"extra":{"metavars":{"$FUN":{"start":{"line":808,"col":6,"offset":22703},"end":{"line":808,"col":14,"offset":22711},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a96d25b9db27fe00cb93d1f4d44ee9b5e1e5801b443ca9ce070f7ec687f1ac1382c5440749ea9f0ccb337c390ea32ca46de8b8733f26076a2ec2034d5bfd3bf7_0","lines":"\t    xrealloc ((char *) new_save_patterns,\n\t\t      max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":919,"col":9,"offset":25385},"end":{"line":931,"col":7,"offset":25663},"extra":{"metavars":{"$EXPR1":{"start":{"line":920,"col":10,"offset":25418},"end":{"line":920,"col":19,"offset":25427},"abstract_content":"check_tar"},"$EXPR2":{"start":{"line":920,"col":22,"offset":25430},"end":{"line":920,"col":46,"offset":25454},"abstract_content":"is_tar_header(tmpbuf.s)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a75866df957de314c7d6aa2845b91093449fbdbfaa1d2665b412a2b81e9554e65d3b64da5de562c97bb545a59273c5cecd33c4edca4bdb71bddfffddbee13926_0","lines":"\t  else if (peeked_bytes >= 512\n\t\t   && (check_tar = is_tar_header (tmpbuf.s)))\n\t    {\n\t      if (check_tar == 2)\n\t\tarchive_format = arf_ustar;\n\t      else\n\t\tarchive_format = arf_tar;\n\t    }\n\t  else\n\t    {\n\t      tape_buffered_read (tmpbuf.s, in_des, 1L);\n\t      ++bytes_skipped;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":929,"col":8,"offset":25590},"end":{"line":929,"col":49,"offset":25631},"extra":{"metavars":{"$FUN":{"start":{"line":929,"col":8,"offset":25590},"end":{"line":929,"col":26,"offset":25608},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_1","lines":"\t      tape_buffered_read (tmpbuf.s, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":949,"col":3,"offset":26015},"end":{"line":949,"col":61,"offset":26073},"extra":{"metavars":{"$FUN":{"start":{"line":949,"col":3,"offset":26015},"end":{"line":949,"col":21,"offset":26033},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_2","lines":"  tape_buffered_read (magic.str, in_des, sizeof (magic.str));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":994,"col":7,"offset":27372},"end":{"line":994,"col":65,"offset":27430},"extra":{"metavars":{"$FUN":{"start":{"line":994,"col":7,"offset":27372},"end":{"line":994,"col":14,"offset":27379},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d319b5c39ecc0ad3a24f5e5ca8641abd766c7ba31901721105724d1ec00a8418f6d61ffe7eee6e0ff275abf1982f08733d728cbbbfce9f190e38381f1f2263bb_0","lines":"      memmove (magic.str, magic.str + 1, sizeof (magic.str) - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":995,"col":7,"offset":27438},"end":{"line":995,"col":74,"offset":27505},"extra":{"metavars":{"$FUN":{"start":{"line":995,"col":7,"offset":27438},"end":{"line":995,"col":25,"offset":27456},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_3","lines":"      tape_buffered_read (magic.str + sizeof (magic.str) - 1, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1003,"col":3,"offset":27648},"end":{"line":1003,"col":49,"offset":27694},"extra":{"metavars":{"$FUN":{"start":{"line":1003,"col":3,"offset":27648},"end":{"line":1003,"col":21,"offset":27666},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_4","lines":"  tape_buffered_read (file_hdr->c_name, fd, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1017,"col":3,"offset":28031},"end":{"line":1018,"col":59,"offset":28137},"extra":{"metavars":{"$FUN":{"start":{"line":1017,"col":3,"offset":28031},"end":{"line":1017,"col":21,"offset":28049},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_5","lines":"  tape_buffered_read (ascii_header.c_dev, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1075,"col":3,"offset":29958},"end":{"line":1076,"col":59,"offset":30064},"extra":{"metavars":{"$FUN":{"start":{"line":1075,"col":3,"offset":29958},"end":{"line":1075,"col":21,"offset":29976},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_6","lines":"  tape_buffered_read (ascii_header.c_ino, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1109,"col":3,"offset":31395},"end":{"line":1110,"col":42,"offset":31490},"extra":{"metavars":{"$FUN":{"start":{"line":1109,"col":3,"offset":31395},"end":{"line":1109,"col":21,"offset":31413},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63bacc3d8e61892ce89407532325ceaf9b38a4b80ac776e72a3b1c337bf02bde6595a02d9f3d2ede0fa8178e7c53446f6960efa25b438dc41c6c849c44b9912d_7","lines":"  tape_buffered_read (((char *) short_hdr) + 6, in_des,\n\t\t      sizeof *short_hdr - 6 /* = 20 */);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1119,"col":11,"offset":31759},"end":{"line":1119,"col":22,"offset":31770},"extra":{"metavars":{"$EXPR":{"start":{"line":1119,"col":11,"offset":31759},"end":{"line":1119,"col":17,"offset":31765},"abstract_content":"warned","propagated_value":{"svalue_start":{"line":1115,"col":27,"offset":31652},"svalue_end":{"line":1115,"col":28,"offset":31653},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"56ea438c927f434f89bdd690da87eab7855ec28310fa49a24479b8e54ca7722978b68504652dc82dce4c2aa15fe5ab1b4609e9e9ea5d6d8b89d95f0eacc55fb4_0","lines":"      if (warned == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1224,"col":19,"offset":34909},"end":{"line":1224,"col":49,"offset":34939},"extra":{"metavars":{"$FUN":{"start":{"line":1224,"col":19,"offset":34909},"end":{"line":1224,"col":24,"offset":34914},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b597113904c9d894d40144b7a0ac3ff2a22a7869d0ee0800aa1d50cd55849fc9145084f9d776b9d9989c64f02a2e829569d61c6d98f673b5b9f87fededf771dc_1","lines":"      rename_in = fopen (rename_batch_file, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1233,"col":16,"offset":35134},"end":{"line":1233,"col":37,"offset":35155},"extra":{"metavars":{"$FUN":{"start":{"line":1233,"col":16,"offset":35134},"end":{"line":1233,"col":21,"offset":35139},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b597113904c9d894d40144b7a0ac3ff2a22a7869d0ee0800aa1d50cd55849fc9145084f9d776b9d9989c64f02a2e829569d61c6d98f673b5b9f87fededf771dc_2","lines":"      tty_in = fopen (TTY_NAME, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1238,"col":17,"offset":35250},"end":{"line":1238,"col":38,"offset":35271},"extra":{"metavars":{"$FUN":{"start":{"line":1238,"col":17,"offset":35250},"end":{"line":1238,"col":22,"offset":35255},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b597113904c9d894d40144b7a0ac3ff2a22a7869d0ee0800aa1d50cd55849fc9145084f9d776b9d9989c64f02a2e829569d61c6d98f673b5b9f87fededf771dc_3","lines":"      tty_out = fopen (TTY_NAME, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1260,"col":11,"offset":35707},"end":{"line":1260,"col":42,"offset":35738},"extra":{"metavars":{"$FUN":{"start":{"line":1260,"col":11,"offset":35707},"end":{"line":1260,"col":16,"offset":35712},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b57fb482e28a4bd00be638bfae94e8792ef713f3ca3381e964e43d017874b346550721585b75df8578e92fbe074dd3dfa21b02b184b0e054f50fd21815da7695_0","lines":"      if (fstat (in_file_des, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1289,"col":4,"offset":36524},"end":{"line":1291,"col":55,"offset":36657},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":58,"offset":57},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""},"$ARG1":{"start":{"line":1289,"col":13,"offset":36533},"end":{"line":1289,"col":19,"offset":36539},"abstract_content":"stderr"},"$FMT":{"start":{"line":1290,"col":3,"offset":36544},"end":{"line":1290,"col":60,"offset":36601},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1250cdfefd38a9a926d477641cbd2b66a94782981638b95f28e69f27c64965b8cf86a9dc136cd4830909a27aa1a26dd0f1498563acb2b1541c9e1481ccf91fab_0","lines":"\t  fprintf (stderr, \n\t\t\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\",\n\t\th->c_nlink, h->c_mtime, h->c_filesize, h->c_dev_maj);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1292,"col":4,"offset":36662},"end":{"line":1294,"col":61,"offset":36818},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":68,"offset":67},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""},"$ARG1":{"start":{"line":1292,"col":13,"offset":36671},"end":{"line":1292,"col":19,"offset":36677},"abstract_content":"stderr"},"$FMT":{"start":{"line":1293,"col":10,"offset":36689},"end":{"line":1293,"col":77,"offset":36756},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0325079410a47fe85299c30a164c6d2740f78718efc5aab272733c4d749b6bd3a7b802f17e65154bfab48feec8d83ff25eb11dc788a8f928aca702eaf19eb10_0","lines":"\t  fprintf (stderr, \n\t        \"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\",\n\t\th->c_dev_min, h->c_rdev_maj, h->c_rdev_min, h->c_namesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1400,"col":12,"offset":39678},"end":{"line":1400,"col":63,"offset":39729},"extra":{"metavars":{"$FUN":{"start":{"line":1400,"col":12,"offset":39678},"end":{"line":1400,"col":24,"offset":39690},"abstract_content":"query_rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"836e4a8dd76b3f803864d379b92485f4221b8ecbb848d06fe9094e94463c5db8c26e57d55fb61ed88235af8800261faefe63c5b7da7fa9dc6e61a2248ebe83c2_0","lines":"\t      if (query_rename(&file_hdr, tty_in, tty_out, rename_in) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1420,"col":3,"offset":40094},"end":{"line":1420,"col":28,"offset":40119},"extra":{"metavars":{"$FUN":{"start":{"line":1420,"col":3,"offset":40094},"end":{"line":1420,"col":25,"offset":40116},"abstract_content":"apply_delayed_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"edf3e7e83b53be926772aee40e20b2eead9025bf989f566bc2a176a7a4a2a8aa323fd85afa5a0dc67f8ff795f2a59c4aa5ebe3bcfafd757ab760b656b5f2e0ea_0","lines":"  apply_delayed_set_stat ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1434,"col":7,"offset":40358},"end":{"line":1434,"col":65,"offset":40416},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1434,"col":7,"offset":40358},"end":{"line":1434,"col":13,"offset":40364},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":1434,"col":47,"offset":40398},"end":{"line":1434,"col":48,"offset":40399},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a79f2b37a00407eb7fc2ea1fc2c22cabb689d58af60c4568583ba378bb50478d08f3e5e3a526a07511d51333d99415d94a80a3506ac386ab8f7954d36b26201_0","lines":"      blocks = (input_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1435,"col":7,"offset":40424},"end":{"line":1438,"col":32,"offset":40550},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"9cd4698439708ee6e5dc2dceed3f8040b63fbacd9f60f380e1eabd564ccf493ce97010cecfb79b376fc03736846a5006d15228d4d2b2b192b14220167aed9908_1","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks),\n\t       (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":166,"col":11,"offset":5023},"end":{"line":166,"col":21,"offset":5033},"extra":{"metavars":{"$PTR":{"start":{"line":166,"col":17,"offset":5029},"end":{"line":166,"col":19,"offset":5031},"abstract_content":"hp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a15a38e649891a7f8992c334b8331af2337a948570e62104b0d3d170d8294fb2b1f2e8de961884037b9404f15fe07b07868c45bfa1a0e379525f52aec494d0f0_0","lines":"          free (hp);            /* Collect garbage.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":236,"col":5,"offset":6826},"end":{"line":236,"col":19,"offset":6840},"extra":{"metavars":{"$TYPE":{"start":{"line":236,"col":5,"offset":6826},"end":{"line":236,"col":9,"offset":6830},"abstract_content":"long"},"$ARR":{"start":{"line":236,"col":10,"offset":6831},"end":{"line":236,"col":12,"offset":6833},"abstract_content":"ss"},"$LEN":{"start":{"line":236,"col":13,"offset":6834},"end":{"line":236,"col":17,"offset":6838},"abstract_content":"0200"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f2a1f4825ef2ed6751dca4dd8cb44fbbba7cdf2c462c5257bfb4cb86a2de62577256ed7537dc8ddb1961b8d7350dfdcf02cffb4650ac2a202137e64464c8d21_0","lines":"    long ss[0200];              /* 0200 overflow words.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":95,"col":8,"offset":2905},"end":{"line":95,"col":13,"offset":2910},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":95,"col":8,"offset":2905},"end":{"line":95,"col":9,"offset":2906},"abstract_content":"i"},"$SIGNED":{"start":{"line":95,"col":12,"offset":2909},"end":{"line":95,"col":13,"offset":2910},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"568f307e73432dc917f07b07b9b49928ec5ea1c32840c7478eddf0ad87ee0ca6d4a5527a6bd299ef5e81a0d8403911a67f19efcfe0bc69825d94d0f91c7bca02_0","lines":"  for (i = 0; arglist[i]; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":133,"col":3,"offset":3995},"end":{"line":135,"col":62,"offset":4150},"extra":{"metavars":{"$EXPR1":{"start":{"line":133,"col":25,"offset":4017},"end":{"line":133,"col":32,"offset":4024},"abstract_content":"problem"},"$EXPR2":{"start":{"line":133,"col":36,"offset":4028},"end":{"line":133,"col":38,"offset":4030},"abstract_content":"-1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"19e80b1bb1c23dca9b2c275251f768a3edaad8a5666df0bf70caf9cae59c86ad1edd77271a859df56bf1d1f78c20516967797e153898fce510925eb63ae9d6da_0","lines":"  char const *format = (problem == -1\n                        ? _(\"invalid argument %s for %s\")\n                        : _(\"ambiguous argument %s for %s\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":155,"col":8,"offset":4749},"end":{"line":155,"col":13,"offset":4754},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":155,"col":8,"offset":4749},"end":{"line":155,"col":9,"offset":4750},"abstract_content":"i"},"$SIGNED":{"start":{"line":155,"col":12,"offset":4753},"end":{"line":155,"col":13,"offset":4754},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"568f307e73432dc917f07b07b9b49928ec5ea1c32840c7478eddf0ad87ee0ca6d4a5527a6bd299ef5e81a0d8403911a67f19efcfe0bc69825d94d0f91c7bca02_1","lines":"  for (i = 0; arglist[i]; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":203,"col":8,"offset":6157},"end":{"line":203,"col":13,"offset":6162},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":203,"col":8,"offset":6157},"end":{"line":203,"col":9,"offset":6158},"abstract_content":"i"},"$SIGNED":{"start":{"line":203,"col":12,"offset":6161},"end":{"line":203,"col":13,"offset":6162},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"568f307e73432dc917f07b07b9b49928ec5ea1c32840c7478eddf0ad87ee0ca6d4a5527a6bd299ef5e81a0d8403911a67f19efcfe0bc69825d94d0f91c7bca02_2","lines":"  for (i = 0; arglist[i]; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":262,"col":3,"offset":7404},"end":{"line":264,"col":56,"offset":7551},"extra":{"metavars":{"$EXPR1":{"start":{"line":262,"col":8,"offset":7409},"end":{"line":262,"col":10,"offset":7411},"abstract_content":"cp","propagated_value":{"svalue_start":{"line":262,"col":13,"offset":7414},"svalue_end":{"line":262,"col":39,"offset":7440},"svalue_abstract_content":"getenv(\"VERSION_CONTROL\")"}},"$EXPR2":{"start":{"line":262,"col":13,"offset":7414},"end":{"line":262,"col":39,"offset":7440},"abstract_content":"getenv(\"VERSION_CONTROL\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"af98756bcc8f71ebc7c1af3e697b1640c2e20f330a93a877308915495cdd2b4ebf804b5cd23d8daf96457ee2a0c291fd5b1367b2fa2277af5838206a15c9cf83_0","lines":"  if ((cp = getenv (\"VERSION_CONTROL\")))\n    backup_type = XARGMATCH (\"$VERSION_CONTROL\", cp,\n                             backup_args, backup_vals);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":262,"col":13,"offset":7414},"end":{"line":262,"col":39,"offset":7440},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":262,"col":13,"offset":7414},"end":{"line":262,"col":19,"offset":7420},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9a0198ad18dbfae33819bb82ae84cc2726c4e6d0201884ab2e1c922b312131be008250ea57d0e89f6c913253d65d87d5e289ced7face061593e70baf7fea373e_0","lines":"  if ((cp = getenv (\"VERSION_CONTROL\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","start":{"line":267,"col":46,"offset":7615},"end":{"line":267,"col":50,"offset":7619},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1537cb4202f00f0a2821a825fcdce5c07788ab5b6fa5e301a41036d894de6360b089e5023a75f4588c9dc75a796f357d066e97fc8a7ea3805305f4265d15d008_0","lines":"    backup_type = XARGMATCH (getprogname (), argv[1],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":62,"col":34,"offset":2041},"end":{"line":62,"col":73,"offset":2080},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":34,"offset":2041},"end":{"line":62,"col":40,"offset":2047},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a316671328708ca526d50db59aa6ae3bdfe666fb5937b65d6c0ab88926f863117f7f5cf5811079279e5a4fe570ff8f31fee496564e931472434708087370d7ec_0","lines":"  fs = (struct argp_fmtstream *) malloc (sizeof (struct argp_fmtstream));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":73,"col":26,"offset":2298},"end":{"line":73,"col":48,"offset":2320},"extra":{"metavars":{"$FUN":{"start":{"line":73,"col":26,"offset":2298},"end":{"line":73,"col":32,"offset":2304},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a316671328708ca526d50db59aa6ae3bdfe666fb5937b65d6c0ab88926f863117f7f5cf5811079279e5a4fe570ff8f31fee496564e931472434708087370d7ec_1","lines":"      fs->buf = (char *) malloc (INIT_BUF_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":73,"col":26,"offset":2298},"end":{"line":73,"col":48,"offset":2320},"extra":{"metavars":{"$LEN":{"start":{"line":73,"col":34,"offset":2306},"end":{"line":73,"col":47,"offset":2319},"abstract_content":"INIT_BUF_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4b9593f6391e402060c4bed318181ca3f6ad6dd25fd9c4e692f7e45d0a2b4e965a9f0d695f7ba2e74f372f47cc57ab2df0d57a07f76f3ccc931d5e4a5ed0e9bd_0","lines":"      fs->buf = (char *) malloc (INIT_BUF_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":108,"col":3,"offset":3000},"end":{"line":108,"col":18,"offset":3015},"extra":{"metavars":{"$PTR":{"start":{"line":108,"col":9,"offset":3006},"end":{"line":108,"col":16,"offset":3013},"abstract_content":"fs->->buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fb09b415379a30ed587291e30a7fe5ed627cb4a5b3e722fcbb286012a2e9a23325d2ad1ac38ea772904c101d11d4327ab62c33736e3910172be98696dd8891ab_0","lines":"  free (fs->buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":109,"col":3,"offset":3018},"end":{"line":109,"col":13,"offset":3028},"extra":{"metavars":{"$PTR":{"start":{"line":109,"col":9,"offset":3024},"end":{"line":109,"col":11,"offset":3026},"abstract_content":"fs"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"60401bac175cb1924ae8659e033c3edc6205c76403e42fcebfcac3626f0e89f643685c4c4171de1087147cfe7cfcbd00d713e94b87f5f13afc451c7d956d1cef_0","lines":"  free (fs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":140,"col":15,"offset":3880},"end":{"line":140,"col":52,"offset":3917},"extra":{"metavars":{"$FUN":{"start":{"line":140,"col":15,"offset":3880},"end":{"line":140,"col":22,"offset":3887},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a2eadc4e47e3814ec6e8bf7666ae9fc391c367a8fc42d961d1e42d89dd9a33f6ba133b15e10192df070efc57cd33a90e65fbe4a0fd289f13ee4098355937c7f_0","lines":"              memmove (buf + pad, buf, fs->p - buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":149,"col":20,"offset":4258},"end":{"line":149,"col":25,"offset":4263},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":149,"col":20,"offset":4258},"end":{"line":149,"col":21,"offset":4259},"abstract_content":"i"},"$SIGNED":{"start":{"line":149,"col":24,"offset":4262},"end":{"line":149,"col":25,"offset":4263},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"52b13e9193a728acf5e44ca2f1794fd87c11d475aec3c7a5eabc7731ec805cf3844e1ef088799bc02965dc4e7bbf5ab285e88a170422f635aa3368e270fe4b52_0","lines":"              for (i = 0; i < pad; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":185,"col":33,"offset":5300},"end":{"line":185,"col":41,"offset":5308},"extra":{"metavars":{"$TYPE":{"start":{"line":123,"col":3,"offset":3355},"end":{"line":123,"col":7,"offset":3359},"abstract_content":"char"},"$PTR1":{"start":{"line":185,"col":33,"offset":5300},"end":{"line":185,"col":35,"offset":5302},"abstract_content":"nl","propagated_value":{"svalue_start":{"line":163,"col":12,"offset":4611},"svalue_end":{"line":163,"col":35,"offset":4634},"svalue_abstract_content":"memchr(buf'\\n'len)"}},"$PTR2":{"start":{"line":185,"col":38,"offset":5305},"end":{"line":185,"col":41,"offset":5308},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9749a540873137e10ebbb0504faff9d6db674a0364fdedce5ce320672a46340a4b2f5d7f23653e55931c50e58c3dcd66a677dff0683a379dc58c76a9a754838a_0","lines":"      else if (fs->point_col + (nl - buf) < (ssize_t) fs->rmargin)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":195,"col":7,"offset":5611},"end":{"line":195,"col":26,"offset":5630},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":195,"col":7,"offset":5611},"end":{"line":195,"col":8,"offset":5612},"abstract_content":"r"},"$SIGNED":{"start":{"line":195,"col":25,"offset":5629},"end":{"line":195,"col":26,"offset":5630},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bb7cf9394cd328785d237b0ab0d4373d1bebfdb5072e2a3e5859d0e9e5a10ba81c85fd7bad5ae3144d37fc01513d4a1b5da5589770b737167fb0428dfc11ee2e_0","lines":"      r = fs->rmargin - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":203,"col":15,"offset":5852},"end":{"line":203,"col":66,"offset":5903},"extra":{"metavars":{"$FUN":{"start":{"line":203,"col":15,"offset":5852},"end":{"line":203,"col":22,"offset":5859},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a2eadc4e47e3814ec6e8bf7666ae9fc391c367a8fc42d961d1e42d89dd9a33f6ba133b15e10192df070efc57cd33a90e65fbe4a0fd289f13ee4098355937c7f_1","lines":"              memmove (buf + (r - fs->point_col), nl, fs->p - nl);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":283,"col":31,"offset":8936},"end":{"line":283,"col":47,"offset":8952},"extra":{"metavars":{"$PTR1":{"start":{"line":283,"col":31,"offset":8936},"end":{"line":283,"col":36,"offset":8941},"abstract_content":"fs->->p"},"$PTR2":{"start":{"line":283,"col":39,"offset":8944},"end":{"line":283,"col":47,"offset":8952},"abstract_content":"nextline"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"107c4a34c131dc1becb1c25e9f5912447a2f3838b1f9eaf19862d67b80bd361e45fa8962b55ca07cc614bd2592becc11e0940d1a20ca1ecaf0a2924af0d7a865_0","lines":"                  size_t mv = fs->p - nextline;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":284,"col":19,"offset":8972},"end":{"line":284,"col":63,"offset":9016},"extra":{"metavars":{"$FUN":{"start":{"line":284,"col":19,"offset":8972},"end":{"line":284,"col":26,"offset":8979},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a2eadc4e47e3814ec6e8bf7666ae9fc391c367a8fc42d961d1e42d89dd9a33f6ba133b15e10192df070efc57cd33a90e65fbe4a0fd289f13ee4098355937c7f_2","lines":"                  memmove (nl + 1 + fs->wmargin, nextline, mv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":294,"col":38,"offset":9373},"end":{"line":294,"col":50,"offset":9385},"extra":{"metavars":{"$PTR1":{"start":{"line":294,"col":38,"offset":9373},"end":{"line":294,"col":40,"offset":9375},"abstract_content":"nl"},"$PTR2":{"start":{"line":294,"col":43,"offset":9378},"end":{"line":294,"col":50,"offset":9385},"abstract_content":"fs->->buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6de47a0009a6ad70c2d4ba13e62943e7e8e08db8d032de8e86761488edbc1da47723a42201d448996b040ee735f5832965abaac1b330a734ac23ccdacd5b003d_0","lines":"                              (int) (nl - fs->buf), fs->buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":297,"col":50,"offset":9489},"end":{"line":297,"col":62,"offset":9501},"extra":{"metavars":{"$PTR1":{"start":{"line":297,"col":50,"offset":9489},"end":{"line":297,"col":52,"offset":9491},"abstract_content":"nl"},"$PTR2":{"start":{"line":297,"col":55,"offset":9494},"end":{"line":297,"col":62,"offset":9501},"abstract_content":"fs->->buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6de47a0009a6ad70c2d4ba13e62943e7e8e08db8d032de8e86761488edbc1da47723a42201d448996b040ee735f5832965abaac1b330a734ac23ccdacd5b003d_1","lines":"                    fwrite_unlocked (fs->buf, 1, nl - fs->buf, fs->stream);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":301,"col":26,"offset":9601},"end":{"line":301,"col":39,"offset":9614},"extra":{"metavars":{"$PTR1":{"start":{"line":301,"col":26,"offset":9601},"end":{"line":301,"col":29,"offset":9604},"abstract_content":"buf"},"$PTR2":{"start":{"line":301,"col":32,"offset":9607},"end":{"line":301,"col":39,"offset":9614},"abstract_content":"fs->->buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ab53688addf05472c22011d102145544fde0b443e9ab6ad568cd25090f105f0805472f879d30bd6d244fd6e954146dfa0b0a50f1dd189e830b4f3dfd29bcdd12_0","lines":"                  len += buf - fs->buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":310,"col":15,"offset":9835},"end":{"line":310,"col":28,"offset":9848},"extra":{"metavars":{"$PTR1":{"start":{"line":310,"col":15,"offset":9835},"end":{"line":310,"col":23,"offset":9843},"abstract_content":"nextline"},"$PTR2":{"start":{"line":310,"col":26,"offset":9846},"end":{"line":310,"col":28,"offset":9848},"abstract_content":"nl"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"39340632ab65af277d1a64fb6c5657765a13e2c5bd801e1bab9b9812a18d427a87ae5a901536aa9b735761554dad912935a9f22a7bfe7b75efc6108fbcfc5db0_0","lines":"          if (nextline - nl >= fs->wmargin","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":316,"col":13,"offset":10107},"end":{"line":316,"col":46,"offset":10140},"extra":{"metavars":{"$EXPR1":{"start":{"line":316,"col":18,"offset":10112},"end":{"line":316,"col":23,"offset":10117},"abstract_content":"i=0"},"$EXPR2":{"start":{"line":316,"col":25,"offset":10119},"end":{"line":316,"col":40,"offset":10134},"abstract_content":"i<fs->->wmargin"},"$EXPR3":{"start":{"line":316,"col":42,"offset":10136},"end":{"line":316,"col":45,"offset":10139},"abstract_content":"++i"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a036f0098c900ab405b139776db86287d80009b42be5caa5c17f5972313fba4ecf830333dc7c09e85bc08d753c998eb714ab8db522d33050e95c43f7e76691b6_0","lines":"            for (i = 0; i < fs->wmargin; ++i)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":327,"col":13,"offset":10472},"end":{"line":327,"col":57,"offset":10516},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":13,"offset":10472},"end":{"line":327,"col":20,"offset":10479},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a2eadc4e47e3814ec6e8bf7666ae9fc391c367a8fc42d961d1e42d89dd9a33f6ba133b15e10192df070efc57cd33a90e65fbe4a0fd289f13ee4098355937c7f_3","lines":"            memmove (nl, nextline, buf + len - nextline);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":328,"col":18,"offset":10535},"end":{"line":328,"col":32,"offset":10549},"extra":{"metavars":{"$PTR1":{"start":{"line":328,"col":18,"offset":10535},"end":{"line":328,"col":26,"offset":10543},"abstract_content":"nextline"},"$PTR2":{"start":{"line":328,"col":29,"offset":10546},"end":{"line":328,"col":32,"offset":10549},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"638f200c7b7fb48fa376bfee7c186240e255d0aea5b2db1af0a30e4889b40d3e6809fffc8ef15ba4d3f93c73dae7e069ba8433e6090ddbcda10ed0eec4ebd418_0","lines":"          len -= nextline - buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":374,"col":11,"offset":11915},"end":{"line":374,"col":62,"offset":11966},"extra":{"metavars":{"$FUN":{"start":{"line":374,"col":11,"offset":11915},"end":{"line":374,"col":18,"offset":11922},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a2eadc4e47e3814ec6e8bf7666ae9fc391c367a8fc42d961d1e42d89dd9a33f6ba133b15e10192df070efc57cd33a90e65fbe4a0fd289f13ee4098355937c7f_4","lines":"          memmove (fs->buf, fs->buf + wrote, fs->p - fs->buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":385,"col":11,"offset":12226},"end":{"line":389,"col":14,"offset":12383},"extra":{"metavars":{"$EXPR1":{"start":{"line":385,"col":41,"offset":12256},"end":{"line":385,"col":48,"offset":12263},"abstract_content":"new_buf"},"$EXPR2":{"start":{"line":385,"col":51,"offset":12266},"end":{"line":385,"col":78,"offset":12293},"abstract_content":"realloc(fs->->buf new_size)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7ccd79f3f15e35cefc49a284245bc6e9765088d7da6b5f7512f69d14d194338a0cbbad91752c5c89c4b6d0b2b9528270695c510a9e89962b76d58232806ea1bb_0","lines":"          if (new_size < old_size || ! (new_buf = realloc (fs->buf, new_size)))\n            {\n              __set_errno (ENOMEM);\n              return 0;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":385,"col":51,"offset":12266},"end":{"line":385,"col":78,"offset":12293},"extra":{"metavars":{"$X":{"start":{"line":382,"col":29,"offset":12171},"end":{"line":382,"col":37,"offset":12179},"abstract_content":"old_size"},"$Y":{"start":{"line":382,"col":40,"offset":12182},"end":{"line":382,"col":46,"offset":12188},"abstract_content":"amount"},"$FUN":{"start":{"line":385,"col":51,"offset":12266},"end":{"line":385,"col":58,"offset":12273},"abstract_content":"realloc"},"$ARG1":{"start":{"line":385,"col":60,"offset":12275},"end":{"line":385,"col":67,"offset":12282},"abstract_content":"fs->->buf"},"$N":{"start":{"line":385,"col":69,"offset":12284},"end":{"line":385,"col":77,"offset":12292},"abstract_content":"new_size","propagated_value":{"svalue_start":{"line":382,"col":29,"offset":12171},"svalue_end":{"line":382,"col":46,"offset":12188},"svalue_abstract_content":"old_size+amount"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5b1a19fd48e065db5623306a3f6d6d5462ea0811a5beae5fcb7d7aba9e3c5db1f9daec58e314b5b21c6479b3c4043626693765655c89c9e81f185c08bf8a5e21_0","lines":"          if (new_size < old_size || ! (new_buf = realloc (fs->buf, new_size)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":385,"col":51,"offset":12266},"end":{"line":385,"col":78,"offset":12293},"extra":{"metavars":{"$FUN":{"start":{"line":385,"col":51,"offset":12266},"end":{"line":385,"col":58,"offset":12273},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4361a36766952a7e3d36e54b571ae454220ab275a3e725c24637421d73a0cd83cdcad01d01c45c240d9d94de0b5a4a574ee10e6ea70fb121f427c821dc97f83e_0","lines":"          if (new_size < old_size || ! (new_buf = realloc (fs->buf, new_size)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":405,"col":10,"offset":12634},"end":{"line":405,"col":40,"offset":12664},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":405,"col":10,"offset":12634},"end":{"line":405,"col":20,"offset":12644},"abstract_content":"size_guess"},"$SIGNED":{"start":{"line":405,"col":23,"offset":12647},"end":{"line":405,"col":40,"offset":12664},"abstract_content":"PRINTF_SIZE_GUESS"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4f6a0007443328dd44dea2b80f429e5959e2feea131eeb06b2de417e6b047683f39d30bf4d88407541a036ae58329ef2233291aff7251d3def430c97c7c3e102_0","lines":"  size_t size_guess = PRINTF_SIZE_GUESS; /* How much space to reserve. */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":416,"col":7,"offset":12871},"end":{"line":416,"col":50,"offset":12914},"extra":{"metavars":{"$SIGNED":{"start":{"line":416,"col":7,"offset":12871},"end":{"line":416,"col":10,"offset":12874},"abstract_content":"out"},"$UNSIGNED":{"start":{"line":416,"col":33,"offset":12897},"end":{"line":416,"col":38,"offset":12902},"abstract_content":"avail"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6216bd53dc75c1e6d08233d7c125a47199a2e9dd8d494b3b54b7e8215dd555288c21130cf21ab402d0eadda31b442449fa4b8070d644abec6eb268b9fa7d07f_0","lines":"      out = __vsnprintf (fs->p, avail, fmt, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":416,"col":13,"offset":12877},"end":{"line":416,"col":50,"offset":12914},"extra":{"metavars":{"$FUN":{"start":{"line":416,"col":13,"offset":12877},"end":{"line":416,"col":24,"offset":12888},"abstract_content":"__vsnprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b154bcd70835fe3f5a78d8f3370747c2afebef38e8f7447c286fbfc81cd592ec7d36f8bbbc2cd58eb96d6b3dbbb5296b01ab28b7320a4e43abe9051beae88a1_0","lines":"      out = __vsnprintf (fs->p, avail, fmt, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":419,"col":9,"offset":12978},"end":{"line":419,"col":29,"offset":12998},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":419,"col":9,"offset":12978},"end":{"line":419,"col":19,"offset":12988},"abstract_content":"size_guess"},"$SIGNED":{"start":{"line":419,"col":22,"offset":12991},"end":{"line":419,"col":25,"offset":12994},"abstract_content":"out"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79df4e077b03f148a3308ce71122e7aa6ffb05b54635514b3477ce85275f1d48a182261cc9f8c3ef6df28e28c2ee79f06dec058814b14c3fd0087d96f21b5dcd_0","lines":"        size_guess = out + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":218,"col":7,"offset":9329},"end":{"line":218,"col":37,"offset":9359},"extra":{"metavars":{"$FUN":{"start":{"line":218,"col":7,"offset":9329},"end":{"line":218,"col":13,"offset":9335},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e6f7e5360872aa3c66b6702e3fbfb864e2159aa65912a4da1c77b1a8820f69b1716b41e61e4e174df30587f8dc7c1d33aa7c7f9de45369da19af49e02e2ed01c_0","lines":"      memcpy (__fs->p, __str, __len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":162,"col":21,"offset":6028},"end":{"line":162,"col":45,"offset":6052},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":162,"col":21,"offset":6028},"end":{"line":162,"col":27,"offset":6034},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dca0abe27a60d85aa39980544fd60c9e7efd37cf7ac3c8a6dbe2a2624d932d7b10953b979d3fdda26e03ffe54f2e09c5a9ead69fe365e7ecd964985952e82156_0","lines":"  const char *var = getenv (\"ARGP_HELP_FMT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":183,"col":25,"offset":6608},"end":{"line":183,"col":34,"offset":6617},"extra":{"metavars":{"$PTR1":{"start":{"line":183,"col":25,"offset":6608},"end":{"line":183,"col":28,"offset":6611},"abstract_content":"arg"},"$PTR2":{"start":{"line":183,"col":31,"offset":6614},"end":{"line":183,"col":34,"offset":6617},"abstract_content":"var"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"de85cd0cc51e00d7df9980cc962ecf957500c48fa460d8e0c39c2cd0bccb560628e60ea66a3e21b3dab265900e4a8cd2cb34e2543dab155705ebc25f2618b680_0","lines":"              var_len = arg - var;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":208,"col":25,"offset":7279},"end":{"line":208,"col":35,"offset":7289},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"631d70e0168a9d2a61f71080cb119736b43a15519c0bf9f05ddd88db437cca13b8c8bb901544823eea71acaee8c66d90419142f1ce03566313813ab6dff37545_0","lines":"                  val = atoi (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":438,"col":12,"offset":15860},"end":{"line":438,"col":33,"offset":15881},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":438,"col":12,"offset":15860},"end":{"line":438,"col":29,"offset":15877},"abstract_content":"num_short_options"},"$SIGNED":{"start":{"line":438,"col":32,"offset":15880},"end":{"line":438,"col":33,"offset":15881},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"831834cc304271717e29a4a1514f3d2eff1e00e9e5670b224aa7e778faccd21699dd6bbdd5430a58c166e39c5645bf690ff4350852a1c1d12aeb9fb172b38ed0_0","lines":"  unsigned num_short_options = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":439,"col":21,"offset":15903},"end":{"line":439,"col":49,"offset":15931},"extra":{"metavars":{"$FUN":{"start":{"line":439,"col":21,"offset":15903},"end":{"line":439,"col":27,"offset":15909},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_0","lines":"  struct hol *hol = malloc (sizeof (struct hol));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":462,"col":7,"offset":16389},"end":{"line":462,"col":75,"offset":16457},"extra":{"metavars":{"$RET":{"start":{"line":462,"col":7,"offset":16389},"end":{"line":462,"col":19,"offset":16401},"abstract_content":"hol->->entries"},"$FUN":{"start":{"line":462,"col":22,"offset":16404},"end":{"line":462,"col":28,"offset":16410},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b6e515459b28ce5b3c4ba497b3e32a27be06b9f475c7b54de1457ba8e8a50c901bcfdd7de256787fa803bf4347cbb8626a85f5460a65a0cb0bf03558e218fd23_0","lines":"      hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":462,"col":22,"offset":16404},"end":{"line":462,"col":75,"offset":16457},"extra":{"metavars":{"$FUN":{"start":{"line":462,"col":22,"offset":16404},"end":{"line":462,"col":28,"offset":16410},"abstract_content":"malloc"},"$X":{"start":{"line":462,"col":30,"offset":16412},"end":{"line":462,"col":55,"offset":16437},"abstract_content":"sizeof(struct hol_entry)"},"$Y":{"start":{"line":462,"col":58,"offset":16440},"end":{"line":462,"col":74,"offset":16456},"abstract_content":"hol->->num_entries"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"53eef28e7f5beaed2d0274fb8129cc7c66ab8666eeefae952bab0326a3cea3e73c8eab8e61d9f2543badffee23500b2d643a7eeeb0ff7b4c582bd239ee521ec2_0","lines":"      hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":462,"col":22,"offset":16404},"end":{"line":462,"col":75,"offset":16457},"extra":{"metavars":{"$FUN":{"start":{"line":462,"col":22,"offset":16404},"end":{"line":462,"col":28,"offset":16410},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_1","lines":"      hol->entries = malloc (sizeof (struct hol_entry) * hol->num_entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":463,"col":28,"offset":16486},"end":{"line":463,"col":58,"offset":16516},"extra":{"metavars":{"$FUN":{"start":{"line":463,"col":28,"offset":16486},"end":{"line":463,"col":34,"offset":16492},"abstract_content":"malloc"},"$X":{"start":{"line":463,"col":36,"offset":16494},"end":{"line":463,"col":53,"offset":16511},"abstract_content":"num_short_options"},"$Y":{"start":{"line":463,"col":56,"offset":16514},"end":{"line":463,"col":57,"offset":16515},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7fc170a6235f8d35338927d6895615664610f95a56371457d1e755069ae109141a2fcb5671394360e604157c9ba3564a25182c73f29d280ba28f345f89280f7c_0","lines":"      hol->short_options = malloc (num_short_options + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":463,"col":28,"offset":16486},"end":{"line":463,"col":58,"offset":16516},"extra":{"metavars":{"$FUN":{"start":{"line":463,"col":28,"offset":16486},"end":{"line":463,"col":34,"offset":16492},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_2","lines":"      hol->short_options = malloc (num_short_options + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":467,"col":9,"offset":16610},"end":{"line":467,"col":74,"offset":16675},"extra":{"metavars":{"$ASSERT":{"start":{"line":467,"col":9,"offset":16610},"end":{"line":467,"col":15,"offset":16616},"abstract_content":"assert"},"$A":{"start":{"line":467,"col":17,"offset":16618},"end":{"line":467,"col":33,"offset":16634},"abstract_content":"hol->->num_entries"},"$B":{"start":{"line":467,"col":37,"offset":16638},"end":{"line":467,"col":73,"offset":16674},"abstract_content":"SIZE_MAX/sizeof(struct hol_entry)"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a0f45ca4923cbfeba2b75d8b1f57b47d2474de9f7fd8e5a1270fd92679937a25db87238c75c8f64996788090eef65274da187d6210a9bad7f7faaa1478cdee2e_0","lines":"        assert (hol->num_entries <= SIZE_MAX / sizeof (struct hol_entry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":508,"col":28,"offset":18010},"end":{"line":508,"col":64,"offset":18046},"extra":{"metavars":{"$FUN":{"start":{"line":508,"col":28,"offset":18010},"end":{"line":508,"col":34,"offset":18016},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_3","lines":"  struct hol_cluster *cl = malloc (sizeof (struct hol_cluster));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":534,"col":7,"offset":18519},"end":{"line":534,"col":17,"offset":18529},"extra":{"metavars":{"$PTR":{"start":{"line":534,"col":13,"offset":18525},"end":{"line":534,"col":15,"offset":18527},"abstract_content":"cl"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e32de18fe75164871798ebce33cbd0214988ee217cc1d3937c2b5b2e27c8a6e86cbc2e290e8cb3253d08e1883aadb8fd94ad3ad8e79e1eeb6fd4a0ae907a0e2d_0","lines":"      free (cl);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":540,"col":7,"offset":18594},"end":{"line":540,"col":27,"offset":18614},"extra":{"metavars":{"$PTR":{"start":{"line":540,"col":13,"offset":18600},"end":{"line":540,"col":25,"offset":18612},"abstract_content":"hol->->entries"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6d9d8fb7d4959b660c783beafa83250eab1b1df25fb6459c32ec01a4b820bf11af90992195f9751323301b58be9f5e479dd45d8874236b85c4feb3930028522a_0","lines":"      free (hol->entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":541,"col":7,"offset":18621},"end":{"line":541,"col":33,"offset":18647},"extra":{"metavars":{"$PTR":{"start":{"line":541,"col":13,"offset":18627},"end":{"line":541,"col":31,"offset":18645},"abstract_content":"hol->->short_options"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e1902a826cdd1c7d443987544858e224dbef0b930177ed39307c807038ef522d3ab98dfcc63b5c7ae844a488f5f78d87a36650ba277dcccf4f96b19fd8b9cfe5_0","lines":"      free (hol->short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":544,"col":3,"offset":18657},"end":{"line":544,"col":14,"offset":18668},"extra":{"metavars":{"$PTR":{"start":{"line":544,"col":9,"offset":18663},"end":{"line":544,"col":12,"offset":18666},"abstract_content":"hol"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"846971dd892e16bb0194b7a833f403da5b409089d10b3bcec8163041ba5ebcb9f4c98d3ef184fd7234639c347ea5fbbec453b6fbb6d6c312ce5d50b5e48ce2e1_0","lines":"  free (hol);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":791,"col":16,"offset":26576},"end":{"line":791,"col":61,"offset":26621},"extra":{"metavars":{"$NARROW":{"start":{"line":791,"col":16,"offset":26576},"end":{"line":791,"col":22,"offset":26582},"abstract_content":"first1"},"$LARGE":{"start":{"line":791,"col":25,"offset":26585},"end":{"line":791,"col":31,"offset":26591},"abstract_content":"short1","propagated_value":{"svalue_start":{"line":765,"col":20,"offset":25487},"svalue_end":{"line":765,"col":50,"offset":25517},"svalue_abstract_content":"hol_entry_first_short(entry1)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da093de3acf5ef0a80f36456441043827ca99e8e54fa7ca61be8abd612e3e17af0a99133b47cd7a27e1724ca1589998ab81f2a10379954cf7cc4c37d199408c4_0","lines":"          char first1 = short1 ? short1 : long1 ? *long1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":792,"col":16,"offset":26638},"end":{"line":792,"col":61,"offset":26683},"extra":{"metavars":{"$NARROW":{"start":{"line":792,"col":16,"offset":26638},"end":{"line":792,"col":22,"offset":26644},"abstract_content":"first2"},"$LARGE":{"start":{"line":792,"col":25,"offset":26647},"end":{"line":792,"col":31,"offset":26653},"abstract_content":"short2","propagated_value":{"svalue_start":{"line":766,"col":20,"offset":25538},"svalue_end":{"line":766,"col":50,"offset":25568},"svalue_abstract_content":"hol_entry_first_short(entry2)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ca34c31f22bedfc74da89a56c17e772715e58c28cffb34698282398c61ba48c0f2e51a893bb1c5b1e862c5e54003dfc0b252b2a7fc02ffadd45b34006fa879b_0","lines":"          char first2 = short2 ? short2 : long2 ? *long2 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":826,"col":12,"offset":27730},"end":{"line":826,"col":17,"offset":27735},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":826,"col":12,"offset":27730},"end":{"line":826,"col":13,"offset":27731},"abstract_content":"i"},"$SIGNED":{"start":{"line":826,"col":16,"offset":27734},"end":{"line":826,"col":17,"offset":27735},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c64aa72d2c631d626289651d122c1230d29d2b5dc7a7642e35302324867c986b4fdf69e7d829a39d8522c88cd98a57a90e32baca049caf6e5d6501e04fd33222_0","lines":"      for (i = 0, e = hol->entries; i < hol->num_entries; i++, e++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":864,"col":29,"offset":28979},"end":{"line":865,"col":61,"offset":29049},"extra":{"metavars":{"$RET":{"start":{"line":864,"col":29,"offset":28979},"end":{"line":864,"col":36,"offset":28986},"abstract_content":"entries"},"$FUN":{"start":{"line":865,"col":13,"offset":29001},"end":{"line":865,"col":19,"offset":29007},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e037bfbebb7d9778cba003f5146415bb70f9bf4d3f551f077f24fb9956d498a52cfad81f4a2b0496025cc10a7a50e40bdcf79ac1664a71449d2d7b22dd8282b6_0","lines":"          struct hol_entry *entries =\n            malloc (num_entries * sizeof (struct hol_entry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":865,"col":13,"offset":29001},"end":{"line":865,"col":61,"offset":29049},"extra":{"metavars":{"$FUN":{"start":{"line":865,"col":13,"offset":29001},"end":{"line":865,"col":19,"offset":29007},"abstract_content":"malloc"},"$X":{"start":{"line":865,"col":21,"offset":29009},"end":{"line":865,"col":32,"offset":29020},"abstract_content":"num_entries"},"$Y":{"start":{"line":865,"col":35,"offset":29023},"end":{"line":865,"col":60,"offset":29048},"abstract_content":"sizeof(struct hol_entry)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b46da0cf9a3d6ec52389063587de295763c5e6a2a7010d1af6a2df14fa773df5e274ed8e59807621d5aec477e58b634755b870c6b8307d984916bf485d76f554_0","lines":"            malloc (num_entries * sizeof (struct hol_entry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":865,"col":13,"offset":29001},"end":{"line":865,"col":61,"offset":29049},"extra":{"metavars":{"$FUN":{"start":{"line":865,"col":13,"offset":29001},"end":{"line":865,"col":19,"offset":29007},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_4","lines":"            malloc (num_entries * sizeof (struct hol_entry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":868,"col":13,"offset":29156},"end":{"line":868,"col":67,"offset":29210},"extra":{"metavars":{"$FUN":{"start":{"line":868,"col":13,"offset":29156},"end":{"line":868,"col":19,"offset":29162},"abstract_content":"malloc"},"$X":{"start":{"line":868,"col":21,"offset":29164},"end":{"line":868,"col":62,"offset":29205},"abstract_content":"hol_so_len+strlen(more->->short_options)"},"$Y":{"start":{"line":868,"col":65,"offset":29208},"end":{"line":868,"col":66,"offset":29209},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8f48704f018331c14ebe807911794ff144c1881a31b47909fec69d9e37b964e6f3eb11c2e90bbcbee79fc97e49e7983dd53dac3106f6710b45fc6569622a504c_0","lines":"            malloc (hol_so_len + strlen (more->short_options) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":868,"col":13,"offset":29156},"end":{"line":868,"col":67,"offset":29210},"extra":{"metavars":{"$FUN":{"start":{"line":868,"col":13,"offset":29156},"end":{"line":868,"col":19,"offset":29162},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ffe7be5b55c57378cfad71bc8f428b2f84106b9b4f880c1cf1063001f47c996f59c878c0265f5f0c31e53b998cae1e04948dec5dcf6863456499e4a841b953_5","lines":"            malloc (hol_so_len + strlen (more->short_options) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":872,"col":13,"offset":29306},"end":{"line":872,"col":73,"offset":29366},"extra":{"metavars":{"$ASSERT":{"start":{"line":872,"col":13,"offset":29306},"end":{"line":872,"col":19,"offset":29312},"abstract_content":"assert"},"$A":{"start":{"line":872,"col":21,"offset":29314},"end":{"line":872,"col":32,"offset":29325},"abstract_content":"num_entries"},"$B":{"start":{"line":872,"col":36,"offset":29329},"end":{"line":872,"col":72,"offset":29365},"abstract_content":"SIZE_MAX/sizeof(struct hol_entry)"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b5dcd976dc30a52c2a9d9d327eb2da20d8cd05f552448acab68b35d17efc6f0a2450942a27567d804d128e8770e49d80bd2cfa63a11128854c4352e110295601_0","lines":"            assert (num_entries <= SIZE_MAX / sizeof (struct hol_entry));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":883,"col":34,"offset":29849},"end":{"line":883,"col":68,"offset":29883},"extra":{"metavars":{"$PTR1":{"start":{"line":883,"col":34,"offset":29849},"end":{"line":883,"col":47,"offset":29862},"abstract_content":"short_options"},"$PTR2":{"start":{"line":883,"col":50,"offset":29865},"end":{"line":883,"col":68,"offset":29883},"abstract_content":"hol->->short_options"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"796fd9b1e77828eb77442123fcf1e4a5efcb09a20a164dfe859f3e4a42e1860f3883537f5abfb003e925002d83c3ae4e6f5330ea48f1ffb2f75f2b29d9fea489_0","lines":"            e->short_options += (short_options - hol->short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":914,"col":11,"offset":30965},"end":{"line":914,"col":31,"offset":30985},"extra":{"metavars":{"$PTR":{"start":{"line":914,"col":17,"offset":30971},"end":{"line":914,"col":29,"offset":30983},"abstract_content":"hol->->entries"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6d9d8fb7d4959b660c783beafa83250eab1b1df25fb6459c32ec01a4b820bf11af90992195f9751323301b58be9f5e479dd45d8874236b85c4feb3930028522a_1","lines":"          free (hol->entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":915,"col":11,"offset":30996},"end":{"line":915,"col":37,"offset":31022},"extra":{"metavars":{"$PTR":{"start":{"line":915,"col":17,"offset":31002},"end":{"line":915,"col":35,"offset":31020},"abstract_content":"hol->->short_options"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e1902a826cdd1c7d443987544858e224dbef0b930177ed39307c807038ef522d3ab98dfcc63b5c7ae844a488f5f78d87a36650ba277dcccf4f96b19fd8b9cfe5_1","lines":"          free (hol->short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":930,"col":7,"offset":31323},"end":{"line":930,"col":53,"offset":31369},"extra":{"metavars":{"$NARROW":{"start":{"line":930,"col":7,"offset":31323},"end":{"line":930,"col":13,"offset":31329},"abstract_content":"needed"},"$LARGE":{"start":{"line":930,"col":16,"offset":31332},"end":{"line":930,"col":19,"offset":31335},"abstract_content":"col"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c714d3c47388f23addcdb6e5a2b71db2413270b2539e74dc8ae305d14322b3b7ed9bec4dde2bf79aedad1485cb9d7adfa4fe566a173e0879df55b9b66049f68a_0","lines":"  int needed = col - __argp_fmtstream_point (stream);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":930,"col":7,"offset":31323},"end":{"line":930,"col":53,"offset":31369},"extra":{"metavars":{"$SIGNED":{"start":{"line":930,"col":7,"offset":31323},"end":{"line":930,"col":13,"offset":31329},"abstract_content":"needed"},"$UNSIGNED":{"start":{"line":930,"col":16,"offset":31332},"end":{"line":930,"col":19,"offset":31335},"abstract_content":"col"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dd195057d3232bcbac09ab9f65642623c3bdfea3ba8076beb06ecbce73de904e6fc609bda5e3d0dae765553ad572955bad244d2da9888a3da24b097e657a179f_0","lines":"  int needed = col - __argp_fmtstream_point (stream);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":956,"col":7,"offset":32153},"end":{"line":961,"col":64,"offset":32430},"extra":{"metavars":{"$EXPR1":{"start":{"line":956,"col":11,"offset":32157},"end":{"line":956,"col":22,"offset":32168},"abstract_content":"real->->flags"},"$EXPR2":{"start":{"line":956,"col":25,"offset":32171},"end":{"line":956,"col":44,"offset":32190},"abstract_content":"OPTION_ARG_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2b4e979234c98481ab88be173ce3563ff11004c45c555f1acc948d27ac66200797e06e12a003d4a5fe3273dd52cebca77a026e7b8abd972d4ab6e42717e16fe1_0","lines":"      if (real->flags & OPTION_ARG_OPTIONAL)\n        __argp_fmtstream_printf (stream, opt_fmt,\n                                 dgettext (domain, real->arg));\n      else\n        __argp_fmtstream_printf (stream, req_fmt,\n                                 dgettext (domain, real->arg));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1045,"col":5,"offset":35141},"end":{"line":1045,"col":26,"offset":35162},"extra":{"metavars":{"$PTR":{"start":{"line":1045,"col":11,"offset":35147},"end":{"line":1045,"col":24,"offset":35160},"abstract_content":"(char*fstr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6355e4b0c9f091df130c57dba6ac3c5f90f29cc5d921cbdee5feb26daa85d97bd1d404252563bd84cb1797f4a7a45b046fa28237d072949e3eff8fe71b8d74c1_0","lines":"    free ((char *) fstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1177,"col":7,"offset":39942},"end":{"line":1179,"col":63,"offset":40146},"extra":{"metavars":{"$EXPR1":{"start":{"line":1177,"col":48,"offset":39983},"end":{"line":1177,"col":53,"offset":39988},"abstract_content":"state"},"$EXPR2":{"start":{"line":1177,"col":57,"offset":39992},"end":{"line":1177,"col":61,"offset":39996},"abstract_content":"NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7e22c4e7f352e8b236dcde980903de989e7dfbca39ce149567a3119b8a5a33ef3769653977db217ac4fd6a9e7a1eb71476d3ae2649a8cc59280c57741316271d_0","lines":"      const char *tstr = real->doc ? dgettext (state == NULL ? NULL\n                                               : state->root_argp->argp_domain,\n                                               real->doc) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1198,"col":9,"offset":40853},"end":{"line":1198,"col":30,"offset":40874},"extra":{"metavars":{"$PTR":{"start":{"line":1198,"col":15,"offset":40859},"end":{"line":1198,"col":28,"offset":40872},"abstract_content":"(char*fstr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6355e4b0c9f091df130c57dba6ac3c5f90f29cc5d921cbdee5feb26daa85d97bd1d404252563bd84cb1797f4a7a45b046fa28237d072949e3eff8fe71b8d74c1_1","lines":"        free ((char *) fstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1226,"col":7,"offset":41626},"end":{"line":1229,"col":49,"offset":41867},"extra":{"metavars":{"$EXPR1":{"start":{"line":1226,"col":36,"offset":41655},"end":{"line":1226,"col":41,"offset":41660},"abstract_content":"state"},"$EXPR2":{"start":{"line":1226,"col":45,"offset":41664},"end":{"line":1226,"col":49,"offset":41668},"abstract_content":"NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7e22c4e7f352e8b236dcde980903de989e7dfbca39ce149567a3119b8a5a33ef3769653977db217ac4fd6a9e7a1eb71476d3ae2649a8cc59280c57741316271d_1","lines":"      const char *tstr = dgettext (state == NULL ? NULL\n                                   : state->root_argp->argp_domain, \"\\\nMandatory or optional arguments to long options are also mandatory or \\\noptional for any corresponding short options.\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1239,"col":9,"offset":42244},"end":{"line":1239,"col":30,"offset":42265},"extra":{"metavars":{"$PTR":{"start":{"line":1239,"col":15,"offset":42250},"end":{"line":1239,"col":28,"offset":42263},"abstract_content":"(char*fstr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6355e4b0c9f091df130c57dba6ac3c5f90f29cc5d921cbdee5feb26daa85d97bd1d404252563bd84cb1797f4a7a45b046fa28237d072949e3eff8fe71b8d74c1_2","lines":"        free ((char *) fstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1253,"col":3,"offset":42660},"end":{"line":1255,"col":31,"offset":42777},"extra":{"metavars":{"$EXPR1":{"start":{"line":1254,"col":13,"offset":42701},"end":{"line":1254,"col":23,"offset":42711},"abstract_content":"opt->->flags"},"$EXPR2":{"start":{"line":1254,"col":26,"offset":42714},"end":{"line":1254,"col":37,"offset":42725},"abstract_content":"real->->flags"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f265abdd586660a2f9227b4122b26193688e0382c49b9867cb30413d38adada53097485f62ba05233dfca9f2fa81467d0604733302e0aa77d1692b402f1fc2d_0","lines":"  if (!(opt->arg || real->arg)\n      && !((opt->flags | real->flags) & OPTION_NO_USAGE))\n    *(*snao_end)++ = opt->key;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1273,"col":3,"offset":43231},"end":{"line":1286,"col":6,"offset":43693},"extra":{"metavars":{"$EXPR1":{"start":{"line":1273,"col":16,"offset":43244},"end":{"line":1273,"col":21,"offset":43249},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1273,"col":24,"offset":43252},"end":{"line":1273,"col":39,"offset":43267},"abstract_content":"OPTION_NO_USAGE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2165435940db7fa61dd2fee7b6ec68b55739bf71e0335663b7b561ec015793e94c48a3846dca92543f41bb519c90d3db001f61b70b59c70c80748dfe968d242e_0","lines":"  if (arg && !(flags & OPTION_NO_USAGE))\n    {\n      arg = dgettext (domain, arg);\n\n      if (flags & OPTION_ARG_OPTIONAL)\n        __argp_fmtstream_printf (stream, \" [-%c[%s]]\", opt->key, arg);\n      else\n        {\n          /* Manually do line wrapping so that it (probably) won't\n             get wrapped at the embedded space.  */\n          space (stream, 6 + strlen (arg));\n          __argp_fmtstream_printf (stream, \"[-%c %s]\", opt->key, arg);\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1277,"col":7,"offset":43319},"end":{"line":1285,"col":10,"offset":43687},"extra":{"metavars":{"$EXPR1":{"start":{"line":1277,"col":11,"offset":43323},"end":{"line":1277,"col":16,"offset":43328},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1277,"col":19,"offset":43331},"end":{"line":1277,"col":38,"offset":43350},"abstract_content":"OPTION_ARG_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7371514a77fa059c715342be9b2c465bb1795e99399dc4cdb1761185243fb05fbc29194e7f99f974b7d0274407728970d7381069b5d3dbb5a386d4ad18b9cdee_0","lines":"      if (flags & OPTION_ARG_OPTIONAL)\n        __argp_fmtstream_printf (stream, \" [-%c[%s]]\", opt->key, arg);\n      else\n        {\n          /* Manually do line wrapping so that it (probably) won't\n             get wrapped at the embedded space.  */\n          space (stream, 6 + strlen (arg));\n          __argp_fmtstream_printf (stream, \"[-%c %s]\", opt->key, arg);\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1305,"col":3,"offset":44103},"end":{"line":1317,"col":6,"offset":44509},"extra":{"metavars":{"$EXPR1":{"start":{"line":1305,"col":10,"offset":44110},"end":{"line":1305,"col":15,"offset":44115},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1305,"col":18,"offset":44118},"end":{"line":1305,"col":33,"offset":44133},"abstract_content":"OPTION_NO_USAGE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2165435940db7fa61dd2fee7b6ec68b55739bf71e0335663b7b561ec015793e94c48a3846dca92543f41bb519c90d3db001f61b70b59c70c80748dfe968d242e_1","lines":"  if (! (flags & OPTION_NO_USAGE))\n    {\n      if (arg)\n        {\n          arg = dgettext (domain, arg);\n          if (flags & OPTION_ARG_OPTIONAL)\n            __argp_fmtstream_printf (stream, \" [--%s[=%s]]\", opt->name, arg);\n          else\n            __argp_fmtstream_printf (stream, \" [--%s=%s]\", opt->name, arg);\n        }\n      else\n        __argp_fmtstream_printf (stream, \" [--%s]\", opt->name);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1310,"col":11,"offset":44217},"end":{"line":1313,"col":76,"offset":44418},"extra":{"metavars":{"$EXPR1":{"start":{"line":1310,"col":15,"offset":44221},"end":{"line":1310,"col":20,"offset":44226},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1310,"col":23,"offset":44229},"end":{"line":1310,"col":42,"offset":44248},"abstract_content":"OPTION_ARG_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7371514a77fa059c715342be9b2c465bb1795e99399dc4cdb1761185243fb05fbc29194e7f99f974b7d0274407728970d7381069b5d3dbb5a386d4ad18b9cdee_1","lines":"          if (flags & OPTION_ARG_OPTIONAL)\n            __argp_fmtstream_printf (stream, \" [--%s[=%s]]\", opt->name, arg);\n          else\n            __argp_fmtstream_printf (stream, \" [--%s=%s]\", opt->name, arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1330,"col":33,"offset":44791},"end":{"line":1330,"col":73,"offset":44831},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1b229327378d1a68d46b2889167f042098fd4bbdec841f36089fffb817ea8788042c94aec6d6571c0b1f0704822dd8babe7c50f3019ae0a2268d0b2670260d8c_0","lines":"      char *short_no_arg_opts = alloca (strlen (hol->short_options) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1330,"col":33,"offset":44791},"end":{"line":1330,"col":73,"offset":44831},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":1330,"col":33,"offset":44791},"end":{"line":1330,"col":39,"offset":44797},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dac5b5157e52cfe5e05f5c11906a0cba4dbad4dfee97a047341c1232b4f0e3922f7ba40a8b9a732f06f5cf947f87fc8dbe497f5e88c639f706f32ace884347db_0","lines":"      char *short_no_arg_opts = alloca (strlen (hol->short_options) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1389,"col":10,"offset":46975},"end":{"line":1389,"col":20,"offset":46985},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1389,"col":10,"offset":46975},"end":{"line":1389,"col":16,"offset":46981},"abstract_content":"levels"},"$SIGNED":{"start":{"line":1389,"col":19,"offset":46984},"end":{"line":1389,"col":20,"offset":46985},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5a1f696351c904acd40eb2890fdbef250dbd9d1e82d6c2ec32b283d82aec1ce004297514885b31d0fec283e31d0f8308d10496ef4a01ca5cb8dc31753b3368e0_0","lines":"  size_t levels = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1436,"col":43,"offset":48614},"end":{"line":1436,"col":50,"offset":48621},"extra":{"metavars":{"$PTR1":{"start":{"line":1436,"col":43,"offset":48614},"end":{"line":1436,"col":45,"offset":48616},"abstract_content":"nl"},"$PTR2":{"start":{"line":1436,"col":48,"offset":48619},"end":{"line":1436,"col":50,"offset":48621},"abstract_content":"cp"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed08a8206718782460c9279dbc383a706285a8d5fd7577b780364ff178533d907f1ee3a3411913f6f09f310e14001606b7297e092b7aceb19186b45e33c73fad_0","lines":"      __argp_fmtstream_write (stream, cp, nl - cp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1439,"col":5,"offset":48662},"end":{"line":1439,"col":25,"offset":48682},"extra":{"metavars":{"$PTR":{"start":{"line":1439,"col":11,"offset":48668},"end":{"line":1439,"col":23,"offset":48680},"abstract_content":"(char*fdoc"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf2166e1943979d122e8aeb23f7c191169991e2e9033450b7899b97b08c808c66f4e76b69d84f938ea486f5881dd54fa2f9aba59d55f41c94986cb6d9b88e1e8_0","lines":"    free ((char *)fdoc);        /* Free user's modified doc string.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1478,"col":10,"offset":50033},"end":{"line":1478,"col":28,"offset":50051},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1478,"col":10,"offset":50033},"end":{"line":1478,"col":24,"offset":50047},"abstract_content":"inp_text_limit"},"$SIGNED":{"start":{"line":1478,"col":27,"offset":50050},"end":{"line":1478,"col":28,"offset":50051},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"64ccb4963e3e3c218b9e58b77c45648d77acd8cb3f84ed32bab4f076b5732e89605f87ba4047496628acf2ea19d21118c69a04cbf22b75b897586598dd3ec06a_0","lines":"  size_t inp_text_limit = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1486,"col":7,"offset":50275},"end":{"line":1486,"col":54,"offset":50322},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1486,"col":7,"offset":50275},"end":{"line":1486,"col":21,"offset":50289},"abstract_content":"inp_text_limit"},"$SIGNED":{"start":{"line":1486,"col":26,"offset":50294},"end":{"line":1486,"col":30,"offset":50298},"abstract_content":"post"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"49851efbe3f7f3c77b3daa8bae125185a10829a7adac7f91c3627c47b04b3b6ba6f7e445d09d949f701df0402f7f552351e744945cd029d88762582adee68218_0","lines":"      inp_text_limit = (!post && vt) ? (vt - doc) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1486,"col":41,"offset":50309},"end":{"line":1486,"col":49,"offset":50317},"extra":{"metavars":{"$PTR1":{"start":{"line":1486,"col":41,"offset":50309},"end":{"line":1486,"col":43,"offset":50311},"abstract_content":"vt","propagated_value":{"svalue_start":{"line":1484,"col":18,"offset":50200},"svalue_end":{"line":1484,"col":36,"offset":50218},"svalue_abstract_content":"strchr(doc'\\v')"}},"$PTR2":{"start":{"line":1486,"col":46,"offset":50314},"end":{"line":1486,"col":49,"offset":50317},"abstract_content":"doc"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e0008e4a65138969a88097ecc117555d9911899323ca713c66055b6f8b869e42ca6808eeeb3bcfa92d65afad38d41319657e8ca2b2cd6b96537cb7fde9d8506_0","lines":"      inp_text_limit = (!post && vt) ? (vt - doc) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1524,"col":5,"offset":51318},"end":{"line":1524,"col":26,"offset":51339},"extra":{"metavars":{"$PTR":{"start":{"line":1524,"col":11,"offset":51324},"end":{"line":1524,"col":24,"offset":51337},"abstract_content":"(char*text"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"36156be153ef14252674d8039d2f6d6e2b392ab2403c51112fb5641a8f74ef5f7b52e51c0b565ec2ea1168919cc601e8871544cf9fe884ac5f34734fcf4ef487_0","lines":"    free ((char *) text);       /* Free TEXT returned from the help filter.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1526,"col":5,"offset":51453},"end":{"line":1526,"col":30,"offset":51478},"extra":{"metavars":{"$PTR":{"start":{"line":1526,"col":11,"offset":51459},"end":{"line":1526,"col":28,"offset":51476},"abstract_content":"(char*inp_text"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c73c354a16c6e0bf1b4c1a55dfe2767ec5ef1a064823369b8e1ff43bbf7cad9ebafa3453ec43567ae41552eefd036be3865c0f1269667ec9733f56c1edd8d4f0_0","lines":"    free ((char *) inp_text);   /* We copied INP_TEXT, so free it now.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1537,"col":11,"offset":51870},"end":{"line":1537,"col":32,"offset":51891},"extra":{"metavars":{"$PTR":{"start":{"line":1537,"col":17,"offset":51876},"end":{"line":1537,"col":30,"offset":51889},"abstract_content":"(char*text"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"36156be153ef14252674d8039d2f6d6e2b392ab2403c51112fb5641a8f74ef5f7b52e51c0b565ec2ea1168919cc601e8871544cf9fe884ac5f34734fcf4ef487_1","lines":"          free ((char *) text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1586,"col":3,"offset":53137},"end":{"line":1595,"col":6,"offset":53414},"extra":{"metavars":{"$EXPR1":{"start":{"line":1586,"col":7,"offset":53141},"end":{"line":1586,"col":12,"offset":53146},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1586,"col":16,"offset":53150},"end":{"line":1586,"col":72,"offset":53206},"abstract_content":"ARGP_HELP_USAGE|ARGP_HELP_SHORT_USAGE|ARGP_HELP_LONG"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"caf1f51f881a20c6b73673d8b173e0be35115491a8f4e9b144a157b44ad08835115e80ef009faab867ed14ca341cd945cf668c969cc18625490c94a6287c1e17_0","lines":"  if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE | ARGP_HELP_LONG))\n    {\n      hol = argp_hol (argp, 0);\n\n      /* If present, these options always come last.  */\n      hol_set_group (hol, \"help\", -1);\n      hol_set_group (hol, \"version\", -1);\n\n      hol_sort (hol);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1597,"col":3,"offset":53418},"end":{"line":1650,"col":6,"offset":55349},"extra":{"metavars":{"$EXPR1":{"start":{"line":1597,"col":7,"offset":53422},"end":{"line":1597,"col":12,"offset":53427},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1597,"col":16,"offset":53431},"end":{"line":1597,"col":55,"offset":53470},"abstract_content":"ARGP_HELP_USAGE|ARGP_HELP_SHORT_USAGE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57909bb36cd35cc7eeabc73d69a27908ed7ebcddd97214c482f528a35a845ad4341afa8f647ca801b0e5d2b65bdbf55f0bf0bec0f1b8db36a5495a78d1473c21_0","lines":"  if (flags & (ARGP_HELP_USAGE | ARGP_HELP_SHORT_USAGE))\n    /* Print a short \"Usage:\" message.  */\n    {\n      int first_pattern = 1, more_patterns;\n      size_t num_pattern_levels = argp_args_levels (argp);\n      char *pattern_levels = alloca (num_pattern_levels);\n\n      memset (pattern_levels, 0, num_pattern_levels);\n\n      do\n        {\n          int old_lm;\n          int old_wm = __argp_fmtstream_set_wmargin (fs, uparams.usage_indent);\n          char *levels = pattern_levels;\n\n          if (first_pattern)\n            __argp_fmtstream_printf (fs, \"%s %s\",\n                                     dgettext (argp->argp_domain, \"Usage:\"),\n                                     name);\n          else\n            __argp_fmtstream_printf (fs, \"%s %s\",\n                                     dgettext (argp->argp_domain, \"  or: \"),\n                                     name);\n\n          /* We set the lmargin as well as the wmargin, because hol_usage\n             manually wraps options with newline to avoid annoying breaks.  */\n          old_lm = __argp_fmtstream_set_lmargin (fs, uparams.usage_indent);\n\n          if (flags & ARGP_HELP_SHORT_USAGE)\n            /* Just show where the options go.  */\n            {\n              if (hol->num_entries > 0)\n                __argp_fmtstream_puts (fs, dgettext (argp->argp_domain,\n                                                     \" [OPTION...]\"));\n            }\n          else\n            /* Actually print the options.  */\n            {\n              hol_usage (hol, fs);\n              flags |= ARGP_HELP_SHORT_USAGE; /* But only do so once.  */\n            }\n\n          more_patterns = argp_args_usage (argp, state, &levels, 1, fs);\n\n          __argp_fmtstream_set_wmargin (fs, old_wm);\n          __argp_fmtstream_set_lmargin (fs, old_lm);\n\n          __argp_fmtstream_putc (fs, '\\n');\n          anything = 1;\n\n          first_pattern = 0;\n        }\n      while (more_patterns);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1602,"col":30,"offset":53654},"end":{"line":1602,"col":57,"offset":53681},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"1b229327378d1a68d46b2889167f042098fd4bbdec841f36089fffb817ea8788042c94aec6d6571c0b1f0704822dd8babe7c50f3019ae0a2268d0b2670260d8c_1","lines":"      char *pattern_levels = alloca (num_pattern_levels);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1602,"col":30,"offset":53654},"end":{"line":1602,"col":57,"offset":53681},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":1602,"col":30,"offset":53654},"end":{"line":1602,"col":36,"offset":53660},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dac5b5157e52cfe5e05f5c11906a0cba4dbad4dfee97a047341c1232b4f0e3922f7ba40a8b9a732f06f5cf947f87fc8dbe497f5e88c639f706f32ace884347db_1","lines":"      char *pattern_levels = alloca (num_pattern_levels);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1625,"col":11,"offset":54529},"end":{"line":1637,"col":14,"offset":55024},"extra":{"metavars":{"$EXPR1":{"start":{"line":1625,"col":15,"offset":54533},"end":{"line":1625,"col":20,"offset":54538},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1625,"col":23,"offset":54541},"end":{"line":1625,"col":44,"offset":54562},"abstract_content":"ARGP_HELP_SHORT_USAGE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"204dbe8a0f85f0efa82fe30591be4301519d98b4ffbfcd0ac0f388e6eedc093387c9b823dbc93a64c02056d4dcdb914b12294b4b6d96c37b0e9ad647e422edd8_0","lines":"          if (flags & ARGP_HELP_SHORT_USAGE)\n            /* Just show where the options go.  */\n            {\n              if (hol->num_entries > 0)\n                __argp_fmtstream_puts (fs, dgettext (argp->argp_domain,\n                                                     \" [OPTION...]\"));\n            }\n          else\n            /* Actually print the options.  */\n            {\n              hol_usage (hol, fs);\n              flags |= ARGP_HELP_SHORT_USAGE; /* But only do so once.  */\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1652,"col":3,"offset":55353},"end":{"line":1653,"col":53,"offset":55436},"extra":{"metavars":{"$EXPR1":{"start":{"line":1652,"col":7,"offset":55357},"end":{"line":1652,"col":12,"offset":55362},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1652,"col":15,"offset":55365},"end":{"line":1652,"col":32,"offset":55382},"abstract_content":"ARGP_HELP_PRE_DOC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fa65678dd64d1007675da1714add4dc3317e4c96371280be27cc02f3b38ce301f85a12a2c2e6eec135b4941e278ebf79b52a5c32f6d881457acb6e03096166f7_0","lines":"  if (flags & ARGP_HELP_PRE_DOC)\n    anything |= argp_doc (argp, state, 0, 0, 1, fs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1655,"col":3,"offset":55440},"end":{"line":1661,"col":6,"offset":55668},"extra":{"metavars":{"$EXPR1":{"start":{"line":1655,"col":7,"offset":55444},"end":{"line":1655,"col":12,"offset":55449},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1655,"col":15,"offset":55452},"end":{"line":1655,"col":28,"offset":55465},"abstract_content":"ARGP_HELP_SEE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6167d9a8e635f2172b03795c58e88aa54b2c74d1a1bfa8c7363c4c712317373de9a6f5a13843e208a6a13b57f16fcad114689ed6d4c80b72488f253dc596693d_0","lines":"  if (flags & ARGP_HELP_SEE)\n    {\n      __argp_fmtstream_printf (fs, dgettext (argp->argp_domain, \"\\\nTry '%s --help' or '%s --usage' for more information.\\n\"),\n                               name, name);\n      anything = 1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1663,"col":3,"offset":55672},"end":{"line":1674,"col":6,"offset":55989},"extra":{"metavars":{"$EXPR1":{"start":{"line":1663,"col":7,"offset":55676},"end":{"line":1663,"col":12,"offset":55681},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1663,"col":15,"offset":55684},"end":{"line":1663,"col":29,"offset":55698},"abstract_content":"ARGP_HELP_LONG"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1d9179083345e90ef9196b477fc9f82d908536440548f02371fedb52456f7327c368d7751c2d4a5194c3e35ef6fafd8dd7181e28b4ca2748a831af831ef68ca_0","lines":"  if (flags & ARGP_HELP_LONG)\n    /* Print a long, detailed help message.  */\n    {\n      /* Print info about all the options.  */\n      if (hol->num_entries > 0)\n        {\n          if (anything)\n            __argp_fmtstream_putc (fs, '\\n');\n          hol_help (hol, state, fs);\n          anything = 1;\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1676,"col":3,"offset":55993},"end":{"line":1678,"col":60,"offset":56139},"extra":{"metavars":{"$EXPR1":{"start":{"line":1676,"col":7,"offset":55997},"end":{"line":1676,"col":12,"offset":56002},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1676,"col":15,"offset":56005},"end":{"line":1676,"col":33,"offset":56023},"abstract_content":"ARGP_HELP_POST_DOC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5439439b1e6b63b90194013acb96b09cba477fe2bccab549ce6b66f37def46b36ec5ea6e72bce3546f5ddbc37ac337d95256cfa00a3860c40e21957e5c9a1933_0","lines":"  if (flags & ARGP_HELP_POST_DOC)\n    /* Print any documentation strings at the end.  */\n    anything |= argp_doc (argp, state, 1, anything, 0, fs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1680,"col":3,"offset":56143},"end":{"line":1688,"col":6,"offset":56490},"extra":{"metavars":{"$EXPR1":{"start":{"line":1680,"col":8,"offset":56148},"end":{"line":1680,"col":13,"offset":56153},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1680,"col":16,"offset":56156},"end":{"line":1680,"col":34,"offset":56174},"abstract_content":"ARGP_HELP_BUG_ADDR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"654a0b6c6d6ef670877bb598a5f764b7a7a9075b2dfb89518078152b896cef1740bde0a636ab554505668624673a69572357b0cbf6f19d8f5df53b45ee2856b6_0","lines":"  if ((flags & ARGP_HELP_BUG_ADDR) && argp_program_bug_address)\n    {\n      if (anything)\n        __argp_fmtstream_putc (fs, '\\n');\n      __argp_fmtstream_printf (fs, dgettext (argp->argp_domain,\n                                             \"Report bugs to %s.\\n\"),\n                               argp_program_bug_address);\n      anything = 1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1735,"col":3,"offset":57742},"end":{"line":1750,"col":4,"offset":58252},"extra":{"metavars":{"$EXPR1":{"start":{"line":1735,"col":21,"offset":57760},"end":{"line":1735,"col":33,"offset":57772},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1735,"col":36,"offset":57775},"end":{"line":1735,"col":48,"offset":57787},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73a8d218d8f63650484b58c56de4d3e6007d2df82e8cb437a67e8f860100c1ebabbe917fa5fe417ffcac4d3bf5a4a50b8659900bd92166fcf06b77b418d3e857_0","lines":"  if ((!state || ! (state->flags & ARGP_NO_ERRS)) && stream)\n    {\n      if (state && (state->flags & ARGP_LONG_ONLY))\n        flags |= ARGP_HELP_LONG_ONLY;\n\n      _help (state ? state->root_argp : 0, state, stream, flags,\n             state ? state->name : __argp_short_program_name ());\n\n      if (!state || ! (state->flags & ARGP_NO_EXIT))\n        {\n          if (flags & ARGP_HELP_EXIT_ERR)\n            exit (argp_err_exit_status);\n          if (flags & ARGP_HELP_EXIT_OK)\n            exit (0);\n        }\n  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1737,"col":7,"offset":57813},"end":{"line":1738,"col":38,"offset":57896},"extra":{"metavars":{"$EXPR1":{"start":{"line":1737,"col":21,"offset":57827},"end":{"line":1737,"col":33,"offset":57839},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1737,"col":36,"offset":57842},"end":{"line":1737,"col":50,"offset":57856},"abstract_content":"ARGP_LONG_ONLY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8bc25a22a59750e467005317d74f2b2c487b600ac1981824fab0a89c81912ce9c0aef47f1a90ac98de729c847e3fadf7297b3b6218611adebca27d8921794396_0","lines":"      if (state && (state->flags & ARGP_LONG_ONLY))\n        flags |= ARGP_HELP_LONG_ONLY;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1743,"col":7,"offset":58036},"end":{"line":1749,"col":10,"offset":58248},"extra":{"metavars":{"$EXPR1":{"start":{"line":1743,"col":24,"offset":58053},"end":{"line":1743,"col":36,"offset":58065},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1743,"col":39,"offset":58068},"end":{"line":1743,"col":51,"offset":58080},"abstract_content":"ARGP_NO_EXIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3dc220b7dedaaf4c154253ebb894e1c5d5a64315cf8414bce6f35292048f63d8f15f0d74556928fe4bb38f6a97f98b2d1f8c20683d93a1fb408b9505d9e60e2_0","lines":"      if (!state || ! (state->flags & ARGP_NO_EXIT))\n        {\n          if (flags & ARGP_HELP_EXIT_ERR)\n            exit (argp_err_exit_status);\n          if (flags & ARGP_HELP_EXIT_OK)\n            exit (0);\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1745,"col":11,"offset":58103},"end":{"line":1746,"col":41,"offset":58175},"extra":{"metavars":{"$EXPR1":{"start":{"line":1745,"col":15,"offset":58107},"end":{"line":1745,"col":20,"offset":58112},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1745,"col":23,"offset":58115},"end":{"line":1745,"col":41,"offset":58133},"abstract_content":"ARGP_HELP_EXIT_ERR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"af29d0a079a9452f25be21551996b3847cefa78013f2c51ac9084de7cf9a9476d422e29b1628af03f4cce2f28d826b229d2471dea14d206125820211051755e2_0","lines":"          if (flags & ARGP_HELP_EXIT_ERR)\n            exit (argp_err_exit_status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1747,"col":11,"offset":58186},"end":{"line":1748,"col":22,"offset":58238},"extra":{"metavars":{"$EXPR1":{"start":{"line":1747,"col":15,"offset":58190},"end":{"line":1747,"col":20,"offset":58195},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1747,"col":23,"offset":58198},"end":{"line":1747,"col":40,"offset":58215},"abstract_content":"ARGP_HELP_EXIT_OK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0646a7e21da12c67ea1b4c5df0411f5b36ca6bd12664e5e78beeb8ca00d79c2c4690c18fc5e3bbfce21c042586b162a82cf0fb77a1374a4da83c4a9884f3498_0","lines":"          if (flags & ARGP_HELP_EXIT_OK)\n            exit (0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1762,"col":3,"offset":58592},"end":{"line":1805,"col":6,"offset":59608},"extra":{"metavars":{"$EXPR1":{"start":{"line":1762,"col":19,"offset":58608},"end":{"line":1762,"col":31,"offset":58620},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1762,"col":34,"offset":58623},"end":{"line":1762,"col":46,"offset":58635},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73a8d218d8f63650484b58c56de4d3e6007d2df82e8cb437a67e8f860100c1ebabbe917fa5fe417ffcac4d3bf5a4a50b8659900bd92166fcf06b77b418d3e857_1","lines":"  if (!state || !(state->flags & ARGP_NO_ERRS))\n    {\n      FILE *stream = state ? state->err_stream : stderr;\n\n      if (stream)\n        {\n          va_list ap;\n\n#if _LIBC || (HAVE_FLOCKFILE && HAVE_FUNLOCKFILE)\n          __flockfile (stream);\n#endif\n\n          va_start (ap, fmt);\n\n#ifdef _LIBC\n          char *buf;\n\n          if (_IO_vasprintf (&buf, fmt, ap) < 0)\n            buf = NULL;\n\n          __fxprintf (stream, \"%s: %s\\n\",\n                      state ? state->name : __argp_short_program_name (), buf);\n\n          free (buf);\n#else\n          fputs_unlocked (state ? state->name : __argp_short_program_name (),\n                          stream);\n          putc_unlocked (':', stream);\n          putc_unlocked (' ', stream);\n\n          vfprintf (stream, fmt, ap);\n\n          putc_unlocked ('\\n', stream);\n#endif\n\n          __argp_state_help (state, stream, ARGP_HELP_STD_ERR);\n\n          va_end (ap);\n\n#if _LIBC || (HAVE_FLOCKFILE && HAVE_FUNLOCKFILE)\n          __funlockfile (stream);\n#endif\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1779,"col":15,"offset":58923},"end":{"line":1779,"col":44,"offset":58952},"extra":{"metavars":{"$FUN":{"start":{"line":1779,"col":15,"offset":58923},"end":{"line":1779,"col":28,"offset":58936},"abstract_content":"_IO_vasprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e50238d4d4ef12b1f85b337448b8da29a373f555285eea978545b4a5bc5fd088f3c9cf8a22275ca87ff1d11237e08291f19b26a876434978446cda65f23b8acb_0","lines":"          if (_IO_vasprintf (&buf, fmt, ap) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1785,"col":11,"offset":59116},"end":{"line":1785,"col":22,"offset":59127},"extra":{"metavars":{"$PTR":{"start":{"line":1785,"col":17,"offset":59122},"end":{"line":1785,"col":20,"offset":59125},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f94715d66f08a6134f429edd2d8300c591e2d38a93840924689a7391ad3a258e850557f5f960f217d148deb927810c42b2a08c43ff54a4a2bc0ba579aad7184_0","lines":"          free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1792,"col":11,"offset":59336},"end":{"line":1792,"col":37,"offset":59362},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c31024dc2bfc2acb3df8ec9cd51dfc9d180e43f643082febf27d4f186a33f1dd98e74e14e00f433035243227b95b291967c968f4f1d96ecdf4a0cdd3b7c5e236_0","lines":"          vfprintf (stream, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1823,"col":3,"offset":60391},"end":{"line":1905,"col":6,"offset":62478},"extra":{"metavars":{"$EXPR1":{"start":{"line":1823,"col":19,"offset":60407},"end":{"line":1823,"col":31,"offset":60419},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1823,"col":34,"offset":60422},"end":{"line":1823,"col":46,"offset":60434},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73a8d218d8f63650484b58c56de4d3e6007d2df82e8cb437a67e8f860100c1ebabbe917fa5fe417ffcac4d3bf5a4a50b8659900bd92166fcf06b77b418d3e857_2","lines":"  if (!state || !(state->flags & ARGP_NO_ERRS))\n    {\n      FILE *stream = state ? state->err_stream : stderr;\n\n      if (stream)\n        {\n#if _LIBC || (HAVE_FLOCKFILE && HAVE_FUNLOCKFILE)\n          __flockfile (stream);\n#endif\n\n#ifdef _LIBC\n          __fxprintf (stream, \"%s\",\n                      state ? state->name : __argp_short_program_name ());\n#else\n          fputs_unlocked (state ? state->name : __argp_short_program_name (),\n                          stream);\n#endif\n\n          if (fmt)\n            {\n              va_list ap;\n\n              va_start (ap, fmt);\n#ifdef _LIBC\n              char *buf;\n\n              if (_IO_vasprintf (&buf, fmt, ap) < 0)\n                buf = NULL;\n\n              __fxprintf (stream, \": %s\", buf);\n\n              free (buf);\n#else\n              putc_unlocked (':', stream);\n              putc_unlocked (' ', stream);\n\n              vfprintf (stream, fmt, ap);\n#endif\n\n              va_end (ap);\n            }\n\n          if (errnum)\n            {\n              char buf[200];\n\n#ifdef _LIBC\n              __fxprintf (stream, \": %s\",\n                          __strerror_r (errnum, buf, sizeof (buf)));\n#else\n              char const *s = NULL;\n              putc_unlocked (':', stream);\n              putc_unlocked (' ', stream);\n# if HAVE_DECL_STRERROR_R\n#  if STRERROR_R_CHAR_P\n              s = __strerror_r (errnum, buf, sizeof buf);\n#  else\n              if (__strerror_r (errnum, buf, sizeof buf) == 0)\n                s = buf;\n#  endif\n# endif\n              if (! s && ! (s = strerror (errnum)))\n                s = dgettext (state->root_argp->argp_domain,\n                              \"Unknown system error\");\n              fputs_unlocked (s, stream);\n#endif\n            }\n\n#if _LIBC\n          if (_IO_fwide (stream, 0) > 0)\n            putwc_unlocked (L'\\n', stream);\n          else\n#endif\n            putc_unlocked ('\\n', stream);\n\n#if _LIBC || (HAVE_FLOCKFILE && HAVE_FUNLOCKFILE)\n          __funlockfile (stream);\n#endif\n\n          if (status && (!state || !(state->flags & ARGP_NO_EXIT)))\n            exit (status);\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1849,"col":19,"offset":61021},"end":{"line":1849,"col":48,"offset":61050},"extra":{"metavars":{"$FUN":{"start":{"line":1849,"col":19,"offset":61021},"end":{"line":1849,"col":32,"offset":61034},"abstract_content":"_IO_vasprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e50238d4d4ef12b1f85b337448b8da29a373f555285eea978545b4a5bc5fd088f3c9cf8a22275ca87ff1d11237e08291f19b26a876434978446cda65f23b8acb_1","lines":"              if (_IO_vasprintf (&buf, fmt, ap) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1854,"col":15,"offset":61148},"end":{"line":1854,"col":26,"offset":61159},"extra":{"metavars":{"$PTR":{"start":{"line":1854,"col":21,"offset":61154},"end":{"line":1854,"col":24,"offset":61157},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f94715d66f08a6134f429edd2d8300c591e2d38a93840924689a7391ad3a258e850557f5f960f217d148deb927810c42b2a08c43ff54a4a2bc0ba579aad7184_1","lines":"              free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1859,"col":15,"offset":61267},"end":{"line":1859,"col":41,"offset":61293},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c31024dc2bfc2acb3df8ec9cd51dfc9d180e43f643082febf27d4f186a33f1dd98e74e14e00f433035243227b95b291967c968f4f1d96ecdf4a0cdd3b7c5e236_1","lines":"              vfprintf (stream, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1884,"col":15,"offset":61898},"end":{"line":1886,"col":55,"offset":62051},"extra":{"metavars":{"$EXPR1":{"start":{"line":1884,"col":29,"offset":61912},"end":{"line":1884,"col":30,"offset":61913},"abstract_content":"s"},"$EXPR2":{"start":{"line":1884,"col":33,"offset":61916},"end":{"line":1884,"col":50,"offset":61933},"abstract_content":"strerror(errnum)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0a9224305c576cac413bf063e29b399a07d0c63439fba23014f07816bf39d6dadb72813395b248a89a85acf0800638f53bea58539a0a096245eb4f4a7e8663ba_0","lines":"              if (! s && ! (s = strerror (errnum)))\n                s = dgettext (state->root_argp->argp_domain,\n                              \"Unknown system error\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1902,"col":11,"offset":62378},"end":{"line":1903,"col":27,"offset":62462},"extra":{"metavars":{"$EXPR1":{"start":{"line":1902,"col":38,"offset":62405},"end":{"line":1902,"col":50,"offset":62417},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":1902,"col":53,"offset":62420},"end":{"line":1902,"col":65,"offset":62432},"abstract_content":"ARGP_NO_EXIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3dc220b7dedaaf4c154253ebb894e1c5d5a64315cf8414bce6f35292048f63d8f15f0d74556928fe4bb38f6a97f98b2d1f8c20683d93a1fb408b9505d9e60e2_1","lines":"          if (status && (!state || !(state->flags & ARGP_NO_EXIT)))\n            exit (status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":118,"col":7,"offset":3884},"end":{"line":121,"col":30,"offset":4043},"extra":{"metavars":{"$EXPR1":{"start":{"line":118,"col":28,"offset":3905},"end":{"line":118,"col":44,"offset":3921},"abstract_content":"ARGP_PARSE_ARGV0"},"$EXPR2":{"start":{"line":118,"col":47,"offset":3924},"end":{"line":118,"col":59,"offset":3936},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"410d933430e4be0805c501572f70c39a4ca6e15c737ebe633fba99b763432ea0a135b0c132c3faecc488e7742542a34db4a51300ead537e26a0b25a5cb4ff4a6_0","lines":"      if ((state->flags & (ARGP_PARSE_ARGV0 | ARGP_NO_ERRS))\n          == ARGP_PARSE_ARGV0)\n        /* Update what getopt uses too.  */\n        state->argv[0] = arg;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":126,"col":20,"offset":4097},"end":{"line":126,"col":45,"offset":4122},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"44d89e11d691e766153a5568cce4c2bd81d3ff78c6f9264ce7219de602dee4ff4c7a6072226e6cba503dec355778bd6ecb4e0089ff61aa2b4a189d868cca5809_0","lines":"      _argp_hang = atoi (arg ? arg : \"3600\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":161,"col":7,"offset":5049},"end":{"line":162,"col":18,"offset":5103},"extra":{"metavars":{"$EXPR1":{"start":{"line":161,"col":14,"offset":5056},"end":{"line":161,"col":26,"offset":5068},"abstract_content":"state->->flags"},"$EXPR2":{"start":{"line":161,"col":29,"offset":5071},"end":{"line":161,"col":41,"offset":5083},"abstract_content":"ARGP_NO_EXIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"02ee5abd27d58f5070214b48adeab16b48f9153e6d576b532af09779fe2a1257d047b70463a5c21a4c7af5c502ad1c2b01acbc7e145af5aba1456a1ac05d4039_0","lines":"      if (! (state->flags & ARGP_NO_EXIT))\n        exit (0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":305,"col":13,"offset":9539},"end":{"line":307,"col":26,"offset":9670},"extra":{"metavars":{"$EXPR1":{"start":{"line":305,"col":20,"offset":9546},"end":{"line":305,"col":30,"offset":9556},"abstract_content":"opt->->flags"},"$EXPR2":{"start":{"line":305,"col":33,"offset":9559},"end":{"line":305,"col":45,"offset":9571},"abstract_content":"OPTION_ALIAS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c0682ddb668596c483f86d6dd544001599139f018570063a82114cc3b44e319c0fb00dd838ea0d3f808b5fcce541dbb35967b82931c2abf201d18cd37ac51df5_0","lines":"            if (! (opt->flags & OPTION_ALIAS))\n              /* OPT isn't an alias, so we can use values from it.  */\n              real = opt;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":309,"col":13,"offset":9684},"end":{"line":350,"col":16,"offset":11598},"extra":{"metavars":{"$EXPR1":{"start":{"line":309,"col":20,"offset":9691},"end":{"line":309,"col":31,"offset":9702},"abstract_content":"real->->flags"},"$EXPR2":{"start":{"line":309,"col":34,"offset":9705},"end":{"line":309,"col":44,"offset":9715},"abstract_content":"OPTION_DOC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c553843d8b0ec3d0a777cfcb6b74831df2deba986ccefaedab4d83ec1230029c5a6c37875f49778d48c8dd424189a60fa424ec926a3a54e765728c3071f0378_0","lines":"            if (! (real->flags & OPTION_DOC))\n              /* A real option (not just documentation).  */\n              {\n                if (__option_is_short (opt))\n                  /* OPT can be used as a short option.  */\n                  {\n                    *cvt->short_end++ = opt->key;\n                    if (real->arg)\n                      {\n                        *cvt->short_end++ = ':';\n                        if (real->flags & OPTION_ARG_OPTIONAL)\n                          *cvt->short_end++ = ':';\n                      }\n                    *cvt->short_end = '\\0'; /* keep 0 terminated */\n                  }\n\n                if (opt->name\n                    && find_long_option (cvt->parser->long_opts, opt->name) < 0)\n                  /* OPT can be used as a long option.  */\n                  {\n                    cvt->long_end->name = opt->name;\n                    cvt->long_end->has_arg =\n                      (real->arg\n                       ? (real->flags & OPTION_ARG_OPTIONAL\n                          ? optional_argument\n                          : required_argument)\n                       : no_argument);\n                    cvt->long_end->flag = 0;\n                    /* we add a disambiguating code to all the user's\n                       values (which is removed before we actually call\n                       the function to parse the value); this means that\n                       the user loses use of the high 8 bits in all his\n                       values (the sign of the lower bits is preserved\n                       however)...  */\n                    cvt->long_end->val =\n                      ((opt->key ? opt->key : real->key) & USER_MASK)\n                      + (((group - cvt->parser->groups) + 1) << USER_BITS);\n\n                    /* Keep the LONG_OPTS list terminated.  */\n                    (++cvt->long_end)->name = NULL;\n                  }\n              }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":319,"col":25,"offset":10102},"end":{"line":320,"col":51,"offset":10191},"extra":{"metavars":{"$EXPR1":{"start":{"line":319,"col":29,"offset":10106},"end":{"line":319,"col":40,"offset":10117},"abstract_content":"real->->flags"},"$EXPR2":{"start":{"line":319,"col":43,"offset":10120},"end":{"line":319,"col":62,"offset":10139},"abstract_content":"OPTION_ARG_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8ad67b79012ea647c7b5faeb6b20dbba9991423529448bb670ea9b7885e0b0561d36d7e2c8fe7184bf3097d8c397100875ccee1f916f83a2a731ae9efa6b9586_0","lines":"                        if (real->flags & OPTION_ARG_OPTIONAL)\n                          *cvt->short_end++ = ':';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":367,"col":20,"offset":12047},"end":{"line":367,"col":36,"offset":12063},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":367,"col":20,"offset":12047},"end":{"line":367,"col":32,"offset":12059},"abstract_content":"num_children"},"$SIGNED":{"start":{"line":367,"col":35,"offset":12062},"end":{"line":367,"col":36,"offset":12063},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d31a5b30e8469f981e719a11e6839288beb7a8ede484cd0602b56d176ccedab2b9fb73326b10cfb28e1282a37c44db16b46483b869ecf122c1ab8234c477d19f_0","lines":"          unsigned num_children = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":381,"col":16,"offset":12345},"end":{"line":381,"col":25,"offset":12354},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":381,"col":16,"offset":12345},"end":{"line":381,"col":21,"offset":12350},"abstract_content":"index"},"$SIGNED":{"start":{"line":381,"col":24,"offset":12353},"end":{"line":381,"col":25,"offset":12354},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3888b1ff99b5390e14a7989a027ea0d3294a6c4286199d13bfcdb35459c39ff81affdde997823ed0637cde7d5ef62ec90589726f420f675506377952498939c_0","lines":"      unsigned index = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":401,"col":3,"offset":12853},"end":{"line":404,"col":28,"offset":12968},"extra":{"metavars":{"$EXPR1":{"start":{"line":401,"col":7,"offset":12857},"end":{"line":401,"col":12,"offset":12862},"abstract_content":"flags"},"$EXPR2":{"start":{"line":401,"col":15,"offset":12865},"end":{"line":401,"col":28,"offset":12878},"abstract_content":"ARGP_IN_ORDER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"df95da1e1ed0aaab9bfc92399d4f8a7dae0b1a5b74ea1ace35a9b1317bed51360c32f040a9fe94e4f5dacbd13ab9cac569eaa96b533b0a7b60099c48b18467b1_0","lines":"  if (flags & ARGP_IN_ORDER)\n    *cvt.short_end++ = '-';\n  else if (flags & ARGP_NO_ARGS)\n    *cvt.short_end++ = '+';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":403,"col":8,"offset":12915},"end":{"line":404,"col":28,"offset":12968},"extra":{"metavars":{"$EXPR1":{"start":{"line":403,"col":12,"offset":12919},"end":{"line":403,"col":17,"offset":12924},"abstract_content":"flags"},"$EXPR2":{"start":{"line":403,"col":20,"offset":12927},"end":{"line":403,"col":32,"offset":12939},"abstract_content":"ARGP_NO_ARGS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"55cef14a680c3db25bee04c99240d909653a9a7c1abeb3a5dd1884dbe2edc522a4207c7b7e41e09293ccb465d6272e6d0a338ad3407f7907426c8b519225d21e_0","lines":"  else if (flags & ARGP_NO_ARGS)\n    *cvt.short_end++ = '+';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":481,"col":3,"offset":15105},"end":{"line":481,"col":54,"offset":15156},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":481,"col":3,"offset":15105},"end":{"line":481,"col":7,"offset":15109},"abstract_content":"glen"},"$SIGNED":{"start":{"line":481,"col":28,"offset":15130},"end":{"line":481,"col":29,"offset":15131},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fbaa1ddf0060aa7a6e9a6d9a5b6ab942914c3e22458924529408cbc878f6d191f3365560ebd39715534ca552f79aac430d17bd273a9c86ea9e27f49b7dab3723_0","lines":"  glen = (szs.num_groups + 1) * sizeof (struct group);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":483,"col":3,"offset":15209},"end":{"line":483,"col":53,"offset":15259},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":483,"col":3,"offset":15209},"end":{"line":483,"col":7,"offset":15213},"abstract_content":"llen"},"$SIGNED":{"start":{"line":483,"col":26,"offset":15232},"end":{"line":483,"col":27,"offset":15233},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c7081b9f618b41432405994b13feda44d3cadbdffd38e7c01143b0ab5615a8670d7d49e93a2628d6241b63df35f5afb8b22be74e40a672153b8415c83425aa82_0","lines":"  llen = (szs.long_len + 1) * sizeof (struct option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":484,"col":3,"offset":15263},"end":{"line":484,"col":27,"offset":15287},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":484,"col":3,"offset":15263},"end":{"line":484,"col":7,"offset":15267},"abstract_content":"slen"},"$SIGNED":{"start":{"line":484,"col":26,"offset":15286},"end":{"line":484,"col":27,"offset":15287},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"92f7d9a315268a1e8348c04038471e3482666c2811b6d4996dcbcee02ed6dea556de133c2f3a9f7f6ffd773642f8bf141d36286bff57aa1e9f116b46d95a40a5_0","lines":"  slen = szs.short_len + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":496,"col":21,"offset":15727},"end":{"line":496,"col":34,"offset":15740},"extra":{"metavars":{"$X":{"start":{"line":494,"col":10,"offset":15693},"end":{"line":494,"col":14,"offset":15697},"abstract_content":"lsum","propagated_value":{"svalue_start":{"line":493,"col":10,"offset":15671},"svalue_end":{"line":493,"col":21,"offset":15682},"svalue_abstract_content":"csum+llen"}},"$Y":{"start":{"line":494,"col":17,"offset":15700},"end":{"line":494,"col":21,"offset":15704},"abstract_content":"slen","propagated_value":{"svalue_start":{"line":484,"col":10,"offset":15270},"svalue_end":{"line":484,"col":27,"offset":15287},"svalue_abstract_content":"szs.short_len+1"}},"$FUN":{"start":{"line":496,"col":21,"offset":15727},"end":{"line":496,"col":27,"offset":15733},"abstract_content":"malloc"},"$N":{"start":{"line":496,"col":29,"offset":15735},"end":{"line":496,"col":33,"offset":15739},"abstract_content":"ssum","propagated_value":{"svalue_start":{"line":494,"col":10,"offset":15693},"svalue_end":{"line":494,"col":21,"offset":15704},"svalue_abstract_content":"lsum+slen"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f16d892c117174dd676444326ca14dc2c03c5ff576df0807b9fbf3fbe5f23ff5a82df144d9c795dfcc19f2f1c307161080b0962dfd34627d14e9e38479d5b529_0","lines":"  parser->storage = malloc (ssum);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":496,"col":21,"offset":15727},"end":{"line":496,"col":34,"offset":15740},"extra":{"metavars":{"$FUN":{"start":{"line":496,"col":21,"offset":15727},"end":{"line":496,"col":27,"offset":15733},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c3d737ea2d31efe1dffc2828e7152f356a750bf3e10e8743151f21b7ba4e6571b140d3fb8e6e00c43b206341d6d60bb2fe5cc16dbf93947298b611a642c16fd_0","lines":"  parser->storage = malloc (ssum);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":513,"col":24,"offset":16269},"end":{"line":513,"col":28,"offset":16273},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_0","lines":"  parser->state.argv = argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":549,"col":3,"offset":17531},"end":{"line":558,"col":33,"offset":17911},"extra":{"metavars":{"$EXPR1":{"start":{"line":549,"col":7,"offset":17535},"end":{"line":549,"col":26,"offset":17554},"abstract_content":"parser->->state.flags"},"$EXPR2":{"start":{"line":549,"col":29,"offset":17557},"end":{"line":549,"col":41,"offset":17569},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9ba05c8a82ecd0072e690a2f4fccdb01251ed82b38b9566d57cee1c4320ef5361f33cfe26f2bb0fa5211c2c48e91eec09eed35fdc71c7bb23823c10cad1bec41_0","lines":"  if (parser->state.flags & ARGP_NO_ERRS)\n    {\n      parser->opt_data.opterr = 0;\n      if (parser->state.flags & ARGP_PARSE_ARGV0)\n        /* getopt always skips ARGV[0], so we have to fake it out.  As long\n           as OPTERR is 0, then it shouldn't actually try to access it.  */\n        parser->state.argv--, parser->state.argc++;\n    }\n  else\n    parser->opt_data.opterr = 1;        /* Print error messages.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":552,"col":7,"offset":17618},"end":{"line":555,"col":52,"offset":17865},"extra":{"metavars":{"$EXPR1":{"start":{"line":552,"col":11,"offset":17622},"end":{"line":552,"col":30,"offset":17641},"abstract_content":"parser->->state.flags"},"$EXPR2":{"start":{"line":552,"col":33,"offset":17644},"end":{"line":552,"col":49,"offset":17660},"abstract_content":"ARGP_PARSE_ARGV0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3256892274de33d072ed5c44322cb0c9839286d776f53529f0743e5044fbc7341f324bac60dbdf71f7e0eab4d3534aebcb1d0b36a25935929770ab397b263eba_0","lines":"      if (parser->state.flags & ARGP_PARSE_ARGV0)\n        /* getopt always skips ARGV[0], so we have to fake it out.  As long\n           as OPTERR is 0, then it shouldn't actually try to access it.  */\n        parser->state.argv--, parser->state.argc++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":560,"col":29,"offset":17977},"end":{"line":560,"col":33,"offset":17981},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_1","lines":"  if (parser->state.argv == argv && argv[0])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":560,"col":37,"offset":17985},"end":{"line":560,"col":41,"offset":17989},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_2","lines":"  if (parser->state.argv == argv && argv[0])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":562,"col":44,"offset":18089},"end":{"line":562,"col":48,"offset":18093},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_3","lines":"    parser->state.name = __argp_base_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":609,"col":11,"offset":19631},"end":{"line":614,"col":42,"offset":19922},"extra":{"metavars":{"$EXPR1":{"start":{"line":609,"col":17,"offset":19637},"end":{"line":609,"col":36,"offset":19656},"abstract_content":"parser->->state.flags"},"$EXPR2":{"start":{"line":609,"col":39,"offset":19659},"end":{"line":609,"col":51,"offset":19671},"abstract_content":"ARGP_NO_ERRS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9ba05c8a82ecd0072e690a2f4fccdb01251ed82b38b9566d57cee1c4320ef5361f33cfe26f2bb0fa5211c2c48e91eec09eed35fdc71c7bb23823c10cad1bec41_1","lines":"          if (!(parser->state.flags & ARGP_NO_ERRS)\n              && parser->state.err_stream)\n            fprintf (parser->state.err_stream,\n                     dgettext (parser->argp->argp_domain,\n                               \"%s: Too many arguments\\n\"),\n                     parser->state.name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":611,"col":13,"offset":19728},"end":{"line":614,"col":41,"offset":19921},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a56ce4d126ce6a05ad34f7d38636eb0c8e92ea7d9e0cc76f9dc3cdc22cb2a99b16a721f3bf03a32ed5298da2bbdbe00fc032e5446fd9ed03d416a3f974a3ea7b_0","lines":"            fprintf (parser->state.err_stream,\n                     dgettext (parser->argp->argp_domain,\n                               \"%s: Too many arguments\\n\"),\n                     parser->state.name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":656,"col":3,"offset":21422},"end":{"line":656,"col":26,"offset":21445},"extra":{"metavars":{"$PTR":{"start":{"line":656,"col":9,"offset":21428},"end":{"line":656,"col":24,"offset":21443},"abstract_content":"parser->->storage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5fe52714ad67dc306406a474a93e32c38ba9e82794f48e24c56e30560c0d69e77650841ba312231d6db6c25ac6533fa02ed7d85250db87b1e410738751571267_0","lines":"  free (parser->storage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":798,"col":7,"offset":26611},"end":{"line":805,"col":50,"offset":27062},"extra":{"metavars":{"$EXPR1":{"start":{"line":798,"col":11,"offset":26615},"end":{"line":798,"col":30,"offset":26634},"abstract_content":"parser->->state.flags"},"$EXPR2":{"start":{"line":798,"col":33,"offset":26637},"end":{"line":798,"col":47,"offset":26651},"abstract_content":"ARGP_LONG_ONLY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fbbafe7356fe484779a96786c74093d21759ea9fabadf64d5ed7858c41cd3d97ee5ed969866ea456a80883079ae40c19390e191dfc97074a5040ffcaea5dad7f_0","lines":"      if (parser->state.flags & ARGP_LONG_ONLY)\n        opt = _getopt_long_only_r (parser->state.argc, parser->state.argv,\n                                   parser->short_opts, parser->long_opts, 0,\n                                   &parser->opt_data);\n      else\n        opt = _getopt_long_r (parser->state.argc, parser->state.argv,\n                              parser->short_opts, parser->long_opts, 0,\n                              &parser->opt_data);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":838,"col":7,"offset":28283},"end":{"line":850,"col":10,"offset":28698},"extra":{"metavars":{"$EXPR1":{"start":{"line":839,"col":15,"offset":28342},"end":{"line":839,"col":34,"offset":28361},"abstract_content":"parser->->state.flags"},"$EXPR2":{"start":{"line":839,"col":37,"offset":28364},"end":{"line":839,"col":49,"offset":28376},"abstract_content":"ARGP_NO_ARGS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"caae6efd1753acb223bb8fd9f7375e7700c261be239ba1303dda12a0788d6723123707c82fb4afb04026faf5ea164417d38b9ae713c16af5e57b3831c4bc713f_0","lines":"      if (parser->state.next >= parser->state.argc\n          || (parser->state.flags & ARGP_NO_ARGS))\n        /* Indicate that we're done.  */\n        {\n          *arg_ebadkey = 1;\n          return EBADKEY;\n        }\n      else\n        /* A non-option arg; simulate what getopt might have done.  */\n        {\n          opt = KEY_ARG;\n          parser->opt_data.optarg = parser->state.argv[parser->state.next++];\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":860,"col":5,"offset":28950},"end":{"line":860,"col":55,"offset":29000},"extra":{"metavars":{"$EXPR1":{"start":{"line":860,"col":21,"offset":28966},"end":{"line":860,"col":24,"offset":28969},"abstract_content":"opt"},"$EXPR2":{"start":{"line":860,"col":28,"offset":28973},"end":{"line":860,"col":35,"offset":28980},"abstract_content":"KEY_END"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5e27fc6e87f0679357b180db8639b65212e09234f87876d9e9cf37d37aa9603e4808369bebe6b40af5e888b65ccad649082a4993336381b7cddd607e9861fca_0","lines":"    *arg_ebadkey = (opt == KEY_END || opt == KEY_ARG);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":882,"col":3,"offset":29747},"end":{"line":892,"col":6,"offset":30076},"extra":{"metavars":{"$EXPR1":{"start":{"line":882,"col":9,"offset":29753},"end":{"line":882,"col":14,"offset":29758},"abstract_content":"flags"},"$EXPR2":{"start":{"line":882,"col":17,"offset":29761},"end":{"line":882,"col":33,"offset":29777},"abstract_content":"ARGP_PARSE_ARGV0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8187bdb5d059e01d803c8c4e59325d6880554ff34be2b1012a8be538f01f50e1ed19b9a2697c97cc52943093c2fd361ad638173a848e04e3a4b5591a5686753b_0","lines":"  if (!(flags & ARGP_PARSE_ARGV0))\n    {\n#if HAVE_DECL_PROGRAM_INVOCATION_NAME\n      if (!program_invocation_name)\n        program_invocation_name = argv[0];\n#endif\n#if HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME\n      if (!program_invocation_short_name)\n        program_invocation_short_name = __argp_base_name (argv[0]);\n#endif\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":886,"col":35,"offset":29894},"end":{"line":886,"col":39,"offset":29898},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_4","lines":"        program_invocation_name = argv[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":890,"col":59,"offset":30054},"end":{"line":890,"col":63,"offset":30058},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_5","lines":"        program_invocation_short_name = __argp_base_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":895,"col":3,"offset":30087},"end":{"line":916,"col":6,"offset":30780},"extra":{"metavars":{"$EXPR1":{"start":{"line":895,"col":10,"offset":30094},"end":{"line":895,"col":15,"offset":30099},"abstract_content":"flags"},"$EXPR2":{"start":{"line":895,"col":18,"offset":30102},"end":{"line":895,"col":30,"offset":30114},"abstract_content":"ARGP_NO_HELP"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"027ffa8651766a2f7019eea9d1b651ee2dd117f1fb6cf3e5164c344d412c96aee6c3ca66f97917a3435970aae5c07eebda3f805250fc7a485fd73d0b0880168e_0","lines":"  if (! (flags & ARGP_NO_HELP))\n    /* Add our own options.  */\n    {\n      struct argp_child *child = alloca (4 * sizeof (struct argp_child));\n      struct argp *top_argp = alloca (sizeof (struct argp));\n\n      /* TOP_ARGP has no options, it just serves to group the user & default\n         argps.  */\n      memset (top_argp, 0, sizeof (*top_argp));\n      top_argp->children = child;\n\n      memset (child, 0, 4 * sizeof (struct argp_child));\n\n      if (argp)\n        (child++)->argp = argp;\n      (child++)->argp = &argp_default_argp;\n      if (argp_program_version || argp_program_version_hook)\n        (child++)->argp = &argp_version_argp;\n      child->argp = 0;\n\n      argp = top_argp;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":898,"col":34,"offset":30188},"end":{"line":898,"col":73,"offset":30227},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"660e96ded65a1cf7d58ad8c88d12fa178bfa35e6856916755fc0d0b669a071b96211beb23448db16de23e1e095385d924584831a0ec98a2f980ffd601df569f2_0","lines":"      struct argp_child *child = alloca (4 * sizeof (struct argp_child));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":898,"col":34,"offset":30188},"end":{"line":898,"col":73,"offset":30227},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":898,"col":34,"offset":30188},"end":{"line":898,"col":40,"offset":30194},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed5025deefd375fbf735597b9b984c2e85c14c346a3c8ad9466c28e5b8f1c9b9e092ce7cf9e0600395a8cd49876d229776da34b6790ee3614bf031fbcc7b64de_0","lines":"      struct argp_child *child = alloca (4 * sizeof (struct argp_child));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":899,"col":31,"offset":30259},"end":{"line":899,"col":60,"offset":30288},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"660e96ded65a1cf7d58ad8c88d12fa178bfa35e6856916755fc0d0b669a071b96211beb23448db16de23e1e095385d924584831a0ec98a2f980ffd601df569f2_1","lines":"      struct argp *top_argp = alloca (sizeof (struct argp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":899,"col":31,"offset":30259},"end":{"line":899,"col":60,"offset":30288},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":899,"col":31,"offset":30259},"end":{"line":899,"col":37,"offset":30265},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed5025deefd375fbf735597b9b984c2e85c14c346a3c8ad9466c28e5b8f1c9b9e092ce7cf9e0600395a8cd49876d229776da34b6790ee3614bf031fbcc7b64de_1","lines":"      struct argp *top_argp = alloca (sizeof (struct argp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","start":{"line":919,"col":43,"offset":30873},"end":{"line":919,"col":47,"offset":30877},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bd1e8c6c497220f217a2848c2c70622ae1da1387b4ed4be9a62bd03db9e201c18f03b7e9518646b9eb9744f2837e757c4535222f0885b05f7086d8fb49d54082_6","lines":"  err = parser_init (&parser, argp, argc, argv, flags, input);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":603,"col":3,"offset":27959},"end":{"line":609,"col":6,"offset":28117},"extra":{"metavars":{"$EXPR1":{"start":{"line":603,"col":7,"offset":27963},"end":{"line":603,"col":19,"offset":27975},"abstract_content":"__opt->->flags"},"$EXPR2":{"start":{"line":603,"col":22,"offset":27978},"end":{"line":603,"col":32,"offset":27988},"abstract_content":"OPTION_DOC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"622b17d38da26d60b76bd37f97887fffd6af977b8b12831d0d3ab9959776f3640887e583f76b4d95beb1d3c636395815e5b5abbacb2c476495ab0110d023cdd9_0","lines":"  if (__opt->flags & OPTION_DOC)\n    return 0;\n  else\n    {\n      int __key = __opt->key;\n      return __key > 0 && __key <= UCHAR_MAX && isprint (__key);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/asnprintf.c","start":{"line":31,"col":12,"offset":979},"end":{"line":31,"col":57,"offset":1024},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":12,"offset":979},"end":{"line":31,"col":22,"offset":989},"abstract_content":"vasnprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9578c52c609cc3d98aa5bc6ebee96af44120e82c5515e57d79497b6b7411f33f0464f3c0936dce394094aa8c6656d17a464d8eeda4fa44e4faaf0a5c0a3f76ee_0","lines":"  result = vasnprintf (resultbuf, lengthp, format, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c","start":{"line":96,"col":11,"offset":3188},"end":{"line":96,"col":28,"offset":3205},"extra":{"metavars":{"$PTR":{"start":{"line":96,"col":17,"offset":3194},"end":{"line":96,"col":26,"offset":3203},"abstract_content":"proc_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5178e5134e938c6a2e6377ba64ba77fbadd563e182e6b390c77a78488cf29ab678959e8d2f3fe1cf18df228b43b8d38badc8291d00438a1d96c66c4f995991d1_0","lines":"          free (proc_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/basename-lgpl.c","start":{"line":58,"col":1,"offset":1623},"end":{"line":58,"col":9,"offset":1631},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":1,"offset":1623},"end":{"line":58,"col":9,"offset":1631},"abstract_content":"base_len"},"$SIGNED":{"start":{"line":68,"col":12,"offset":1930},"end":{"line":68,"col":13,"offset":1931},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f99c9dcd26f064d98abdfdb148d96b443034219a7deb08cdc094f552708c62c5732c6921c6991210062f48033288f53d74f0973778d507d20669672c024b579c_0","lines":"base_len (char const *name)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/basename.c","start":{"line":48,"col":17,"offset":1547},"end":{"line":48,"col":37,"offset":1567},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":17,"offset":1547},"end":{"line":48,"col":24,"offset":1554},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"846cd736fa52b88483242975287f7311ee88b296f07d7bf4fe8e83d5327228f5edd68e170d33b8bc22ee1f3a8f49f6274a95f4659186c0f3d7b7fbf12de5e882_0","lines":"      char *p = xmalloc (length + 3);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/basename.c","start":{"line":51,"col":7,"offset":1611},"end":{"line":51,"col":35,"offset":1639},"extra":{"metavars":{"$FUN":{"start":{"line":51,"col":7,"offset":1611},"end":{"line":51,"col":13,"offset":1617},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f4ed48f619314421866a14f7b5d10988c6018edc60b6af1e30895506896d9fde5fa2148411b29d9f1f7ef47fefea2fef11135fe46043444260f5bd5ad279fc8_0","lines":"      memcpy (p + 2, base, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":75,"col":16,"offset":2039},"end":{"line":76,"col":71,"offset":2131},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":7,"offset":6},"abstract_content":"at"},"$FUN":{"start":{"line":75,"col":16,"offset":2039},"end":{"line":75,"col":22,"offset":2045},"abstract_content":"openat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c90704c511f23f0fa317316cf79acc1ba9f366837c34ae7694470e2220859f891a523461c3f2919a620dd02885beea6bd79f7225641181d524318b27a1ba8eed_0","lines":"  int new_fd = openat (cdb->fd, dir,\n                       O_SEARCH | O_DIRECTORY | O_NOCTTY | O_NONBLOCK);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":165,"col":24,"offset":4864},"end":{"line":165,"col":37,"offset":4877},"extra":{"metavars":{"$PTR1":{"start":{"line":165,"col":24,"offset":4864},"end":{"line":165,"col":31,"offset":4871},"abstract_content":"dir_end"},"$PTR2":{"start":{"line":165,"col":34,"offset":4874},"end":{"line":165,"col":37,"offset":4877},"abstract_content":"dir"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"955546ab1d87ac3b890b8358fed4632ef7284beee55827f968a0927e511f42d49d13b05e9bfa8da28bb894f8a5ca5780001ac6d243b4e4d39e44b40491011781_0","lines":"    while (PATH_MAX <= dir_end - dir)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":179,"col":17,"offset":5285},"end":{"line":179,"col":28,"offset":5296},"extra":{"metavars":{"$PTR1":{"start":{"line":179,"col":17,"offset":5285},"end":{"line":179,"col":22,"offset":5290},"abstract_content":"slash","propagated_value":{"svalue_start":{"line":171,"col":23,"offset":5107},"svalue_end":{"line":171,"col":51,"offset":5135},"svalue_abstract_content":"memrchr(dir'/'PATH_MAX)"}},"$PTR2":{"start":{"line":179,"col":25,"offset":5293},"end":{"line":179,"col":28,"offset":5296},"abstract_content":"dir"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc569101066471ae7d5676e42d0427c54a8e9c946379a2a2d3de56467edf95d3f386cb6acec21f810252dbd00b91ff31c477a355d755907465d36ed26cc28d9d_0","lines":"        assure (slash - dir < PATH_MAX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":219,"col":10,"offset":5913},"end":{"line":219,"col":15,"offset":5918},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":219,"col":10,"offset":5913},"end":{"line":219,"col":11,"offset":5914},"abstract_content":"n"},"$SIGNED":{"start":{"line":219,"col":14,"offset":5917},"end":{"line":219,"col":15,"offset":5918},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0870083a85f0fb084f3cc2788919b575848744eb7fd965a9ba22a0bfa20e18feb895586e47a13dac0f1ca3d672f3f41f6de950ab4d8e2e02c04c45c7e454bb5d_0","lines":"  size_t n = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":224,"col":3,"offset":5960},"end":{"line":224,"col":35,"offset":5992},"extra":{"metavars":{"$SIGNED":{"start":{"line":224,"col":3,"offset":5960},"end":{"line":224,"col":6,"offset":5963},"abstract_content":"len"},"$UNSIGNED":{"start":{"line":224,"col":26,"offset":5983},"end":{"line":224,"col":27,"offset":5984},"abstract_content":"n","propagated_value":{"svalue_start":{"line":219,"col":14,"offset":5917},"svalue_end":{"line":219,"col":15,"offset":5918},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3663326c56a2206258b48464a4d52f573ea5417be77cd34671419603cce9196b9cf98cd841d14f79897f0d51971142640512b64b649350f37d361e855ee88ab9_0","lines":"  len = getline (&line, &n, stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","start":{"line":249,"col":7,"offset":6575},"end":{"line":249,"col":34,"offset":6602},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$2":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"p"},"$FUN":{"start":{"line":249,"col":7,"offset":6575},"end":{"line":249,"col":13,"offset":6581},"abstract_content":"execlp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4976eb54c1ccf1bfa8d2a4aecde61ca58c4aeee31eb3728d41496a8b33177ad6af9a71af639d066581013ed3411bcbd39fa23eef0fd0ad23a1fa70fe4097b8e3_0","lines":"      execlp (cmd, (char *) NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":64,"col":11,"offset":1807},"end":{"line":64,"col":27,"offset":1823},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f73540ff46accb7814663259cf1d8e7d5c1078adecf493419701c11ef0342a2e12cb44e17fe2cd19c7bde1b3272ffe89a02a7ec812f0cb6bcc783b687ced298a_0","lines":"      if (stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":64,"col":11,"offset":1807},"end":{"line":64,"col":27,"offset":1823},"extra":{"metavars":{"$FUN":{"start":{"line":64,"col":11,"offset":1807},"end":{"line":64,"col":15,"offset":1811},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b2f137a0315b7217045faff21021cc44afe139d07bd18091c036045b2b027f88748b86555fb44f5304613488941a83c096bec7ab6ea295e4f2ce7822fa1368af_0","lines":"      if (stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":74,"col":26,"offset":2072},"end":{"line":74,"col":42,"offset":2088},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f73540ff46accb7814663259cf1d8e7d5c1078adecf493419701c11ef0342a2e12cb44e17fe2cd19c7bde1b3272ffe89a02a7ec812f0cb6bcc783b687ced298a_1","lines":"      if (!stat_valid && stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":74,"col":26,"offset":2072},"end":{"line":74,"col":42,"offset":2088},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":26,"offset":2072},"end":{"line":74,"col":30,"offset":2076},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b2f137a0315b7217045faff21021cc44afe139d07bd18091c036045b2b027f88748b86555fb44f5304613488941a83c096bec7ab6ea295e4f2ce7822fa1368af_1","lines":"      if (!stat_valid && stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":91,"col":14,"offset":2647},"end":{"line":91,"col":48,"offset":2681},"extra":{"metavars":{"$FUN":{"start":{"line":91,"col":14,"offset":2647},"end":{"line":91,"col":18,"offset":2651},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8d07522039e72a91a312b15e5cfbf0195ecbb9b321f6435793bb624299dca289f3bf8f8acbf5aa638165a918538031f14019b3f8b6f39a55f9995d1b475ef242_0","lines":"    int fd = open (file, O_RDONLY | open_flags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":92,"col":5,"offset":2687},"end":{"line":118,"col":17,"offset":3440},"extra":{"metavars":{"$EXPR1":{"start":{"line":94,"col":22,"offset":2748},"end":{"line":94,"col":24,"offset":2750},"abstract_content":"fd"},"$EXPR2":{"start":{"line":94,"col":27,"offset":2753},"end":{"line":94,"col":61,"offset":2787},"abstract_content":"open(file O_WRONLY|open_flags)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0deb6a11b0ff11bbdf3121f44530989298b9feedf9aee10ccf91fe9dafdbc608d1981f9fcd5e02e8a3bc9c8984547e1d22434ea816c35d6b31964faa5daee714_0","lines":"    if (0 <= fd\n        || (errno == EACCES\n            && 0 <= (fd = open (file, O_WRONLY | open_flags))))\n      {\n        int saved_errno;\n        bool fchown_socket_failure;\n\n        result = fchown (fd, uid, gid);\n        saved_errno = errno;\n\n        /* POSIX says fchown can fail with errno == EINVAL on sockets\n           and pipes, so fall back on chown in that case.  */\n        fchown_socket_failure =\n          (result != 0 && saved_errno == EINVAL\n           && fstat (fd, &st) == 0\n           && (S_ISFIFO (st.st_mode) || S_ISSOCK (st.st_mode)));\n\n        close (fd);\n\n        if (! fchown_socket_failure)\n          {\n            errno = saved_errno;\n            return result;\n          }\n      }\n    else if (errno != EACCES)\n      return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":94,"col":27,"offset":2753},"end":{"line":94,"col":61,"offset":2787},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":27,"offset":2753},"end":{"line":94,"col":31,"offset":2757},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8d07522039e72a91a312b15e5cfbf0195ecbb9b321f6435793bb624299dca289f3bf8f8acbf5aa638165a918538031f14019b3f8b6f39a55f9995d1b475ef242_1","lines":"            && 0 <= (fd = open (file, O_WRONLY | open_flags))))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":99,"col":18,"offset":2878},"end":{"line":99,"col":39,"offset":2899},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":99,"col":18,"offset":2878},"end":{"line":99,"col":24,"offset":2884},"abstract_content":"fchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1c7bb2659e57fbc31c3fe24ee3a0df787a9f9e34a54ae93397a5b8cb4300d734479eaae344f51c89cd9cd4a96d00ebf4912ac26d0c4dd52bbe8c7b35725e6b0_0","lines":"        result = fchown (fd, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":104,"col":9,"offset":3071},"end":{"line":107,"col":65,"offset":3242},"extra":{"metavars":{"$EXPR1":{"start":{"line":105,"col":27,"offset":3121},"end":{"line":105,"col":38,"offset":3132},"abstract_content":"saved_errno","propagated_value":{"svalue_start":{"line":100,"col":23,"offset":2923},"svalue_end":{"line":100,"col":28,"offset":2928},"svalue_abstract_content":"errno"}},"$EXPR2":{"start":{"line":105,"col":42,"offset":3136},"end":{"line":105,"col":48,"offset":3142},"abstract_content":"EINVAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"267cd7d1a2eb3e389fa80084885289ca336758bc40f0fe547c66ea85a1693bedfb120123d82f2818473485b799a3004d30ed3bdab40c0ccb8cbd7d5bb4ad2c21_0","lines":"        fchown_socket_failure =\n          (result != 0 && saved_errno == EINVAL\n           && fstat (fd, &st) == 0\n           && (S_ISFIFO (st.st_mode) || S_ISSOCK (st.st_mode)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":106,"col":15,"offset":3157},"end":{"line":106,"col":30,"offset":3172},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":15,"offset":3157},"end":{"line":106,"col":20,"offset":3162},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cd81c8ccb57faf0ac12130f5632135908d1a437290b59ce3676eafb7ff04949cc3813d84ed0b7df56ce0537a00028e09830da1080e97aed80d142d3423945187_0","lines":"           && fstat (fd, &st) == 0","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":126,"col":42,"offset":3584},"end":{"line":126,"col":58,"offset":3600},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f73540ff46accb7814663259cf1d8e7d5c1078adecf493419701c11ef0342a2e12cb44e17fe2cd19c7bde1b3272ffe89a02a7ec812f0cb6bcc783b687ced298a_2","lines":"      if (len && file[len - 1] == '/' && stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":126,"col":42,"offset":3584},"end":{"line":126,"col":58,"offset":3600},"extra":{"metavars":{"$FUN":{"start":{"line":126,"col":42,"offset":3584},"end":{"line":126,"col":46,"offset":3588},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b2f137a0315b7217045faff21021cc44afe139d07bd18091c036045b2b027f88748b86555fb44f5304613488941a83c096bec7ab6ea295e4f2ce7822fa1368af_2","lines":"      if (len && file[len - 1] == '/' && stat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":131,"col":12,"offset":3647},"end":{"line":131,"col":34,"offset":3669},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":131,"col":12,"offset":3647},"end":{"line":131,"col":17,"offset":3652},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bea978ee017b69535e9ad9bc822c86f27f02668063a8e8bf983efc2bc2e68c6ed0adf0ea46a7b0c66e596e6c42d83969e7b1b2e934fd2e5784e69d4b5f512ff1_0","lines":"  result = chown (file, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":143,"col":16,"offset":4180},"end":{"line":144,"col":74,"offset":4308},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":143,"col":16,"offset":4180},"end":{"line":143,"col":21,"offset":4185},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"263d3345ca09f35e0af06db629f47067a689211e2d398a22ab74378b2e6d0e9ca97af9c4026eb656b195fccda9291003977a5cc428dccd530155a48c642eb22c_0","lines":"      result = chmod (file, st.st_mode & (S_IRWXU | S_IRWXG | S_IRWXO\n                                          | S_ISUID | S_ISGID | S_ISVTX));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/closedir.c","start":{"line":60,"col":3,"offset":1404},"end":{"line":60,"col":15,"offset":1416},"extra":{"metavars":{"$PTR":{"start":{"line":60,"col":9,"offset":1410},"end":{"line":60,"col":13,"offset":1414},"abstract_content":"dirp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2cae0bae49d826e4c69ab5fc58afc7185e7653c55162c8686da5a1326cdb8dc0746d9aad4acbeb831f0a66429ad116524c3d2e29672be6210acf058670963c1c_0","lines":"  free (dirp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/closedir.c","start":{"line":67,"col":7,"offset":1466},"end":{"line":67,"col":18,"offset":1477},"extra":{"metavars":{"$EXPR":{"start":{"line":67,"col":7,"offset":1466},"end":{"line":67,"col":13,"offset":1472},"abstract_content":"retval","propagated_value":{"svalue_start":{"line":62,"col":12,"offset":1429},"svalue_end":{"line":62,"col":13,"offset":1430},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f574080c9298bca71ea8c1f117b8327a33e99d981563001fd579f52298a2fe349e099c72e5d319846805a2572dbc9208cbb5552f7a479a2e5050e471a8040e2_0","lines":"  if (retval >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirfd.c","start":{"line":40,"col":38,"offset":1185},"end":{"line":40,"col":66,"offset":1213},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":38,"offset":1185},"end":{"line":40,"col":44,"offset":1191},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e18f09667fd5fe266b363c749839c9fd8fd305ee6e0129e75d701e05d45c2531314b0f42b74b626e4ffc0dce756cc4bfcc88a8e7994b4eabc8e1a673bb7615a5_0","lines":"  struct dirp_fd_list *new_dirp_fd = malloc (sizeof *new_dirp_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirfd.c","start":{"line":71,"col":11,"offset":1919},"end":{"line":71,"col":26,"offset":1934},"extra":{"metavars":{"$PTR":{"start":{"line":71,"col":17,"offset":1925},"end":{"line":71,"col":24,"offset":1932},"abstract_content":"dirp_fd"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"83be6c08957b02b7fcfdc297885f95d6c8808184d1b4125971cce6c0721b4cb9ef880fc7f013ea9d91e42b82be04689e66bc42513431f90c8a87d2002945514d_0","lines":"          free (dirp_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirfd.c","start":{"line":82,"col":3,"offset":2035},"end":{"line":82,"col":16,"offset":2048},"extra":{"metavars":{"$COND":{"start":{"line":82,"col":7,"offset":2039},"end":{"line":82,"col":15,"offset":2047},"abstract_content":"fd==-1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9c5c051355a261c895d4de616c5fecb8c325c55e37148afcfd0f9e56fcfe592110dc30e245566957256ddb016eb9ab0ca5cac95ad3005fae7242255d9b2f1199_0","lines":"  if (fd == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname-lgpl.c","start":{"line":74,"col":3,"offset":2729},"end":{"line":77,"col":70,"offset":2963},"extra":{"metavars":{"$EXPR1":{"start":{"line":74,"col":22,"offset":2748},"end":{"line":74,"col":28,"offset":2754},"abstract_content":"length","propagated_value":{"svalue_start":{"line":73,"col":19,"offset":2711},"svalue_end":{"line":73,"col":33,"offset":2725},"svalue_abstract_content":"dir_len(file)"}},"$EXPR2":{"start":{"line":74,"col":32,"offset":2758},"end":{"line":74,"col":33,"offset":2759},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b40d48b7b54187f71edc60a587a081bf3547ff6128d0ce29c9fd66e8c51c3ebd7e0773a813bfb4f9e5795cc3d09a764572cb2486a8a9b4fb3f1e5059b80d458c_0","lines":"  bool append_dot = (length == 0\n                     || (FILE_SYSTEM_DRIVE_PREFIX_CAN_BE_RELATIVE\n                         && length == FILE_SYSTEM_PREFIX_LEN (file)\n                         && file[2] != '\\0' && ! ISSLASH (file[2])));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname-lgpl.c","start":{"line":78,"col":15,"offset":2978},"end":{"line":78,"col":47,"offset":3010},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":15,"offset":2978},"end":{"line":78,"col":21,"offset":2984},"abstract_content":"malloc"},"$X":{"start":{"line":78,"col":23,"offset":2986},"end":{"line":78,"col":42,"offset":3005},"abstract_content":"length+append_dot"},"$Y":{"start":{"line":78,"col":45,"offset":3008},"end":{"line":78,"col":46,"offset":3009},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a86bc5adada45fc222cbcedb80c409041755a091798c22adf51975fc986d9791505d7288a000e32ea8737b1e4accd526a0377445667bf680339d01587649a2dc_0","lines":"  char *dir = malloc (length + append_dot + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname-lgpl.c","start":{"line":78,"col":15,"offset":2978},"end":{"line":78,"col":47,"offset":3010},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":15,"offset":2978},"end":{"line":78,"col":21,"offset":2984},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"25ca458e2c8449d6d2234d7beaa80ec418954e27c21918f62bfdf4292e7b5cf2d32a56ff6242d1f6a72ea849dee19e9380f42e76d177faab6e563f457a4534d3_0","lines":"  char *dir = malloc (length + append_dot + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname-lgpl.c","start":{"line":81,"col":3,"offset":3043},"end":{"line":81,"col":29,"offset":3069},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":3,"offset":3043},"end":{"line":81,"col":9,"offset":3049},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89dc1ae50a730a16f448e6fc7cafebc7e0ed663b5c057870b5317a9de5a0dc0c3dfaeb9047209b5212640e3587457e2edad0128e8d6964a91e82df98db538405_0","lines":"  memcpy (dir, file, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":62,"col":11,"offset":1360},"end":{"line":62,"col":28,"offset":1377},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":11,"offset":1360},"end":{"line":62,"col":16,"offset":1365},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bec7bc3103eaf674a09da933b633e3beba7c5d4b399c5128333d7eb3c778ee58f495c6e20f1ce4616f66a16c71adb0118e03dc0f3b9b49e5aabaedaaef9a0fc5_0","lines":"      && !fstat (fd, &sbuf) && S_ISDIR (sbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":68,"col":17,"offset":1548},"end":{"line":68,"col":38,"offset":1569},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":17,"offset":1548},"end":{"line":68,"col":21,"offset":1552},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f8e3945bf67484453a505d0e54bb6c8d4d902ebdfe0190f0e32ca9907483a04dc1973bfce57b8db2f237b72ad383d4eec486fa0be64f24c0456b93b1e8967073_0","lines":"        dupfd = open (path, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":98,"col":12,"offset":2249},"end":{"line":98,"col":34,"offset":2271},"extra":{"metavars":{"$FUN":{"start":{"line":98,"col":12,"offset":2249},"end":{"line":98,"col":16,"offset":2253},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c03e22aad49f31f6aa85b7e9cee4e07905b6796d8923b1b35c5f4f10f900f6d7e30a115e5cae003b8196df617155bc79defa9f3c645b4f89c8e632acd152db15_0","lines":"  tempfd = open (\"NUL\", O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":110,"col":14,"offset":2487},"end":{"line":110,"col":34,"offset":2507},"extra":{"metavars":{"$FUN":{"start":{"line":110,"col":14,"offset":2487},"end":{"line":110,"col":18,"offset":2491},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c03e22aad49f31f6aa85b7e9cee4e07905b6796d8923b1b35c5f4f10f900f6d7e30a115e5cae003b8196df617155bc79defa9f3c645b4f89c8e632acd152db15_1","lines":"      return open(path, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":128,"col":11,"offset":2765},"end":{"line":128,"col":28,"offset":2782},"extra":{"metavars":{"$FUN":{"start":{"line":128,"col":11,"offset":2765},"end":{"line":128,"col":16,"offset":2770},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"48437b520d16c73d0eebfa650a5e0578397a2c9c22523520eb9ca0dcbc2889f9b8eafecdac3173408db12942f2d587229576942207643949cbd024fc7de53d89_0","lines":"      && !fstat (fd, &sbuf) && S_ISDIR (sbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":165,"col":3,"offset":4748},"end":{"line":165,"col":45,"offset":4790},"extra":{"metavars":{"$COND":{"start":{"line":165,"col":7,"offset":4752},"end":{"line":165,"col":44,"offset":4789},"abstract_content":"0<=stdout_fd&&is_open(stdout_fd)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b610fce98b2812df79319c339e059a2b38d4cba4074538172c0ad72edb1ca694ef3d9de67e37ac64b6de2da9e99d7cbe230894820700cabd5985c8c6aa1ded20_0","lines":"  if (0 <= stdout_fd && is_open (stdout_fd))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":165,"col":25,"offset":4770},"end":{"line":165,"col":44,"offset":4789},"extra":{"metavars":{"$FUN":{"start":{"line":165,"col":25,"offset":4770},"end":{"line":165,"col":32,"offset":4777},"abstract_content":"is_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b6df69c7b1fb6005856e2876785997d2c69c74443aa4f7ca3bea04b894b013624e64813631230e62abfab0fd3167e351af545c2dfd185a3264fdc25987dbff5_0","lines":"  if (0 <= stdout_fd && is_open (stdout_fd))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":207,"col":14,"offset":5532},"end":{"line":207,"col":40,"offset":5558},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":207,"col":14,"offset":5532},"end":{"line":207,"col":17,"offset":5535},"abstract_content":"len"},"$SIGNED":{"start":{"line":207,"col":39,"offset":5557},"end":{"line":207,"col":40,"offset":5558},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7e992ab3b4040ee635823ea30bc626ed65be0663e358d84deb3027ce126a5450c1bb86b378c6208d3a9ad8f25d6e3f12b8b0142a0006703eba2f34e8df30dce8_0","lines":"      size_t len = strlen (message) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":216,"col":15,"offset":5725},"end":{"line":216,"col":57,"offset":5767},"extra":{"metavars":{"$1":{"start":{"line":1,"col":17,"offset":16},"end":{"line":1,"col":18,"offset":17},"abstract_content":"a"},"$FUN":{"start":{"line":216,"col":15,"offset":5725},"end":{"line":216,"col":32,"offset":5742},"abstract_content":"__libc_use_alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f5918a92c2fa4dd9a693f73a09772c673eb1548442f93830a336c0c57b5775681674e49180c951a0acc88e2d0c056b9e6cd8842419446f5f5cd70a88bad6564_0","lines":"          if (__libc_use_alloca (len * sizeof (wchar_t)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":217,"col":36,"offset":5804},"end":{"line":217,"col":67,"offset":5835},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d207e272adb82d111475004c6757993b645828581509a96d3bdecfafa7c6e517b8bb857b48f897ffa52d164ac21e083fb9ed23777d0978a3efe9b3cff33c1e8b_0","lines":"            wmessage = (wchar_t *) alloca (len * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":217,"col":36,"offset":5804},"end":{"line":217,"col":67,"offset":5835},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":217,"col":36,"offset":5804},"end":{"line":217,"col":42,"offset":5810},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d4ac2c67e84aafffcd8eb440fcfc77972c867195760aee7cf7ad785ec8bdd4c3658aaeab98e9c225ad15cf1768f0369d392ec393c80a93752513fdd17a6817b9_0","lines":"            wmessage = (wchar_t *) alloca (len * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":223,"col":40,"offset":5970},"end":{"line":224,"col":72,"offset":6060},"extra":{"metavars":{"$FUN":{"start":{"line":223,"col":40,"offset":5970},"end":{"line":223,"col":47,"offset":5977},"abstract_content":"realloc"},"$ARG1":{"start":{"line":223,"col":49,"offset":5979},"end":{"line":223,"col":57,"offset":5987},"abstract_content":"wmessage"},"$X":{"start":{"line":224,"col":49,"offset":6037},"end":{"line":224,"col":52,"offset":6040},"abstract_content":"len"},"$Y":{"start":{"line":224,"col":55,"offset":6043},"end":{"line":224,"col":70,"offset":6058},"abstract_content":"sizeof wchar_t"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"03be3791cf7875cc7132e8eceff31a13114f9410920f1f8dce3a74c384eda0950bda6f2d45162ce62447af41427508323cbadc47c2d2284565252065ef5d5abe_0","lines":"              wchar_t *p = (wchar_t *) realloc (wmessage,\n                                                len * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":223,"col":40,"offset":5970},"end":{"line":224,"col":72,"offset":6060},"extra":{"metavars":{"$FUN":{"start":{"line":223,"col":40,"offset":5970},"end":{"line":223,"col":47,"offset":5977},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ec2085a910e02741d73a1144e4fd49c4e01de82567555ef4e2190e31b14f325373436f000c463715c02c0c60516b53a0cb5ba212f5c3366d3b54ba2014e08a47_0","lines":"              wchar_t *p = (wchar_t *) realloc (wmessage,\n                                                len * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":227,"col":19,"offset":6127},"end":{"line":227,"col":35,"offset":6143},"extra":{"metavars":{"$PTR":{"start":{"line":227,"col":25,"offset":6133},"end":{"line":227,"col":33,"offset":6141},"abstract_content":"wmessage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4f0c5df8220509972ce42ca2c21d4a69df8c0033af04d7cd543adb73634b93b2f5d42eca1128e8096b49c83931233a3d4f5cb223ce246f17285db43dbebd375_0","lines":"                  free (wmessage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":245,"col":15,"offset":6675},"end":{"line":245,"col":32,"offset":6692},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":245,"col":15,"offset":6675},"end":{"line":245,"col":18,"offset":6678},"abstract_content":"res"},"$SIGNED":{"start":{"line":245,"col":30,"offset":6690},"end":{"line":245,"col":32,"offset":6692},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b415e2c140979b93a70c8c3196a48c17ca78e653b9f7ea925f0bfe489058639143e71866ff62b564d698f899d14d825d0165197381331f31acd6fe14a9550064_0","lines":"              res = (size_t) -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":257,"col":15,"offset":6904},"end":{"line":257,"col":31,"offset":6920},"extra":{"metavars":{"$PTR":{"start":{"line":257,"col":21,"offset":6910},"end":{"line":257,"col":29,"offset":6918},"abstract_content":"wmessage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4f0c5df8220509972ce42ca2c21d4a69df8c0033af04d7cd543adb73634b93b2f5d42eca1128e8096b49c83931233a3d4f5cb223ce246f17285db43dbebd375_1","lines":"              free (wmessage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":266,"col":9,"offset":7096},"end":{"line":266,"col":25,"offset":7112},"extra":{"metavars":{"$PTR":{"start":{"line":266,"col":15,"offset":7102},"end":{"line":266,"col":23,"offset":7110},"abstract_content":"wmessage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4f0c5df8220509972ce42ca2c21d4a69df8c0033af04d7cd543adb73634b93b2f5d42eca1128e8096b49c83931233a3d4f5cb223ce246f17285db43dbebd375_2","lines":"        free (wmessage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":270,"col":5,"offset":7137},"end":{"line":270,"col":37,"offset":7169},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"c5a417b7fa8f51eb72f1f1fb8fcfdf0961f22bdfe7302ef06d182ed393378296af054688aa7c5678ecf9b8b24ba66c90fd5ef9558bee36c0078499324e23b67d_0","lines":"    vfprintf (stderr, message, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":64,"col":5,"offset":2032},"end":{"line":64,"col":26,"offset":2053},"extra":{"metavars":{"$PTR":{"start":{"line":64,"col":11,"offset":2038},"end":{"line":64,"col":24,"offset":2051},"abstract_content":"dirs[fd].name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fafc28cdb45fbb467cf77935ce5536acab9d829392b89f910ce29e4709eeebf76161c8c3e4d8ec08353172c156dff1770b029f0eac302863401d28bf57caa6a1_0","lines":"    free (dirs[fd].name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":70,"col":7,"offset":2130},"end":{"line":70,"col":45,"offset":2168},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":7,"offset":2130},"end":{"line":70,"col":20,"offset":2143},"abstract_content":"new_allocated"},"$SIGNED":{"start":{"line":70,"col":23,"offset":2146},"end":{"line":70,"col":24,"offset":2147},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bbc0a267b2def243a05a5f3d5d1aca4cf65617652ad7a0e4d506b9774b1af6965188a75404fdcf4ac3994a440bd2cb3af5aa0fca961baa2aa2c03f565ebd8e31_0","lines":"      new_allocated = 2 * dirs_allocated + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":72,"col":9,"offset":2209},"end":{"line":72,"col":31,"offset":2231},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":72,"col":9,"offset":2209},"end":{"line":72,"col":22,"offset":2222},"abstract_content":"new_allocated"},"$SIGNED":{"start":{"line":72,"col":30,"offset":2230},"end":{"line":72,"col":31,"offset":2231},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4f8651b4eeef8d5b469ecaa03bb0a0661d0e12d35f40da3453ff7ed9eb8d540403002528b7ab53061421284447234c77157eebb1a2f7637bc561b8e21e6e8a8d_0","lines":"        new_allocated = fd + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":75,"col":27,"offset":2298},"end":{"line":75,"col":71,"offset":2342},"extra":{"metavars":{"$FUN":{"start":{"line":75,"col":27,"offset":2298},"end":{"line":75,"col":34,"offset":2305},"abstract_content":"realloc"},"$ARG1":{"start":{"line":75,"col":36,"offset":2307},"end":{"line":75,"col":40,"offset":2311},"abstract_content":"dirs"},"$X":{"start":{"line":75,"col":42,"offset":2313},"end":{"line":75,"col":55,"offset":2326},"abstract_content":"new_allocated"},"$Y":{"start":{"line":75,"col":58,"offset":2329},"end":{"line":75,"col":70,"offset":2341},"abstract_content":"sizeof*dirs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5b784c1abfebb9e8da89877ad4dc417f0b753af2b0304c88174d27cfb94db0515eee2707a575c876f895754a56d6062b2f16734d6e898b076623e82f70bc4f69_0","lines":"         ? (dir_info_t *) realloc (dirs, new_allocated * sizeof *dirs)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":75,"col":27,"offset":2298},"end":{"line":75,"col":71,"offset":2342},"extra":{"metavars":{"$FUN":{"start":{"line":75,"col":27,"offset":2298},"end":{"line":75,"col":34,"offset":2305},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a3b68a0222f4988f62da7bedaab85d825376b1c1ed9ddbdb95009ccd640e404799663d5d5a3e3b86156adfcf0e4a8249f128572122aa153b06954b569e4bac18_0","lines":"         ? (dir_info_t *) realloc (dirs, new_allocated * sizeof *dirs)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":76,"col":27,"offset":2369},"end":{"line":76,"col":64,"offset":2406},"extra":{"metavars":{"$FUN":{"start":{"line":76,"col":27,"offset":2369},"end":{"line":76,"col":33,"offset":2375},"abstract_content":"malloc"},"$X":{"start":{"line":76,"col":35,"offset":2377},"end":{"line":76,"col":48,"offset":2390},"abstract_content":"new_allocated"},"$Y":{"start":{"line":76,"col":51,"offset":2393},"end":{"line":76,"col":63,"offset":2405},"abstract_content":"sizeof*dirs"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bca458cf428b65d361b18dab037e1424bce772574c76f5c6f0c2008c2965acc8eb8e825a2965445593af666dd08062567de6869a64de0c127b527ff977024ef1_0","lines":"         : (dir_info_t *) malloc (new_allocated * sizeof *dirs));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":76,"col":27,"offset":2369},"end":{"line":76,"col":64,"offset":2406},"extra":{"metavars":{"$FUN":{"start":{"line":76,"col":27,"offset":2369},"end":{"line":76,"col":33,"offset":2375},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ee45a079d46f22a3c6d5a92793d757764d387149850322fe09cdf6990f43d9bfb0a4b06184b4c0d538813cc22d7c0932b2eb9465d38899f61587d3ab36ef6008_0","lines":"         : (dir_info_t *) malloc (new_allocated * sizeof *dirs));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":99,"col":9,"offset":2933},"end":{"line":99,"col":25,"offset":2949},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":99,"col":9,"offset":2933},"end":{"line":99,"col":15,"offset":2939},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"69efdeae8122379dfabd759f6ae8a7cbd4d21095e4f34e2faf538bd225079fae63d4189d965f3d97f616ca8870b5a3c756c37bfd441f46d325321c8faf69a5d3_0","lines":"  cwd = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":99,"col":9,"offset":2933},"end":{"line":99,"col":25,"offset":2949},"extra":{"metavars":{"$BUF":{"start":{"line":99,"col":17,"offset":2941},"end":{"line":99,"col":21,"offset":2945},"abstract_content":"NULL"},"$LEN":{"start":{"line":99,"col":23,"offset":2947},"end":{"line":99,"col":24,"offset":2948},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7055652a123b704b1268a76069ff1d6516f0dc0e19a8bf1658c20cb84a8ee0fce4c80eb037152a9ba134f6d5c1c3060d92782564ef7540e3403e737bef981f5e_0","lines":"  cwd = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":105,"col":3,"offset":3089},"end":{"line":105,"col":14,"offset":3100},"extra":{"metavars":{"$PTR":{"start":{"line":105,"col":9,"offset":3095},"end":{"line":105,"col":12,"offset":3098},"abstract_content":"cwd","propagated_value":{"svalue_start":{"line":99,"col":9,"offset":2933},"svalue_end":{"line":99,"col":25,"offset":2949},"svalue_abstract_content":"getcwd(NULL 0)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73efb902deeaa18ef9b7e092dd06fb8a6517d1d1a4bf39166b8ba595e522f2f44119c30127e1493af1a4d76f5dc6898f390556026a1be371f3a52380660a255c_0","lines":"  free (cwd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":120,"col":7,"offset":3427},"end":{"line":120,"col":28,"offset":3448},"extra":{"metavars":{"$PTR":{"start":{"line":120,"col":13,"offset":3433},"end":{"line":120,"col":26,"offset":3446},"abstract_content":"dirs[fd].name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fafc28cdb45fbb467cf77935ce5536acab9d829392b89f910ce29e4709eeebf76161c8c3e4d8ec08353172c156dff1770b029f0eac302863401d28bf57caa6a1_1","lines":"      free (dirs[fd].name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":137,"col":11,"offset":3939},"end":{"line":137,"col":31,"offset":3959},"extra":{"metavars":{"$FUN":{"start":{"line":137,"col":11,"offset":3939},"end":{"line":137,"col":16,"offset":3944},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e6455f63ba083fc0d3bce23880cd4c5dc9e588c1f3fc09cf913cadddf27711aa1da214ce49aa878065ebd778c7f1577a43d2778ef98361ed50f5f399a6ea48c_0","lines":"      || (fstat (fd, &statbuf) == 0 && S_ISDIR (statbuf.st_mode)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","start":{"line":175,"col":7,"offset":5141},"end":{"line":175,"col":31,"offset":5165},"extra":{"metavars":{"$PTR":{"start":{"line":175,"col":13,"offset":5147},"end":{"line":175,"col":29,"offset":5163},"abstract_content":"dirs[newfd].name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b814f04579b18298e1b1f895275b7c273dbf73805ebcb536457208d3604b47c8560f82df84ed7f1aba04d1d69eedaa3449bef8d8b97a826f0cda258b84055f7_0","lines":"      free (dirs[newfd].name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":57,"col":16,"offset":1841},"end":{"line":57,"col":38,"offset":1863},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":57,"col":16,"offset":1841},"end":{"line":57,"col":34,"offset":1859},"abstract_content":"fds_to_close_bound"},"$SIGNED":{"start":{"line":57,"col":37,"offset":1862},"end":{"line":57,"col":38,"offset":1863},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"47955eb11d6a4e83a3f85fdb9c66a1aa56d1e40bf8861d7c71495722cc58581744e7c50fb9e417d3855c8c13122ac167def9eeaf124e169bca229ccf96ba5fbc_0","lines":"  unsigned int fds_to_close_bound = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":84,"col":7,"offset":2412},"end":{"line":113,"col":10,"offset":3588},"extra":{"metavars":{"$EXPR1":{"start":{"line":87,"col":30,"offset":2662},"end":{"line":87,"col":37,"offset":2669},"abstract_content":"PHANDLE"},"$EXPR2":{"start":{"line":87,"col":40,"offset":2672},"end":{"line":87,"col":50,"offset":2682},"abstract_content":"new_handle"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3dcb6898e2c040e9c0a1961b721408a8ec603798ef56ebd54bc8abd16d6c09a268900983714244a33c03b32413efdc60f8e344831d4a1fde1fc30f50335aaaf6_0","lines":"      if (!DuplicateHandle (curr_process,           /* SourceProcessHandle */\n                            old_handle,             /* SourceHandle */\n                            curr_process,           /* TargetProcessHandle */\n                            (PHANDLE) &new_handle,  /* TargetHandle */\n                            (DWORD) 0,              /* DesiredAccess */\n                            inherit,                /* InheritHandle */\n                            DUPLICATE_SAME_ACCESS)) /* Options */\n        {\n          switch (GetLastError ())\n            {\n              case ERROR_TOO_MANY_OPEN_FILES:\n                errno = EMFILE;\n                break;\n              case ERROR_INVALID_HANDLE:\n              case ERROR_INVALID_TARGET_HANDLE:\n              case ERROR_DIRECT_ACCESS_HANDLE:\n                errno = EBADF;\n                break;\n              case ERROR_INVALID_PARAMETER:\n              case ERROR_INVALID_FUNCTION:\n              case ERROR_INVALID_ACCESS:\n                errno = EINVAL;\n                break;\n              default:\n                errno = EACCES;\n                break;\n            }\n          result = -1;\n          break;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":128,"col":7,"offset":3954},"end":{"line":128,"col":54,"offset":4001},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":128,"col":7,"offset":3954},"end":{"line":128,"col":12,"offset":3959},"abstract_content":"index"},"$SIGNED":{"start":{"line":128,"col":30,"offset":3977},"end":{"line":128,"col":43,"offset":3990},"abstract_content":"duplicated_fd","propagated_value":{"svalue_start":{"line":114,"col":23,"offset":3611},"svalue_end":{"line":114,"col":69,"offset":3657},"svalue_abstract_content":"_open_osfhandle((intptr_t new_handle flags)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"be4fe12b730b9d92def4fb48dab815bcb495cf5f6427222be98f226d40f6c802d69b6bc63ea15c869ae3bfdda33bc97d586f2de9dfc2499cae92599672026fca_0","lines":"      index = (unsigned int) duplicated_fd / CHAR_BIT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":136,"col":11,"offset":4288},"end":{"line":136,"col":41,"offset":4318},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":136,"col":11,"offset":4288},"end":{"line":136,"col":29,"offset":4306},"abstract_content":"fds_to_close_bound"},"$SIGNED":{"start":{"line":136,"col":40,"offset":4317},"end":{"line":136,"col":41,"offset":4318},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ea2f919dd7c191fecff34aa421383af074cfdd32840edc2fb4edeb9fe319dcdf7f9978d1311ea6f697c71c2185fb774d98a364cfe8d2637d6de037ad015e3830_0","lines":"          fds_to_close_bound = index + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":146,"col":10,"offset":4554},"end":{"line":146,"col":27,"offset":4571},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":146,"col":10,"offset":4554},"end":{"line":146,"col":23,"offset":4567},"abstract_content":"duplicated_fd"},"$SIGNED":{"start":{"line":146,"col":26,"offset":4570},"end":{"line":146,"col":27,"offset":4571},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4ec08ff5d047416d5cba67f08704935c4bd26d5b50cbd95b46719ba7d3882010c02b9a26271d728c19f2f80d90da93db88e5ecec498df7b67b4a9a2d497861da_0","lines":"    for (duplicated_fd = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":149,"col":7,"offset":4661},"end":{"line":152,"col":31,"offset":4792},"extra":{"metavars":{"$EXPR1":{"start":{"line":149,"col":12,"offset":4666},"end":{"line":150,"col":40,"offset":4744},"abstract_content":"fds_to_close[duplicated_fd/CHAR_BIT]>>duplicated_fd%CHAR_BIT"},"$EXPR2":{"start":{"line":151,"col":13,"offset":4759},"end":{"line":151,"col":14,"offset":4760},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcd4db33f29c5805fe96571b8e95afa53ab2fba441a53b8d1f64b08a236e12260ddd3cbee44ca8190b8431923d00b6eb4a76b4b59ed0f56fc6a7cbeecabe25ba_0","lines":"      if ((fds_to_close[duplicated_fd / CHAR_BIT]\n           >> (duplicated_fd % CHAR_BIT))\n          & 1)\n        close (duplicated_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":183,"col":11,"offset":5352},"end":{"line":183,"col":28,"offset":5369},"extra":{"metavars":{"$FUN":{"start":{"line":183,"col":11,"offset":5352},"end":{"line":183,"col":16,"offset":5357},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4494756251dcaee308ca8568755e31629cb1c2db93974e853487947a4d58584eb9520635d99b458fee9e868be23963381a7019c47f8e5f61cf1e04ed25c1fd72_0","lines":"      && !fstat (fd, &sbuf) && S_ISDIR (sbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":206,"col":9,"offset":5865},"end":{"line":207,"col":17,"offset":5904},"extra":{"metavars":{"$EXPR1":{"start":{"line":206,"col":13,"offset":5869},"end":{"line":206,"col":16,"offset":5872},"abstract_content":"arg","propagated_value":{"svalue_start":{"line":179,"col":9,"offset":5178},"svalue_end":{"line":179,"col":30,"offset":5199},"svalue_abstract_content":"va_arg(arg_ptr int)"}},"$EXPR2":{"start":{"line":206,"col":19,"offset":5875},"end":{"line":206,"col":30,"offset":5886},"abstract_content":"~FD_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"216d1730d40c6b4a7f3ae94de715123c1382c8bcbbdc89634c51ddb96c0ba9efcdabd04575b7678ca657518f00092998902a1082f1851929217cbdcb05367a1f_0","lines":"        if (arg & ~FD_CLOEXEC)\n          break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":212,"col":9,"offset":5975},"end":{"line":215,"col":43,"offset":6094},"extra":{"metavars":{"$EXPR1":{"start":{"line":212,"col":13,"offset":5979},"end":{"line":212,"col":16,"offset":5982},"abstract_content":"arg","propagated_value":{"svalue_start":{"line":179,"col":9,"offset":5178},"svalue_end":{"line":179,"col":30,"offset":5199},"svalue_abstract_content":"va_arg(arg_ptr int)"}},"$EXPR2":{"start":{"line":212,"col":19,"offset":5985},"end":{"line":212,"col":29,"offset":5995},"abstract_content":"FD_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d5950998d5c9508c36d766b28083c3cbbd52acb50158a735b157c72e319832b611982c5bc22bce7c749cac6461316e9775514ed63ec7f384b66fbd32321d28d6_0","lines":"        if (arg & FD_CLOEXEC)\n          ulMode |= OPEN_FLAGS_NOINHERIT;\n        else\n          ulMode &= ~OPEN_FLAGS_NOINHERIT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","start":{"line":360,"col":13,"offset":10287},"end":{"line":366,"col":16,"offset":10525},"extra":{"metavars":{"$EXPR1":{"start":{"line":360,"col":54,"offset":10328},"end":{"line":360,"col":59,"offset":10333},"abstract_content":"flags"},"$EXPR2":{"start":{"line":360,"col":62,"offset":10336},"end":{"line":360,"col":72,"offset":10346},"abstract_content":"FD_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40c1ad960f81bef55c79accb22535b09c87b95ad0612b34e6eb1e79220836f3aae01a55c3e55479545b2513b3e734c0bcf50fb5bc75fdf8cb3d6dc8ef3978e67_0","lines":"            if (flags < 0 || fcntl (result, F_SETFD, flags | FD_CLOEXEC) == -1)\n              {\n                int saved_errno = errno;\n                close (result);\n                errno = saved_errno;\n                result = -1;\n              }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fdopendir.c","start":{"line":189,"col":13,"offset":5327},"end":{"line":189,"col":30,"offset":5344},"extra":{"metavars":{"$PTR":{"start":{"line":189,"col":19,"offset":5333},"end":{"line":189,"col":28,"offset":5342},"abstract_content":"proc_file","propagated_value":{"svalue_start":{"line":183,"col":25,"offset":5151},"svalue_end":{"line":183,"col":56,"offset":5182},"svalue_abstract_content":"openat_proc_name(buf fd\".\")"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cd58b659122cc6caf0143a5fe6432ffd0422ce921a1fe0d49c0b7d2eb5f29255daa7cd24b2ffcb590a5622f6cd55be3a9393ce1a86603a5b4098fe9039001f97_0","lines":"            free (proc_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fdopendir.c","start":{"line":239,"col":7,"offset":6511},"end":{"line":239,"col":22,"offset":6526},"extra":{"metavars":{"$FUN":{"start":{"line":239,"col":7,"offset":6511},"end":{"line":239,"col":12,"offset":6516},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1582fcc0b47fa174eef22692f79166f830ef75a686e21dd83bfac7c18c67d2b6902459e468e021a700b9ff9aa179a9d410fc86a011f80cb024f8238e9dc8bbdc_0","lines":"  if (fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat-lgpl.c","start":{"line":65,"col":19,"offset":2289},"end":{"line":65,"col":32,"offset":2302},"extra":{"metavars":{"$PTR1":{"start":{"line":65,"col":19,"offset":2289},"end":{"line":65,"col":26,"offset":2296},"abstract_content":"dirbase","propagated_value":{"svalue_start":{"line":63,"col":25,"offset":2207},"svalue_end":{"line":63,"col":45,"offset":2227},"svalue_abstract_content":"last_component(dir)"}},"$PTR2":{"start":{"line":65,"col":29,"offset":2299},"end":{"line":65,"col":32,"offset":2302},"abstract_content":"dir"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1d22ed3ad9a5df69a221cccb338ce8cdca7ea2bea68dc3d2d343fd45006eb406ef21a47546ec4ddb2d064f62f642d0633de854ca373647895fba0642adf1bec_0","lines":"  size_t dirlen = dirbase - dir + dirbaselen;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat-lgpl.c","start":{"line":66,"col":10,"offset":2326},"end":{"line":66,"col":78,"offset":2394},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":66,"col":10,"offset":2326},"end":{"line":66,"col":25,"offset":2341},"abstract_content":"needs_separator"},"$SIGNED":{"start":{"line":66,"col":75,"offset":2391},"end":{"line":66,"col":76,"offset":2392},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"700d0c16eb15bdc906109e8f3ee6f6d525a864e2ac4a02840d440a1fe2df82546fc6de5a5cd07c2462f155675effa11955c3b477e099d4b71343dead66cb6ed2_0","lines":"  size_t needs_separator = (dirbaselen && ! ISSLASH (dirbase[dirbaselen - 1]));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat-lgpl.c","start":{"line":71,"col":20,"offset":2506},"end":{"line":71,"col":67,"offset":2553},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":20,"offset":2506},"end":{"line":71,"col":26,"offset":2512},"abstract_content":"malloc"},"$X":{"start":{"line":71,"col":28,"offset":2514},"end":{"line":71,"col":62,"offset":2548},"abstract_content":"dirlen+needs_separator+baselen"},"$Y":{"start":{"line":71,"col":65,"offset":2551},"end":{"line":71,"col":66,"offset":2552},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f2b9af27142b351e103a1c071c8aa953b0f877c84978d73acbdf5d33a5d6bab048b201807c92c72afc64f9a57b3eefcc6af0cd155f1aa2d9934cdbc8154e3328_0","lines":"  char *p_concat = malloc (dirlen + needs_separator + baselen + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat-lgpl.c","start":{"line":71,"col":20,"offset":2506},"end":{"line":71,"col":67,"offset":2553},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":20,"offset":2506},"end":{"line":71,"col":26,"offset":2512},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9265060002d42a21995d441bdacf52314fa90b48d73dbc271bdd4d662dd504c1c31a1e9d26be6a39506b8df29686620ec6869b5f2b6fa8372caf679a94d04497_0","lines":"  char *p_concat = malloc (dirlen + needs_separator + baselen + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":286,"col":7,"offset":9151},"end":{"line":286,"col":55,"offset":9199},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":286,"col":7,"offset":9151},"end":{"line":286,"col":14,"offset":9158},"abstract_content":"patsize"},"$SIGNED":{"start":{"line":286,"col":44,"offset":9188},"end":{"line":286,"col":45,"offset":9189},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d335a1c5b9d878ae5dafb3d2430a0dafd09d1a34d2edb1017ad22bcbf23ac14383498b12322e109bd844f0cd5db7a7c472a9dce81a3763135061489222c29db8_0","lines":"      patsize = mbsrtowcs (NULL, &pattern, 0, &ps) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":290,"col":11,"offset":9301},"end":{"line":290,"col":58,"offset":9348},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":290,"col":11,"offset":9301},"end":{"line":290,"col":18,"offset":9308},"abstract_content":"strsize"},"$SIGNED":{"start":{"line":290,"col":47,"offset":9337},"end":{"line":290,"col":48,"offset":9338},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c0d398f50c812af4df93e46e96bc90085c19ce8891365b5080c84d0929bc5bf6b08f154b0b79fb512261d20fb0fdcc630636ff0d1957181c9c4ec7a3c9e1b014_0","lines":"          strsize = mbsrtowcs (NULL, &string, 0, &ps) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":305,"col":40,"offset":9939},"end":{"line":305,"col":75,"offset":9974},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"4772efff349856a8ba75b59430cfa51860974408dc8fc8a7139a74c14a1ad1ea75b3a259b427348ec05d270263868b35ed0b89f70727283eb859f8bea1889791_0","lines":"                wpattern = (wchar_t *) alloca (totsize * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":305,"col":40,"offset":9939},"end":{"line":305,"col":75,"offset":9974},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":305,"col":40,"offset":9939},"end":{"line":305,"col":46,"offset":9945},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cdb57837b8bd66e156f162cd7e81e630cb9ffb3b44d6b63ced9ed388ad2bae05631c610f2c8a76d8e4d9bc9b5fba8e89062384d00f9970ea0b867cb731a10afc_0","lines":"                wpattern = (wchar_t *) alloca (totsize * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":308,"col":30,"offset":10042},"end":{"line":308,"col":65,"offset":10077},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":30,"offset":10042},"end":{"line":308,"col":36,"offset":10048},"abstract_content":"malloc"},"$X":{"start":{"line":308,"col":38,"offset":10050},"end":{"line":308,"col":45,"offset":10057},"abstract_content":"totsize","propagated_value":{"svalue_start":{"line":294,"col":25,"offset":9476},"svalue_end":{"line":294,"col":42,"offset":9493},"svalue_abstract_content":"patsize+strsize"}},"$Y":{"start":{"line":308,"col":48,"offset":10060},"end":{"line":308,"col":63,"offset":10075},"abstract_content":"sizeof wchar_t"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fce69a95beb8561fb73579f1ab9b03b7180fc1e9edcc80bcede9096c9fc2043557bf796a41bff929d47924b07d663152c7a2c332cff43640bd729473aa6159c6_0","lines":"                  wpattern = malloc (totsize * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":308,"col":30,"offset":10042},"end":{"line":308,"col":65,"offset":10077},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":30,"offset":10042},"end":{"line":308,"col":36,"offset":10048},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"debe195583c842e4b9e992eb6e0801d540cdb15023e8a1c78bbcd18d15ef9a25eecb9aba2318295025edfbbf98290da918f435cf046c8de67c7ed963331f4e6f_0","lines":"                  wpattern = malloc (totsize * sizeof (wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":322,"col":15,"offset":10547},"end":{"line":323,"col":66,"offset":10679},"extra":{"metavars":{"$SIGNED":{"start":{"line":322,"col":15,"offset":10547},"end":{"line":322,"col":18,"offset":10550},"abstract_content":"res"},"$UNSIGNED":{"start":{"line":322,"col":69,"offset":10601},"end":{"line":322,"col":76,"offset":10608},"abstract_content":"strsize"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63f3990566c688e87dd642ef8b04cbeec49c0bd873bd8e4ca79ba7efc8e941583415deb5d7fa70e8980134be63f464e780d659ae8f4ad2367e1cba440d3e65c0_0","lines":"              res = internal_fnwmatch (wpattern, wstring, wstring + strsize - 1,\n                                       flags & FNM_PERIOD, flags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","start":{"line":326,"col":17,"offset":10766},"end":{"line":326,"col":33,"offset":10782},"extra":{"metavars":{"$PTR":{"start":{"line":326,"col":23,"offset":10772},"end":{"line":326,"col":31,"offset":10780},"abstract_content":"wpattern"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a97e9a487287e36f35c938eef8ea4934b844e5fd93d54f42c55c28ad9aae76176e2321d29b38d4eff48c4c8b5afa2d55d67a1d9472575ace4d4b8deaec25624_0","lines":"                free (wpattern);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":46,"col":15,"offset":1663},"end":{"line":46,"col":16,"offset":1664},"extra":{"metavars":{"$VAR":{"start":{"line":46,"col":15,"offset":1663},"end":{"line":46,"col":16,"offset":1664},"abstract_content":"c","propagated_value":{"svalue_start":{"line":44,"col":11,"offset":1638},"svalue_end":{"line":44,"col":19,"offset":1646},"svalue_abstract_content":"FOLD(c)"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5fb211ff1a0b7780b09a050c347ced550e32a53774778042ae104c6c0b42fca11ce51a3fe70434520dc497773e7caab7536632538fbc6ea3541c1a3f69abc3b7_0","lines":"      switch (c)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":49,"col":11,"offset":1708},"end":{"line":57,"col":14,"offset":1975},"extra":{"metavars":{"$EXPR1":{"start":{"line":49,"col":33,"offset":1730},"end":{"line":49,"col":38,"offset":1735},"abstract_content":"flags"},"$EXPR2":{"start":{"line":49,"col":41,"offset":1738},"end":{"line":49,"col":53,"offset":1750},"abstract_content":"FNM_EXTMATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1b16edbef0acf77b30dd507600ceb82ee1e5ee9305ac2098b29c0d153ec247125a6afef0beae2b9083ba3a529eecaf3bdc9320468d790c8475ca820085ed0db_0","lines":"          if (__builtin_expect (flags & FNM_EXTMATCH, 0) && *p == '(')\n            {\n              int res;\n\n              res = EXT (c, p, n, string_end, no_leading_period,\n                         flags);\n              if (res != -1)\n                return res;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":61,"col":16,"offset":2055},"end":{"line":64,"col":32,"offset":2219},"extra":{"metavars":{"$EXPR1":{"start":{"line":61,"col":38,"offset":2077},"end":{"line":61,"col":43,"offset":2082},"abstract_content":"flags"},"$EXPR2":{"start":{"line":61,"col":46,"offset":2085},"end":{"line":61,"col":59,"offset":2098},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_0","lines":"          else if (*n == L_('/') && (flags & FNM_FILE_NAME))\n            return FNM_NOMATCH;\n          else if (*n == L_('.') && no_leading_period)\n            return FNM_NOMATCH;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":68,"col":11,"offset":2271},"end":{"line":75,"col":14,"offset":2489},"extra":{"metavars":{"$EXPR1":{"start":{"line":68,"col":17,"offset":2277},"end":{"line":68,"col":22,"offset":2282},"abstract_content":"flags"},"$EXPR2":{"start":{"line":68,"col":25,"offset":2285},"end":{"line":68,"col":37,"offset":2297},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_0","lines":"          if (!(flags & FNM_NOESCAPE))\n            {\n              c = *p++;\n              if (c == L_('\\0'))\n                /* Trailing \\ loses.  */\n                return FNM_NOMATCH;\n              c = FOLD (c);\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":81,"col":11,"offset":2629},"end":{"line":89,"col":14,"offset":2896},"extra":{"metavars":{"$EXPR1":{"start":{"line":81,"col":33,"offset":2651},"end":{"line":81,"col":38,"offset":2656},"abstract_content":"flags"},"$EXPR2":{"start":{"line":81,"col":41,"offset":2659},"end":{"line":81,"col":53,"offset":2671},"abstract_content":"FNM_EXTMATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1b16edbef0acf77b30dd507600ceb82ee1e5ee9305ac2098b29c0d153ec247125a6afef0beae2b9083ba3a529eecaf3bdc9320468d790c8475ca820085ed0db_1","lines":"          if (__builtin_expect (flags & FNM_EXTMATCH, 0) && *p == '(')\n            {\n              int res;\n\n              res = EXT (c, p, n, string_end, no_leading_period,\n                         flags);\n              if (res != -1)\n                return res;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":113,"col":24,"offset":3709},"end":{"line":122,"col":25,"offset":4197},"extra":{"metavars":{"$EXPR1":{"start":{"line":114,"col":49,"offset":3775},"end":{"line":114,"col":54,"offset":3780},"abstract_content":"flags"},"$EXPR2":{"start":{"line":114,"col":57,"offset":3783},"end":{"line":114,"col":70,"offset":3796},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_1","lines":"                  else if (*n == L_('/')\n                           && __builtin_expect (flags & FNM_FILE_NAME, 0))\n                    /* A slash does not match a wildcard under\n                       FNM_FILE_NAME.  */\n                    return FNM_NOMATCH;\n                  else\n                    /* One character of the string is consumed in matching\n                       this ? wildcard, so *??? won't match if there are\n                       less than three characters.  */\n                    ++n;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":132,"col":15,"offset":4530},"end":{"line":132,"col":75,"offset":4590},"extra":{"metavars":{"$EXPR1":{"start":{"line":132,"col":29,"offset":4544},"end":{"line":132,"col":50,"offset":4565},"abstract_content":"flags&FNM_FILE_NAME"},"$EXPR2":{"start":{"line":132,"col":55,"offset":4570},"end":{"line":132,"col":56,"offset":4571},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2ff800dad635200fc677f16e042766c6e3ac4024c474714ac044030bc1a22b1a8d4cab81f30b86889b0d7caef76900f9c890a14bf93293d91c5a4f35b5ffbae_0","lines":"              int result = (flags & FNM_FILE_NAME) == 0 ? 0 : FNM_NOMATCH;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":134,"col":15,"offset":4606},"end":{"line":143,"col":18,"offset":4921},"extra":{"metavars":{"$EXPR1":{"start":{"line":134,"col":19,"offset":4610},"end":{"line":134,"col":24,"offset":4615},"abstract_content":"flags"},"$EXPR2":{"start":{"line":134,"col":27,"offset":4618},"end":{"line":134,"col":40,"offset":4631},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_2","lines":"              if (flags & FNM_FILE_NAME)\n                {\n                  if (flags & FNM_LEADING_DIR)\n                    result = 0;\n                  else\n                    {\n                      if (MEMCHR (n, L_('/'), string_end - n) == NULL)\n                        result = 0;\n                    }\n                }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":136,"col":19,"offset":4669},"end":{"line":142,"col":22,"offset":4903},"extra":{"metavars":{"$EXPR1":{"start":{"line":136,"col":23,"offset":4673},"end":{"line":136,"col":28,"offset":4678},"abstract_content":"flags"},"$EXPR2":{"start":{"line":136,"col":31,"offset":4681},"end":{"line":136,"col":46,"offset":4696},"abstract_content":"FNM_LEADING_DIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"30bcfdb221cba7d9f2a4d34b20ce66644a2979ac5f69f60bf95f923292f91fc7760bb4aa0f61fe917e7a94f7328eaf26da56f4f521670433c139b5de6265051b_0","lines":"                  if (flags & FNM_LEADING_DIR)\n                    result = 0;\n                  else\n                    {\n                      if (MEMCHR (n, L_('/'), string_end - n) == NULL)\n                        result = 0;\n                    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":156,"col":15,"offset":5234},"end":{"line":193,"col":18,"offset":6871},"extra":{"metavars":{"$EXPR1":{"start":{"line":157,"col":41,"offset":5291},"end":{"line":157,"col":46,"offset":5296},"abstract_content":"flags"},"$EXPR2":{"start":{"line":157,"col":49,"offset":5299},"end":{"line":157,"col":61,"offset":5311},"abstract_content":"FNM_EXTMATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1b16edbef0acf77b30dd507600ceb82ee1e5ee9305ac2098b29c0d153ec247125a6afef0beae2b9083ba3a529eecaf3bdc9320468d790c8475ca820085ed0db_2","lines":"              if (c == L_('[')\n                  || (__builtin_expect (flags & FNM_EXTMATCH, 0) != 0\n                      && (c == L_('@') || c == L_('+') || c == L_('!'))\n                      && *p == L_('(')))\n                {\n                  int flags2 = ((flags & FNM_FILE_NAME)\n                                ? flags : (flags & ~FNM_PERIOD));\n                  bool no_leading_period2 = no_leading_period;\n\n                  for (--p; n < endp; ++n, no_leading_period2 = false)\n                    if (FCT (p, n, string_end, no_leading_period2, flags2)\n                        == 0)\n                      return 0;\n                }\n              else if (c == L_('/') && (flags & FNM_FILE_NAME))\n                {\n                  while (n < string_end && *n != L_('/'))\n                    ++n;\n                  if (n < string_end && *n == L_('/')\n                      && (FCT (p, n + 1, string_end, flags & FNM_PERIOD, flags)\n                          == 0))\n                    return 0;\n                }\n              else\n                {\n                  int flags2 = ((flags & FNM_FILE_NAME)\n                                ? flags : (flags & ~FNM_PERIOD));\n                  int no_leading_period2 = no_leading_period;\n\n                  if (c == L_('\\\\') && !(flags & FNM_NOESCAPE))\n                    c = *p;\n                  c = FOLD (c);\n                  for (--p; n < endp; ++n, no_leading_period2 = false)\n                    if (FOLD ((UCHAR) *n) == c\n                        && (FCT (p, n, string_end, no_leading_period2, flags2)\n                            == 0))\n                      return 0;\n                }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":170,"col":20,"offset":5883},"end":{"line":193,"col":18,"offset":6871},"extra":{"metavars":{"$EXPR1":{"start":{"line":170,"col":41,"offset":5904},"end":{"line":170,"col":46,"offset":5909},"abstract_content":"flags"},"$EXPR2":{"start":{"line":170,"col":49,"offset":5912},"end":{"line":170,"col":62,"offset":5925},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_3","lines":"              else if (c == L_('/') && (flags & FNM_FILE_NAME))\n                {\n                  while (n < string_end && *n != L_('/'))\n                    ++n;\n                  if (n < string_end && *n == L_('/')\n                      && (FCT (p, n + 1, string_end, flags & FNM_PERIOD, flags)\n                          == 0))\n                    return 0;\n                }\n              else\n                {\n                  int flags2 = ((flags & FNM_FILE_NAME)\n                                ? flags : (flags & ~FNM_PERIOD));\n                  int no_leading_period2 = no_leading_period;\n\n                  if (c == L_('\\\\') && !(flags & FNM_NOESCAPE))\n                    c = *p;\n                  c = FOLD (c);\n                  for (--p; n < endp; ++n, no_leading_period2 = false)\n                    if (FOLD ((UCHAR) *n) == c\n                        && (FCT (p, n, string_end, no_leading_period2, flags2)\n                            == 0))\n                      return 0;\n                }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":174,"col":19,"offset":6047},"end":{"line":177,"col":30,"offset":6225},"extra":{"metavars":{"$EXPR1":{"start":{"line":175,"col":54,"offset":6136},"end":{"line":175,"col":59,"offset":6141},"abstract_content":"flags"},"$EXPR2":{"start":{"line":175,"col":62,"offset":6144},"end":{"line":175,"col":72,"offset":6154},"abstract_content":"FNM_PERIOD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a46dd27a757e0182cc2e9f2d3e0cb2746107641d5498db3169a7470cf8d4f9e6e35efabba4c556aff92ae5fbb8f40aeb597c9d7246ae02a3f9893bc0f510b31f_0","lines":"                  if (n < string_end && *n == L_('/')\n                      && (FCT (p, n + 1, string_end, flags & FNM_PERIOD, flags)\n                          == 0))\n                    return 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":185,"col":19,"offset":6484},"end":{"line":186,"col":28,"offset":6557},"extra":{"metavars":{"$EXPR1":{"start":{"line":185,"col":42,"offset":6507},"end":{"line":185,"col":47,"offset":6512},"abstract_content":"flags"},"$EXPR2":{"start":{"line":185,"col":50,"offset":6515},"end":{"line":185,"col":62,"offset":6527},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_1","lines":"                  if (c == L_('\\\\') && !(flags & FNM_NOESCAPE))\n                    c = *p;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":209,"col":33,"offset":7320},"end":{"line":209,"col":59,"offset":7346},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":209,"col":33,"offset":7320},"end":{"line":209,"col":39,"offset":7326},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"009f8b613c0163aea157a7a96a1fac98e8e5c12f7c88d373bcc22f67b54e1bdac52eb7fce074f779ab07b847d886019aafb37c580dc567b31e21e356806a9c21_0","lines":"              posixly_correct = getenv (\"POSIXLY_CORRECT\") != NULL ? 1 : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":217,"col":13,"offset":7533},"end":{"line":219,"col":34,"offset":7656},"extra":{"metavars":{"$EXPR1":{"start":{"line":217,"col":35,"offset":7555},"end":{"line":217,"col":40,"offset":7560},"abstract_content":"flags"},"$EXPR2":{"start":{"line":217,"col":43,"offset":7563},"end":{"line":217,"col":56,"offset":7576},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_4","lines":"            if (*n == L_('/') && (flags & FNM_FILE_NAME))\n              /* '/' cannot be matched.  */\n              return FNM_NOMATCH;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":221,"col":13,"offset":7670},"end":{"line":221,"col":77,"offset":7734},"extra":{"metavars":{"$EXPR1":{"start":{"line":221,"col":20,"offset":7677},"end":{"line":221,"col":22,"offset":7679},"abstract_content":"*p"},"$EXPR2":{"start":{"line":221,"col":26,"offset":7683},"end":{"line":221,"col":33,"offset":7690},"abstract_content":"L_('!')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bdaa205de9fcff0ca8a8682a19c5f6c331c9ebe2f6d053754e8f3208d9a7815e27578b013eede52e94eff13e4666abdc9ff59bc61f93907b016b4dda38882d61_0","lines":"            not = (*p == L_('!') || (posixly_correct < 0 && *p == L_('^')));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":232,"col":17,"offset":7914},"end":{"line":308,"col":20,"offset":11218},"extra":{"metavars":{"$EXPR1":{"start":{"line":232,"col":23,"offset":7920},"end":{"line":232,"col":28,"offset":7925},"abstract_content":"flags"},"$EXPR2":{"start":{"line":232,"col":31,"offset":7928},"end":{"line":232,"col":43,"offset":7940},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_2","lines":"                if (!(flags & FNM_NOESCAPE) && c == L_('\\\\'))\n                  {\n                    if (*p == L_('\\0'))\n                      return FNM_NOMATCH;\n                    c = FOLD ((UCHAR) *p);\n                    ++p;\n\n                    goto normal_bracket;\n                  }\n                else if (c == L_('[') && *p == L_(':'))\n                  {\n                    /* Leave room for the null.  */\n                    CHAR str[CHAR_CLASS_MAX_LENGTH + 1];\n                    size_t c1 = 0;\n#if defined _LIBC || WIDE_CHAR_SUPPORT\n                    wctype_t wt;\n#endif\n                    const CHAR *startp = p;\n\n                    for (;;)\n                      {\n                        if (c1 == CHAR_CLASS_MAX_LENGTH)\n                          /* The name is too long and therefore the pattern\n                             is ill-formed.  */\n                          return FNM_NOMATCH;\n\n                        c = *++p;\n                        if (c == L_(':') && p[1] == L_(']'))\n                          {\n                            p += 2;\n                            break;\n                          }\n                        if (c < L_('a') || c >= L_('z'))\n                          {\n                            /* This cannot possibly be a character class name.\n                               Match it as a normal range.  */\n                            p = startp;\n                            c = L_('[');\n                            goto normal_bracket;\n                          }\n                        str[c1++] = c;\n                      }\n                    str[c1] = L_('\\0');\n\n#if defined _LIBC || WIDE_CHAR_SUPPORT\n                    wt = IS_CHAR_CLASS (str);\n                    if (wt == 0)\n                      /* Invalid character class name.  */\n                      return FNM_NOMATCH;\n\n# if defined _LIBC && ! WIDE_CHAR_VERSION\n                    /* The following code is glibc specific but does\n                       there a good job in speeding up the code since\n                       we can avoid the btowc() call.  */\n                    if (_ISCTYPE ((UCHAR) *n, wt))\n                      goto matched;\n# else\n                    if (ISWCTYPE (BTOWC ((UCHAR) *n), wt))\n                      goto matched;\n# endif\n#else\n                    if ((STREQ (str, L_(\"alnum\")) && isalnum ((UCHAR) *n))\n                        || (STREQ (str, L_(\"alpha\")) && isalpha ((UCHAR) *n))\n                        || (STREQ (str, L_(\"blank\")) && isblank ((UCHAR) *n))\n                        || (STREQ (str, L_(\"cntrl\")) && iscntrl ((UCHAR) *n))\n                        || (STREQ (str, L_(\"digit\")) && isdigit ((UCHAR) *n))\n                        || (STREQ (str, L_(\"graph\")) && isgraph ((UCHAR) *n))\n                        || (STREQ (str, L_(\"lower\")) && islower ((UCHAR) *n))\n                        || (STREQ (str, L_(\"print\")) && isprint ((UCHAR) *n))\n                        || (STREQ (str, L_(\"punct\")) && ispunct ((UCHAR) *n))\n                        || (STREQ (str, L_(\"space\")) && isspace ((UCHAR) *n))\n                        || (STREQ (str, L_(\"upper\")) && isupper ((UCHAR) *n))\n                        || (STREQ (str, L_(\"xdigit\")) && isxdigit ((UCHAR) *n)))\n                      goto matched;\n#endif\n                    c = *p++;\n                  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":245,"col":28,"offset":8404},"end":{"line":245,"col":34,"offset":8410},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":245,"col":28,"offset":8404},"end":{"line":245,"col":30,"offset":8406},"abstract_content":"c1"},"$SIGNED":{"start":{"line":245,"col":33,"offset":8409},"end":{"line":245,"col":34,"offset":8410},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa524d864809aaa7d1e90b04ad90b1193dd1986e6bf5eb171436e3afccbb45356976f88fc9da1a1774504a0ef575b518aab710d1b80102142302379e76d0e443_0","lines":"                    size_t c1 = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":310,"col":17,"offset":11248},"end":{"line":310,"col":56,"offset":11287},"extra":{"metavars":{"$EXPR1":{"start":{"line":310,"col":26,"offset":11257},"end":{"line":310,"col":27,"offset":11258},"abstract_content":"c"},"$EXPR2":{"start":{"line":310,"col":31,"offset":11262},"end":{"line":310,"col":38,"offset":11269},"abstract_content":"L_('[')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce1fb411f654984384bfa77bbe5b6a1b83d5fc85aa2000c50785233e36e37fcae8b384213f5a388b656f3a625241fdea3c91b79251f7d5f00e75ae3c6d96d5ec_0","lines":"                else if (c == L_('[') && *p == L_('='))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":392,"col":29,"offset":14499},"end":{"line":408,"col":32,"offset":15178},"extra":{"metavars":{"$EXPR1":{"start":{"line":394,"col":51,"offset":14626},"end":{"line":394,"col":55,"offset":14630},"abstract_content":"idx2"},"$EXPR2":{"start":{"line":394,"col":58,"offset":14633},"end":{"line":394,"col":66,"offset":14641},"abstract_content":"0xffffff"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a281ca21dd7b1e839f96ebc6b5b78976f25d88ef7ef2827865bfe578606066682b25c0cfe426b8c04e81a54a8e730e6057862a3133a385f233c4bb48a74a537b_0","lines":"                            if (idx2 != 0\n                                && (idx >> 24) == (idx2 >> 24)\n                                && len == weights[idx2 & 0xffffff])\n                              {\n                                int cnt = 0;\n\n                                idx &= 0xffffff;\n                                idx2 &= 0xffffff;\n\n                                while (cnt < len\n                                       && (weights[idx + 1 + cnt]\n                                           == weights[idx2 + 1 + cnt]))\n                                  ++cnt;\n\n                                if (cnt == len)\n                                  goto matched;\n                              }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":415,"col":17,"offset":15305},"end":{"line":415,"col":40,"offset":15328},"extra":{"metavars":{"$EXPR1":{"start":{"line":415,"col":26,"offset":15314},"end":{"line":415,"col":27,"offset":15315},"abstract_content":"c"},"$EXPR2":{"start":{"line":415,"col":31,"offset":15319},"end":{"line":415,"col":39,"offset":15327},"abstract_content":"L_('\\0')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1850ddb8e1a9b87871aa71f70dc1a7b5cc1168948229e265cf391dbb8283085580200a56ad59674df3ed454fa5fc603e7e6603bd2aaa99939c688240865de250_0","lines":"                else if (c == L_('\\0'))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":433,"col":32,"offset":15951},"end":{"line":433,"col":38,"offset":15957},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":433,"col":32,"offset":15951},"end":{"line":433,"col":34,"offset":15953},"abstract_content":"c1"},"$SIGNED":{"start":{"line":433,"col":37,"offset":15956},"end":{"line":433,"col":38,"offset":15957},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa524d864809aaa7d1e90b04ad90b1193dd1986e6bf5eb171436e3afccbb45356976f88fc9da1a1774504a0ef575b518aab710d1b80102142302379e76d0e443_1","lines":"                        size_t c1 = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":451,"col":25,"offset":16635},"end":{"line":451,"col":70,"offset":16680},"extra":{"metavars":{"$EXPR1":{"start":{"line":451,"col":36,"offset":16646},"end":{"line":451,"col":38,"offset":16648},"abstract_content":"*p"},"$EXPR2":{"start":{"line":451,"col":42,"offset":16652},"end":{"line":451,"col":49,"offset":16659},"abstract_content":"L_('-')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a11ee3037aba211b228b504e9967abac882e6ecb378355845d3ac56d1a5fc5d0702d3ecb50ef2552210a7569318aea760acded882bb1b3d0638d17efc4bf981d_0","lines":"                        is_range = *p == L_('-') && p[1] != L_('\\0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":488,"col":34,"offset":18171},"end":{"line":488,"col":44,"offset":18181},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":488,"col":34,"offset":18171},"end":{"line":488,"col":40,"offset":18177},"abstract_content":"strcnt"},"$SIGNED":{"start":{"line":488,"col":43,"offset":18180},"end":{"line":488,"col":44,"offset":18181},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5d83860cb00e44a5ec34afe028b7f92e00db2642aefb3aa23b62ef7c22d6848a4f7a25c70fda0af56eef99b072d9a3f8f7a1f7755782fe6285b4928ea3394145_0","lines":"                            for (strcnt = 0; strcnt < c1; ++strcnt)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":551,"col":42,"offset":21132},"end":{"line":551,"col":48,"offset":21138},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":551,"col":42,"offset":21132},"end":{"line":551,"col":44,"offset":21134},"abstract_content":"c1"},"$SIGNED":{"start":{"line":551,"col":47,"offset":21137},"end":{"line":551,"col":48,"offset":21138},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa524d864809aaa7d1e90b04ad90b1193dd1986e6bf5eb171436e3afccbb45356976f88fc9da1a1774504a0ef575b518aab710d1b80102142302379e76d0e443_2","lines":"                                    for (c1 = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":560,"col":42,"offset":21540},"end":{"line":560,"col":48,"offset":21546},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":560,"col":42,"offset":21540},"end":{"line":560,"col":44,"offset":21542},"abstract_content":"c1"},"$SIGNED":{"start":{"line":560,"col":47,"offset":21545},"end":{"line":560,"col":48,"offset":21546},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa524d864809aaa7d1e90b04ad90b1193dd1986e6bf5eb171436e3afccbb45356976f88fc9da1a1774504a0ef575b518aab710d1b80102142302379e76d0e443_3","lines":"                                    for (c1 = 0; c1 < extra[idx]; ++c1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":606,"col":25,"offset":23308},"end":{"line":607,"col":57,"offset":23410},"extra":{"metavars":{"$EXPR1":{"start":{"line":606,"col":37,"offset":23320},"end":{"line":606,"col":39,"offset":23322},"abstract_content":"*p"},"$EXPR2":{"start":{"line":606,"col":43,"offset":23326},"end":{"line":606,"col":50,"offset":23333},"abstract_content":"L_('-')"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a11ee3037aba211b228b504e9967abac882e6ecb378355845d3ac56d1a5fc5d0702d3ecb50ef2552210a7569318aea760acded882bb1b3d0638d17efc4bf981d_1","lines":"                        is_range = (*p == L_('-') && p[1] != L_('\\0')\n                                    && p[1] != L_(']'));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":662,"col":36,"offset":25728},"end":{"line":662,"col":42,"offset":25734},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":662,"col":36,"offset":25728},"end":{"line":662,"col":38,"offset":25730},"abstract_content":"c1"},"$SIGNED":{"start":{"line":662,"col":41,"offset":25733},"end":{"line":662,"col":42,"offset":25734},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa524d864809aaa7d1e90b04ad90b1193dd1986e6bf5eb171436e3afccbb45356976f88fc9da1a1774504a0ef575b518aab710d1b80102142302379e76d0e443_4","lines":"                            size_t c1 = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":709,"col":38,"offset":27728},"end":{"line":709,"col":48,"offset":27738},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":709,"col":38,"offset":27728},"end":{"line":709,"col":44,"offset":27734},"abstract_content":"strcnt"},"$SIGNED":{"start":{"line":709,"col":47,"offset":27737},"end":{"line":709,"col":48,"offset":27738},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5d83860cb00e44a5ec34afe028b7f92e00db2642aefb3aa23b62ef7c22d6848a4f7a25c70fda0af56eef99b072d9a3f8f7a1f7755782fe6285b4928ea3394145_1","lines":"                                for (strcnt = 0; strcnt < c1; ++strcnt)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":791,"col":29,"offset":31716},"end":{"line":792,"col":43,"offset":31807},"extra":{"metavars":{"$EXPR1":{"start":{"line":791,"col":35,"offset":31722},"end":{"line":791,"col":40,"offset":31727},"abstract_content":"flags"},"$EXPR2":{"start":{"line":791,"col":43,"offset":31730},"end":{"line":791,"col":55,"offset":31742},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_3","lines":"                            if (!(flags & FNM_NOESCAPE) && cend == L_('\\\\'))\n                              cend = *p++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":845,"col":25,"offset":34031},"end":{"line":846,"col":39,"offset":34118},"extra":{"metavars":{"$EXPR1":{"start":{"line":845,"col":31,"offset":34037},"end":{"line":845,"col":36,"offset":34042},"abstract_content":"flags"},"$EXPR2":{"start":{"line":845,"col":39,"offset":34045},"end":{"line":845,"col":51,"offset":34057},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_4","lines":"                        if (!(flags & FNM_NOESCAPE) && cend == L_('\\\\'))\n                          cend = *p++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":878,"col":17,"offset":34905},"end":{"line":933,"col":20,"offset":36777},"extra":{"metavars":{"$EXPR1":{"start":{"line":878,"col":23,"offset":34911},"end":{"line":878,"col":28,"offset":34916},"abstract_content":"flags"},"$EXPR2":{"start":{"line":878,"col":31,"offset":34919},"end":{"line":878,"col":43,"offset":34931},"abstract_content":"FNM_NOESCAPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8125333f34f94f0f1f07b6a0feb24b08168ef22aff3377c10c34310e2a96a7a17c4c0c3a44c106fecc94824cf31bab93448d64e16376f20111c518320c359ef_5","lines":"                if (!(flags & FNM_NOESCAPE) && c == L_('\\\\'))\n                  {\n                    if (*p == L_('\\0'))\n                      return FNM_NOMATCH;\n                    /* XXX 1003.2d11 is unclear if this is right.  */\n                    ++p;\n                  }\n                else if (c == L_('[') && *p == L_(':'))\n                  {\n                    int c1 = 0;\n                    const CHAR *startp = p;\n\n                    while (1)\n                      {\n                        c = *++p;\n                        if (++c1 == CHAR_CLASS_MAX_LENGTH)\n                          return FNM_NOMATCH;\n\n                        if (*p == L_(':') && p[1] == L_(']'))\n                          break;\n\n                        if (c < L_('a') || c >= L_('z'))\n                          {\n                            p = startp;\n                            goto ignore_next;\n                          }\n                      }\n                    p += 2;\n                    c = *p++;\n                  }\n                else if (c == L_('[') && *p == L_('='))\n                  {\n                    c = *++p;\n                    if (c == L_('\\0'))\n                      return FNM_NOMATCH;\n                    c = *++p;\n                    if (c != L_('=') || p[1] != L_(']'))\n                      return FNM_NOMATCH;\n                    p += 2;\n                    c = *p++;\n                  }\n                else if (c == L_('[') && *p == L_('.'))\n                  {\n                    ++p;\n                    while (1)\n                      {\n                        c = *++p;\n                        if (c == '\\0')\n                          return FNM_NOMATCH;\n\n                        if (*p == L_('.') && p[1] == L_(']'))\n                          break;\n                      }\n                    p += 2;\n                    c = *p++;\n                  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":944,"col":11,"offset":36989},"end":{"line":951,"col":14,"offset":37231},"extra":{"metavars":{"$EXPR1":{"start":{"line":944,"col":33,"offset":37011},"end":{"line":944,"col":38,"offset":37016},"abstract_content":"flags"},"$EXPR2":{"start":{"line":944,"col":41,"offset":37019},"end":{"line":944,"col":53,"offset":37031},"abstract_content":"FNM_EXTMATCH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1b16edbef0acf77b30dd507600ceb82ee1e5ee9305ac2098b29c0d153ec247125a6afef0beae2b9083ba3a529eecaf3bdc9320468d790c8475ca820085ed0db_3","lines":"          if (__builtin_expect (flags & FNM_EXTMATCH, 0) && *p == '(')\n            {\n              int res;\n\n              res = EXT (c, p, n, string_end, no_leading_period, flags);\n              if (res != -1)\n                return res;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":977,"col":3,"offset":37783},"end":{"line":979,"col":14,"offset":37942},"extra":{"metavars":{"$EXPR1":{"start":{"line":977,"col":8,"offset":37788},"end":{"line":977,"col":13,"offset":37793},"abstract_content":"flags"},"$EXPR2":{"start":{"line":977,"col":16,"offset":37796},"end":{"line":977,"col":31,"offset":37811},"abstract_content":"FNM_LEADING_DIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"30bcfdb221cba7d9f2a4d34b20ce66644a2979ac5f69f60bf95f923292f91fc7760bb4aa0f61fe917e7a94f7328eaf26da56f4f521670433c139b5de6265051b_1","lines":"  if ((flags & FNM_LEADING_DIR) && n != string_end && *n == L_('/'))\n    /* The FNM_LEADING_DIR flag says that \"foo*\" matches \"foobar/frobozz\".  */\n    return 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":999,"col":29,"offset":38303},"end":{"line":999,"col":55,"offset":38329},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":999,"col":29,"offset":38303},"end":{"line":999,"col":35,"offset":38309},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"009f8b613c0163aea157a7a96a1fac98e8e5c12f7c88d373bcc22f67b54e1bdac52eb7fce074f779ab07b847d886019aafb37c580dc567b31e21e356806a9c21_1","lines":"          posixly_correct = getenv (\"POSIXLY_CORRECT\") != NULL ? 1 : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1043,"col":3,"offset":39564},"end":{"line":1043,"col":12,"offset":39573},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1043,"col":3,"offset":39564},"end":{"line":1043,"col":8,"offset":39569},"abstract_content":"level"},"$SIGNED":{"start":{"line":1043,"col":11,"offset":39572},"end":{"line":1043,"col":12,"offset":39573},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f18e659f896421c235466d54260598494e8261a56d7d6932d34ef03c0bef29782c032aa389efcc5480e3ce0e698ca428d3eb46c8e305e151d73f3655de3d22b9_0","lines":"  level = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1052,"col":29,"offset":39835},"end":{"line":1052,"col":55,"offset":39861},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":1052,"col":29,"offset":39835},"end":{"line":1052,"col":35,"offset":39841},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"009f8b613c0163aea157a7a96a1fac98e8e5c12f7c88d373bcc22f67b54e1bdac52eb7fce074f779ab07b847d886019aafb37c580dc567b31e21e356806a9c21_2","lines":"          posixly_correct = getenv (\"POSIXLY_CORRECT\") != NULL ? 1 : -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1112,"col":11,"offset":42471},"end":{"line":1112,"col":14,"offset":42474},"extra":{"metavars":{"$VAR":{"start":{"line":1112,"col":11,"offset":42471},"end":{"line":1112,"col":14,"offset":42474},"abstract_content":"opt"},"$VAL1":{"start":{"line":1114,"col":10,"offset":42491},"end":{"line":1114,"col":17,"offset":42498},"abstract_content":"L_('*')"},"$VAL2":{"start":{"line":1119,"col":10,"offset":42622},"end":{"line":1119,"col":17,"offset":42629},"abstract_content":"L_('+')"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"46d6b3416f55458e73158b5cbf7fbb679e401034c73ec10dfb1a4ad56bfd9ee55f76540079855b67f4eca4bc73e3840b4fd800bb2eb66cf3ebfd8bd88db404ed_0","lines":"  switch (opt)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1125,"col":13,"offset":42822},"end":{"line":1144,"col":24,"offset":43910},"extra":{"metavars":{"$EXPR1":{"start":{"line":1126,"col":22,"offset":42894},"end":{"line":1126,"col":27,"offset":42899},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1126,"col":30,"offset":42902},"end":{"line":1126,"col":43,"offset":42915},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_5","lines":"            if (FCT (list->str, string, rs, no_leading_period,\n                     flags & FNM_FILE_NAME ? flags : flags & ~FNM_PERIOD) == 0\n                /* This was successful.  Now match the rest with the rest\n                   of the pattern.  */\n                && (FCT (p, rs, string_end,\n                         rs == string\n                         ? no_leading_period\n                         : rs[-1] == '/' && NO_LEADING_PERIOD (flags),\n                         flags & FNM_FILE_NAME\n                         ? flags : flags & ~FNM_PERIOD) == 0\n                    /* This didn't work.  Try the whole pattern.  */\n                    || (rs != string\n                        && FCT (pattern - 1, rs, string_end,\n                                rs == string\n                                ? no_leading_period\n                                : rs[-1] == '/' && NO_LEADING_PERIOD (flags),\n                                flags & FNM_FILE_NAME\n                                ? flags : flags & ~FNM_PERIOD) == 0)))\n              /* It worked.  Signal success.  */\n              return 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1162,"col":9,"offset":44438},"end":{"line":1166,"col":20,"offset":44666},"extra":{"metavars":{"$EXPR1":{"start":{"line":1164,"col":18,"offset":44543},"end":{"line":1164,"col":23,"offset":44548},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1164,"col":26,"offset":44551},"end":{"line":1164,"col":39,"offset":44564},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_6","lines":"        if (FCT (STRCAT (list->str, p), string, string_end,\n                 no_leading_period,\n                 flags & FNM_FILE_NAME ? flags : flags & ~FNM_PERIOD) == 0)\n          /* It worked.  Signal success.  */\n          return 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1178,"col":13,"offset":44975},"end":{"line":1180,"col":21,"offset":45127},"extra":{"metavars":{"$EXPR1":{"start":{"line":1179,"col":22,"offset":45048},"end":{"line":1179,"col":27,"offset":45053},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1179,"col":30,"offset":45056},"end":{"line":1179,"col":43,"offset":45069},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_7","lines":"            if (FCT (runp->str, string, rs,  no_leading_period,\n                     flags & FNM_FILE_NAME ? flags : flags & ~FNM_PERIOD) == 0)\n              break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1183,"col":11,"offset":45215},"end":{"line":1191,"col":22,"offset":45583},"extra":{"metavars":{"$EXPR1":{"start":{"line":1188,"col":24,"offset":45445},"end":{"line":1188,"col":29,"offset":45450},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1188,"col":32,"offset":45453},"end":{"line":1188,"col":45,"offset":45466},"abstract_content":"FNM_FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c409a720e91619cc5a1060aba68130a982cdd3b34e8bc9f42b614ea57877abc8b6a1f9bcd3c214407573e8219401c2a6ffa3759ef08bbf2686d86f89ce9f3cd_8","lines":"          if (runp == NULL\n              && (FCT (p, rs, string_end,\n                       rs == string\n                       ? no_leading_period\n                       : rs[-1] == '/' && NO_LEADING_PERIOD (flags),\n                       flags & FNM_FILE_NAME ? flags : flags & ~FNM_PERIOD)\n                  == 0))\n            /* This is successful.  */\n            return 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fpending.c","start":{"line":30,"col":1,"offset":1049},"end":{"line":30,"col":11,"offset":1059},"extra":{"metavars":{"$FUN":{"start":{"line":30,"col":1,"offset":1049},"end":{"line":30,"col":11,"offset":1059},"abstract_content":"__fpending"},"$SIGNED":{"start":{"line":58,"col":10,"offset":2469},"end":{"line":58,"col":11,"offset":2470},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1c43ed74fa3b8b806af54423385c4fa5c5301319069a09fde0afae1f17064054655b6784f69e01b2b357d2467c226e6084c3dfc2d337586bd7405e8c8c791062_0","lines":"__fpending (FILE *fp)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":51,"col":3,"offset":1519},"end":{"line":53,"col":36,"offset":1644},"extra":{"metavars":{"$COND":{"start":{"line":51,"col":7,"offset":1523},"end":{"line":53,"col":35,"offset":1643},"abstract_content":"fp->->_IO_read_end==fp->->_IO_read_ptr&&fp->->_IO_write_ptr==fp->->_IO_write_base&&fp->->_IO_save_base==NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4368772c6a70a42c12a3d074a92e78ffa1ef749c0001da02f263f2e18e2a2238d7a7630bda7847ca12e3552531d9dbcc4351a60756376b709234668d92766649_0","lines":"  if (fp->_IO_read_end == fp->_IO_read_ptr\n      && fp->_IO_write_ptr == fp->_IO_write_base\n      && fp->_IO_save_base == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":61,"col":19,"offset":2029},"end":{"line":61,"col":43,"offset":2053},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":19,"offset":2029},"end":{"line":61,"col":24,"offset":2034},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"18ed37a27392e005efc5e796868744c58666719f62b350ec5af9b133408f0f6f6c83ad55569ef408119aef07ff95fdf7cc0bd18b9587fea05542dfc990584d2f_0","lines":"      FILE *tmp = fopen (\"/dev/null\", \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":69,"col":3,"offset":2188},"end":{"line":74,"col":30,"offset":2449},"extra":{"metavars":{"$COND":{"start":{"line":69,"col":7,"offset":2192},"end":{"line":74,"col":29,"offset":2448},"abstract_content":"fp_->->_p==fp_->->_bf._base&&fp_->->_r==0&&fp_->->_w==fp_->->_flags&__SLBF|__SNBF|__SRD==0 fp_->->_bf._size 0&&fp_ub._base==NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8d7fe6e57c539038ab334e279429641c7c659fcc1a6b940824fa85ff1ee5cab61850fdbe3957b1d9dee137df9f93533468e811273848aa1a22de40bbbd28d6cd_0","lines":"  if (fp_->_p == fp_->_bf._base\n      && fp_->_r == 0\n      && fp_->_w == ((fp_->_flags & (__SLBF | __SNBF | __SRD)) == 0 /* fully buffered and not currently reading? */\n                     ? fp_->_bf._size\n                     : 0)\n      && fp_ub._base == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":76,"col":3,"offset":2502},"end":{"line":79,"col":33,"offset":2614},"extra":{"metavars":{"$COND":{"start":{"line":76,"col":7,"offset":2506},"end":{"line":79,"col":32,"offset":2613},"abstract_content":"fp->->_ptr==fp->->_buffer&&fp->->_rcount==0&&fp->->_wcount==0&&fp->->_ungetc_count==0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d284b59fcf604b474a62dfee31672993346c31496a97c791e837fe51cbd9324d45211a70b6742aeb00f5fb6b641dbfdd315c2bb29905bf6fa43b6b6ded5c3d1b_0","lines":"  if (fp->_ptr == fp->_buffer\n      && fp->_rcount == 0\n      && fp->_wcount == 0\n      && fp->_ungetc_count == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":81,"col":3,"offset":2665},"end":{"line":82,"col":50,"offset":2741},"extra":{"metavars":{"$COND":{"start":{"line":81,"col":7,"offset":2669},"end":{"line":82,"col":48,"offset":2739},"abstract_content":"fp_->->_ptr==fp_->->_buf&&fp_->->_ptr==NULL||fp_->->_count==0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0594defec5f7e124c874716ef18ad6ec4b2b60a625c6cb45048e19310dddae5ee58ba05eda7d96607ad22fb641ddd7615ea04ef1975c1b343a62ef10dfeeeb6_0","lines":"  if (fp_->_ptr == fp_->_buf\n      && (fp_->_ptr == NULL || fp_->_count == 0))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":84,"col":3,"offset":2860},"end":{"line":85,"col":48,"offset":2935},"extra":{"metavars":{"$COND":{"start":{"line":84,"col":7,"offset":2864},"end":{"line":85,"col":46,"offset":2933},"abstract_content":"fp_->->_ptr==fp_->->_base&&fp_->->_ptr==NULL||fp_->->_cnt==0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"584d7dd3093854b646e5cd6a5429faf2667ef0119456d31d10b077c7294e9379160226e31525bc05889aa58b437e519cdf5a473aebd46c547791281eaa298961_0","lines":"  if (fp_->_ptr == fp_->_base\n      && (fp_->_ptr == NULL || fp_->_cnt == 0))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":87,"col":3,"offset":2987},"end":{"line":90,"col":45,"offset":3188},"extra":{"metavars":{"$COND":{"start":{"line":87,"col":9,"offset":2993},"end":{"line":90,"col":43,"offset":3186},"abstract_content":"fp->->__modeflags&__FLAG_WRITING==0||fp->->__bufpos==fp->->__bufstart&&fp->->__modeflags&__FLAG_READONLY|__FLAG_READING==0||fp->->__bufpos==fp->->__bufread"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfe9d72ed31a77549e0fe2813b0124b63f927c81edb7c11374ee8dfa00335efd8e2d29ddd0faab893606d9e044b6caada9415a4e14510bd89340262dfb1f707c_0","lines":"  if (((fp->__modeflags & __FLAG_WRITING) == 0\n       || fp->__bufpos == fp->__bufstart)\n      && ((fp->__modeflags & (__FLAG_READONLY | __FLAG_READING)) == 0\n          || fp->__bufpos == fp->__bufread))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":92,"col":3,"offset":3237},"end":{"line":94,"col":29,"offset":3407},"extra":{"metavars":{"$EXPR1":{"start":{"line":92,"col":8,"offset":3242},"end":{"line":92,"col":17,"offset":3251},"abstract_content":"fp->->_Mode"},"$EXPR2":{"start":{"line":92,"col":20,"offset":3254},"end":{"line":92,"col":26,"offset":3260},"abstract_content":"0x2000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8cbdcd7d4aac067226295e5724eea04e7b8d5b94e04534a79f8ebe4bc9524d999ab613a85b8f8814b6ef75d5b1cd3e8f1bda36de981084778ab6245e859b424e_0","lines":"  if ((fp->_Mode & 0x2000 /* _MWRITE */ ? fp->_Next == fp->_Buf : fp->_Next == fp->_Rend)\n      && fp->_Rback == fp->_Back + sizeof (fp->_Back)\n      && fp->_Rsave == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":96,"col":3,"offset":3467},"end":{"line":99,"col":29,"offset":3604},"extra":{"metavars":{"$COND":{"start":{"line":96,"col":7,"offset":3471},"end":{"line":99,"col":28,"offset":3603},"abstract_content":"fp->->__bufp==fp->->__buffer&&fp->->__get_limit==fp->->__bufp&&fp->->__put_limit==fp->->__bufp&&!fp->->__pushed_back"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8032216370897a2596f30dcfb731e380244612b09c368b2b64e4fcc4d0a5232e5cf062bc16cc544b4676dff784310c64d3fbbc5b1c7c9cc8b17e552635673617_0","lines":"  if (fp->__bufp == fp->__buffer\n      && fp->__get_limit == fp->__bufp\n      && fp->__put_limit == fp->__bufp\n      && !fp->__pushed_back)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":37,"col":10,"offset":1397},"end":{"line":37,"col":25,"offset":1412},"extra":{"metavars":{"$FUN":{"start":{"line":37,"col":10,"offset":1397},"end":{"line":37,"col":15,"offset":1402},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e4b66d18cf5f87acd64b0aa59e37cf298f5aee9685b28f9e4b1e27a3aa9ee212027c43831f011163e6f2ca8cb72a87fda12f10cdc2e1c9604dfa94a4c6f1644_0","lines":"  return fstat (fd, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":61,"col":16,"offset":1885},"end":{"line":61,"col":36,"offset":1905},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":16,"offset":1885},"end":{"line":61,"col":26,"offset":1895},"abstract_content":"orig_fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaad8e67baeda6a07d0373ab4b7839e46f863e99c647636d0dba004643905c75197cd62ee1f5e7b915b2bd47453ad1e3571d248cec3adb8e4953b1b366d48e8b_0","lines":"      result = orig_fstat (fd, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":84,"col":12,"offset":2375},"end":{"line":84,"col":28,"offset":2391},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f471b1078085f5f7e4fae25050d88be70c832a21a39c47d71ce779ad9427d13314dd63ff025ebbd0e9549e2a9cabf04cc7a3f06f6fdb38fe20b0818e1638cfed_0","lines":"    return stat (name, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":84,"col":12,"offset":2375},"end":{"line":84,"col":28,"offset":2391},"extra":{"metavars":{"$FUN":{"start":{"line":84,"col":12,"offset":2375},"end":{"line":84,"col":16,"offset":2379},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cdba773c7d0ddff745a646a0d71196484b804e1a48914324268d6ae7128b02c7aadf0d76df67bb4ee6a426f1566091c3b052a6f83e84c236449bc8e79b51179c_0","lines":"    return stat (name, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":35,"col":10,"offset":1304},"end":{"line":35,"col":44,"offset":1338},"extra":{"metavars":{"$4":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":8,"offset":7},"abstract_content":"at"},"$FUN":{"start":{"line":35,"col":10,"offset":1304},"end":{"line":35,"col":17,"offset":1311},"abstract_content":"fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2d2d7acc330f4064a5af7dea799b32f70e186a979108fbc25491b11fcb0632f0758660085d88843d3fcbc4fb79576a75aa2153bc44844ad8066d72bb5ac36354_0","lines":"  return fstatat (fd, filename, buf, flags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":66,"col":16,"offset":2257},"end":{"line":66,"col":49,"offset":2290},"extra":{"metavars":{"$4":{"start":{"line":1,"col":11,"offset":10},"end":{"line":1,"col":13,"offset":12},"abstract_content":"at"},"$FUN":{"start":{"line":66,"col":16,"offset":2257},"end":{"line":66,"col":28,"offset":2269},"abstract_content":"orig_fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa1e879ff361516a57251eac23225ccf11036f626ca3c62444949234799c954bd3dd1814e74b4eb000a63f68471a3af757a6035f9a35fac64f5511b939f7dcd6_0","lines":"  int result = orig_fstatat (fd, file, st, flag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":72,"col":3,"offset":2403},"end":{"line":83,"col":6,"offset":2729},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":7,"offset":2407},"end":{"line":72,"col":11,"offset":2411},"abstract_content":"flag"},"$EXPR2":{"start":{"line":72,"col":14,"offset":2414},"end":{"line":72,"col":33,"offset":2433},"abstract_content":"AT_SYMLINK_NOFOLLOW"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"985da45b75648adc667f32f97c85ef7213fd67435f09c1dd56dd0ea5e2ca3a9a0cee32d2729f42eefe8d36a9a2cdf3780bf46fea4e5df05a2283a20f396cac75_0","lines":"  if (flag & AT_SYMLINK_NOFOLLOW)\n    {\n      /* Fix lstat behavior.  */\n      if (file[len - 1] != '/' || S_ISDIR (st->st_mode))\n        return 0;\n      if (!S_ISLNK (st->st_mode))\n        {\n          errno = ENOTDIR;\n          return -1;\n        }\n      result = orig_fstatat (fd, file, st, flag & ~AT_SYMLINK_NOFOLLOW);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":82,"col":16,"offset":2666},"end":{"line":82,"col":72,"offset":2722},"extra":{"metavars":{"$4":{"start":{"line":1,"col":11,"offset":10},"end":{"line":1,"col":13,"offset":12},"abstract_content":"at"},"$FUN":{"start":{"line":82,"col":16,"offset":2666},"end":{"line":82,"col":28,"offset":2678},"abstract_content":"orig_fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa1e879ff361516a57251eac23225ccf11036f626ca3c62444949234799c954bd3dd1814e74b4eb000a63f68471a3af757a6035f9a35fac64f5511b939f7dcd6_1","lines":"      result = orig_fstatat (fd, file, st, flag & ~AT_SYMLINK_NOFOLLOW);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":103,"col":10,"offset":3343},"end":{"line":103,"col":25,"offset":3358},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"a9255da590d2bdc85072e757271e95793ba2b2925f62bae75c2a256d41c8f370b18ad56202b0fec91329ce78f03caeabb38346bbd685001930b9fc4e7f07d629_0","lines":"  return stat (name, st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","start":{"line":103,"col":10,"offset":3343},"end":{"line":103,"col":25,"offset":3358},"extra":{"metavars":{"$FUN":{"start":{"line":103,"col":10,"offset":3343},"end":{"line":103,"col":14,"offset":3347},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63ba2353ed9f4eb1d57879564e443fa63f622b2c41b5ef1d08e874a159f35ccf1338934a16e6c9de64c78009a5606de3d815ddbfd6cd1afcbec565caaacced7c_0","lines":"  return stat (name, st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/full-write.c","start":{"line":60,"col":10,"offset":1931},"end":{"line":60,"col":19,"offset":1940},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":60,"col":10,"offset":1931},"end":{"line":60,"col":15,"offset":1936},"abstract_content":"total"},"$SIGNED":{"start":{"line":60,"col":18,"offset":1939},"end":{"line":60,"col":19,"offset":1940},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c2b66a526a132deba398eaa212eee652695eaf0dddc76ad723d71cd228a763fed94728ac213cd1bfeb64558e3e8022d363e9099c3cff2c5e3e1c731dfc01b423_0","lines":"  size_t total = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/full-write.c","start":{"line":65,"col":14,"offset":2022},"end":{"line":65,"col":45,"offset":2053},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":65,"col":14,"offset":2022},"end":{"line":65,"col":18,"offset":2026},"abstract_content":"n_rw"},"$SIGNED":{"start":{"line":65,"col":30,"offset":2038},"end":{"line":65,"col":32,"offset":2040},"abstract_content":"fd"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d76a23e7c8646a447747ba248c6fbc9c56dc9919a2c3554ac2575e7121c3b7ecb3c27468c3e2ce378d472db55aae41b1b6d131914c3aa5cfb8818cd2546095d9_0","lines":"      size_t n_rw = safe_rw (fd, ptr, count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":55,"col":14,"offset":1715},"end":{"line":55,"col":32,"offset":1733},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":55,"col":14,"offset":1715},"end":{"line":55,"col":20,"offset":1721},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f4450b4f7042e38fc55a4a614fa5d1a48bfe0810e1d6518e30bfcdf92be6adafe052a2b316279c6a65b421726d790da1936c0e89e5d086204fb4381799189b12_0","lines":"      return getcwd (buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":60,"col":13,"offset":1772},"end":{"line":60,"col":26,"offset":1785},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":13,"offset":1772},"end":{"line":60,"col":19,"offset":1778},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24be12046f9513182345a9003e66585c58d3dda7ee231fabf78f1a97f2300ff556b9300c0fbef3e771381f911696ee9be2809520a45cb39cd3eea991b722deff_0","lines":"      buf = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":66,"col":16,"offset":1887},"end":{"line":66,"col":34,"offset":1905},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":66,"col":16,"offset":1887},"end":{"line":66,"col":22,"offset":1893},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f4450b4f7042e38fc55a4a614fa5d1a48bfe0810e1d6518e30bfcdf92be6adafe052a2b316279c6a65b421726d790da1936c0e89e5d086204fb4381799189b12_1","lines":"      result = getcwd (buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":82,"col":11,"offset":2328},"end":{"line":82,"col":29,"offset":2346},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":82,"col":11,"offset":2328},"end":{"line":82,"col":17,"offset":2334},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f4450b4f7042e38fc55a4a614fa5d1a48bfe0810e1d6518e30bfcdf92be6adafe052a2b316279c6a65b421726d790da1936c0e89e5d086204fb4381799189b12_2","lines":"    ptr = getcwd (tmp, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":82,"col":11,"offset":2328},"end":{"line":82,"col":29,"offset":2346},"extra":{"metavars":{"$TYPE":{"start":{"line":80,"col":5,"offset":2279},"end":{"line":80,"col":9,"offset":2283},"abstract_content":"char"},"$LEN":{"start":{"line":80,"col":14,"offset":2288},"end":{"line":80,"col":18,"offset":2292},"abstract_content":"4032"},"$FUN":{"start":{"line":82,"col":11,"offset":2328},"end":{"line":82,"col":17,"offset":2334},"abstract_content":"getcwd"},"$BUF":{"start":{"line":82,"col":19,"offset":2336},"end":{"line":82,"col":22,"offset":2339},"abstract_content":"tmp"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76b63dd66f405e9659990f33afc31d0c440b83ac133225d35514743e4180d01a15eff182c8049428d9503d09bd1de0d34931fb72a4e9839a1eed4db3f7d85371_0","lines":"    ptr = getcwd (tmp, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":98,"col":13,"offset":2617},"end":{"line":98,"col":32,"offset":2636},"extra":{"metavars":{"$FUN":{"start":{"line":98,"col":13,"offset":2617},"end":{"line":98,"col":20,"offset":2624},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb14ea884dfe40d4e15c356d28cfd0cd3b845234c1cabaf95dd4db37d8dbb7004786aceb6f925b96bb2e2362a57830b4dc680af3dc17baed50eef2c4bd536e04_0","lines":"      ptr = realloc (buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":101,"col":11,"offset":2681},"end":{"line":101,"col":22,"offset":2692},"extra":{"metavars":{"$PTR":{"start":{"line":101,"col":17,"offset":2687},"end":{"line":101,"col":20,"offset":2690},"abstract_content":"buf","propagated_value":{"svalue_start":{"line":98,"col":13,"offset":2617},"svalue_end":{"line":98,"col":32,"offset":2636},"svalue_abstract_content":"realloc(buf size)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"35362f2bfed7864917aff0237a47a1d2aa6d3ebc80b3456d1e8c117052479aa3eef84dae40e574afbcaaad5118dc9d8c140fdbf1bc45f36b4f11fe6525292d93_0","lines":"          free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":106,"col":16,"offset":2784},"end":{"line":106,"col":34,"offset":2802},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":106,"col":16,"offset":2784},"end":{"line":106,"col":22,"offset":2790},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f4450b4f7042e38fc55a4a614fa5d1a48bfe0810e1d6518e30bfcdf92be6adafe052a2b316279c6a65b421726d790da1936c0e89e5d086204fb4381799189b12_3","lines":"      result = getcwd (buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":113,"col":7,"offset":2907},"end":{"line":113,"col":18,"offset":2918},"extra":{"metavars":{"$PTR":{"start":{"line":113,"col":13,"offset":2913},"end":{"line":113,"col":16,"offset":2916},"abstract_content":"buf","propagated_value":{"svalue_start":{"line":98,"col":13,"offset":2617},"svalue_end":{"line":98,"col":32,"offset":2636},"svalue_abstract_content":"realloc(buf size)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"35362f2bfed7864917aff0237a47a1d2aa6d3ebc80b3456d1e8c117052479aa3eef84dae40e574afbcaaad5118dc9d8c140fdbf1bc45f36b4f11fe6525292d93_1","lines":"      free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":119,"col":16,"offset":3019},"end":{"line":119,"col":47,"offset":3050},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":16,"offset":3019},"end":{"line":119,"col":23,"offset":3026},"abstract_content":"realloc"},"$ARG1":{"start":{"line":119,"col":25,"offset":3028},"end":{"line":119,"col":28,"offset":3031},"abstract_content":"buf","propagated_value":{"svalue_start":{"line":98,"col":13,"offset":2617},"svalue_end":{"line":98,"col":32,"offset":2636},"svalue_abstract_content":"realloc(buf size)"}},"$X":{"start":{"line":119,"col":30,"offset":3033},"end":{"line":119,"col":42,"offset":3045},"abstract_content":"strlen(buf)"},"$Y":{"start":{"line":119,"col":45,"offset":3048},"end":{"line":119,"col":46,"offset":3049},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8d4fe18f27d704703c42b6eb9f89f1796aba3cb1a43b80a610bc920b18cc45e9f8d188165466dd0b44287f6e80f2fba26cd8b4a09097c1e523cac273ec246b24_0","lines":"      result = realloc (buf, strlen (buf) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","start":{"line":119,"col":16,"offset":3019},"end":{"line":119,"col":47,"offset":3050},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":16,"offset":3019},"end":{"line":119,"col":23,"offset":3026},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb14ea884dfe40d4e15c356d28cfd0cd3b845234c1cabaf95dd4db37d8dbb7004786aceb6f925b96bb2e2362a57830b4dc680af3dc17baed50eef2c4bd536e04_1","lines":"      result = realloc (buf, strlen (buf) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":131,"col":10,"offset":3814},"end":{"line":131,"col":20,"offset":3824},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":131,"col":10,"offset":3814},"end":{"line":131,"col":16,"offset":3820},"abstract_content":"dotlen"},"$SIGNED":{"start":{"line":131,"col":19,"offset":3823},"end":{"line":131,"col":20,"offset":3824},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a95f26a432e5789274833c623e8bbde6ddb935bf88f23e1547219f22b59ab584d942c461e5e2a8ccd9dc0c572e02b0aa8bbaace97caf56d5e217e04ab5585d15_0","lines":"  size_t dotlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":158,"col":9,"offset":4703},"end":{"line":158,"col":27,"offset":4721},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":158,"col":9,"offset":4703},"end":{"line":158,"col":15,"offset":4709},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1a40d8c8bee09e1f1ebefa010b546108f2360b7dae02273a04e3a1fb280f39833a1e4238bcebed1e7f7d99c027c578b60de3edd19abc53125e699a4447884a2b_0","lines":"  dir = getcwd (buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":169,"col":13,"offset":5171},"end":{"line":169,"col":51,"offset":5209},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":169,"col":13,"offset":5171},"end":{"line":169,"col":19,"offset":5177},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1a40d8c8bee09e1f1ebefa010b546108f2360b7dae02273a04e3a1fb280f39833a1e4238bcebed1e7f7d99c027c578b60de3edd19abc53125e699a4447884a2b_1","lines":"      dir = getcwd (big_buffer, sizeof big_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":169,"col":13,"offset":5171},"end":{"line":169,"col":51,"offset":5209},"extra":{"metavars":{"$TYPE":{"start":{"line":168,"col":7,"offset":5116},"end":{"line":168,"col":11,"offset":5120},"abstract_content":"char"},"$LEN":{"start":{"line":168,"col":23,"offset":5132},"end":{"line":168,"col":47,"offset":5156},"abstract_content":"BIG_FILE_NAME_LENGTH+1"},"$FUN":{"start":{"line":169,"col":13,"offset":5171},"end":{"line":169,"col":19,"offset":5177},"abstract_content":"getcwd"},"$BUF":{"start":{"line":169,"col":21,"offset":5179},"end":{"line":169,"col":31,"offset":5189},"abstract_content":"big_buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b8677478c7aaf9ad276816c7598581002634fa89c79e20b1c636b574205ad67078ed17b35a16d76b3f4152ff3d2d20b0ee6ccf7ec4ce9fb633caf01ef207c1a7_0","lines":"      dir = getcwd (big_buffer, sizeof big_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":190,"col":7,"offset":5658},"end":{"line":190,"col":43,"offset":5694},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":190,"col":7,"offset":5658},"end":{"line":190,"col":16,"offset":5667},"abstract_content":"allocated"},"$SIGNED":{"start":{"line":190,"col":42,"offset":5693},"end":{"line":190,"col":43,"offset":5694},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dc74ca5da3ddcefb59fe3206a7f7d474e89963857b7272e94695bc6a48ed8adb01751e93b237e17ef6a903c09d2ef9b8526bb51c04b3e4c9d76642d7b8ae0543_0","lines":"      allocated = BIG_FILE_NAME_LENGTH + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":195,"col":13,"offset":5740},"end":{"line":195,"col":31,"offset":5758},"extra":{"metavars":{"$FUN":{"start":{"line":195,"col":13,"offset":5740},"end":{"line":195,"col":19,"offset":5746},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cbdc1868fc61ffa71b09cf6b30675ed2c3ea1ba7764b22a274e61e1c5dfeabc02a8e91d4edd1dbfeb377cd71d07014445e29f53710e45758d74588649f81bb14_0","lines":"      dir = malloc (allocated);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":205,"col":7,"offset":5884},"end":{"line":205,"col":25,"offset":5902},"extra":{"metavars":{"$FUN":{"start":{"line":205,"col":7,"offset":5884},"end":{"line":205,"col":14,"offset":5891},"abstract_content":"__lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6c581dfd70f1806b06f966e3c116465288717bccec12b26bc89d6b3b682f8b5df81e335e851ccb852c5c6158f0c4945c90b52d2497effb04030d01dff264dcf_0","lines":"  if (__lstat (\".\", &st) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":210,"col":7,"offset":5976},"end":{"line":210,"col":25,"offset":5994},"extra":{"metavars":{"$FUN":{"start":{"line":210,"col":7,"offset":5976},"end":{"line":210,"col":14,"offset":5983},"abstract_content":"__lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6c581dfd70f1806b06f966e3c116465288717bccec12b26bc89d6b3b682f8b5df81e335e851ccb852c5c6158f0c4945c90b52d2497effb04030d01dff264dcf_1","lines":"  if (__lstat (\"/\", &st) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":228,"col":12,"offset":6386},"end":{"line":228,"col":39,"offset":6413},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":7,"offset":6},"abstract_content":"at"},"$FUN":{"start":{"line":228,"col":12,"offset":6386},"end":{"line":228,"col":18,"offset":6392},"abstract_content":"openat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"632f7b8097a25e12f564ebfcddc2e39f1812fa80ce8a216fa471f857fa676a452af0994b7a1e815f4db1b23508fe471ddfcaa0d0b29fd0b33ff90556408d55ce_0","lines":"      fd = openat (fd, \"..\", O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":232,"col":23,"offset":6505},"end":{"line":232,"col":38,"offset":6520},"extra":{"metavars":{"$FUN":{"start":{"line":232,"col":23,"offset":6505},"end":{"line":232,"col":28,"offset":6510},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68c0b4f9af13b9928d7ad6cf2f825a22ad7298d18dede8113f30bb2c11a53cdea8864a2d25eab8e09ca52d84be714f7bf94f753c8dd4959040de5915a1f74745_0","lines":"      parent_status = fstat (fd, &st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":237,"col":23,"offset":6642},"end":{"line":237,"col":45,"offset":6664},"extra":{"metavars":{"$FUN":{"start":{"line":237,"col":23,"offset":6642},"end":{"line":237,"col":30,"offset":6649},"abstract_content":"__lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6c581dfd70f1806b06f966e3c116465288717bccec12b26bc89d6b3b682f8b5df81e335e851ccb852c5c6158f0c4945c90b52d2497effb04030d01dff264dcf_2","lines":"      parent_status = __lstat (dotlist, &st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":309,"col":28,"offset":8884},"end":{"line":309,"col":77,"offset":8933},"extra":{"metavars":{"$4":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":8,"offset":7},"abstract_content":"at"},"$FUN":{"start":{"line":309,"col":28,"offset":8884},"end":{"line":309,"col":35,"offset":8891},"abstract_content":"fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e144b2680822df5c07507f5e62fd595b9d5ac5d83af7923b6b03e109cbf9c1fbecc0a105f25dc591c078deaf92fb70aceb5a6cfd85be8bc29453f2ab2458893a_0","lines":"            entry_status = fstatat (fd, d->d_name, &st, AT_SYMLINK_NOFOLLOW);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":324,"col":24,"offset":9528},"end":{"line":324,"col":61,"offset":9565},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":324,"col":24,"offset":9528},"end":{"line":324,"col":31,"offset":9535},"abstract_content":"newsize"},"$SIGNED":{"start":{"line":324,"col":59,"offset":9563},"end":{"line":324,"col":60,"offset":9564},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0fb2020be6fe6d75d62224be8bfd1446589903e0948e780e761764dc36b921f2035798924a8e1590ff1f28369c0335df2ec564e406b32bc694d3451e398bef52_0","lines":"                size_t newsize = MAX (filesize, dotsize * 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-free","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":329,"col":19,"offset":9728},"end":{"line":329,"col":33,"offset":9742},"extra":{"metavars":{"$TYPE":{"start":{"line":128,"col":3,"offset":3673},"end":{"line":128,"col":7,"offset":3677},"abstract_content":"char"},"$ARR":{"start":{"line":128,"col":8,"offset":3678},"end":{"line":128,"col":12,"offset":3682},"abstract_content":"dots"},"$LEN":{"start":{"line":128,"col":13,"offset":3683},"end":{"line":128,"col":76,"offset":3746},"abstract_content":"DEEP_NESTING*sizeof\"..\"+BIG_FILE_NAME_COMPONENT_LENGTH+1"},"$PTR":{"start":{"line":329,"col":25,"offset":9734},"end":{"line":329,"col":32,"offset":9741},"abstract_content":"dotlist"}},"message":"The software calls free() on a pointer to memory that has a short  lifetime and was not allocated using associated heap allocation  functions such as malloc(), calloc(), or realloc().","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/590","https://github.com/shellphish/how2heap/blob/master/glibc_2.23/house_of_spirit.c"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"451b2771eca9e6a17041b7e776779ab7c64291e232e6a713ed116eb94514c81759f66dc9419634b0cd3a942ee35591a9ef8adaec84b9eab35bac6352d4652947_0","lines":"                  free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":329,"col":19,"offset":9728},"end":{"line":329,"col":34,"offset":9743},"extra":{"metavars":{"$PTR":{"start":{"line":329,"col":25,"offset":9734},"end":{"line":329,"col":32,"offset":9741},"abstract_content":"dotlist"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b05e4e838ed98cda6739bb852cd6909f66587cfbab5007b614db51c1af0be994775d241083f5ca42e52a1ad52aa883941fe4bb524d71ff5f7ad7daee24e5846_0","lines":"                  free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":330,"col":27,"offset":9770},"end":{"line":330,"col":43,"offset":9786},"extra":{"metavars":{"$FUN":{"start":{"line":330,"col":27,"offset":9770},"end":{"line":330,"col":33,"offset":9776},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cbdc1868fc61ffa71b09cf6b30675ed2c3ea1ba7764b22a274e61e1c5dfeabc02a8e91d4edd1dbfeb377cd71d07014445e29f53710e45758d74588649f81bb14_1","lines":"                dotlist = malloc (newsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":335,"col":17,"offset":9906},"end":{"line":335,"col":22,"offset":9911},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":335,"col":17,"offset":9906},"end":{"line":335,"col":18,"offset":9907},"abstract_content":"i"},"$SIGNED":{"start":{"line":335,"col":21,"offset":9910},"end":{"line":335,"col":22,"offset":9911},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e253004f7f2a0597803378f812b7490667d01255066f4207ee0e31c5f62b727ca841e37356a8d477eb16a773bb25134875784c107e895b2f4e0f4ff34f566788_0","lines":"                i = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":345,"col":13,"offset":10157},"end":{"line":345,"col":70,"offset":10214},"extra":{"metavars":{"$FUN":{"start":{"line":345,"col":13,"offset":10157},"end":{"line":345,"col":19,"offset":10163},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efdbbf35f0f61551dfb846846c160dbf7775b39b28576e0d4682622cf9b453afb16853afd3aab1913c5608b8f4a0e5406848754f3e97d0dfc2040156ae89aa7d_0","lines":"            memcpy (dotlist + dotlen, d->d_name, _D_ALLOC_NAMLEN (d));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":346,"col":28,"offset":10243},"end":{"line":346,"col":50,"offset":10265},"extra":{"metavars":{"$FUN":{"start":{"line":346,"col":28,"offset":10243},"end":{"line":346,"col":35,"offset":10250},"abstract_content":"__lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d6c581dfd70f1806b06f966e3c116465288717bccec12b26bc89d6b3b682f8b5df81e335e851ccb852c5c6158f0c4945c90b52d2497effb04030d01dff264dcf_3","lines":"            entry_status = __lstat (dotlist, &st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":359,"col":17,"offset":10787},"end":{"line":359,"col":27,"offset":10797},"extra":{"metavars":{"$TYPE":{"start":{"line":136,"col":3,"offset":3912},"end":{"line":136,"col":7,"offset":3916},"abstract_content":"char"},"$PTR2":{"start":{"line":359,"col":17,"offset":10787},"end":{"line":359,"col":21,"offset":10791},"abstract_content":"dirp"},"$PTR1":{"start":{"line":359,"col":24,"offset":10794},"end":{"line":359,"col":27,"offset":10797},"abstract_content":"dir"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3831a93a5f024c09a269657d3a92342c187c847af32c112a979bc9cfa7b118dff6d8444f9f4808c7f01b6a4e623244fc34e80ca31f49623a4daf0c0028c8d98b_0","lines":"      dirroom = dirp - dir;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":375,"col":15,"offset":11152},"end":{"line":377,"col":39,"offset":11271},"extra":{"metavars":{"$EXPR1":{"start":{"line":376,"col":25,"offset":11200},"end":{"line":376,"col":28,"offset":11203},"abstract_content":"tmp"},"$EXPR2":{"start":{"line":376,"col":31,"offset":11206},"end":{"line":376,"col":55,"offset":11230},"abstract_content":"realloc(dir allocated)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d958b815855d0656365a504e5f374a5e01a83563188ad5bf3afa8a9451e3132e4a46b81c6d5912fc38e3b138e4ace82812533d70faa25a1b93090eeb5f106846_0","lines":"              if (allocated < oldsize\n                  || ! (tmp = realloc (dir, allocated)))\n                goto memory_exhausted;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":376,"col":31,"offset":11206},"end":{"line":376,"col":55,"offset":11230},"extra":{"metavars":{"$FUN":{"start":{"line":376,"col":31,"offset":11206},"end":{"line":376,"col":38,"offset":11213},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64a53ffb3de97597e443caaefe987432e58a8fbc85fe9503ea5eb1e49dcb199f9d553ea0eb84c676c36157f13a50725b9760af9acc83df155be38602eb05aa19_0","lines":"                  || ! (tmp = realloc (dir, allocated)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":381,"col":22,"offset":11425},"end":{"line":383,"col":48,"offset":11563},"extra":{"metavars":{"$FUN":{"start":{"line":381,"col":22,"offset":11425},"end":{"line":381,"col":28,"offset":11431},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efdbbf35f0f61551dfb846846c160dbf7775b39b28576e0d4682622cf9b453afb16853afd3aab1913c5608b8f4a0e5406848754f3e97d0dfc2040156ae89aa7d_1","lines":"              dirp = memcpy (tmp + allocated - (oldsize - dirroom),\n                             tmp + dirroom,\n                             oldsize - dirroom);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":388,"col":7,"offset":11642},"end":{"line":388,"col":39,"offset":11674},"extra":{"metavars":{"$FUN":{"start":{"line":388,"col":7,"offset":11642},"end":{"line":388,"col":13,"offset":11648},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efdbbf35f0f61551dfb846846c160dbf7775b39b28576e0d4682622cf9b453afb16853afd3aab1913c5608b8f4a0e5406848754f3e97d0dfc2040156ae89aa7d_2","lines":"      memcpy (dirp, d->d_name, namlen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-free","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":406,"col":5,"offset":11963},"end":{"line":406,"col":19,"offset":11977},"extra":{"metavars":{"$TYPE":{"start":{"line":128,"col":3,"offset":3673},"end":{"line":128,"col":7,"offset":3677},"abstract_content":"char"},"$ARR":{"start":{"line":128,"col":8,"offset":3678},"end":{"line":128,"col":12,"offset":3682},"abstract_content":"dots"},"$LEN":{"start":{"line":128,"col":13,"offset":3683},"end":{"line":128,"col":76,"offset":3746},"abstract_content":"DEEP_NESTING*sizeof\"..\"+BIG_FILE_NAME_COMPONENT_LENGTH+1"},"$PTR":{"start":{"line":406,"col":11,"offset":11969},"end":{"line":406,"col":18,"offset":11976},"abstract_content":"dotlist"}},"message":"The software calls free() on a pointer to memory that has a short  lifetime and was not allocated using associated heap allocation  functions such as malloc(), calloc(), or realloc().","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/590","https://github.com/shellphish/how2heap/blob/master/glibc_2.23/house_of_spirit.c"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"451b2771eca9e6a17041b7e776779ab7c64291e232e6a713ed116eb94514c81759f66dc9419634b0cd3a942ee35591a9ef8adaec84b9eab35bac6352d4652947_1","lines":"    free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":406,"col":5,"offset":11963},"end":{"line":406,"col":20,"offset":11978},"extra":{"metavars":{"$PTR":{"start":{"line":406,"col":11,"offset":11969},"end":{"line":406,"col":18,"offset":11976},"abstract_content":"dotlist"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b05e4e838ed98cda6739bb852cd6909f66587cfbab5007b614db51c1af0be994775d241083f5ca42e52a1ad52aa883941fe4bb524d71ff5f7ad7daee24e5846_1","lines":"    free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":410,"col":3,"offset":12022},"end":{"line":410,"col":28,"offset":12047},"extra":{"metavars":{"$FUN":{"start":{"line":410,"col":3,"offset":12022},"end":{"line":410,"col":10,"offset":12029},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"92015087972434b55e9e451b302cf8407b7601c828ae872ccfc218e669121f0325df1605a3202bb516e18e180b9b529daa80064901a128268501782fa95227cc_0","lines":"  memmove (dir, dirp, used);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":414,"col":5,"offset":12136},"end":{"line":414,"col":30,"offset":12161},"extra":{"metavars":{"$RET":{"start":{"line":414,"col":5,"offset":12136},"end":{"line":414,"col":8,"offset":12139},"abstract_content":"buf"},"$FUN":{"start":{"line":414,"col":11,"offset":12142},"end":{"line":414,"col":18,"offset":12149},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5012cdb075cf68ae20f55dd91254150aebcc4cbaed8f59e6bc953c18d2426ff6a407982dfa7f79a87b5556b64f37e162a31919ed7921f8266f08da9133f30fba_0","lines":"    buf = realloc (dir, used);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":414,"col":11,"offset":12142},"end":{"line":414,"col":30,"offset":12161},"extra":{"metavars":{"$FUN":{"start":{"line":414,"col":11,"offset":12142},"end":{"line":414,"col":18,"offset":12149},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64a53ffb3de97597e443caaefe987432e58a8fbc85fe9503ea5eb1e49dcb199f9d553ea0eb84c676c36157f13a50725b9760af9acc83df155be38602eb05aa19_1","lines":"    buf = realloc (dir, used);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-free","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":435,"col":7,"offset":12552},"end":{"line":435,"col":21,"offset":12566},"extra":{"metavars":{"$TYPE":{"start":{"line":128,"col":3,"offset":3673},"end":{"line":128,"col":7,"offset":3677},"abstract_content":"char"},"$ARR":{"start":{"line":128,"col":8,"offset":3678},"end":{"line":128,"col":12,"offset":3682},"abstract_content":"dots"},"$LEN":{"start":{"line":128,"col":13,"offset":3683},"end":{"line":128,"col":76,"offset":3746},"abstract_content":"DEEP_NESTING*sizeof\"..\"+BIG_FILE_NAME_COMPONENT_LENGTH+1"},"$PTR":{"start":{"line":435,"col":13,"offset":12558},"end":{"line":435,"col":20,"offset":12565},"abstract_content":"dotlist"}},"message":"The software calls free() on a pointer to memory that has a short  lifetime and was not allocated using associated heap allocation  functions such as malloc(), calloc(), or realloc().","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/590","https://github.com/shellphish/how2heap/blob/master/glibc_2.23/house_of_spirit.c"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"451b2771eca9e6a17041b7e776779ab7c64291e232e6a713ed116eb94514c81759f66dc9419634b0cd3a942ee35591a9ef8adaec84b9eab35bac6352d4652947_2","lines":"      free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":435,"col":7,"offset":12552},"end":{"line":435,"col":22,"offset":12567},"extra":{"metavars":{"$PTR":{"start":{"line":435,"col":13,"offset":12558},"end":{"line":435,"col":20,"offset":12565},"abstract_content":"dotlist"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b05e4e838ed98cda6739bb852cd6909f66587cfbab5007b614db51c1af0be994775d241083f5ca42e52a1ad52aa883941fe4bb524d71ff5f7ad7daee24e5846_2","lines":"      free (dotlist);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","start":{"line":438,"col":7,"offset":12602},"end":{"line":438,"col":18,"offset":12613},"extra":{"metavars":{"$PTR":{"start":{"line":438,"col":13,"offset":12608},"end":{"line":438,"col":16,"offset":12611},"abstract_content":"dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b21403da5a88ff6a407e35c05cd289275e6d186cc56f88783909ad7a1959b817187a2b71e5fdcfc0fc359af0134b75e9ddf228c13bbdad0c49caf9e9921a551b_0","lines":"      free (dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":70,"col":10,"offset":2309},"end":{"line":70,"col":21,"offset":2320},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":10,"offset":2309},"end":{"line":70,"col":17,"offset":2316},"abstract_content":"cur_len"},"$SIGNED":{"start":{"line":70,"col":20,"offset":2319},"end":{"line":70,"col":21,"offset":2320},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f91800911f436360a68243aa300fbf0caa9cac96c5175435282ac27ccfbb9e4e8cc816e68d719e0d54d7a34a52b2e6201322ef9595bc8f290dfe56a16d773ac_0","lines":"  size_t cur_len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":84,"col":30,"offset":2555},"end":{"line":84,"col":52,"offset":2577},"extra":{"metavars":{"$FUN":{"start":{"line":84,"col":30,"offset":2555},"end":{"line":84,"col":37,"offset":2562},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4d33843061600c4ea6013d8729940d3148dcd3f17c4af5ee8d8bb7dc065a0198469cc5fa1838386dea147ec3761a728e58c2606742fe326038c5142eb3c61c35_0","lines":"      new_lineptr = (char *) realloc (*lineptr, *n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":108,"col":18,"offset":3015},"end":{"line":109,"col":69,"offset":3096},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":108,"col":18,"offset":3015},"end":{"line":108,"col":28,"offset":3025},"abstract_content":"needed_max"},"$SIGNED":{"start":{"line":109,"col":57,"offset":3084},"end":{"line":109,"col":58,"offset":3085},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8dba3f8a4f712f396ced00a9809b6a7ddd32ae3f6ff5facb7d42e66cad81c6536503418ac5713f8ce2a6baea0936ae781414e62d689e15f18a5ad7cdce2e86a9_0","lines":"          size_t needed_max =\n            SSIZE_MAX < SIZE_MAX ? (size_t) SSIZE_MAX + 1 : SIZE_MAX;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":110,"col":18,"offset":3115},"end":{"line":110,"col":37,"offset":3134},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":110,"col":18,"offset":3115},"end":{"line":110,"col":24,"offset":3121},"abstract_content":"needed"},"$SIGNED":{"start":{"line":110,"col":27,"offset":3124},"end":{"line":110,"col":28,"offset":3125},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e2685328d09168e4f6b20b435552a8f537eb884db5c87b1ba8d1243f976b0127be8b7fc2e1fa2c64a68c179f2d9e29fb1086f0b47a3ebf1497a7f92dfa467c50_0","lines":"          size_t needed = 2 * *n + 1;   /* Be generous. */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":122,"col":34,"offset":3448},"end":{"line":122,"col":60,"offset":3474},"extra":{"metavars":{"$X":{"start":{"line":110,"col":27,"offset":3124},"end":{"line":110,"col":33,"offset":3130},"abstract_content":"2**n"},"$Y":{"start":{"line":110,"col":36,"offset":3133},"end":{"line":110,"col":37,"offset":3134},"abstract_content":"1"},"$FUN":{"start":{"line":122,"col":34,"offset":3448},"end":{"line":122,"col":41,"offset":3455},"abstract_content":"realloc"},"$ARG1":{"start":{"line":122,"col":43,"offset":3457},"end":{"line":122,"col":51,"offset":3465},"abstract_content":"*lineptr"},"$N":{"start":{"line":122,"col":53,"offset":3467},"end":{"line":122,"col":59,"offset":3473},"abstract_content":"needed"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"81db8b314ebe6ddd7102088fa3d8cc93f3569ba7fcb4a40281cf85cb7b4c59be5c926e47b4e3d83f5d31245015109898dabb406cdd1457c523c31a4b2c385c34_0","lines":"          new_lineptr = (char *) realloc (*lineptr, needed);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","start":{"line":122,"col":34,"offset":3448},"end":{"line":122,"col":60,"offset":3474},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":34,"offset":3448},"end":{"line":122,"col":41,"offset":3455},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4d33843061600c4ea6013d8729940d3148dcd3f17c4af5ee8d8bb7dc065a0198469cc5fa1838386dea147ec3761a728e58c2606742fe326038c5142eb3c61c35_1","lines":"          new_lineptr = (char *) realloc (*lineptr, needed);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":79,"col":7,"offset":2431},"end":{"line":80,"col":10,"offset":2507},"extra":{"metavars":{"$EXPR1":{"start":{"line":79,"col":12,"offset":2436},"end":{"line":79,"col":27,"offset":2451},"abstract_content":"bound=0x10000"},"$EXPR2":{"start":{"line":79,"col":29,"offset":2453},"end":{"line":79,"col":53,"offset":2477},"abstract_content":"_setmaxstdio(bound)<0"},"$EXPR3":{"start":{"line":79,"col":55,"offset":2479},"end":{"line":79,"col":72,"offset":2496},"abstract_content":"bound=bound/2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8cb6bd5f01a1deae315e420775381044ba26dc881030bf75492a8c95050b573c60b94cd251a980466a4d1368bdabb010032282b0f346177cafd6305f00174c1d_0","lines":"      for (bound = 0x10000; _setmaxstdio (bound) < 0; bound = bound / 2)\n        ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":79,"col":12,"offset":2436},"end":{"line":79,"col":27,"offset":2451},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":79,"col":12,"offset":2436},"end":{"line":79,"col":17,"offset":2441},"abstract_content":"bound"},"$SIGNED":{"start":{"line":79,"col":20,"offset":2444},"end":{"line":79,"col":27,"offset":2451},"abstract_content":"0x10000"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b48ebf42faed5e0dfaeb654cd892783f705a797faeb5ff9f9a1cfa40541ea510dfb6fd689f19927d6ceeabc5f86c3524b0431e89e01f6cf7bee2c8d006310443_0","lines":"      for (bound = 0x10000; _setmaxstdio (bound) < 0; bound = bound / 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":79,"col":55,"offset":2479},"end":{"line":79,"col":72,"offset":2496},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":79,"col":55,"offset":2479},"end":{"line":79,"col":60,"offset":2484},"abstract_content":"bound"},"$SIGNED":{"start":{"line":79,"col":71,"offset":2495},"end":{"line":79,"col":72,"offset":2496},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dec4fcdb24dd4f01fb29609863d4d301c7a2ed5d06413794a34cda7c9ea63310dbb785237b3968e9884bb6bec20e36017b088226b46b883d2a64eef1c8ed3fa3_0","lines":"      for (bound = 0x10000; _setmaxstdio (bound) < 0; bound = bound / 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":82,"col":7,"offset":2551},"end":{"line":82,"col":25,"offset":2569},"extra":{"metavars":{"$NARROW":{"start":{"line":82,"col":7,"offset":2551},"end":{"line":82,"col":17,"offset":2561},"abstract_content":"dtablesize"},"$LARGE":{"start":{"line":82,"col":20,"offset":2564},"end":{"line":82,"col":25,"offset":2569},"abstract_content":"bound"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f4a0b4fbae54f807891ff8cda1fa0ae87a0e0cef49ef49ffbab72c0a0170f293b8656b051294eb28e5edd2a04bf4ee46e7ef8e27d735f48c3c2eceb14f1c0fbb_0","lines":"      dtablesize = bound;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":82,"col":7,"offset":2551},"end":{"line":82,"col":25,"offset":2569},"extra":{"metavars":{"$SIGNED":{"start":{"line":82,"col":7,"offset":2551},"end":{"line":82,"col":17,"offset":2561},"abstract_content":"dtablesize"},"$UNSIGNED":{"start":{"line":82,"col":20,"offset":2564},"end":{"line":82,"col":25,"offset":2569},"abstract_content":"bound"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79febfe0233614cdf1e04ac2d9a17e12744e9702ecffbda4cee9711b84e85c066e696da050f964c8aea18a723949a738d2263f75f46096dbcdf86d2e4a0428c0_0","lines":"      dtablesize = bound;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":164,"col":23,"offset":5671},"end":{"line":164,"col":39,"offset":5687},"extra":{"metavars":{"$FUN":{"start":{"line":164,"col":23,"offset":5671},"end":{"line":164,"col":29,"offset":5677},"abstract_content":"malloc"},"$X":{"start":{"line":164,"col":31,"offset":5679},"end":{"line":164,"col":34,"offset":5682},"abstract_content":"top"},"$Y":{"start":{"line":164,"col":37,"offset":5685},"end":{"line":164,"col":38,"offset":5686},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"04e3d4a699af18af8f78c0bed6e8fc50060ca0b89d8c1bc7a4d6ca54ce529477c2b9e8f25916db6dbd626965f68e385289f5d07f37db46d4173df3d73db3f374_0","lines":"      char *new_str = malloc (top + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":164,"col":23,"offset":5671},"end":{"line":164,"col":39,"offset":5687},"extra":{"metavars":{"$FUN":{"start":{"line":164,"col":23,"offset":5671},"end":{"line":164,"col":29,"offset":5677},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53020f9bf58fc4a389241c5f77af399056c05516846dda183fe71e7c792fba22aa9ca8d9204c7400f8590442b76c06e86a9b36cad9cd7384f1236b569f35e5a8_0","lines":"      char *new_str = malloc (top + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":164,"col":23,"offset":5671},"end":{"line":164,"col":39,"offset":5687},"extra":{"metavars":{"$LEN":{"start":{"line":164,"col":31,"offset":5679},"end":{"line":164,"col":38,"offset":5686},"abstract_content":"top+1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"597df90e521da424dc689ca2bebb745ef22b896ba5e7f8752c8447f1620ab81fc98731d063cf5e5ef55ddbf02a4c19ff010528615ea292649fb754e73f95b859_0","lines":"      char *new_str = malloc (top + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":189,"col":21,"offset":6462},"end":{"line":189,"col":25,"offset":6466},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_0","lines":"              tem = argv[bottom + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":190,"col":15,"offset":6494},"end":{"line":190,"col":19,"offset":6498},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_1","lines":"              argv[bottom + i] = argv[top - (middle - bottom) + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":190,"col":34,"offset":6513},"end":{"line":190,"col":38,"offset":6517},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_2","lines":"              argv[bottom + i] = argv[top - (middle - bottom) + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":191,"col":15,"offset":6562},"end":{"line":191,"col":19,"offset":6566},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_3","lines":"              argv[top - (middle - bottom) + i] = tem;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":206,"col":21,"offset":7058},"end":{"line":206,"col":25,"offset":7062},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_4","lines":"              tem = argv[bottom + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":207,"col":15,"offset":7090},"end":{"line":207,"col":19,"offset":7094},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_5","lines":"              argv[bottom + i] = argv[middle + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":207,"col":34,"offset":7109},"end":{"line":207,"col":38,"offset":7113},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_6","lines":"              argv[bottom + i] = argv[middle + i];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":208,"col":15,"offset":7141},"end":{"line":208,"col":19,"offset":7145},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_7","lines":"              argv[middle + i] = tem;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":237,"col":47,"offset":8063},"end":{"line":237,"col":73,"offset":8089},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":237,"col":47,"offset":8063},"end":{"line":237,"col":53,"offset":8069},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eda1b9204161c95f2f49df0b77f94a1a0ca4533719ed7b3e6ccca460d75c4674dabf64945fff950109de81c6b073a73d4589c4aaeba51922dd86e5afca817b82_0","lines":"  d->__posixly_correct = posixly_correct || !!getenv (\"POSIXLY_CORRECT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":258,"col":33,"offset":8577},"end":{"line":258,"col":37,"offset":8581},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_8","lines":"      && argc == __libc_argc && argv == __libc_argv)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":272,"col":26,"offset":9147},"end":{"line":272,"col":63,"offset":9184},"extra":{"metavars":{"$FUN":{"start":{"line":272,"col":26,"offset":9147},"end":{"line":272,"col":32,"offset":9153},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53020f9bf58fc4a389241c5f77af399056c05516846dda183fe71e7c792fba22aa9ca8d9204c7400f8590442b76c06e86a9b36cad9cd7384f1236b569f35e5a8_1","lines":"                (char *) malloc (d->__nonoption_flags_max_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":361,"col":45,"offset":12851},"end":{"line":361,"col":49,"offset":12855},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_9","lines":"      optstring = _getopt_initialize (argc, argv, optstring, d,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":400,"col":33,"offset":14472},"end":{"line":400,"col":37,"offset":14476},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_10","lines":"            exchange ((char **) argv, d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":417,"col":41,"offset":15102},"end":{"line":417,"col":45,"offset":15106},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_11","lines":"      if (d->optind != argc && !strcmp (argv[d->optind], \"--\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":423,"col":33,"offset":15292},"end":{"line":423,"col":37,"offset":15296},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_12","lines":"            exchange ((char **) argv, d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":450,"col":23,"offset":16191},"end":{"line":450,"col":27,"offset":16195},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_13","lines":"          d->optarg = argv[d->optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":457,"col":7,"offset":16343},"end":{"line":458,"col":70,"offset":16449},"extra":{"metavars":{"$EXPR1":{"start":{"line":458,"col":42,"offset":16421},"end":{"line":458,"col":60,"offset":16439},"abstract_content":"argv[d->->optind][1]"},"$EXPR2":{"start":{"line":458,"col":64,"offset":16443},"end":{"line":458,"col":67,"offset":16446},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"797e26c3c2cb8660d21f1972763cd6a8c548fbc732f7a29c5cd54cd6fa3bcc007048b853f5af3f60ae8104d467aa252b0d832c0105510ea312baed57504b3fa2_0","lines":"      d->__nextchar = (argv[d->optind] + 1\n                  + (longopts != NULL && argv[d->optind][1] == '-'));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":457,"col":24,"offset":16360},"end":{"line":457,"col":28,"offset":16364},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_14","lines":"      d->__nextchar = (argv[d->optind] + 1","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":458,"col":42,"offset":16421},"end":{"line":458,"col":46,"offset":16425},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_15","lines":"                  + (longopts != NULL && argv[d->optind][1] == '-'));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":477,"col":11,"offset":17101},"end":{"line":477,"col":15,"offset":17105},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_16","lines":"      && (argv[d->optind][1] == '-'","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":478,"col":29,"offset":17155},"end":{"line":478,"col":33,"offset":17159},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_17","lines":"          || (long_only && (argv[d->optind][2]","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":479,"col":52,"offset":17225},"end":{"line":479,"col":56,"offset":17229},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_18","lines":"                            || !strchr (optstring, argv[d->optind][1])))))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":507,"col":7,"offset":17903},"end":{"line":508,"col":29,"offset":18001},"extra":{"metavars":{"$EXPR1":{"start":{"line":507,"col":12,"offset":17908},"end":{"line":507,"col":35,"offset":17931},"abstract_content":"nameend=d->->__nextchar"},"$EXPR2":{"start":{"line":507,"col":37,"offset":17933},"end":{"line":507,"col":64,"offset":17960},"abstract_content":"*nameend&&*nameend!='='"},"$EXPR3":{"start":{"line":507,"col":66,"offset":17962},"end":{"line":507,"col":75,"offset":17971},"abstract_content":"nameend++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a5104556fe4109c3d9f8d97da80030132e92028fcdf15a4c022b0efd89a9905f695c539cdb5cc8a66916a31dd887efb55032cc7e4ed2fc4962e5912574a5fa0c_0","lines":"      for (nameend = d->__nextchar; *nameend && *nameend != '='; nameend++)\n        /* Do nothing.  */ ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":530,"col":18,"offset":18735},"end":{"line":555,"col":16,"offset":19658},"extra":{"metavars":{"$COND":{"start":{"line":530,"col":22,"offset":18739},"end":{"line":530,"col":27,"offset":18744},"abstract_content":"ambig"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"def7bba876d32000c92c5289f0dff702ad3f13110c84e9fc6d5a25b074a001f2d2b0995dda940ecbaf6efe78846b2552f8989dcb864c5eb6549a701910fee4e6_0","lines":"            else if (ambig)\n              ; /* Taking simpler path to handling ambiguities.  */\n            else if (long_only\n                     || pfound->has_arg != p->has_arg\n                     || pfound->flag != p->flag\n                     || pfound->val != p->val)\n              {\n                /* Second or later nonexact match found.  */\n#ifdef _LIBC\n                struct option_list *newp = alloca (sizeof (*newp));\n#else\n                struct option_list *newp = malloc (sizeof (*newp));\n                if (newp == NULL)\n                  {\n                    free_option_list (ambig_list);\n                    ambig_list = NULL;\n                    ambig = 1; /* Use simpler fallback message.  */\n                  }\n                else\n#endif\n                  {\n                    newp->p = p;\n                    newp->next = ambig_list;\n                    ambig_list = newp;\n                  }\n              }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":539,"col":44,"offset":19127},"end":{"line":539,"col":67,"offset":19150},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"68b5f19a751ac279f540b97ce183d6976fba33070371c0ef3b0b998a232254565fb2e1cd3cdcc4f7459f8e26836870c9ed6bc330f5979888ffaee1e77efd3d26_0","lines":"                struct option_list *newp = alloca (sizeof (*newp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":539,"col":44,"offset":19127},"end":{"line":539,"col":67,"offset":19150},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":539,"col":44,"offset":19127},"end":{"line":539,"col":50,"offset":19133},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a460772afbfe90271e81d20736a685906d1a26d03370e8dd697e10f9975323ee460ec2432590888f59cb24fcb16a74722ddc2a0746877de9f77515e89877d88a_0","lines":"                struct option_list *newp = alloca (sizeof (*newp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":541,"col":44,"offset":19201},"end":{"line":541,"col":67,"offset":19224},"extra":{"metavars":{"$FUN":{"start":{"line":541,"col":44,"offset":19201},"end":{"line":541,"col":50,"offset":19207},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53020f9bf58fc4a389241c5f77af399056c05516846dda183fe71e7c792fba22aa9ca8d9204c7400f8590442b76c06e86a9b36cad9cd7384f1236b569f35e5a8_2","lines":"                struct option_list *newp = malloc (sizeof (*newp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":569,"col":22,"offset":20023},"end":{"line":569,"col":32,"offset":20033},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":569,"col":22,"offset":20023},"end":{"line":569,"col":28,"offset":20029},"abstract_content":"buflen"},"$SIGNED":{"start":{"line":569,"col":31,"offset":20032},"end":{"line":569,"col":32,"offset":20033},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f3d1c7766cc851474b6b35532b43c941171e48377c095b5d662a4f6870ff5805bb24097a1b5762cb33e8204ee8e1dbe46a4a991e1652179c5fb97750097e739b_0","lines":"              size_t buflen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":574,"col":19,"offset":20159},"end":{"line":576,"col":53,"offset":20302},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_0","lines":"                  fprintf (fp,\n                           _(\"%s: option '%s' is ambiguous; possibilities:\"),\n                           argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":576,"col":28,"offset":20277},"end":{"line":576,"col":32,"offset":20281},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_19","lines":"                           argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":576,"col":37,"offset":20286},"end":{"line":576,"col":41,"offset":20290},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_20","lines":"                           argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":599,"col":23,"offset":21058},"end":{"line":599,"col":34,"offset":21069},"extra":{"metavars":{"$PTR":{"start":{"line":599,"col":29,"offset":21064},"end":{"line":599,"col":32,"offset":21067},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_0","lines":"                      free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":603,"col":15,"offset":21130},"end":{"line":605,"col":49,"offset":21269},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_1","lines":"              fprintf (stderr,\n                       _(\"%s: option '%s' is ambiguous; possibilities:\"),\n                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":605,"col":24,"offset":21244},"end":{"line":605,"col":28,"offset":21248},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_21","lines":"                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":605,"col":33,"offset":21253},"end":{"line":605,"col":37,"offset":21257},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_22","lines":"                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":618,"col":15,"offset":21611},"end":{"line":620,"col":49,"offset":21736},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_2","lines":"              fprintf (stderr,\n                       _(\"%s: option '%s' is ambiguous\\n\"),\n                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":620,"col":24,"offset":21711},"end":{"line":620,"col":28,"offset":21715},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_23","lines":"                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":620,"col":33,"offset":21720},"end":{"line":620,"col":37,"offset":21724},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_24","lines":"                       argv[0], argv[d->optind]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":650,"col":27,"offset":22530},"end":{"line":650,"col":31,"offset":22534},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_25","lines":"                      if (argv[d->optind - 1][1] == '-')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":654,"col":31,"offset":22700},"end":{"line":656,"col":65,"offset":22836},"extra":{"metavars":{"$FUN":{"start":{"line":654,"col":31,"offset":22700},"end":{"line":654,"col":41,"offset":22710},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_0","lines":"                          n = __asprintf (&buf, _(\"\\\n%s: option '--%s' doesn't allow an argument\\n\"),\n                                          argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":656,"col":43,"offset":22814},"end":{"line":656,"col":47,"offset":22818},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_26","lines":"                                          argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":658,"col":27,"offset":22870},"end":{"line":660,"col":58,"offset":22998},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_3","lines":"                          fprintf (stderr, _(\"\\\n%s: option '--%s' doesn't allow an argument\\n\"),\n                                   argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":660,"col":36,"offset":22976},"end":{"line":660,"col":40,"offset":22980},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_27","lines":"                                   argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":667,"col":31,"offset":23209},"end":{"line":670,"col":56,"offset":23411},"extra":{"metavars":{"$FUN":{"start":{"line":667,"col":31,"offset":23209},"end":{"line":667,"col":41,"offset":23219},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_1","lines":"                          n = __asprintf (&buf, _(\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"),\n                                          argv[0], argv[d->optind - 1][0],\n                                          pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":669,"col":43,"offset":23323},"end":{"line":669,"col":47,"offset":23327},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_28","lines":"                                          argv[0], argv[d->optind - 1][0],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":669,"col":52,"offset":23332},"end":{"line":669,"col":56,"offset":23336},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_29","lines":"                                          argv[0], argv[d->optind - 1][0],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":672,"col":27,"offset":23445},"end":{"line":675,"col":49,"offset":23632},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_4","lines":"                          fprintf (stderr, _(\"\\\n%s: option '%c%s' doesn't allow an argument\\n\"),\n                                   argv[0], argv[d->optind - 1][0],\n                                   pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":674,"col":36,"offset":23551},"end":{"line":674,"col":40,"offset":23555},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_30","lines":"                                   argv[0], argv[d->optind - 1][0],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":674,"col":45,"offset":23560},"end":{"line":674,"col":49,"offset":23564},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_31","lines":"                                   argv[0], argv[d->optind - 1][0],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":693,"col":27,"offset":24214},"end":{"line":693,"col":38,"offset":24225},"extra":{"metavars":{"$PTR":{"start":{"line":693,"col":33,"offset":24220},"end":{"line":693,"col":36,"offset":24223},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_1","lines":"                          free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":707,"col":29,"offset":24566},"end":{"line":707,"col":33,"offset":24570},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_32","lines":"                d->optarg = argv[d->optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":715,"col":27,"offset":24782},"end":{"line":717,"col":61,"offset":24909},"extra":{"metavars":{"$FUN":{"start":{"line":715,"col":27,"offset":24782},"end":{"line":715,"col":37,"offset":24792},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_2","lines":"                      if (__asprintf (&buf, _(\"\\\n%s: option '--%s' requires an argument\\n\"),\n                                      argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":717,"col":39,"offset":24887},"end":{"line":717,"col":43,"offset":24891},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_33","lines":"                                      argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":730,"col":27,"offset":25386},"end":{"line":730,"col":38,"offset":25397},"extra":{"metavars":{"$PTR":{"start":{"line":730,"col":33,"offset":25392},"end":{"line":730,"col":36,"offset":25395},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_2","lines":"                          free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":733,"col":23,"offset":25452},"end":{"line":735,"col":54,"offset":25600},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_5","lines":"                      fprintf (stderr,\n                               _(\"%s: option '--%s' requires an argument\\n\"),\n                               argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":735,"col":32,"offset":25578},"end":{"line":735,"col":36,"offset":25582},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_34","lines":"                               argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":758,"col":25,"offset":26363},"end":{"line":758,"col":29,"offset":26367},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_35","lines":"      if (!long_only || argv[d->optind][1] == '-'","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":768,"col":19,"offset":26612},"end":{"line":768,"col":23,"offset":26616},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_36","lines":"              if (argv[d->optind][1] == '-')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":772,"col":23,"offset":26754},"end":{"line":773,"col":58,"offset":26868},"extra":{"metavars":{"$FUN":{"start":{"line":772,"col":23,"offset":26754},"end":{"line":772,"col":33,"offset":26764},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_3","lines":"                  n = __asprintf (&buf, _(\"%s: unrecognized option '--%s'\\n\"),\n                                  argv[0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":773,"col":35,"offset":26845},"end":{"line":773,"col":39,"offset":26849},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_37","lines":"                                  argv[0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":775,"col":19,"offset":26894},"end":{"line":776,"col":51,"offset":27000},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_6","lines":"                  fprintf (stderr, _(\"%s: unrecognized option '--%s'\\n\"),\n                           argv[0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":776,"col":28,"offset":26977},"end":{"line":776,"col":32,"offset":26981},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_38","lines":"                           argv[0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":783,"col":23,"offset":27171},"end":{"line":784,"col":78,"offset":27305},"extra":{"metavars":{"$FUN":{"start":{"line":783,"col":23,"offset":27171},"end":{"line":783,"col":33,"offset":27181},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_4","lines":"                  n = __asprintf (&buf, _(\"%s: unrecognized option '%c%s'\\n\"),\n                                  argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":784,"col":35,"offset":27262},"end":{"line":784,"col":39,"offset":27266},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_39","lines":"                                  argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":784,"col":44,"offset":27271},"end":{"line":784,"col":48,"offset":27275},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_40","lines":"                                  argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":786,"col":19,"offset":27331},"end":{"line":787,"col":71,"offset":27457},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_7","lines":"                  fprintf (stderr, _(\"%s: unrecognized option '%c%s'\\n\"),\n                           argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":787,"col":28,"offset":27414},"end":{"line":787,"col":32,"offset":27418},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_41","lines":"                           argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":787,"col":37,"offset":27423},"end":{"line":787,"col":41,"offset":27427},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_42","lines":"                           argv[0], argv[d->optind][0], d->__nextchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":804,"col":19,"offset":27931},"end":{"line":804,"col":30,"offset":27942},"extra":{"metavars":{"$PTR":{"start":{"line":804,"col":25,"offset":27937},"end":{"line":804,"col":28,"offset":27940},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_3","lines":"                  free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":835,"col":19,"offset":28627},"end":{"line":836,"col":42,"offset":28721},"extra":{"metavars":{"$FUN":{"start":{"line":835,"col":19,"offset":28627},"end":{"line":835,"col":29,"offset":28637},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_5","lines":"              n = __asprintf (&buf, _(\"%s: invalid option -- '%c'\\n\"),\n                              argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":836,"col":31,"offset":28710},"end":{"line":836,"col":35,"offset":28714},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_43","lines":"                              argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":838,"col":15,"offset":28743},"end":{"line":838,"col":78,"offset":28806},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_8","lines":"              fprintf (stderr, _(\"%s: invalid option -- '%c'\\n\"), argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":838,"col":67,"offset":28795},"end":{"line":838,"col":71,"offset":28799},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_44","lines":"              fprintf (stderr, _(\"%s: invalid option -- '%c'\\n\"), argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":854,"col":17,"offset":29244},"end":{"line":854,"col":28,"offset":29255},"extra":{"metavars":{"$PTR":{"start":{"line":854,"col":23,"offset":29250},"end":{"line":854,"col":26,"offset":29253},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_4","lines":"                free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":890,"col":21,"offset":30215},"end":{"line":892,"col":44,"offset":30356},"extra":{"metavars":{"$FUN":{"start":{"line":890,"col":21,"offset":30215},"end":{"line":890,"col":31,"offset":30225},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_6","lines":"                if (__asprintf (&buf,\n                                _(\"%s: option requires an argument -- '%c'\\n\"),\n                                argv[0], c) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":892,"col":33,"offset":30345},"end":{"line":892,"col":37,"offset":30349},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_45","lines":"                                argv[0], c) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":904,"col":21,"offset":30757},"end":{"line":904,"col":32,"offset":30768},"extra":{"metavars":{"$PTR":{"start":{"line":904,"col":27,"offset":30763},"end":{"line":904,"col":30,"offset":30766},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_5","lines":"                    free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":907,"col":17,"offset":30811},"end":{"line":909,"col":37,"offset":30937},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_9","lines":"                fprintf (stderr,\n                         _(\"%s: option requires an argument -- '%c'\\n\"),\n                         argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":909,"col":26,"offset":30926},"end":{"line":909,"col":30,"offset":30930},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_46","lines":"                         argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":922,"col":23,"offset":31287},"end":{"line":922,"col":27,"offset":31291},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_47","lines":"          d->optarg = argv[d->optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":927,"col":9,"offset":31408},"end":{"line":929,"col":31,"offset":31533},"extra":{"metavars":{"$EXPR1":{"start":{"line":927,"col":14,"offset":31413},"end":{"line":927,"col":49,"offset":31448},"abstract_content":"d->->__nextchar=nameend=d->->optarg"},"$EXPR2":{"start":{"line":927,"col":51,"offset":31450},"end":{"line":927,"col":78,"offset":31477},"abstract_content":"*nameend&&*nameend!='='"},"$EXPR3":{"start":{"line":928,"col":14,"offset":31492},"end":{"line":928,"col":23,"offset":31501},"abstract_content":"nameend++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"002e4a36f38933d16dfb731b802228523a926a0b7b4d714cdb82a6839e978533becf76ff2ac30942e0fd7a4040daf6824ecc28aeb84f99dcdf3e8cf468b70363_0","lines":"        for (d->__nextchar = nameend = d->optarg; *nameend && *nameend != '=';\n             nameend++)\n          /* Do nothing.  */ ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":964,"col":21,"offset":32748},"end":{"line":965,"col":52,"offset":32857},"extra":{"metavars":{"$FUN":{"start":{"line":964,"col":21,"offset":32748},"end":{"line":964,"col":31,"offset":32758},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_7","lines":"                if (__asprintf (&buf, _(\"%s: option '-W %s' is ambiguous\\n\"),\n                                argv[0], d->optarg) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":965,"col":33,"offset":32838},"end":{"line":965,"col":37,"offset":32842},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_48","lines":"                                argv[0], d->optarg) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":977,"col":21,"offset":33258},"end":{"line":977,"col":32,"offset":33269},"extra":{"metavars":{"$PTR":{"start":{"line":977,"col":27,"offset":33264},"end":{"line":977,"col":30,"offset":33267},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_6","lines":"                    free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":980,"col":17,"offset":33312},"end":{"line":981,"col":45,"offset":33413},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_10","lines":"                fprintf (stderr, _(\"%s: option '-W %s' is ambiguous\\n\"),\n                         argv[0], d->optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":981,"col":26,"offset":33394},"end":{"line":981,"col":30,"offset":33398},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_49","lines":"                         argv[0], d->optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1004,"col":29,"offset":34090},"end":{"line":1006,"col":63,"offset":34225},"extra":{"metavars":{"$FUN":{"start":{"line":1004,"col":29,"offset":34090},"end":{"line":1004,"col":39,"offset":34100},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_8","lines":"                        if (__asprintf (&buf, _(\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"),\n                                        argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1006,"col":41,"offset":34203},"end":{"line":1006,"col":45,"offset":34207},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_50","lines":"                                        argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1019,"col":29,"offset":34720},"end":{"line":1019,"col":40,"offset":34731},"extra":{"metavars":{"$PTR":{"start":{"line":1019,"col":35,"offset":34726},"end":{"line":1019,"col":38,"offset":34729},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_7","lines":"                            free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1022,"col":25,"offset":34790},"end":{"line":1024,"col":56,"offset":34917},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_11","lines":"                        fprintf (stderr, _(\"\\\n%s: option '-W %s' doesn't allow an argument\\n\"),\n                                 argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1024,"col":34,"offset":34895},"end":{"line":1024,"col":38,"offset":34899},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_51","lines":"                                 argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1035,"col":31,"offset":35207},"end":{"line":1035,"col":35,"offset":35211},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_52","lines":"                  d->optarg = argv[d->optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1043,"col":29,"offset":35435},"end":{"line":1045,"col":63,"offset":35565},"extra":{"metavars":{"$FUN":{"start":{"line":1043,"col":29,"offset":35435},"end":{"line":1043,"col":39,"offset":35445},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_9","lines":"                        if (__asprintf (&buf, _(\"\\\n%s: option '-W %s' requires an argument\\n\"),\n                                        argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1045,"col":41,"offset":35543},"end":{"line":1045,"col":45,"offset":35547},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_53","lines":"                                        argv[0], pfound->name) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1058,"col":29,"offset":36060},"end":{"line":1058,"col":40,"offset":36071},"extra":{"metavars":{"$PTR":{"start":{"line":1058,"col":35,"offset":36066},"end":{"line":1058,"col":38,"offset":36069},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_8","lines":"                            free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1061,"col":25,"offset":36130},"end":{"line":1063,"col":56,"offset":36252},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_12","lines":"                        fprintf (stderr, _(\"\\\n%s: option '-W %s' requires an argument\\n\"),\n                                 argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1063,"col":34,"offset":36230},"end":{"line":1063,"col":38,"offset":36234},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_54","lines":"                                 argv[0], pfound->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1118,"col":25,"offset":37878},"end":{"line":1120,"col":48,"offset":37993},"extra":{"metavars":{"$FUN":{"start":{"line":1118,"col":25,"offset":37878},"end":{"line":1118,"col":35,"offset":37888},"abstract_content":"__asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20a4b7c69cc114a2b07257b24d417e4b95fa6e747a7d9cafb9896943e87b789d57c46c79beb7f2bd6d5572049d4ba65f5a15398cedd9cd75f24a918eeae721fd_10","lines":"                    if (__asprintf (&buf, _(\"\\\n%s: option requires an argument -- '%c'\\n\"),\n                                    argv[0], c) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1120,"col":37,"offset":37982},"end":{"line":1120,"col":41,"offset":37986},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_55","lines":"                                    argv[0], c) >= 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1132,"col":25,"offset":38426},"end":{"line":1132,"col":36,"offset":38437},"extra":{"metavars":{"$PTR":{"start":{"line":1132,"col":31,"offset":38432},"end":{"line":1132,"col":34,"offset":38435},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9161420b5ac53800436d98e4c4107063c03077d319fd3f25873d60e4802b03d34bc5410aeea80ac26ad66875271a5b74e46fd7c4e30431313d554046a1d7a6f_9","lines":"                        free (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1135,"col":21,"offset":38488},"end":{"line":1137,"col":41,"offset":38622},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a9f784de38f39a97543cda9ebf4f1fad953a0c9a86134a1415ca6bfc2baaa75bd1fcfbe8ad677faa623265fb059f9a1ecb4ccaee1f869dc382371b543f5f73ee_13","lines":"                    fprintf (stderr,\n                             _(\"%s: option requires an argument -- '%c'\\n\"),\n                             argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1137,"col":30,"offset":38611},"end":{"line":1137,"col":34,"offset":38615},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_56","lines":"                             argv[0], c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1149,"col":27,"offset":38991},"end":{"line":1149,"col":31,"offset":38995},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_57","lines":"              d->optarg = argv[d->optind++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1167,"col":38,"offset":39387},"end":{"line":1167,"col":42,"offset":39391},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_58","lines":"  result = _getopt_internal_r (argc, argv, optstring, longopts,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1189,"col":44,"offset":39935},"end":{"line":1189,"col":48,"offset":39939},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_59","lines":"  return _getopt_internal (argc, (char **) argv, optstring,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1199,"col":34,"offset":40215},"end":{"line":1199,"col":38,"offset":40219},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_60","lines":"  return _getopt_internal (argc, argv, optstring,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1222,"col":11,"offset":40639},"end":{"line":1222,"col":50,"offset":40678},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":1222,"col":11,"offset":40639},"end":{"line":1222,"col":17,"offset":40645},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"73503d845269e6911289b579ff29582270b85b9eca9fe874dacaed383e13a90f9cbef88e6574207704e61fc6b2545d1adf55b025fa7843e21c24726ce77e7323_0","lines":"      c = getopt (argc, argv, \"abc:d:0123456789\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1222,"col":25,"offset":40653},"end":{"line":1222,"col":29,"offset":40657},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_61","lines":"      c = getopt (argc, argv, \"abc:d:0123456789\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":1268,"col":24,"offset":41656},"end":{"line":1268,"col":28,"offset":41660},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fca7e82057945489d3e9ff36ce7b99b9c2d6de7d907b887f36b5561a112453e9e5d41d0ac474e2b8ee55108f660d625e55a70858ed1bccc9c6a86335b0191c03_62","lines":"        printf (\"%s \", argv[optind++]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.c","start":{"line":124,"col":35,"offset":4144},"end":{"line":124,"col":78,"offset":4187},"extra":{"metavars":{"$FUN":{"start":{"line":124,"col":35,"offset":4144},"end":{"line":124,"col":41,"offset":4150},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54092ae7149ca7394ae2bd01ce9caa218dc93a09abd9681011ebc2205f5c93c5a98ad85b70a938bbe3142c8cf4e770e0aec834c009d07c99f59d2b91d338a72e_0","lines":"      buf.ps_cmdptr    = (char *) malloc (buf.ps_cmdlen    = PS_CMDBLEN_LONG);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.c","start":{"line":125,"col":35,"offset":4223},"end":{"line":125,"col":76,"offset":4264},"extra":{"metavars":{"$FUN":{"start":{"line":125,"col":35,"offset":4223},"end":{"line":125,"col":41,"offset":4229},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54092ae7149ca7394ae2bd01ce9caa218dc93a09abd9681011ebc2205f5c93c5a98ad85b70a938bbe3142c8cf4e770e0aec834c009d07c99f59d2b91d338a72e_1","lines":"      buf.ps_conttyptr = (char *) malloc (buf.ps_conttylen = PS_CONTTYBLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.c","start":{"line":126,"col":35,"offset":4300},"end":{"line":126,"col":74,"offset":4339},"extra":{"metavars":{"$FUN":{"start":{"line":126,"col":35,"offset":4300},"end":{"line":126,"col":41,"offset":4306},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54092ae7149ca7394ae2bd01ce9caa218dc93a09abd9681011ebc2205f5c93c5a98ad85b70a938bbe3142c8cf4e770e0aec834c009d07c99f59d2b91d338a72e_2","lines":"      buf.ps_pathptr   = (char *) malloc (buf.ps_pathlen   = PS_PATHBLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","start":{"line":41,"col":19,"offset":1254},"end":{"line":41,"col":45,"offset":1280},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":19,"offset":1254},"end":{"line":41,"col":28,"offset":1263},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3af5cf626eb2da331f57ee5cfc437e11da2196507c51a78258add1c3ef3f3b02be4f16a8cbdb8ba78fbec296fa29a1a8987600057440394be50f5aa61bfc2951_0","lines":"  char const *p = setlocale (category, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","start":{"line":58,"col":15,"offset":1754},"end":{"line":62,"col":30,"offset":1976},"extra":{"metavars":{"$EXPR1":{"start":{"line":58,"col":21,"offset":1760},"end":{"line":58,"col":22,"offset":1761},"abstract_content":"p","propagated_value":{"svalue_start":{"line":58,"col":25,"offset":1764},"svalue_end":{"line":58,"col":50,"offset":1789},"svalue_abstract_content":"setlocale(category\"C\")"}},"$EXPR2":{"start":{"line":58,"col":25,"offset":1764},"end":{"line":58,"col":50,"offset":1789},"abstract_content":"setlocale(category\"C\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a978444a3a246644629044b803c0f55b27373a0358e957cb961e88844189828e980b2c7c396e63325c04810397ebfb5348b0e392d871d6c298794f7531f7f7c_0","lines":"              if (((p = setlocale (category, \"C\"))\n                   && strcmp (p, locale) == 0)\n                  || ((p = setlocale (category, \"POSIX\"))\n                      && strcmp (p, locale) == 0))\n                hard = false;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","start":{"line":58,"col":25,"offset":1764},"end":{"line":58,"col":50,"offset":1789},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":25,"offset":1764},"end":{"line":58,"col":34,"offset":1773},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3af5cf626eb2da331f57ee5cfc437e11da2196507c51a78258add1c3ef3f3b02be4f16a8cbdb8ba78fbec296fa29a1a8987600057440394be50f5aa61bfc2951_1","lines":"              if (((p = setlocale (category, \"C\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","start":{"line":60,"col":28,"offset":1865},"end":{"line":60,"col":57,"offset":1894},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":28,"offset":1865},"end":{"line":60,"col":37,"offset":1874},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3af5cf626eb2da331f57ee5cfc437e11da2196507c51a78258add1c3ef3f3b02be4f16a8cbdb8ba78fbec296fa29a1a8987600057440394be50f5aa61bfc2951_2","lines":"                  || ((p = setlocale (category, \"POSIX\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","start":{"line":65,"col":15,"offset":2042},"end":{"line":65,"col":43,"offset":2070},"extra":{"metavars":{"$FUN":{"start":{"line":65,"col":15,"offset":2042},"end":{"line":65,"col":24,"offset":2051},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3af5cf626eb2da331f57ee5cfc437e11da2196507c51a78258add1c3ef3f3b02be4f16a8cbdb8ba78fbec296fa29a1a8987600057440394be50f5aa61bfc2951_3","lines":"              setlocale (category, locale);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":177,"col":10,"offset":6447},"end":{"line":177,"col":31,"offset":6468},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":177,"col":10,"offset":6447},"end":{"line":177,"col":27,"offset":6464},"abstract_content":"max_bucket_length"},"$SIGNED":{"start":{"line":177,"col":30,"offset":6467},"end":{"line":177,"col":31,"offset":6468},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d8b91c57a6f935903ae83b14002e03a1a207ab4ffe62d788b766c9c958415042683e11ac068e26e486a13f3b805b8caa87283b96bb54884954c0a342ba8e6076_0","lines":"  size_t max_bucket_length = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":184,"col":18,"offset":6651},"end":{"line":184,"col":35,"offset":6668},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":184,"col":18,"offset":6651},"end":{"line":184,"col":31,"offset":6664},"abstract_content":"bucket_length"},"$SIGNED":{"start":{"line":184,"col":34,"offset":6667},"end":{"line":184,"col":35,"offset":6668},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"454bb01f4b6723cfbb02f392b1fcbff8b6fc27bff486932fe2950e809bc6a7c81b428ec7af0959e7a5396994184988f3d30d4319ea52721e2856a790dbc26b58_0","lines":"          size_t bucket_length = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":204,"col":10,"offset":7079},"end":{"line":204,"col":28,"offset":7097},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":204,"col":10,"offset":7079},"end":{"line":204,"col":24,"offset":7093},"abstract_content":"n_buckets_used"},"$SIGNED":{"start":{"line":204,"col":27,"offset":7096},"end":{"line":204,"col":28,"offset":7097},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"600202c02c71c456707ad13a6c0dcfc35450d3508632982b1b7353a3ba2d787698be4f99823a736ea1462782adba648f77303c43ec2e541d1fd3fd2e623448d8_0","lines":"  size_t n_buckets_used = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":205,"col":10,"offset":7108},"end":{"line":205,"col":23,"offset":7121},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":205,"col":10,"offset":7108},"end":{"line":205,"col":19,"offset":7117},"abstract_content":"n_entries"},"$SIGNED":{"start":{"line":205,"col":22,"offset":7120},"end":{"line":205,"col":23,"offset":7121},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b049f26c3352f5cda6bf795861663a0a6396fa05a8fe5b52a909078a6a831648d280df9351a99fd86bac2330afe405a70d11fffd4a2773c7ac4243f898ac74a8_0","lines":"  size_t n_entries = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":339,"col":10,"offset":11014},"end":{"line":339,"col":21,"offset":11025},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":339,"col":10,"offset":11014},"end":{"line":339,"col":17,"offset":11021},"abstract_content":"counter"},"$SIGNED":{"start":{"line":339,"col":20,"offset":11024},"end":{"line":339,"col":21,"offset":11025},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"180c104c07a193d556a1d82284e387839497be4b9977efd4cb2b4f5639a2b295e9b887c0eacbfdc6c18ce28395d4dccb2d72eee6908ebf6ee86105d1e22dcad3_0","lines":"  size_t counter = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":371,"col":10,"offset":12126},"end":{"line":371,"col":21,"offset":12137},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":371,"col":10,"offset":12126},"end":{"line":371,"col":17,"offset":12133},"abstract_content":"counter"},"$SIGNED":{"start":{"line":371,"col":20,"offset":12136},"end":{"line":371,"col":21,"offset":12137},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"180c104c07a193d556a1d82284e387839497be4b9977efd4cb2b4f5639a2b295e9b887c0eacbfdc6c18ce28395d4dccb2d72eee6908ebf6ee86105d1e22dcad3_1","lines":"  size_t counter = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":410,"col":10,"offset":13267},"end":{"line":410,"col":19,"offset":13276},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":410,"col":10,"offset":13267},"end":{"line":410,"col":15,"offset":13272},"abstract_content":"value"},"$SIGNED":{"start":{"line":410,"col":18,"offset":13275},"end":{"line":410,"col":19,"offset":13276},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63451b4feb72df76ddb138b9b42b7e1a90f1bf9a364fe0faa3df84fd5265aa9ed956da061b542691bedfb7764dcc0843ffd4e754fc61a4e2acb832f510ed1c93_0","lines":"  size_t value = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":430,"col":10,"offset":13836},"end":{"line":430,"col":19,"offset":13845},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":430,"col":10,"offset":13836},"end":{"line":430,"col":15,"offset":13841},"abstract_content":"value"},"$SIGNED":{"start":{"line":430,"col":18,"offset":13844},"end":{"line":430,"col":19,"offset":13845},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63451b4feb72df76ddb138b9b42b7e1a90f1bf9a364fe0faa3df84fd5265aa9ed956da061b542691bedfb7764dcc0843ffd4e754fc61a4e2acb832f510ed1c93_1","lines":"  size_t value = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":434,"col":5,"offset":13907},"end":{"line":434,"col":42,"offset":13944},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":434,"col":5,"offset":13907},"end":{"line":434,"col":10,"offset":13912},"abstract_content":"value"},"$SIGNED":{"start":{"line":434,"col":22,"offset":13924},"end":{"line":434,"col":24,"offset":13926},"abstract_content":"31"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"128968c9f4eb644808eccedd46fd13ae55be2507579d952064df8baa6a6a5b1101c663b06fb13c4982249734d643407f6c08d4f2b58f181f66e234cae1337925_0","lines":"    value = (value * 31 + ch) % n_buckets;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":446,"col":10,"offset":14180},"end":{"line":446,"col":21,"offset":14191},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":446,"col":10,"offset":14180},"end":{"line":446,"col":17,"offset":14187},"abstract_content":"divisor"},"$SIGNED":{"start":{"line":446,"col":20,"offset":14190},"end":{"line":446,"col":21,"offset":14191},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5432478e0a1b9d61c6af3e808fe48e3d87a02588b06dd46ecec5aeaed09799329e88ee78c826a14c1c03e72de7bd24e6e5d9335137ac5e7d08a19abbbe9d9540_0","lines":"  size_t divisor = 3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":447,"col":10,"offset":14202},"end":{"line":447,"col":36,"offset":14228},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":447,"col":10,"offset":14202},"end":{"line":447,"col":16,"offset":14208},"abstract_content":"square"},"$SIGNED":{"start":{"line":447,"col":19,"offset":14211},"end":{"line":447,"col":26,"offset":14218},"abstract_content":"divisor","propagated_value":{"svalue_start":{"line":446,"col":20,"offset":14190},"svalue_end":{"line":446,"col":21,"offset":14191},"svalue_abstract_content":"3"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b4dff94999acfef7a7488f3ff7f592d5bd4b227516b0c8841f892cf2414f58738289544af92dc9b4b37c00c2261f5a738ad633e297284c6271e4624081b3b196_0","lines":"  size_t square = divisor * divisor;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":467,"col":5,"offset":14663},"end":{"line":467,"col":19,"offset":14677},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":467,"col":5,"offset":14663},"end":{"line":467,"col":14,"offset":14672},"abstract_content":"candidate"},"$SIGNED":{"start":{"line":467,"col":17,"offset":14675},"end":{"line":467,"col":19,"offset":14677},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1496055a273dbcca0c10095d3d619f61d1cb0475a2716da65dffb6ab3efd8d6674022cf393670608ed95927b40630609fa4411431a604bfc50b20aa2a830b189_0","lines":"    candidate = 10;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":493,"col":10,"offset":15371},"end":{"line":493,"col":42,"offset":15403},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":493,"col":10,"offset":15371},"end":{"line":493,"col":13,"offset":15374},"abstract_content":"val"},"$SIGNED":{"start":{"line":493,"col":40,"offset":15401},"end":{"line":493,"col":41,"offset":15402},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec3a6d62f47bae561418e676224d1164e68a140906e41ee1f1e177de7ab09396acb12b79aea413f61e9737213de6121fa36fdf4d8bdc37ea6ce2d06965f3d5ae_0","lines":"  size_t val = rotr_sz ((size_t) data, 3);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":543,"col":15,"offset":16997},"end":{"line":544,"col":20,"offset":17035},"extra":{"metavars":{"$FUN":{"start":{"line":543,"col":15,"offset":16997},"end":{"line":544,"col":20,"offset":17035},"abstract_content":"_GL_ATTRIBUTE_PURE compute_bucket_size"},"$SIGNED":{"start":{"line":550,"col":16,"offset":17237},"end":{"line":550,"col":17,"offset":17238},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dbd3c74a408d47a72008ce59913f2cd0144cd6846ea767c92905ffeb543b5a52b6b17a4e8067eeaea09a2c8dc03a662313c5df3e45adfaf211df3a6dd0042faa_0","lines":"static size_t _GL_ATTRIBUTE_PURE\ncompute_bucket_size (size_t candidate, const Hash_tuning *tuning)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":605,"col":11,"offset":19739},"end":{"line":605,"col":33,"offset":19761},"extra":{"metavars":{"$FUN":{"start":{"line":605,"col":11,"offset":19739},"end":{"line":605,"col":17,"offset":19745},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"22304029f3034eafbf171229881e259ac172ed7da424891b43595705d0ca08c9c51f7b644d9aa1a17543845d27f7045bfdac3cda36466c6310cba52a2043e4f7_0","lines":"  table = malloc (sizeof *table);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":626,"col":19,"offset":20384},"end":{"line":626,"col":67,"offset":20432},"extra":{"metavars":{"$FUN":{"start":{"line":626,"col":19,"offset":20384},"end":{"line":626,"col":25,"offset":20390},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3566bae0c7802d12df8e0edbbf2c3711ca494003e80ca93a031926601e1eb5d09b6a457c4008877072b731bdd7d1ffd8a0304bfb927b4ef1bd301f5237b54b92_0","lines":"  table->bucket = calloc (table->n_buckets, sizeof *table->bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":727,"col":11,"offset":23077},"end":{"line":727,"col":25,"offset":23091},"extra":{"metavars":{"$PTR":{"start":{"line":727,"col":17,"offset":23083},"end":{"line":727,"col":23,"offset":23089},"abstract_content":"cursor"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d27f243138256d626d73705ff0693aa04ad8bd0f91f6a5ef0a9b5715754b9d58e646b61d6e47ec022357ee20e0bc3bc55dc0e96927f7df19201d3f67606c712c_0","lines":"          free (cursor);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":735,"col":7,"offset":23280},"end":{"line":735,"col":21,"offset":23294},"extra":{"metavars":{"$PTR":{"start":{"line":735,"col":13,"offset":23286},"end":{"line":735,"col":19,"offset":23292},"abstract_content":"cursor"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d27f243138256d626d73705ff0693aa04ad8bd0f91f6a5ef0a9b5715754b9d58e646b61d6e47ec022357ee20e0bc3bc55dc0e96927f7df19201d3f67606c712c_1","lines":"      free (cursor);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":741,"col":3,"offset":23369},"end":{"line":741,"col":24,"offset":23390},"extra":{"metavars":{"$PTR":{"start":{"line":741,"col":9,"offset":23375},"end":{"line":741,"col":22,"offset":23388},"abstract_content":"table->->bucket"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58949c74cfb18dfa82fa1c90a67074ae2aa60482e2a1b916f3125e800b68c0df01603e0938be3fe9aa4f12ae1e3eb30836402040b426ff2f3f8961f92853865a_0","lines":"  free (table->bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":742,"col":3,"offset":23393},"end":{"line":742,"col":16,"offset":23406},"extra":{"metavars":{"$PTR":{"start":{"line":742,"col":9,"offset":23399},"end":{"line":742,"col":14,"offset":23404},"abstract_content":"table"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf3568a5b2455293db5d5d8ee5475b9622a30818fe4139f493a2d8be65f95a36fb1b69dba5218d3a80ff4cdd8f299e289895cf6482615911f2eb8348ac509af2_0","lines":"  free (table);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":954,"col":23,"offset":29807},"end":{"line":954,"col":67,"offset":29851},"extra":{"metavars":{"$FUN":{"start":{"line":954,"col":23,"offset":29807},"end":{"line":954,"col":29,"offset":29813},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3566bae0c7802d12df8e0edbbf2c3711ca494003e80ca93a031926601e1eb5d09b6a457c4008877072b731bdd7d1ffd8a0304bfb927b4ef1bd301f5237b54b92_1","lines":"  new_table->bucket = calloc (new_size, sizeof *new_table->bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":989,"col":7,"offset":31386},"end":{"line":989,"col":28,"offset":31407},"extra":{"metavars":{"$PTR":{"start":{"line":989,"col":13,"offset":31392},"end":{"line":989,"col":26,"offset":31405},"abstract_content":"table->->bucket"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58949c74cfb18dfa82fa1c90a67074ae2aa60482e2a1b916f3125e800b68c0df01603e0938be3fe9aa4f12ae1e3eb30836402040b426ff2f3f8961f92853865a_1","lines":"      free (table->bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":1186,"col":23,"offset":38584},"end":{"line":1186,"col":37,"offset":38598},"extra":{"metavars":{"$PTR":{"start":{"line":1186,"col":29,"offset":38590},"end":{"line":1186,"col":35,"offset":38596},"abstract_content":"cursor"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d27f243138256d626d73705ff0693aa04ad8bd0f91f6a5ef0a9b5715754b9d58e646b61d6e47ec022357ee20e0bc3bc55dc0e96927f7df19201d3f67606c712c_2","lines":"                      free (cursor);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":50,"col":7,"offset":1502},"end":{"line":50,"col":27,"offset":1522},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b1a5c11db360769793f16900cc94a6a7fbcab0cf5cc3f84bebac4de8bc74c05c746068e7f02efe021c499cc5ac948bae4bd6bb94a02c9c722270e1f4a4ce385b_0","lines":"  if (lstat (file, &stats) == 0 && S_ISLNK (stats.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":50,"col":7,"offset":1502},"end":{"line":50,"col":27,"offset":1522},"extra":{"metavars":{"$FUN":{"start":{"line":50,"col":7,"offset":1502},"end":{"line":50,"col":12,"offset":1507},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97f61ce23171bb3fe16c47fda472739bae4e83b28cb2e2ae95c4e6b7c98ccad80faf7f67d7c7a60cac99fc921b6a9eb8c88a9a9e9a52f55b47efa5b48362481d_0","lines":"  if (lstat (file, &stats) == 0 && S_ISLNK (stats.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":57,"col":10,"offset":1630},"end":{"line":57,"col":32,"offset":1652},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":57,"col":10,"offset":1630},"end":{"line":57,"col":15,"offset":1635},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20890b280424ee8e5c1e434b9aee24a8f444b5cfff57a886e28e517802b6e605a4106a2d075b0f4ef1488c57e09c42d55bc94c4b6eaaeeca35ae1a2605ca3f37_0","lines":"  return chown (file, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":81,"col":11,"offset":2021},"end":{"line":81,"col":28,"offset":2038},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b1a5c11db360769793f16900cc94a6a7fbcab0cf5cc3f84bebac4de8bc74c05c746068e7f02efe021c499cc5ac948bae4bd6bb94a02c9c722270e1f4a4ce385b_1","lines":"      if (lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":81,"col":11,"offset":2021},"end":{"line":81,"col":28,"offset":2038},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":11,"offset":2021},"end":{"line":81,"col":16,"offset":2026},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97f61ce23171bb3fe16c47fda472739bae4e83b28cb2e2ae95c4e6b7c98ccad80faf7f67d7c7a60cac99fc921b6a9eb8c88a9a9e9a52f55b47efa5b48362481d_1","lines":"      if (lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":85,"col":16,"offset":2132},"end":{"line":85,"col":38,"offset":2154},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":85,"col":16,"offset":2132},"end":{"line":85,"col":21,"offset":2137},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20890b280424ee8e5c1e434b9aee24a8f444b5cfff57a886e28e517802b6e605a4106a2d075b0f4ef1488c57e09c42d55bc94c4b6eaaeeca35ae1a2605ca3f37_1","lines":"        return chown (file, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":94,"col":16,"offset":2314},"end":{"line":94,"col":38,"offset":2336},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":94,"col":16,"offset":2314},"end":{"line":94,"col":21,"offset":2319},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"20890b280424ee8e5c1e434b9aee24a8f444b5cfff57a886e28e517802b6e605a4106a2d075b0f4ef1488c57e09c42d55bc94c4b6eaaeeca35ae1a2605ca3f37_2","lines":"        return chown (file, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":98,"col":12,"offset":2364},"end":{"line":98,"col":35,"offset":2387},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":98,"col":12,"offset":2364},"end":{"line":98,"col":18,"offset":2370},"abstract_content":"lchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8e4f801725915d9d2d2b64cd347ba8015bd0893936899d43df28909a080b18a8e189a5c7b2efbaf1ac45e1e1d26f1d19284b35b4d81b63d2c2be15c7ca432c5b_0","lines":"  result = lchown (file, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","start":{"line":109,"col":16,"offset":2862},"end":{"line":110,"col":75,"offset":2992},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$FUN":{"start":{"line":109,"col":16,"offset":2862},"end":{"line":109,"col":22,"offset":2868},"abstract_content":"lchmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efe1ae0ffcb7689dcebeba0cbe063275ae3fc640da8ff5cd97413fd63dea4c6e6ddf412d136f21e89b60330fe4e0321f41ec339649f09f206705211985dd6763_0","lines":"      result = lchmod (file, st.st_mode & (S_IRWXU | S_IRWXG | S_IRWXO\n                                           | S_ISUID | S_ISGID | S_ISVTX));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":138,"col":13,"offset":3812},"end":{"line":138,"col":39,"offset":3838},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":138,"col":13,"offset":3812},"end":{"line":138,"col":19,"offset":3818},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_0","lines":"      dir = getenv (\"CHARSETALIASDIR\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":146,"col":13,"offset":4087},"end":{"line":146,"col":68,"offset":4142},"extra":{"metavars":{"$SIGNED":{"start":{"line":146,"col":13,"offset":4087},"end":{"line":146,"col":22,"offset":4096},"abstract_content":"add_slash"},"$UNSIGNED":{"start":{"line":146,"col":26,"offset":4100},"end":{"line":146,"col":33,"offset":4107},"abstract_content":"dir_len","propagated_value":{"svalue_start":{"line":144,"col":26,"offset":4020},"svalue_end":{"line":144,"col":38,"offset":4032},"svalue_abstract_content":"strlen(dir)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b089e03ff60a82c2fff6ee6ae00e4b345d4f3de68d23f3c95c9a94a54f530dd743d79754c0318db7a9ecb6e1c3b18291979338b25d5f52f4f778996a8fa6474d_0","lines":"        int add_slash = (dir_len > 0 && !ISSLASH (dir[dir_len - 1]));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":147,"col":30,"offset":4174},"end":{"line":147,"col":73,"offset":4217},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":30,"offset":4174},"end":{"line":147,"col":36,"offset":4180},"abstract_content":"malloc"},"$X":{"start":{"line":147,"col":38,"offset":4182},"end":{"line":147,"col":68,"offset":4212},"abstract_content":"dir_len+add_slash+base_len"},"$Y":{"start":{"line":147,"col":71,"offset":4215},"end":{"line":147,"col":72,"offset":4216},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fe1d3e9666574b766d73d53925ea1e12e39500e4137c586cb87ef3e3009207d7f5aded0d13a9a1bb0ed67637a2628720cb159fbb6e37f856e9876c4cc754ed4d_0","lines":"        file_name = (char *) malloc (dir_len + add_slash + base_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":147,"col":30,"offset":4174},"end":{"line":147,"col":73,"offset":4217},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":30,"offset":4174},"end":{"line":147,"col":36,"offset":4180},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e214489a5f3dff90b8054baeaf8ca4a29250675b82b185f4c8a7f64d5c58bc8850d738b527f84df058e66bad7470d89199dc565df57ddd784a785f7024a791b_0","lines":"        file_name = (char *) malloc (dir_len + add_slash + base_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":150,"col":13,"offset":4274},"end":{"line":150,"col":45,"offset":4306},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":13,"offset":4274},"end":{"line":150,"col":19,"offset":4280},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9e2dd7bcbd55f3b2650d1c4dc45727e6e29e7a847e99a4cb45c64f7657ffab3b3a4347944c9079489ae3b58690efc30298ff5700e260a4c2721c8277777638c_0","lines":"            memcpy (file_name, dir, dir_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":153,"col":13,"offset":4403},"end":{"line":153,"col":73,"offset":4463},"extra":{"metavars":{"$FUN":{"start":{"line":153,"col":13,"offset":4403},"end":{"line":153,"col":19,"offset":4409},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9e2dd7bcbd55f3b2650d1c4dc45727e6e29e7a847e99a4cb45c64f7657ffab3b3a4347944c9079489ae3b58690efc30298ff5700e260a4c2721c8277777638c_1","lines":"            memcpy (file_name + dir_len + add_slash, base, base_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":171,"col":16,"offset":5165},"end":{"line":172,"col":76,"offset":5257},"extra":{"metavars":{"$FUN":{"start":{"line":171,"col":16,"offset":5165},"end":{"line":171,"col":20,"offset":5169},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fe01a142d906f2d478b3896d554969a3d93e99637c89228e48df957a0a371c7d473b72db68cf34c31bf8fe67e90ca2c1d4cf5954e6e992e89c1d31b8550a0a20_0","lines":"          fd = open (file_name,\n                     O_RDONLY | (HAVE_WORKING_O_NOFOLLOW ? O_NOFOLLOW : 0));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":180,"col":20,"offset":5430},"end":{"line":180,"col":36,"offset":5446},"extra":{"metavars":{"$FUN":{"start":{"line":180,"col":20,"offset":5430},"end":{"line":180,"col":26,"offset":5436},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2657d2e0c12911a779e838eacc61945ff6b2e035a08d3a49bcbb8e6ac393311538c49a852175d588d11817b92b7b2482db404a7b803983d9f912d854ebb822af_0","lines":"              fp = fdopen (fd, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":191,"col":26,"offset":5791},"end":{"line":191,"col":38,"offset":5803},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":191,"col":26,"offset":5791},"end":{"line":191,"col":34,"offset":5799},"abstract_content":"res_size"},"$SIGNED":{"start":{"line":191,"col":37,"offset":5802},"end":{"line":191,"col":38,"offset":5803},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0f724a58ebfb97a4fd4548a5ad7c890db81fd849f1e824bf2800779906fcb93382af82de80907cb5b1809012eb35365ab86feae08f486fa5b26dbcf31a0f8f02_0","lines":"                  size_t res_size = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":201,"col":27,"offset":6067},"end":{"line":201,"col":36,"offset":6076},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":201,"col":27,"offset":6067},"end":{"line":201,"col":31,"offset":6071},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a48170478a84e489f44f2fcace0bda6aadd6189c568efb9be48ec8a07d837e96085ca9fff389a0e34eecc2592ad4e51a2dc922c18001dd211e02277c91f103f7_0","lines":"                      c = getc (fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":210,"col":33,"offset":6427},"end":{"line":210,"col":42,"offset":6436},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":210,"col":33,"offset":6427},"end":{"line":210,"col":37,"offset":6431},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a48170478a84e489f44f2fcace0bda6aadd6189c568efb9be48ec8a07d837e96085ca9fff389a0e34eecc2592ad4e51a2dc922c18001dd211e02277c91f103f7_1","lines":"                            c = getc (fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":216,"col":23,"offset":6657},"end":{"line":216,"col":37,"offset":6671},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":216,"col":23,"offset":6657},"end":{"line":216,"col":29,"offset":6663},"abstract_content":"ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"84f16acadcf7beb8264c04a9df21317b58e3dd417c7de1f032d5f9cfb023e46fcec80f5c85c281bf805fcbbc5fc47f1cbdcc29f587c9ec1906d15b2469c8f10d_0","lines":"                      ungetc (c, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":217,"col":27,"offset":6699},"end":{"line":217,"col":63,"offset":6735},"extra":{"metavars":{"$FUN":{"start":{"line":217,"col":27,"offset":6699},"end":{"line":217,"col":33,"offset":6705},"abstract_content":"fscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2784d7b768aeba59e102fa6901703d0777a30fbd3a6068d92c8d605238d6a8de4dea8599d7530a6d732714e248c1f8c579a65ad525c1a1b7b1d110c0fac4dabe_0","lines":"                      if (fscanf (fp, \"%50s %50s\", buf1, buf2) < 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":224,"col":27,"offset":6994},"end":{"line":224,"col":53,"offset":7020},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":224,"col":27,"offset":6994},"end":{"line":224,"col":35,"offset":7002},"abstract_content":"res_size"},"$SIGNED":{"start":{"line":224,"col":43,"offset":7010},"end":{"line":224,"col":44,"offset":7011},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c40247b148a42d7c461bcfbdb9af5c6bc13ca48d179539ee7a9c0c1d7ecb4fd32d99836fa2aae6f608945461feee2f31e84955b62d96851ae900ee703d33ffd5_0","lines":"                          res_size = l1 + 1 + l2 + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":225,"col":27,"offset":7048},"end":{"line":225,"col":67,"offset":7088},"extra":{"metavars":{"$RET":{"start":{"line":225,"col":27,"offset":7048},"end":{"line":225,"col":34,"offset":7055},"abstract_content":"res_ptr"},"$CAST":{"start":{"line":225,"col":38,"offset":7059},"end":{"line":225,"col":44,"offset":7065},"abstract_content":"char*"},"$FUN":{"start":{"line":225,"col":46,"offset":7067},"end":{"line":225,"col":52,"offset":7073},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"59771c1e655e0b1a486d76be9d36c373d384f2a4b76dc4332122de0554585d72c34f5d3836ca655a1fdbd9f79acc69771c47e2c534ac1f94839961f10626f3f6_0","lines":"                          res_ptr = (char *) malloc (res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":225,"col":46,"offset":7067},"end":{"line":225,"col":67,"offset":7088},"extra":{"metavars":{"$FUN":{"start":{"line":225,"col":46,"offset":7067},"end":{"line":225,"col":52,"offset":7073},"abstract_content":"malloc"},"$X":{"start":{"line":225,"col":54,"offset":7075},"end":{"line":225,"col":62,"offset":7083},"abstract_content":"res_size","propagated_value":{"svalue_start":{"line":224,"col":38,"offset":7005},"svalue_end":{"line":224,"col":53,"offset":7020},"svalue_abstract_content":"l1+1+l2+1"}},"$Y":{"start":{"line":225,"col":65,"offset":7086},"end":{"line":225,"col":66,"offset":7087},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1ff3fbacb7403287431889cb34cabc6865899b45202e5bd72cb0c15780665c93a61ce848ab0a0c40a6b497ed4284fd32eed7cfd4087a4e8802d1aa53bca9f409_0","lines":"                          res_ptr = (char *) malloc (res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":225,"col":46,"offset":7067},"end":{"line":225,"col":67,"offset":7088},"extra":{"metavars":{"$FUN":{"start":{"line":225,"col":46,"offset":7067},"end":{"line":225,"col":52,"offset":7073},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7e214489a5f3dff90b8054baeaf8ca4a29250675b82b185f4c8a7f64d5c58bc8850d738b527f84df058e66bad7470d89199dc565df57ddd784a785f7024a791b_1","lines":"                          res_ptr = (char *) malloc (res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":230,"col":27,"offset":7250},"end":{"line":230,"col":77,"offset":7300},"extra":{"metavars":{"$RET":{"start":{"line":230,"col":27,"offset":7250},"end":{"line":230,"col":34,"offset":7257},"abstract_content":"res_ptr"},"$CAST":{"start":{"line":230,"col":38,"offset":7261},"end":{"line":230,"col":44,"offset":7267},"abstract_content":"char*"},"$FUN":{"start":{"line":230,"col":46,"offset":7269},"end":{"line":230,"col":53,"offset":7276},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ee4ee647848f88f076d180f4fe60d76ab61d0091575a4cf42bcdd1b3c98e6ce9313e2bbf3db32524d0cc5294f406e90d9d34b5427d7e9843941a965f4df95770_0","lines":"                          res_ptr = (char *) realloc (res_ptr, res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":230,"col":46,"offset":7269},"end":{"line":230,"col":77,"offset":7300},"extra":{"metavars":{"$FUN":{"start":{"line":230,"col":46,"offset":7269},"end":{"line":230,"col":53,"offset":7276},"abstract_content":"realloc"},"$ARG1":{"start":{"line":230,"col":55,"offset":7278},"end":{"line":230,"col":62,"offset":7285},"abstract_content":"res_ptr"},"$X":{"start":{"line":230,"col":64,"offset":7287},"end":{"line":230,"col":72,"offset":7295},"abstract_content":"res_size"},"$Y":{"start":{"line":230,"col":75,"offset":7298},"end":{"line":230,"col":76,"offset":7299},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb4b1e2875c810c2cac85d70812e04709885eebf918cd99d0ec63b6b1617d6728411ae31c47bc8eddad8c1137353504d5dadbd399b0f0c57fb32c9c93d75e1a2_0","lines":"                          res_ptr = (char *) realloc (res_ptr, res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":230,"col":46,"offset":7269},"end":{"line":230,"col":77,"offset":7300},"extra":{"metavars":{"$FUN":{"start":{"line":230,"col":46,"offset":7269},"end":{"line":230,"col":53,"offset":7276},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"04d2b6a1742e35dc81134085fb20f0ec41353026638c64af4524a727fbb6f1e646eaba3ef967fd4534fd9f7da2ab62e29f1114f6ed0e45c0584f705b85d23a91_0","lines":"                          res_ptr = (char *) realloc (res_ptr, res_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":235,"col":27,"offset":7470},"end":{"line":235,"col":39,"offset":7482},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":235,"col":27,"offset":7470},"end":{"line":235,"col":35,"offset":7478},"abstract_content":"res_size"},"$SIGNED":{"start":{"line":235,"col":38,"offset":7481},"end":{"line":235,"col":39,"offset":7482},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0f724a58ebfb97a4fd4548a5ad7c890db81fd849f1e824bf2800779906fcb93382af82de80907cb5b1809012eb35365ab86feae08f486fa5b26dbcf31a0f8f02_1","lines":"                          res_size = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":236,"col":27,"offset":7510},"end":{"line":236,"col":46,"offset":7529},"extra":{"metavars":{"$PTR":{"start":{"line":236,"col":33,"offset":7516},"end":{"line":236,"col":44,"offset":7527},"abstract_content":"old_res_ptr","propagated_value":{"svalue_start":{"line":221,"col":37,"offset":6892},"svalue_end":{"line":221,"col":44,"offset":6899},"svalue_abstract_content":"res_ptr"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"35c08fd2ac42b23a1846ddb2f45513e2f49a054c9314de0d7c795ee50809eeb1f812b2a37bbfa0b09626f29eccc21b8a7a1b4d2abc4191440073ef693ce657d5_0","lines":"                          free (old_res_ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":239,"col":23,"offset":7611},"end":{"line":239,"col":78,"offset":7666},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ae80bb49b1aa76d44aac23f27b5931f135a857684009e7bd443bb6e51452a22de3ac62d9c37c522d9b1e0b35f5ff45ca98421e598841bfc2443614b0ee5386f8_0","lines":"                      strcpy (res_ptr + res_size - (l2 + 1) - (l1 + 1), buf1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":239,"col":23,"offset":7611},"end":{"line":239,"col":78,"offset":7666},"extra":{"metavars":{"$FUN":{"start":{"line":239,"col":23,"offset":7611},"end":{"line":239,"col":29,"offset":7617},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ca235a6db8b6dd2093779ebd0a49fa421f680ebd1f766ca9cc248af537268b4e7443dd0e59de44107b82cc9f4086ef4d7ecdfac4e7e4f5d94a5d446a5396639_0","lines":"                      strcpy (res_ptr + res_size - (l2 + 1) - (l1 + 1), buf1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":240,"col":23,"offset":7690},"end":{"line":240,"col":67,"offset":7734},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ae80bb49b1aa76d44aac23f27b5931f135a857684009e7bd443bb6e51452a22de3ac62d9c37c522d9b1e0b35f5ff45ca98421e598841bfc2443614b0ee5386f8_1","lines":"                      strcpy (res_ptr + res_size - (l2 + 1), buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":240,"col":23,"offset":7690},"end":{"line":240,"col":67,"offset":7734},"extra":{"metavars":{"$FUN":{"start":{"line":240,"col":23,"offset":7690},"end":{"line":240,"col":29,"offset":7696},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ca235a6db8b6dd2093779ebd0a49fa421f680ebd1f766ca9cc248af537268b4e7443dd0e59de44107b82cc9f4086ef4d7ecdfac4e7e4f5d94a5d446a5396639_1","lines":"                      strcpy (res_ptr + res_size - (l2 + 1), buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":253,"col":11,"offset":8053},"end":{"line":253,"col":28,"offset":8070},"extra":{"metavars":{"$PTR":{"start":{"line":253,"col":17,"offset":8059},"end":{"line":253,"col":26,"offset":8068},"abstract_content":"file_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b96a3551f298796cfa9c731c72c1e35d61053817829efe165c9999f7bd2ef5e6d784f63f003449478be0e1b951f9044468834c8be962126984bea84507f48576_0","lines":"          free (file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":414,"col":16,"offset":14011},"end":{"line":414,"col":33,"offset":14028},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":414,"col":16,"offset":14011},"end":{"line":414,"col":22,"offset":14017},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_1","lines":"      locale = getenv (\"LC_ALL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":417,"col":20,"offset":14106},"end":{"line":417,"col":39,"offset":14125},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":417,"col":20,"offset":14106},"end":{"line":417,"col":26,"offset":14112},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_2","lines":"          locale = getenv (\"LC_CTYPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":419,"col":22,"offset":14199},"end":{"line":419,"col":37,"offset":14214},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":419,"col":22,"offset":14199},"end":{"line":419,"col":28,"offset":14205},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_3","lines":"            locale = getenv (\"LANG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":436,"col":19,"offset":14734},"end":{"line":436,"col":33,"offset":14748},"extra":{"metavars":{"$PTR1":{"start":{"line":436,"col":19,"offset":14734},"end":{"line":436,"col":27,"offset":14742},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":433,"col":26,"offset":14633},"svalue_end":{"line":433,"col":43,"offset":14650},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":436,"col":30,"offset":14745},"end":{"line":436,"col":33,"offset":14748},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_0","lines":"              if (modifier - dot < sizeof (buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":438,"col":19,"offset":14801},"end":{"line":438,"col":52,"offset":14834},"extra":{"metavars":{"$FUN":{"start":{"line":438,"col":19,"offset":14801},"end":{"line":438,"col":25,"offset":14807},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9e2dd7bcbd55f3b2650d1c4dc45727e6e29e7a847e99a4cb45c64f7657ffab3b3a4347944c9079489ae3b58690efc30298ff5700e260a4c2721c8277777638c_2","lines":"                  memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":438,"col":19,"offset":14801},"end":{"line":438,"col":52,"offset":14834},"extra":{"metavars":{"$TYPE":{"start":{"line":412,"col":14,"offset":13973},"end":{"line":412,"col":18,"offset":13977},"abstract_content":"char"},"$LEN":{"start":{"line":412,"col":23,"offset":13982},"end":{"line":412,"col":33,"offset":13992},"abstract_content":"2+10+1"},"$FUN":{"start":{"line":438,"col":19,"offset":14801},"end":{"line":438,"col":25,"offset":14807},"abstract_content":"memcpy"},"$BUF":{"start":{"line":438,"col":27,"offset":14809},"end":{"line":438,"col":30,"offset":14812},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"08ef5dc635f7381fafeddf53061992a7bab1dabfb25b39d7f8ad8f6398c811918fc3b33f559c0d55cfea65ccdd2aa9ba1532f8b336746e0d3aa010f26a226a68_0","lines":"                  memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":438,"col":37,"offset":14819},"end":{"line":438,"col":51,"offset":14833},"extra":{"metavars":{"$PTR1":{"start":{"line":438,"col":37,"offset":14819},"end":{"line":438,"col":45,"offset":14827},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":433,"col":26,"offset":14633},"svalue_end":{"line":433,"col":43,"offset":14650},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":438,"col":48,"offset":14830},"end":{"line":438,"col":51,"offset":14833},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_1","lines":"                  memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":439,"col":24,"offset":14859},"end":{"line":439,"col":38,"offset":14873},"extra":{"metavars":{"$PTR1":{"start":{"line":439,"col":24,"offset":14859},"end":{"line":439,"col":32,"offset":14867},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":433,"col":26,"offset":14633},"svalue_end":{"line":433,"col":43,"offset":14650},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":439,"col":35,"offset":14870},"end":{"line":439,"col":38,"offset":14873},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_2","lines":"                  buf [modifier - dot] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":440,"col":19,"offset":14901},"end":{"line":440,"col":30,"offset":14912},"extra":{"metavars":{"$TYPE":{"start":{"line":412,"col":14,"offset":13973},"end":{"line":412,"col":18,"offset":13977},"abstract_content":"char"},"$LEN":{"start":{"line":412,"col":23,"offset":13982},"end":{"line":412,"col":33,"offset":13992},"abstract_content":"2+10+1"},"$PTR":{"start":{"line":440,"col":26,"offset":14908},"end":{"line":440,"col":29,"offset":14911},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5a98f32ba0493c8cd8dcd018fc512565a82ff48758e7d5815e15fcce4ee6a48033db1397592e543da327c0867aa880f562748da0d60acd8507c8651940d255a4_0","lines":"                  return buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":456,"col":7,"offset":15681},"end":{"line":456,"col":39,"offset":15713},"extra":{"metavars":{"$FUN":{"start":{"line":456,"col":7,"offset":15681},"end":{"line":456,"col":14,"offset":15688},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d17035162f65c0a0e3d8e09006e949233db411f5b922f2228cff27ca5d3f052129e633d3b963d3f178fcc93851b11690200e6f88680baabca08f9aa5f09d076d_0","lines":"      sprintf (buf, \"CP%u\", GetACP ());","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":471,"col":12,"offset":16128},"end":{"line":471,"col":38,"offset":16154},"extra":{"metavars":{"$FUN":{"start":{"line":471,"col":12,"offset":16128},"end":{"line":471,"col":21,"offset":16137},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"93b968df727a49301f6e0f4fedb7b3febd2fa3805866f0bd341eeddb52bf6e613bdbfd7bd5d83d2e73a16fb3582170076e688d80d0c98756857f3e8350c2abde_0","lines":"  locale = setlocale (LC_CTYPE, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":475,"col":16,"offset":16229},"end":{"line":475,"col":33,"offset":16246},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":475,"col":16,"offset":16229},"end":{"line":475,"col":22,"offset":16235},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_4","lines":"      locale = getenv (\"LC_ALL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":478,"col":20,"offset":16324},"end":{"line":478,"col":39,"offset":16343},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":478,"col":20,"offset":16324},"end":{"line":478,"col":26,"offset":16330},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_5","lines":"          locale = getenv (\"LC_CTYPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":480,"col":22,"offset":16417},"end":{"line":480,"col":37,"offset":16432},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":480,"col":22,"offset":16417},"end":{"line":480,"col":28,"offset":16423},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_6","lines":"            locale = getenv (\"LANG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":500,"col":26,"offset":17047},"end":{"line":500,"col":50,"offset":17071},"extra":{"metavars":{"$FUN":{"start":{"line":500,"col":26,"offset":17047},"end":{"line":500,"col":35,"offset":17056},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"93b968df727a49301f6e0f4fedb7b3febd2fa3805866f0bd341eeddb52bf6e613bdbfd7bd5d83d2e73a16fb3582170076e688d80d0c98756857f3e8350c2abde_1","lines":"  char *current_locale = setlocale (LC_ALL, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":507,"col":22,"offset":17348},"end":{"line":507,"col":48,"offset":17374},"extra":{"metavars":{"$FUN":{"start":{"line":507,"col":22,"offset":17348},"end":{"line":507,"col":31,"offset":17357},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"93b968df727a49301f6e0f4fedb7b3febd2fa3805866f0bd341eeddb52bf6e613bdbfd7bd5d83d2e73a16fb3582170076e688d80d0c98756857f3e8350c2abde_2","lines":"    current_locale = setlocale (LC_CTYPE, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":511,"col":5,"offset":17478},"end":{"line":511,"col":36,"offset":17509},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"\"CP%s\""},"$BUF":{"start":{"line":511,"col":14,"offset":17487},"end":{"line":511,"col":17,"offset":17490},"abstract_content":"buf"},"$FMT":{"start":{"line":511,"col":19,"offset":17492},"end":{"line":511,"col":25,"offset":17498},"abstract_content":"\"CP%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"da2078cab79094b8189873858b2e319732568cf789031a6b4fb94f7be8e4bd587e0413dc6c60e530fcbf1df9bb1b6555dff1b3c9401c368aba66ae7692ac19d5_0","lines":"    sprintf (buf, \"CP%s\", pdot + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":511,"col":5,"offset":17478},"end":{"line":511,"col":36,"offset":17509},"extra":{"metavars":{"$FUN":{"start":{"line":511,"col":5,"offset":17478},"end":{"line":511,"col":12,"offset":17485},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d17035162f65c0a0e3d8e09006e949233db411f5b922f2228cff27ca5d3f052129e633d3b963d3f178fcc93851b11690200e6f88680baabca08f9aa5f09d076d_1","lines":"    sprintf (buf, \"CP%s\", pdot + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":511,"col":5,"offset":17478},"end":{"line":511,"col":36,"offset":17509},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":7,"offset":6},"abstract_content":"\"CP%s\""},"$TYPE":{"start":{"line":493,"col":10,"offset":16710},"end":{"line":493,"col":14,"offset":16714},"abstract_content":"char"},"$LEN":{"start":{"line":493,"col":19,"offset":16719},"end":{"line":493,"col":29,"offset":16729},"abstract_content":"2+10+1"},"$FUN":{"start":{"line":511,"col":5,"offset":17478},"end":{"line":511,"col":12,"offset":17485},"abstract_content":"sprintf"},"$BUF":{"start":{"line":511,"col":14,"offset":17487},"end":{"line":511,"col":17,"offset":17490},"abstract_content":"buf"},"$FMT":{"start":{"line":511,"col":19,"offset":17492},"end":{"line":511,"col":25,"offset":17498},"abstract_content":"\"CP%s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1f7f2db727de6cf756ace807a44e180391529ade5466e89aab13c364ccbb7548f0eac3ce34fa5a2da5e160d35ed226b91a6becbb318b226218e6290de479e239_0","lines":"    sprintf (buf, \"CP%s\", pdot + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":521,"col":7,"offset":17968},"end":{"line":521,"col":39,"offset":18000},"extra":{"metavars":{"$FUN":{"start":{"line":521,"col":7,"offset":17968},"end":{"line":521,"col":14,"offset":17975},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d17035162f65c0a0e3d8e09006e949233db411f5b922f2228cff27ca5d3f052129e633d3b963d3f178fcc93851b11690200e6f88680baabca08f9aa5f09d076d_2","lines":"      sprintf (buf, \"CP%u\", GetACP ());","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":536,"col":12,"offset":18287},"end":{"line":536,"col":29,"offset":18304},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":536,"col":12,"offset":18287},"end":{"line":536,"col":18,"offset":18293},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_7","lines":"  locale = getenv (\"LC_ALL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":539,"col":16,"offset":18370},"end":{"line":539,"col":35,"offset":18389},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":539,"col":16,"offset":18370},"end":{"line":539,"col":22,"offset":18376},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_8","lines":"      locale = getenv (\"LC_CTYPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":541,"col":18,"offset":18455},"end":{"line":541,"col":33,"offset":18470},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":541,"col":18,"offset":18455},"end":{"line":541,"col":24,"offset":18461},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"520e8583033f70dccf817f623855c4d10e5449395a155f3d502747e8df149a06fd90e9fa40dc4fd892b097fa04b4a8627a6f909e08ac420c230e60bb4724d4bc_9","lines":"        locale = getenv (\"LANG\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":557,"col":15,"offset":18921},"end":{"line":557,"col":29,"offset":18935},"extra":{"metavars":{"$PTR1":{"start":{"line":557,"col":15,"offset":18921},"end":{"line":557,"col":23,"offset":18929},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":554,"col":22,"offset":18832},"svalue_end":{"line":554,"col":39,"offset":18849},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":557,"col":26,"offset":18932},"end":{"line":557,"col":29,"offset":18935},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_3","lines":"          if (modifier - dot < sizeof (buf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":559,"col":15,"offset":18980},"end":{"line":559,"col":48,"offset":19013},"extra":{"metavars":{"$FUN":{"start":{"line":559,"col":15,"offset":18980},"end":{"line":559,"col":21,"offset":18986},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9e2dd7bcbd55f3b2650d1c4dc45727e6e29e7a847e99a4cb45c64f7657ffab3b3a4347944c9079489ae3b58690efc30298ff5700e260a4c2721c8277777638c_3","lines":"              memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":559,"col":15,"offset":18980},"end":{"line":559,"col":48,"offset":19013},"extra":{"metavars":{"$TYPE":{"start":{"line":528,"col":10,"offset":18076},"end":{"line":528,"col":14,"offset":18080},"abstract_content":"char"},"$LEN":{"start":{"line":528,"col":19,"offset":18085},"end":{"line":528,"col":29,"offset":18095},"abstract_content":"2+10+1"},"$FUN":{"start":{"line":559,"col":15,"offset":18980},"end":{"line":559,"col":21,"offset":18986},"abstract_content":"memcpy"},"$BUF":{"start":{"line":559,"col":23,"offset":18988},"end":{"line":559,"col":26,"offset":18991},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"08ef5dc635f7381fafeddf53061992a7bab1dabfb25b39d7f8ad8f6398c811918fc3b33f559c0d55cfea65ccdd2aa9ba1532f8b336746e0d3aa010f26a226a68_1","lines":"              memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":559,"col":33,"offset":18998},"end":{"line":559,"col":47,"offset":19012},"extra":{"metavars":{"$PTR1":{"start":{"line":559,"col":33,"offset":18998},"end":{"line":559,"col":41,"offset":19006},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":554,"col":22,"offset":18832},"svalue_end":{"line":554,"col":39,"offset":18849},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":559,"col":44,"offset":19009},"end":{"line":559,"col":47,"offset":19012},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_4","lines":"              memcpy (buf, dot, modifier - dot);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":560,"col":20,"offset":19034},"end":{"line":560,"col":34,"offset":19048},"extra":{"metavars":{"$PTR1":{"start":{"line":560,"col":20,"offset":19034},"end":{"line":560,"col":28,"offset":19042},"abstract_content":"modifier","propagated_value":{"svalue_start":{"line":554,"col":22,"offset":18832},"svalue_end":{"line":554,"col":39,"offset":18849},"svalue_abstract_content":"strchr(dot'@')"}},"$PTR2":{"start":{"line":560,"col":31,"offset":19045},"end":{"line":560,"col":34,"offset":19048},"abstract_content":"dot"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc097a7180a2fa91175c62b533b83b3462eeb10912961346d5b5de661925a1d22ba09af6c5161641274d7ce4af29d248d18b72f4140e8a10d1b6b043c8c8c33e_5","lines":"              buf [modifier - dot] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":561,"col":15,"offset":19072},"end":{"line":561,"col":26,"offset":19083},"extra":{"metavars":{"$TYPE":{"start":{"line":528,"col":10,"offset":18076},"end":{"line":528,"col":14,"offset":18080},"abstract_content":"char"},"$LEN":{"start":{"line":528,"col":19,"offset":18085},"end":{"line":528,"col":29,"offset":18095},"abstract_content":"2+10+1"},"$PTR":{"start":{"line":561,"col":22,"offset":19079},"end":{"line":561,"col":25,"offset":19082},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5a98f32ba0493c8cd8dcd018fc512565a82ff48758e7d5815e15fcce4ee6a48033db1397592e543da327c0867aa880f562748da0d60acd8507c8651940d255a4_1","lines":"              return buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":577,"col":11,"offset":19484},"end":{"line":577,"col":39,"offset":19512},"extra":{"metavars":{"$FUN":{"start":{"line":577,"col":11,"offset":19484},"end":{"line":577,"col":18,"offset":19491},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d17035162f65c0a0e3d8e09006e949233db411f5b922f2228cff27ca5d3f052129e633d3b963d3f178fcc93851b11690200e6f88680baabca08f9aa5f09d076d_3","lines":"          sprintf (buf, \"CP%u\", cp[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":608,"col":55,"offset":20451},"end":{"line":608,"col":71,"offset":20467},"extra":{"metavars":{"$FUN":{"start":{"line":608,"col":55,"offset":20451},"end":{"line":608,"col":64,"offset":20460},"abstract_content":"uselocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"16c394e3548d17239f3411b2b71d972eace931ca551ae051a05a8d0cfbd12357a79c16db183d33ccc3e23689e26dd5409190b234b4e2e35cb800cbea5baeadd5_0","lines":"  if (strcmp (codeset, \"UTF-8\") == 0 && MB_CUR_MAX_L (uselocale (NULL)) <= 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":612,"col":3,"offset":20508},"end":{"line":612,"col":18,"offset":20523},"extra":{"metavars":{"$TYPE":{"start":{"line":493,"col":10,"offset":16710},"end":{"line":493,"col":14,"offset":16714},"abstract_content":"char"},"$ARR":{"start":{"line":493,"col":15,"offset":16715},"end":{"line":493,"col":18,"offset":16718},"abstract_content":"buf"},"$LEN":{"start":{"line":493,"col":19,"offset":16719},"end":{"line":493,"col":29,"offset":16729},"abstract_content":"2+10+1"},"$PTR":{"start":{"line":612,"col":10,"offset":20515},"end":{"line":612,"col":17,"offset":20522},"abstract_content":"codeset"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"098f574f89ad64ee0a4cd70f3fd33ad6a1f521757d9fe34635b6aa3241619ed9009f88470278830debd677c88cad8cfd3eae4b0917a850c0498bb75a70acafd9_0","lines":"  return codeset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lseek.c","start":{"line":54,"col":7,"offset":1564},"end":{"line":54,"col":27,"offset":1584},"extra":{"metavars":{"$FUN":{"start":{"line":54,"col":7,"offset":1564},"end":{"line":54,"col":12,"offset":1569},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f16da6d03123ad2bff207b7d4b802b728f4180ca5769dab41c9fedebe36443e6623df350280889c15a65eedc740a5a0cec83ede7efa474b1baf5382777736e34_0","lines":"  if (fstat (fd, &statbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","start":{"line":41,"col":10,"offset":1481},"end":{"line":41,"col":31,"offset":1502},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"d359147cff1b4797c514d1528fd8b7f01ffd5a8cad0234f1917f643810bbd437fd1151005b9f2facdd162fd381eca317e0098d62b4addfefe7975c9ab8ce16ae_0","lines":"  return lstat (filename, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","start":{"line":41,"col":10,"offset":1481},"end":{"line":41,"col":31,"offset":1502},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":10,"offset":1481},"end":{"line":41,"col":15,"offset":1486},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da770dd8f40b185abeb817c7b0daf62f6fb53ca69a7e8f0d2ec1999f31828f9a0f390c6311eaeceeaadc517fedf4058d3698b238fc429b4573d9e7ee66635fed_0","lines":"  return lstat (filename, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","start":{"line":70,"col":22,"offset":2555},"end":{"line":70,"col":45,"offset":2578},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":22,"offset":2555},"end":{"line":70,"col":32,"offset":2565},"abstract_content":"orig_lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f6369b10c08d2044d63609e0737cce369c32ca449ff756ae381fb3d97e4793803ef7433d7d8a05115d9f73fd1d38ddbe447bfc14e74ecbeffa0f5870587a73e_0","lines":"  int lstat_result = orig_lstat (file, sbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","start":{"line":94,"col":10,"offset":3470},"end":{"line":94,"col":27,"offset":3487},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"d359147cff1b4797c514d1528fd8b7f01ffd5a8cad0234f1917f643810bbd437fd1151005b9f2facdd162fd381eca317e0098d62b4addfefe7975c9ab8ce16ae_1","lines":"  return stat (file, sbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","start":{"line":94,"col":10,"offset":3470},"end":{"line":94,"col":27,"offset":3487},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":10,"offset":3470},"end":{"line":94,"col":14,"offset":3474},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7899a9482b7899478043be312904b54828b82619bd167132977cc670091710d829420b86fde215c1ae0924539d1c0e2a1dedc907ed2887039e1215673c315af7_0","lines":"  return stat (file, sbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloc.c","start":{"line":45,"col":5,"offset":1367},"end":{"line":45,"col":10,"offset":1372},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":45,"col":5,"offset":1367},"end":{"line":45,"col":6,"offset":1368},"abstract_content":"n"},"$SIGNED":{"start":{"line":45,"col":9,"offset":1371},"end":{"line":45,"col":10,"offset":1372},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b91040ee94b53a19c63683a5e00ffcfaedd501acf9b24a6fafbdc33a2aa94d329911469295cd7409bb5bd9f9813ff4cdd9a32f0b3e76ac9ab534f990ef9d02a6_0","lines":"    n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloc.c","start":{"line":48,"col":12,"offset":1393},"end":{"line":48,"col":22,"offset":1403},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":12,"offset":1393},"end":{"line":48,"col":18,"offset":1399},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9a719cbb8ed05efaff10dc29a1b290748711ce489e87c271874374d558e1a217321964838153e4798b1680b31fa4c4bb650f9c457a02b89b5cb0648b1119bfd5_0","lines":"  result = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":63,"col":1,"offset":2483},"end":{"line":63,"col":47,"offset":2529},"extra":{"metavars":{"$EXPR1":{"start":{"line":63,"col":9,"offset":2491},"end":{"line":63,"col":20,"offset":2502},"abstract_content":"HEADER_SIZE"},"$EXPR2":{"start":{"line":63,"col":24,"offset":2506},"end":{"line":63,"col":45,"offset":2527},"abstract_content":"sizeof(union header)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4fe82cdcc6853d50a68cdc8205f2e69624ff090bbe7bb23149321a707a1743194baeb4f012063ae9ce813e94d03a303a113df13916f2ceb07ed70d77f282e4db_0","lines":"verify (HEADER_SIZE == sizeof (union header));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":83,"col":17,"offset":3176},"end":{"line":83,"col":31,"offset":3190},"extra":{"metavars":{"$X":{"start":{"line":79,"col":18,"offset":3118},"end":{"line":79,"col":19,"offset":3119},"abstract_content":"n"},"$Y":{"start":{"line":79,"col":22,"offset":3122},"end":{"line":79,"col":33,"offset":3133},"abstract_content":"HEADER_SIZE"},"$FUN":{"start":{"line":83,"col":17,"offset":3176},"end":{"line":83,"col":23,"offset":3182},"abstract_content":"malloc"},"$N":{"start":{"line":83,"col":25,"offset":3184},"end":{"line":83,"col":30,"offset":3189},"abstract_content":"nplus","propagated_value":{"svalue_start":{"line":79,"col":18,"offset":3118},"svalue_end":{"line":79,"col":33,"offset":3133},"svalue_abstract_content":"n+HEADER_SIZE"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9f536b9de856022bd21373a160e50dcfb2318ac7bfb9b39764ff561dce3558e8d25ec687a435bc54b5a48a7a16ae5f6e4dba13a0572d948b69dc435f1f034836_0","lines":"      void *p = malloc (nplus);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":83,"col":17,"offset":3176},"end":{"line":83,"col":31,"offset":3190},"extra":{"metavars":{"$FUN":{"start":{"line":83,"col":17,"offset":3176},"end":{"line":83,"col":23,"offset":3182},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b259cce1e949961595dc8cef0948e3030ac4ebfc3e54a7fdebcd1aa2e139a8387fdbe48630023dac6776940e86e5180715d08161b3edbff8fad39006be0c3327_0","lines":"      void *p = malloc (nplus);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":96,"col":11,"offset":3459},"end":{"line":96,"col":49,"offset":3497},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":96,"col":11,"offset":3459},"end":{"line":96,"col":15,"offset":3463},"abstract_content":"slot"},"$SIGNED":{"start":{"line":96,"col":34,"offset":3482},"end":{"line":96,"col":49,"offset":3497},"abstract_content":"HASH_TABLE_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0c41c729b4b39597a4b117f9e82e3160387b00cea8ef305987f7393e5a3bc0c0c10b0832a011148023894526bd4dd9dac679b4b8f5e8f8356ed3955c6797710e_0","lines":"          slot = (uintptr_t) p % HASH_TABLE_SIZE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":108,"col":5,"offset":3707},"end":{"line":108,"col":10,"offset":3712},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":108,"col":5,"offset":3707},"end":{"line":108,"col":6,"offset":3708},"abstract_content":"n"},"$SIGNED":{"start":{"line":108,"col":9,"offset":3711},"end":{"line":108,"col":10,"offset":3712},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"77be761854a38cf4f5c9b744a8ee67d1120f1adf462fdd0025317f34d5df5624452d0b729d2e1c647d42bd5a1e5c7cad9df83caf86140199e775cb545877c5da_0","lines":"    n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":110,"col":10,"offset":3731},"end":{"line":110,"col":20,"offset":3741},"extra":{"metavars":{"$FUN":{"start":{"line":110,"col":10,"offset":3731},"end":{"line":110,"col":16,"offset":3737},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b259cce1e949961595dc8cef0948e3030ac4ebfc3e54a7fdebcd1aa2e139a8387fdbe48630023dac6776940e86e5180715d08161b3edbff8fad39006be0c3327_1","lines":"  return malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":129,"col":18,"offset":4352},"end":{"line":129,"col":56,"offset":4390},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":129,"col":18,"offset":4352},"end":{"line":129,"col":22,"offset":4356},"abstract_content":"slot"},"$SIGNED":{"start":{"line":129,"col":41,"offset":4375},"end":{"line":129,"col":56,"offset":4390},"abstract_content":"HASH_TABLE_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0c41c729b4b39597a4b117f9e82e3160387b00cea8ef305987f7393e5a3bc0c0c10b0832a011148023894526bd4dd9dac679b4b8f5e8f8356ed3955c6797710e_1","lines":"          size_t slot = (uintptr_t) p % HASH_TABLE_SIZE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","start":{"line":139,"col":19,"offset":4762},"end":{"line":139,"col":34,"offset":4777},"extra":{"metavars":{"$PTR":{"start":{"line":139,"col":25,"offset":4768},"end":{"line":139,"col":32,"offset":4775},"abstract_content":"p_begin","propagated_value":{"svalue_start":{"line":137,"col":43,"offset":4695},"svalue_end":{"line":137,"col":48,"offset":4700},"svalue_abstract_content":"h-1"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"087b6bf61920c542a53e56756f39acb031f938f8fb8cc57c10ac2eb1db4673a440a7f1ca44d3050faecf31ccbf35b20cc716d517db5166b9e36fdfa040b032cd_0","lines":"                  free (p_begin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":44,"col":1,"offset":1226},"end":{"line":44,"col":8,"offset":1233},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":1,"offset":1226},"end":{"line":44,"col":8,"offset":1233},"abstract_content":"mbrtowc"},"$SIGNED":{"start":{"line":56,"col":21,"offset":1430},"end":{"line":56,"col":23,"offset":1432},"abstract_content":"-2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e98fddb9997ac523160bf6ffcc123fae72325baa562bbccf1df5c5106dabb124f65dc54517e0410b41cc84d446955461ac8db67c11423f21e3ce4fa917957521_0","lines":"mbrtowc (wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":52,"col":7,"offset":1382},"end":{"line":52,"col":12,"offset":1387},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":52,"col":7,"offset":1382},"end":{"line":52,"col":8,"offset":1383},"abstract_content":"n"},"$SIGNED":{"start":{"line":52,"col":11,"offset":1386},"end":{"line":52,"col":12,"offset":1387},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2c961b2618483bd245fbbe63a253591e7775cd0075cc4acc4874ad136a8eb0c90680867f95d5db9ad59922c793f290d0611891e70db48b8efda96ad375fd5f3c_0","lines":"      n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":64,"col":12,"offset":1525},"end":{"line":64,"col":30,"offset":1543},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":64,"col":12,"offset":1525},"end":{"line":64,"col":18,"offset":1531},"abstract_content":"nstate"},"$SIGNED":{"start":{"line":64,"col":28,"offset":1541},"end":{"line":64,"col":29,"offset":1542},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"39edd333d6139fee15afef03089489ce9364a7dd7db99fe269446d8937aa32426c02ecfbea4349c0d63387c00f7d5ad6eae30befe81d7442b5060f6284e0bf45_0","lines":"    size_t nstate = pstate[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":69,"col":13,"offset":1608},"end":{"line":69,"col":19,"offset":1614},"extra":{"metavars":{"$VAR":{"start":{"line":69,"col":13,"offset":1608},"end":{"line":69,"col":19,"offset":1614},"abstract_content":"nstate","propagated_value":{"svalue_start":{"line":64,"col":21,"offset":1534},"svalue_end":{"line":64,"col":30,"offset":1543},"svalue_abstract_content":"pstate[0]"}},"$VAL2":{"start":{"line":71,"col":12,"offset":1635},"end":{"line":71,"col":13,"offset":1636},"abstract_content":"0"},"$VAL1":{"start":{"line":75,"col":12,"offset":1694},"end":{"line":75,"col":13,"offset":1695},"abstract_content":"3"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9dbec326b546fa122ee11383f3b505f35d1215b97bebd7817dd5c38aa137f774cbefc3528194f0bf7e35123bfea5ee257c192477df3e792a6ee266a0ca3fe372_0","lines":"    switch (nstate)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":105,"col":11,"offset":2350},"end":{"line":105,"col":35,"offset":2374},"extra":{"metavars":{"$SIGNED":{"start":{"line":105,"col":11,"offset":2350},"end":{"line":105,"col":14,"offset":2353},"abstract_content":"res"},"$UNSIGNED":{"start":{"line":105,"col":33,"offset":2372},"end":{"line":105,"col":34,"offset":2373},"abstract_content":"m"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a1d051d9d69418439de00b4762bfbcdd18a6153e46be901a41a7efa58ab551aa658ad34cc9d6febfdd8663c1a0c8439b8cbf2adbecd784c52899c22b090a6a3d_0","lines":"      int res = mbtowc (pwc, p, m);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":334,"col":1,"offset":9389},"end":{"line":334,"col":12,"offset":9400},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":1,"offset":9389},"end":{"line":334,"col":12,"offset":9400},"abstract_content":"rpl_mbrtowc"},"$SIGNED":{"start":{"line":350,"col":21,"offset":9709},"end":{"line":350,"col":23,"offset":9711},"abstract_content":"-2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7e0256200adaae8797556f100957994e046acf9dae65184d76ca7cd56259a652b10819dd5d697513bf5ced4f6ed066cea67f4c11ede1335a89f09e72744b19d2_0","lines":"rpl_mbrtowc (wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":344,"col":7,"offset":9624},"end":{"line":344,"col":12,"offset":9629},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":344,"col":7,"offset":9624},"end":{"line":344,"col":8,"offset":9625},"abstract_content":"n"},"$SIGNED":{"start":{"line":344,"col":11,"offset":9628},"end":{"line":344,"col":12,"offset":9629},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2c961b2618483bd245fbbe63a253591e7775cd0075cc4acc4874ad136a8eb0c90680867f95d5db9ad59922c793f290d0611891e70db48b8efda96ad375fd5f3c_1","lines":"      n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":368,"col":16,"offset":10129},"end":{"line":368,"col":25,"offset":10138},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":368,"col":16,"offset":10129},"end":{"line":368,"col":21,"offset":10134},"abstract_content":"count"},"$SIGNED":{"start":{"line":368,"col":24,"offset":10137},"end":{"line":368,"col":25,"offset":10138},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cd5b8d840c28a27a05e708d0630aa03408efeb5c2ad3c5a4913d8b3dd7ccac6c82d1cdc5ea1420aeb9f55176baa2c45a6199c510aacd2fbb1fe748193cf65602_0","lines":"        size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":371,"col":13,"offset":10196},"end":{"line":371,"col":42,"offset":10225},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":371,"col":13,"offset":10196},"end":{"line":371,"col":16,"offset":10199},"abstract_content":"ret"},"$SIGNED":{"start":{"line":371,"col":36,"offset":10219},"end":{"line":371,"col":37,"offset":10220},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1ca39ed1fc76216858612f984786ef01521c48aebe67878f9880dd56637f4e0a3bc9edc486651b3e2ddc3321c538856f3e76ab50f4da574cc5d5dc34f8b7ca59_0","lines":"            ret = mbrtowc (&wc, s, 1, ps);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","start":{"line":396,"col":41,"offset":10778},"end":{"line":396,"col":63,"offset":10800},"extra":{"metavars":{"$FUN":{"start":{"line":396,"col":41,"offset":10778},"end":{"line":396,"col":52,"offset":10789},"abstract_content":"hard_locale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"349d29bd278a6da6a253a1ebfa122719f8bc304bfae5b61e128f93e0dd6358f787bb806bbc4964cd4ad21fa8900a0c0128364e35f479d8a6c93bf332e714f903_0","lines":"  if ((size_t) -2 <= ret && n != 0 && ! hard_locale (LC_CTYPE))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":19,"col":1,"offset":799},"end":{"line":19,"col":10,"offset":808},"extra":{"metavars":{"$FUN":{"start":{"line":19,"col":1,"offset":799},"end":{"line":19,"col":10,"offset":808},"abstract_content":"mbsrtowcs"},"$SIGNED":{"start":{"line":120,"col":21,"offset":3664},"end":{"line":120,"col":23,"offset":3666},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fbeefdbb5ea7515260850b33cdc1303b7e0b6fc077ba3944d07dcfaa4b1e02627d6174022a92fbeb786b3eadc0e328d9412ac8d56b887dc8db71e5d563892cc7_0","lines":"mbsrtowcs (wchar_t *dest, const char **srcp, size_t len, mbstate_t *ps)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":38,"col":15,"offset":1273},"end":{"line":38,"col":28,"offset":1286},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":38,"col":15,"offset":1273},"end":{"line":38,"col":24,"offset":1282},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":38,"col":27,"offset":1285},"end":{"line":38,"col":28,"offset":1286},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"be05a84e52595195f38c37e5ada213bd7b1a231d596cd91a76e50cda3dc9053d90ebb2d7ad08740a3ee51c26cf74a55fafd55d0d141820937747b0dad91ef009_0","lines":"              src_avail = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":40,"col":15,"offset":1339},"end":{"line":40,"col":28,"offset":1352},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":40,"col":15,"offset":1339},"end":{"line":40,"col":24,"offset":1348},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":40,"col":27,"offset":1351},"end":{"line":40,"col":28,"offset":1352},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ca79acd1f13a2add9fa0e02664347802bf68d4090e4b1e43fbeef36dac21f47630394f29141ac359b905c865abebd2dace3c15421e91e6f263d84d1caaeea994_0","lines":"              src_avail = 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":42,"col":15,"offset":1405},"end":{"line":42,"col":28,"offset":1418},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":42,"col":15,"offset":1405},"end":{"line":42,"col":24,"offset":1414},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":42,"col":27,"offset":1417},"end":{"line":42,"col":28,"offset":1418},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ae9fca8960fb6115261ae2bb9017720369e06bdc3e907d9f909ebf03b967a4588edafd4714a7de514d04f995ac710cbb3cca9d136b80763591842f7c0905364e_0","lines":"              src_avail = 3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":44,"col":15,"offset":1490},"end":{"line":44,"col":28,"offset":1503},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":44,"col":15,"offset":1490},"end":{"line":44,"col":24,"offset":1499},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":44,"col":27,"offset":1502},"end":{"line":44,"col":28,"offset":1503},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa76008519cbe3b7aba24db8785e3ed762f364f6664bac221f1972665260e1b5fc734357f917855c7f6b8b641e688cab82e9aa2e6200994d7aba509f759dc7ef_0","lines":"              src_avail = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":46,"col":15,"offset":1536},"end":{"line":46,"col":65,"offset":1586},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":46,"col":15,"offset":1536},"end":{"line":46,"col":24,"offset":1545},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":46,"col":27,"offset":1548},"end":{"line":46,"col":28,"offset":1549},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa76008519cbe3b7aba24db8785e3ed762f364f6664bac221f1972665260e1b5fc734357f917855c7f6b8b641e688cab82e9aa2e6200994d7aba509f759dc7ef_1","lines":"              src_avail = 4 + strnlen1 (src + 4, MB_LEN_MAX - 4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":75,"col":16,"offset":2401},"end":{"line":75,"col":30,"offset":2415},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":75,"col":16,"offset":2401},"end":{"line":75,"col":26,"offset":2411},"abstract_content":"totalcount"},"$SIGNED":{"start":{"line":75,"col":29,"offset":2414},"end":{"line":75,"col":30,"offset":2415},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6c81229c16a778079ab60ce58405ec833d09fc44f2071aea960d844ef3b2d770a75ad08a449170ef0fe3621b9f9f427c422666dd740e9f64ce4c5eb2375ad9b6_0","lines":"        size_t totalcount = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":85,"col":15,"offset":2659},"end":{"line":85,"col":28,"offset":2672},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":85,"col":15,"offset":2659},"end":{"line":85,"col":24,"offset":2668},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":85,"col":27,"offset":2671},"end":{"line":85,"col":28,"offset":2672},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"be05a84e52595195f38c37e5ada213bd7b1a231d596cd91a76e50cda3dc9053d90ebb2d7ad08740a3ee51c26cf74a55fafd55d0d141820937747b0dad91ef009_1","lines":"              src_avail = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":87,"col":15,"offset":2725},"end":{"line":87,"col":28,"offset":2738},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":87,"col":15,"offset":2725},"end":{"line":87,"col":24,"offset":2734},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":87,"col":27,"offset":2737},"end":{"line":87,"col":28,"offset":2738},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ca79acd1f13a2add9fa0e02664347802bf68d4090e4b1e43fbeef36dac21f47630394f29141ac359b905c865abebd2dace3c15421e91e6f263d84d1caaeea994_1","lines":"              src_avail = 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":89,"col":15,"offset":2791},"end":{"line":89,"col":28,"offset":2804},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":89,"col":15,"offset":2791},"end":{"line":89,"col":24,"offset":2800},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":89,"col":27,"offset":2803},"end":{"line":89,"col":28,"offset":2804},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ae9fca8960fb6115261ae2bb9017720369e06bdc3e907d9f909ebf03b967a4588edafd4714a7de514d04f995ac710cbb3cca9d136b80763591842f7c0905364e_1","lines":"              src_avail = 3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":91,"col":15,"offset":2876},"end":{"line":91,"col":28,"offset":2889},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":91,"col":15,"offset":2876},"end":{"line":91,"col":24,"offset":2885},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":91,"col":27,"offset":2888},"end":{"line":91,"col":28,"offset":2889},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa76008519cbe3b7aba24db8785e3ed762f364f6664bac221f1972665260e1b5fc734357f917855c7f6b8b641e688cab82e9aa2e6200994d7aba509f759dc7ef_2","lines":"              src_avail = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","start":{"line":93,"col":15,"offset":2922},"end":{"line":93,"col":65,"offset":2972},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":93,"col":15,"offset":2922},"end":{"line":93,"col":24,"offset":2931},"abstract_content":"src_avail"},"$SIGNED":{"start":{"line":93,"col":27,"offset":2934},"end":{"line":93,"col":28,"offset":2935},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa76008519cbe3b7aba24db8785e3ed762f364f6664bac221f1972665260e1b5fc734357f917855c7f6b8b641e688cab82e9aa2e6200994d7aba509f759dc7ef_3","lines":"              src_avail = 4 + strnlen1 (src + 4, MB_LEN_MAX - 4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/memchr.c","start":{"line":103,"col":16,"offset":3042},"end":{"line":103,"col":22,"offset":3048},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":103,"col":16,"offset":3042},"end":{"line":103,"col":17,"offset":3043},"abstract_content":"i"},"$SIGNED":{"start":{"line":103,"col":20,"offset":3046},"end":{"line":103,"col":22,"offset":3048},"abstract_content":"64"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b8148e1bdac5b6298c5092fc572f8677065d4c490507e6666ebc37081c11eacbc9361062f55e071bfd679b84f642248a4ea9d769c9a4dbf14aa33efb50043948_0","lines":"          for (i = 64; i < sizeof (longword) * 8; i *= 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mempcpy.c","start":{"line":27,"col":19,"offset":997},"end":{"line":27,"col":40,"offset":1018},"extra":{"metavars":{"$FUN":{"start":{"line":27,"col":19,"offset":997},"end":{"line":27,"col":25,"offset":1003},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c17774662e3dbefbb6f5754ab3bc49357dcd4277d9b6192c9e083a2ac1499be5a7b49fd5a3a610642c23ce05d0b0cafd141490a5b28e4783ea2f53a3e1a307d9_0","lines":"  return (char *) memcpy (dest, src, n) + n;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/memrchr.c","start":{"line":90,"col":16,"offset":2869},"end":{"line":90,"col":22,"offset":2875},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":90,"col":16,"offset":2869},"end":{"line":90,"col":17,"offset":2870},"abstract_content":"i"},"$SIGNED":{"start":{"line":90,"col":20,"offset":2873},"end":{"line":90,"col":22,"offset":2875},"abstract_content":"64"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"147286b8e8dbdcc819f2a6d056ffef37947ff38f6b09673b9107a80a59f7d6ee2f038ebad340c3666859419c6c7b8f18830131a7ae8678dc82f5e0ccf83ed12d_0","lines":"          for (i = 64; i < sizeof (longword) * 8; i *= 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":106,"col":1,"offset":3678},"end":{"line":106,"col":34,"offset":3711},"extra":{"metavars":{"$EXPR1":{"start":{"line":106,"col":9,"offset":3686},"end":{"line":106,"col":27,"offset":3704},"abstract_content":"TM_YEAR_BASE%100"},"$EXPR2":{"start":{"line":106,"col":31,"offset":3708},"end":{"line":106,"col":32,"offset":3709},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4edd3a501c11bd80553d2f066f3f67a48421959dfb5ba54fef74957d7d3b0c2a944322336504fa20ad9f6ef3745ebaa1290299537fea807b3acef08e8743d3bc_0","lines":"verify (TM_YEAR_BASE % 100 == 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":167,"col":3,"offset":5637},"end":{"line":167,"col":24,"offset":5658},"extra":{"metavars":{"$EXPR1":{"start":{"line":167,"col":11,"offset":5645},"end":{"line":167,"col":17,"offset":5651},"abstract_content":"-1/2"},"$EXPR2":{"start":{"line":167,"col":21,"offset":5655},"end":{"line":167,"col":22,"offset":5656},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b3a86575a170f129fb5000c9c541a5445d40f3406ee36a8ded8c005e0ddd19b689904580aeacd99efcb8eb4b1b13408426b7815a084db2d7c1f0601242c53042_0","lines":"  verify (-1 / 2 == 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":448,"col":7,"offset":15602},"end":{"line":448,"col":61,"offset":15656},"extra":{"metavars":{"$EXPR1":{"start":{"line":448,"col":33,"offset":15628},"end":{"line":448,"col":36,"offset":15631},"abstract_content":"sec"},"$EXPR2":{"start":{"line":448,"col":40,"offset":15635},"end":{"line":448,"col":41,"offset":15636},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d6ac9c73a0c6c5290eae53fed0a4fe055b513a13a4606a8f0e4750c57e14a526d3f3992cb21e712812ab5d629365b9c124fe949540d1f4a5163a63412907ca4f_0","lines":"      long_int sec_adjustment = sec == 0 && tm.tm_sec == 60;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":550,"col":11,"offset":17813},"end":{"line":551,"col":52,"offset":17895},"extra":{"metavars":{"$FUN":{"start":{"line":550,"col":11,"offset":17813},"end":{"line":550,"col":17,"offset":17819},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9eb8a3cf8dcd264e51a3bee3e834db370c16300ebffaadf1ed9ecc2aac893d40b0cd2d8c1cff293c17b059f9fa4af9a67aec097181955b2c003fbd0c2515a39a_0","lines":"      && (sscanf (argv[1], \"%d-%d-%d%c\",\n\t\t  &tm.tm_year, &tm.tm_mon, &tm.tm_mday, &trailer)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":550,"col":19,"offset":17821},"end":{"line":550,"col":23,"offset":17825},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_0","lines":"      && (sscanf (argv[1], \"%d-%d-%d%c\",","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":553,"col":11,"offset":17915},"end":{"line":554,"col":51,"offset":17996},"extra":{"metavars":{"$FUN":{"start":{"line":553,"col":11,"offset":17915},"end":{"line":553,"col":17,"offset":17921},"abstract_content":"sscanf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9eb8a3cf8dcd264e51a3bee3e834db370c16300ebffaadf1ed9ecc2aac893d40b0cd2d8c1cff293c17b059f9fa4af9a67aec097181955b2c003fbd0c2515a39a_1","lines":"      && (sscanf (argv[2], \"%d:%d:%d%c\",\n\t\t  &tm.tm_hour, &tm.tm_min, &tm.tm_sec, &trailer)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":553,"col":19,"offset":17923},"end":{"line":553,"col":23,"offset":17927},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_1","lines":"      && (sscanf (argv[2], \"%d:%d:%d%c\",","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":559,"col":38,"offset":18103},"end":{"line":559,"col":52,"offset":18117},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5944c37c9d6db30252b2f6011d6ec1e4aac351ddb4146469334a8e8d9dfb6294285979d2a9ad563ed00cb52e1053532264b9e28a646ba84bb17a84a89dd1cad4_0","lines":"      tm.tm_isdst = argc == 3 ? -1 : atoi (argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":559,"col":44,"offset":18109},"end":{"line":559,"col":48,"offset":18113},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_2","lines":"      tm.tm_isdst = argc == 3 ? -1 : atoi (argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":568,"col":47,"offset":18396},"end":{"line":568,"col":51,"offset":18400},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_3","lines":"  else if (argc == 4 || (argc == 5 && strcmp (argv[4], \"-\") == 0))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":570,"col":21,"offset":18443},"end":{"line":570,"col":35,"offset":18457},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5944c37c9d6db30252b2f6011d6ec1e4aac351ddb4146469334a8e8d9dfb6294285979d2a9ad563ed00cb52e1053532264b9e28a646ba84bb17a84a89dd1cad4_1","lines":"      time_t from = atol (argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":570,"col":27,"offset":18449},"end":{"line":570,"col":31,"offset":18453},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_4","lines":"      time_t from = atol (argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":571,"col":19,"offset":18477},"end":{"line":571,"col":33,"offset":18491},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5944c37c9d6db30252b2f6011d6ec1e4aac351ddb4146469334a8e8d9dfb6294285979d2a9ad563ed00cb52e1053532264b9e28a646ba84bb17a84a89dd1cad4_2","lines":"      time_t by = atol (argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":571,"col":25,"offset":18483},"end":{"line":571,"col":29,"offset":18487},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_5","lines":"      time_t by = atol (argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":572,"col":19,"offset":18511},"end":{"line":572,"col":33,"offset":18525},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"5944c37c9d6db30252b2f6011d6ec1e4aac351ddb4146469334a8e8d9dfb6294285979d2a9ad563ed00cb52e1053532264b9e28a646ba84bb17a84a89dd1cad4_3","lines":"      time_t to = atol (argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":572,"col":25,"offset":18517},"end":{"line":572,"col":29,"offset":18521},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_6","lines":"      time_t to = atol (argv[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":619,"col":6,"offset":19556},"end":{"line":619,"col":10,"offset":19560},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_7","lines":"\t    argv[0], argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":619,"col":15,"offset":19565},"end":{"line":619,"col":19,"offset":19569},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_8","lines":"\t    argv[0], argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":619,"col":24,"offset":19574},"end":{"line":619,"col":28,"offset":19578},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e88fcb83cd3bd18c4647cb30591107d2c758f528f0c7b6a8eefd89273736c49f96fc408111593aaee291b8688c037d4bf7b6a13ab6be6e0994acbfcc6337c95f_9","lines":"\t    argv[0], argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.c","start":{"line":77,"col":5,"offset":2363},"end":{"line":77,"col":28,"offset":2386},"extra":{"metavars":{"$TYPE":{"start":{"line":65,"col":8,"offset":2080},"end":{"line":65,"col":39,"offset":2111},"abstract_content":"struct gl_msvc_inval_per_thread"},"$VAR":{"start":{"line":77,"col":13,"offset":2371},"end":{"line":77,"col":27,"offset":2385},"abstract_content":"not_per_thread"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc6c1e0e5e1f9655a80c646531986f1ee7b1085a5a01f8f91ca7080df458e4f1f0c31bdb4c03d8ec6b343e369c28743606a3b740b700382c3454408894ab4514_0","lines":"    return &not_per_thread;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.c","start":{"line":87,"col":13,"offset":2715},"end":{"line":87,"col":62,"offset":2764},"extra":{"metavars":{"$FUN":{"start":{"line":87,"col":13,"offset":2715},"end":{"line":87,"col":19,"offset":2721},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c0336b0f774e1cf6188ea170fbaf4fc4170fe6016adff30fafd9476e977c5a49638b5b7af969b569b8d639ccdc5e9b2a0eb899aaeabd7d265cfc5c38da0117a9_0","lines":"            malloc (sizeof (struct gl_msvc_inval_per_thread));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","start":{"line":192,"col":10,"offset":7018},"end":{"line":192,"col":49,"offset":7057},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":192,"col":10,"offset":7018},"end":{"line":192,"col":18,"offset":7026},"abstract_content":"new_size"},"$SIGNED":{"start":{"line":192,"col":41,"offset":7049},"end":{"line":192,"col":42,"offset":7050},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"17f1535726b44a4aded079d16090a594387082e37d112040b633ed7f375e88f1549f58227274d9825fe5af9485f3660b5340cbbfa6f6dd72b0e2e1d1fa1b9810_0","lines":"  size_t new_size = sum2 + (obj_size >> 3) + 100;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","start":{"line":212,"col":3,"offset":7686},"end":{"line":212,"col":49,"offset":7732},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":3,"offset":7686},"end":{"line":212,"col":9,"offset":7692},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fae866c3e2d798c57a867d66c84a9c93d0b6e94f97a9b639f18bb2ce02daef3e14a5885dba905cae69c3edd3c744ed43bd0b3471b3e8515e8f937142b662ec10_0","lines":"  memcpy (object_base, h->object_base, obj_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":33,"col":10,"offset":1236},"end":{"line":33,"col":38,"offset":1264},"extra":{"metavars":{"$FUN":{"start":{"line":33,"col":10,"offset":1236},"end":{"line":33,"col":14,"offset":1240},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c4b6aa2e7f7c54e66846badbc37706a7070f83b628f0e07cf1248aa62f4fe796a7bf5820fb64157fbeea3b0e63cdc5ecaef9a32da18a9e88c23ab9d79b11a64e_0","lines":"  return open (filename, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":59,"col":3,"offset":1750},"end":{"line":69,"col":6,"offset":2043},"extra":{"metavars":{"$EXPR1":{"start":{"line":59,"col":7,"offset":1754},"end":{"line":59,"col":12,"offset":1759},"abstract_content":"flags"},"$EXPR2":{"start":{"line":59,"col":15,"offset":1762},"end":{"line":59,"col":22,"offset":1769},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"090ced4402933f8fbe278ab53e785e1d0e0990ac16a51ee5bcf5770dd874ab56d17ca85471c974ece94c108fe3eedcf135fd7ac36cffd512bc7d7d20d388018e_0","lines":"  if (flags & O_CREAT)\n    {\n      va_list arg;\n      va_start (arg, flags);\n\n      /* We have to use PROMOTED_MODE_T instead of mode_t, otherwise GCC 4\n         creates crashing code when 'mode_t' is smaller than 'int'.  */\n      mode = va_arg (arg, PROMOTED_MODE_T);\n\n      va_end (arg);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":107,"col":3,"offset":3794},"end":{"line":115,"col":6,"offset":4000},"extra":{"metavars":{"$EXPR1":{"start":{"line":107,"col":7,"offset":3798},"end":{"line":107,"col":12,"offset":3803},"abstract_content":"flags"},"$EXPR2":{"start":{"line":107,"col":16,"offset":3807},"end":{"line":107,"col":43,"offset":3834},"abstract_content":"O_CREAT|O_WRONLY|O_RDWR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"572ab3c2c44d138370128a1bb0a727b650d9e38d7a458c73a3d7214055127b37e27b58ef3ee6078c1e7f9c3b799a74a86143b5a3ea076b2aa4777b5c3caa0bd8_0","lines":"  if (flags & (O_CREAT | O_WRONLY | O_RDWR))\n    {\n      size_t len = strlen (filename);\n      if (len > 0 && filename[len - 1] == '/')\n        {\n          errno = EISDIR;\n          return -1;\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":118,"col":8,"offset":4016},"end":{"line":118,"col":41,"offset":4049},"extra":{"metavars":{"$FUN":{"start":{"line":118,"col":8,"offset":4016},"end":{"line":118,"col":17,"offset":4025},"abstract_content":"orig_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"af76a6478e2914003801a3685a0793d653277b3055847e7858bf381dd58a9d3b286808f630e4cccb565563bde53a67b310d0bf3e25b80f6eacf7372c783d245b_0","lines":"  fd = orig_open (filename, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":132,"col":11,"offset":4644},"end":{"line":132,"col":36,"offset":4669},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"cc02935aefce19ee03a502803d2556736b2ab2d56ea3660d5c604d54a76074d9ea6fd572e4878e65e6478c328db99ee54386304e2a51d676da4cf3a07654659c_0","lines":"      if (stat (filename, &statbuf) == 0 && S_ISDIR (statbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":132,"col":11,"offset":4644},"end":{"line":132,"col":36,"offset":4669},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":11,"offset":4644},"end":{"line":132,"col":15,"offset":4648},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f34a9653b7d1a5530449ab33572f6c4fee08407bd195528df02c518aef5c58985b064b4d3a0a9645e7aa1d89dcbc896ef937fbb25de9055432f94461c15fe56d_0","lines":"      if (stat (filename, &statbuf) == 0 && S_ISDIR (statbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":135,"col":16,"offset":4777},"end":{"line":135,"col":47,"offset":4808},"extra":{"metavars":{"$FUN":{"start":{"line":135,"col":16,"offset":4777},"end":{"line":135,"col":20,"offset":4781},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c4b6aa2e7f7c54e66846badbc37706a7070f83b628f0e07cf1248aa62f4fe796a7bf5820fb64157fbeea3b0e63cdc5ecaef9a32da18a9e88c23ab9d79b11a64e_1","lines":"          fd = open (\"/dev/null\", flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","start":{"line":165,"col":15,"offset":5809},"end":{"line":165,"col":35,"offset":5829},"extra":{"metavars":{"$FUN":{"start":{"line":165,"col":15,"offset":5809},"end":{"line":165,"col":20,"offset":5814},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a1f8d68d394cda48d721e1e22b41152ca81c8c666410fd88c1dcdab7e53c5fcbb019eebe90b01db2e2a3b2dde15a99ffa8b854b660886efcfba7898e6c6cfaf_0","lines":"          if (fstat (fd, &statbuf) >= 0 && !S_ISDIR (statbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":76,"col":28,"offset":2349},"end":{"line":77,"col":81,"offset":2452},"extra":{"metavars":{"$FUN":{"start":{"line":76,"col":28,"offset":2349},"end":{"line":76,"col":32,"offset":2353},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1c1fa6144a7303432f97bc0e5e1690417df9512e1d43e8bec3c10c17e6ab97844472340049b186134f8f2377e871a91e94036b61a6cd0cb9bd0470dcd244f200_0","lines":"        int proc_self_fd = open (\"/proc/self/fd\",\n                                 O_SEARCH | O_DIRECTORY | O_NOCTTY | O_NONBLOCK);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":88,"col":13,"offset":3015},"end":{"line":88,"col":76,"offset":3078},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"PROC_SELF_FD_FORMAT"},"$BUF":{"start":{"line":88,"col":22,"offset":3024},"end":{"line":88,"col":32,"offset":3034},"abstract_content":"dotdot_buf"},"$FMT":{"start":{"line":88,"col":34,"offset":3036},"end":{"line":88,"col":61,"offset":3063},"abstract_content":"PROC_SELF_FD_FORMAT\"../fd\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"cbe7debb4f6f7727a31bb154d4429fe2a788b31139ba601aa02614e22e7d3bacd585026edfd663a77b8a35c4b84f8a317c8987d7fe35bdf3439ee202575c9c8b_0","lines":"            sprintf (dotdot_buf, PROC_SELF_FD_FORMAT \"../fd\", proc_self_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":88,"col":13,"offset":3015},"end":{"line":88,"col":76,"offset":3078},"extra":{"metavars":{"$FUN":{"start":{"line":88,"col":13,"offset":3015},"end":{"line":88,"col":20,"offset":3022},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"230ea8b0a50fd4383aed3c897c17a59e9a88b1c4bc4b137b5259606c63657fc33da92d2630ec2f2a2c7002fe69d08fbdbdc8775b1bb4a1fd4309a057f30a4498_0","lines":"            sprintf (dotdot_buf, PROC_SELF_FD_FORMAT \"../fd\", proc_self_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":88,"col":13,"offset":3015},"end":{"line":88,"col":76,"offset":3078},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"PROC_SELF_FD_FORMAT"},"$TYPE":{"start":{"line":87,"col":13,"offset":2936},"end":{"line":87,"col":17,"offset":2940},"abstract_content":"char"},"$LEN":{"start":{"line":87,"col":29,"offset":2952},"end":{"line":87,"col":77,"offset":3000},"abstract_content":"PROC_SELF_FD_DIR_SIZE_BOUND+sizeof\"../fd\"-1"},"$FUN":{"start":{"line":88,"col":13,"offset":3015},"end":{"line":88,"col":20,"offset":3022},"abstract_content":"sprintf"},"$BUF":{"start":{"line":88,"col":22,"offset":3024},"end":{"line":88,"col":32,"offset":3034},"abstract_content":"dotdot_buf"},"$FMT":{"start":{"line":88,"col":34,"offset":3036},"end":{"line":88,"col":61,"offset":3063},"abstract_content":"PROC_SELF_FD_FORMAT\"../fd\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"982c7ae4d2e446e01745da72c7be4b3da8256057ecdd5c5e07c88327d43164816138bf3780c2b621b88d4da6bae1a9ddcf85ace108f7729b69348f97122e6d26_0","lines":"            sprintf (dotdot_buf, PROC_SELF_FD_FORMAT \"../fd\", proc_self_fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":89,"col":27,"offset":3106},"end":{"line":89,"col":52,"offset":3131},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1bd3eebb8f1b362239fafb8d6b19d3acf811521d07fada998311380524ff2492cd56ab1662e3a23434e5624ee794e732a8e56d70a16c95b20d1fd5cc71433e07_0","lines":"            proc_status = access (dotdot_buf, F_OK) ? -1 : 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":89,"col":27,"offset":3106},"end":{"line":89,"col":52,"offset":3131},"extra":{"metavars":{"$FUN":{"start":{"line":89,"col":27,"offset":3106},"end":{"line":89,"col":33,"offset":3112},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"30fab06a0f27d0c9dc59ba812ff2ce5d93ad323a2b51c4cab0b5ce9130f60cb4b3471e41d89ae1331ba55728ae5e74c4d7b06154ce9f69bda7ba3d8b0cc7aa96_0","lines":"            proc_status = access (dotdot_buf, F_OK) ? -1 : 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":101,"col":22,"offset":3403},"end":{"line":101,"col":38,"offset":3419},"extra":{"metavars":{"$X":{"start":{"line":98,"col":26,"offset":3283},"end":{"line":98,"col":53,"offset":3310},"abstract_content":"PROC_SELF_FD_DIR_SIZE_BOUND"},"$Y":{"start":{"line":98,"col":56,"offset":3313},"end":{"line":98,"col":69,"offset":3326},"abstract_content":"strlen(file)"},"$FUN":{"start":{"line":101,"col":22,"offset":3403},"end":{"line":101,"col":28,"offset":3409},"abstract_content":"malloc"},"$N":{"start":{"line":101,"col":30,"offset":3411},"end":{"line":101,"col":37,"offset":3418},"abstract_content":"bufsize","propagated_value":{"svalue_start":{"line":98,"col":26,"offset":3283},"svalue_end":{"line":98,"col":69,"offset":3326},"svalue_abstract_content":"PROC_SELF_FD_DIR_SIZE_BOUND+strlen(file)"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a88833c2f39f061c329023cc2e4fc4560941ffba46a44cea2d81628f2e189151a57669b2d6b0648fc5bbe77b9e19cc9f412244725e16c38dc112acc53b0c7803_0","lines":"            result = malloc (bufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":101,"col":22,"offset":3403},"end":{"line":101,"col":38,"offset":3419},"extra":{"metavars":{"$FUN":{"start":{"line":101,"col":22,"offset":3403},"end":{"line":101,"col":28,"offset":3409},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c87349e32b88875dbac51ef14f6c0a9e8476dd33b3f11401a9c2d060e24dd81cbfa2db42f62854fe21c45188ea5df0094b6fa7f7e9bc225063466ec7d573e1a1_0","lines":"            result = malloc (bufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":106,"col":18,"offset":3504},"end":{"line":106,"col":59,"offset":3545},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"1bee61b7a436e0e5fa343e87c7f72093fb8188b8c276d3a05b8ff10c24817a1be3b9857381822654879c08e3a74248b41405ffb51b0fa76ca1d378e6a78f818e_0","lines":"        dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":106,"col":18,"offset":3504},"end":{"line":106,"col":59,"offset":3545},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":20,"offset":19},"abstract_content":"PROC_SELF_FD_FORMAT"},"$BUF":{"start":{"line":106,"col":27,"offset":3513},"end":{"line":106,"col":33,"offset":3519},"abstract_content":"result"},"$FMT":{"start":{"line":106,"col":35,"offset":3521},"end":{"line":106,"col":54,"offset":3540},"abstract_content":"PROC_SELF_FD_FORMAT"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"f7fe2a2985452e5c3360d27c9a3a839e364f20df9f18a22f52d8051cef4cebb5f4a2f8f5046e50ee7ea68a7f14964de838a9b40e74b48dc251c46e3f8aa01da4_0","lines":"        dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":106,"col":18,"offset":3504},"end":{"line":106,"col":59,"offset":3545},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":18,"offset":3504},"end":{"line":106,"col":25,"offset":3511},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"230ea8b0a50fd4383aed3c897c17a59e9a88b1c4bc4b137b5259606c63657fc33da92d2630ec2f2a2c7002fe69d08fbdbdc8775b1bb4a1fd4309a057f30a4498_1","lines":"        dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":119,"col":5,"offset":3790},"end":{"line":119,"col":45,"offset":3830},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":119,"col":5,"offset":3790},"end":{"line":119,"col":12,"offset":3797},"abstract_content":"bufsize"},"$SIGNED":{"start":{"line":119,"col":15,"offset":3800},"end":{"line":119,"col":21,"offset":3806},"abstract_content":"dirlen","propagated_value":{"svalue_start":{"line":118,"col":14,"offset":3772},"svalue_end":{"line":118,"col":26,"offset":3784},"svalue_abstract_content":"strlen(dir)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb813b4e7a4bd97c19d7c3c9cb283be1d29048f9e77adab3f46806e620e4c633acb0477da36c755e1829359b45f0adc5cbe2e719bba40bc0d3fdf6a02c75505d_0","lines":"    bufsize = dirlen + 1 + strlen (file) + 1; /* 1 for '/', 1 for null */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":122,"col":18,"offset":3923},"end":{"line":122,"col":34,"offset":3939},"extra":{"metavars":{"$X":{"start":{"line":119,"col":15,"offset":3800},"end":{"line":119,"col":41,"offset":3826},"abstract_content":"dirlen+1+strlen(file)"},"$Y":{"start":{"line":119,"col":44,"offset":3829},"end":{"line":119,"col":45,"offset":3830},"abstract_content":"1"},"$FUN":{"start":{"line":122,"col":18,"offset":3923},"end":{"line":122,"col":24,"offset":3929},"abstract_content":"malloc"},"$N":{"start":{"line":122,"col":26,"offset":3931},"end":{"line":122,"col":33,"offset":3938},"abstract_content":"bufsize","propagated_value":{"svalue_start":{"line":119,"col":15,"offset":3800},"svalue_end":{"line":119,"col":45,"offset":3830},"svalue_abstract_content":"dirlen+1+strlen(file)+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"798df979d32897ae8e0fee3ba623b161f41e10a95286126f1256f07147f5fa9afa37ac2060a29b7837f2d30612d0f10d3fb164c44d1c3ce9a7cca1c94318d3dd_0","lines":"        result = malloc (bufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":122,"col":18,"offset":3923},"end":{"line":122,"col":34,"offset":3939},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":18,"offset":3923},"end":{"line":122,"col":24,"offset":3929},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c87349e32b88875dbac51ef14f6c0a9e8476dd33b3f11401a9c2d060e24dd81cbfa2db42f62854fe21c45188ea5df0094b6fa7f7e9bc225063466ec7d573e1a1_1","lines":"        result = malloc (bufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":127,"col":5,"offset":3999},"end":{"line":127,"col":25,"offset":4019},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ccbeff4de3374fe5d01cd47b789a6c851f4dc66d14eedfe81989808ef5cfc6fbb749e2977fdd48ef933a9e1b189c437158c7a9e40947d54ddd720e9b026f510a_0","lines":"    strcpy (result, dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":127,"col":5,"offset":3999},"end":{"line":127,"col":25,"offset":4019},"extra":{"metavars":{"$FUN":{"start":{"line":127,"col":5,"offset":3999},"end":{"line":127,"col":11,"offset":4005},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"390e538849794a06cb9731f0b83e59d7ed848b681217dcd29d0d25240346dea7060eba1a1efbfa3fe17b53eb118130b9eecf452b747e5f220bb109bfa855dc55_0","lines":"    strcpy (result, dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":132,"col":3,"offset":4063},"end":{"line":132,"col":33,"offset":4093},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"ccbeff4de3374fe5d01cd47b789a6c851f4dc66d14eedfe81989808ef5cfc6fbb749e2977fdd48ef933a9e1b189c437158c7a9e40947d54ddd720e9b026f510a_1","lines":"  strcpy (result + dirlen, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","start":{"line":132,"col":3,"offset":4063},"end":{"line":132,"col":33,"offset":4093},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":3,"offset":4063},"end":{"line":132,"col":9,"offset":4069},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"390e538849794a06cb9731f0b83e59d7ed848b681217dcd29d0d25240346dea7060eba1a1efbfa3fe17b53eb118130b9eecf452b747e5f220bb109bfa855dc55_1","lines":"  strcpy (result + dirlen, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":34,"col":10,"offset":1249},"end":{"line":34,"col":44,"offset":1283},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":7,"offset":6},"abstract_content":"at"},"$FUN":{"start":{"line":34,"col":10,"offset":1249},"end":{"line":34,"col":16,"offset":1255},"abstract_content":"openat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ca21f212f5de6bac7368e8a42d2664e66910181b34fae249e0c39b4c8f7a9b935d9650c2116bf9c4f2d6ec9b5bc3ee944bc6faec35b2df160724fb054236d63d_0","lines":"  return openat (fd, filename, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":61,"col":3,"offset":1804},"end":{"line":71,"col":6,"offset":2097},"extra":{"metavars":{"$EXPR1":{"start":{"line":61,"col":7,"offset":1808},"end":{"line":61,"col":12,"offset":1813},"abstract_content":"flags"},"$EXPR2":{"start":{"line":61,"col":15,"offset":1816},"end":{"line":61,"col":22,"offset":1823},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd649c116e18d8e2ca66e6fb38ebe144e755da8c681c9ee1ec105897901a1e52875cc53112b21d839581075a03290eab78159f577f2d24841001047677a6ba90_0","lines":"  if (flags & O_CREAT)\n    {\n      va_list arg;\n      va_start (arg, flags);\n\n      /* We have to use PROMOTED_MODE_T instead of mode_t, otherwise GCC 4\n         creates crashing code when 'mode_t' is smaller than 'int'.  */\n      mode = va_arg (arg, PROMOTED_MODE_T);\n\n      va_end (arg);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":95,"col":3,"offset":3311},"end":{"line":103,"col":6,"offset":3517},"extra":{"metavars":{"$EXPR1":{"start":{"line":95,"col":7,"offset":3315},"end":{"line":95,"col":12,"offset":3320},"abstract_content":"flags"},"$EXPR2":{"start":{"line":95,"col":16,"offset":3324},"end":{"line":95,"col":43,"offset":3351},"abstract_content":"O_CREAT|O_WRONLY|O_RDWR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"26302c2ff51c7c340bcfda91b62df0e4d77a669755cccde1d56b83e390672599e6905b4a3cbe4edd3ac92ead6ea09cd50ea9d3ded849b5a86805b8b7140e3be2_0","lines":"  if (flags & (O_CREAT | O_WRONLY | O_RDWR))\n    {\n      size_t len = strlen (filename);\n      if (len > 0 && filename[len - 1] == '/')\n        {\n          errno = EISDIR;\n          return -1;\n        }\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":106,"col":8,"offset":3534},"end":{"line":106,"col":48,"offset":3574},"extra":{"metavars":{"$1":{"start":{"line":1,"col":10,"offset":9},"end":{"line":1,"col":12,"offset":11},"abstract_content":"at"},"$FUN":{"start":{"line":106,"col":8,"offset":3534},"end":{"line":106,"col":19,"offset":3545},"abstract_content":"orig_openat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aee89c7999ac81538c29e2796fcd6001897ccaaf2ee0f24c7957567b2872089378c48e3e2f1a8b26727884d0e2fe8912916ab8b5767149b16544a202e91d46c8_0","lines":"  fd = orig_openat (dfd, filename, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":129,"col":15,"offset":4446},"end":{"line":129,"col":35,"offset":4466},"extra":{"metavars":{"$FUN":{"start":{"line":129,"col":15,"offset":4446},"end":{"line":129,"col":20,"offset":4451},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9711b76c550ea73fe8112fb8a701eaa3133aa0d0f681a25076b7c2ad757c7cc006a2ad5c89237a2fc7ce912a7824cae2d6d1937b56fdfafadcb00ea47ffc6fcf_0","lines":"          if (fstat (fd, &statbuf) >= 0 && !S_ISDIR (statbuf.st_mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":161,"col":3,"offset":5374},"end":{"line":171,"col":6,"offset":5667},"extra":{"metavars":{"$EXPR1":{"start":{"line":161,"col":7,"offset":5378},"end":{"line":161,"col":12,"offset":5383},"abstract_content":"flags"},"$EXPR2":{"start":{"line":161,"col":15,"offset":5386},"end":{"line":161,"col":22,"offset":5393},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd649c116e18d8e2ca66e6fb38ebe144e755da8c681c9ee1ec105897901a1e52875cc53112b21d839581075a03290eab78159f577f2d24841001047677a6ba90_1","lines":"  if (flags & O_CREAT)\n    {\n      va_list arg;\n      va_start (arg, flags);\n\n      /* We have to use PROMOTED_MODE_T instead of mode_t, otherwise GCC 4\n         creates crashing code when 'mode_t' is smaller than 'int'.  */\n      mode = va_arg (arg, PROMOTED_MODE_T);\n\n      va_end (arg);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":197,"col":12,"offset":6475},"end":{"line":197,"col":36,"offset":6499},"extra":{"metavars":{"$FUN":{"start":{"line":197,"col":12,"offset":6475},"end":{"line":197,"col":16,"offset":6479},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c8c528d3bcf52dfd9cb43791bf1d01ee87b83a3e82ce3d414fc46bb43df48ab27b73ca6e2406a5dacb267d0dc4112c6c1a640198ad346e64d384eb3fa5a11ab_0","lines":"    return open (file, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":204,"col":27,"offset":6649},"end":{"line":204,"col":56,"offset":6678},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":27,"offset":6649},"end":{"line":204,"col":31,"offset":6653},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c8c528d3bcf52dfd9cb43791bf1d01ee87b83a3e82ce3d414fc46bb43df48ab27b73ca6e2406a5dacb267d0dc4112c6c1a640198ad346e64d384eb3fa5a11ab_1","lines":"        int open_result = open (proc_file, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":207,"col":11,"offset":6752},"end":{"line":207,"col":28,"offset":6769},"extra":{"metavars":{"$PTR":{"start":{"line":207,"col":17,"offset":6758},"end":{"line":207,"col":26,"offset":6767},"abstract_content":"proc_file","propagated_value":{"svalue_start":{"line":201,"col":23,"offset":6562},"svalue_end":{"line":201,"col":55,"offset":6594},"svalue_abstract_content":"openat_proc_name(buf fd file)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"59c048c2306485135a12a8fe2057932fd87136ea1bef0c9465940c613b54bd4e062a39bb1ed6c0a64efe03712ba9072501c90750b689f317ed6b3a556225b355_0","lines":"          free (proc_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":219,"col":3,"offset":7136},"end":{"line":219,"col":42,"offset":7175},"extra":{"metavars":{"$EXPR1":{"start":{"line":219,"col":14,"offset":7147},"end":{"line":219,"col":35,"offset":7168},"abstract_content":"save_cwd(&saved_cwd)"},"$EXPR2":{"start":{"line":219,"col":39,"offset":7172},"end":{"line":219,"col":40,"offset":7173},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2f52fb275efe8a3806d0f520edaa484822b24267278153d42351e09d2cc1b08c62d99152a7f3164c9e22341d19a2cfa496194d6351a8c2e6e8e30b79333415d0_0","lines":"  save_ok = (save_cwd (&saved_cwd) == 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":241,"col":13,"offset":7641},"end":{"line":241,"col":37,"offset":7665},"extra":{"metavars":{"$FUN":{"start":{"line":241,"col":13,"offset":7641},"end":{"line":241,"col":17,"offset":7645},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c8c528d3bcf52dfd9cb43791bf1d01ee87b83a3e82ce3d414fc46bb43df48ab27b73ca6e2406a5dacb267d0dc4112c6c1a640198ad346e64d384eb3fa5a11ab_2","lines":"      err = open (file, flags, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":268,"col":12,"offset":8312},"end":{"line":268,"col":32,"offset":8332},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":12,"offset":8312},"end":{"line":268,"col":16,"offset":8316},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c8c528d3bcf52dfd9cb43791bf1d01ee87b83a3e82ce3d414fc46bb43df48ab27b73ca6e2406a5dacb267d0dc4112c6c1a640198ad346e64d384eb3fa5a11ab_3","lines":"  int fd = open (\"/\", O_SEARCH);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","start":{"line":278,"col":13,"offset":8556},"end":{"line":278,"col":30,"offset":8573},"extra":{"metavars":{"$PTR":{"start":{"line":278,"col":19,"offset":8562},"end":{"line":278,"col":28,"offset":8571},"abstract_content":"proc_file","propagated_value":{"svalue_start":{"line":273,"col":25,"offset":8416},"svalue_end":{"line":273,"col":56,"offset":8447},"svalue_abstract_content":"openat_proc_name(buf fd\".\")"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"59c048c2306485135a12a8fe2057932fd87136ea1bef0c9465940c613b54bd4e062a39bb1ed6c0a64efe03712ba9072501c90750b689f317ed6b3a556225b355_1","lines":"            free (proc_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":64,"col":10,"offset":1803},"end":{"line":64,"col":46,"offset":1839},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$6":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":9,"offset":8},"abstract_content":"at"},"$FUN":{"start":{"line":64,"col":10,"offset":1803},"end":{"line":64,"col":18,"offset":1811},"abstract_content":"fchownat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fbccca9b1627fcc069238bb601c9813ada0567f9609e19e1906993c4f6539c84d964b0140f74a5f1bf6812ed5e9b1dad647bf1f294bf5d2450ae6f5cbc30e609_0","lines":"  return fchownat (fd, file, owner, group, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":70,"col":10,"offset":1937},"end":{"line":70,"col":64,"offset":1991},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$6":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":9,"offset":8},"abstract_content":"at"},"$FUN":{"start":{"line":70,"col":10,"offset":1937},"end":{"line":70,"col":18,"offset":1945},"abstract_content":"fchownat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fbccca9b1627fcc069238bb601c9813ada0567f9609e19e1906993c4f6539c84d964b0140f74a5f1bf6812ed5e9b1dad647bf1f294bf5d2450ae6f5cbc30e609_1","lines":"  return fchownat (fd, file, owner, group, AT_SYMLINK_NOFOLLOW);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":84,"col":10,"offset":2175},"end":{"line":84,"col":38,"offset":2203},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$6":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":9,"offset":8},"abstract_content":"at"},"$FUN":{"start":{"line":84,"col":10,"offset":2175},"end":{"line":84,"col":18,"offset":2183},"abstract_content":"fchmodat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6df83ed7e37d8dbd62ebcc446c50778589ed913fabfb23de6cb9496fa3a4221a9848e8b582196877f7af032a0c39ac44ad33779d068f0acb33cc340cee99adb_0","lines":"  return fchmodat (fd, file, mode, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":90,"col":10,"offset":2288},"end":{"line":90,"col":56,"offset":2334},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$6":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":9,"offset":8},"abstract_content":"at"},"$FUN":{"start":{"line":90,"col":10,"offset":2288},"end":{"line":90,"col":18,"offset":2296},"abstract_content":"fchmodat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6df83ed7e37d8dbd62ebcc446c50778589ed913fabfb23de6cb9496fa3a4221a9848e8b582196877f7af032a0c39ac44ad33779d068f0acb33cc340cee99adb_1","lines":"  return fchmodat (fd, file, mode, AT_SYMLINK_NOFOLLOW);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":104,"col":10,"offset":2513},"end":{"line":104,"col":35,"offset":2538},"extra":{"metavars":{"$4":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":8,"offset":7},"abstract_content":"at"},"$FUN":{"start":{"line":104,"col":10,"offset":2513},"end":{"line":104,"col":17,"offset":2520},"abstract_content":"fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7a172d89eba5cd5ed440b50c4aded9c0e582fd046ba4fbb9c4d69f1eb1a12971e7fe18c87b252a038af865c46d72996614e0f551323d2471ff9a2c87335c3f36_0","lines":"  return fstatat (fd, name, st, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":110,"col":10,"offset":2624},"end":{"line":110,"col":53,"offset":2667},"extra":{"metavars":{"$4":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":8,"offset":7},"abstract_content":"at"},"$FUN":{"start":{"line":110,"col":10,"offset":2624},"end":{"line":110,"col":17,"offset":2631},"abstract_content":"fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7a172d89eba5cd5ed440b50c4aded9c0e582fd046ba4fbb9c4d69f1eb1a12971e7fe18c87b252a038af865c46d72996614e0f551323d2471ff9a2c87335c3f36_1","lines":"  return fstatat (fd, name, st, AT_SYMLINK_NOFOLLOW);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":61,"col":14,"offset":1380},"end":{"line":61,"col":39,"offset":1405},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":14,"offset":1380},"end":{"line":61,"col":18,"offset":1384},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc658c45aae0a7c66066a77645dee083e2a8f7dd69f54f9125a7c57b4608ff5010889e033ef8a79fe0c768be2e78216a947b41b5d40875b7c20612727e519a85_0","lines":"    int fd = open (dir_name, O_RDONLY);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":138,"col":5,"offset":3051},"end":{"line":139,"col":42,"offset":3149},"extra":{"metavars":{"$FUN":{"start":{"line":138,"col":5,"offset":3051},"end":{"line":138,"col":11,"offset":3057},"abstract_content":"malloc"},"$X":{"start":{"line":138,"col":13,"offset":3059},"end":{"line":139,"col":37,"offset":3144},"abstract_content":"offsetof(struct gl_directory dir_name_mask[0])+strlen(dir_name_mask)"},"$Y":{"start":{"line":139,"col":40,"offset":3147},"end":{"line":139,"col":41,"offset":3148},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3f493ecde7706afbe86feb0aeac8b098f1f67dc8b0ded7d27d045911e9dd9924d4e235b1817f596a867ba11c51ecbb290922b34000e11cf76ff23a75b6d16d7e_0","lines":"    malloc (offsetof (struct gl_directory, dir_name_mask[0])\n            + strlen (dir_name_mask) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":138,"col":5,"offset":3051},"end":{"line":139,"col":42,"offset":3149},"extra":{"metavars":{"$FUN":{"start":{"line":138,"col":5,"offset":3051},"end":{"line":138,"col":11,"offset":3057},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea776709fa771ef87a238dd15b8b366aa072b56f164b977b8f061bb260c1534dcf9acd1aa72adb4b8719babb0f9cf2d5ce87ef1b35b59d81e6faaebd31deebc0_0","lines":"    malloc (offsetof (struct gl_directory, dir_name_mask[0])\n            + strlen (dir_name_mask) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":150,"col":5,"offset":3372},"end":{"line":150,"col":60,"offset":3427},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":5,"offset":3372},"end":{"line":150,"col":11,"offset":3378},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1a7aa56a97bce9279ebc4e25a72930ce72cae0f6052400b588707cdcb8f376b297e8326070faa35b252d43396f730b535a3768cc5b298dbf63e5bdd34fdd80f7_0","lines":"    memcpy (&dirp->entry, &entry, sizeof (WIN32_FIND_DATA));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":151,"col":3,"offset":3431},"end":{"line":151,"col":46,"offset":3474},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6da7916e697d76b549d755afa4f1418e706b4c46065ad59cbb1f02179e12a86c591ffce73551c6ee390aef0db1893269634a1196d4132f7a175fc13aaf6fc183_0","lines":"  strcpy (dirp->dir_name_mask, dir_name_mask);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","start":{"line":151,"col":3,"offset":3431},"end":{"line":151,"col":46,"offset":3474},"extra":{"metavars":{"$FUN":{"start":{"line":151,"col":3,"offset":3431},"end":{"line":151,"col":9,"offset":3437},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4499eadfa49ed60ad8cf811073aad1d10b1173fc1953cb7bc9fcb80dfcdae7e0891af2386ece969a8195fb907e4e889ae51c859a842065cf4b520208ccc9607b_0","lines":"  strcpy (dirp->dir_name_mask, dir_name_mask);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":202,"col":3,"offset":7193},"end":{"line":202,"col":31,"offset":7221},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_0","lines":"  vfprintf (stderr, msg, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":428,"col":11,"offset":13115},"end":{"line":428,"col":67,"offset":13171},"extra":{"metavars":{"$FUN":{"start":{"line":428,"col":11,"offset":13115},"end":{"line":428,"col":18,"offset":13122},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d638ed317b36412a085b99eb7a67f4cbe2188f8cb3f2a31f75b8a218e498794a1d985fa9a213fe3cd2e96408f489dcc08e37c2702613b70943d69462e8160c11_0","lines":"          strncpy (buffer, ordinal_values[ pc->day_ordinal+1 ], n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":433,"col":11,"offset":13242},"end":{"line":433,"col":52,"offset":13283},"extra":{"metavars":{"$FUN":{"start":{"line":433,"col":11,"offset":13242},"end":{"line":433,"col":19,"offset":13250},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_0","lines":"          snprintf (buffer,n,\"%ld\",pc->day_ordinal);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":447,"col":11,"offset":13491},"end":{"line":447,"col":35,"offset":13515},"extra":{"metavars":{"$FUN":{"start":{"line":447,"col":11,"offset":13491},"end":{"line":447,"col":18,"offset":13498},"abstract_content":"strncat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"500e01b9290a09825c9bfdd8917d270f6fee7c1ed7278301111d9cc8551e429c791acf5f41ae09f941dcc8f5a86e0a87d6703ee09317a7f82db6ea16541157e5_0","lines":"          strncat (buffer,\" \",n-l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":447,"col":11,"offset":13491},"end":{"line":447,"col":35,"offset":13515},"extra":{"metavars":{"$DST":{"start":{"line":447,"col":20,"offset":13500},"end":{"line":447,"col":26,"offset":13506},"abstract_content":"buffer"},"$SRC":{"start":{"line":447,"col":27,"offset":13507},"end":{"line":447,"col":30,"offset":13510},"abstract_content":"\" \""},"$LEN":{"start":{"line":447,"col":31,"offset":13511},"end":{"line":447,"col":34,"offset":13514},"abstract_content":"n-l"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"87b4b13dbf27ef8aa0e12687a59e48ef7e6957da89e592ee5981b41aa710a6b67e4b3e75a14041268042435b95ac5923c14e52a0dc1a94debd58812a5b9c8802_0","lines":"          strncat (buffer,\" \",n-l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":450,"col":7,"offset":13548},"end":{"line":450,"col":55,"offset":13596},"extra":{"metavars":{"$FUN":{"start":{"line":450,"col":7,"offset":13548},"end":{"line":450,"col":14,"offset":13555},"abstract_content":"strncat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"500e01b9290a09825c9bfdd8917d270f6fee7c1ed7278301111d9cc8551e429c791acf5f41ae09f941dcc8f5a86e0a87d6703ee09317a7f82db6ea16541157e5_1","lines":"      strncat (buffer,days_values[pc->day_number],n-l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":450,"col":7,"offset":13548},"end":{"line":450,"col":55,"offset":13596},"extra":{"metavars":{"$DST":{"start":{"line":450,"col":16,"offset":13557},"end":{"line":450,"col":22,"offset":13563},"abstract_content":"buffer"},"$SRC":{"start":{"line":450,"col":23,"offset":13564},"end":{"line":450,"col":50,"offset":13591},"abstract_content":"days_values[pc->->day_number]"},"$LEN":{"start":{"line":450,"col":51,"offset":13592},"end":{"line":450,"col":54,"offset":13595},"abstract_content":"n-l"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"278e47e7827fd02a4102ba458de8e2fa17e240ef2ef2bfb1fd7daff3a12b65a00af42143c0523462f4795305a27fb40c55f3b252eba9ece46ba5b698fca5ace0_0","lines":"      strncat (buffer,days_values[pc->day_number],n-l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":502,"col":7,"offset":14972},"end":{"line":504,"col":47,"offset":15117},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_1","lines":"      fprintf (stderr,_(\"%s (day ordinal=%ld number=%d)\"),\n              str_days (pc,tmp,sizeof (tmp)),\n              pc->day_ordinal, pc->day_number);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":513,"col":7,"offset":15288},"end":{"line":513,"col":55,"offset":15336},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_2","lines":"      fprintf (stderr,_(\"is-dst=%d\"), pc->local_isdst);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":523,"col":7,"offset":15558},"end":{"line":524,"col":43,"offset":15661},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_3","lines":"      fprintf (stderr,_(\"TZ=%+03d:%02d\"), (int)(pc->time_zone/60),\n              abs ((int)pc->time_zone%60));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":533,"col":7,"offset":15847},"end":{"line":534,"col":43,"offset":15956},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_4","lines":"      fprintf (stderr,_(\"Local-TZ=%+03d:%02d\"), (int)(pc->time_zone/60),\n              abs ((int)pc->time_zone%60));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":543,"col":7,"offset":16121},"end":{"line":543,"col":71,"offset":16185},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_5","lines":"      fprintf (stderr,_(\"number of seconds: %ld\"), pc->seconds.tv_sec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1542,"col":10,"offset":49770},"end":{"line":1542,"col":16,"offset":49776},"extra":{"metavars":{"$VAR":{"start":{"line":1542,"col":10,"offset":49770},"end":{"line":1542,"col":16,"offset":49776},"abstract_content":"*++yyp"},"$VAL1":{"start":{"line":1548,"col":9,"offset":49850},"end":{"line":1548,"col":13,"offset":49854},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":1558,"col":9,"offset":50027},"end":{"line":1558,"col":12,"offset":50030},"abstract_content":"'\"'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eb8fd8d354b7a1018e98f6fdb8bc075e33084fdc6950fcd4c0c0064c1db31d372fe792dc2f71866a530539e88dcae4169115de695c91989a842f11c518471441_0","lines":"\tswitch (*++yyp)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1569,"col":10,"offset":50184},"end":{"line":1569,"col":33,"offset":50207},"extra":{"metavars":{"$FUN":{"start":{"line":1569,"col":10,"offset":50184},"end":{"line":1569,"col":18,"offset":50192},"abstract_content":"yystpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c100b6597b37d80274e56bf8a970258b39afd8ea698da0f1d964d8ea6dd2ad540218b02ca2f588b73752d6029afedffa11f32bc85bbe022c7c839e9c08e545ca_0","lines":"  return yystpcpy (yyres, yystr) - yyres;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1569,"col":10,"offset":50184},"end":{"line":1569,"col":41,"offset":50215},"extra":{"metavars":{"$PTR1":{"start":{"line":1569,"col":10,"offset":50184},"end":{"line":1569,"col":33,"offset":50207},"abstract_content":"yystpcpy(yyres yystr)"},"$PTR2":{"start":{"line":1569,"col":36,"offset":50210},"end":{"line":1569,"col":41,"offset":50215},"abstract_content":"yyres"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cfc0ef0e32e9a58023ed69c45567b5a48544932a83e9cd1d3fcf6580b02bf556025e8df5a99c261a4223866af4b36f037891e8b264f1a120f9caee7bd973e16a_0","lines":"  return yystpcpy (yyres, yystr) - yyres;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1660,"col":11,"offset":54238},"end":{"line":1660,"col":18,"offset":54245},"extra":{"metavars":{"$VAR":{"start":{"line":1660,"col":11,"offset":54238},"end":{"line":1660,"col":18,"offset":54245},"abstract_content":"yycount"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b5cb51e912d6ad08f98d435c3781c291ab32c556569dfcbcf2c19ad3a99b0dc7f694bc6d4e9d3239371570d8e99fff2dcbce87bedb310694936ff89a538385d3_0","lines":"  switch (yycount)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1877,"col":25,"offset":59949},"end":{"line":1877,"col":37,"offset":59961},"extra":{"metavars":{"$TYPE":{"start":{"line":1820,"col":5,"offset":58394},"end":{"line":1820,"col":17,"offset":58406},"abstract_content":"yytype_int16"},"$PTR2":{"start":{"line":1877,"col":25,"offset":59949},"end":{"line":1877,"col":30,"offset":59954},"abstract_content":"yyssp"},"$PTR1":{"start":{"line":1877,"col":33,"offset":59957},"end":{"line":1877,"col":37,"offset":59961},"abstract_content":"yyss"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c717f13e65d04e849586a165b79bebe529fea87cc503cc641e7fdb391ae4a29fe1d8f9a82d85c8d65de7b462b825497bfd727b36b9c2f31323ef95dcb50e6fa_0","lines":"      YYSIZE_T yysize = yyssp - yyss + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3085,"col":11,"offset":94345},"end":{"line":3085,"col":19,"offset":94353},"extra":{"metavars":{"$VAR":{"start":{"line":3085,"col":11,"offset":94345},"end":{"line":3085,"col":19,"offset":94353},"abstract_content":"meridian"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b02077de46cf2688cde881f784e1c15a433e0fd75ea6507657192d01b34fa808cceec12f4390ef66949eb5c22ad41d6f41c0979533744362ac6bdf63fc10249d_0","lines":"  switch (meridian)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3190,"col":3,"offset":97281},"end":{"line":3190,"col":61,"offset":97339},"extra":{"metavars":{"$EXPR1":{"start":{"line":3190,"col":12,"offset":97290},"end":{"line":3190,"col":19,"offset":97297},"abstract_content":"wordlen","propagated_value":{"svalue_start":{"line":3189,"col":13,"offset":97264},"svalue_end":{"line":3189,"col":26,"offset":97277},"svalue_abstract_content":"strlen(word)"}},"$EXPR2":{"start":{"line":3190,"col":23,"offset":97301},"end":{"line":3190,"col":24,"offset":97302},"abstract_content":"3"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"563de197957a37ec8d83ee04b45c248b93fce1c0744dd9347de9a39d6426a0a63f03489d691c894f19f9b0f131604ad83f64d28ba0f53712590e18e2cbc8ac9c_0","lines":"  abbrev = wordlen == 3 || (wordlen == 4 && word[3] == '.');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3196,"col":3,"offset":97489},"end":{"line":3197,"col":15,"offset":97538},"extra":{"metavars":{"$EXPR1":{"start":{"line":3196,"col":8,"offset":97494},"end":{"line":3196,"col":10,"offset":97496},"abstract_content":"tp","propagated_value":{"svalue_start":{"line":3196,"col":13,"offset":97499},"svalue_end":{"line":3196,"col":35,"offset":97521},"svalue_abstract_content":"lookup_zone(pc word)"}},"$EXPR2":{"start":{"line":3196,"col":13,"offset":97499},"end":{"line":3196,"col":35,"offset":97521},"abstract_content":"lookup_zone(pc word)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6794d057fbcde0e5f28168eb3a4d5e6114d790b2c0f0a384d14615122f48b380de61acdc101cfbcc6f89db59ee28734b7ac36f34b4c162e4f06aee01dfefc420_0","lines":"  if ((tp = lookup_zone (pc, word)))\n    return tp;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3232,"col":3,"offset":98479},"end":{"line":3233,"col":15,"offset":98544},"extra":{"metavars":{"$EXPR1":{"start":{"line":3232,"col":24,"offset":98500},"end":{"line":3232,"col":26,"offset":98502},"abstract_content":"tp"},"$EXPR2":{"start":{"line":3232,"col":29,"offset":98505},"end":{"line":3232,"col":51,"offset":98527},"abstract_content":"lookup_zone(pc word)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6794d057fbcde0e5f28168eb3a4d5e6114d790b2c0f0a384d14615122f48b380de61acdc101cfbcc6f89db59ee28734b7ac36f34b4c162e4f06aee01dfefc420_1","lines":"  if (period_found && (tp = lookup_zone (pc, word)))\n    return tp;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3390,"col":7,"offset":102806},"end":{"line":3390,"col":16,"offset":102815},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3390,"col":7,"offset":102806},"end":{"line":3390,"col":12,"offset":102811},"abstract_content":"count"},"$SIGNED":{"start":{"line":3390,"col":15,"offset":102814},"end":{"line":3390,"col":16,"offset":102815},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7c0a544de7684f340ea5be10bfe373e16784bd5f6425e90b57ec02f818390e5f193d478eee93334b29de0d179a2dde590e8b6f5e6fb070332e142fb0a7c162c0_0","lines":"      count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3451,"col":14,"offset":104487},"end":{"line":3451,"col":27,"offset":104500},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":3451,"col":14,"offset":104487},"end":{"line":3451,"col":20,"offset":104493},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"01886801cf1a9677e50fdfe9b9986744ce552feeacaf2a374d841d7de236f789a1ca0bc876e9059af696703c604f6585f93a7eb57606b1a8792f4519bffffba3_0","lines":"  char *tz = getenv (\"TZ\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3454,"col":14,"offset":104531},"end":{"line":3454,"col":38,"offset":104555},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3454,"col":14,"offset":104531},"end":{"line":3454,"col":20,"offset":104537},"abstract_content":"tzsize"},"$SIGNED":{"start":{"line":3454,"col":37,"offset":104554},"end":{"line":3454,"col":38,"offset":104555},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e5f517ea1730e3bfabce7c6efe0809da7b0814aaac7b6923cf4189de5b24769c41d111c711a37221618726078383afc077b2c8feb16251f0b5461a5db15cc3a_0","lines":"      size_t tzsize = strlen (tz) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3456,"col":15,"offset":104603},"end":{"line":3456,"col":41,"offset":104629},"extra":{"metavars":{"$FUN":{"start":{"line":3456,"col":15,"offset":104603},"end":{"line":3456,"col":21,"offset":104609},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c443d5a85ea805a5cf0cdf0d1caf864919774901c68c33bc73671e8f0bb0e8b874a0ab4363aee7165327ed95fa26f9c53fabc5e60d593d693ecb07c9adf7415f_0","lines":"            ? memcpy (tzbuf, tz, tzsize)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3491,"col":7,"offset":105780},"end":{"line":3491,"col":68,"offset":105841},"extra":{"metavars":{"$SIGNED":{"start":{"line":3491,"col":7,"offset":105780},"end":{"line":3491,"col":8,"offset":105781},"abstract_content":"m"},"$UNSIGNED":{"start":{"line":3491,"col":27,"offset":105800},"end":{"line":3491,"col":28,"offset":105801},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"624716c9d93e3fed1d86a6a08765b527cdd5092cd044914ab007dcfde399b5970be9b3c1e4833140b5bbe8cf6d950439866a802fb74bd8226463c35281b97107_0","lines":"  int m = nstrftime (buf, n, \"(Y-M-D) %Y-%m-%d %H:%M:%S\", tm, 0, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3500,"col":7,"offset":106189},"end":{"line":3500,"col":78,"offset":106260},"extra":{"metavars":{"$FUN":{"start":{"line":3500,"col":7,"offset":106189},"end":{"line":3500,"col":15,"offset":106197},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_1","lines":"      snprintf (&buf[m],n-m,\" TZ=%+03d:%02d\", (int)(tz/60), abs ((int)tz)%60);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3508,"col":3,"offset":106377},"end":{"line":3509,"col":57,"offset":106475},"extra":{"metavars":{"$FUN":{"start":{"line":3508,"col":3,"offset":106377},"end":{"line":3508,"col":11,"offset":106385},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_2","lines":"  snprintf (buf,n,\"(Y-M-D) %04d-%02d-%02d\",\n            tm->tm_year+1900, tm->tm_mon+1, tm->tm_mday);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3516,"col":3,"offset":106586},"end":{"line":3516,"col":73,"offset":106656},"extra":{"metavars":{"$FUN":{"start":{"line":3516,"col":3,"offset":106586},"end":{"line":3516,"col":11,"offset":106594},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_3","lines":"  snprintf (buf,n,\"%02d:%02d:%02d\", tm->tm_hour, tm->tm_min, tm->tm_sec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3539,"col":3,"offset":107413},"end":{"line":3539,"col":55,"offset":107465},"extra":{"metavars":{"$EXPR1":{"start":{"line":3539,"col":26,"offset":107436},"end":{"line":3539,"col":37,"offset":107447},"abstract_content":"tm0->->tm_sec"},"$EXPR2":{"start":{"line":3539,"col":42,"offset":107452},"end":{"line":3539,"col":53,"offset":107463},"abstract_content":"tm1->->tm_sec"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e9f6bd78a19acfd22c397a2fb10708bf1c903e18a69a55a7c7b833660f3e50c8c2fc86509af3a607827f3a335b087e59ce66628f66bf6f9c16c12217e730892b_0","lines":"  const bool eq_sec   = (tm0->tm_sec  == tm1->tm_sec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3540,"col":3,"offset":107468},"end":{"line":3540,"col":55,"offset":107520},"extra":{"metavars":{"$EXPR1":{"start":{"line":3540,"col":26,"offset":107491},"end":{"line":3540,"col":37,"offset":107502},"abstract_content":"tm0->->tm_min"},"$EXPR2":{"start":{"line":3540,"col":42,"offset":107507},"end":{"line":3540,"col":53,"offset":107518},"abstract_content":"tm1->->tm_min"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0832a525da80e429b64971594c152d3bc9d1e0c46a5f9234cd14a6e851e9771da6b1bd7e1f2d42761a6d5500e211c40295102a5cba3d121f0a6a2830a9fc3126_0","lines":"  const bool eq_min   = (tm0->tm_min  == tm1->tm_min);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3541,"col":3,"offset":107523},"end":{"line":3541,"col":56,"offset":107576},"extra":{"metavars":{"$EXPR1":{"start":{"line":3541,"col":26,"offset":107546},"end":{"line":3541,"col":38,"offset":107558},"abstract_content":"tm0->->tm_hour"},"$EXPR2":{"start":{"line":3541,"col":42,"offset":107562},"end":{"line":3541,"col":54,"offset":107574},"abstract_content":"tm1->->tm_hour"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0752974acaf16c398ecf57b0b9516aa77fd97d593884cea3a3eedb9dafa2f42869bfce804fbdc96d4e066025de286304d79f3f9374e48debe4acab303e9bbb77_0","lines":"  const bool eq_hour  = (tm0->tm_hour == tm1->tm_hour);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3542,"col":3,"offset":107579},"end":{"line":3542,"col":56,"offset":107632},"extra":{"metavars":{"$EXPR1":{"start":{"line":3542,"col":26,"offset":107602},"end":{"line":3542,"col":38,"offset":107614},"abstract_content":"tm0->->tm_mday"},"$EXPR2":{"start":{"line":3542,"col":42,"offset":107618},"end":{"line":3542,"col":54,"offset":107630},"abstract_content":"tm1->->tm_mday"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"797d633e5f011c5e5f459bedbc3e68293cc26a946880c16148847f5e9c904f8d4e9386fbf158a7a6ed58ff5cffce94274d80a05bcb9309720ec733705eb7777f_0","lines":"  const bool eq_mday  = (tm0->tm_mday == tm1->tm_mday);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3543,"col":3,"offset":107635},"end":{"line":3543,"col":55,"offset":107687},"extra":{"metavars":{"$EXPR1":{"start":{"line":3543,"col":26,"offset":107658},"end":{"line":3543,"col":37,"offset":107669},"abstract_content":"tm0->->tm_mon"},"$EXPR2":{"start":{"line":3543,"col":42,"offset":107674},"end":{"line":3543,"col":53,"offset":107685},"abstract_content":"tm1->->tm_mon"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cd5f7a1687f007b92ac41a65f1ef6bc057403a05b8162cae772f441450b406b7bc6724e7090c4e81671d59a70eabf1b754d93f0e11b6888aba8d9d8904558aa3_0","lines":"  const bool eq_month = (tm0->tm_mon  == tm1->tm_mon);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3544,"col":3,"offset":107690},"end":{"line":3544,"col":56,"offset":107743},"extra":{"metavars":{"$EXPR1":{"start":{"line":3544,"col":26,"offset":107713},"end":{"line":3544,"col":38,"offset":107725},"abstract_content":"tm0->->tm_year"},"$EXPR2":{"start":{"line":3544,"col":42,"offset":107729},"end":{"line":3544,"col":54,"offset":107741},"abstract_content":"tm1->->tm_year"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21ab14648b8e94b1ab97ab942eadfeea363f23b171427a1761ad4e4da9d4f8d7da11a8cca4f778814810a01eb204af642333ad52eaa594e62a1381bf69437240_0","lines":"  const bool eq_year  = (tm0->tm_year == tm1->tm_year);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3559,"col":3,"offset":108340},"end":{"line":3562,"col":65,"offset":108582},"extra":{"metavars":{"$RET":{"start":{"line":3559,"col":3,"offset":108340},"end":{"line":3559,"col":4,"offset":108341},"abstract_content":"i"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3087a4f5f2372d42fa97a6e57094343eec9509bc75bcd68111a1dc8d57c4ae24736b2cbacb3fcb1b276e858d687c5696337b2fa8bc9d48bc5c4569a03613fe71_0","lines":"  i = snprintf (tmp, sizeof(tmp),\n                \"                                 %4s %2s %2s %2s %2s %2s\",\n                eq_year?\"\":\"----\", eq_month?\"\":\"--\", eq_mday?\"\":\"--\",\n                eq_hour?\"\":\"--\", eq_min?\"\":\"--\", eq_sec?\"\":\"--\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3559,"col":7,"offset":108344},"end":{"line":3562,"col":65,"offset":108582},"extra":{"metavars":{"$FUN":{"start":{"line":3559,"col":7,"offset":108344},"end":{"line":3559,"col":15,"offset":108352},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_4","lines":"  i = snprintf (tmp, sizeof(tmp),\n                \"                                 %4s %2s %2s %2s %2s %2s\",\n                eq_year?\"\":\"----\", eq_month?\"\":\"--\", eq_mday?\"\":\"--\",\n                eq_hour?\"\":\"--\", eq_min?\"\":\"--\", eq_sec?\"\":\"--\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3647,"col":14,"offset":110750},"end":{"line":3647,"col":24,"offset":110760},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3647,"col":14,"offset":110750},"end":{"line":3647,"col":20,"offset":110756},"abstract_content":"tzsize"},"$SIGNED":{"start":{"line":3647,"col":23,"offset":110759},"end":{"line":3647,"col":24,"offset":110760},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e5f517ea1730e3bfabce7c6efe0809da7b0814aaac7b6923cf4189de5b24769c41d111c711a37221618726078383afc077b2c8feb16251f0b5461a5db15cc3a_1","lines":"      size_t tzsize = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3665,"col":34,"offset":111221},"end":{"line":3665,"col":50,"offset":111237},"extra":{"metavars":{"$FUN":{"start":{"line":3665,"col":34,"offset":111221},"end":{"line":3665,"col":41,"offset":111228},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68585412cca00fabfda735d2ea6252d03f4fdb45245a96aca35c8013ab290d31769a48f4d2099731182a0dc544f1e4df78c37b28e35467010486a0fcc326a128_0","lines":"            z = tz1 = large_tz ? xmalloc (tzsize) : tz1buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3669,"col":13,"offset":111369},"end":{"line":3669,"col":52,"offset":111408},"extra":{"metavars":{"$EXPR1":{"start":{"line":3669,"col":25,"offset":111381},"end":{"line":3669,"col":46,"offset":111402},"abstract_content":"setenv(\"TZ\"tz1 1)"},"$EXPR2":{"start":{"line":3669,"col":50,"offset":111406},"end":{"line":3669,"col":51,"offset":111407},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"da6da81c69fe3f277a4dc53925e5a367a436289163670437d84b25167c5df98ad9fb11985204175aee7b38f921e82509b8891ed35502ecdfa209dead9f730fe4_0","lines":"            setenv_ok = setenv (\"TZ\", tz1, 1) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3669,"col":25,"offset":111381},"end":{"line":3669,"col":46,"offset":111402},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":3669,"col":25,"offset":111381},"end":{"line":3669,"col":31,"offset":111387},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"986abb21172e6627fede32a2a96efe828de4ab6d4354346c9bd9d652b278e09c707156c81746f4f986ad227c24e7bc2ee647e5e5e3ed92558bbfb7f93e6d508d_0","lines":"            setenv_ok = setenv (\"TZ\", tz1, 1) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3671,"col":15,"offset":111449},"end":{"line":3671,"col":26,"offset":111460},"extra":{"metavars":{"$PTR":{"start":{"line":3671,"col":21,"offset":111455},"end":{"line":3671,"col":24,"offset":111458},"abstract_content":"tz1"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d598275f8854821bfe1df48499492f657028625f274f3c01d8d54124ec28dcae8979a1fc4701cb8ac0039f8970e8ae95d435bbb7daf81d88138cfa6af44fc70c_0","lines":"              free (tz1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3814,"col":12,"offset":115549},"end":{"line":3837,"col":10,"offset":116257},"extra":{"metavars":{"$EXPR1":{"start":{"line":3814,"col":17,"offset":115554},"end":{"line":3814,"col":23,"offset":115560},"abstract_content":"tz_env","propagated_value":{"svalue_start":{"line":3814,"col":26,"offset":115563},"svalue_end":{"line":3814,"col":38,"offset":115575},"svalue_abstract_content":"getenv(\"TZ\")"}},"$EXPR2":{"start":{"line":3814,"col":26,"offset":115563},"end":{"line":3814,"col":38,"offset":115575},"abstract_content":"getenv(\"TZ\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fce7ca72804a843e59a690cef74c7a9b6c5abba88dd16bfdd342f51a03216c68b11dacec82c677ad9621e4e82bddea4335b22d835922f2752a69fab6293f80c5_0","lines":"      else if ((tz_env = getenv(\"TZ\")))\n        {\n          if (tz_was_altered)\n            {\n              snprintf (dbg_tm, sizeof(dbg_tm), _(\"TZ=\\\"%s\\\" in date string\"),\n                        tz_env);\n              tz_src = dbg_tm;\n            }\n          else if (STREQ(tz_env,\"UTC0\"))\n            {\n              /* Special case: using 'date -u' simply set TZ=UTC0 */\n              tz_src = _(\"TZ=UTC0 environment value or -u\");\n            }\n          else\n            {\n              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);\n              tz_src = dbg_tm;\n            }\n        }\n      else\n        {\n          tz_src = _(\"system default\");\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3814,"col":26,"offset":115563},"end":{"line":3814,"col":38,"offset":115575},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":3814,"col":26,"offset":115563},"end":{"line":3814,"col":32,"offset":115569},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"01886801cf1a9677e50fdfe9b9986744ce552feeacaf2a374d841d7de236f789a1ca0bc876e9059af696703c604f6585f93a7eb57606b1a8792f4519bffffba3_1","lines":"      else if ((tz_env = getenv(\"TZ\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3818,"col":15,"offset":115646},"end":{"line":3819,"col":32,"offset":115742},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_6","lines":"              snprintf (dbg_tm, sizeof(dbg_tm), _(\"TZ=\\\"%s\\\" in date string\"),\n                        tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3818,"col":15,"offset":115646},"end":{"line":3819,"col":32,"offset":115742},"extra":{"metavars":{"$FUN":{"start":{"line":3818,"col":15,"offset":115646},"end":{"line":3818,"col":23,"offset":115654},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_5","lines":"              snprintf (dbg_tm, sizeof(dbg_tm), _(\"TZ=\\\"%s\\\" in date string\"),\n                        tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3818,"col":15,"offset":115646},"end":{"line":3819,"col":32,"offset":115742},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":2,"offset":1},"abstract_content":"_"},"$TYPE":{"start":{"line":3625,"col":3,"offset":110341},"end":{"line":3625,"col":7,"offset":110345},"abstract_content":"char"},"$LEN":{"start":{"line":3625,"col":15,"offset":110353},"end":{"line":3625,"col":25,"offset":110363},"abstract_content":"DBGBUFSIZE"},"$FUN":{"start":{"line":3818,"col":15,"offset":115646},"end":{"line":3818,"col":23,"offset":115654},"abstract_content":"snprintf"},"$BUF":{"start":{"line":3818,"col":25,"offset":115656},"end":{"line":3818,"col":31,"offset":115662},"abstract_content":"dbg_tm"},"$N":{"start":{"line":3818,"col":33,"offset":115664},"end":{"line":3818,"col":46,"offset":115677},"abstract_content":"sizeof dbg_tm"},"$FMT":{"start":{"line":3818,"col":49,"offset":115680},"end":{"line":3818,"col":78,"offset":115709},"abstract_content":"_(\"TZ=\\\"%s\\\" in date string\")"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c30277a4f5b527f5a708d28eccfb1cea2d31912ed21671d04dc54d4d65e315f700482e1ef84d54f11c92a34719a1eb3caf6321436bdd25c88e593c818f271e3b_0","lines":"              snprintf (dbg_tm, sizeof(dbg_tm), _(\"TZ=\\\"%s\\\" in date string\"),\n                        tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3829,"col":15,"offset":116031},"end":{"line":3830,"col":66,"offset":116130},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_7","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3829,"col":15,"offset":116031},"end":{"line":3830,"col":66,"offset":116130},"extra":{"metavars":{"$FUN":{"start":{"line":3829,"col":15,"offset":116031},"end":{"line":3829,"col":23,"offset":116039},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_6","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3829,"col":15,"offset":116031},"end":{"line":3830,"col":66,"offset":116130},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":2,"offset":1},"abstract_content":"_"},"$TYPE":{"start":{"line":3625,"col":3,"offset":110341},"end":{"line":3625,"col":7,"offset":110345},"abstract_content":"char"},"$LEN":{"start":{"line":3625,"col":15,"offset":110353},"end":{"line":3625,"col":25,"offset":110363},"abstract_content":"DBGBUFSIZE"},"$FUN":{"start":{"line":3829,"col":15,"offset":116031},"end":{"line":3829,"col":23,"offset":116039},"abstract_content":"snprintf"},"$BUF":{"start":{"line":3829,"col":25,"offset":116041},"end":{"line":3829,"col":31,"offset":116047},"abstract_content":"dbg_tm"},"$N":{"start":{"line":3829,"col":33,"offset":116049},"end":{"line":3829,"col":46,"offset":116062},"abstract_content":"sizeof dbg_tm"},"$FMT":{"start":{"line":3830,"col":25,"offset":116089},"end":{"line":3830,"col":57,"offset":116121},"abstract_content":"_(\"TZ=\\\"%s\\\" environment value\")"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96729bb180e64e57ff93b7b1e477c0b81ff520c5431e539c1c461cfb378c6cf2280192ee26cf929a5e4b08d485b0923c0ab39983d0dd58a496cfeacfa51f1c22_0","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3849,"col":7,"offset":116501},"end":{"line":3866,"col":10,"offset":117288},"extra":{"metavars":{"$EXPR1":{"start":{"line":3849,"col":16,"offset":116510},"end":{"line":3849,"col":29,"offset":116523},"abstract_content":"pc.times_seen"},"$EXPR2":{"start":{"line":3849,"col":32,"offset":116526},"end":{"line":3849,"col":45,"offset":116539},"abstract_content":"pc.dates_seen"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6208580245cbb6eaceb195303b3e8385a20fda0646f985cd90625702e5038c9124acb5295b2033e404de6e7139f081f2d592a9febbda2b0743792c5f3bf00518_0","lines":"      if (1 < (pc.times_seen | pc.dates_seen | pc.days_seen | pc.dsts_seen\n               | (pc.local_zones_seen + pc.zones_seen)))\n        {\n          if (pc.parse_datetime_debug)\n            {\n              if (pc.times_seen > 1)\n                dbg_printf (\"error: seen multiple time parts\\n\");\n              if (pc.dates_seen > 1)\n                dbg_printf (\"error: seen multiple date parts\\n\");\n              if (pc.days_seen > 1)\n                dbg_printf (\"error: seen multiple days parts\\n\");\n              if (pc.dsts_seen > 1)\n                dbg_printf (\"error: seen multiple daylight-saving parts\\n\");\n              if ( (pc.local_zones_seen + pc.zones_seen) > 1)\n                dbg_printf (\"error: seen multiple time-zone parts\\n\");\n            }\n          goto fail;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3876,"col":15,"offset":117630},"end":{"line":3877,"col":64,"offset":117738},"extra":{"metavars":{"$EXPR1":{"start":{"line":3876,"col":34,"offset":117649},"end":{"line":3876,"col":45,"offset":117660},"abstract_content":"pc.meridian"},"$EXPR2":{"start":{"line":3876,"col":47,"offset":117662},"end":{"line":3876,"col":52,"offset":117667},"abstract_content":"MERam"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"18b569e662de913599539ab8b794284476bc83bc702d904e8147e5a6c07f8af7074222903074ff157d4028b5f007e53d8203dae350f28a8e125b3946d31bfef4_0","lines":"              const char* mrd = (pc.meridian==MERam)?\"am\":\n                                  (pc.meridian==MERpm)?\"pm\":\"\";","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3899,"col":7,"offset":118549},"end":{"line":3900,"col":26,"offset":118624},"extra":{"metavars":{"$EXPR1":{"start":{"line":3899,"col":11,"offset":118553},"end":{"line":3899,"col":24,"offset":118566},"abstract_content":"pc.dates_seen"},"$EXPR2":{"start":{"line":3899,"col":27,"offset":118569},"end":{"line":3899,"col":39,"offset":118581},"abstract_content":"pc.days_seen"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"edc8d2c9f8707f33e53a07c23b92cbd94af2e8de393d6a7efcc5846c02824cedc540ff6704baf44b5b5885de29905c559e7dbbc22f7b9f8a27d042c0f491d929_0","lines":"      if (pc.dates_seen | pc.days_seen | pc.times_seen)\n        tm.tm_isdst = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3934,"col":19,"offset":119975},"end":{"line":3934,"col":57,"offset":120013},"extra":{"metavars":{"$NARROW":{"start":{"line":3934,"col":19,"offset":119975},"end":{"line":3934,"col":36,"offset":119992},"abstract_content":"abs_time_zone_min"},"$LARGE":{"start":{"line":3934,"col":39,"offset":119995},"end":{"line":3934,"col":52,"offset":120008},"abstract_content":"abs_time_zone"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0444bca0822fe58bb559b24530465099b850a9c9f746b77c87a61aa4449c64c9edc1e9d3746b9bc14b221778eec55da2cf59a5e8498036f51adb4e0c5bdff93d_0","lines":"              int abs_time_zone_min = abs_time_zone % 60;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3938,"col":15,"offset":120181},"end":{"line":3939,"col":62,"offset":120297},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"XXX%s%ld:%02d\""},"$BUF":{"start":{"line":3938,"col":24,"offset":120190},"end":{"line":3938,"col":30,"offset":120196},"abstract_content":"tz1buf"},"$FMT":{"start":{"line":3938,"col":32,"offset":120198},"end":{"line":3938,"col":47,"offset":120213},"abstract_content":"\"XXX%s%ld:%02d\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"d0eda1a91e2cb629f9ca25df63a28928e9f6453e9a73bfb1bb02262b1bb1a8c6bf6c73c0e8bd67a2c5b84fb99fbabd0f34066fe6260cb942423786d2d8ce473a_0","lines":"              sprintf (tz1buf, \"XXX%s%ld:%02d\", &\"-\"[time_zone < 0],\n                       abs_time_zone_hour, abs_time_zone_min);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3938,"col":15,"offset":120181},"end":{"line":3939,"col":62,"offset":120297},"extra":{"metavars":{"$FUN":{"start":{"line":3938,"col":15,"offset":120181},"end":{"line":3938,"col":22,"offset":120188},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ce88c79c94a65bb086c2cdb0be8330d10bc2c7a02ac8b5704dbf51c3d8447f4454f6e6101c4f2bb21810e51e9abc098549785ca22d940183c3314d583f276742_0","lines":"              sprintf (tz1buf, \"XXX%s%ld:%02d\", &\"-\"[time_zone < 0],\n                       abs_time_zone_hour, abs_time_zone_min);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3938,"col":15,"offset":120181},"end":{"line":3939,"col":62,"offset":120297},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"XXX%s%ld:%02d\""},"$TYPE":{"start":{"line":3935,"col":15,"offset":120029},"end":{"line":3935,"col":19,"offset":120033},"abstract_content":"char"},"$LEN":{"start":{"line":3935,"col":27,"offset":120041},"end":{"line":3935,"col":76,"offset":120090},"abstract_content":"sizeof\"XXX+0:00\"+TYPE_WIDTH(pc.time_zone)/3"},"$FUN":{"start":{"line":3938,"col":15,"offset":120181},"end":{"line":3938,"col":22,"offset":120188},"abstract_content":"sprintf"},"$BUF":{"start":{"line":3938,"col":24,"offset":120190},"end":{"line":3938,"col":30,"offset":120196},"abstract_content":"tz1buf"},"$FMT":{"start":{"line":3938,"col":32,"offset":120198},"end":{"line":3938,"col":47,"offset":120213},"abstract_content":"\"XXX%s%ld:%02d\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ca56e01ae637ec79cf0fc820e95d6aec71d962f01789d32006054f7cfd7d97705322f75a74ad865a200a1e08d6535ba60a43948b8a43154bd23dbf6fef839a89_0","lines":"              sprintf (tz1buf, \"XXX%s%ld:%02d\", &\"-\"[time_zone < 0],\n                       abs_time_zone_hour, abs_time_zone_min);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3940,"col":19,"offset":120317},"end":{"line":3940,"col":43,"offset":120341},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":3940,"col":19,"offset":120317},"end":{"line":3940,"col":25,"offset":120323},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"986abb21172e6627fede32a2a96efe828de4ab6d4354346c9bd9d652b278e09c707156c81746f4f986ad227c24e7bc2ee647e5e5e3ed92558bbfb7f93e6d508d_1","lines":"              if (setenv (\"TZ\", tz1buf, 1) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4004,"col":7,"offset":122707},"end":{"line":4060,"col":10,"offset":124995},"extra":{"metavars":{"$EXPR1":{"start":{"line":4004,"col":11,"offset":122711},"end":{"line":4004,"col":22,"offset":122722},"abstract_content":"pc.rel.year"},"$EXPR2":{"start":{"line":4004,"col":25,"offset":122725},"end":{"line":4004,"col":37,"offset":122737},"abstract_content":"pc.rel.month"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6683afd33d280ad7ae3ac496f1dd9ed823a04a44e428269c760bb327d539399a8b61140bac0a9b311f758900f5647c5c55cb3938d04e381f6d868029f44f108e_0","lines":"      if (pc.rel.year | pc.rel.month | pc.rel.day)\n        {\n          if (pc.parse_datetime_debug)\n            {\n              if ((pc.rel.year != 0 || pc.rel.month !=0) && tm.tm_mday==1)\n                dbg_printf (_(\"warning: when adding relative months/years, \" \\\n                              \"it is recommended to specify the 15th of the \" \\\n                              \"months\\n\"));\n\n              if (pc.rel.day != 0 && tm.tm_hour==0)\n                dbg_printf (_(\"warning: when adding relative days, \"    \\\n                              \"it is recommended to specify 12:00pm\\n\"));\n            }\n\n          int year = tm.tm_year + pc.rel.year;\n          int month = tm.tm_mon + pc.rel.month;\n          int day = tm.tm_mday + pc.rel.day;\n          if (((year < tm.tm_year) ^ (pc.rel.year < 0))\n              | ((month < tm.tm_mon) ^ (pc.rel.month < 0))\n              | ((day < tm.tm_mday) ^ (pc.rel.day < 0)))\n            {\n              /* TODO: what is the actual error? int-value wrap-around? */\n              if (pc.parse_datetime_debug)\n                dbg_printf (_(\"error: %s:%d\\n\"), __FILE__,__LINE__);\n\n              goto fail;\n            }\n          tm.tm_year = year;\n          tm.tm_mon = month;\n          tm.tm_mday = day;\n          tm.tm_hour = tm0.tm_hour;\n          tm.tm_min = tm0.tm_min;\n          tm.tm_sec = tm0.tm_sec;\n          tm.tm_isdst = tm0.tm_isdst;\n          Start = mktime (&tm);\n          if (Start == (time_t) -1)\n            {\n              if (pc.parse_datetime_debug)\n                dbg_printf(_(\"error: adding relative date resulted \" \\\n                             \"in an invalid date: '%s'\\n\"),\n                           debug_strfdatetime (&tm, &pc, dbg_tm,\n                                               sizeof (dbg_tm)));\n\n              goto fail;\n            }\n\n          if (pc.parse_datetime_debug)\n            {\n              dbg_printf (_(\"after date adjustment \"                    \\\n                            \"(%+ld years, %+ld months, %+ld days),\\n\"),\n                          pc.rel.year, pc.rel.month, pc.rel.day);\n              dbg_printf (_(\"    new date/time = '%s'\\n\"),\n                          debug_strfdatetime (&tm, &pc, dbg_tm,\n                                              sizeof (dbg_tm)));\n            }\n\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4021,"col":11,"offset":123459},"end":{"line":4030,"col":14,"offset":123861},"extra":{"metavars":{"$EXPR1":{"start":{"line":4021,"col":17,"offset":123465},"end":{"line":4021,"col":54,"offset":123502},"abstract_content":"year<tm.tm_year^pc.rel.year<0"},"$EXPR2":{"start":{"line":4022,"col":19,"offset":123523},"end":{"line":4022,"col":57,"offset":123561},"abstract_content":"month<tm.tm_mon^pc.rel.month<0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6913824529a3beb41010599c0e50c7c29f52e3e9cc83e2235dc3d8daa4df3ed38323d2e3053c74fd915571db4582e5a6b41fc79d71dfc14bfc2c525af230f02a_0","lines":"          if (((year < tm.tm_year) ^ (pc.rel.year < 0))\n              | ((month < tm.tm_mon) ^ (pc.rel.month < 0))\n              | ((day < tm.tm_mday) ^ (pc.rel.day < 0)))\n            {\n              /* TODO: what is the actual error? int-value wrap-around? */\n              if (pc.parse_datetime_debug)\n                dbg_printf (_(\"error: %s:%d\\n\"), __FILE__,__LINE__);\n\n              goto fail;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4121,"col":9,"offset":127193},"end":{"line":4134,"col":14,"offset":127658},"extra":{"metavars":{"$EXPR1":{"start":{"line":4121,"col":14,"offset":127198},"end":{"line":4121,"col":42,"offset":127226},"abstract_content":"d1/60*60^pc.rel.hour"},"$EXPR2":{"start":{"line":4122,"col":16,"offset":127243},"end":{"line":4122,"col":40,"offset":127267},"abstract_content":"d2/60^pc.rel.minutes"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c95b8e937dd4e9178270cfecb58b0cac1e76df6e321ce8adb8c3b3067b3f3d81dca0a64577bc94ca937b83138c7ef39ea4c241dca13853782264664512a9f52_0","lines":"        if ((d1 / (60 * 60) ^ pc.rel.hour)\n            | (d2 / 60 ^ pc.rel.minutes)\n            | ((t1 < t0) ^ (d1 < 0))\n            | ((t2 < t1) ^ (d2 < 0))\n            | ((t3 < t2) ^ (d3 < 0))\n            | ((t4 < t3) ^ (d4 < 0))\n            | (t5 != t4))\n            {\n              if (pc.parse_datetime_debug)\n                dbg_printf (_(\"error: adding relative time caused an \" \\\n                              \"overflow\\n\"));\n\n              goto fail;\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4136,"col":11,"offset":127670},"end":{"line":4143,"col":14,"offset":128094},"extra":{"metavars":{"$EXPR1":{"start":{"line":4137,"col":19,"offset":127716},"end":{"line":4137,"col":30,"offset":127727},"abstract_content":"pc.rel.hour"},"$EXPR2":{"start":{"line":4137,"col":33,"offset":127730},"end":{"line":4137,"col":47,"offset":127744},"abstract_content":"pc.rel.minutes"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3b2522e017876b4a7505ba8b7d3e05e134c90eb3652cfc245d2a4ff6260ccdb541ce51aa83dcbcef0f01ed65b6e6bb1b29e0ca197353a690df6c367623e4fb48_0","lines":"          if (pc.parse_datetime_debug\n              && (pc.rel.hour | pc.rel.minutes | pc.rel.seconds | pc.rel.ns))\n            {\n              dbg_printf (_(\"after time adjustment (%+ld hours, \" \\\n                            \"%+ld minutes, %+ld seconds, %+ld ns),\\n\"),\n                          pc.rel.hour,pc.rel.minutes,pc.rel.seconds,pc.rel.ns);\n              dbg_printf (_(\"    new time = %ld epoch-seconds\\n\"),t5);\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4156,"col":5,"offset":128249},"end":{"line":4156,"col":64,"offset":128308},"extra":{"metavars":{"$EXPR1":{"start":{"line":4156,"col":12,"offset":128256},"end":{"line":4156,"col":57,"offset":128301},"abstract_content":"tz0 setenv(\"TZ\"tz0 1)unsetenv(\"TZ\")"},"$EXPR2":{"start":{"line":4156,"col":62,"offset":128306},"end":{"line":4156,"col":63,"offset":128307},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c3dd3555a613c30750332271e4a6f3e4dbe2091836f91ce2abaaaf9507ce3303729e783af05dcd762f84aeff853f545416bbc22991dc8ec99f0f1a786a4ef6e_0","lines":"    ok &= (tz0 ? setenv (\"TZ\", tz0, 1) : unsetenv (\"TZ\")) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4156,"col":18,"offset":128262},"end":{"line":4156,"col":39,"offset":128283},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":4156,"col":18,"offset":128262},"end":{"line":4156,"col":24,"offset":128268},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"986abb21172e6627fede32a2a96efe828de4ab6d4354346c9bd9d652b278e09c707156c81746f4f986ad227c24e7bc2ee647e5e5e3ed92558bbfb7f93e6d508d_2","lines":"    ok &= (tz0 ? setenv (\"TZ\", tz0, 1) : unsetenv (\"TZ\")) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4156,"col":42,"offset":128286},"end":{"line":4156,"col":57,"offset":128301},"extra":{"metavars":{"$1":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"set"},"$FUN":{"start":{"line":4156,"col":42,"offset":128286},"end":{"line":4156,"col":50,"offset":128294},"abstract_content":"unsetenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5939e3c5541f7987c000a6142d301470ca9c2ea1fc45fc492ef8d587504a5f4c9802b8736503c00fdf88ad33e7a824e8a6b8cd9ccffe0ccc55b6daac3fad070_0","lines":"    ok &= (tz0 ? setenv (\"TZ\", tz0, 1) : unsetenv (\"TZ\")) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4158,"col":5,"offset":128334},"end":{"line":4158,"col":16,"offset":128345},"extra":{"metavars":{"$PTR":{"start":{"line":4158,"col":11,"offset":128340},"end":{"line":4158,"col":14,"offset":128343},"abstract_content":"tz0"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"60925bf9376f8c8374d33ed622514b7661356ccfaf2b4266db1f3958710fefb5ff7161292b28d4ce15babf23ca3bc1dcce77d71f067963f4312357de9e4bd981_0","lines":"    free (tz0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4167,"col":7,"offset":128574},"end":{"line":4184,"col":10,"offset":129072},"extra":{"metavars":{"$EXPR1":{"start":{"line":4167,"col":12,"offset":128579},"end":{"line":4167,"col":18,"offset":128585},"abstract_content":"tz_env","propagated_value":{"svalue_start":{"line":4167,"col":21,"offset":128588},"svalue_end":{"line":4167,"col":33,"offset":128600},"svalue_abstract_content":"getenv(\"TZ\")"}},"$EXPR2":{"start":{"line":4167,"col":21,"offset":128588},"end":{"line":4167,"col":33,"offset":128600},"abstract_content":"getenv(\"TZ\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fce7ca72804a843e59a690cef74c7a9b6c5abba88dd16bfdd342f51a03216c68b11dacec82c677ad9621e4e82bddea4335b22d835922f2752a69fab6293f80c5_1","lines":"      if ((tz_env = getenv(\"TZ\")))\n        {\n          /* Special case: using 'date -u' simply set TZ=UTC0 */\n          if (STREQ(tz_env,\"UTC0\"))\n            {\n              tz_src = _(\"TZ=UTC0 environment value or -u\");\n            }\n          else\n            {\n              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);\n              tz_src = dbg_tm;\n            }\n        }\n      else\n        {\n          tz_src = _(\"system default\");\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4167,"col":21,"offset":128588},"end":{"line":4167,"col":33,"offset":128600},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":4167,"col":21,"offset":128588},"end":{"line":4167,"col":27,"offset":128594},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"01886801cf1a9677e50fdfe9b9986744ce552feeacaf2a374d841d7de236f789a1ca0bc876e9059af696703c604f6585f93a7eb57606b1a8792f4519bffffba3_2","lines":"      if ((tz_env = getenv(\"TZ\")))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4176,"col":15,"offset":128846},"end":{"line":4177,"col":66,"offset":128945},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"6e28d9dbbf5a7353422f6ca4357a4a999a90cf15831d464a712f080fc8c7bfe4c082a40a7775947dd89634154126c1e99f5d0b95ab0031f9ec2ced7bd5a75548_8","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4176,"col":15,"offset":128846},"end":{"line":4177,"col":66,"offset":128945},"extra":{"metavars":{"$FUN":{"start":{"line":4176,"col":15,"offset":128846},"end":{"line":4176,"col":23,"offset":128854},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d3541947fc4caf317c8299176b2f5acac6b6a35fac43c80c59852a60bd6969f2574b3660f4e4a42bc1bab93650e9dce87ed70ae7482ba58e53f1ff1e722a530_7","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4176,"col":15,"offset":128846},"end":{"line":4177,"col":66,"offset":128945},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":2,"offset":1},"abstract_content":"_"},"$TYPE":{"start":{"line":3625,"col":3,"offset":110341},"end":{"line":3625,"col":7,"offset":110345},"abstract_content":"char"},"$LEN":{"start":{"line":3625,"col":15,"offset":110353},"end":{"line":3625,"col":25,"offset":110363},"abstract_content":"DBGBUFSIZE"},"$FUN":{"start":{"line":4176,"col":15,"offset":128846},"end":{"line":4176,"col":23,"offset":128854},"abstract_content":"snprintf"},"$BUF":{"start":{"line":4176,"col":25,"offset":128856},"end":{"line":4176,"col":31,"offset":128862},"abstract_content":"dbg_tm"},"$N":{"start":{"line":4176,"col":33,"offset":128864},"end":{"line":4176,"col":46,"offset":128877},"abstract_content":"sizeof dbg_tm"},"$FMT":{"start":{"line":4177,"col":25,"offset":128904},"end":{"line":4177,"col":57,"offset":128936},"abstract_content":"_(\"TZ=\\\"%s\\\" environment value\")"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"96729bb180e64e57ff93b7b1e477c0b81ff520c5431e539c1c461cfb378c6cf2280192ee26cf929a5e4b08d485b0923c0ab39983d0dd58a496cfeacfa51f1c22_1","lines":"              snprintf (dbg_tm, sizeof(dbg_tm),\n                        _(\"TZ=\\\"%s\\\" environment value\"), tz_env);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4219,"col":10,"offset":130040},"end":{"line":4219,"col":41,"offset":130071},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":4219,"col":10,"offset":130040},"end":{"line":4219,"col":15,"offset":130045},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4dc8fa78c1d5d5d7c043b0032e5dae0525565144a2ae89cfdfef55d9f81143ee20f7b4213e5e7f4dbf1c44aeacbfd28e3406bd9edd35043b00abf32d5d0845fe_0","lines":"  while (fgets (buff, BUFSIZ - 1, stdin) && buff[0])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":4225,"col":12,"offset":130251},"end":{"line":4236,"col":10,"offset":130641},"extra":{"metavars":{"$EXPR1":{"start":{"line":4225,"col":19,"offset":130258},"end":{"line":4225,"col":21,"offset":130260},"abstract_content":"tm"},"$EXPR2":{"start":{"line":4225,"col":24,"offset":130263},"end":{"line":4225,"col":45,"offset":130284},"abstract_content":"localtime(&d.tv_sec)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"83573d05499aa005a9b90066a83adcf415e4e0efd25c84975916c856565e57ae757526fac189b53a15a54b99b652dab592ae71a88c6c55b8f6cb641fa4975d45_0","lines":"      else if (! (tm = localtime (&d.tv_sec)))\n        {\n          long int sec = d.tv_sec;\n          printf (\"localtime (%ld) failed\\n\", sec);\n        }\n      else\n        {\n          int ns = d.tv_nsec;\n          printf (\"%04ld-%02d-%02d %02d:%02d:%02d.%09d\\n\",\n                  tm->tm_year + 1900L, tm->tm_mon + 1, tm->tm_mday,\n                  tm->tm_hour, tm->tm_min, tm->tm_sec, ns);\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/pipe-safer.c","start":{"line":34,"col":7,"offset":1098},"end":{"line":34,"col":16,"offset":1107},"extra":{"metavars":{"$FUN":{"start":{"line":34,"col":7,"offset":1098},"end":{"line":34,"col":11,"offset":1102},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e43d20f2c97d8e4fd7140b9933fd6febd8b79d7d9c088df4a208d30a2a85420e9c5a4027504c0212a2fe1f061ac3f44e625212c8d4cbb4fd519b9ff36532840_0","lines":"  if (pipe (fd) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":41,"col":8,"offset":1273},"end":{"line":41,"col":13,"offset":1278},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":41,"col":8,"offset":1273},"end":{"line":41,"col":9,"offset":1274},"abstract_content":"i"},"$SIGNED":{"start":{"line":41,"col":12,"offset":1277},"end":{"line":41,"col":13,"offset":1278},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d52de16500b77735cfa27bc4d1fc1990b8b68b32c783b12e15e3f532bdc6c77193158f6cef771ef19c20c63c1b619d545924f115a394b3f02f497d05664ac2eb_0","lines":"  for (i = 0, ap = &a->arg[0]; i < a->count; i++, ap++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":86,"col":10,"offset":2503},"end":{"line":86,"col":22,"offset":2515},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":10,"offset":2503},"end":{"line":86,"col":18,"offset":2511},"abstract_content":"arg_posn"},"$SIGNED":{"start":{"line":86,"col":21,"offset":2514},"end":{"line":86,"col":22,"offset":2515},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dff8876d5badbd15553c84df7a446d6287b3e68234c95051572e3e02a3015cf9fdca190afa3071e4629352a41c8dcc979df9fd48f6c3052af2af09047d7ef05a_0","lines":"  size_t arg_posn = 0;          /* number of regular arguments consumed */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":89,"col":10,"offset":2712},"end":{"line":89,"col":30,"offset":2732},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":89,"col":10,"offset":2712},"end":{"line":89,"col":26,"offset":2728},"abstract_content":"max_width_length"},"$SIGNED":{"start":{"line":89,"col":29,"offset":2731},"end":{"line":89,"col":30,"offset":2732},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"977e5ab99e4a70f42e6b7c28f116bb773af46eadfa603d726dfe8f968af06c47ea52e30cca5ef46d12911443aaf4a95ddc02593773a42df0199cb3d779d9f664_0","lines":"  size_t max_width_length = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":90,"col":10,"offset":2743},"end":{"line":90,"col":34,"offset":2767},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":90,"col":10,"offset":2743},"end":{"line":90,"col":30,"offset":2763},"abstract_content":"max_precision_length"},"$SIGNED":{"start":{"line":90,"col":33,"offset":2766},"end":{"line":90,"col":34,"offset":2767},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8a918b04277f298bf73e250ce21aba96349e696f29b0fc1596f911e1fd9807d5e2ccbf1fccdd4308506b0a9b48e4b97dab5b5039fea4f9e56091c2000887bb5a_0","lines":"  size_t max_precision_length = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":116,"col":34,"offset":4135},"end":{"line":116,"col":63,"offset":4164},"extra":{"metavars":{"$FUN":{"start":{"line":116,"col":34,"offset":4135},"end":{"line":116,"col":41,"offset":4142},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ebda0051a01245f8df746b9a74d0c128f032fdf4796f2f3d7b61800dec0773e31266f55f376b7f79cfb68c4628171d2716a34373c357501401323d30c3fc7cb_0","lines":"                               ? realloc (a->arg, memory_size)          \\","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":117,"col":34,"offset":4209},"end":{"line":117,"col":54,"offset":4229},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":34,"offset":4209},"end":{"line":117,"col":40,"offset":4215},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ec561bd37e7007c85ff5031a6370672792c9a0b94441ba8284edd78da12f8ee39ab150a2da8c504c86fafb562c57f00a7356f2a14139520d81a12d9ba748164_0","lines":"                               : malloc (memory_size));                 \\","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":122,"col":11,"offset":4556},"end":{"line":122,"col":64,"offset":4609},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":11,"offset":4556},"end":{"line":122,"col":17,"offset":4562},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7915549912cbb67c169cceac29f56035a227881a9318832529dcb8f1a83f26c9c6bd6d8a717e419606ac328c146a735f5af701029481f64bb76860e5d57508f_0","lines":"          memcpy (memory, a->arg, a->count * sizeof (argument));        \\","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":158,"col":15,"offset":6010},"end":{"line":159,"col":18,"offset":6073},"extra":{"metavars":{"$EXPR1":{"start":{"line":158,"col":20,"offset":6015},"end":{"line":158,"col":27,"offset":6022},"abstract_content":"np=cp"},"$EXPR2":{"start":{"line":158,"col":29,"offset":6024},"end":{"line":158,"col":53,"offset":6048},"abstract_content":"*np>='0'&&*np<='9'"},"$EXPR3":{"start":{"line":158,"col":55,"offset":6050},"end":{"line":158,"col":59,"offset":6054},"abstract_content":"np++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"156b9f7f9242c7cc803dbc1ed94c71dcd4e8c666aac4b9f37eaeb2df644e3390e610d2bdf00999d5269dfebebdc592b7c1f470a06c1a8259d4b7c6fdb551e741_0","lines":"              for (np = cp; *np >= '0' && *np <= '9'; np++)\n                ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":162,"col":26,"offset":6147},"end":{"line":162,"col":31,"offset":6152},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":162,"col":26,"offset":6147},"end":{"line":162,"col":27,"offset":6148},"abstract_content":"n"},"$SIGNED":{"start":{"line":162,"col":30,"offset":6151},"end":{"line":162,"col":31,"offset":6152},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f1b24720c86e8b91d41fc255447b14de4acd7444a3fc00236a366c40c2dcc2f3fda2dde8c0af3a6ed2377a29327325bfbba777cff7d519329543aeb9932b9337_0","lines":"                  size_t n = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":165,"col":21,"offset":6239},"end":{"line":165,"col":57,"offset":6275},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":165,"col":21,"offset":6239},"end":{"line":165,"col":22,"offset":6240},"abstract_content":"n"},"$SIGNED":{"start":{"line":165,"col":42,"offset":6260},"end":{"line":165,"col":44,"offset":6262},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0599e1606836d0aa2c9327e1e187fbd0b1e582fd904c81480fc368a23f82b1b6f5b9ccbb1662a92be8768ab06e31e4317c98f2c0e86d7ac477799e2095a0db9a_0","lines":"                    n = xsum (xtimes (n, 10), *np - '0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":172,"col":19,"offset":6557},"end":{"line":172,"col":36,"offset":6574},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":172,"col":19,"offset":6557},"end":{"line":172,"col":28,"offset":6566},"abstract_content":"arg_index"},"$SIGNED":{"start":{"line":172,"col":35,"offset":6573},"end":{"line":172,"col":36,"offset":6574},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"90e0e46b81c715628effc18c49192565bd1c76d56edb10832053ae9daa43a44e473561d76292ccc2d1d076d2adafacf6bf5a8f4a9b5db3fd20247997309e02a6_0","lines":"                  arg_index = n - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":211,"col":15,"offset":7585},"end":{"line":211,"col":35,"offset":7605},"extra":{"metavars":{"$EXPR1":{"start":{"line":211,"col":24,"offset":7594},"end":{"line":211,"col":27,"offset":7597},"abstract_content":"*cp"},"$EXPR2":{"start":{"line":211,"col":31,"offset":7601},"end":{"line":211,"col":34,"offset":7604},"abstract_content":"'I'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c57dd6ceee2724984b12223ab2fc030cf06c84ff4db71074b49417238db63ad42dd5ab7b20d7a4941da8a68f9efa178f983a9b1c8c2cd93d2383926c9af6a47_0","lines":"              else if (*cp == 'I')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":235,"col":19,"offset":8194},"end":{"line":236,"col":22,"offset":8261},"extra":{"metavars":{"$EXPR1":{"start":{"line":235,"col":24,"offset":8199},"end":{"line":235,"col":31,"offset":8206},"abstract_content":"np=cp"},"$EXPR2":{"start":{"line":235,"col":33,"offset":8208},"end":{"line":235,"col":57,"offset":8232},"abstract_content":"*np>='0'&&*np<='9'"},"$EXPR3":{"start":{"line":235,"col":59,"offset":8234},"end":{"line":235,"col":63,"offset":8238},"abstract_content":"np++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"156b9f7f9242c7cc803dbc1ed94c71dcd4e8c666aac4b9f37eaeb2df644e3390e610d2bdf00999d5269dfebebdc592b7c1f470a06c1a8259d4b7c6fdb551e741_1","lines":"                  for (np = cp; *np >= '0' && *np <= '9'; np++)\n                    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":239,"col":30,"offset":8347},"end":{"line":239,"col":35,"offset":8352},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":239,"col":30,"offset":8347},"end":{"line":239,"col":31,"offset":8348},"abstract_content":"n"},"$SIGNED":{"start":{"line":239,"col":34,"offset":8351},"end":{"line":239,"col":35,"offset":8352},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f1b24720c86e8b91d41fc255447b14de4acd7444a3fc00236a366c40c2dcc2f3fda2dde8c0af3a6ed2377a29327325bfbba777cff7d519329543aeb9932b9337_1","lines":"                      size_t n = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":242,"col":25,"offset":8447},"end":{"line":242,"col":61,"offset":8483},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":242,"col":25,"offset":8447},"end":{"line":242,"col":26,"offset":8448},"abstract_content":"n"},"$SIGNED":{"start":{"line":242,"col":46,"offset":8468},"end":{"line":242,"col":48,"offset":8470},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0599e1606836d0aa2c9327e1e187fbd0b1e582fd904c81480fc368a23f82b1b6f5b9ccbb1662a92be8768ab06e31e4317c98f2c0e86d7ac477799e2095a0db9a_1","lines":"                        n = xsum (xtimes (n, 10), *np - '0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":292,"col":23,"offset":10205},"end":{"line":293,"col":26,"offset":10276},"extra":{"metavars":{"$EXPR1":{"start":{"line":292,"col":28,"offset":10210},"end":{"line":292,"col":35,"offset":10217},"abstract_content":"np=cp"},"$EXPR2":{"start":{"line":292,"col":37,"offset":10219},"end":{"line":292,"col":61,"offset":10243},"abstract_content":"*np>='0'&&*np<='9'"},"$EXPR3":{"start":{"line":292,"col":63,"offset":10245},"end":{"line":292,"col":67,"offset":10249},"abstract_content":"np++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"156b9f7f9242c7cc803dbc1ed94c71dcd4e8c666aac4b9f37eaeb2df644e3390e610d2bdf00999d5269dfebebdc592b7c1f470a06c1a8259d4b7c6fdb551e741_2","lines":"                      for (np = cp; *np >= '0' && *np <= '9'; np++)\n                        ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":296,"col":34,"offset":10374},"end":{"line":296,"col":39,"offset":10379},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":296,"col":34,"offset":10374},"end":{"line":296,"col":35,"offset":10375},"abstract_content":"n"},"$SIGNED":{"start":{"line":296,"col":38,"offset":10378},"end":{"line":296,"col":39,"offset":10379},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f1b24720c86e8b91d41fc255447b14de4acd7444a3fc00236a366c40c2dcc2f3fda2dde8c0af3a6ed2377a29327325bfbba777cff7d519329543aeb9932b9337_2","lines":"                          size_t n = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":299,"col":29,"offset":10482},"end":{"line":299,"col":65,"offset":10518},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":299,"col":29,"offset":10482},"end":{"line":299,"col":30,"offset":10483},"abstract_content":"n"},"$SIGNED":{"start":{"line":299,"col":50,"offset":10503},"end":{"line":299,"col":52,"offset":10505},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0599e1606836d0aa2c9327e1e187fbd0b1e582fd904c81480fc368a23f82b1b6f5b9ccbb1662a92be8768ab06e31e4317c98f2c0e86d7ac477799e2095a0db9a_2","lines":"                            n = xsum (xtimes (n, 10), *np - '0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":407,"col":19,"offset":14599},"end":{"line":407,"col":39,"offset":14619},"extra":{"metavars":{"$EXPR1":{"start":{"line":407,"col":28,"offset":14608},"end":{"line":407,"col":31,"offset":14611},"abstract_content":"*cp"},"$EXPR2":{"start":{"line":407,"col":35,"offset":14615},"end":{"line":407,"col":38,"offset":14618},"abstract_content":"'q'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1f959e333f7b21760d2159344d9e46f36b53819640999db0a230b24ca096943168f617d693827c6dba74c3896573baf4de725a48089c336bf188ad91331337f_0","lines":"                  else if (*cp == 'q')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":426,"col":19,"offset":15358},"end":{"line":426,"col":71,"offset":15410},"extra":{"metavars":{"$EXPR1":{"start":{"line":426,"col":28,"offset":15367},"end":{"line":426,"col":31,"offset":15370},"abstract_content":"*cp"},"$EXPR2":{"start":{"line":426,"col":35,"offset":15374},"end":{"line":426,"col":38,"offset":15377},"abstract_content":"'I'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c57dd6ceee2724984b12223ab2fc030cf06c84ff4db71074b49417238db63ad42dd5ab7b20d7a4941da8a68f9efa178f983a9b1c8c2cd93d2383926c9af6a47_1","lines":"                  else if (*cp == 'I' && cp[1] == '6' && cp[2] == '4')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":452,"col":19,"offset":16190},"end":{"line":453,"col":45,"offset":16266},"extra":{"metavars":{"$EXPR1":{"start":{"line":452,"col":39,"offset":16210},"end":{"line":452,"col":44,"offset":16215},"abstract_content":"flags"},"$EXPR2":{"start":{"line":452,"col":47,"offset":16218},"end":{"line":452,"col":48,"offset":16219},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b5a677a01fc09bc47199015b464989898d16dbcb4c48443fc96f0da8e52bf260dacedae8dc8a2038abe0d116fcdf8704681cd5eeca2bdd0d9c038283cf0e8c0_0","lines":"                  if (flags >= 16 || (flags & 4))\n                    type = TYPE_LONGLONGINT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":460,"col":24,"offset":16524},"end":{"line":465,"col":37,"offset":16714},"extra":{"metavars":{"$EXPR1":{"start":{"line":460,"col":28,"offset":16528},"end":{"line":460,"col":33,"offset":16533},"abstract_content":"flags"},"$EXPR2":{"start":{"line":460,"col":36,"offset":16536},"end":{"line":460,"col":37,"offset":16537},"abstract_content":"2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aebd4b4fbb300a3de197be2858781b89c5a265ec32fd05c95b0aa73d6f996482c68ffd0cf2d58aff65b7dee66f0adeac087b2dbd00f6fc4470a697c2c3f32b10_0","lines":"                  else if (flags & 2)\n                    type = TYPE_SCHAR;\n                  else if (flags & 1)\n                    type = TYPE_SHORT;\n                  else\n                    type = TYPE_INT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":462,"col":24,"offset":16601},"end":{"line":465,"col":37,"offset":16714},"extra":{"metavars":{"$EXPR1":{"start":{"line":462,"col":28,"offset":16605},"end":{"line":462,"col":33,"offset":16610},"abstract_content":"flags"},"$EXPR2":{"start":{"line":462,"col":36,"offset":16613},"end":{"line":462,"col":37,"offset":16614},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc267484025e330933486650158589899816c3041aeffd89eab6fe9ccf6c474a90a0eded01518e3bb894478f17c09ad92d440e50efc8487dbd4a1b927ebcd4db_0","lines":"                  else if (flags & 1)\n                    type = TYPE_SHORT;\n                  else\n                    type = TYPE_INT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":470,"col":19,"offset":16911},"end":{"line":471,"col":46,"offset":16988},"extra":{"metavars":{"$EXPR1":{"start":{"line":470,"col":39,"offset":16931},"end":{"line":470,"col":44,"offset":16936},"abstract_content":"flags"},"$EXPR2":{"start":{"line":470,"col":47,"offset":16939},"end":{"line":470,"col":48,"offset":16940},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b5a677a01fc09bc47199015b464989898d16dbcb4c48443fc96f0da8e52bf260dacedae8dc8a2038abe0d116fcdf8704681cd5eeca2bdd0d9c038283cf0e8c0_1","lines":"                  if (flags >= 16 || (flags & 4))\n                    type = TYPE_ULONGLONGINT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":478,"col":24,"offset":17266},"end":{"line":483,"col":38,"offset":17458},"extra":{"metavars":{"$EXPR1":{"start":{"line":478,"col":28,"offset":17270},"end":{"line":478,"col":33,"offset":17275},"abstract_content":"flags"},"$EXPR2":{"start":{"line":478,"col":36,"offset":17278},"end":{"line":478,"col":37,"offset":17279},"abstract_content":"2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aebd4b4fbb300a3de197be2858781b89c5a265ec32fd05c95b0aa73d6f996482c68ffd0cf2d58aff65b7dee66f0adeac087b2dbd00f6fc4470a697c2c3f32b10_1","lines":"                  else if (flags & 2)\n                    type = TYPE_UCHAR;\n                  else if (flags & 1)\n                    type = TYPE_USHORT;\n                  else\n                    type = TYPE_UINT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":480,"col":24,"offset":17343},"end":{"line":483,"col":38,"offset":17458},"extra":{"metavars":{"$EXPR1":{"start":{"line":480,"col":28,"offset":17347},"end":{"line":480,"col":33,"offset":17352},"abstract_content":"flags"},"$EXPR2":{"start":{"line":480,"col":36,"offset":17355},"end":{"line":480,"col":37,"offset":17356},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc267484025e330933486650158589899816c3041aeffd89eab6fe9ccf6c474a90a0eded01518e3bb894478f17c09ad92d440e50efc8487dbd4a1b927ebcd4db_1","lines":"                  else if (flags & 1)\n                    type = TYPE_USHORT;\n                  else\n                    type = TYPE_UINT;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":487,"col":19,"offset":17614},"end":{"line":490,"col":40,"offset":17752},"extra":{"metavars":{"$EXPR1":{"start":{"line":487,"col":39,"offset":17634},"end":{"line":487,"col":44,"offset":17639},"abstract_content":"flags"},"$EXPR2":{"start":{"line":487,"col":47,"offset":17642},"end":{"line":487,"col":48,"offset":17643},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b5a677a01fc09bc47199015b464989898d16dbcb4c48443fc96f0da8e52bf260dacedae8dc8a2038abe0d116fcdf8704681cd5eeca2bdd0d9c038283cf0e8c0_2","lines":"                  if (flags >= 16 || (flags & 4))\n                    type = TYPE_LONGDOUBLE;\n                  else\n                    type = TYPE_DOUBLE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":493,"col":19,"offset":17822},"end":{"line":493,"col":34,"offset":17837},"extra":{"metavars":{"$COND":{"start":{"line":493,"col":23,"offset":17826},"end":{"line":493,"col":33,"offset":17836},"abstract_content":"flags>=8"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba87f96a283225b501955a306fdf7a6291047a88695c3a7d66fc2586661e5b3f774b924d1440456fdfbc17b7f1cdde2381f1dc41315dd612189df72b88a75789_0","lines":"                  if (flags >= 8)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":509,"col":19,"offset":18214},"end":{"line":509,"col":34,"offset":18229},"extra":{"metavars":{"$COND":{"start":{"line":509,"col":23,"offset":18218},"end":{"line":509,"col":33,"offset":18228},"abstract_content":"flags>=8"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba87f96a283225b501955a306fdf7a6291047a88695c3a7d66fc2586661e5b3f774b924d1440456fdfbc17b7f1cdde2381f1dc41315dd612189df72b88a75789_1","lines":"                  if (flags >= 8)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":530,"col":19,"offset":18801},"end":{"line":531,"col":59,"offset":18891},"extra":{"metavars":{"$EXPR1":{"start":{"line":530,"col":39,"offset":18821},"end":{"line":530,"col":44,"offset":18826},"abstract_content":"flags"},"$EXPR2":{"start":{"line":530,"col":47,"offset":18829},"end":{"line":530,"col":48,"offset":18830},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b5a677a01fc09bc47199015b464989898d16dbcb4c48443fc96f0da8e52bf260dacedae8dc8a2038abe0d116fcdf8704681cd5eeca2bdd0d9c038283cf0e8c0_3","lines":"                  if (flags >= 16 || (flags & 4))\n                    type = TYPE_COUNT_LONGLONGINT_POINTER;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":538,"col":24,"offset":19177},"end":{"line":543,"col":51,"offset":19409},"extra":{"metavars":{"$EXPR1":{"start":{"line":538,"col":28,"offset":19181},"end":{"line":538,"col":33,"offset":19186},"abstract_content":"flags"},"$EXPR2":{"start":{"line":538,"col":36,"offset":19189},"end":{"line":538,"col":37,"offset":19190},"abstract_content":"2"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aebd4b4fbb300a3de197be2858781b89c5a265ec32fd05c95b0aa73d6f996482c68ffd0cf2d58aff65b7dee66f0adeac087b2dbd00f6fc4470a697c2c3f32b10_2","lines":"                  else if (flags & 2)\n                    type = TYPE_COUNT_SCHAR_POINTER;\n                  else if (flags & 1)\n                    type = TYPE_COUNT_SHORT_POINTER;\n                  else\n                    type = TYPE_COUNT_INT_POINTER;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":540,"col":24,"offset":19268},"end":{"line":543,"col":51,"offset":19409},"extra":{"metavars":{"$EXPR1":{"start":{"line":540,"col":28,"offset":19272},"end":{"line":540,"col":33,"offset":19277},"abstract_content":"flags"},"$EXPR2":{"start":{"line":540,"col":36,"offset":19280},"end":{"line":540,"col":37,"offset":19281},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc267484025e330933486650158589899816c3041aeffd89eab6fe9ccf6c474a90a0eded01518e3bb894478f17c09ad92d440e50efc8487dbd4a1b927ebcd4db_2","lines":"                  else if (flags & 1)\n                    type = TYPE_COUNT_SHORT_POINTER;\n                  else\n                    type = TYPE_COUNT_INT_POINTER;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":593,"col":41,"offset":21051},"end":{"line":593,"col":70,"offset":21080},"extra":{"metavars":{"$FUN":{"start":{"line":593,"col":41,"offset":21051},"end":{"line":593,"col":48,"offset":21058},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ebda0051a01245f8df746b9a74d0c128f032fdf4796f2f3d7b61800dec0773e31266f55f376b7f79cfb68c4628171d2716a34373c357501401323d30c3fc7cb_1","lines":"                                      ? realloc (d->dir, memory_size)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":594,"col":41,"offset":21121},"end":{"line":594,"col":61,"offset":21141},"extra":{"metavars":{"$FUN":{"start":{"line":594,"col":41,"offset":21121},"end":{"line":594,"col":47,"offset":21127},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ec561bd37e7007c85ff5031a6370672792c9a0b94441ba8284edd78da12f8ee39ab150a2da8c504c86fafb562c57f00a7356f2a14139520d81a12d9ba748164_1","lines":"                                      : malloc (memory_size));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":599,"col":17,"offset":21317},"end":{"line":599,"col":71,"offset":21371},"extra":{"metavars":{"$FUN":{"start":{"line":599,"col":17,"offset":21317},"end":{"line":599,"col":23,"offset":21323},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7915549912cbb67c169cceac29f56035a227881a9318832529dcb8f1a83f26c9c6bd6d8a717e419606ac328c146a735f5af701029481f64bb76860e5d57508f_1","lines":"                memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":619,"col":5,"offset":21779},"end":{"line":619,"col":19,"offset":21793},"extra":{"metavars":{"$PTR":{"start":{"line":619,"col":11,"offset":21785},"end":{"line":619,"col":17,"offset":21791},"abstract_content":"a->->arg"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a60920cb68bad2d5a332024211bf158b46ef1e82944a689b84f84ae6cb61e91f05c6f03f9bfe3004626af47e3a81a8fede5123366f8d2ee65412deadb3ea62d_0","lines":"    free (a->arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":621,"col":5,"offset":21835},"end":{"line":621,"col":19,"offset":21849},"extra":{"metavars":{"$PTR":{"start":{"line":621,"col":11,"offset":21841},"end":{"line":621,"col":17,"offset":21847},"abstract_content":"d->->dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"088ecd37579b2b20ff8fc30b924e7709dbd87aaa2c171e865fb438187f9fedc654c2c41ea4a2b75874b66c9252a3745a7a624ab317ece75b295956f080da49a5_0","lines":"    free (d->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":627,"col":5,"offset":21938},"end":{"line":627,"col":19,"offset":21952},"extra":{"metavars":{"$PTR":{"start":{"line":627,"col":11,"offset":21944},"end":{"line":627,"col":17,"offset":21950},"abstract_content":"a->->arg"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a60920cb68bad2d5a332024211bf158b46ef1e82944a689b84f84ae6cb61e91f05c6f03f9bfe3004626af47e3a81a8fede5123366f8d2ee65412deadb3ea62d_1","lines":"    free (a->arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":629,"col":5,"offset":21994},"end":{"line":629,"col":19,"offset":22008},"extra":{"metavars":{"$PTR":{"start":{"line":629,"col":11,"offset":22000},"end":{"line":629,"col":17,"offset":22006},"abstract_content":"d->->dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"088ecd37579b2b20ff8fc30b924e7709dbd87aaa2c171e865fb438187f9fedc654c2c41ea4a2b75874b66c9252a3745a7a624ab317ece75b295956f080da49a5_1","lines":"    free (d->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/progname.c","start":{"line":61,"col":7,"offset":2175},"end":{"line":61,"col":19,"offset":2187},"extra":{"metavars":{"$PTR1":{"start":{"line":61,"col":7,"offset":2175},"end":{"line":61,"col":11,"offset":2179},"abstract_content":"base"},"$PTR2":{"start":{"line":61,"col":14,"offset":2182},"end":{"line":61,"col":19,"offset":2187},"abstract_content":"argv0"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9f71e031e6611dbfde99462d042d5a2068ccf13409bbf0b4012d678992dc748f7f0cf0646797810b55af0896bca44e3b07fcc0534900976a89f8617fe7d08c87_0","lines":"  if (base - argv0 >= 7 && strncmp (base - 7, \"/.libs/\", 7) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":256,"col":10,"offset":8074},"end":{"line":256,"col":17,"offset":8081},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":256,"col":10,"offset":8074},"end":{"line":256,"col":13,"offset":8077},"abstract_content":"len"},"$SIGNED":{"start":{"line":256,"col":16,"offset":8080},"end":{"line":256,"col":17,"offset":8081},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a622732776077dc97fba33235ba35e17ab1b8aa03d94462e4b39fed48f2e1c34fb44af36a05a2292794b42f5e614c566a41fc834690b78c3834b14c7ad6cc02a_0","lines":"  size_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":257,"col":10,"offset":8092},"end":{"line":257,"col":29,"offset":8111},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":257,"col":10,"offset":8092},"end":{"line":257,"col":25,"offset":8107},"abstract_content":"orig_buffersize"},"$SIGNED":{"start":{"line":257,"col":28,"offset":8110},"end":{"line":257,"col":29,"offset":8111},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c45053d168d5c49115a584aafc71872ff81761ad67dcce0b28068e423c4c4a17fa532eabb7cf95553f64bef7cab2d20d33dad6604eee844b0d99132129cd7cbf_0","lines":"  size_t orig_buffersize = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":259,"col":10,"offset":8154},"end":{"line":259,"col":30,"offset":8174},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":259,"col":10,"offset":8154},"end":{"line":259,"col":26,"offset":8170},"abstract_content":"quote_string_len"},"$SIGNED":{"start":{"line":259,"col":29,"offset":8173},"end":{"line":259,"col":30,"offset":8174},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8527058c08c1a1b857e14f22aa941587b750f1bcd2bee04a345126242258edf62b1a0d82ce2c3076609a55be5576c63c4e0e6d3d3e5ddd0df79c5cc4fdd45fca_0","lines":"  size_t quote_string_len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":261,"col":3,"offset":8212},"end":{"line":261,"col":41,"offset":8250},"extra":{"metavars":{"$EXPR1":{"start":{"line":261,"col":25,"offset":8234},"end":{"line":261,"col":35,"offset":8244},"abstract_content":"MB_CUR_MAX"},"$EXPR2":{"start":{"line":261,"col":39,"offset":8248},"end":{"line":261,"col":40,"offset":8249},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a078ff0f19207ada9d0f5beec052555fadf955a9c777a3ba17bb9593983cbd2ab6b318510e6eadb72c40072d307d831e05938f976795493e6d680287f13fe71a_0","lines":"  bool unibyte_locale = MB_CUR_MAX == 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":308,"col":11,"offset":9320},"end":{"line":308,"col":24,"offset":9333},"extra":{"metavars":{"$VAR":{"start":{"line":308,"col":11,"offset":9320},"end":{"line":308,"col":24,"offset":9333},"abstract_content":"quoting_style"},"$VAL1":{"start":{"line":310,"col":10,"offset":9350},"end":{"line":310,"col":31,"offset":9371},"abstract_content":"c_maybe_quoting_style"},"$VAL2":{"start":{"line":314,"col":10,"offset":9481},"end":{"line":314,"col":25,"offset":9496},"abstract_content":"c_quoting_style"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"735114b9ed8f84a9b13ff62e868ff95e86188d9e1d29e1874e239b2b9a22ea95101e8e2a6152700f248b80e154d06a3a43def372ed50c7721b7e6493c31f4be4_0","lines":"  switch (quoting_style)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":319,"col":7,"offset":9615},"end":{"line":319,"col":27,"offset":9635},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":319,"col":7,"offset":9615},"end":{"line":319,"col":23,"offset":9631},"abstract_content":"quote_string_len"},"$SIGNED":{"start":{"line":319,"col":26,"offset":9634},"end":{"line":319,"col":27,"offset":9635},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4bb42bc9a4a49c6ad9fd265caa4a782ee629d04e1088dace92a2c138513e317fadb0b07714438ad8678ff3258943bc407a61ca2f0cf4b9bf386818638b3b7d1e_0","lines":"      quote_string_len = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":381,"col":7,"offset":12059},"end":{"line":381,"col":27,"offset":12079},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":381,"col":7,"offset":12059},"end":{"line":381,"col":23,"offset":12075},"abstract_content":"quote_string_len"},"$SIGNED":{"start":{"line":381,"col":26,"offset":12078},"end":{"line":381,"col":27,"offset":12079},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4bb42bc9a4a49c6ad9fd265caa4a782ee629d04e1088dace92a2c138513e317fadb0b07714438ad8678ff3258943bc407a61ca2f0cf4b9bf386818638b3b7d1e_1","lines":"      quote_string_len = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":392,"col":8,"offset":12218},"end":{"line":392,"col":13,"offset":12223},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":392,"col":8,"offset":12218},"end":{"line":392,"col":9,"offset":12219},"abstract_content":"i"},"$SIGNED":{"start":{"line":392,"col":12,"offset":12222},"end":{"line":392,"col":13,"offset":12223},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"34eb9c1ac7a48d94ffa2b183b81378837ea54e000abaacafa23f2da1c95e7bb91da9ffb602161515d160205a36fe40ac4a971c3a7e18e0c824c8430ab32cfbfb_0","lines":"  for (i = 0;  ! (argsize == SIZE_MAX ? arg[i] == '\\0' : i == argsize);  i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":400,"col":7,"offset":12459},"end":{"line":414,"col":10,"offset":13132},"extra":{"metavars":{"$EXPR1":{"start":{"line":408,"col":22,"offset":12898},"end":{"line":408,"col":29,"offset":12905},"abstract_content":"argsize","propagated_value":{"svalue_start":{"line":408,"col":32,"offset":12908},"svalue_end":{"line":408,"col":44,"offset":12920},"svalue_abstract_content":"strlen(arg)"}},"$EXPR2":{"start":{"line":408,"col":32,"offset":12908},"end":{"line":408,"col":44,"offset":12920},"abstract_content":"strlen(arg)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a992fb123084b8d5b5e8cd4517aebcf9a3cb533e534d22d3db3dee0b45a9640ef838f43b04afd6fa14122ee71ee7c660f59c828763908c3466cd47a309927eaf_0","lines":"      if (backslash_escapes\n          && quoting_style != shell_always_quoting_style\n          && quote_string_len\n          && (i + quote_string_len\n              <= (argsize == SIZE_MAX && 1 < quote_string_len\n                  /* Use strlen only if we must: when argsize is SIZE_MAX,\n                     and when the quote string is more than 1 byte long.\n                     If we do call strlen, save the result.  */\n                  ? (argsize = strlen (arg)) : argsize))\n          && memcmp (arg + i, quote_string, quote_string_len) == 0)\n        {\n          if (elide_outer_quotes)\n            goto force_outer_quoting_style;\n          is_right_quote = true;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":417,"col":15,"offset":13166},"end":{"line":417,"col":16,"offset":13167},"extra":{"metavars":{"$VAR":{"start":{"line":417,"col":15,"offset":13166},"end":{"line":417,"col":16,"offset":13167},"abstract_content":"c","propagated_value":{"svalue_start":{"line":416,"col":11,"offset":13144},"svalue_end":{"line":416,"col":17,"offset":13150},"svalue_abstract_content":"arg[i]"}},"$VAL2":{"start":{"line":419,"col":14,"offset":13192},"end":{"line":419,"col":18,"offset":13196},"abstract_content":"'\\0'"},"$VAL1":{"start":{"line":525,"col":14,"offset":16992},"end":{"line":525,"col":17,"offset":16995},"abstract_content":"' '"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"de0086b02af24c22f6955570894e3b2446731c395e0afbbe296fb1c393ddd9b0ea035c44869bbab7dc5879d307ffd1dbc8475094a670ad996f14f8631cd080ab_0","lines":"      switch (c)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":441,"col":16,"offset":14243},"end":{"line":442,"col":22,"offset":14297},"extra":{"metavars":{"$EXPR1":{"start":{"line":441,"col":20,"offset":14247},"end":{"line":441,"col":25,"offset":14252},"abstract_content":"flags"},"$EXPR2":{"start":{"line":441,"col":28,"offset":14255},"end":{"line":441,"col":47,"offset":14274},"abstract_content":"QA_ELIDE_NULL_BYTES"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e5b84441341faaab614c5d83b4a3fa43e14364f4e1e8dd619565df6a76577e195d00001db364d709b145792775f5a312d66f20c35ee68d4c19d7556ba27f89a3_0","lines":"          else if (flags & QA_ELIDE_NULL_BYTES)\n            continue;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":454,"col":15,"offset":14582},"end":{"line":474,"col":27,"offset":15361},"extra":{"metavars":{"$EXPR1":{"start":{"line":454,"col":20,"offset":14587},"end":{"line":454,"col":25,"offset":14592},"abstract_content":"flags"},"$EXPR2":{"start":{"line":454,"col":28,"offset":14595},"end":{"line":454,"col":46,"offset":14613},"abstract_content":"QA_SPLIT_TRIGRAPHS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c93a036b35a4da5e61841021809e515cc50430cb265b7e666f445c0dd06027e6cff9d267cf6b72d9872c23077b39aece1c6809ce20dacca8f7f151e15e1fc59d_0","lines":"              if ((flags & QA_SPLIT_TRIGRAPHS)\n                  && i + 2 < argsize && arg[i + 1] == '?')\n                switch (arg[i + 2])\n                  {\n                  case '!': case '\\'':\n                  case '(': case ')': case '-': case '/':\n                  case '<': case '=': case '>':\n                    /* Escape the second '?' in what would otherwise be\n                       a trigraph.  */\n                    if (elide_outer_quotes)\n                      goto force_outer_quoting_style;\n                    c = arg[i + 2];\n                    i += 2;\n                    STORE ('?');\n                    STORE ('\"');\n                    STORE ('\"');\n                    STORE ('?');\n                    break;\n\n                  default:\n                    break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":559,"col":19,"offset":18467},"end":{"line":559,"col":33,"offset":18481},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":559,"col":19,"offset":18467},"end":{"line":559,"col":29,"offset":18477},"abstract_content":"buffersize"},"$SIGNED":{"start":{"line":559,"col":32,"offset":18480},"end":{"line":559,"col":33,"offset":18481},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79b8f1a1f4e2f8a86270b92f1ce0af979a244fb225c95b800055775e02e6e52a8881cbaab847bfd7005b34d21cdc97a17db6593c20b4d0c70cc8453557e50d25_0","lines":"                  buffersize = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":608,"col":17,"offset":20760},"end":{"line":608,"col":22,"offset":20765},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":608,"col":17,"offset":20760},"end":{"line":608,"col":18,"offset":20761},"abstract_content":"m"},"$SIGNED":{"start":{"line":608,"col":21,"offset":20764},"end":{"line":608,"col":22,"offset":20765},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"68828e0915d2f493e7ff34153f6a74bcaf997079e52b269fd33e22e03a69eaf675d92e1e4b5d40d2a6ea5c9d3e32391804503cdf5275e41b2c74b93c36b16ced_0","lines":"                m = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":616,"col":17,"offset":20968},"end":{"line":616,"col":22,"offset":20973},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":616,"col":17,"offset":20968},"end":{"line":616,"col":18,"offset":20969},"abstract_content":"m"},"$SIGNED":{"start":{"line":616,"col":21,"offset":20972},"end":{"line":616,"col":22,"offset":20973},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4cd42a7945c2fd44c71b5c241fe984baec669525070001b603e4af3e5a761a7b79a17b5a6f61d264e2f16efc13a4682dab7708788226521efe725a975d762349_0","lines":"                m = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":624,"col":28,"offset":21190},"end":{"line":625,"col":73,"offset":21296},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":624,"col":28,"offset":21190},"end":{"line":624,"col":33,"offset":21195},"abstract_content":"bytes"},"$SIGNED":{"start":{"line":624,"col":58,"offset":21220},"end":{"line":624,"col":59,"offset":21221},"abstract_content":"m","propagated_value":{"svalue_start":{"line":616,"col":21,"offset":20972},"svalue_end":{"line":616,"col":22,"offset":20973},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c0ef308b533e60f4169948b5ccd673a7c01da4cc96caf56d6c5401fa57b2d7a8f0f2f9e6903a46b966eb5d7d292e931930be30054e6c3f691a9e625df0013d36_0","lines":"                    size_t bytes = mbrtowc (&w, &arg[i + m],\n                                            argsize - (i + m), &mbstate);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":650,"col":34,"offset":22394},"end":{"line":650,"col":39,"offset":22399},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":650,"col":34,"offset":22394},"end":{"line":650,"col":35,"offset":22395},"abstract_content":"j"},"$SIGNED":{"start":{"line":650,"col":38,"offset":22398},"end":{"line":650,"col":39,"offset":22399},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"954b3113b0d79a26e87e40d54762165e259d4bd5915a45125c0877b5586c9d16a5403ce19c9466e9dd77ca04c4a401821d06da826b9dcd980a2b76392097371a_0","lines":"                            for (j = 1; j < bytes; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":704,"col":7,"offset":24120},"end":{"line":709,"col":22,"offset":24384},"extra":{"metavars":{"$EXPR1":{"start":{"line":707,"col":17,"offset":24280},"end":{"line":707,"col":63,"offset":24326},"abstract_content":"quote_these_too[c/INT_BITS]>>c%INT_BITS"},"$EXPR2":{"start":{"line":707,"col":67,"offset":24330},"end":{"line":707,"col":68,"offset":24331},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfc6cef8dc56530c8a3912f8082e3333a52e583d486fbdbdf09fae5c94714bb7f4579e026392db8998746b5f6059e114fb14e89ab797604d5c9f1438c2a69d79_0","lines":"      if (! (((backslash_escapes && quoting_style != shell_always_quoting_style)\n              || elide_outer_quotes)\n             && quote_these_too\n             && quote_these_too[c / INT_BITS] >> (c % INT_BITS) & 1)\n          && !is_right_quote)\n        goto store_c;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":742,"col":11,"offset":25590},"end":{"line":742,"col":18,"offset":25597},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":742,"col":11,"offset":25590},"end":{"line":742,"col":14,"offset":25593},"abstract_content":"len"},"$SIGNED":{"start":{"line":742,"col":17,"offset":25596},"end":{"line":742,"col":18,"offset":25597},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a622732776077dc97fba33235ba35e17ab1b8aa03d94462e4b39fed48f2e1c34fb44af36a05a2292794b42f5e614c566a41fc834690b78c3834b14c7ad6cc02a_1","lines":"          len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":811,"col":10,"offset":28293},"end":{"line":814,"col":65,"offset":28555},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":811,"col":10,"offset":28293},"end":{"line":811,"col":17,"offset":28300},"abstract_content":"bufsize"},"$SIGNED":{"start":{"line":811,"col":46,"offset":28329},"end":{"line":811,"col":47,"offset":28330},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bd7e9e9ea4da055833ece885bf00b8595d4a02d25214a4883b03ace4e88a079508fe2e67789c5ec9bec6d742b834783e6f00296806617a3686fd0a3e368f3a96_0","lines":"  size_t bufsize = quotearg_buffer_restyled (0, 0, arg, argsize, p->style,\n                                             flags, p->quote_these_too,\n                                             p->left_quote,\n                                             p->right_quote) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":815,"col":15,"offset":28571},"end":{"line":815,"col":35,"offset":28591},"extra":{"metavars":{"$FUN":{"start":{"line":815,"col":15,"offset":28571},"end":{"line":815,"col":25,"offset":28581},"abstract_content":"xcharalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf52e6bd46bbed462b3b6171885261ba7baaa17a85b75fa76668fe97990b5cebf4ddc30550a74a4a76f2ceddde07388af3a06cc15e056f57525f4759e2245633_0","lines":"  char *buf = xcharalloc (bufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":845,"col":5,"offset":29336},"end":{"line":845,"col":22,"offset":29353},"extra":{"metavars":{"$PTR":{"start":{"line":845,"col":11,"offset":29342},"end":{"line":845,"col":20,"offset":29351},"abstract_content":"sv[i].val"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a3f6d2a9dcf626fe8a4f0f351cc3f4b33a8018cc0665bd40c78c34a4745e0ec79f260aaaed5c98c483b937bea7b4a3e48e3502db342401bf9817cbd940627f71_0","lines":"    free (sv[i].val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":848,"col":7,"offset":29392},"end":{"line":848,"col":24,"offset":29409},"extra":{"metavars":{"$PTR":{"start":{"line":848,"col":13,"offset":29398},"end":{"line":848,"col":22,"offset":29407},"abstract_content":"sv[0].val"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aa657c16a59329601d7bc563353df24772387ef29428834efbbf4d4332dd374d6b2daa3bd81ec519ebea8ffd0a2f4b26fc67e3db949601cd857e7239648380fa_0","lines":"      free (sv[0].val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":854,"col":7,"offset":29515},"end":{"line":854,"col":17,"offset":29525},"extra":{"metavars":{"$PTR":{"start":{"line":854,"col":13,"offset":29521},"end":{"line":854,"col":15,"offset":29523},"abstract_content":"sv"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5a6d260339abc12c673e0ced7a5a3d4ca3f772ffd8e5dfa88275cfb907de457ab5f781e203921ea54696bccf459351890080f25d350b3b048695ca20113b31e_0","lines":"      free (sv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":881,"col":7,"offset":30279},"end":{"line":881,"col":45,"offset":30317},"extra":{"metavars":{"$EXPR1":{"start":{"line":881,"col":28,"offset":30300},"end":{"line":881,"col":30,"offset":30302},"abstract_content":"sv","propagated_value":{"svalue_start":{"line":874,"col":24,"offset":30210},"svalue_end":{"line":874,"col":31,"offset":30217},"svalue_abstract_content":"slotvec"}},"$EXPR2":{"start":{"line":881,"col":34,"offset":30306},"end":{"line":881,"col":43,"offset":30315},"abstract_content":"&slotvec0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"53bf8cf3bc83e27a06673212662287e211903e387bf38462ee77e6bc6b259cead3cca52a6f32e3d13dc7f81850cd22abe9e56c149547389c190a774e96b577bf_0","lines":"      bool preallocated = (sv == &slotvec0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":886,"col":22,"offset":30436},"end":{"line":886,"col":79,"offset":30493},"extra":{"metavars":{"$FUN":{"start":{"line":886,"col":22,"offset":30436},"end":{"line":886,"col":30,"offset":30444},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ad87bee8a26470242669f934bd0e3b5ccb17dcbe96205573bea638a0b248ac4dbc51a82cf7f21211901dc0175b11ee3d8b395346e16d0e8361aea1e9d2770dec_0","lines":"      slotvec = sv = xrealloc (preallocated ? NULL : sv, (n + 1) * sizeof *sv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":894,"col":12,"offset":30649},"end":{"line":894,"col":29,"offset":30666},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":894,"col":12,"offset":30649},"end":{"line":894,"col":16,"offset":30653},"abstract_content":"size"},"$SIGNED":{"start":{"line":894,"col":22,"offset":30659},"end":{"line":894,"col":23,"offset":30660},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d2cb4b63f00d3e554007b599312d2283d4b03e8a655f6f8246280dc10c355b81048eb5e99fb9c18ddc5510b768651dd0e153a85b5b2569f99886f3c3c35cd7d9_0","lines":"    size_t size = sv[n].size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":898,"col":12,"offset":30827},"end":{"line":902,"col":67,"offset":31157},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":898,"col":12,"offset":30827},"end":{"line":898,"col":17,"offset":30832},"abstract_content":"qsize"},"$SIGNED":{"start":{"line":899,"col":62,"offset":30947},"end":{"line":899,"col":67,"offset":30952},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"51cadc1d56fa3d3dc56b0ddbd0b8c6dcf3dc3cefb781fbb7a50d17c29822324ed5e418d5c0f73b3a01d6b67b658863d1db0e98c8539385e1f9c28ec82eb2db40_0","lines":"    size_t qsize = quotearg_buffer_restyled (val, size, arg, argsize,\n                                             options->style, flags,\n                                             options->quote_these_too,\n                                             options->left_quote,\n                                             options->right_quote);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":906,"col":9,"offset":31199},"end":{"line":906,"col":38,"offset":31228},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":906,"col":9,"offset":31199},"end":{"line":906,"col":19,"offset":31209},"abstract_content":"sv[n].size"},"$SIGNED":{"start":{"line":906,"col":37,"offset":31227},"end":{"line":906,"col":38,"offset":31228},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ce71e8c7da33f5ba1de6e614b118cc856ba51ca543d2034f0defaf0088b29a8afa1e27e7040916b6e150f6599143585c19da44a5deb4d499c9accdc2855406e5_0","lines":"        sv[n].size = size = qsize + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":906,"col":22,"offset":31212},"end":{"line":906,"col":38,"offset":31228},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":906,"col":22,"offset":31212},"end":{"line":906,"col":26,"offset":31216},"abstract_content":"size","propagated_value":{"svalue_start":{"line":906,"col":29,"offset":31219},"svalue_end":{"line":906,"col":38,"offset":31228},"svalue_abstract_content":"qsize+1"}},"$SIGNED":{"start":{"line":906,"col":37,"offset":31227},"end":{"line":906,"col":38,"offset":31228},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4b59fe6adac4828e2ace24f6f0bc213e828ddf238d5ae6b9848d0289b4763adfe0a546899c82127c1a96da40869ddb496ccd29771d7a55be65cae1873d3e6435_0","lines":"        sv[n].size = size = qsize + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":908,"col":11,"offset":31266},"end":{"line":908,"col":22,"offset":31277},"extra":{"metavars":{"$PTR":{"start":{"line":908,"col":17,"offset":31272},"end":{"line":908,"col":20,"offset":31275},"abstract_content":"val","propagated_value":{"svalue_start":{"line":895,"col":17,"offset":30684},"svalue_end":{"line":895,"col":26,"offset":30693},"svalue_abstract_content":"sv[n].val"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce4b0f02cb03606ea0c1dd33369df1d873b7b0630ecf5085178cb15dcd263ccc601d1802e563216744a9b1d6e41b5b2dfe00758295469df1482b4f967e0f12c3_0","lines":"          free (val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","start":{"line":909,"col":27,"offset":31304},"end":{"line":909,"col":44,"offset":31321},"extra":{"metavars":{"$FUN":{"start":{"line":909,"col":27,"offset":31304},"end":{"line":909,"col":37,"offset":31314},"abstract_content":"xcharalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf52e6bd46bbed462b3b6171885261ba7baaa17a85b75fa76668fe97990b5cebf4ddc30550a74a4a76f2ceddde07388af3a06cc15e056f57525f4759e2245633_1","lines":"        sv[n].val = val = xcharalloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/rawmemchr.c","start":{"line":68,"col":16,"offset":2286},"end":{"line":68,"col":22,"offset":2292},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":68,"col":16,"offset":2286},"end":{"line":68,"col":17,"offset":2287},"abstract_content":"i"},"$SIGNED":{"start":{"line":68,"col":20,"offset":2290},"end":{"line":68,"col":22,"offset":2292},"abstract_content":"64"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cce5e277d429d0bc2da9e3bf5cb14e37d9ae7b6fa0a8d336507ebf83d3d88c921837d547494846911a7a73b41099d78ca8e226df8f2d650fe57beed803856cac_0","lines":"          for (i = 64; i < sizeof (longword) * 8; i *= 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","start":{"line":44,"col":16,"offset":1273},"end":{"line":44,"col":37,"offset":1294},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":16,"offset":1273},"end":{"line":44,"col":20,"offset":1277},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a0ab82afce7c96579daba062d9d4949f9f79571041cc0398be7976f768c39d3e1d53354f939f303e21079b0553a9f07117b225d4774a42377b065d37df1691b3_0","lines":"      result = read (fd, buf, count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/readdir.c","start":{"line":70,"col":3,"offset":1985},"end":{"line":89,"col":23,"offset":2793},"extra":{"metavars":{"$EXPR1":{"start":{"line":70,"col":7,"offset":1989},"end":{"line":70,"col":35,"offset":2017},"abstract_content":"dirp->->entry.dwFileAttributes"},"$EXPR2":{"start":{"line":70,"col":38,"offset":2020},"end":{"line":70,"col":62,"offset":2044},"abstract_content":"FILE_ATTRIBUTE_DIRECTORY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a09babf6287b1b55d1a7a77c92fe5e20f1b5aedfde78b55c55455501fb536081da3354750d9ce92a204ffffc62837eb4721063745f694b02c90e1ec4389fbca_0","lines":"  if (dirp->entry.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)\n    type = DT_DIR;\n  else if (dirp->entry.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT)\n    type = DT_LNK;\n  else if ((dirp->entry.dwFileAttributes\n            & ~(FILE_ATTRIBUTE_READONLY\n                | FILE_ATTRIBUTE_HIDDEN\n                | FILE_ATTRIBUTE_SYSTEM\n                | FILE_ATTRIBUTE_ARCHIVE\n                | FILE_ATTRIBUTE_NORMAL\n                | FILE_ATTRIBUTE_TEMPORARY\n                | FILE_ATTRIBUTE_SPARSE_FILE\n                | FILE_ATTRIBUTE_COMPRESSED\n                | FILE_ATTRIBUTE_NOT_CONTENT_INDEXED\n                | FILE_ATTRIBUTE_ENCRYPTED)) == 0)\n    /* Devices like COM1, LPT1, NUL would also have the attributes 0x20 but\n       they cannot occur here.  */\n    type = DT_REG;\n  else\n    type = DT_UNKNOWN;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/readdir.c","start":{"line":72,"col":8,"offset":2072},"end":{"line":89,"col":23,"offset":2793},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":12,"offset":2076},"end":{"line":72,"col":40,"offset":2104},"abstract_content":"dirp->->entry.dwFileAttributes"},"$EXPR2":{"start":{"line":72,"col":43,"offset":2107},"end":{"line":72,"col":71,"offset":2135},"abstract_content":"FILE_ATTRIBUTE_REPARSE_POINT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"938031f0061c3d605de3cfd6954f3994290923d5bcc153b2dbaa2122f97b06ca81ebbac90a082afac917db0d6943081375912a8dec5c5fcc5b7f2044eeda6f5b_0","lines":"  else if (dirp->entry.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT)\n    type = DT_LNK;\n  else if ((dirp->entry.dwFileAttributes\n            & ~(FILE_ATTRIBUTE_READONLY\n                | FILE_ATTRIBUTE_HIDDEN\n                | FILE_ATTRIBUTE_SYSTEM\n                | FILE_ATTRIBUTE_ARCHIVE\n                | FILE_ATTRIBUTE_NORMAL\n                | FILE_ATTRIBUTE_TEMPORARY\n                | FILE_ATTRIBUTE_SPARSE_FILE\n                | FILE_ATTRIBUTE_COMPRESSED\n                | FILE_ATTRIBUTE_NOT_CONTENT_INDEXED\n                | FILE_ATTRIBUTE_ENCRYPTED)) == 0)\n    /* Devices like COM1, LPT1, NUL would also have the attributes 0x20 but\n       they cannot occur here.  */\n    type = DT_REG;\n  else\n    type = DT_UNKNOWN;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/readdir.c","start":{"line":74,"col":8,"offset":2163},"end":{"line":89,"col":23,"offset":2793},"extra":{"metavars":{"$EXPR1":{"start":{"line":75,"col":17,"offset":2213},"end":{"line":75,"col":40,"offset":2236},"abstract_content":"FILE_ATTRIBUTE_READONLY"},"$EXPR2":{"start":{"line":76,"col":19,"offset":2255},"end":{"line":76,"col":40,"offset":2276},"abstract_content":"FILE_ATTRIBUTE_HIDDEN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70cf6c28a54ead64cbe3379741d93d05d152fd1e103f149889b0877a78b85d3a0111cdd9132e78fd70c7aa2bd55676bca8675e4abdacfded7f86c0d41c38b0cc_0","lines":"  else if ((dirp->entry.dwFileAttributes\n            & ~(FILE_ATTRIBUTE_READONLY\n                | FILE_ATTRIBUTE_HIDDEN\n                | FILE_ATTRIBUTE_SYSTEM\n                | FILE_ATTRIBUTE_ARCHIVE\n                | FILE_ATTRIBUTE_NORMAL\n                | FILE_ATTRIBUTE_TEMPORARY\n                | FILE_ATTRIBUTE_SPARSE_FILE\n                | FILE_ATTRIBUTE_COMPRESSED\n                | FILE_ATTRIBUTE_NOT_CONTENT_INDEXED\n                | FILE_ATTRIBUTE_ENCRYPTED)) == 0)\n    /* Devices like COM1, LPT1, NUL would also have the attributes 0x20 but\n       they cannot occur here.  */\n    type = DT_REG;\n  else\n    type = DT_UNKNOWN;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":54,"col":7,"offset":1673},"end":{"line":54,"col":12,"offset":1678},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":54,"col":7,"offset":1673},"end":{"line":54,"col":8,"offset":1674},"abstract_content":"n"},"$SIGNED":{"start":{"line":54,"col":11,"offset":1677},"end":{"line":54,"col":12,"offset":1678},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"21d7f7cbd6666a555e14a5c67f3be05e5e0532ded07b7ef4d34187cc36d583dbefd0e4ee418efd322269c0a7f36e40e98dce0da658baca20e454d8912e279563_0","lines":"      n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":57,"col":7,"offset":1759},"end":{"line":57,"col":16,"offset":1768},"extra":{"metavars":{"$PTR":{"start":{"line":57,"col":13,"offset":1765},"end":{"line":57,"col":14,"offset":1766},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfffffc955f91dfa952bc0eb2c897c27c31051b9b38e9453a1496bbfbb9c8ead73c91e96d0fc33272d734917f09634a7d7b7bfb1b3829a30f48131ad3f5331ff_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":66,"col":9,"offset":1927},"end":{"line":66,"col":14,"offset":1932},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":66,"col":9,"offset":1927},"end":{"line":66,"col":10,"offset":1928},"abstract_content":"n"},"$SIGNED":{"start":{"line":66,"col":13,"offset":1931},"end":{"line":66,"col":14,"offset":1932},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"21d7f7cbd6666a555e14a5c67f3be05e5e0532ded07b7ef4d34187cc36d583dbefd0e4ee418efd322269c0a7f36e40e98dce0da658baca20e454d8912e279563_1","lines":"        n = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":68,"col":7,"offset":1947},"end":{"line":68,"col":26,"offset":1966},"extra":{"metavars":{"$RET":{"start":{"line":68,"col":7,"offset":1947},"end":{"line":68,"col":13,"offset":1953},"abstract_content":"result"},"$FUN":{"start":{"line":68,"col":16,"offset":1956},"end":{"line":68,"col":22,"offset":1962},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1fa3ff264809657a1be57c2df6d1816e3a18d1c37f63c3ee3501954f942d9715b9d79da6e7022a086ae87ee0159f0698c032cc6981670fa81442f5f767804dcf_0","lines":"      result = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":68,"col":16,"offset":1956},"end":{"line":68,"col":26,"offset":1966},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":16,"offset":1956},"end":{"line":68,"col":22,"offset":1962},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86910cf3915e9e9c3b71a1deafb0a7538a4ddbcc1e5c62627b04c560af26d15792f85ab21edc991d200982982370b9b454c74a0ab8b6c0c3119a5165b59af647_0","lines":"      result = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":71,"col":5,"offset":1985},"end":{"line":71,"col":28,"offset":2008},"extra":{"metavars":{"$RET":{"start":{"line":71,"col":5,"offset":1985},"end":{"line":71,"col":11,"offset":1991},"abstract_content":"result"},"$FUN":{"start":{"line":71,"col":14,"offset":1994},"end":{"line":71,"col":21,"offset":2001},"abstract_content":"realloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cbc973e510e1212c8199476b113a0f70da2cb22b0296fee5ae9f2602b2bceee3faf4c88dcf96ae89910113172cd0586445da7a92c3f80e5dde73d82fdfff53d6_0","lines":"    result = realloc (p, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","start":{"line":71,"col":14,"offset":1994},"end":{"line":71,"col":28,"offset":2008},"extra":{"metavars":{"$FUN":{"start":{"line":71,"col":14,"offset":1994},"end":{"line":71,"col":21,"offset":2001},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f2ba349210605b3443a1d06f4f625b01ab258f21a9c8ab44438a9c2f34a3d6217a01a1edbed4cf3d7930662a0e04906d0a69913421ddfe9f7c6e9bd68a41e8fa_0","lines":"    result = realloc (p, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.c","start":{"line":67,"col":15,"offset":2425},"end":{"line":67,"col":35,"offset":2445},"extra":{"metavars":{"$FUN":{"start":{"line":67,"col":15,"offset":2425},"end":{"line":67,"col":19,"offset":2429},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ca00393e17d1028a4dc651542dc224657e08eeba1eb25a313f70dde7d8c475384f3db4c392833035fc276d4f23311e039de3dcd59cc903184897b252db4ed69f_0","lines":"  cwd->desc = open (\".\", O_SEARCH);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.c","start":{"line":72,"col":19,"offset":2557},"end":{"line":72,"col":35,"offset":2573},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":72,"col":19,"offset":2557},"end":{"line":72,"col":25,"offset":2563},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5672488af35af0ee77c0fee564160f086ee17a635b6142170d2518dd6436d197e89500d170b3e9801b7b63b71f4fb9535b5d6a35a03f500e51d1ae9b7cbc7363_0","lines":"      cwd->name = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.c","start":{"line":72,"col":19,"offset":2557},"end":{"line":72,"col":35,"offset":2573},"extra":{"metavars":{"$BUF":{"start":{"line":72,"col":27,"offset":2565},"end":{"line":72,"col":31,"offset":2569},"abstract_content":"NULL"},"$LEN":{"start":{"line":72,"col":33,"offset":2571},"end":{"line":72,"col":34,"offset":2572},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cc770f3849767f485d88dfd424f0b1503a6f8664898c77965c9603bc2bb5fb5dc1ec11b71e921f115f46fdd5259951df6aab92937b5ad19187adc44f5dc5d3f7_0","lines":"      cwd->name = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.c","start":{"line":98,"col":3,"offset":3059},"end":{"line":98,"col":20,"offset":3076},"extra":{"metavars":{"$PTR":{"start":{"line":98,"col":9,"offset":3065},"end":{"line":98,"col":18,"offset":3074},"abstract_content":"cwd->->name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d30163727a8b749cc30a21f63013056d933c7f2d9f31a61e76af2f99c5894f2864b1d76ed0324c9d0bf540cf279786d9bd47a0528c73305fa33ed483c470f973_0","lines":"  free (cwd->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":94,"col":10,"offset":2360},"end":{"line":94,"col":23,"offset":2373},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":94,"col":10,"offset":2360},"end":{"line":94,"col":19,"offset":2369},"abstract_content":"allocated"},"$SIGNED":{"start":{"line":94,"col":22,"offset":2372},"end":{"line":94,"col":23,"offset":2373},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"367f51e7aff88c7d5af2b6ef94d8f551c5c5cd86e411aa3f5fd0b0a6683a270b4f6a34ba76645c686f23216e30a8c16789e1f80b0a0d4c1060646c7fd4ee2354_0","lines":"  size_t allocated = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":96,"col":10,"offset":2414},"end":{"line":96,"col":31,"offset":2435},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":96,"col":10,"offset":2414},"end":{"line":96,"col":27,"offset":2431},"abstract_content":"entries_allocated"},"$SIGNED":{"start":{"line":96,"col":30,"offset":2434},"end":{"line":96,"col":31,"offset":2435},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24784ce3cf441f8a54029a662906d486de7fa83f33a96f2f92353fee93a8371d6e580e9b55e43c54f51ce7771ee1a70b87c1dfd0075489cdfb44073e6a37fff4_0","lines":"  size_t entries_allocated = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":97,"col":10,"offset":2446},"end":{"line":97,"col":26,"offset":2462},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":97,"col":10,"offset":2446},"end":{"line":97,"col":22,"offset":2458},"abstract_content":"entries_used"},"$SIGNED":{"start":{"line":97,"col":25,"offset":2461},"end":{"line":97,"col":26,"offset":2462},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"254d6b942d10c078cae406d862f353278308b70e9ce1b08abcac56e8a7060cc95827d0801b4e7d6629bc69266fa4b0311020ea3c03cd406d297d174c67d99624_0","lines":"  size_t entries_used = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":98,"col":10,"offset":2473},"end":{"line":98,"col":18,"offset":2481},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":98,"col":10,"offset":2473},"end":{"line":98,"col":14,"offset":2477},"abstract_content":"used"},"$SIGNED":{"start":{"line":98,"col":17,"offset":2480},"end":{"line":98,"col":18,"offset":2481},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a6af7d855e853e2237f692d91ae9d181da9b3dece944f82cbb425b90fa09af3bc040ff0860fb4e9913290a0234b630844afbba9be284bc58bbafa40d9f37d51e_0","lines":"  size_t used = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":120,"col":18,"offset":3022},"end":{"line":120,"col":55,"offset":3059},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":120,"col":18,"offset":3022},"end":{"line":120,"col":28,"offset":3032},"abstract_content":"entry_size"},"$SIGNED":{"start":{"line":120,"col":54,"offset":3058},"end":{"line":120,"col":55,"offset":3059},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"41c4e3c23eed4de67241da062282fbaac3841591dbf36b35649d96f091fbab306148d1c97da6dcb8fea1da66050f8ac8e36fb7805694344796e34f424345841a_0","lines":"          size_t entry_size = _D_EXACT_NAMLEN (dp) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":126,"col":29,"offset":3241},"end":{"line":126,"col":70,"offset":3282},"extra":{"metavars":{"$FUN":{"start":{"line":126,"col":29,"offset":3241},"end":{"line":126,"col":39,"offset":3251},"abstract_content":"x2nrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c621fca3ef89e6d2020274eff7f4bb166dc0899f923d45aaee32bc08568ee81fbdbdf7ac2f731b7045ad667a8613de9f09b679b7e559606015dd717f0dea2a2_0","lines":"                  entries = x2nrealloc (entries, &n, sizeof *entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":142,"col":32,"offset":3770},"end":{"line":142,"col":62,"offset":3800},"extra":{"metavars":{"$FUN":{"start":{"line":142,"col":32,"offset":3770},"end":{"line":142,"col":42,"offset":3780},"abstract_content":"x2nrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c621fca3ef89e6d2020274eff7f4bb166dc0899f923d45aaee32bc08568ee81fbdbdf7ac2f731b7045ad667a8613de9f09b679b7e559606015dd717f0dea2a2_1","lines":"                  name_space = x2nrealloc (name_space, &n, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":145,"col":15,"offset":3867},"end":{"line":145,"col":60,"offset":3912},"extra":{"metavars":{"$FUN":{"start":{"line":145,"col":15,"offset":3867},"end":{"line":145,"col":21,"offset":3873},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1096de7218e9e0b8ba85b05f65ac54c0fa376b8d92dfa5ad2b93a9da5dbb5ce5ecd8a5324a2efcc7057c03d7ef9412ffb21ea89a1b09aca5eebabaf2df1ef6db_0","lines":"              memcpy (name_space + used, entry, entry_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":154,"col":7,"offset":4038},"end":{"line":154,"col":22,"offset":4053},"extra":{"metavars":{"$PTR":{"start":{"line":154,"col":13,"offset":4044},"end":{"line":154,"col":20,"offset":4051},"abstract_content":"entries"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d1bc762f5c86364b814d33a741e045b7a1ad6bee8fbcb74ed05e8b487255afcaefad159490d1fc989d6310832a60d4243d49810d8090fde8fcc2d64ec01c8df_0","lines":"      free (entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":155,"col":7,"offset":4060},"end":{"line":155,"col":25,"offset":4078},"extra":{"metavars":{"$PTR":{"start":{"line":155,"col":13,"offset":4066},"end":{"line":155,"col":23,"offset":4076},"abstract_content":"name_space"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7db8af50bf7206dd8c94deda4151c29be5844e0bd1c1722539e673f0f84a08a2ca5c04b6ddf5c60abfc80082b2531b933b8378baaddf5232a51cf1a4dfa755f_0","lines":"      free (name_space);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":166,"col":20,"offset":4272},"end":{"line":166,"col":38,"offset":4290},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":20,"offset":4272},"end":{"line":166,"col":27,"offset":4279},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7488173a494e0a4628996562b16f80d87405493bf6eda2cb39abeaa1ad8db9a3d72c8cc808e44a823cb410251929426c12bf1a5ed7ed40b78962c1f7b719e5c5_0","lines":"      name_space = xmalloc (used + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":167,"col":7,"offset":4298},"end":{"line":167,"col":15,"offset":4306},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":167,"col":7,"offset":4298},"end":{"line":167,"col":11,"offset":4302},"abstract_content":"used"},"$SIGNED":{"start":{"line":167,"col":14,"offset":4305},"end":{"line":167,"col":15,"offset":4306},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a6af7d855e853e2237f692d91ae9d181da9b3dece944f82cbb425b90fa09af3bc040ff0860fb4e9913290a0234b630844afbba9be284bc58bbafa40d9f37d51e_1","lines":"      used = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":168,"col":12,"offset":4319},"end":{"line":168,"col":17,"offset":4324},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":168,"col":12,"offset":4319},"end":{"line":168,"col":13,"offset":4320},"abstract_content":"i"},"$SIGNED":{"start":{"line":168,"col":16,"offset":4323},"end":{"line":168,"col":17,"offset":4324},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b780c4a54a1ff39a8e4eec1092ff21630f72f8c8aa36729a1ceb407917ae94b853c41d0ed4799defc596dabf4da0343cc7ac9c0b862fcd4118b2afe16018d571_0","lines":"      for (i = 0; i < entries_used; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":171,"col":19,"offset":4419},"end":{"line":171,"col":49,"offset":4449},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"94028b8f390866b308d5b586e358947fee4712d5d92f28b4c81e05d2dac997067ad783ce330d3f2ceb2ad96b887595e0b4db8b9f4f4383b37a7630627571874a_0","lines":"          used += stpcpy (dest, entries[i].name) - dest + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":171,"col":19,"offset":4419},"end":{"line":171,"col":49,"offset":4449},"extra":{"metavars":{"$FUN":{"start":{"line":171,"col":19,"offset":4419},"end":{"line":171,"col":25,"offset":4425},"abstract_content":"stpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a360a20bb21596581492783e72e655316a25f4a2fe085f8e4d5a2cb19c29a3a33fe365cdd6b3a5fd8a4370b35216f850b5d4759a77bf85a80a0947877f3c2a9a_0","lines":"          used += stpcpy (dest, entries[i].name) - dest + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":172,"col":11,"offset":4472},"end":{"line":172,"col":34,"offset":4495},"extra":{"metavars":{"$PTR":{"start":{"line":172,"col":17,"offset":4478},"end":{"line":172,"col":32,"offset":4493},"abstract_content":"entries[i].name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8dbac892ce17b5b13cc269b954c46a9eea18a1fe5caad99448ca96b443d5057249777dd0f0de9d35623cf9b9e735021ccd57d843a2f5262b8a06bdc8ec67a05f_0","lines":"          free (entries[i].name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":174,"col":7,"offset":4512},"end":{"line":174,"col":22,"offset":4527},"extra":{"metavars":{"$PTR":{"start":{"line":174,"col":13,"offset":4518},"end":{"line":174,"col":20,"offset":4525},"abstract_content":"entries"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d1bc762f5c86364b814d33a741e045b7a1ad6bee8fbcb74ed05e8b487255afcaefad159490d1fc989d6310832a60d4243d49810d8090fde8fcc2d64ec01c8df_1","lines":"      free (entries);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":177,"col":18,"offset":4581},"end":{"line":177,"col":49,"offset":4612},"extra":{"metavars":{"$FUN":{"start":{"line":177,"col":18,"offset":4581},"end":{"line":177,"col":26,"offset":4589},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34c4505d698fd7038650f493071a4eed4e15d9fc3e3ecc4e3ae2b84c593836315425e8a1330aae918e60b05ddb1a84938cfe3e5b029c943a18058d39a27b819e_0","lines":"    name_space = xrealloc (name_space, used + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":200,"col":11,"offset":5193},"end":{"line":200,"col":29,"offset":5211},"extra":{"metavars":{"$PTR":{"start":{"line":200,"col":17,"offset":5199},"end":{"line":200,"col":27,"offset":5209},"abstract_content":"name_space","propagated_value":{"svalue_start":{"line":196,"col":26,"offset":5073},"svalue_end":{"line":196,"col":54,"offset":5101},"svalue_abstract_content":"streamsavedir(dirp option)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7db8af50bf7206dd8c94deda4151c29be5844e0bd1c1722539e673f0f84a08a2ca5c04b6ddf5c60abfc80082b2531b933b8378baaddf5232a51cf1a4dfa755f_1","lines":"          free (name_space);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":119,"col":16,"offset":3571},"end":{"line":119,"col":63,"offset":3618},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":119,"col":16,"offset":3571},"end":{"line":119,"col":22,"offset":3577},"abstract_content":"vallen"},"$SIGNED":{"start":{"line":119,"col":58,"offset":3613},"end":{"line":119,"col":59,"offset":3614},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7a6e1dbca723c3ec73344651a12c04f3c06e847239767574a38dee5c93898e41a685cbfaae260f41c3220dfcf7a45b17f1a715f7ff1b57f76b4d7d46c760cee8_0","lines":"  const size_t vallen = value != NULL ? strlen (value) + 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":127,"col":3,"offset":3793},"end":{"line":127,"col":11,"offset":3801},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":127,"col":3,"offset":3793},"end":{"line":127,"col":7,"offset":3797},"abstract_content":"size"},"$SIGNED":{"start":{"line":127,"col":10,"offset":3800},"end":{"line":127,"col":11,"offset":3801},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5b83865d715dab6da80b25b48ea92f0be1b3afeebc94c55d85b9b2e2e103b163cc1d9f1fdb1ed9125ea46357a903b47db1b63ccef85a38446d0000daa787741f_0","lines":"  size = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":147,"col":22,"offset":4234},"end":{"line":147,"col":59,"offset":4271},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":22,"offset":4234},"end":{"line":147,"col":28,"offset":4240},"abstract_content":"malloc"},"$X":{"start":{"line":147,"col":31,"offset":4243},"end":{"line":147,"col":39,"offset":4251},"abstract_content":"size+2"},"$Y":{"start":{"line":147,"col":43,"offset":4255},"end":{"line":147,"col":58,"offset":4270},"abstract_content":"sizeof(char*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1667076b7c0dd4859974fd8a0612a4bfd6d627411f920cabd5962c0236154ddf3ce1a6b39d6531d1b858dbdeacd6e5be71b1699ebe370957b2d198e30b98ef33_0","lines":"                   ? malloc ((size + 2) * sizeof (char *))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":147,"col":22,"offset":4234},"end":{"line":147,"col":59,"offset":4271},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":22,"offset":4234},"end":{"line":147,"col":28,"offset":4240},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c68fdfdb8f438dd642db95983a351f618a14b5e7ef2cc64947b9cd4d3964b40717159401adaf563456e0db1f48c6846f5c659f47017e4648e4abe35515288ce_0","lines":"                   ? malloc ((size + 2) * sizeof (char *))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":148,"col":22,"offset":4293},"end":{"line":148,"col":74,"offset":4345},"extra":{"metavars":{"$FUN":{"start":{"line":148,"col":22,"offset":4293},"end":{"line":148,"col":29,"offset":4300},"abstract_content":"realloc"},"$ARG1":{"start":{"line":148,"col":31,"offset":4302},"end":{"line":148,"col":43,"offset":4314},"abstract_content":"last_environ"},"$X":{"start":{"line":148,"col":46,"offset":4317},"end":{"line":148,"col":54,"offset":4325},"abstract_content":"size+2"},"$Y":{"start":{"line":148,"col":58,"offset":4329},"end":{"line":148,"col":73,"offset":4344},"abstract_content":"sizeof(char*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b10b822adf1d9c3d589e2923e95cc24b17eb8e1507eb4c900838e658fcbc36c862d6923ccdccd0cbc7e98bf2644698525acf9034f2d44335b6dc8520d7825af9_0","lines":"                   : realloc (last_environ, (size + 2) * sizeof (char *)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":148,"col":22,"offset":4293},"end":{"line":148,"col":74,"offset":4345},"extra":{"metavars":{"$FUN":{"start":{"line":148,"col":22,"offset":4293},"end":{"line":148,"col":29,"offset":4300},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c77a7016283fad22e2c6637837c9c2cf997374cd9c48e1f4ed398d9bbbda79a575ec144d7057fd10b6ec8c22090aae50f4bc298f9412345cda7b7ed206a09896_0","lines":"                   : realloc (last_environ, (size + 2) * sizeof (char *)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":168,"col":32,"offset":4975},"end":{"line":168,"col":61,"offset":5004},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"5621e3a35179cd4493c2893231ccd45da0ca2458643eeaff7c954c839cf728490fe7ddc4a70864c18fe4451a44e03395d352fd1871b073f6b9b91efdc1004f6e_0","lines":"          new_value = (char *) alloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":168,"col":32,"offset":4975},"end":{"line":168,"col":61,"offset":5004},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":168,"col":32,"offset":4975},"end":{"line":168,"col":38,"offset":4981},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"141ed9808c48125b90bb73a6d82fd03434eff7fce83c9404ba47f1efa09159c62e7a1fddd702f36720eb1430dd4b55500abc0f1d1baf3f57e35a4fc9dca22ea7_0","lines":"          new_value = (char *) alloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":172,"col":32,"offset":5160},"end":{"line":172,"col":62,"offset":5190},"extra":{"metavars":{"$1":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":8,"offset":7},"abstract_content":"a"},"$FUN":{"start":{"line":172,"col":32,"offset":5160},"end":{"line":172,"col":39,"offset":5167},"abstract_content":"malloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"363f6db259dcaf68ee3c63179e7b1cda44a04a2401e099e5691cf380a4507daa1c6b85933767dd35eb23ea2c0e99789a1934ec8584b7b2457de2f7a2bc5258c1_0","lines":"          new_value = (char *) malloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":179,"col":11,"offset":5346},"end":{"line":179,"col":44,"offset":5379},"extra":{"metavars":{"$FUN":{"start":{"line":179,"col":11,"offset":5346},"end":{"line":179,"col":17,"offset":5352},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_0","lines":"          memcpy (new_value, name, namelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":181,"col":11,"offset":5427},"end":{"line":181,"col":58,"offset":5474},"extra":{"metavars":{"$FUN":{"start":{"line":181,"col":11,"offset":5427},"end":{"line":181,"col":17,"offset":5433},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_1","lines":"          memcpy (&new_value[namelen + 1], value, vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":188,"col":44,"offset":5645},"end":{"line":188,"col":73,"offset":5674},"extra":{"metavars":{"$FUN":{"start":{"line":188,"col":44,"offset":5645},"end":{"line":188,"col":50,"offset":5651},"abstract_content":"malloc"},"$X":{"start":{"line":188,"col":52,"offset":5653},"end":{"line":188,"col":63,"offset":5664},"abstract_content":"namelen+1"},"$Y":{"start":{"line":188,"col":66,"offset":5667},"end":{"line":188,"col":72,"offset":5673},"abstract_content":"vallen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2db936f684da1c61633aa237e2c1b970e26b866ea40c369035253bc64bce980459920e6d36c78c3b479f40af6a9e71316f9297d3164ade7eb233581eba77ece7_0","lines":"              new_environ[size] = (char *) malloc (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":188,"col":44,"offset":5645},"end":{"line":188,"col":73,"offset":5674},"extra":{"metavars":{"$FUN":{"start":{"line":188,"col":44,"offset":5645},"end":{"line":188,"col":50,"offset":5651},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c68fdfdb8f438dd642db95983a351f618a14b5e7ef2cc64947b9cd4d3964b40717159401adaf563456e0db1f48c6846f5c659f47017e4648e4abe35515288ce_1","lines":"              new_environ[size] = (char *) malloc (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":200,"col":15,"offset":5972},"end":{"line":200,"col":74,"offset":6031},"extra":{"metavars":{"$FUN":{"start":{"line":200,"col":15,"offset":5972},"end":{"line":200,"col":21,"offset":5978},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_2","lines":"              memcpy (new_environ[size], new_value, namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":202,"col":15,"offset":6053},"end":{"line":202,"col":56,"offset":6094},"extra":{"metavars":{"$FUN":{"start":{"line":202,"col":15,"offset":6053},"end":{"line":202,"col":21,"offset":6059},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_3","lines":"              memcpy (new_environ[size], name, namelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":204,"col":15,"offset":6158},"end":{"line":204,"col":70,"offset":6213},"extra":{"metavars":{"$FUN":{"start":{"line":204,"col":15,"offset":6158},"end":{"line":204,"col":21,"offset":6164},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_4","lines":"              memcpy (&new_environ[size][namelen + 1], value, vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":217,"col":9,"offset":6605},"end":{"line":218,"col":40,"offset":6694},"extra":{"metavars":{"$FUN":{"start":{"line":217,"col":9,"offset":6605},"end":{"line":217,"col":15,"offset":6611},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_5","lines":"        memcpy ((char *) new_environ, (char *) __environ,\n                size * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":236,"col":23,"offset":7035},"end":{"line":236,"col":52,"offset":7064},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"5621e3a35179cd4493c2893231ccd45da0ca2458643eeaff7c954c839cf728490fe7ddc4a70864c18fe4451a44e03395d352fd1871b073f6b9b91efdc1004f6e_1","lines":"          new_value = alloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":236,"col":23,"offset":7035},"end":{"line":236,"col":52,"offset":7064},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":236,"col":23,"offset":7035},"end":{"line":236,"col":29,"offset":7041},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"141ed9808c48125b90bb73a6d82fd03434eff7fce83c9404ba47f1efa09159c62e7a1fddd702f36720eb1430dd4b55500abc0f1d1baf3f57e35a4fc9dca22ea7_1","lines":"          new_value = alloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":240,"col":23,"offset":7211},"end":{"line":240,"col":53,"offset":7241},"extra":{"metavars":{"$1":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":8,"offset":7},"abstract_content":"a"},"$FUN":{"start":{"line":240,"col":23,"offset":7211},"end":{"line":240,"col":30,"offset":7218},"abstract_content":"malloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"363f6db259dcaf68ee3c63179e7b1cda44a04a2401e099e5691cf380a4507daa1c6b85933767dd35eb23ea2c0e99789a1934ec8584b7b2457de2f7a2bc5258c1_1","lines":"          new_value = malloca (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":247,"col":11,"offset":7397},"end":{"line":247,"col":44,"offset":7430},"extra":{"metavars":{"$FUN":{"start":{"line":247,"col":11,"offset":7397},"end":{"line":247,"col":17,"offset":7403},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_6","lines":"          memcpy (new_value, name, namelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":249,"col":11,"offset":7478},"end":{"line":249,"col":58,"offset":7525},"extra":{"metavars":{"$FUN":{"start":{"line":249,"col":11,"offset":7478},"end":{"line":249,"col":17,"offset":7484},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_7","lines":"          memcpy (&new_value[namelen + 1], value, vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":256,"col":29,"offset":7651},"end":{"line":256,"col":58,"offset":7680},"extra":{"metavars":{"$FUN":{"start":{"line":256,"col":29,"offset":7651},"end":{"line":256,"col":35,"offset":7657},"abstract_content":"malloc"},"$X":{"start":{"line":256,"col":37,"offset":7659},"end":{"line":256,"col":48,"offset":7670},"abstract_content":"namelen+1"},"$Y":{"start":{"line":256,"col":51,"offset":7673},"end":{"line":256,"col":57,"offset":7679},"abstract_content":"vallen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2db936f684da1c61633aa237e2c1b970e26b866ea40c369035253bc64bce980459920e6d36c78c3b479f40af6a9e71316f9297d3164ade7eb233581eba77ece7_1","lines":"              np = (char *) malloc (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":256,"col":29,"offset":7651},"end":{"line":256,"col":58,"offset":7680},"extra":{"metavars":{"$FUN":{"start":{"line":256,"col":29,"offset":7651},"end":{"line":256,"col":35,"offset":7657},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c68fdfdb8f438dd642db95983a351f618a14b5e7ef2cc64947b9cd4d3964b40717159401adaf563456e0db1f48c6846f5c659f47017e4648e4abe35515288ce_2","lines":"              np = (char *) malloc (namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":268,"col":15,"offset":7963},"end":{"line":268,"col":59,"offset":8007},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":15,"offset":7963},"end":{"line":268,"col":21,"offset":7969},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_8","lines":"              memcpy (np, new_value, namelen + 1 + vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":270,"col":15,"offset":8029},"end":{"line":270,"col":41,"offset":8055},"extra":{"metavars":{"$FUN":{"start":{"line":270,"col":15,"offset":8029},"end":{"line":270,"col":21,"offset":8035},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_9","lines":"              memcpy (np, name, namelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":272,"col":15,"offset":8104},"end":{"line":272,"col":55,"offset":8144},"extra":{"metavars":{"$FUN":{"start":{"line":272,"col":15,"offset":8104},"end":{"line":272,"col":21,"offset":8110},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_10","lines":"              memcpy (&np[namelen + 1], value, vallen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":313,"col":7,"offset":8971},"end":{"line":313,"col":24,"offset":8988},"extra":{"metavars":{"$PTR":{"start":{"line":313,"col":13,"offset":8977},"end":{"line":313,"col":22,"offset":8986},"abstract_content":"__environ"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b29bc57246e85531059c89d73d17be0dd383c3794d6c2ba3717a6264bf682426f4af6b7e176fd2afeb008bf60300c653f8c2d13455bf44f67841e574549e9ca_0","lines":"      free (__environ);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":369,"col":12,"offset":10196},"end":{"line":369,"col":41,"offset":10225},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":369,"col":12,"offset":10196},"end":{"line":369,"col":18,"offset":10202},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f83c2502f736c3055950d81d7c9328879ac6941172f0e858971c1789296c6607d811beaaab8c819ac11e80ba035d3e6b847404c53e092247ab0fc7ac796717d_0","lines":"  result = setenv (name, value, replace);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":372,"col":19,"offset":10298},"end":{"line":372,"col":32,"offset":10311},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":372,"col":19,"offset":10298},"end":{"line":372,"col":25,"offset":10304},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"28007be1118d202f1f5dd4b8541b3b65bc61d526102ff235f2a4eec316f2e66cc4b584e271a00a2911ddfeb54ba795823f7d417f31559d4ea286b26356039e5c_0","lines":"      char *tmp = getenv (name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":377,"col":17,"offset":10436},"end":{"line":377,"col":34,"offset":10453},"extra":{"metavars":{"$1":{"start":{"line":1,"col":7,"offset":6},"end":{"line":1,"col":8,"offset":7},"abstract_content":"a"},"$FUN":{"start":{"line":377,"col":17,"offset":10436},"end":{"line":377,"col":24,"offset":10443},"abstract_content":"malloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"363f6db259dcaf68ee3c63179e7b1cda44a04a2401e099e5691cf380a4507daa1c6b85933767dd35eb23ea2c0e99789a1934ec8584b7b2457de2f7a2bc5258c1_2","lines":"          tmp = malloca (len + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":380,"col":11,"offset":10546},"end":{"line":380,"col":43,"offset":10578},"extra":{"metavars":{"$FUN":{"start":{"line":380,"col":11,"offset":10546},"end":{"line":380,"col":17,"offset":10552},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d106b4d56d87a9854f7b8e22539f4dd27fb6c64e182d5799fee5f0be46c406092a8253c09fa5dfee87970499b40d8fb3bbd783da1d647cf1f1192f58ed986d5f_11","lines":"          memcpy (tmp + 1, value, len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":381,"col":20,"offset":10599},"end":{"line":381,"col":47,"offset":10626},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":381,"col":20,"offset":10599},"end":{"line":381,"col":26,"offset":10605},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f83c2502f736c3055950d81d7c9328879ac6941172f0e858971c1789296c6607d811beaaab8c819ac11e80ba035d3e6b847404c53e092247ab0fc7ac796717d_1","lines":"          result = setenv (name, tmp, replace);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sleep.c","start":{"line":60,"col":22,"offset":1928},"end":{"line":60,"col":47,"offset":1953},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":60,"col":22,"offset":1928},"end":{"line":60,"col":27,"offset":1933},"abstract_content":"limit"},"$SIGNED":{"start":{"line":60,"col":30,"offset":1936},"end":{"line":60,"col":32,"offset":1938},"abstract_content":"24"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a36ae00ac979becd179d4f8dd60382f2c0be52e169fbb0274684bb395f37679baf6ba6759a565a451296817712a1c6a50bcad81fdedf85279ba70572075d198b_0","lines":"  const unsigned int limit = 24 * 24 * 60 * 60;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":48,"col":10,"offset":1709},"end":{"line":48,"col":30,"offset":1729},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"9bf71f31e4230ae68645be39b13deb9d18f95744864c9efc63f0c013908895aa03856d833d939bd6e3f805a771136da4dd0e04e1e64bae1672f9b8228063cc78_0","lines":"  return stat (filename, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":48,"col":10,"offset":1709},"end":{"line":48,"col":30,"offset":1729},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":10,"offset":1709},"end":{"line":48,"col":14,"offset":1713},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e13a9f9637ba7abccf7d95261c47ea09b42084fd7ad5c4bae991d164f36b972d138aaf3d3b13b4906072a3bdcd833509b95280aa655efe258b82e38f32f89dd7_0","lines":"  return stat (filename, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":82,"col":16,"offset":2664},"end":{"line":82,"col":36,"offset":2684},"extra":{"metavars":{"$FUN":{"start":{"line":82,"col":16,"offset":2664},"end":{"line":82,"col":25,"offset":2673},"abstract_content":"orig_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bde49680bd91ab78116fb5d182b477e1254dd87cf365d1428cdf91254ed0fdf46d3e0ce4d9d5151b96d82901679ad188b5dc900a6fa0802e824a49625fb3ff44_0","lines":"  int result = orig_stat (name, st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":117,"col":11,"offset":3919},"end":{"line":117,"col":36,"offset":3944},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"affb8d251f25761256406533c8b8618e8252bf4a54c83693497fb5a76e020c8f01f226fcf4a528302177555030ed7fdb58a0634989d61df4b2f4b77584ef4af0_0","lines":"          strcpy (fixed_name, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":117,"col":11,"offset":3919},"end":{"line":117,"col":36,"offset":3944},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":11,"offset":3919},"end":{"line":117,"col":17,"offset":3925},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dbc9ccfd28a9e8e2ed15283f2d4e17c5d1ab7c12b3b9177488c7b3d2c3f528daa92f74f475e198a0fdbdfce778f0c78a4034a27c03857491b861b1fe2bb0606b_0","lines":"          strcpy (fixed_name, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","start":{"line":128,"col":20,"offset":4284},"end":{"line":128,"col":46,"offset":4310},"extra":{"metavars":{"$FUN":{"start":{"line":128,"col":20,"offset":4284},"end":{"line":128,"col":29,"offset":4293},"abstract_content":"orig_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bde49680bd91ab78116fb5d182b477e1254dd87cf365d1428cdf91254ed0fdf46d3e0ce4d9d5151b96d82901679ad188b5dc900a6fa0802e824a49625fb3ff44_1","lines":"          result = orig_stat (fixed_name, st);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strchrnul.c","start":{"line":70,"col":16,"offset":2367},"end":{"line":70,"col":22,"offset":2373},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":70,"col":16,"offset":2367},"end":{"line":70,"col":17,"offset":2368},"abstract_content":"i"},"$SIGNED":{"start":{"line":70,"col":20,"offset":2371},"end":{"line":70,"col":22,"offset":2373},"abstract_content":"64"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af76bd0b99be388bd091b8a68e276afb0efd876554798d6470a767a71265555ced4d30b386734385eda13632d43c3193c82fb3238623e5211b38780dcb4f54b3_0","lines":"          for (i = 64; i < sizeof (longword) * 8; i *= 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strchrnul.c","start":{"line":122,"col":7,"offset":4883},"end":{"line":125,"col":15,"offset":5042},"extra":{"metavars":{"$EXPR1":{"start":{"line":122,"col":15,"offset":4891},"end":{"line":122,"col":39,"offset":4915},"abstract_content":"longword1-repeated_one"},"$EXPR2":{"start":{"line":122,"col":43,"offset":4919},"end":{"line":122,"col":53,"offset":4929},"abstract_content":"~longword1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6619c691f3e9f85925cc3dec4142d896a5aea10a45d97baace8b80948dbc26287bb70f773cf1c7bb1765ed791cfb7a4d8937f16c9976ddc21020c5ad39fe56ba_0","lines":"      if (((((longword1 - repeated_one) & ~longword1)\n            | ((longword2 - repeated_one) & ~longword2))\n           & (repeated_one << 7)) != 0)\n        break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":41,"col":10,"offset":1094},"end":{"line":41,"col":30,"offset":1114},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":41,"col":10,"offset":1094},"end":{"line":41,"col":13,"offset":1097},"abstract_content":"len"},"$SIGNED":{"start":{"line":41,"col":29,"offset":1113},"end":{"line":41,"col":30,"offset":1114},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6da6485a331a1d1b506ff59ec4504840a28d330f7761dfbc0472a484d204523a467dc09d697ba183a17954fd1bb4fb82a8b070bbf8b4263ffc3213c4cb0195d_0","lines":"  size_t len = strlen (s) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":42,"col":9,"offset":1124},"end":{"line":42,"col":27,"offset":1142},"extra":{"metavars":{"$RET":{"start":{"line":42,"col":9,"offset":1124},"end":{"line":42,"col":12,"offset":1127},"abstract_content":"new"},"$FUN":{"start":{"line":42,"col":15,"offset":1130},"end":{"line":42,"col":21,"offset":1136},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"41f5ed3f61ec1c6c7c3be54c87cf25ef49b7e3905ea1d930f29131d8739d0687c916f7954eef11a6aa837523d04fbee982aee2101c7a8a18eb3bd7e5a00cb808_0","lines":"  void *new = malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":42,"col":15,"offset":1130},"end":{"line":42,"col":27,"offset":1142},"extra":{"metavars":{"$X":{"start":{"line":41,"col":16,"offset":1100},"end":{"line":41,"col":26,"offset":1110},"abstract_content":"strlen(s)"},"$Y":{"start":{"line":41,"col":29,"offset":1113},"end":{"line":41,"col":30,"offset":1114},"abstract_content":"1"},"$FUN":{"start":{"line":42,"col":15,"offset":1130},"end":{"line":42,"col":21,"offset":1136},"abstract_content":"malloc"},"$N":{"start":{"line":42,"col":23,"offset":1138},"end":{"line":42,"col":26,"offset":1141},"abstract_content":"len","propagated_value":{"svalue_start":{"line":41,"col":16,"offset":1100},"svalue_end":{"line":41,"col":30,"offset":1114},"svalue_abstract_content":"strlen(s)+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c6a69cf660731bdaaaed62f9555619d3caaab550524ea942252abf5c2091d53c186d3ce483b194d03ab1ccd7cb50628d6df96d245d6c9a8fd6cba90f5f6d04c4_0","lines":"  void *new = malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":42,"col":15,"offset":1130},"end":{"line":42,"col":27,"offset":1142},"extra":{"metavars":{"$FUN":{"start":{"line":42,"col":15,"offset":1130},"end":{"line":42,"col":21,"offset":1136},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fdf82ab4dad7ef12566a6030f84806f681bebc2e9aca0a21bf273da709c9ae486ceaec82b8a4f4c1c67577677eded91244b5716fac49922321d30b3d7138460d_0","lines":"  void *new = malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":47,"col":19,"offset":1200},"end":{"line":47,"col":39,"offset":1220},"extra":{"metavars":{"$FUN":{"start":{"line":47,"col":19,"offset":1200},"end":{"line":47,"col":25,"offset":1206},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c9e58bc4a923419eeb5d8af77b71fb373afcc7a9722c8a6ad1e0cc0aab8a6128cc6283c5ce4b3fe493561d23007dfabc51508471d315394e492308be930dc594_0","lines":"  return (char *) memcpy (new, s, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":59,"col":7,"offset":1865},"end":{"line":59,"col":28,"offset":1886},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"fmt"},"$BUF":{"start":{"line":59,"col":16,"offset":1874},"end":{"line":59,"col":19,"offset":1877},"abstract_content":"buf"},"$FMT":{"start":{"line":59,"col":21,"offset":1879},"end":{"line":59,"col":24,"offset":1882},"abstract_content":"fmt","propagated_value":{"svalue_start":{"line":57,"col":33,"offset":1773},"svalue_end":{"line":57,"col":51,"offset":1791},"svalue_abstract_content":"\"Unknown error %d\""}}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"fe8ea9d0023d9a2ebf446670fd39fb640ce8cd5c2fcd451c32ae456502cd2b60122a791f123e35586695b73d0b236754bd802316d79118ee4c7ec2757df807a1_0","lines":"      sprintf (buf, fmt, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":59,"col":7,"offset":1865},"end":{"line":59,"col":28,"offset":1886},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":7,"offset":1865},"end":{"line":59,"col":14,"offset":1872},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fbabc9581778f7d426b8ce7cf849c383dfa22b3a30d5a98f46922dc851fa52346ef65ff8f501ad4235fb88ee6ad8f6cf1ebb4547fda810960130705205c92be8_0","lines":"      sprintf (buf, fmt, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":59,"col":7,"offset":1865},"end":{"line":59,"col":28,"offset":1886},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"fmt"},"$TYPE":{"start":{"line":39,"col":10,"offset":1119},"end":{"line":39,"col":14,"offset":1123},"abstract_content":"char"},"$LEN":{"start":{"line":39,"col":19,"offset":1128},"end":{"line":39,"col":31,"offset":1140},"abstract_content":"STACKBUF_LEN"},"$FUN":{"start":{"line":59,"col":7,"offset":1865},"end":{"line":59,"col":14,"offset":1872},"abstract_content":"sprintf"},"$BUF":{"start":{"line":59,"col":16,"offset":1874},"end":{"line":59,"col":19,"offset":1877},"abstract_content":"buf"},"$FMT":{"start":{"line":59,"col":21,"offset":1879},"end":{"line":59,"col":24,"offset":1882},"abstract_content":"fmt","propagated_value":{"svalue_start":{"line":57,"col":33,"offset":1773},"svalue_end":{"line":57,"col":51,"offset":1791},"svalue_abstract_content":"\"Unknown error %d\""}}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e20fc8f5b0544a0627a2a648392b945f0ea989553c5b6f5f5f06fcb571bc9b07d0f170af801170067e9c65b791415439e8b89741ee5ec0c11156ac6c649b1869_0","lines":"      sprintf (buf, fmt, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":61,"col":7,"offset":1916},"end":{"line":61,"col":18,"offset":1927},"extra":{"metavars":{"$TYPE":{"start":{"line":39,"col":10,"offset":1119},"end":{"line":39,"col":14,"offset":1123},"abstract_content":"char"},"$LEN":{"start":{"line":39,"col":19,"offset":1128},"end":{"line":39,"col":31,"offset":1140},"abstract_content":"STACKBUF_LEN"},"$PTR":{"start":{"line":61,"col":14,"offset":1923},"end":{"line":61,"col":17,"offset":1926},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cfeeadf7ec7b7aeb8d591d65c8061d58cc62cda1af751ebd3b1dd66a4045834d8a5fd2db54580e602b429836cd1a00df3d75400282e60b7d874ba69b88eefa27_0","lines":"      return buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":69,"col":3,"offset":2046},"end":{"line":69,"col":29,"offset":2072},"extra":{"metavars":{"$FUN":{"start":{"line":69,"col":3,"offset":2046},"end":{"line":69,"col":9,"offset":2052},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d1fa3553ac639aabd0a34f525e6c9c7ed7cdc33e03c2020949dc1cdcf424c01bd57da1525139cd0d5a29e09d60e576b1c827524fc726d081751fbe8488207f02_0","lines":"  memcpy (buf, msg, len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":69,"col":3,"offset":2046},"end":{"line":69,"col":29,"offset":2072},"extra":{"metavars":{"$TYPE":{"start":{"line":39,"col":10,"offset":1119},"end":{"line":39,"col":14,"offset":1123},"abstract_content":"char"},"$LEN":{"start":{"line":39,"col":19,"offset":1128},"end":{"line":39,"col":31,"offset":1140},"abstract_content":"STACKBUF_LEN"},"$FUN":{"start":{"line":69,"col":3,"offset":2046},"end":{"line":69,"col":9,"offset":2052},"abstract_content":"memcpy"},"$BUF":{"start":{"line":69,"col":11,"offset":2054},"end":{"line":69,"col":14,"offset":2057},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ad0d0ebe787e40786db9c730bbd00f806431b62cb1f135976c8f6c829c70ad369f351f2ea97650e5bd75643b8a66660e050631e9b59270402bccc7cff837d6d0_0","lines":"  memcpy (buf, msg, len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","start":{"line":70,"col":3,"offset":2076},"end":{"line":70,"col":14,"offset":2087},"extra":{"metavars":{"$TYPE":{"start":{"line":39,"col":10,"offset":1119},"end":{"line":39,"col":14,"offset":1123},"abstract_content":"char"},"$LEN":{"start":{"line":39,"col":19,"offset":1128},"end":{"line":39,"col":31,"offset":1140},"abstract_content":"STACKBUF_LEN"},"$PTR":{"start":{"line":70,"col":10,"offset":2083},"end":{"line":70,"col":13,"offset":2086},"abstract_content":"buf"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cfeeadf7ec7b7aeb8d591d65c8061d58cc62cda1af751ebd3b1dd66a4045834d8a5fd2db54580e602b429836cd1a00df3d75400282e60b7d874ba69b88eefa27_1","lines":"  return buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":438,"col":1,"offset":15982},"end":{"line":438,"col":20,"offset":16001},"extra":{"metavars":{"$FUN":{"start":{"line":438,"col":1,"offset":15982},"end":{"line":438,"col":20,"offset":16001},"abstract_content":"__strftime_internal"},"$SIGNED":{"start":{"line":1033,"col":32,"offset":36136},"end":{"line":1033,"col":33,"offset":36137},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"671fca57b859beca56bcf496a5601b695174821a980564c9fbec54fa726d4aba7ec7541ed189461627831a027f2c25b743f6cf5cc4f0b3e374820d17681b209f_0","lines":"__strftime_internal (STREAM_OR_CHAR_T *s, STRFTIME_ARG (size_t maxsize)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":447,"col":10,"offset":16379},"end":{"line":447,"col":31,"offset":16400},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":447,"col":10,"offset":16379},"end":{"line":447,"col":17,"offset":16386},"abstract_content":"maxsize"},"$SIGNED":{"start":{"line":447,"col":29,"offset":16398},"end":{"line":447,"col":31,"offset":16400},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a7366d18df56d8467de09b3a78718ead696230996ee2e2786b18d3626898f04fc02ef48769da9af61c1b6e3c81d033a531334c7d805b273e8bdb3acba83cf282_0","lines":"  size_t maxsize = (size_t) -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":482,"col":10,"offset":17932},"end":{"line":482,"col":15,"offset":17937},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":482,"col":10,"offset":17932},"end":{"line":482,"col":11,"offset":17933},"abstract_content":"i"},"$SIGNED":{"start":{"line":482,"col":14,"offset":17936},"end":{"line":482,"col":15,"offset":17937},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d5446692c2413d6e1cbc157dba44d2685f6131016c393098ca1495d411b6e83e2087aacabdad6c7d1c104436ea6d0931e3f7e7d4f3109759c61ea432c309fb25_0","lines":"  size_t i = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":609,"col":20,"offset":22881},"end":{"line":609,"col":27,"offset":22888},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":609,"col":20,"offset":22881},"end":{"line":609,"col":23,"offset":22884},"abstract_content":"len"},"$SIGNED":{"start":{"line":609,"col":26,"offset":22887},"end":{"line":609,"col":27,"offset":22888},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"593ab53e7149d95055b3a6728a1d17a418a6a4e2a7560e4245e575de2d364984dc4263a930f5e9241cf4b104f6a48db1c6a83a16c5308b4eee86f3a5c4e9d9c6_0","lines":"            size_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":618,"col":24,"offset":23085},"end":{"line":618,"col":71,"offset":23132},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":618,"col":24,"offset":23085},"end":{"line":618,"col":29,"offset":23090},"abstract_content":"bytes"},"$SIGNED":{"start":{"line":618,"col":44,"offset":23105},"end":{"line":618,"col":47,"offset":23108},"abstract_content":"len","propagated_value":{"svalue_start":{"line":609,"col":26,"offset":22887},"svalue_end":{"line":609,"col":27,"offset":22888},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"331c9a376ac3401f54dd6112bcff51f5f57997bfa67539781e06c7aec50b589b4bf1dfae370380407e94deac205729cd435f835e5b59da60055a6b1ac3bd5f5e_0","lines":"                size_t bytes = mbrlen (f + len, fsize - len, &mbstate);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":661,"col":19,"offset":24100},"end":{"line":661,"col":23,"offset":24104},"extra":{"metavars":{"$VAR":{"start":{"line":661,"col":19,"offset":24100},"end":{"line":661,"col":23,"offset":24104},"abstract_content":"*++f"},"$VAL1":{"start":{"line":671,"col":18,"offset":24371},"end":{"line":671,"col":25,"offset":24378},"abstract_content":"L_('^')"},"$VAL2":{"start":{"line":674,"col":18,"offset":24454},"end":{"line":674,"col":25,"offset":24461},"abstract_content":"L_('#')"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"538e42a6f125dd98f342140815dbd5d6f2f64a56d4f61b3976fed2858b7ea3a165e6c0ce50f19405e4e9c4d098ac1567815c8dd8a5c43c07e9b53d4a928fc4ba_0","lines":"          switch (*++f)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":719,"col":15,"offset":25453},"end":{"line":719,"col":26,"offset":25464},"extra":{"metavars":{"$VAR":{"start":{"line":719,"col":15,"offset":25453},"end":{"line":719,"col":26,"offset":25464},"abstract_content":"format_char"},"$VAL2":{"start":{"line":761,"col":14,"offset":28065},"end":{"line":761,"col":21,"offset":28072},"abstract_content":"L_('%')"},"$VAL1":{"start":{"line":1137,"col":14,"offset":38769},"end":{"line":1137,"col":21,"offset":38776},"abstract_content":"L_('P')"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0cc936823c8693f1d9eca2cb129b12791dae38b47f65b212d53b38095c93d5173ff1260ac8b864d2f0f523503de060fdc7ba790ab35fc5946629995de69d5566_0","lines":"      switch (format_char)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":832,"col":11,"offset":29608},"end":{"line":837,"col":75,"offset":29903},"extra":{"metavars":{"$EXPR1":{"start":{"line":833,"col":24,"offset":29654},"end":{"line":833,"col":30,"offset":29660},"abstract_content":"subfmt"},"$EXPR2":{"start":{"line":834,"col":24,"offset":29686},"end":{"line":835,"col":71,"offset":29795},"abstract_content":"(const CHAR_T*_NL_CURRENT(LC_TIME NLW(ERA_D_T_FMT))"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"93f067c79f934aea1b5a1768e31d2b53ac867b18b2e70d8fe2e335948743c7573917ee25c7e3e43de0519e4a44fd32ae454b4e7175f32d3860dfb6cb6d26c191_0","lines":"          if (! (modifier == 'E'\n                 && (*(subfmt =\n                       (const CHAR_T *) _NL_CURRENT (LC_TIME,\n                                                     NLW(ERA_D_T_FMT)))\n                     != '\\0')))\n            subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_T_FMT));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":844,"col":20,"offset":30004},"end":{"line":847,"col":69,"offset":30261},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":844,"col":20,"offset":30004},"end":{"line":844,"col":23,"offset":30007},"abstract_content":"len"},"$SIGNED":{"start":{"line":844,"col":76,"offset":30060},"end":{"line":844,"col":78,"offset":30062},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e2276d1611a84b8aba7cce23e324d766ec7c60bad0dbf79564f96993cd620ba40e9ff130bf676af9d06196f24a4b5ca0f97e2185fd91ba06d28658abd783297c_0","lines":"            size_t len = __strftime_internal (NULL, STRFTIME_ARG ((size_t) -1)\n                                              subfmt,\n                                              tp, to_uppcase, tzset_called\n                                              extra_args LOCALE_ARG);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":919,"col":11,"offset":32573},"end":{"line":923,"col":73,"offset":32818},"extra":{"metavars":{"$EXPR1":{"start":{"line":920,"col":24,"offset":32623},"end":{"line":920,"col":30,"offset":32629},"abstract_content":"subfmt"},"$EXPR2":{"start":{"line":921,"col":24,"offset":32655},"end":{"line":921,"col":77,"offset":32708},"abstract_content":"(const CHAR_T*_NL_CURRENT(LC_TIME NLW(ERA_D_FMT))"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"96101126efe337ac52ec6e55565b5c6814e20c3dc422db4cade9065d4ebe455252b8038b6886b37498ca195bac5d8244b3dc9c53907363c7ff5d2dcd25ee98e0_0","lines":"          if (! (modifier == L_('E')\n                 && (*(subfmt =\n                       (const CHAR_T *)_NL_CURRENT (LC_TIME, NLW(ERA_D_FMT)))\n                     != L_('\\0'))))\n            subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(D_FMT));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":961,"col":11,"offset":33845},"end":{"line":961,"col":40,"offset":33874},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":961,"col":11,"offset":33845},"end":{"line":961,"col":25,"offset":33859},"abstract_content":"u_number_value"},"$SIGNED":{"start":{"line":961,"col":28,"offset":33862},"end":{"line":961,"col":40,"offset":33874},"abstract_content":"number_value"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4af941ba4734b6340e02d79d870c91fd648479b80b2a3125d01c99e099339d5ea58d97a738fb3a06916de1eaadab7a072234183bf6032b30995e309d30e21c71_0","lines":"          u_number_value = number_value;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1002,"col":15,"offset":35162},"end":{"line":1003,"col":31,"offset":35215},"extra":{"metavars":{"$EXPR1":{"start":{"line":1002,"col":19,"offset":35166},"end":{"line":1002,"col":32,"offset":35179},"abstract_content":"tz_colon_mask"},"$EXPR2":{"start":{"line":1002,"col":35,"offset":35182},"end":{"line":1002,"col":36,"offset":35183},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"09e7062a1238d6bc8795d067c3a7a030251632f07d85faf6c1e98bb40b3cf47ac578dda47a91a6784cc3637d7c5aa18c712c529fcf71f50f73a31b4bbbfb85a8_0","lines":"              if (tz_colon_mask & 1)\n                *--bufp = ':';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1167,"col":11,"offset":39429},"end":{"line":1170,"col":40,"offset":39622},"extra":{"metavars":{"$EXPR1":{"start":{"line":1167,"col":17,"offset":39435},"end":{"line":1167,"col":23,"offset":39441},"abstract_content":"subfmt","propagated_value":{"svalue_start":{"line":1167,"col":26,"offset":39444},"svalue_end":{"line":1168,"col":72,"offset":39554},"svalue_abstract_content":"(const CHAR_T*_NL_CURRENT(LC_TIME NLW(T_FMT_AMPM))"}},"$EXPR2":{"start":{"line":1167,"col":26,"offset":39444},"end":{"line":1168,"col":72,"offset":39554},"abstract_content":"(const CHAR_T*_NL_CURRENT(LC_TIME NLW(T_FMT_AMPM))"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eb25025e68e1459d19e4324a1d0afbb7c784509818eaed7197ba296997f136e49ffe6790d75d353aca99d8d42b8bfb11f632f13fcb2cf7724bc3f294a01e9446_0","lines":"          if (*(subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME,\n                                                       NLW(T_FMT_AMPM)))\n              == L_('\\0'))\n            subfmt = L_(\"%I:%M:%S %p\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1213,"col":11,"offset":40672},"end":{"line":1217,"col":73,"offset":40918},"extra":{"metavars":{"$EXPR1":{"start":{"line":1214,"col":24,"offset":40722},"end":{"line":1214,"col":30,"offset":40728},"abstract_content":"subfmt"},"$EXPR2":{"start":{"line":1215,"col":24,"offset":40754},"end":{"line":1215,"col":78,"offset":40808},"abstract_content":"(const CHAR_T*_NL_CURRENT(LC_TIME NLW(ERA_T_FMT))"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"95e790b68e457299d4103da95cf93045711c1977cae24cf785f2e6e56d9d5ff443dd07909a8759240f731516d9c95c560fa9eb5cca72f9a8da9d862c387fc6e2_0","lines":"          if (! (modifier == L_('E')\n                 && (*(subfmt =\n                       (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(ERA_T_FMT)))\n                     != L_('\\0'))))\n            subfmt = (const CHAR_T *) _NL_CURRENT (LC_TIME, NLW(T_FMT));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1275,"col":21,"offset":42743},"end":{"line":1275,"col":23,"offset":42745},"extra":{"metavars":{"$VAR":{"start":{"line":1275,"col":21,"offset":42743},"end":{"line":1275,"col":23,"offset":42745},"abstract_content":"*f"},"$VAL1":{"start":{"line":1277,"col":20,"offset":42782},"end":{"line":1277,"col":27,"offset":42789},"abstract_content":"L_('g')"},"$VAL2":{"start":{"line":1287,"col":20,"offset":43157},"end":{"line":1287,"col":27,"offset":43164},"abstract_content":"L_('G')"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c0803fe9e50149761805cd703718c4d955cf34a86631f4358ac90daf1435af63bdd4b8a2a1a4e5d954f0a9f03b06afa72b849129a4dfab45271fd663e69de915_0","lines":"            switch (*f)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1380,"col":16,"offset":45729},"end":{"line":1380,"col":26,"offset":45739},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1380,"col":16,"offset":45729},"end":{"line":1380,"col":22,"offset":45735},"abstract_content":"colons"},"$SIGNED":{"start":{"line":1380,"col":25,"offset":45738},"end":{"line":1380,"col":26,"offset":45739},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1616b7f66081c9a1b24ce69d0b9d7d231fb76d5f40a0060e58364ff0bc684126e05c33131a55d4a9fda769f82fb9ad40c2df3cbb86140a1388ab44485512a4e4_0","lines":"          for (colons = 1; f[colons] == L_(':'); colons++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1388,"col":11,"offset":45948},"end":{"line":1388,"col":21,"offset":45958},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1388,"col":11,"offset":45948},"end":{"line":1388,"col":17,"offset":45954},"abstract_content":"colons"},"$SIGNED":{"start":{"line":1388,"col":20,"offset":45957},"end":{"line":1388,"col":21,"offset":45958},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b1e9d2ce22d4dc9940cfffe3e064a97bb2212921b337dd2965f6a181ced7ed0844cb3a7801266ae092d434445398c5828a71e1cab7a8b5db19b4cd4881b5192e_0","lines":"          colons = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1430,"col":21,"offset":47049},"end":{"line":1437,"col":29,"offset":47447},"extra":{"metavars":{"$EXPR1":{"start":{"line":1431,"col":30,"offset":47112},"end":{"line":1431,"col":52,"offset":47134},"abstract_content":"ltm.tm_sec^tm.tm_sec"},"$EXPR2":{"start":{"line":1432,"col":32,"offset":47167},"end":{"line":1432,"col":54,"offset":47189},"abstract_content":"ltm.tm_min^tm.tm_min"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f6af193ca73a7796ce0bb69f4e8e524efbfe24cd3e796f787d2c2207c8fbe1eae55f8a68a75212d32a4a856a955ed6e54a0b3cc011cb3a7122d91ac0e3e072d9_0","lines":"                    if (! localtime_rz (tz, &lt, &tm)\n                        || ((ltm.tm_sec ^ tm.tm_sec)\n                            | (ltm.tm_min ^ tm.tm_min)\n                            | (ltm.tm_hour ^ tm.tm_hour)\n                            | (ltm.tm_mday ^ tm.tm_mday)\n                            | (ltm.tm_mon ^ tm.tm_mon)\n                            | (ltm.tm_year ^ tm.tm_year)))\n                      break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1451,"col":21,"offset":47749},"end":{"line":1451,"col":27,"offset":47755},"extra":{"metavars":{"$VAR":{"start":{"line":1451,"col":21,"offset":47749},"end":{"line":1451,"col":27,"offset":47755},"abstract_content":"colons"},"$VAL1":{"start":{"line":1453,"col":20,"offset":47792},"end":{"line":1453,"col":21,"offset":47793},"abstract_content":"0"},"$VAL2":{"start":{"line":1456,"col":20,"offset":47902},"end":{"line":1456,"col":21,"offset":47903},"abstract_content":"1"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a64ccadfbe5ccef6a72418d9cdcf608d6d155bc888082705f9bcf6c01c920c20bfd9e1b3416bc3cb3b92e3bec479a4173bc9b5cc415f39b76fbece2515028663_0","lines":"            switch (colons)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strndup.c","start":{"line":29,"col":15,"offset":936},"end":{"line":29,"col":31,"offset":952},"extra":{"metavars":{"$FUN":{"start":{"line":29,"col":15,"offset":936},"end":{"line":29,"col":21,"offset":942},"abstract_content":"malloc"},"$X":{"start":{"line":29,"col":23,"offset":944},"end":{"line":29,"col":26,"offset":947},"abstract_content":"len","propagated_value":{"svalue_start":{"line":28,"col":16,"offset":906},"svalue_end":{"line":28,"col":30,"offset":920},"svalue_abstract_content":"strnlen(s n)"}},"$Y":{"start":{"line":29,"col":29,"offset":950},"end":{"line":29,"col":30,"offset":951},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5daf7bf0d32a0fac5907b3b61c1b1743f83c9aed612169d9e260c7babf093c43c010f31df1e11a8b7aecaa8b114cd066938b9c9a688bfbd480c5e5da0126ce50_0","lines":"  char *new = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strndup.c","start":{"line":29,"col":15,"offset":936},"end":{"line":29,"col":31,"offset":952},"extra":{"metavars":{"$FUN":{"start":{"line":29,"col":15,"offset":936},"end":{"line":29,"col":21,"offset":942},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a91de702266d6ade633a8ad6dadb9114d7b9123e9dd4bc1bfb764935c647e61571fbb6959c72963df2818dcc87586541774c121e1f7eb46ebff9ea872e5492f3_0","lines":"  char *new = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strndup.c","start":{"line":35,"col":10,"offset":1020},"end":{"line":35,"col":30,"offset":1040},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":10,"offset":1020},"end":{"line":35,"col":16,"offset":1026},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e12a28bc08038f9f06819bb580404e010d4859291f5fb059b1b3741cc805ed9d488c5a7a997de947e6895ab2ff3998c4669df18c81d53f3119bbab7ed4f8b2f1_0","lines":"  return memcpy (new, s, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strnlen.c","start":{"line":29,"col":26,"offset":1114},"end":{"line":29,"col":38,"offset":1126},"extra":{"metavars":{"$PTR1":{"start":{"line":29,"col":26,"offset":1114},"end":{"line":29,"col":29,"offset":1117},"abstract_content":"end","propagated_value":{"svalue_start":{"line":28,"col":21,"offset":1058},"svalue_end":{"line":28,"col":50,"offset":1087},"svalue_abstract_content":"memchr(string'\\0'maxlen)"}},"$PTR2":{"start":{"line":29,"col":32,"offset":1120},"end":{"line":29,"col":38,"offset":1126},"abstract_content":"string"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c53d9b5f3f5bf37349c5c2fc8d34e945fbc6f0d8fef2c75cc690e0106533823effef42a3b76f59b317bcebee80982708ceaa483fa843fc2490ae1e00e705918_0","lines":"  return end ? (size_t) (end - string) : maxlen;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strnlen1.c","start":{"line":32,"col":12,"offset":1223},"end":{"line":32,"col":24,"offset":1235},"extra":{"metavars":{"$PTR1":{"start":{"line":32,"col":12,"offset":1223},"end":{"line":32,"col":15,"offset":1226},"abstract_content":"end","propagated_value":{"svalue_start":{"line":30,"col":21,"offset":1147},"svalue_end":{"line":30,"col":65,"offset":1191},"svalue_abstract_content":"(const char*memchr(string'\\0'maxlen)"}},"$PTR2":{"start":{"line":32,"col":18,"offset":1229},"end":{"line":32,"col":24,"offset":1235},"abstract_content":"string"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b72e3e8f466b9f74d45a17a60111016ce1a5d8e43a203eeb30ea9ac9dca97674635505408d6ff31109691889c7b276d36ea531896466f48729ed1c3e7829d5c5_0","lines":"    return end - string + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":507,"col":10,"offset":12940},"end":{"line":507,"col":23,"offset":12953},"extra":{"metavars":{"$FUN":{"start":{"line":507,"col":10,"offset":12940},"end":{"line":507,"col":16,"offset":12946},"abstract_content":"_mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1a907dc85ce44fc2b2c03466004f6eebb343c51a3839092cce0c5aea4c07d5e7f21d914fe5ad314b1c5ae5b483829f2ba743979670b67e5aad88d6b7312db4d8_0","lines":"  return _mkdir (name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":87,"col":3,"offset":2805},"end":{"line":87,"col":34,"offset":2836},"extra":{"metavars":{"$FUN":{"start":{"line":87,"col":3,"offset":2805},"end":{"line":87,"col":9,"offset":2811},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3ee038e00552601dd13a5da4f3b9a7f1c11035dd323ea7b2c67533401186bfe7e4dcb9ed3a764b592568ec8fbfa3fc6008bfb3bfac657ebff9fc520c45144a76_0","lines":"  memcpy (abbrs, abbr, abbr_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":96,"col":10,"offset":3057},"end":{"line":96,"col":50,"offset":3097},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":96,"col":10,"offset":3057},"end":{"line":96,"col":19,"offset":3066},"abstract_content":"name_size"},"$SIGNED":{"start":{"line":96,"col":45,"offset":3092},"end":{"line":96,"col":46,"offset":3093},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"255d5d8c9f3bab666a5d4ae20ea83201501740e08820e2377107e0e9db3e747daa484249451634dd5181046e200cdbb76fdaad4a7429cbe6bc354502a1403510_0","lines":"  size_t name_size = name ? strlen (name) + 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":97,"col":10,"offset":3108},"end":{"line":97,"col":79,"offset":3177},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":97,"col":10,"offset":3108},"end":{"line":97,"col":19,"offset":3117},"abstract_content":"abbr_size"},"$SIGNED":{"start":{"line":97,"col":78,"offset":3176},"end":{"line":97,"col":79,"offset":3177},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"acb27b562a21bdd571f77b43063c4e8dbfbc3572eb6a866bfa6004d706b2de674219a2517482c0bd353f67275d68e4b50aacd8ad01ca17f7bccada8067af0746_0","lines":"  size_t abbr_size = name_size < ABBR_SIZE_MIN ? ABBR_SIZE_MIN : name_size + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":98,"col":19,"offset":3197},"end":{"line":98,"col":73,"offset":3251},"extra":{"metavars":{"$FUN":{"start":{"line":98,"col":19,"offset":3197},"end":{"line":98,"col":25,"offset":3203},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b3e0b8db1c8b178e4abc9b40625002d515dfa6b2909f0edbc97ff055e0cf3d0fac574f09e3e535a980debf5446877d76fa9d39c698418834a7db0808119e8e93_0","lines":"  timezone_t tz = malloc (FLEXSIZEOF (struct tm_zone, abbrs, abbr_size));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":152,"col":22,"offset":4551},"end":{"line":152,"col":51,"offset":4580},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":152,"col":22,"offset":4551},"end":{"line":152,"col":31,"offset":4560},"abstract_content":"zone_size"},"$SIGNED":{"start":{"line":152,"col":50,"offset":4579},"end":{"line":152,"col":51,"offset":4580},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e05ae30fcfef988d09619bd50abcc8be60dde7332724533253a14ef16cd3f4fdd11b23e87a717497be89d4eb468c47691bc3b7377d03608066f9e6879d2da5d4_0","lines":"              size_t zone_size = strlen (zone) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":157,"col":35,"offset":4781},"end":{"line":157,"col":49,"offset":4795},"extra":{"metavars":{"$FUN":{"start":{"line":157,"col":35,"offset":4781},"end":{"line":157,"col":42,"offset":4788},"abstract_content":"tzalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3e615d7c223d440511898f09731da1bcd96cdeed26fe6412649cdf377d78a518f37745da18aca1329a3a91f3979c91cdef004d7c8a39b00778248b5035075954_0","lines":"                  tz = tz->next = tzalloc (zone);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":195,"col":9,"offset":5561},"end":{"line":195,"col":19,"offset":5571},"extra":{"metavars":{"$PTR":{"start":{"line":195,"col":15,"offset":5567},"end":{"line":195,"col":17,"offset":5569},"abstract_content":"tz"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6894161d8165d645476d7cbe64bc288354f03d3335bfabbe0982849b019e96f1c0ebbbf62c3032eeba086ac4c435e8e5239c71260440528187b67fd451bd169e_0","lines":"        free (tz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":207,"col":10,"offset":5807},"end":{"line":207,"col":23,"offset":5820},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":207,"col":10,"offset":5807},"end":{"line":207,"col":16,"offset":5813},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eb8b9af0fc92e1c61dc4944d76e348f12897f046940efb3ea82f24744f717033043c2056ad83af8065221b91cb5539f4047e4bdd774df7636406e377df56bfde_0","lines":"  return getenv (\"TZ\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":215,"col":15,"offset":5904},"end":{"line":215,"col":35,"offset":5924},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":215,"col":15,"offset":5904},"end":{"line":215,"col":21,"offset":5910},"abstract_content":"setenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19fc666ecf73a8043abe379919fc366fe1871f198c7cd1bedc4fa213dd2dba7e2d522d305518f855801a14ee2811959a47082388c803d316560310d97fe6725e_0","lines":"  return tz ? setenv (\"TZ\", tz, 1) : unsetenv (\"TZ\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":215,"col":38,"offset":5927},"end":{"line":215,"col":53,"offset":5942},"extra":{"metavars":{"$1":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"set"},"$FUN":{"start":{"line":215,"col":38,"offset":5927},"end":{"line":215,"col":46,"offset":5935},"abstract_content":"unsetenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c4f9392af2dcf4204bbb34d46ab04c26bb4bd4b313d73854fa6e296ce73497b41ef6653a47f2e48147e8ba7b92f4741fefd1fc4526a2e49283b2a5a2abe0bb2_0","lines":"  return tz ? setenv (\"TZ\", tz, 1) : unsetenv (\"TZ\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":244,"col":27,"offset":6711},"end":{"line":244,"col":43,"offset":6727},"extra":{"metavars":{"$FUN":{"start":{"line":244,"col":27,"offset":6711},"end":{"line":244,"col":34,"offset":6718},"abstract_content":"tzalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3e615d7c223d440511898f09731da1bcd96cdeed26fe6412649cdf377d78a518f37745da18aca1329a3a91f3979c91cdef004d7c8a39b00778248b5035075954_1","lines":"      timezone_t old_tz = tzalloc (env_tz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","start":{"line":119,"col":10,"offset":2748},"end":{"line":119,"col":23,"offset":2761},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":119,"col":10,"offset":2748},"end":{"line":119,"col":16,"offset":2754},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d46c692f766d26f4cfd322261200f0a94d67ce8415ef7118fd2d7ab971bc345aca27ede322af52d7a8b2fd6eef5ce7eb3f6674c29cbae589eee8a2efab9e47f_0","lines":"  while (getenv (name))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","start":{"line":123,"col":7,"offset":2810},"end":{"line":123,"col":22,"offset":2825},"extra":{"metavars":{"$1":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"set"},"$FUN":{"start":{"line":123,"col":7,"offset":2810},"end":{"line":123,"col":15,"offset":2818},"abstract_content":"unsetenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d7de46a38afb37e5c1fbec56e2f297adb909bba0087e61ad102957dad501b6a2b9cbb24e6a025ffa91513c5ee7d8a111c2c8b20881c766b044177bf23485f95_0","lines":"      unsetenv (name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":234,"col":24,"offset":8213},"end":{"line":234,"col":40,"offset":8229},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b328208b7396610da0ed24a12fd99c7ec9df3fb5eab18905262598ae994f10e613782eca58a268d24b1b9e63ce5dbb54981de064ffc1c7697cabbf463fda3bbd_0","lines":"          if (fd < 0 ? stat (file, &st) : fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":234,"col":24,"offset":8213},"end":{"line":234,"col":40,"offset":8229},"extra":{"metavars":{"$FUN":{"start":{"line":234,"col":24,"offset":8213},"end":{"line":234,"col":28,"offset":8217},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53208abdb3a82d8383dfe124ca62edad70d1e276b7ee32c13b7280d2847a432a1697c4826be0347322e2f279087b237f10e7097f26c9cd831b5233e03993c9c2_0","lines":"          if (fd < 0 ? stat (file, &st) : fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":234,"col":43,"offset":8232},"end":{"line":234,"col":58,"offset":8247},"extra":{"metavars":{"$FUN":{"start":{"line":234,"col":43,"offset":8232},"end":{"line":234,"col":48,"offset":8237},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9b2a5a1959e13d2f9fe06f57ebc522a44973d26166dfcc6e51b913dade7f1467717886269e0e16bf860e7c4d6e44b3b48d3503f175ea7302e1ba765ea0430b0_0","lines":"          if (fd < 0 ? stat (file, &st) : fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":294,"col":24,"offset":10147},"end":{"line":294,"col":40,"offset":10163},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b328208b7396610da0ed24a12fd99c7ec9df3fb5eab18905262598ae994f10e613782eca58a268d24b1b9e63ce5dbb54981de064ffc1c7697cabbf463fda3bbd_1","lines":"          && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":294,"col":24,"offset":10147},"end":{"line":294,"col":40,"offset":10163},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":24,"offset":10147},"end":{"line":294,"col":28,"offset":10151},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"53208abdb3a82d8383dfe124ca62edad70d1e276b7ee32c13b7280d2847a432a1697c4826be0347322e2f279087b237f10e7097f26c9cd831b5233e03993c9c2_1","lines":"          && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":294,"col":43,"offset":10166},"end":{"line":294,"col":58,"offset":10181},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":43,"offset":10166},"end":{"line":294,"col":48,"offset":10171},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9b2a5a1959e13d2f9fe06f57ebc522a44973d26166dfcc6e51b913dade7f1467717886269e0e16bf860e7c4d6e44b3b48d3503f175ea7302e1ba765ea0430b0_1","lines":"          && (fd < 0 ? stat (file, &st) : fstat (fd, &st)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":351,"col":17,"offset":12173},"end":{"line":374,"col":20,"offset":13218},"extra":{"metavars":{"$EXPR1":{"start":{"line":351,"col":22,"offset":12178},"end":{"line":351,"col":26,"offset":12182},"abstract_content":"abig","propagated_value":{"svalue_start":{"line":349,"col":29,"offset":12081},"svalue_end":{"line":349,"col":51,"offset":12103},"svalue_abstract_content":"500000<=t[0].tv_usec"}},"$EXPR2":{"start":{"line":351,"col":29,"offset":12185},"end":{"line":351,"col":33,"offset":12189},"abstract_content":"mbig","propagated_value":{"svalue_start":{"line":350,"col":29,"offset":12133},"svalue_end":{"line":350,"col":51,"offset":12155},"svalue_abstract_content":"500000<=t[1].tv_usec"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cce1780b97db5cb41aaed3b2f2432a50fb4ecc84f413e9c3ab9e8b7bbc040de68e6c4655655658df1f19a42dfcc5c4067cd2bde497958e0cc19ad055395e99c6_0","lines":"                if ((abig | mbig) && fstat (fd, &st) == 0)\n                  {\n                    /* If these two subtractions overflow, they'll\n                       track the overflows inside the buggy glibc.  */\n                    time_t adiff = st.st_atime - t[0].tv_sec;\n                    time_t mdiff = st.st_mtime - t[1].tv_sec;\n\n                    struct timeval *tt = NULL;\n                    struct timeval truncated_timeval[2];\n                    truncated_timeval[0] = t[0];\n                    truncated_timeval[1] = t[1];\n                    if (abig && adiff == 1 && get_stat_atime_ns (&st) == 0)\n                      {\n                        tt = truncated_timeval;\n                        tt[0].tv_usec = 0;\n                      }\n                    if (mbig && mdiff == 1 && get_stat_mtime_ns (&st) == 0)\n                      {\n                        tt = truncated_timeval;\n                        tt[1].tv_usec = 0;\n                      }\n                    if (tt)\n                      futimes (fd, tt);\n                  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":351,"col":38,"offset":12194},"end":{"line":351,"col":53,"offset":12209},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":38,"offset":12194},"end":{"line":351,"col":43,"offset":12199},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9b2a5a1959e13d2f9fe06f57ebc522a44973d26166dfcc6e51b913dade7f1467717886269e0e16bf860e7c4d6e44b3b48d3503f175ea7302e1ba765ea0430b0_2","lines":"                if ((abig | mbig) && fstat (fd, &st) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":467,"col":15,"offset":15834},"end":{"line":467,"col":32,"offset":15851},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b328208b7396610da0ed24a12fd99c7ec9df3fb5eab18905262598ae994f10e613782eca58a268d24b1b9e63ce5dbb54981de064ffc1c7697cabbf463fda3bbd_2","lines":"          if (lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":467,"col":15,"offset":15834},"end":{"line":467,"col":32,"offset":15851},"extra":{"metavars":{"$FUN":{"start":{"line":467,"col":15,"offset":15834},"end":{"line":467,"col":20,"offset":15839},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9cb2374eb314f33574817f81e226e75e1f5554ccffda5f45774e5d12bd52b3af72f3d025513a368bbf5ed4af9e1a0e4087b8ccf7b966eea6ec100cad0688da8a_0","lines":"          if (lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":505,"col":37,"offset":17144},"end":{"line":505,"col":54,"offset":17161},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b328208b7396610da0ed24a12fd99c7ec9df3fb5eab18905262598ae994f10e613782eca58a268d24b1b9e63ce5dbb54981de064ffc1c7697cabbf463fda3bbd_3","lines":"      if (adjustment_needed != 3 && lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":505,"col":37,"offset":17144},"end":{"line":505,"col":54,"offset":17161},"extra":{"metavars":{"$FUN":{"start":{"line":505,"col":37,"offset":17144},"end":{"line":505,"col":42,"offset":17149},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9cb2374eb314f33574817f81e226e75e1f5554ccffda5f45774e5d12bd52b3af72f3d025513a368bbf5ed4af9e1a0e4087b8ccf7b966eea6ec100cad0688da8a_1","lines":"      if (adjustment_needed != 3 && lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":536,"col":57,"offset":18028},"end":{"line":536,"col":74,"offset":18045},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"b328208b7396610da0ed24a12fd99c7ec9df3fb5eab18905262598ae994f10e613782eca58a268d24b1b9e63ce5dbb54981de064ffc1c7697cabbf463fda3bbd_4","lines":"  if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","start":{"line":536,"col":57,"offset":18028},"end":{"line":536,"col":74,"offset":18045},"extra":{"metavars":{"$FUN":{"start":{"line":536,"col":57,"offset":18028},"end":{"line":536,"col":62,"offset":18033},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9cb2374eb314f33574817f81e226e75e1f5554ccffda5f45774e5d12bd52b3af72f3d025513a368bbf5ed4af9e1a0e4087b8ccf7b966eea6ec100cad0688da8a_2","lines":"  if (!(adjustment_needed || REPLACE_FUNC_STAT_FILE) && lstat (file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimensat.c","start":{"line":77,"col":15,"offset":2818},"end":{"line":77,"col":44,"offset":2847},"extra":{"metavars":{"$4":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":8,"offset":7},"abstract_content":"at"},"$FUN":{"start":{"line":77,"col":15,"offset":2818},"end":{"line":77,"col":22,"offset":2825},"abstract_content":"fstatat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be767d40f80738ce244df7a52049c1d4ec231c97ca3d438b408a13d788c2d60d068fd6ecdaf033ee60530292781e4e44561d746a5c63d875084e59f5e826c109_0","lines":"          if (fstatat (fd, file, &st, flag))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimensat.c","start":{"line":113,"col":7,"offset":4208},"end":{"line":114,"col":23,"offset":4300},"extra":{"metavars":{"$EXPR1":{"start":{"line":113,"col":47,"offset":4248},"end":{"line":113,"col":51,"offset":4252},"abstract_content":"flag"},"$EXPR2":{"start":{"line":113,"col":54,"offset":4255},"end":{"line":113,"col":74,"offset":4275},"abstract_content":"~AT_SYMLINK_NOFOLLOW"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e27e4d008d461d87a6489e2291dafe3d5d2c913fc44cc0c9fd06313d21ffa9cecc3b44105087a53828e7441230e420ce3450a8b0a7baac593b15524d376b9726_0","lines":"      if (result == -1 && errno == EINVAL && (flag & ~AT_SYMLINK_NOFOLLOW))\n        return result;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":74,"col":3,"offset":2188},"end":{"line":75,"col":37,"offset":2287},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_0","lines":"  fprintf (stream, _(\"Packaged by %s (%s)\\n\"), PACKAGE_PACKAGER,\n           PACKAGE_PACKAGER_VERSION);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":77,"col":3,"offset":2298},"end":{"line":77,"col":60,"offset":2355},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_1","lines":"  fprintf (stream, _(\"Packaged by %s\\n\"), PACKAGE_PACKAGER);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":84,"col":3,"offset":2566},"end":{"line":84,"col":68,"offset":2631},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_2","lines":"  fprintf (stream, version_etc_copyright, _(\"(C)\"), COPYRIGHT_YEAR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":95,"col":11,"offset":2898},"end":{"line":95,"col":20,"offset":2907},"extra":{"metavars":{"$VAR":{"start":{"line":95,"col":11,"offset":2898},"end":{"line":95,"col":20,"offset":2907},"abstract_content":"n_authors"},"$VAL1":{"start":{"line":97,"col":10,"offset":2924},"end":{"line":97,"col":11,"offset":2925},"abstract_content":"0"},"$VAL2":{"start":{"line":100,"col":10,"offset":3015},"end":{"line":100,"col":11,"offset":3016},"abstract_content":"1"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4692e4e196ac7613f040a10fc3f3088335b3d728c6c45dae7f690e6664db063d9e9aed7f05e6a1dd28178f2aae0b8534efad08e3897c72c39c7098d88335b86a_0","lines":"  switch (n_authors)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":102,"col":7,"offset":3077},"end":{"line":102,"col":58,"offset":3128},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_3","lines":"      fprintf (stream, _(\"Written by %s.\\n\"), authors[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":106,"col":7,"offset":3219},"end":{"line":106,"col":77,"offset":3289},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_4","lines":"      fprintf (stream, _(\"Written by %s and %s.\\n\"), authors[0], authors[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":110,"col":7,"offset":3380},"end":{"line":111,"col":51,"offset":3482},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_5","lines":"      fprintf (stream, _(\"Written by %s, %s, and %s.\\n\"),\n               authors[0], authors[1], authors[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":117,"col":7,"offset":3723},"end":{"line":118,"col":63,"offset":3842},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_6","lines":"      fprintf (stream, _(\"Written by %s, %s, %s,\\nand %s.\\n\"),\n               authors[0], authors[1], authors[2], authors[3]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":124,"col":7,"offset":4083},"end":{"line":125,"col":75,"offset":4218},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_7","lines":"      fprintf (stream, _(\"Written by %s, %s, %s,\\n%s, and %s.\\n\"),\n               authors[0], authors[1], authors[2], authors[3], authors[4]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":131,"col":7,"offset":4459},"end":{"line":133,"col":27,"offset":4625},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_8","lines":"      fprintf (stream, _(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\"),\n               authors[0], authors[1], authors[2], authors[3], authors[4],\n               authors[5]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":139,"col":7,"offset":4866},"end":{"line":141,"col":39,"offset":5048},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_9","lines":"      fprintf (stream, _(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\"),\n               authors[0], authors[1], authors[2], authors[3], authors[4],\n               authors[5], authors[6]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":147,"col":7,"offset":5289},"end":{"line":150,"col":52,"offset":5492},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_10","lines":"      fprintf (stream, _(\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\"),\n                authors[0], authors[1], authors[2], authors[3], authors[4],\n                authors[5], authors[6], authors[7]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":156,"col":7,"offset":5733},"end":{"line":159,"col":63,"offset":5950},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_11","lines":"      fprintf (stream, _(\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\"),\n               authors[0], authors[1], authors[2], authors[3], authors[4],\n               authors[5], authors[6], authors[7], authors[8]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":167,"col":7,"offset":6334},"end":{"line":170,"col":64,"offset":6561},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_12","lines":"      fprintf (stream, _(\"\\\nWritten by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\"),\n                authors[0], authors[1], authors[2], authors[3], authors[4],\n                authors[5], authors[6], authors[7], authors[8]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":186,"col":3,"offset":6964},"end":{"line":187,"col":6,"offset":7022},"extra":{"metavars":{"$EXPR1":{"start":{"line":186,"col":8,"offset":6969},"end":{"line":186,"col":21,"offset":6982},"abstract_content":"n_authors=0"},"$EXPR2":{"start":{"line":186,"col":23,"offset":6984},"end":{"line":186,"col":41,"offset":7002},"abstract_content":"authors[n_authors]"},"$EXPR3":{"start":{"line":186,"col":43,"offset":7004},"end":{"line":186,"col":54,"offset":7015},"abstract_content":"n_authors++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ff80dde65026c86f077ad195c047e1f65c88af923785330120441373a72b90897a2e1c7c9e46e3e34d225bc61d16e7278e3cac7619e96e5c4cb4ba257349e583_0","lines":"  for (n_authors = 0; authors[n_authors]; n_authors++)\n    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":186,"col":8,"offset":6969},"end":{"line":186,"col":21,"offset":6982},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":186,"col":8,"offset":6969},"end":{"line":186,"col":17,"offset":6978},"abstract_content":"n_authors"},"$SIGNED":{"start":{"line":186,"col":20,"offset":6981},"end":{"line":186,"col":21,"offset":6982},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"08354c95fddaf2b64cc23e2f742119d86d9dbbfdb61a819068eecb8908389d5aa985514b8d6372f8390c6f3c8a106a0f629202ef6ac5c02013b26e7fce661be0_0","lines":"  for (n_authors = 0; authors[n_authors]; n_authors++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":203,"col":3,"offset":7501},"end":{"line":207,"col":6,"offset":7643},"extra":{"metavars":{"$EXPR1":{"start":{"line":203,"col":8,"offset":7506},"end":{"line":203,"col":21,"offset":7519},"abstract_content":"n_authors=0"},"$EXPR2":{"start":{"line":204,"col":8,"offset":7528},"end":{"line":205,"col":74,"offset":7616},"abstract_content":"n_authors<10&&authtab[n_authors]=va_arg(authors const char*)!=NULL"},"$EXPR3":{"start":{"line":206,"col":8,"offset":7625},"end":{"line":206,"col":19,"offset":7636},"abstract_content":"n_authors++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b5b41fff47db1752e9d4a83543f15fc84a645145a94494d667558ff4929991bf7ccdae6aa06adb4b625358c9bae326dc93d6d3061d53091ce11a3b18fe852ad7_0","lines":"  for (n_authors = 0;\n       n_authors < 10\n         && (authtab[n_authors] = va_arg (authors, const char *)) != NULL;\n       n_authors++)\n    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":203,"col":8,"offset":7506},"end":{"line":203,"col":21,"offset":7519},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":203,"col":8,"offset":7506},"end":{"line":203,"col":17,"offset":7515},"abstract_content":"n_authors"},"$SIGNED":{"start":{"line":203,"col":20,"offset":7518},"end":{"line":203,"col":21,"offset":7519},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"08354c95fddaf2b64cc23e2f742119d86d9dbbfdb61a819068eecb8908389d5aa985514b8d6372f8390c6f3c8a106a0f629202ef6ac5c02013b26e7fce661be0_1","lines":"  for (n_authors = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":245,"col":3,"offset":8709},"end":{"line":245,"col":58,"offset":8764},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_13","lines":"  printf (_(\"\\nReport bugs to: %s\\n\"), PACKAGE_BUGREPORT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":247,"col":3,"offset":8804},"end":{"line":248,"col":40,"offset":8899},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_14","lines":"  printf (_(\"Report %s bugs to: %s\\n\"), PACKAGE_PACKAGER,\n          PACKAGE_PACKAGER_BUG_REPORTS);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":251,"col":3,"offset":8929},"end":{"line":251,"col":64,"offset":8990},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_15","lines":"  printf (_(\"%s home page: <%s>\\n\"), PACKAGE_NAME, PACKAGE_URL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","start":{"line":253,"col":3,"offset":9000},"end":{"line":254,"col":33,"offset":9096},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d1c6acf99d2ff00b724efc5fbc2eb8bf6cfd6e57af5fdbe8afe1f15354ba8483077f845e4a225177f43081f5c08a54bd7c4120fad705832ece69e0340608d93b_16","lines":"  printf (_(\"%s home page: <http://www.gnu.org/software/%s/>\\n\"),\n          PACKAGE_NAME, PACKAGE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","start":{"line":39,"col":1,"offset":1339},"end":{"line":39,"col":10,"offset":1348},"extra":{"metavars":{"$FUN":{"start":{"line":39,"col":1,"offset":1339},"end":{"line":39,"col":10,"offset":1348},"abstract_content":"vsnprintf"},"$UNSIGNED":{"start":{"line":69,"col":10,"offset":1881},"end":{"line":69,"col":13,"offset":1884},"abstract_content":"len","propagated_value":{"svalue_start":{"line":43,"col":19,"offset":1458},"svalue_end":{"line":43,"col":23,"offset":1462},"svalue_abstract_content":"size"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f807bdfecc58607fe015a7daa888577d9aef4d4e333bd5682de5e837bf14e7317dc4a22cb122a20628cc863fdcc82089d8bc176d539202f08dc62d5bca3e8746_0","lines":"vsnprintf (char *str, size_t size, const char *format, va_list args)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","start":{"line":45,"col":12,"offset":1476},"end":{"line":45,"col":51,"offset":1515},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":12,"offset":1476},"end":{"line":45,"col":22,"offset":1486},"abstract_content":"vasnprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4ea98b77f1fe3726234631dc4061b047d0a3c1e4604fd945f2c0c0be6c901c2e34b79d6f1631f233021bf4f5c0c96af40774120b326d8383d768342e6c334046_0","lines":"  output = vasnprintf (str, &lenbuf, format, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","start":{"line":55,"col":18,"offset":1635},"end":{"line":55,"col":59,"offset":1676},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":55,"col":18,"offset":1635},"end":{"line":55,"col":28,"offset":1645},"abstract_content":"pruned_len"},"$SIGNED":{"start":{"line":55,"col":58,"offset":1675},"end":{"line":55,"col":59,"offset":1676},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bbefd6637fc00984130f19c881e283749dae5103795230ee1ec9535a52e6bafd2594a3380b277e4cae01e10ab97627f559f078c522a69dedc6664caabeb7a5c4_0","lines":"          size_t pruned_len = (len < size ? len : size - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","start":{"line":56,"col":11,"offset":1689},"end":{"line":56,"col":43,"offset":1721},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":11,"offset":1689},"end":{"line":56,"col":17,"offset":1695},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e32498a271cfa3e7f36bac001fd512574de545d1f254dec6c1029678adacb2e548bd63559c52913d1651c1a70c77e07bc9ec62a07ddc80eb0bcec654e8c0cb00_0","lines":"          memcpy (str, output, pruned_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","start":{"line":60,"col":7,"offset":1774},"end":{"line":60,"col":21,"offset":1788},"extra":{"metavars":{"$PTR":{"start":{"line":60,"col":13,"offset":1780},"end":{"line":60,"col":19,"offset":1786},"abstract_content":"output"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"045f891abe208eb36d3746f802bc1158cfb12a3a547cffc101e864cd5edfd02f771d1c6c75ec50ae199804473eb99335dc9a266093b31774ad2c6110a346355f_0","lines":"      free (output);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":109,"col":10,"offset":3680},"end":{"line":109,"col":25,"offset":3695},"extra":{"metavars":{"$FUN":{"start":{"line":109,"col":10,"offset":3680},"end":{"line":109,"col":17,"offset":3687},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1efe70c0792002c52cf4dfedbbfc46a9316b114151f1a94b868d925e3c2927c53546e059ba4baa3247b9f492998ff658625515732f9aaca2c107b476e024afa6_0","lines":"  return xmalloc (n * s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":122,"col":10,"offset":4081},"end":{"line":122,"col":29,"offset":4100},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":10,"offset":4081},"end":{"line":122,"col":18,"offset":4089},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97bb35b126ce5dcd00d18c0df7a09306bddb789ba4ca0599f244eab0340b006cd815c3dea632eb8b159b89ba282df4640455be2e94a44fd47ca8b556c728ee05_0","lines":"  return xrealloc (p, n * s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":211,"col":10,"offset":6659},"end":{"line":211,"col":29,"offset":6678},"extra":{"metavars":{"$FUN":{"start":{"line":211,"col":10,"offset":6659},"end":{"line":211,"col":18,"offset":6667},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97bb35b126ce5dcd00d18c0df7a09306bddb789ba4ca0599f244eab0340b006cd815c3dea632eb8b159b89ba282df4640455be2e94a44fd47ca8b556c728ee05_1","lines":"  return xrealloc (p, n * s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":235,"col":16,"offset":7231},"end":{"line":235,"col":40,"offset":7255},"extra":{"metavars":{"$FUN":{"start":{"line":235,"col":16,"offset":7231},"end":{"line":235,"col":24,"offset":7239},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97bb35b126ce5dcd00d18c0df7a09306bddb789ba4ca0599f244eab0340b006cd815c3dea632eb8b159b89ba282df4640455be2e94a44fd47ca8b556c728ee05_2","lines":"  return (T *) xrealloc ((void *) p, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":241,"col":16,"offset":7347},"end":{"line":241,"col":44,"offset":7375},"extra":{"metavars":{"$FUN":{"start":{"line":241,"col":16,"offset":7347},"end":{"line":241,"col":25,"offset":7356},"abstract_content":"xnrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aeffefec9e4f40649798667620d44e0947477c1f40edad0f10450ba59fe2601daa6c9ba3d6b90f78a9eb3b5182f3d0e1640bd59948c40c9056a05b1e2c8c260d_0","lines":"  return (T *) xnrealloc ((void *) p, n, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":247,"col":16,"offset":7459},"end":{"line":247,"col":42,"offset":7485},"extra":{"metavars":{"$FUN":{"start":{"line":247,"col":16,"offset":7459},"end":{"line":247,"col":25,"offset":7468},"abstract_content":"x2realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"39c96028393d9464c1179b84b38c5402d6ada85017aef49a435ebc9af172a913490d6f851dbac6bd8f8ce09ad20db815682cfd56df9a3d10452d6f3fda4daebc_0","lines":"  return (T *) x2realloc ((void *) p, pn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":253,"col":16,"offset":7580},"end":{"line":253,"col":46,"offset":7610},"extra":{"metavars":{"$FUN":{"start":{"line":253,"col":16,"offset":7580},"end":{"line":253,"col":26,"offset":7590},"abstract_content":"x2nrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d095987089e504f0545d8d739e0ee1d1abd83794e16c2a7cf99f1f93d5e0b23fdc5b068a788cb65ed3aae887002964310d1c48a19b0fb526eba7057aea82cb86_0","lines":"  return (T *) x2nrealloc ((void *) p, pn, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xgetcwd.c","start":{"line":37,"col":15,"offset":1126},"end":{"line":37,"col":31,"offset":1142},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"cwd"},"$FUN":{"start":{"line":37,"col":15,"offset":1126},"end":{"line":37,"col":21,"offset":1132},"abstract_content":"getcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dafbbaf632ac7a8b0dc875dd3b26dfc83a287f1d4673a5336515749f86478980e5ba0c4a9af3efe25d6d576e4f7e9c5e76dc7dba81aff7178f974e34cc38c53b_0","lines":"  char *cwd = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xgetcwd.c","start":{"line":37,"col":15,"offset":1126},"end":{"line":37,"col":31,"offset":1142},"extra":{"metavars":{"$BUF":{"start":{"line":37,"col":23,"offset":1134},"end":{"line":37,"col":27,"offset":1138},"abstract_content":"NULL"},"$LEN":{"start":{"line":37,"col":29,"offset":1140},"end":{"line":37,"col":30,"offset":1141},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44e048f953c81a493b7152d301c4a5a78f98a0789741e281e81fdcfb8380624fb4fae2025f8b26b3f0e753e88ba3719768483384dd0b60a99877c49b834d0f04_0","lines":"  char *cwd = getcwd (NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":41,"col":13,"offset":1369},"end":{"line":41,"col":23,"offset":1379},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":13,"offset":1369},"end":{"line":41,"col":19,"offset":1375},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9c66610b4b573510b9fc4070f9a111b7fed05432bbdfc1e0bc832bd64c0f084126ab0089676a2ba4738e04e750761520ecbd0c51272585cda3923d4931d7c74a_0","lines":"  void *p = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":57,"col":7,"offset":1719},"end":{"line":57,"col":16,"offset":1728},"extra":{"metavars":{"$PTR":{"start":{"line":57,"col":13,"offset":1725},"end":{"line":57,"col":14,"offset":1726},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"382e90991ecbcc178e0103adda7cdd2770306cf69e6dc76bf9d992d9680ba1eeefcd1a44cb382cf61755f1b7c1ee6c68cac6e27f9d3dcb6e151b9009fe101ea6_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":61,"col":7,"offset":1761},"end":{"line":61,"col":21,"offset":1775},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":7,"offset":1761},"end":{"line":61,"col":14,"offset":1768},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a69bd10ac9e9c5b029fc3b63dd80288c4d21b540262611fb9e4d7e1304c2d15b1627e45b8e1800745c61b1942adcb56089740a85b36747d8a72b45bc0bd3fc64_0","lines":"  p = realloc (p, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":76,"col":10,"offset":2196},"end":{"line":76,"col":31,"offset":2217},"extra":{"metavars":{"$FUN":{"start":{"line":76,"col":10,"offset":2196},"end":{"line":76,"col":20,"offset":2206},"abstract_content":"x2nrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"66a0ee5386552ae86846ac9aa7d6e9d267830f81b7b9f09ba30efab4ac4053d240645f2340330d89fdcd93c5be265afdd004e5d6ccbc1b3e97c3358582b6dc9e_0","lines":"  return x2nrealloc (p, pn, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":86,"col":18,"offset":2434},"end":{"line":86,"col":29,"offset":2445},"extra":{"metavars":{"$FUN":{"start":{"line":86,"col":18,"offset":2434},"end":{"line":86,"col":25,"offset":2441},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3741583092b60687e2a99b146310241f5fab645833ddfaaace8f4c6fafa56a2d2489f3ec2b29810ec2d6dac7739595513524cce97151d3bc902374f025c23ebf_0","lines":"  return memset (xmalloc (s), 0, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":100,"col":3,"offset":2833},"end":{"line":102,"col":19,"offset":2944},"extra":{"metavars":{"$EXPR1":{"start":{"line":101,"col":14,"offset":2874},"end":{"line":101,"col":15,"offset":2875},"abstract_content":"p"},"$EXPR2":{"start":{"line":101,"col":18,"offset":2878},"end":{"line":101,"col":31,"offset":2891},"abstract_content":"calloc(n s)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e121129df03a030902ddba5f6d712967ae5700893b0c22f3362179d0653bcae297556ede57952eabf35ed9da1d604dc413cea56000305f99700eab8532711b8f_0","lines":"  if (xalloc_oversized (n, s)\n      || (! (p = calloc (n, s)) && (HAVE_GNU_CALLOC || n != 0)))\n    xalloc_die ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":101,"col":18,"offset":2878},"end":{"line":101,"col":31,"offset":2891},"extra":{"metavars":{"$FUN":{"start":{"line":101,"col":18,"offset":2878},"end":{"line":101,"col":24,"offset":2884},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d9e63e600e783fbb6d76b46665ba2fedb3825a5d1ecfa786722bd06d474562e1a41359db6238ef815ef48f0e63c6f7eb50081c57db58763c35c3dff5f1b39a47_0","lines":"      || (! (p = calloc (n, s)) && (HAVE_GNU_CALLOC || n != 0)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":113,"col":10,"offset":3199},"end":{"line":113,"col":36,"offset":3225},"extra":{"metavars":{"$FUN":{"start":{"line":113,"col":10,"offset":3199},"end":{"line":113,"col":16,"offset":3205},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d364ab8eb4c280bce04d76c70560d18f0e9fa22314db3a389177e5726cc529364ee84efac08767664d51d00d208d48380942119fb9170d906fed5d9a98e7ba83_0","lines":"  return memcpy (xmalloc (s), p, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","start":{"line":113,"col":18,"offset":3207},"end":{"line":113,"col":29,"offset":3218},"extra":{"metavars":{"$FUN":{"start":{"line":113,"col":18,"offset":3207},"end":{"line":113,"col":25,"offset":3214},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3741583092b60687e2a99b146310241f5fab645833ddfaaace8f4c6fafa56a2d2489f3ec2b29810ec2d6dac7739595513524cce97151d3bc902374f025c23ebf_1","lines":"  return memcpy (xmalloc (s), p, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":53,"col":11,"offset":1637},"end":{"line":53,"col":28,"offset":1654},"extra":{"metavars":{"$FUN":{"start":{"line":53,"col":11,"offset":1637},"end":{"line":53,"col":18,"offset":1644},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"074b3f9602cec23f6e0f901cd357b00cfe21142b784f13c17cb9f19acf028fe5b4d2b291a2f5d040bf2b9ef90a75298df5f1ce5a9071b4b7c6584c7c5db811db_0","lines":"      s = xmalloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":54,"col":7,"offset":1662},"end":{"line":54,"col":30,"offset":1685},"extra":{"metavars":{"$FUN":{"start":{"line":54,"col":7,"offset":1662},"end":{"line":54,"col":13,"offset":1668},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"52f40a65bfc8fdcaf131ca2e1e914fa5183206942dbfc971a2d1a07293fec74c05f26e6e7e26058c1cbdcc86921ac59069f1c5022bc853bbbcd5f1f7e0451ace_0","lines":"      memcpy (s, string, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":60,"col":3,"offset":1747},"end":{"line":64,"col":19,"offset":1905},"extra":{"metavars":{"$EXPR1":{"start":{"line":61,"col":8,"offset":1764},"end":{"line":61,"col":14,"offset":1770},"abstract_content":"*table"},"$EXPR2":{"start":{"line":61,"col":17,"offset":1773},"end":{"line":62,"col":33,"offset":1852},"abstract_content":"t=hash_initialize(0 0 hash_string_hasher hash_string_compare 0)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fcebb4ffcd90b6550035ebae1ad49f3c86023d19e2b8800de0ce092398a44415d1e0d0e8e641ebaf924db951592ec68ebc077c3ca32b24dc87efee8707a3e277_0","lines":"  if (! ((t\n\t  || (*table = t = hash_initialize (0, 0, hash_string_hasher,\n\t\t\t\t\t    hash_string_compare, 0)))\n\t && (e = hash_insert (t, s))))\n    xalloc_die ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":74,"col":7,"offset":2014},"end":{"line":74,"col":16,"offset":2023},"extra":{"metavars":{"$PTR":{"start":{"line":74,"col":13,"offset":2020},"end":{"line":74,"col":14,"offset":2021},"abstract_content":"s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9c87fdf955f5b601507bfdde28a4626c872774efa495441e294720e3466aee7c2075303341f5b50b9b3b177a3a406ba90d2bc076162778d029425aeda3e3393f_0","lines":"      free (s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":117,"col":6,"offset":3295},"end":{"line":117,"col":36,"offset":3325},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":117,"col":6,"offset":3295},"end":{"line":117,"col":16,"offset":3305},"abstract_content":"prefix_len"},"$SIGNED":{"start":{"line":117,"col":23,"offset":3312},"end":{"line":117,"col":24,"offset":3313},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"145538ca86abcee2f14cd573f2e81685c886d109e67703a7eaa28fa8f1e05c4c9dd4301cd59158bc518217030118113f9447986b413a2a4f4a7ced9bf8b78a1c_0","lines":"\t    prefix_len = p + 2 - file_name;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","start":{"line":130,"col":20,"offset":3510},"end":{"line":130,"col":33,"offset":3523},"extra":{"metavars":{"$PTR1":{"start":{"line":130,"col":20,"offset":3510},"end":{"line":130,"col":21,"offset":3511},"abstract_content":"p"},"$PTR2":{"start":{"line":130,"col":24,"offset":3514},"end":{"line":130,"col":33,"offset":3523},"abstract_content":"file_name"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32eb489df2a4704f2028c3d80d7ba7538b2bf437ae9eb1cb74e0d8159b019af662774fa1f67a50de3e49d78d9bcc850484206a9c5af46f4b87b8620130d1881d_0","lines":"      prefix_len = p - file_name;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":125,"col":38,"offset":4184},"end":{"line":125,"col":63,"offset":4209},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"00cb89a1da0fb18b2adf47e2d1724c5125e1479ae62bb2ee7b365896b8348f47f1514a9d333141dc9e0809e00eb65f8bd51a7aede2b3763c49f0e2f3c012d674_0","lines":"  RETSIGTYPE (*pipe_handler) (int) = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":127,"col":3,"offset":4283},"end":{"line":127,"col":33,"offset":4313},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"00cb89a1da0fb18b2adf47e2d1724c5125e1479ae62bb2ee7b365896b8348f47f1514a9d333141dc9e0809e00eb65f8bd51a7aede2b3763c49f0e2f3c012d674_1","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":150,"col":11,"offset":4727},"end":{"line":150,"col":52,"offset":4768},"extra":{"metavars":{"$FUN":{"start":{"line":150,"col":11,"offset":4727},"end":{"line":150,"col":20,"offset":4736},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"732bc4ae0705260a4ee639d4bd8e96782ac5cf271fd43e0773bbb5715a64258d0ca92ef8bd4a3c32b96bd0c1ff82f894aa71be9c371a3d21782b5684d5ad0d9f_0","lines":"      if (safe_read (READ_SIDE (handle), cursor, 1) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":184,"col":9,"offset":5377},"end":{"line":184,"col":54,"offset":5422},"extra":{"metavars":{"$FUN":{"start":{"line":184,"col":9,"offset":5377},"end":{"line":184,"col":18,"offset":5386},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"732bc4ae0705260a4ee639d4bd8e96782ac5cf271fd43e0773bbb5715a64258d0ca92ef8bd4a3c32b96bd0c1ff82f894aa71be9c371a3d21782b5684d5ad0d9f_1","lines":"\twhile (safe_read (READ_SIDE (handle), &character, 1) == 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":189,"col":15,"offset":5490},"end":{"line":189,"col":32,"offset":5507},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"918ade06140d39168b6baa41136b7a1fc3e878d15a77037bd44856d522c95a6d6ebab8a634b2a5aa6c04601d31021ef548d88b89f87cd3441588c37185947650_0","lines":"      errno = atoi (cursor + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":219,"col":25,"offset":6099},"end":{"line":219,"col":38,"offset":6112},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"918ade06140d39168b6baa41136b7a1fc3e878d15a77037bd44856d522c95a6d6ebab8a634b2a5aa6c04601d31021ef548d88b89f87cd3441588c37185947650_1","lines":"      long int result = atol (status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":247,"col":7,"offset":6654},"end":{"line":247,"col":33,"offset":6680},"extra":{"metavars":{"$EXPR1":{"start":{"line":247,"col":18,"offset":6665},"end":{"line":247,"col":25,"offset":6672},"abstract_content":"*status"},"$EXPR2":{"start":{"line":247,"col":29,"offset":6676},"end":{"line":247,"col":32,"offset":6679},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9b2b7a3bce15f5dc493993c3713a6a132162aaf5877c273d2743e67adb05f755535c1ff7af1d1cba3803c73d752f736c6efdde7a5f33aeaeef65add160a6e183_0","lines":"      negative = *status == '-';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":248,"col":7,"offset":6687},"end":{"line":248,"col":44,"offset":6724},"extra":{"metavars":{"$EXPR1":{"start":{"line":248,"col":29,"offset":6709},"end":{"line":248,"col":36,"offset":6716},"abstract_content":"*status"},"$EXPR2":{"start":{"line":248,"col":40,"offset":6720},"end":{"line":248,"col":43,"offset":6723},"abstract_content":"'+'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a736f72c63d6cee5da6302d04ea950e40c046fb97d0414052ca69ae735f8f78a3833ffc8f0090126e11e68e85c7f70eccf53f2a913af957ea6cb282b106c94b9_0","lines":"      status += negative || *status == '+';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":294,"col":9,"offset":8076},"end":{"line":294,"col":41,"offset":8108},"extra":{"metavars":{"$FUN":{"start":{"line":294,"col":9,"offset":8076},"end":{"line":294,"col":16,"offset":8083},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4b6c658b6b53694281ddea4f781cac9663248fee09d8f71132019d4829af2fbded253d86a10aef15620e3647554479b96bcbe02194fd3f2967b68c8e425b11dc_0","lines":"  if (! freopen (\"/dev/tty\", \"r\", stdin))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":295,"col":5,"offset":8114},"end":{"line":295,"col":38,"offset":8147},"extra":{"metavars":{"$FUN":{"start":{"line":295,"col":5,"offset":8114},"end":{"line":295,"col":12,"offset":8121},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4b6c658b6b53694281ddea4f781cac9663248fee09d8f71132019d4829af2fbded253d86a10aef15620e3647554479b96bcbe02194fd3f2967b68c8e425b11dc_1","lines":"    freopen (\"/dev/null\", \"r\", stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":296,"col":9,"offset":8157},"end":{"line":296,"col":42,"offset":8190},"extra":{"metavars":{"$FUN":{"start":{"line":296,"col":9,"offset":8157},"end":{"line":296,"col":16,"offset":8164},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4b6c658b6b53694281ddea4f781cac9663248fee09d8f71132019d4829af2fbded253d86a10aef15620e3647554479b96bcbe02194fd3f2967b68c8e425b11dc_2","lines":"  if (! freopen (\"/dev/tty\", \"w\", stdout))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":297,"col":5,"offset":8196},"end":{"line":297,"col":39,"offset":8230},"extra":{"metavars":{"$FUN":{"start":{"line":297,"col":5,"offset":8196},"end":{"line":297,"col":12,"offset":8203},"abstract_content":"freopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4b6c658b6b53694281ddea4f781cac9663248fee09d8f71132019d4829af2fbded253d86a10aef15620e3647554479b96bcbe02194fd3f2967b68c8e425b11dc_3","lines":"    freopen (\"/dev/null\", \"w\", stdout);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":299,"col":3,"offset":8235},"end":{"line":300,"col":73,"offset":8366},"extra":{"metavars":{"$EXPR1":{"start":{"line":299,"col":7,"offset":8239},"end":{"line":299,"col":16,"offset":8248},"abstract_content":"rexecserv"},"$EXPR2":{"start":{"line":299,"col":19,"offset":8251},"end":{"line":299,"col":48,"offset":8280},"abstract_content":"getservbyname(\"exec\"\"tcp\")"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dfc3579b3fc500cc7684ac22cfc926a715b509ce360a9b17b52738625aec98cf1a10fe33931e7f4db1341fa69ab8ee7ef7049444681f889bf5c23eb443e497e3_0","lines":"  if (rexecserv = getservbyname (\"exec\", \"tcp\"), !rexecserv)\n    error (EXIT_ON_EXEC_ERROR, 0, _(\"exec/tcp: Service not available\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":302,"col":12,"offset":8379},"end":{"line":302,"col":69,"offset":8436},"extra":{"metavars":{"$FUN":{"start":{"line":302,"col":12,"offset":8379},"end":{"line":302,"col":17,"offset":8384},"abstract_content":"rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"02bb1475764c95f18ea2f8387ac9e08e4effec03e8baa9a51a62204ad8fe91f1432bb1531c2f464ecb4ff98b80bf79075b426abe6055b8d9de2ef23f460af0df_0","lines":"  result = rexec (&host, rexecserv->s_port, user, 0, rmt_command, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":305,"col":3,"offset":8503},"end":{"line":305,"col":28,"offset":8528},"extra":{"metavars":{"$FUN":{"start":{"line":305,"col":3,"offset":8503},"end":{"line":305,"col":9,"offset":8509},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0967ef96c5b9678c431ab6700fbcd75853ca334c42dd70269ddab44285c3ded8c6a496e8f9659543769d652bf31eaa708f94627adae89445072da95a4439c05a_0","lines":"  fdopen (saved_stdin, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":308,"col":3,"offset":8597},"end":{"line":308,"col":29,"offset":8623},"extra":{"metavars":{"$FUN":{"start":{"line":308,"col":3,"offset":8597},"end":{"line":308,"col":9,"offset":8603},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0967ef96c5b9678c431ab6700fbcd75853ca334c42dd70269ddab44285c3ded8c6a496e8f9659543769d652bf31eaa708f94627adae89445072da95a4439c05a_1","lines":"  fdopen (saved_stdout, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":322,"col":3,"offset":8946},"end":{"line":322,"col":30,"offset":8973},"extra":{"metavars":{"$FUN":{"start":{"line":322,"col":3,"offset":8946},"end":{"line":322,"col":10,"offset":8953},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_0","lines":"  sprintf (buf, \"%d \", oflag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":326,"col":20,"offset":9030},"end":{"line":326,"col":44,"offset":9054},"extra":{"metavars":{"$FUN":{"start":{"line":326,"col":20,"offset":9030},"end":{"line":326,"col":26,"offset":9036},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_0","lines":"    case O_RDONLY: strcat (buf, \"O_RDONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":327,"col":18,"offset":9080},"end":{"line":327,"col":40,"offset":9102},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":18,"offset":9080},"end":{"line":327,"col":24,"offset":9086},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_1","lines":"    case O_RDWR: strcat (buf, \"O_RDWR\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":328,"col":20,"offset":9130},"end":{"line":328,"col":44,"offset":9154},"extra":{"metavars":{"$FUN":{"start":{"line":328,"col":20,"offset":9130},"end":{"line":328,"col":26,"offset":9136},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_2","lines":"    case O_WRONLY: strcat (buf, \"O_WRONLY\"); break;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":333,"col":3,"offset":9211},"end":{"line":333,"col":51,"offset":9259},"extra":{"metavars":{"$EXPR1":{"start":{"line":333,"col":7,"offset":9215},"end":{"line":333,"col":12,"offset":9220},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":333,"col":15,"offset":9223},"end":{"line":333,"col":23,"offset":9231},"abstract_content":"O_APPEND"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fc704e32f42ac88d4c4eb3844214117184883964376f70ec84af7bc7891a6ea1f44cf838ddfb56e42d34fe4bb5d4861df385b9a576d28eb41807d78776abdf0a_0","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":333,"col":25,"offset":9233},"end":{"line":333,"col":50,"offset":9258},"extra":{"metavars":{"$FUN":{"start":{"line":333,"col":25,"offset":9233},"end":{"line":333,"col":31,"offset":9239},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_3","lines":"  if (oflag & O_APPEND) strcat (buf, \"|O_APPEND\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":335,"col":3,"offset":9269},"end":{"line":335,"col":49,"offset":9315},"extra":{"metavars":{"$EXPR1":{"start":{"line":335,"col":7,"offset":9273},"end":{"line":335,"col":12,"offset":9278},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":335,"col":15,"offset":9281},"end":{"line":335,"col":22,"offset":9288},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e84f9ca782ebe425dbf5498f8aeb1f72d6aee851f05fc8b9d1348389a24fdaff31a43ccb6344754ccd6eb833406e8c14aebebf11c876c0f1c257efc7c2849082_0","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":335,"col":24,"offset":9290},"end":{"line":335,"col":48,"offset":9314},"extra":{"metavars":{"$FUN":{"start":{"line":335,"col":24,"offset":9290},"end":{"line":335,"col":30,"offset":9296},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_4","lines":"  if (oflag & O_CREAT) strcat (buf, \"|O_CREAT\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":337,"col":3,"offset":9333},"end":{"line":337,"col":49,"offset":9379},"extra":{"metavars":{"$EXPR1":{"start":{"line":337,"col":7,"offset":9337},"end":{"line":337,"col":12,"offset":9342},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":337,"col":15,"offset":9345},"end":{"line":337,"col":22,"offset":9352},"abstract_content":"O_DSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7241fbaac35508a7127caec5f300804a2874a171d70112d6c9875d301640dfe50959f53967463ee27bd44c5a8e45a82d4418924fbd9fad685dd6fc5e9723b3ea_0","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":337,"col":24,"offset":9354},"end":{"line":337,"col":48,"offset":9378},"extra":{"metavars":{"$FUN":{"start":{"line":337,"col":24,"offset":9354},"end":{"line":337,"col":30,"offset":9360},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_5","lines":"  if (oflag & O_DSYNC) strcat (buf, \"|O_DSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":339,"col":3,"offset":9389},"end":{"line":339,"col":47,"offset":9433},"extra":{"metavars":{"$EXPR1":{"start":{"line":339,"col":7,"offset":9393},"end":{"line":339,"col":12,"offset":9398},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":339,"col":15,"offset":9401},"end":{"line":339,"col":21,"offset":9407},"abstract_content":"O_EXCL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"159d02a523299f71ddef3fcc233981021f2edcca6afcc064457b2286eabf8c570534f30df7b997b28d83b0e514e8e3526e7ea413acdf18a9bf9a8f443180d4fe_0","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":339,"col":23,"offset":9409},"end":{"line":339,"col":46,"offset":9432},"extra":{"metavars":{"$FUN":{"start":{"line":339,"col":23,"offset":9409},"end":{"line":339,"col":29,"offset":9415},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_6","lines":"  if (oflag & O_EXCL) strcat (buf, \"|O_EXCL\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":341,"col":3,"offset":9455},"end":{"line":341,"col":57,"offset":9509},"extra":{"metavars":{"$EXPR1":{"start":{"line":341,"col":7,"offset":9459},"end":{"line":341,"col":12,"offset":9464},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":341,"col":15,"offset":9467},"end":{"line":341,"col":26,"offset":9478},"abstract_content":"O_LARGEFILE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a6f55cb8dace46613a62bda0757f165d47814b77ef3df91ba5ea5f840eeea2a7fd9a54415b1f1e9d175d664de8feab08e21173dce0dca3f282e3ee07e106049_0","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":341,"col":28,"offset":9480},"end":{"line":341,"col":56,"offset":9508},"extra":{"metavars":{"$FUN":{"start":{"line":341,"col":28,"offset":9480},"end":{"line":341,"col":34,"offset":9486},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_7","lines":"  if (oflag & O_LARGEFILE) strcat (buf, \"|O_LARGEFILE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":344,"col":3,"offset":9535},"end":{"line":344,"col":51,"offset":9583},"extra":{"metavars":{"$EXPR1":{"start":{"line":344,"col":7,"offset":9539},"end":{"line":344,"col":12,"offset":9544},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":344,"col":15,"offset":9547},"end":{"line":344,"col":23,"offset":9555},"abstract_content":"O_NOCTTY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dc47e2cfb4563d94132fb9c55f837d44d2bc2bbcfe7574145aef906a1f3b23f5bab909d5e7be564bb998f4f295e044b7b8fa3376844c4f301e805ebc1d37db8f_0","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":344,"col":25,"offset":9557},"end":{"line":344,"col":50,"offset":9582},"extra":{"metavars":{"$FUN":{"start":{"line":344,"col":25,"offset":9557},"end":{"line":344,"col":31,"offset":9563},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_8","lines":"  if (oflag & O_NOCTTY) strcat (buf, \"|O_NOCTTY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":346,"col":3,"offset":9593},"end":{"line":346,"col":55,"offset":9645},"extra":{"metavars":{"$EXPR1":{"start":{"line":346,"col":7,"offset":9597},"end":{"line":346,"col":12,"offset":9602},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":346,"col":15,"offset":9605},"end":{"line":346,"col":25,"offset":9615},"abstract_content":"O_NONBLOCK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"29161cf50566c2697c14cb3f79084152b137e74ddc89b2f9035a4905f4bb50f0de8b5f5335a3efe1c0b5e36e1d411b45bc08fd016952632f60327d11e2599e15_0","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":346,"col":27,"offset":9617},"end":{"line":346,"col":54,"offset":9644},"extra":{"metavars":{"$FUN":{"start":{"line":346,"col":27,"offset":9617},"end":{"line":346,"col":33,"offset":9623},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_9","lines":"  if (oflag & O_NONBLOCK) strcat (buf, \"|O_NONBLOCK\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":348,"col":3,"offset":9663},"end":{"line":348,"col":49,"offset":9709},"extra":{"metavars":{"$EXPR1":{"start":{"line":348,"col":7,"offset":9667},"end":{"line":348,"col":12,"offset":9672},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":348,"col":15,"offset":9675},"end":{"line":348,"col":22,"offset":9682},"abstract_content":"O_RSYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ad653fa57901d50e5d2a82a397c2ec8fffe03613c5cab2d951f18a64eba689d82fca6f6b8c2dde2900636becb85c6b46ea63581e8118d53f50bd94c03c693482_0","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":348,"col":24,"offset":9684},"end":{"line":348,"col":48,"offset":9708},"extra":{"metavars":{"$FUN":{"start":{"line":348,"col":24,"offset":9684},"end":{"line":348,"col":30,"offset":9690},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_10","lines":"  if (oflag & O_RSYNC) strcat (buf, \"|O_RSYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":351,"col":3,"offset":9733},"end":{"line":351,"col":47,"offset":9777},"extra":{"metavars":{"$EXPR1":{"start":{"line":351,"col":7,"offset":9737},"end":{"line":351,"col":12,"offset":9742},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":351,"col":15,"offset":9745},"end":{"line":351,"col":21,"offset":9751},"abstract_content":"O_SYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"df7d769f11786450a0d2d58977a09a5674c38abce04b0e131083202127c8e77fbfcd5d01d5478ad83abf552fcf3d564d95bed09ccff4449fc4ab473d36abf422_0","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":351,"col":23,"offset":9753},"end":{"line":351,"col":46,"offset":9776},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":23,"offset":9753},"end":{"line":351,"col":29,"offset":9759},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_11","lines":"  if (oflag & O_SYNC) strcat (buf, \"|O_SYNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":353,"col":3,"offset":9787},"end":{"line":353,"col":49,"offset":9833},"extra":{"metavars":{"$EXPR1":{"start":{"line":353,"col":7,"offset":9791},"end":{"line":353,"col":12,"offset":9796},"abstract_content":"oflag"},"$EXPR2":{"start":{"line":353,"col":15,"offset":9799},"end":{"line":353,"col":22,"offset":9806},"abstract_content":"O_TRUNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40c8d8f2cbde1a3929f9977155ba8bd23168b1a10bbd980098c2dcb610a1dd358375b8e34abe0c6e496e9f1eed871dd20e8b0e6701988caa81f2230997ac005d_0","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":353,"col":24,"offset":9808},"end":{"line":353,"col":48,"offset":9832},"extra":{"metavars":{"$FUN":{"start":{"line":353,"col":24,"offset":9808},"end":{"line":353,"col":30,"offset":9814},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_12","lines":"  if (oflag & O_TRUNC) strcat (buf, \"|O_TRUNC\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":405,"col":4,"offset":11279},"end":{"line":405,"col":26,"offset":11301},"extra":{"metavars":{"$PTR":{"start":{"line":405,"col":10,"offset":11285},"end":{"line":405,"col":24,"offset":11299},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_0","lines":"\t  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":442,"col":36,"offset":11994},"end":{"line":442,"col":73,"offset":12031},"extra":{"metavars":{"$FUN":{"start":{"line":442,"col":36,"offset":11994},"end":{"line":442,"col":46,"offset":12004},"abstract_content":"_rmt_rexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c1d03a0198cceb9bc026b6be275aa618bc31c44e0a12e68dfe3996ff433d50834517a703e26704129fa71ad0668423d498dcac309f698d847e19fd3107bcbe0e_0","lines":"  READ_SIDE (remote_pipe_number) = _rmt_rexec (remote_host, remote_user);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":446,"col":7,"offset":12108},"end":{"line":446,"col":29,"offset":12130},"extra":{"metavars":{"$PTR":{"start":{"line":446,"col":13,"offset":12114},"end":{"line":446,"col":27,"offset":12128},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_1","lines":"      free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":465,"col":2,"offset":12474},"end":{"line":465,"col":24,"offset":12496},"extra":{"metavars":{"$PTR":{"start":{"line":465,"col":8,"offset":12480},"end":{"line":465,"col":22,"offset":12494},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_2","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":474,"col":9,"offset":12668},"end":{"line":474,"col":45,"offset":12704},"extra":{"metavars":{"$FUN":{"start":{"line":474,"col":9,"offset":12668},"end":{"line":474,"col":13,"offset":12672},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"adb85e79c43416a7a6a2b8b8270bb4f2b3c93619ceea7324ce737bd1d110012cc236199e031df796a7aa1ec31af46b8bd55b59c69fac85dfc75e8c46b989c543_0","lines":"    if (pipe (to_remote[remote_pipe_number]) == -1","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":475,"col":5,"offset":12715},"end":{"line":475,"col":43,"offset":12753},"extra":{"metavars":{"$FUN":{"start":{"line":475,"col":5,"offset":12715},"end":{"line":475,"col":9,"offset":12719},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"adb85e79c43416a7a6a2b8b8270bb4f2b3c93619ceea7324ce737bd1d110012cc236199e031df796a7aa1ec31af46b8bd55b59c69fac85dfc75e8c46b989c543_1","lines":"\t|| pipe (from_remote[remote_pipe_number]) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":478,"col":2,"offset":12786},"end":{"line":478,"col":24,"offset":12808},"extra":{"metavars":{"$PTR":{"start":{"line":478,"col":8,"offset":12792},"end":{"line":478,"col":22,"offset":12806},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_3","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":483,"col":14,"offset":12855},"end":{"line":483,"col":21,"offset":12862},"extra":{"metavars":{"$FUN":{"start":{"line":483,"col":14,"offset":12855},"end":{"line":483,"col":18,"offset":12859},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97d189af703ef0e79b0fcbf9ea02be5aa554fa4f53b4c5b9620d8cc955c71829f978f08c7914145ce1a7a179329ca7b6dd638008b5982bcb5c97d3c89f7716b5_0","lines":"    status = fork ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":487,"col":2,"offset":12911},"end":{"line":487,"col":24,"offset":12933},"extra":{"metavars":{"$PTR":{"start":{"line":487,"col":8,"offset":12917},"end":{"line":487,"col":22,"offset":12931},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_4","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":507,"col":2,"offset":13601},"end":{"line":507,"col":22,"offset":13621},"extra":{"metavars":{"$1":{"start":{"line":1,"col":15,"offset":14},"end":{"line":1,"col":16,"offset":15},"abstract_content":"g"},"$FUN":{"start":{"line":507,"col":2,"offset":13601},"end":{"line":507,"col":19,"offset":13618},"abstract_content":"sys_reset_uid_gid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1e3e0ae705553d7478d57b18154ba311d75f86a377a4e57044161d2e1733a0635410a541410d839b0c1f27ebb22f90e84333dc9417422dfadf483a5a1e39bb6b_0","lines":"\tsys_reset_uid_gid ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":510,"col":4,"offset":13645},"end":{"line":511,"col":47,"offset":13748},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":510,"col":4,"offset":13645},"end":{"line":510,"col":9,"offset":13650},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0049907a278fbbcc10f0462b974de74e31e33e9d6615962729bcfeac0129cad2274ce8ad730543fc0b2996bd9bfb9f0822908d5ed8146f8b1543aff714e17104_0","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t \"-l\", remote_user, rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":513,"col":4,"offset":13759},"end":{"line":514,"col":28,"offset":13843},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"l"},"$FUN":{"start":{"line":513,"col":4,"offset":13759},"end":{"line":513,"col":9,"offset":13764},"abstract_content":"execl"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0049907a278fbbcc10f0462b974de74e31e33e9d6615962729bcfeac0129cad2274ce8ad730543fc0b2996bd9bfb9f0822908d5ed8146f8b1543aff714e17104_1","lines":"\t  execl (remote_shell, remote_shell_basename, remote_host,\n\t\t rmt_command, (char *) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":533,"col":28,"offset":14312},"end":{"line":533,"col":60,"offset":14344},"extra":{"metavars":{"$FUN":{"start":{"line":533,"col":28,"offset":14312},"end":{"line":533,"col":35,"offset":14319},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f3dd90ebdf4cbca3e3ec78638b28ca95653de53579a8b5997bec575e0c7f80af3becfe9167ac68550ccd6ade2cc25207a037507f2903289577803ac51ffb81e_0","lines":"    char *command_buffer = xmalloc (remote_file_len + 1000);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":534,"col":5,"offset":14350},"end":{"line":534,"col":51,"offset":14396},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":8,"offset":7},"abstract_content":"\"O%s\\n\""},"$BUF":{"start":{"line":534,"col":14,"offset":14359},"end":{"line":534,"col":28,"offset":14373},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":533,"col":28,"offset":14312},"svalue_end":{"line":533,"col":60,"offset":14344},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}},"$FMT":{"start":{"line":534,"col":30,"offset":14375},"end":{"line":534,"col":37,"offset":14382},"abstract_content":"\"O%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"70e34b6991807ec53a4ad095294060108adf21186abec1f4a6e0f44008bd04824f328dd18fbf0ec58d25f3dd4dfae16c7d22c4a678b44347caac9eb6ba5340b5_0","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":534,"col":5,"offset":14350},"end":{"line":534,"col":51,"offset":14396},"extra":{"metavars":{"$FUN":{"start":{"line":534,"col":5,"offset":14350},"end":{"line":534,"col":12,"offset":14357},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_1","lines":"    sprintf (command_buffer, \"O%s\\n\", remote_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":536,"col":5,"offset":14470},"end":{"line":536,"col":34,"offset":14499},"extra":{"metavars":{"$FUN":{"start":{"line":536,"col":5,"offset":14470},"end":{"line":536,"col":11,"offset":14476},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae477841920e520dfc6b6bba88972265493f6cbfa84fc50e134ccfc0a00596b2dba8105a0e1145169d8946b07ba1ed4873aa206fb4a14ca0fec343fbc0966244_13","lines":"    strcat (command_buffer, \"\\n\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":541,"col":2,"offset":14631},"end":{"line":541,"col":24,"offset":14653},"extra":{"metavars":{"$PTR":{"start":{"line":541,"col":8,"offset":14637},"end":{"line":541,"col":22,"offset":14651},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":533,"col":28,"offset":14312},"svalue_end":{"line":533,"col":60,"offset":14344},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3af07cd66e36cad964cd43de62639f6b799cd85b05d085274d39acf3e42f9ddc12093d0e0c799eeaa4f02fcc163f617539d64262ed22271ea33434f8d2a00ab3_0","lines":"\tfree (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":542,"col":2,"offset":14655},"end":{"line":542,"col":24,"offset":14677},"extra":{"metavars":{"$PTR":{"start":{"line":542,"col":8,"offset":14661},"end":{"line":542,"col":22,"offset":14675},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_5","lines":"\tfree (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":546,"col":5,"offset":14742},"end":{"line":546,"col":27,"offset":14764},"extra":{"metavars":{"$PTR":{"start":{"line":546,"col":11,"offset":14748},"end":{"line":546,"col":25,"offset":14762},"abstract_content":"command_buffer","propagated_value":{"svalue_start":{"line":533,"col":28,"offset":14312},"svalue_end":{"line":533,"col":60,"offset":14344},"svalue_abstract_content":"xmalloc(remote_file_len+1000)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3af07cd66e36cad964cd43de62639f6b799cd85b05d085274d39acf3e42f9ddc12093d0e0c799eeaa4f02fcc163f617539d64262ed22271ea33434f8d2a00ab3_1","lines":"    free (command_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":549,"col":3,"offset":14772},"end":{"line":549,"col":25,"offset":14794},"extra":{"metavars":{"$PTR":{"start":{"line":549,"col":9,"offset":14778},"end":{"line":549,"col":23,"offset":14792},"abstract_content":"file_name_copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d9c2bba3d854be84d2c440989437c761d6764a12d1810bec05048d3501ce2f6bd041e6f6199539e37880c4ff243ee513edc0763f9681828199c3287f5354fed5_6","lines":"  free (file_name_copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":578,"col":3,"offset":15436},"end":{"line":578,"col":61,"offset":15494},"extra":{"metavars":{"$FUN":{"start":{"line":578,"col":3,"offset":15436},"end":{"line":578,"col":10,"offset":15443},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_2","lines":"  sprintf (command_buffer, \"R%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":580,"col":11,"offset":15554},"end":{"line":580,"col":39,"offset":15582},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":580,"col":11,"offset":15554},"end":{"line":580,"col":17,"offset":15560},"abstract_content":"status"},"$SIGNED":{"start":{"line":580,"col":32,"offset":15575},"end":{"line":580,"col":38,"offset":15581},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c29a55862bc4488fc53d4c5621e86b029d5c555f1b9a417fe673642b166f054a282c8c9a393cd2d4bc35b5d096d9b122bdb121f2a0bc35ea554631339d0d0b1d_0","lines":"      || (status = get_status (handle)) == SAFE_READ_ERROR","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":584,"col":8,"offset":15665},"end":{"line":584,"col":19,"offset":15676},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":584,"col":8,"offset":15665},"end":{"line":584,"col":15,"offset":15672},"abstract_content":"counter"},"$SIGNED":{"start":{"line":584,"col":18,"offset":15675},"end":{"line":584,"col":19,"offset":15676},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d8a03527d14e490cfbae43361cb769ba2afcba629704cc42a764d18387b6775cfc4e8dd56080560e7e423834600df65da73cf5fbf6531287e55bec9aa8a9596f_0","lines":"  for (counter = 0; counter < status; counter += rlen, buffer += rlen)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":586,"col":7,"offset":15741},"end":{"line":586,"col":70,"offset":15804},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":586,"col":7,"offset":15741},"end":{"line":586,"col":11,"offset":15745},"abstract_content":"rlen"},"$SIGNED":{"start":{"line":586,"col":36,"offset":15770},"end":{"line":586,"col":42,"offset":15776},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c41ad27dc1a3c848446a1cb5488b855ae47e3e8acffc3a4431a759704fabb42b38515be0e5b8f0e437fd3f81f8025770a7d09b71f133b24b93b821e33560aa22_0","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":586,"col":14,"offset":15748},"end":{"line":586,"col":70,"offset":15804},"extra":{"metavars":{"$FUN":{"start":{"line":586,"col":14,"offset":15748},"end":{"line":586,"col":23,"offset":15757},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"732bc4ae0705260a4ee639d4bd8e96782ac5cf271fd43e0773bbb5715a64258d0ca92ef8bd4a3c32b96bd0c1ff82f894aa71be9c371a3d21782b5684d5ad0d9f_2","lines":"      rlen = safe_read (READ_SIDE (handle), buffer, status - counter);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":600,"col":1,"offset":16064},"end":{"line":600,"col":12,"offset":16075},"extra":{"metavars":{"$FUN":{"start":{"line":600,"col":1,"offset":16064},"end":{"line":600,"col":12,"offset":16075},"abstract_content":"rmt_write__"},"$SIGNED":{"start":{"line":608,"col":12,"offset":16341},"end":{"line":608,"col":13,"offset":16342},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"32e9c3e5eb6129842f428feab94885d6572f723bc9a88f91a50e0f7a9aa7cfbc36d51fe6e7fd11eabf53cfcbecf34cd7268f06b86aae7f905aaacf8dacd2d153_0","lines":"rmt_write__ (int handle, char *buffer, size_t length)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":606,"col":3,"offset":16221},"end":{"line":606,"col":61,"offset":16279},"extra":{"metavars":{"$FUN":{"start":{"line":606,"col":3,"offset":16221},"end":{"line":606,"col":10,"offset":16228},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_3","lines":"  sprintf (command_buffer, \"W%lu\\n\", (unsigned long) length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":610,"col":18,"offset":16362},"end":{"line":610,"col":43,"offset":16387},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"00cb89a1da0fb18b2adf47e2d1724c5125e1479ae62bb2ee7b365896b8348f47f1514a9d333141dc9e0809e00eb65f8bd51a7aede2b3763c49f0e2f3c012d674_2","lines":"  pipe_handler = signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":611,"col":3,"offset":16391},"end":{"line":611,"col":61,"offset":16449},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":611,"col":3,"offset":16391},"end":{"line":611,"col":10,"offset":16398},"abstract_content":"written"},"$SIGNED":{"start":{"line":611,"col":37,"offset":16425},"end":{"line":611,"col":43,"offset":16431},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"377e1462ee604c68d562774fcd69faf2aa3ba38bad21c36941c3d809d8a22edf51284914ae807d03cdf83b93495e12de0aefe770572143add01736aa60fe8e1c_0","lines":"  written = full_write (WRITE_SIDE (handle), buffer, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":612,"col":3,"offset":16453},"end":{"line":612,"col":33,"offset":16483},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"00cb89a1da0fb18b2adf47e2d1724c5125e1479ae62bb2ee7b365896b8348f47f1514a9d333141dc9e0809e00eb65f8bd51a7aede2b3763c49f0e2f3c012d674_3","lines":"  signal (SIGPIPE, pipe_handler);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":654,"col":3,"offset":17419},"end":{"line":654,"col":51,"offset":17467},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$BUF":{"start":{"line":654,"col":12,"offset":17428},"end":{"line":654,"col":26,"offset":17442},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":654,"col":28,"offset":17444},"end":{"line":654,"col":39,"offset":17455},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"af9b708e287bd99162678dcfdd7a059d57abd8033807724a47eb7d333f6d5175a1807d135252c6d6a2400b3edb7cc5af894349bcb2cf4007372a0e83f3712a88_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":654,"col":3,"offset":17419},"end":{"line":654,"col":51,"offset":17467},"extra":{"metavars":{"$FUN":{"start":{"line":654,"col":3,"offset":17419},"end":{"line":654,"col":10,"offset":17426},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_4","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":654,"col":3,"offset":17419},"end":{"line":654,"col":51,"offset":17467},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"L%s\\n%d\\n\""},"$TYPE":{"start":{"line":634,"col":3,"offset":16925},"end":{"line":634,"col":7,"offset":16929},"abstract_content":"char"},"$LEN":{"start":{"line":634,"col":23,"offset":16945},"end":{"line":634,"col":42,"offset":16964},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":654,"col":3,"offset":17419},"end":{"line":654,"col":10,"offset":17426},"abstract_content":"sprintf"},"$BUF":{"start":{"line":654,"col":12,"offset":17428},"end":{"line":654,"col":26,"offset":17442},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":654,"col":28,"offset":17444},"end":{"line":654,"col":39,"offset":17455},"abstract_content":"\"L%s\\n%d\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"aa983ce33e0f8642bb88c1fbbca0a74495c0e5d6b6818f25c30ef7fa220f211edca9407466c0243211dca686265883fda14f7916a8b3461c1e9cc5f89d9e3c75_0","lines":"  sprintf (command_buffer, \"L%s\\n%d\\n\", p, whence);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":692,"col":2,"offset":18417},"end":{"line":693,"col":41,"offset":18495},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$BUF":{"start":{"line":692,"col":11,"offset":18426},"end":{"line":692,"col":25,"offset":18440},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":692,"col":27,"offset":18442},"end":{"line":692,"col":38,"offset":18453},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"116cc065791e2bcbdd8e869a5b5b8e09e9382fdd29a83df2514132369fa08899f98027a39bb0e4bf5fbc815b0fcd6cb3864ec9a6b3d5fa4eff798c84bf941388_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":692,"col":2,"offset":18417},"end":{"line":693,"col":41,"offset":18495},"extra":{"metavars":{"$FUN":{"start":{"line":692,"col":2,"offset":18417},"end":{"line":692,"col":9,"offset":18424},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ef54ae13f9fdfae17a1cb9391a6dfea92a84cacfb0f1ef978992fbda585ebdf41dc150107978d36850308698dec276fd5f9809990746fbdae132579e948ac7c7_5","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":692,"col":2,"offset":18417},"end":{"line":693,"col":41,"offset":18495},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":12,"offset":11},"abstract_content":"\"I%d\\n%s\\n\""},"$TYPE":{"start":{"line":676,"col":2,"offset":17884},"end":{"line":676,"col":6,"offset":17888},"abstract_content":"char"},"$LEN":{"start":{"line":676,"col":22,"offset":17904},"end":{"line":676,"col":41,"offset":17923},"abstract_content":"COMMAND_BUFFER_SIZE"},"$FUN":{"start":{"line":692,"col":2,"offset":18417},"end":{"line":692,"col":9,"offset":18424},"abstract_content":"sprintf"},"$BUF":{"start":{"line":692,"col":11,"offset":18426},"end":{"line":692,"col":25,"offset":18440},"abstract_content":"command_buffer"},"$FMT":{"start":{"line":692,"col":27,"offset":18442},"end":{"line":692,"col":38,"offset":18453},"abstract_content":"\"I%d\\n%s\\n\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ecb2f556bd16d761a90182f2c5e7e5f05fbf431f5e50ac0071793e8af41e467bfe0bb2fe05c9854b9a51cd77837bc93e9d28013fbfbcdad76560192f99b7aad7_0","lines":"\tsprintf (command_buffer, \"I%d\\n%s\\n\",\n\t\t ((struct mtop *) argument)->mt_op, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":713,"col":2,"offset":18987},"end":{"line":715,"col":14,"offset":19089},"extra":{"metavars":{"$EXPR1":{"start":{"line":714,"col":10,"offset":19031},"end":{"line":714,"col":16,"offset":19037},"abstract_content":"status"},"$EXPR2":{"start":{"line":714,"col":19,"offset":19040},"end":{"line":714,"col":38,"offset":19059},"abstract_content":"get_status(handle)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc84134262904ecc0ac1453ad42d8a153ee268b0a2b97aa4bb7a9e73bbe7dd90ac391b006c70e56004fd93d3f3bb2a532fe9c32f136d22a6a6e4270da134c39a_0","lines":"\tif (do_command (handle, \"S\") == -1\n\t    || (status = get_status (handle), status == -1))\n\t  return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":725,"col":6,"offset":19248},"end":{"line":725,"col":64,"offset":19306},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":725,"col":6,"offset":19248},"end":{"line":725,"col":13,"offset":19255},"abstract_content":"counter"},"$SIGNED":{"start":{"line":725,"col":38,"offset":19280},"end":{"line":725,"col":44,"offset":19286},"abstract_content":"handle"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"db17e26d30528f33ef08efe90289f3d4b48f99f59321ed0cbd867324a2d520361a5cde57a86e4af8b380dabc95004c5a5f3f8002941161933035cc97c2652f15_0","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":725,"col":16,"offset":19258},"end":{"line":725,"col":64,"offset":19306},"extra":{"metavars":{"$FUN":{"start":{"line":725,"col":16,"offset":19258},"end":{"line":725,"col":25,"offset":19267},"abstract_content":"safe_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"732bc4ae0705260a4ee639d4bd8e96782ac5cf271fd43e0773bbb5715a64258d0ca92ef8bd4a3c32b96bd0c1ff82f894aa71be9c371a3d21782b5684d5ad0d9f_3","lines":"\t    counter = safe_read (READ_SIDE (handle), argument, status);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":741,"col":7,"offset":19755},"end":{"line":741,"col":18,"offset":19766},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":741,"col":7,"offset":19755},"end":{"line":741,"col":14,"offset":19762},"abstract_content":"counter"},"$SIGNED":{"start":{"line":741,"col":17,"offset":19765},"end":{"line":741,"col":18,"offset":19766},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d8a03527d14e490cfbae43361cb769ba2afcba629704cc42a764d18387b6775cfc4e8dd56080560e7e423834600df65da73cf5fbf6531287e55bec9aa8a9596f_1","lines":"\tfor (counter = 0; counter < status; counter += 2)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":67,"col":7,"offset":1870},"end":{"line":67,"col":62,"offset":1925},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a43b14776c81c29d80d182e6fc4e8840caa6c36c00df3e03fbc4accc0c175c729dec58d7fa7113e525120db3a3467862a6d23afec70b7164dc0e84842839d0d4_0","lines":"      fprintf (tty_out, _(\"rename %s -> \"), file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":69,"col":17,"offset":1967},"end":{"line":69,"col":45,"offset":1995},"extra":{"metavars":{"$1":{"start":{"line":1,"col":8,"offset":7},"end":{"line":1,"col":9,"offset":8},"abstract_content":"s"},"$FUN":{"start":{"line":69,"col":17,"offset":1967},"end":{"line":69,"col":25,"offset":1975},"abstract_content":"ds_fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"acf732a210166b564ac38c6efc29e8ce0aa0be68b02ad68c82e02439a9a8bc07c1c6e8594d56977dc0bf994bf09433c225fd2091efceab7ee55ac256e3d4487d_0","lines":"      str_res = ds_fgets (tty_in, &new_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":121,"col":19,"offset":3282},"end":{"line":121,"col":53,"offset":3316},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":19,"offset":3282},"end":{"line":121,"col":26,"offset":3289},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db43bbdb67a6d7276977a303e8d9c7b45a790afed8bb6044cdaa91132df08b9fa820155542e5adc146595ab7ebb0cee57fc370f76cfcc438754842e1cb9fc474_0","lines":"      link_name = xmalloc (file_hdr->c_filesize + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":122,"col":7,"offset":3324},"end":{"line":122,"col":72,"offset":3389},"extra":{"metavars":{"$FUN":{"start":{"line":122,"col":7,"offset":3324},"end":{"line":122,"col":25,"offset":3342},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_0","lines":"      tape_buffered_read (link_name, in_file_des, file_hdr->c_filesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":143,"col":5,"offset":3905},"end":{"line":143,"col":22,"offset":3922},"extra":{"metavars":{"$PTR":{"start":{"line":143,"col":11,"offset":3911},"end":{"line":143,"col":20,"offset":3920},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":139,"col":26,"offset":3797},"svalue_end":{"line":139,"col":63,"offset":3834},"svalue_abstract_content":"get_link_name(file_hdr in_file_des)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2f834f093a4f4b0df613ebe6df906f2bac9a3ec1858ee80a1fd895949b168df8262d83be4358bc975b94568404e6dea5c242915b1231d7136a1cbe1b0f444b3_0","lines":"\t\t  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":43,"offset":4920},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"374fe7bee19d1286dd6cc3a2c2aaad90977c816a6362b4f35420822ce835e88fda12dc5644ad2ee2dc2a672f51e8829c3140d018fb2164f21015c6fd8a5e47f5_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":43,"offset":4920},"extra":{"metavars":{"$FUN":{"start":{"line":187,"col":7,"offset":4884},"end":{"line":187,"col":12,"offset":4889},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7a546dac9ce5e5bd6e3107ac463a6b8435799554d7242cd82e53b9f626ea1406b3cfacd8f3227b0167b4ecd486a4f56140aadd29e966338e78f40161617b2d0e_0","lines":"  if (lstat (file_hdr->c_name, &file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":209,"col":5,"offset":5599},"end":{"line":209,"col":30,"offset":5624},"extra":{"metavars":{"$FUN":{"start":{"line":209,"col":5,"offset":5599},"end":{"line":209,"col":11,"offset":5605},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"baec0c60f7f10726740f66f17d660f47c8f2bfda9102abfce1835fb1ca422e5598b7c277aa071884a61da7a70e85627ee1723641125d26e34254bae07b8e1fa9_0","lines":"\t\t: unlink (file_hdr->c_name))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":367,"col":22,"offset":10025},"end":{"line":368,"col":43,"offset":10091},"extra":{"metavars":{"$FUN":{"start":{"line":367,"col":22,"offset":10025},"end":{"line":367,"col":26,"offset":10029},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"76e88188052037b3bd553544e48a78f61d0c5afd2f384bf294f30ab23f85639528d499518e9ec942a7a3aca04493dbb54ff2dd92fb5f2a6cbc626e8188a6b7eb_0","lines":"      out_file_des = open (d->header.c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":372,"col":19,"offset":10207},"end":{"line":374,"col":16,"offset":10287},"extra":{"metavars":{"$FUN":{"start":{"line":372,"col":19,"offset":10207},"end":{"line":372,"col":23,"offset":10211},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"76e88188052037b3bd553544e48a78f61d0c5afd2f384bf294f30ab23f85639528d499518e9ec942a7a3aca04493dbb54ff2dd92fb5f2a6cbc626e8188a6b7eb_1","lines":"\t  out_file_des = open (d->header.c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":420,"col":8,"offset":11622},"end":{"line":420,"col":31,"offset":11645},"extra":{"metavars":{"$3":{"start":{"line":1,"col":11,"offset":10},"end":{"line":1,"col":13,"offset":12},"abstract_content":"in"},"$FUN":{"start":{"line":420,"col":8,"offset":11622},"end":{"line":420,"col":20,"offset":11634},"abstract_content":"defer_copyin"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b8761e96f571238d4449dc9fb7a30a0540560c51105cc2844338bffedb43965f12573c1145ba34852832e44c4d36b2a01af8772ba5bd5c910a55563895f3e787_0","lines":"\t      defer_copyin (file_hdr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":475,"col":22,"offset":13544},"end":{"line":476,"col":43,"offset":13610},"extra":{"metavars":{"$FUN":{"start":{"line":475,"col":22,"offset":13544},"end":{"line":475,"col":26,"offset":13548},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"76e88188052037b3bd553544e48a78f61d0c5afd2f384bf294f30ab23f85639528d499518e9ec942a7a3aca04493dbb54ff2dd92fb5f2a6cbc626e8188a6b7eb_2","lines":"      out_file_des = open (file_hdr->c_name,\n\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":481,"col":19,"offset":13729},"end":{"line":483,"col":16,"offset":13809},"extra":{"metavars":{"$FUN":{"start":{"line":481,"col":19,"offset":13729},"end":{"line":481,"col":23,"offset":13733},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"76e88188052037b3bd553544e48a78f61d0c5afd2f384bf294f30ab23f85639528d499518e9ec942a7a3aca04493dbb54ff2dd92fb5f2a6cbc626e8188a6b7eb_3","lines":"\t  out_file_des = open (file_hdr->c_name,\n\t\t\t       O_CREAT | O_WRONLY | O_BINARY,\n\t\t\t       0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":612,"col":12,"offset":17450},"end":{"line":612,"col":46,"offset":17484},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":612,"col":12,"offset":17450},"end":{"line":612,"col":17,"offset":17455},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ca00b649a1577b997fb28ac77b4bc0f90dcd1557b888a80c44ca028c5d1d0d133815b18c67b418936489f4c9ee2e1fa1e18a94bf50f3e8ec5de9c4492fe9c2f_0","lines":"      if ((chown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":617,"col":7,"offset":17644},"end":{"line":617,"col":49,"offset":17686},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":617,"col":7,"offset":17644},"end":{"line":617,"col":12,"offset":17649},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f61d7d306466a24b2e1011ec1ee97e18332778a9d66921317f5e089f7180d52952e6c83e2a87fafa68a37f4c5a1c546942efc693beae47591a2a359d027326c1_0","lines":"  if (chmod (file_hdr->c_name, file_hdr->c_mode) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":660,"col":7,"offset":18939},"end":{"line":660,"col":24,"offset":18956},"extra":{"metavars":{"$PTR":{"start":{"line":660,"col":13,"offset":18945},"end":{"line":660,"col":22,"offset":18954},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2f834f093a4f4b0df613ebe6df906f2bac9a3ec1858ee80a1fd895949b168df8262d83be4358bc975b94568404e6dea5c242915b1231d7136a1cbe1b0f444b3_1","lines":"      free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":667,"col":12,"offset":19144},"end":{"line":667,"col":47,"offset":19179},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":667,"col":12,"offset":19144},"end":{"line":667,"col":18,"offset":19150},"abstract_content":"lchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0bc130a24cc3d610502d433e623ede8e4a77e6e8e00957dbb36b40a6e4f2883cbb3e449f4bc88a9443319ad7999a4fae380364b72c80fac9e493a050ef8a07d4_0","lines":"      if ((lchown (file_hdr->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":671,"col":3,"offset":19268},"end":{"line":671,"col":20,"offset":19285},"extra":{"metavars":{"$PTR":{"start":{"line":671,"col":9,"offset":19274},"end":{"line":671,"col":18,"offset":19283},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2f834f093a4f4b0df613ebe6df906f2bac9a3ec1858ee80a1fd895949b168df8262d83be4358bc975b94568404e6dea5c242915b1231d7136a1cbe1b0f444b3_2","lines":"  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":707,"col":7,"offset":19960},"end":{"line":707,"col":42,"offset":19995},"extra":{"metavars":{"$FUN":{"start":{"line":707,"col":7,"offset":19960},"end":{"line":707,"col":18,"offset":19971},"abstract_content":"copyin_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"14521594060508a7ba17f7bfc1a026e45dd3e5e3bbd8b0059025c5442c5857cd5bc0a3211f587d9a0cfcf93ade40a840b14650d6f2485504d7664718d092a951_0","lines":"      copyin_link (file_hdr, in_file_des);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":739,"col":3,"offset":20711},"end":{"line":739,"col":31,"offset":20739},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"504f06206f16555b364f2632e102d7652d5dffeff1570f95c77ff852c8605f36c5f9d2920afe55e4e2a938c4a90a0df4ea9821d2573eb234d9415ca1aeea23a5_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":739,"col":3,"offset":20711},"end":{"line":739,"col":31,"offset":20739},"extra":{"metavars":{"$FUN":{"start":{"line":739,"col":3,"offset":20711},"end":{"line":739,"col":9,"offset":20717},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42d7e6cb3c3f1a17b8db8f94e39c23b160e9a221f51219000206e082123410ca3abb588e9786af636fcedf4f7acf15bd48c4795d61b90cccd4740ed9855f26ae_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":739,"col":3,"offset":20711},"end":{"line":739,"col":31,"offset":20739},"extra":{"metavars":{"$TYPE":{"start":{"line":731,"col":3,"offset":20549},"end":{"line":731,"col":7,"offset":20553},"abstract_content":"char"},"$LEN":{"start":{"line":731,"col":13,"offset":20559},"end":{"line":731,"col":15,"offset":20561},"abstract_content":"40"},"$FUN":{"start":{"line":739,"col":3,"offset":20711},"end":{"line":739,"col":9,"offset":20717},"abstract_content":"strcpy"},"$BUF":{"start":{"line":739,"col":11,"offset":20719},"end":{"line":739,"col":15,"offset":20723},"abstract_content":"tbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"9363e6481c14819b55963beb680bd57aeda8b37cdbfe80af33c5613a6c172304b43c3afedeee666d949b23fd60377e68df4d2053745500fb7b85d87598965ada_0","lines":"  strcpy (tbuf, ctime (&when));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":745,"col":7,"offset":20951},"end":{"line":745,"col":36,"offset":20980},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"504f06206f16555b364f2632e102d7652d5dffeff1570f95c77ff852c8605f36c5f9d2920afe55e4e2a938c4a90a0df4ea9821d2573eb234d9415ca1aeea23a5_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":745,"col":7,"offset":20951},"end":{"line":745,"col":36,"offset":20980},"extra":{"metavars":{"$FUN":{"start":{"line":745,"col":7,"offset":20951},"end":{"line":745,"col":13,"offset":20957},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42d7e6cb3c3f1a17b8db8f94e39c23b160e9a221f51219000206e082123410ca3abb588e9786af636fcedf4f7acf15bd48c4795d61b90cccd4740ed9855f26ae_1","lines":"      strcpy (tbuf + 11, tbuf + 19);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":793,"col":33,"offset":22222},"end":{"line":793,"col":77,"offset":22266},"extra":{"metavars":{"$FUN":{"start":{"line":793,"col":33,"offset":22222},"end":{"line":793,"col":40,"offset":22229},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db43bbdb67a6d7276977a303e8d9c7b45a790afed8bb6044cdaa91132df08b9fa820155542e5adc146595ab7ebb0cee57fc370f76cfcc438754842e1cb9fc474_1","lines":"  new_save_patterns = (char **) xmalloc (max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":797,"col":16,"offset":22351},"end":{"line":797,"col":46,"offset":22381},"extra":{"metavars":{"$FUN":{"start":{"line":797,"col":16,"offset":22351},"end":{"line":797,"col":21,"offset":22356},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"812bb7a0ceb8c16a497539e9bc86685c126e2ad91d3d72dac63dfe614c0a92293880dac35b1609258bba27c0bfbd5b1ac95c7440ae17aab27f1e08643c683f92_0","lines":"  pattern_fp = fopen (pattern_file_name, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":806,"col":6,"offset":22629},"end":{"line":807,"col":44,"offset":22710},"extra":{"metavars":{"$FUN":{"start":{"line":806,"col":6,"offset":22629},"end":{"line":806,"col":14,"offset":22637},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0856659546ab148ab126762c1c21c84ea020bd0e2d3f4ae721f24368088e4156491fefadba82d3b243c475c4abbb7db81d82375c55aeec308e1260ec4727b190_0","lines":"\t    xrealloc ((char *) new_save_patterns,\n\t\t      max_new_patterns * sizeof (char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":917,"col":9,"offset":25311},"end":{"line":929,"col":7,"offset":25589},"extra":{"metavars":{"$EXPR1":{"start":{"line":918,"col":10,"offset":25344},"end":{"line":918,"col":19,"offset":25353},"abstract_content":"check_tar"},"$EXPR2":{"start":{"line":918,"col":22,"offset":25356},"end":{"line":918,"col":46,"offset":25380},"abstract_content":"is_tar_header(tmpbuf.s)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40528187215c20057b3a013fe14dd11a4d475f6433a4e95e55958399518674cfafc92bad07ef756564972dd400237d02c2ba7a615fe25ee5d25cb32f4f6e4c84_0","lines":"\t  else if (peeked_bytes >= 512\n\t\t   && (check_tar = is_tar_header (tmpbuf.s)))\n\t    {\n\t      if (check_tar == 2)\n\t\tarchive_format = arf_ustar;\n\t      else\n\t\tarchive_format = arf_tar;\n\t    }\n\t  else\n\t    {\n\t      tape_buffered_read (tmpbuf.s, in_des, 1L);\n\t      ++bytes_skipped;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":927,"col":8,"offset":25516},"end":{"line":927,"col":49,"offset":25557},"extra":{"metavars":{"$FUN":{"start":{"line":927,"col":8,"offset":25516},"end":{"line":927,"col":26,"offset":25534},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_1","lines":"\t      tape_buffered_read (tmpbuf.s, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":947,"col":3,"offset":25941},"end":{"line":947,"col":61,"offset":25999},"extra":{"metavars":{"$FUN":{"start":{"line":947,"col":3,"offset":25941},"end":{"line":947,"col":21,"offset":25959},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_2","lines":"  tape_buffered_read (magic.str, in_des, sizeof (magic.str));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":992,"col":7,"offset":27298},"end":{"line":992,"col":65,"offset":27356},"extra":{"metavars":{"$FUN":{"start":{"line":992,"col":7,"offset":27298},"end":{"line":992,"col":14,"offset":27305},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7b5eb382706010183556ca6f8c155f3ec620eaf7757e02a83e1238f932b842ce07566f4ad6dcc95b55d6410183bc40a0bb4623ec30dd1661eb98b4f8bd969688_0","lines":"      memmove (magic.str, magic.str + 1, sizeof (magic.str) - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":993,"col":7,"offset":27364},"end":{"line":993,"col":74,"offset":27431},"extra":{"metavars":{"$FUN":{"start":{"line":993,"col":7,"offset":27364},"end":{"line":993,"col":25,"offset":27382},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_3","lines":"      tape_buffered_read (magic.str + sizeof (magic.str) - 1, in_des, 1L);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1001,"col":3,"offset":27574},"end":{"line":1001,"col":49,"offset":27620},"extra":{"metavars":{"$FUN":{"start":{"line":1001,"col":3,"offset":27574},"end":{"line":1001,"col":21,"offset":27592},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_4","lines":"  tape_buffered_read (file_hdr->c_name, fd, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1015,"col":3,"offset":27957},"end":{"line":1016,"col":59,"offset":28063},"extra":{"metavars":{"$FUN":{"start":{"line":1015,"col":3,"offset":27957},"end":{"line":1015,"col":21,"offset":27975},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_5","lines":"  tape_buffered_read (ascii_header.c_dev, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1073,"col":3,"offset":29884},"end":{"line":1074,"col":59,"offset":29990},"extra":{"metavars":{"$FUN":{"start":{"line":1073,"col":3,"offset":29884},"end":{"line":1073,"col":21,"offset":29902},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_6","lines":"  tape_buffered_read (ascii_header.c_ino, in_des,\n\t\t      sizeof ascii_header - sizeof ascii_header.c_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1107,"col":3,"offset":31321},"end":{"line":1108,"col":42,"offset":31416},"extra":{"metavars":{"$FUN":{"start":{"line":1107,"col":3,"offset":31321},"end":{"line":1107,"col":21,"offset":31339},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d973e160afb3bd3ba8fb171d0ad24d4706f23cf7e40fa0d0493fe8a0b6f286e80de96c5ca62a1fb085828f89574fbabc614b5e9d87b99bb950a9547dd8fb7bc5_7","lines":"  tape_buffered_read (((char *) short_hdr) + 6, in_des,\n\t\t      sizeof *short_hdr - 6 /* = 20 */);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1117,"col":11,"offset":31685},"end":{"line":1117,"col":22,"offset":31696},"extra":{"metavars":{"$EXPR":{"start":{"line":1117,"col":11,"offset":31685},"end":{"line":1117,"col":17,"offset":31691},"abstract_content":"warned","propagated_value":{"svalue_start":{"line":1113,"col":27,"offset":31578},"svalue_end":{"line":1113,"col":28,"offset":31579},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2850ee8b15206111e7d7d852b20a01048b673b2ec15f9b5ead73e97fcb215c87fd6a41fbdd95506172440556c3b1f9e0ed49cd3dbd0bd8b1beb1151aabbcc5a_0","lines":"      if (warned == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1222,"col":19,"offset":34835},"end":{"line":1222,"col":49,"offset":34865},"extra":{"metavars":{"$FUN":{"start":{"line":1222,"col":19,"offset":34835},"end":{"line":1222,"col":24,"offset":34840},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"812bb7a0ceb8c16a497539e9bc86685c126e2ad91d3d72dac63dfe614c0a92293880dac35b1609258bba27c0bfbd5b1ac95c7440ae17aab27f1e08643c683f92_1","lines":"      rename_in = fopen (rename_batch_file, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1231,"col":16,"offset":35060},"end":{"line":1231,"col":37,"offset":35081},"extra":{"metavars":{"$FUN":{"start":{"line":1231,"col":16,"offset":35060},"end":{"line":1231,"col":21,"offset":35065},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"812bb7a0ceb8c16a497539e9bc86685c126e2ad91d3d72dac63dfe614c0a92293880dac35b1609258bba27c0bfbd5b1ac95c7440ae17aab27f1e08643c683f92_2","lines":"      tty_in = fopen (TTY_NAME, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1236,"col":17,"offset":35176},"end":{"line":1236,"col":38,"offset":35197},"extra":{"metavars":{"$FUN":{"start":{"line":1236,"col":17,"offset":35176},"end":{"line":1236,"col":22,"offset":35181},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"812bb7a0ceb8c16a497539e9bc86685c126e2ad91d3d72dac63dfe614c0a92293880dac35b1609258bba27c0bfbd5b1ac95c7440ae17aab27f1e08643c683f92_3","lines":"      tty_out = fopen (TTY_NAME, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1258,"col":11,"offset":35633},"end":{"line":1258,"col":42,"offset":35664},"extra":{"metavars":{"$FUN":{"start":{"line":1258,"col":11,"offset":35633},"end":{"line":1258,"col":16,"offset":35638},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"df163501769d238698d49e2c6b1cdb8b38eab2fd795d642f3f50493ef08f781c1d54476a36c8686a94ddfda9702d7b0007cfec1991b2f51ad1ed84efd5aaac6d_0","lines":"      if (fstat (in_file_des, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1287,"col":4,"offset":36450},"end":{"line":1289,"col":55,"offset":36583},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":58,"offset":57},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""},"$ARG1":{"start":{"line":1287,"col":13,"offset":36459},"end":{"line":1287,"col":19,"offset":36465},"abstract_content":"stderr"},"$FMT":{"start":{"line":1288,"col":3,"offset":36470},"end":{"line":1288,"col":60,"offset":36527},"abstract_content":"\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c7a328a36fbcbb5ffcba358286c8eb61273476e812f818bb613585471cdc08b4db5a2a0087fbd97f9c2b50015025ef11de674a666560ac5831d23508633cc82_0","lines":"\t  fprintf (stderr, \n\t\t\"nlink = %d, mtime = %d, filesize = %d, dev_maj = 0x%x\\n\",\n\t\th->c_nlink, h->c_mtime, h->c_filesize, h->c_dev_maj);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1290,"col":4,"offset":36588},"end":{"line":1292,"col":61,"offset":36744},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":68,"offset":67},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""},"$ARG1":{"start":{"line":1290,"col":13,"offset":36597},"end":{"line":1290,"col":19,"offset":36603},"abstract_content":"stderr"},"$FMT":{"start":{"line":1291,"col":10,"offset":36615},"end":{"line":1291,"col":77,"offset":36682},"abstract_content":"\"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a4a948217268c9a3360c1ca81d5e01fd40e9d38a989e56c5e7333997bf6f6571a3ff143ba4367dcf67cf3e3b0b73513334769bfe4f6a5794298de1451f1b9d2_0","lines":"\t  fprintf (stderr, \n\t        \"dev_min = 0x%x, rdev_maj = 0x%x, rdev_min = 0x%x, namesize = %d\\n\",\n\t\th->c_dev_min, h->c_rdev_maj, h->c_rdev_min, h->c_namesize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1398,"col":12,"offset":39604},"end":{"line":1398,"col":63,"offset":39655},"extra":{"metavars":{"$FUN":{"start":{"line":1398,"col":12,"offset":39604},"end":{"line":1398,"col":24,"offset":39616},"abstract_content":"query_rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd0b4d92c0d0c7ece96fd3a7c809ec29a3dc4eec3bd699d35ed41734a7c02e8c5d9ed504119c09f7b2a58035a6317b893a28af769d7f434cb64d20f469a6ef8d_0","lines":"\t      if (query_rename(&file_hdr, tty_in, tty_out, rename_in) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1418,"col":3,"offset":40020},"end":{"line":1418,"col":28,"offset":40045},"extra":{"metavars":{"$FUN":{"start":{"line":1418,"col":3,"offset":40020},"end":{"line":1418,"col":25,"offset":40042},"abstract_content":"apply_delayed_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d02431ef806377caade40c41f4497d16552a734259a10f99e4b4df6a1f37167938beed473e423a17d9b1a5643ca4b24b6dfcc6cfc26fdb0a861b55922c5aa7fe_0","lines":"  apply_delayed_set_stat ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1432,"col":7,"offset":40284},"end":{"line":1432,"col":65,"offset":40342},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1432,"col":7,"offset":40284},"end":{"line":1432,"col":13,"offset":40290},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":1432,"col":47,"offset":40324},"end":{"line":1432,"col":48,"offset":40325},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f5f20d406eb71d270db68ab6006b710eaede471f4e83f91986cd48c60e260a61b6652d53856c07fe3d5521532140276304bcb64ad61f0ee2f2f32a40edcca26c_0","lines":"      blocks = (input_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1433,"col":7,"offset":40350},"end":{"line":1436,"col":32,"offset":40476},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"a43b14776c81c29d80d182e6fc4e8840caa6c36c00df3e03fbc4accc0c175c729dec58d7fa7113e525120db3a3467862a6d23afec70b7164dc0e84842839d0d4_1","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks),\n\t       (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":51,"offset":1503},"extra":{"metavars":{"$FUN":{"start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":24,"offset":1476},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1744253304ed8a634e09b69058a4570808078f48024ce9e96e8822232f15e362a21157073ecd9505a639010ea1497b34de3262dae997e49227654ee5b2310ea3_0","lines":"      bytes_read = read (in_file_des, buf, BUFSIZ);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":51,"offset":1503},"extra":{"metavars":{"$TYPE":{"start":{"line":40,"col":3,"offset":1298},"end":{"line":40,"col":7,"offset":1302},"abstract_content":"char"},"$LEN":{"start":{"line":40,"col":12,"offset":1307},"end":{"line":40,"col":18,"offset":1313},"abstract_content":"BUFSIZ"},"$FUN":{"start":{"line":49,"col":20,"offset":1472},"end":{"line":49,"col":24,"offset":1476},"abstract_content":"read"},"$ARG1":{"start":{"line":49,"col":26,"offset":1478},"end":{"line":49,"col":37,"offset":1489},"abstract_content":"in_file_des"},"$BUF":{"start":{"line":49,"col":39,"offset":1491},"end":{"line":49,"col":42,"offset":1494},"abstract_content":"buf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c2cd2183e346ff50b4d16b59f2c05a219b06be642c65bcb6c8390491c1f32fd4094cd1dd5580d4e5d29b0cd07b7cf939133ec5137f5598f6250ea9fe5b2b0ed0_0","lines":"      bytes_read = read (in_file_des, buf, BUFSIZ);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":84,"col":5,"offset":2435},"end":{"line":84,"col":33,"offset":2463},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":84,"col":5,"offset":2435},"end":{"line":84,"col":8,"offset":2438},"abstract_content":"pad"},"$SIGNED":{"start":{"line":84,"col":12,"offset":2442},"end":{"line":84,"col":13,"offset":2443},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ecea7535f2b212567655b85e4faa2d4b867ab263e6ffb8f6506f7929b580ea85b803a25b315887b06c671bd8c9faec4f716e3666941f74f48a77bc652f107f72_0","lines":"    pad = (4 - (offset % 4)) % 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":86,"col":5,"offset":2538},"end":{"line":86,"col":39,"offset":2572},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":5,"offset":2538},"end":{"line":86,"col":8,"offset":2541},"abstract_content":"pad"},"$SIGNED":{"start":{"line":86,"col":12,"offset":2545},"end":{"line":86,"col":15,"offset":2548},"abstract_content":"512"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d745ac4ba82a073a54fa5e748d68d0f7ac4d1f6883bc48932783f6e18e5a9a09f00c8e98b585522c9dc1fbb340fe5c03af4a20f41da728e6095e01e3b01d6f03_0","lines":"    pad = (512 - (offset % 512)) % 512;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":88,"col":5,"offset":2657},"end":{"line":88,"col":33,"offset":2685},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":88,"col":5,"offset":2657},"end":{"line":88,"col":8,"offset":2660},"abstract_content":"pad"},"$SIGNED":{"start":{"line":88,"col":12,"offset":2664},"end":{"line":88,"col":13,"offset":2665},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1f8521519a6ed6ddf7122d87f07fadadb27d8dfee958febc16ac766e4f639ca2dc83986436b06ed36351c51b7e503ae4b33203d8caafb3386ca2c31455d9b135_0","lines":"    pad = (2 - (offset % 2)) % 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":90,"col":5,"offset":2698},"end":{"line":90,"col":12,"offset":2705},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":90,"col":5,"offset":2698},"end":{"line":90,"col":8,"offset":2701},"abstract_content":"pad"},"$SIGNED":{"start":{"line":90,"col":11,"offset":2704},"end":{"line":90,"col":12,"offset":2705},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"61b2ce4b3f98a0b26c606ad289a23405f0ff660ebf0f639ebae0bcf367ea09ae9fff8cec0c0abc43f819846c324f753b422001e4c78f14d014da2a4378425a17_0","lines":"    pad = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":116,"col":10,"offset":3510},"end":{"line":116,"col":19,"offset":3519},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":116,"col":10,"offset":3510},"end":{"line":116,"col":15,"offset":3515},"abstract_content":"count"},"$SIGNED":{"start":{"line":116,"col":18,"offset":3518},"end":{"line":116,"col":19,"offset":3519},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cf5b9b714cd973b6f0c43abe1f7421a62d45be530c57e8a36455abef6b942d8eb0484eeeaa6f038d3fea97d6db2a266ffbe5708252db99bdcd16cfa0532d3b63_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":206,"col":17,"offset":5597},"end":{"line":207,"col":32,"offset":5650},"extra":{"metavars":{"$FUN":{"start":{"line":206,"col":17,"offset":5597},"end":{"line":206,"col":21,"offset":5601},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"062ebb63a59405844754f0b42474e98066839462e9c6c51b0434da1a2e49afce97d102c32530dcfeffb8462e19053dda73541339c4463959b989a663d5841af4_0","lines":"  in_file_des = open (header->c_name,\n\t\t      O_RDONLY | O_BINARY, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":304,"col":3,"offset":8367},"end":{"line":305,"col":63,"offset":8467},"extra":{"metavars":{"$EXPR1":{"start":{"line":304,"col":7,"offset":8371},"end":{"line":304,"col":18,"offset":8382},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":304,"col":21,"offset":8385},"end":{"line":304,"col":39,"offset":8403},"abstract_content":"CPIO_WARN_TRUNCATE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1c2c0c5581c1b8449c945934eab0c53ac916061ad1bb4f20441546a9020f73eb67a24d1d3dc611eb078848c71213a09ac9900347efc037724574da9243d4fa5e_0","lines":"  if (warn_option & CPIO_WARN_TRUNCATE)\n    error (0, 0, _(\"%s: truncating %s\"), filename, fieldname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":338,"col":7,"offset":9174},"end":{"line":338,"col":42,"offset":9209},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"94d88d86a056f2fcf6463449476395a87c3e84c2aea6c2485af6dc815d085fb4825bae4ba543d909f511eeafb03a27e97dc77ed747f339730141c3c8902d3d66_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":338,"col":7,"offset":9174},"end":{"line":338,"col":42,"offset":9209},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":7,"offset":9174},"end":{"line":338,"col":13,"offset":9180},"abstract_content":"stpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a6ccb3c0af309b34eddb6d2d2b3a56b47df353d08cc50c64512472bda4ce5bad55ced5ff0ea6a9400a35333a79c7494ede8520656da8c26fe3701af767c3e4cd_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":338,"col":7,"offset":9174},"end":{"line":338,"col":42,"offset":9209},"extra":{"metavars":{"$TYPE":{"start":{"line":335,"col":3,"offset":9132},"end":{"line":335,"col":7,"offset":9136},"abstract_content":"char"},"$LEN":{"start":{"line":335,"col":21,"offset":9150},"end":{"line":335,"col":24,"offset":9153},"abstract_content":"110"},"$FUN":{"start":{"line":338,"col":7,"offset":9174},"end":{"line":338,"col":13,"offset":9180},"abstract_content":"stpcpy"},"$BUF":{"start":{"line":338,"col":15,"offset":9182},"end":{"line":338,"col":27,"offset":9194},"abstract_content":"ascii_header"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"99022b5232319c5f56b1634fc3f820dcbeda5d79b166ad787ba592e22efecda8ae19d16cb718cc6ee717e5687ee7b7b511244a9c9a43dec07685e1b7f286905e_0","lines":"  p = stpcpy (ascii_header, magic_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":472,"col":3,"offset":13341},"end":{"line":473,"col":70,"offset":13482},"extra":{"metavars":{"$EXPR1":{"start":{"line":472,"col":8,"offset":13346},"end":{"line":472,"col":19,"offset":13357},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":472,"col":22,"offset":13360},"end":{"line":472,"col":40,"offset":13378},"abstract_content":"CPIO_WARN_TRUNCATE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1c2c0c5581c1b8449c945934eab0c53ac916061ad1bb4f20441546a9020f73eb67a24d1d3dc611eb078848c71213a09ac9900347efc037724574da9243d4fa5e_1","lines":"  if ((warn_option & CPIO_WARN_TRUNCATE) && (file_hdr->c_ino >> 16) != 0)\n    error (0, 0, _(\"%s: truncating inode number\"), file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":588,"col":13,"offset":16985},"end":{"line":588,"col":49,"offset":17021},"extra":{"metavars":{"$FUN":{"start":{"line":588,"col":13,"offset":16985},"end":{"line":588,"col":21,"offset":16993},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb9e7d64a0b7b741dfe2f02c46c3ed1ca869f430f396643a0a0ebfc88e5426072e9018910e2ceeb656fa0754cddce8d3f07616b48a2df8294b969df26e449e1b_0","lines":"  char *p = xrealloc (*pvar, strlen (value) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":589,"col":3,"offset":17025},"end":{"line":589,"col":20,"offset":17042},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"94d88d86a056f2fcf6463449476395a87c3e84c2aea6c2485af6dc815d085fb4825bae4ba543d909f511eeafb03a27e97dc77ed747f339730141c3c8902d3d66_1","lines":"  strcpy (p, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":589,"col":3,"offset":17025},"end":{"line":589,"col":20,"offset":17042},"extra":{"metavars":{"$FUN":{"start":{"line":589,"col":3,"offset":17025},"end":{"line":589,"col":9,"offset":17031},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4a915fbcd2c0e6f74a3b3346dc4f2687c1da0e3183d54e0506fba77bee3ca1e27ef2796bc9fbd9f6cf230801fd5015b789f4f510e965223fd9fa78e3e0d6fffd_0","lines":"  strcpy (p, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":621,"col":11,"offset":17955},"end":{"line":621,"col":43,"offset":17987},"extra":{"metavars":{"$FUN":{"start":{"line":621,"col":11,"offset":17955},"end":{"line":621,"col":16,"offset":17960},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"98829b9567f5d70c0f02302aa43fa6eee7f83fc35e0ef8a0fff82de144a7499a36cd8af868eab86b410002894cde1e56c2f473ce997c2e3b4339ef67647b5df8_0","lines":"      if (fstat (out_file_des, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":685,"col":5,"offset":19704},"end":{"line":693,"col":8,"offset":19960},"extra":{"metavars":{"$EXPR1":{"start":{"line":685,"col":10,"offset":19709},"end":{"line":685,"col":19,"offset":19718},"abstract_content":"otherfile","propagated_value":{"svalue_start":{"line":685,"col":22,"offset":19721},"svalue_end":{"line":687,"col":30,"offset":19813},"svalue_abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"$EXPR2":{"start":{"line":685,"col":22,"offset":19721},"end":{"line":687,"col":30,"offset":19813},"abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3a95a662a391268f5f40202da004a75220495aa6d64111ada2af6a3ea42d8382a5eeb50290c8c6b799fead80323d5bae454c4d0546de4cdb449bc26f7c3c1bcc_0","lines":"\t\t  if ((otherfile = find_inode_file (file_hdr.c_ino,\n\t\t\t\t\t\t    file_hdr.c_dev_maj,\n\t\t\t\t\t\t    file_hdr.c_dev_min)))\n\t\t    {\n\t\t      file_hdr.c_tar_linkname = otherfile;\n\t\t      if (write_out_header (&file_hdr, out_file_des))\n\t\t\tcontinue;\n\t\t      break;\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":698,"col":9,"offset":20088},"end":{"line":698,"col":30,"offset":20109},"extra":{"metavars":{"$FUN":{"start":{"line":698,"col":9,"offset":20088},"end":{"line":698,"col":18,"offset":20097},"abstract_content":"last_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b4c665460ce8aa6f293c9c51becb4b4281ac3b23de087960881dadd04a9d49caab63fc1b84db8756df1a7b53b98cfe602c9cdbf399e779e1053d3a7bb943b177_0","lines":"\t\t  if (last_link (&file_hdr) )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":708,"col":22,"offset":20286},"end":{"line":709,"col":30,"offset":20337},"extra":{"metavars":{"$FUN":{"start":{"line":708,"col":22,"offset":20286},"end":{"line":708,"col":26,"offset":20290},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"062ebb63a59405844754f0b42474e98066839462e9c6c51b0434da1a2e49afce97d102c32530dcfeffb8462e19053dda73541339c4463959b989a663d5841af4_1","lines":"\t      in_file_des = open (orig_file_name,\n\t\t\t\t  O_RDONLY | O_BINARY, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":767,"col":5,"offset":21922},"end":{"line":779,"col":8,"offset":22388},"extra":{"metavars":{"$EXPR1":{"start":{"line":767,"col":10,"offset":21927},"end":{"line":767,"col":19,"offset":21936},"abstract_content":"otherfile","propagated_value":{"svalue_start":{"line":767,"col":22,"offset":21939},"svalue_end":{"line":769,"col":30,"offset":22031},"svalue_abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"$EXPR2":{"start":{"line":767,"col":22,"offset":21939},"end":{"line":769,"col":30,"offset":22031},"abstract_content":"find_inode_file(file_hdr.c_ino file_hdr.c_dev_maj file_hdr.c_dev_min)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3a95a662a391268f5f40202da004a75220495aa6d64111ada2af6a3ea42d8382a5eeb50290c8c6b799fead80323d5bae454c4d0546de4cdb449bc26f7c3c1bcc_1","lines":"\t\t  if ((otherfile = find_inode_file (file_hdr.c_ino,\n\t\t\t\t\t\t    file_hdr.c_dev_maj,\n\t\t\t\t\t\t    file_hdr.c_dev_min)))\n\t\t    {\n\t\t      /* This file is linked to another file already in the \n\t\t         archive, so write it out as a hard link. */\n\t\t      file_hdr.c_mode = (file_stat.st_mode & 07777);\n\t\t      file_hdr.c_mode |= CP_IFREG;\n\t\t      file_hdr.c_tar_linkname = otherfile;\n\t\t      if (write_out_header (&file_hdr, out_file_des))\n\t\t\tcontinue;\n\t\t      break;\n\t\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":791,"col":30,"offset":22678},"end":{"line":791,"col":61,"offset":22709},"extra":{"metavars":{"$FUN":{"start":{"line":791,"col":30,"offset":22678},"end":{"line":791,"col":37,"offset":22685},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b67aeb17dd9f86f930bed4d1e79266759317a5f282c953bb74214b0c9c1a9091d727a5dc921d4179ffcf96eb30883489622a8381eca45ca41e752602e49e47d0_0","lines":"\t\tchar *link_name = (char *) xmalloc (file_stat.st_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":794,"col":15,"offset":22743},"end":{"line":795,"col":36,"offset":22815},"extra":{"metavars":{"$FUN":{"start":{"line":794,"col":15,"offset":22743},"end":{"line":794,"col":23,"offset":22751},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d69d0a4928a990d76141e0228ab7246c5762c485cd887dfff0fbaeb8b9383a84edcec92d0149dcd366e609a1d1509c2aacc0fd7b31475ad1a49061956b4f4acb_0","lines":"\t\tlink_size = readlink (orig_file_name, link_name,\n\t\t\t              file_stat.st_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":799,"col":7,"offset":22888},"end":{"line":799,"col":24,"offset":22905},"extra":{"metavars":{"$PTR":{"start":{"line":799,"col":13,"offset":22894},"end":{"line":799,"col":22,"offset":22903},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":791,"col":21,"offset":22669},"svalue_end":{"line":791,"col":61,"offset":22709},"svalue_abstract_content":"(char*xmalloc(file_stat.st_size+1)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4cdcccea90253c3f6234df452f4ed5126d9ac41b1c8a21cf0e7f12751ca45aeb5c5ff0eb9ef27fa4b42ea63ca1599786472276a80948f7082d14bddb45f98ee1_0","lines":"\t\t    free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":829,"col":3,"offset":23680},"end":{"line":829,"col":20,"offset":23697},"extra":{"metavars":{"$PTR":{"start":{"line":829,"col":9,"offset":23686},"end":{"line":829,"col":18,"offset":23695},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4cdcccea90253c3f6234df452f4ed5126d9ac41b1c8a21cf0e7f12751ca45aeb5c5ff0eb9ef27fa4b42ea63ca1599786472276a80948f7082d14bddb45f98ee1_1","lines":"\t\tfree (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":845,"col":3,"offset":23942},"end":{"line":845,"col":25,"offset":23964},"extra":{"metavars":{"$PTR":{"start":{"line":845,"col":9,"offset":23948},"end":{"line":845,"col":23,"offset":23962},"abstract_content":"orig_file_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e3a90a021e53164bee8f8e3bf823417c8dc647f4d200d4ed79f3423988f776c43ab27deaa0e9368ed818ff4dd1565f6d99c713028d547d2a123afee07dc4061e_0","lines":"  free (orig_file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":875,"col":14,"offset":24831},"end":{"line":875,"col":73,"offset":24890},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":875,"col":14,"offset":24831},"end":{"line":875,"col":20,"offset":24837},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":875,"col":55,"offset":24872},"end":{"line":875,"col":56,"offset":24873},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8014409e6561111ec730c46274041764413b475c6a273ac7c12330e08dc1e87fc0c66fef7e3c1554e7d2dce90fc26905be78bb51a8546fa6d0cd59fd6bac1263_0","lines":"      size_t blocks = (output_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":876,"col":7,"offset":24898},"end":{"line":878,"col":53,"offset":25016},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"f1924257a62326a8cb3f200bcc05e8736395f6f5c00a687913b9e2a8cbc0b7b7b16753bdd316c3b558000cb4683a9feb6bba1add8f057d1007d229757b06a3ab_0","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks), (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":73,"col":19,"offset":2411},"end":{"line":73,"col":29,"offset":2421},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":8,"offset":7},"abstract_content":"cwd"},"$FUN":{"start":{"line":73,"col":19,"offset":2411},"end":{"line":73,"col":26,"offset":2418},"abstract_content":"xgetcwd"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bdce98705faeefc447b5cad9e022a17f6366612b3b080b9559c2a2ce17e112957110006ca3f2e6663991db8dec054f5a195af45799d9811fe4d19fdc454e707b_0","lines":"      char *pwd = xgetcwd ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":77,"col":7,"offset":2516},"end":{"line":77,"col":42,"offset":2551},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"888d54f9221cd09f29ef9cde9b8634b486a371ba4c10169f4de33a280ece0b2b8af856767be38171e8e357ba787b7b8402b637f11d3d62a3ff06e44676afefd4_0","lines":"      strcpy (output_name.ds_string, pwd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":77,"col":7,"offset":2516},"end":{"line":77,"col":42,"offset":2551},"extra":{"metavars":{"$FUN":{"start":{"line":77,"col":7,"offset":2516},"end":{"line":77,"col":13,"offset":2522},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"825d666763b17cfc416a102b005e85af2d4f12d888bf1920c95391a7c35713fde635be99c07847c73bc7ed3f68314a7639c93006f29a277bcc94cdb09c1a8f45_0","lines":"      strcpy (output_name.ds_string, pwd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":78,"col":7,"offset":2559},"end":{"line":78,"col":42,"offset":2594},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":7,"offset":2559},"end":{"line":78,"col":13,"offset":2565},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1d7e35f0116a2686523064695c73e273a668e0515fa0d29df1e45adc8dfb663b1ed4252be276eaa11f653eb41c25601521c1c71b389f80a31082bf1c0544144_0","lines":"      strcat (output_name.ds_string, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":79,"col":7,"offset":2602},"end":{"line":79,"col":53,"offset":2648},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"888d54f9221cd09f29ef9cde9b8634b486a371ba4c10169f4de33a280ece0b2b8af856767be38171e8e357ba787b7b8402b637f11d3d62a3ff06e44676afefd4_1","lines":"      strcat (output_name.ds_string, directory_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":79,"col":7,"offset":2602},"end":{"line":79,"col":53,"offset":2648},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":7,"offset":2602},"end":{"line":79,"col":13,"offset":2608},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a1d7e35f0116a2686523064695c73e273a668e0515fa0d29df1e45adc8dfb663b1ed4252be276eaa11f653eb41c25601521c1c71b389f80a31082bf1c0544144_1","lines":"      strcat (output_name.ds_string, directory_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":84,"col":7,"offset":2722},"end":{"line":84,"col":53,"offset":2768},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"888d54f9221cd09f29ef9cde9b8634b486a371ba4c10169f4de33a280ece0b2b8af856767be38171e8e357ba787b7b8402b637f11d3d62a3ff06e44676afefd4_2","lines":"      strcpy (output_name.ds_string, directory_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":84,"col":7,"offset":2722},"end":{"line":84,"col":53,"offset":2768},"extra":{"metavars":{"$FUN":{"start":{"line":84,"col":7,"offset":2722},"end":{"line":84,"col":13,"offset":2728},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"825d666763b17cfc416a102b005e85af2d4f12d888bf1920c95391a7c35713fde635be99c07847c73bc7ed3f68314a7639c93006f29a277bcc94cdb09c1a8f45_1","lines":"      strcpy (output_name.ds_string, directory_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":117,"col":7,"offset":3584},"end":{"line":118,"col":3,"offset":3645},"extra":{"metavars":{"$EXPR1":{"start":{"line":117,"col":12,"offset":3589},"end":{"line":117,"col":40,"offset":3617},"abstract_content":"slash=input_name.ds_string"},"$EXPR2":{"start":{"line":117,"col":42,"offset":3619},"end":{"line":117,"col":55,"offset":3632},"abstract_content":"*slash=='/'"},"$EXPR3":{"start":{"line":117,"col":57,"offset":3634},"end":{"line":117,"col":64,"offset":3641},"abstract_content":"++slash"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c02d29ecaa2d972cff6475a37bccfa1a12fd1e2ca392b1dff884a318af2c809b0fbb6b4d1bade9616642ba8db172292aa4d8125cce11b2e28d06a6a659ba37dd_0","lines":"      for (slash = input_name.ds_string; *slash == '/'; ++slash)\n\t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":120,"col":7,"offset":3718},"end":{"line":120,"col":62,"offset":3773},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"888d54f9221cd09f29ef9cde9b8634b486a371ba4c10169f4de33a280ece0b2b8af856767be38171e8e357ba787b7b8402b637f11d3d62a3ff06e44676afefd4_3","lines":"      strcpy (output_name.ds_string + dirname_len + 1, slash);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":120,"col":7,"offset":3718},"end":{"line":120,"col":62,"offset":3773},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":7,"offset":3718},"end":{"line":120,"col":13,"offset":3724},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"825d666763b17cfc416a102b005e85af2d4f12d888bf1920c95391a7c35713fde635be99c07847c73bc7ed3f68314a7639c93006f29a277bcc94cdb09c1a8f45_2","lines":"      strcpy (output_name.ds_string + dirname_len + 1, slash);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":123,"col":11,"offset":3814},"end":{"line":123,"col":56,"offset":3859},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3dddd8e993d261513dde317c92c11f2365bf98976bbd41a491e9998e75ee250082d2a8a1a698bf6df4bed658481d85dac410df28d7e55c5805d0b4b7093ab491_0","lines":"      if (lstat (output_name.ds_string, &out_file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":123,"col":11,"offset":3814},"end":{"line":123,"col":56,"offset":3859},"extra":{"metavars":{"$FUN":{"start":{"line":123,"col":11,"offset":3814},"end":{"line":123,"col":16,"offset":3819},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cc9b75e886c2e6fc4ca54ccb75e8518aedd1c41715d56eb21e21e3a1df4594a72b27c7f3ba27d54c89e018b11ff803f57eb1f51be13f0902d6eeb156d41b2bfa_0","lines":"      if (lstat (output_name.ds_string, &out_file_stat) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":141,"col":6,"offset":4441},"end":{"line":141,"col":36,"offset":4471},"extra":{"metavars":{"$FUN":{"start":{"line":141,"col":6,"offset":4441},"end":{"line":141,"col":12,"offset":4447},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9acdd09ece4b11c796c759b454be0290056def69e170ac2bbfd9558fd8f0cef25e2abecb81b31625ec0ce09719c3d91929b881b7a83c24b12c708eba915d44d9_0","lines":"\t\t\t: unlink (output_name.ds_string))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":169,"col":22,"offset":5408},"end":{"line":170,"col":30,"offset":5465},"extra":{"metavars":{"$FUN":{"start":{"line":169,"col":22,"offset":5408},"end":{"line":169,"col":26,"offset":5412},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b9ee36c2c24866485937195cc8adc15449b4dc534ce800b762a1ce76226d2f1ceebd5efe0cded27f2913238c42352819505c9e5fe7f8f8afdcc02d1aef62e03_0","lines":"\t      in_file_des = open (input_name.ds_string,\n\t\t\t\t  O_RDONLY | O_BINARY, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":176,"col":23,"offset":5578},"end":{"line":177,"col":44,"offset":5650},"extra":{"metavars":{"$FUN":{"start":{"line":176,"col":23,"offset":5578},"end":{"line":176,"col":27,"offset":5582},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b9ee36c2c24866485937195cc8adc15449b4dc534ce800b762a1ce76226d2f1ceebd5efe0cded27f2913238c42352819505c9e5fe7f8f8afdcc02d1aef62e03_1","lines":"\t      out_file_des = open (output_name.ds_string,\n\t\t\t\t   O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":181,"col":20,"offset":5775},"end":{"line":182,"col":48,"offset":5851},"extra":{"metavars":{"$FUN":{"start":{"line":181,"col":20,"offset":5775},"end":{"line":181,"col":24,"offset":5779},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b9ee36c2c24866485937195cc8adc15449b4dc534ce800b762a1ce76226d2f1ceebd5efe0cded27f2913238c42352819505c9e5fe7f8f8afdcc02d1aef62e03_2","lines":"\t\t  out_file_des = open (output_name.ds_string,\n\t\t\t\t       O_CREAT | O_WRONLY | O_BINARY, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":273,"col":25,"offset":8499},"end":{"line":273,"col":74,"offset":8548},"extra":{"metavars":{"$FUN":{"start":{"line":273,"col":25,"offset":8499},"end":{"line":273,"col":32,"offset":8506},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1eb137d96e1625694912fbb9e21fa8ac213dd93f3f96026990b8b6881d58c437bb5e1ff7ef684ede21ba1e8fb201a19cf4b0d0118bb25a544ca08b09a1697853_0","lines":"\t  link_name = (char *) xmalloc ((unsigned int) in_file_stat.st_size + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":275,"col":16,"offset":8566},"end":{"line":276,"col":33,"offset":8641},"extra":{"metavars":{"$FUN":{"start":{"line":275,"col":16,"offset":8566},"end":{"line":275,"col":24,"offset":8574},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"93462ea0a09744add5d174e1c6ee9d292902debaf918f2215082ca8979bd26476ce4bdd9fd4754b38690895c08c38f0cead51e2788c9bef1225485b20268496d_0","lines":"\t  link_size = readlink (input_name.ds_string, link_name,\n\t\t\t        in_file_stat.st_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":280,"col":8,"offset":8725},"end":{"line":280,"col":25,"offset":8742},"extra":{"metavars":{"$PTR":{"start":{"line":280,"col":14,"offset":8731},"end":{"line":280,"col":23,"offset":8740},"abstract_content":"link_name","propagated_value":{"svalue_start":{"line":273,"col":16,"offset":8490},"svalue_end":{"line":273,"col":74,"offset":8548},"svalue_abstract_content":"(char*xmalloc((unsigned int in_file_stat.st_size+1)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"162b2010fd3ff13e96d8d699c304d43633ba2c123027acc09faac0f942625c3baaa7377dfca48046cb501b64bf5e73f13728cbf41a323132fbada0cf0c61c90e_0","lines":"\t      free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":296,"col":8,"offset":9175},"end":{"line":296,"col":25,"offset":9192},"extra":{"metavars":{"$PTR":{"start":{"line":296,"col":14,"offset":9181},"end":{"line":296,"col":23,"offset":9190},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"162b2010fd3ff13e96d8d699c304d43633ba2c123027acc09faac0f942625c3baaa7377dfca48046cb501b64bf5e73f13728cbf41a323132fbada0cf0c61c90e_1","lines":"\t      free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":305,"col":13,"offset":9465},"end":{"line":305,"col":53,"offset":9505},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":305,"col":13,"offset":9465},"end":{"line":305,"col":19,"offset":9471},"abstract_content":"lchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cef2f69792969f6d8b9390883ad9f348e3fc99466a1ef0d11324e954c685d48bd87aa4cfe2d46c8fd61ac41da05d26cf110d8d1e54fdc55c5b601213a30d9ce3_0","lines":"\t      if ((lchown (output_name.ds_string, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":309,"col":4,"offset":9615},"end":{"line":309,"col":21,"offset":9632},"extra":{"metavars":{"$PTR":{"start":{"line":309,"col":10,"offset":9621},"end":{"line":309,"col":19,"offset":9630},"abstract_content":"link_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"162b2010fd3ff13e96d8d699c304d43633ba2c123027acc09faac0f942625c3baaa7377dfca48046cb501b64bf5e73f13728cbf41a323132fbada0cf0c61c90e_2","lines":"\t  free (link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":326,"col":3,"offset":9896},"end":{"line":326,"col":28,"offset":9921},"extra":{"metavars":{"$FUN":{"start":{"line":326,"col":3,"offset":9896},"end":{"line":326,"col":25,"offset":9918},"abstract_content":"apply_delayed_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e425a3de3d2e5a49384a577459dc88b6ca48254c09d936f3a6e612296fd274073dd0c7cf16e1a397e0711b8b383116ecf162740acac77e4fa6734c2cc75ed170_0","lines":"  apply_delayed_set_stat ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":330,"col":14,"offset":9964},"end":{"line":330,"col":73,"offset":10023},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":330,"col":14,"offset":9964},"end":{"line":330,"col":20,"offset":9970},"abstract_content":"blocks"},"$SIGNED":{"start":{"line":330,"col":55,"offset":10005},"end":{"line":330,"col":56,"offset":10006},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"613d44e04b1b938e91f7b31ea816b4103faee485f732bb4dc52b162e9ff8a76ca5ece10c0c29789f8c7c7d1a9406cf92e07ea302ed43b2398dcc81d615304e88_0","lines":"      size_t blocks = (output_bytes + io_block_size - 1) / io_block_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":331,"col":7,"offset":10031},"end":{"line":334,"col":32,"offset":10157},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"d006fae99bf3d080f8fca3486424bea520c9ba6d4322bbc81e5a7feb66a88080d8824d9f428d41b43b50ac803446f0840ed9d845fcd9744a8a3e0596b592964f_0","lines":"      fprintf (stderr,\n\t       ngettext (\"%lu block\\n\", \"%lu blocks\\n\",\n\t\t\t (unsigned long) blocks),\n\t       (unsigned long) blocks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":377,"col":13,"offset":11637},"end":{"line":377,"col":42,"offset":11666},"extra":{"metavars":{"$FUN":{"start":{"line":377,"col":13,"offset":11637},"end":{"line":377,"col":17,"offset":11641},"abstract_content":"link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0eb7619fba2633251f670c4278752df98b9451026934f620d8eb6f7d56a6b5952b610191c26ecb1b2b09c9d85478daff0db8a59e96c98b812d74f236eb95fd96_0","lines":"  int res = link (link_target, link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":381,"col":13,"offset":11762},"end":{"line":381,"col":42,"offset":11791},"extra":{"metavars":{"$FUN":{"start":{"line":381,"col":13,"offset":11762},"end":{"line":381,"col":17,"offset":11766},"abstract_content":"link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0eb7619fba2633251f670c4278752df98b9451026934f620d8eb6f7d56a6b5952b610191c26ecb1b2b09c9d85478daff0db8a59e96c98b812d74f236eb95fd96_1","lines":"      res = link (link_target, link_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":32,"col":28,"offset":1115},"end":{"line":32,"col":64,"offset":1151},"extra":{"metavars":{"$FUN":{"start":{"line":32,"col":28,"offset":1115},"end":{"line":32,"col":35,"offset":1122},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b5ac1774860d9b9e9a5ece842f3e928ba78aa14517637dad6b94f71c5be11ab1304b3e04c1887eaa3a426eaee1290a79f93d7cd5dd61e77e0ac7922f2e24de0e_0","lines":"  d = (struct deferment *) xmalloc (sizeof (struct deferment) );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":34,"col":31,"offset":1208},"end":{"line":34,"col":70,"offset":1247},"extra":{"metavars":{"$FUN":{"start":{"line":34,"col":31,"offset":1208},"end":{"line":34,"col":38,"offset":1215},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b5ac1774860d9b9e9a5ece842f3e928ba78aa14517637dad6b94f71c5be11ab1304b3e04c1887eaa3a426eaee1290a79f93d7cd5dd61e77e0ac7922f2e24de0e_1","lines":"  d->header.c_name = (char *) xmalloc (strlen (file_hdr->c_name) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":35,"col":3,"offset":1251},"end":{"line":35,"col":46,"offset":1294},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"7437ed720381694cc91699c31011ac0a1850dc1f9d491e8fc4ac8610a4dc7ea0515a14873e18dd5ea42000172c000ce6cd08a71ff03f8dd89283cbd535cc71ad_0","lines":"  strcpy (d->header.c_name, file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":35,"col":3,"offset":1251},"end":{"line":35,"col":46,"offset":1294},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":3,"offset":1251},"end":{"line":35,"col":9,"offset":1257},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e09c7a7ab00577e0c28aeb226fa54180d61c703ce7772dd350881526e80e0244655070d5f71b0497ad3ad045a7971e405cb790f1da9572dc896d3a40de083a80_0","lines":"  strcpy (d->header.c_name, file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":42,"col":3,"offset":1357},"end":{"line":42,"col":27,"offset":1381},"extra":{"metavars":{"$PTR":{"start":{"line":42,"col":9,"offset":1363},"end":{"line":42,"col":25,"offset":1379},"abstract_content":"d->->header.c_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"934f34efd728c2adcf3e7d6610782c83f1396bc303f5d410a1351d212a23991f279acfa8b7e46b3c8899a789360af7996d0d87b4024bd884eb130d0735ba8936_0","lines":"  free (d->header.c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","start":{"line":43,"col":3,"offset":1384},"end":{"line":43,"col":12,"offset":1393},"extra":{"metavars":{"$PTR":{"start":{"line":43,"col":9,"offset":1390},"end":{"line":43,"col":10,"offset":1391},"abstract_content":"d"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"faa35053f711fab6c6c4da2d06c82d6eaf71cb471b15154bc263dcc19259e897e0b29ce6b60968b097c33e74427dfed2cb1f78cfb7b52664a28dcdd9c06f3d5d_0","lines":"  free (d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.c","start":{"line":39,"col":32,"offset":1275},"end":{"line":39,"col":46,"offset":1289},"extra":{"metavars":{"$FUN":{"start":{"line":39,"col":32,"offset":1275},"end":{"line":39,"col":39,"offset":1282},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"95ce09931482ae958f322937d74fb661a3744b739d629180d787dbbf6ec60f281b944527fe417d61a8d7ab45a786616098c2c5a7e09853f1873717ed994bcbc2_0","lines":"  string->ds_string = (char *) xmalloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.c","start":{"line":50,"col":36,"offset":1528},"end":{"line":50,"col":79,"offset":1571},"extra":{"metavars":{"$FUN":{"start":{"line":50,"col":36,"offset":1528},"end":{"line":50,"col":44,"offset":1536},"abstract_content":"xrealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c23e852c89ece1c4d9239e7c1c6d52cc29ac81d8c57a05652938f3609ba1d7d26f31aaea6ed66740c4764eeee97ca36801f3402cbd14e0669385ddbc5ce9fcc_0","lines":"      string->ds_string = (char *) xrealloc ((char *) string->ds_string, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.c","start":{"line":73,"col":13,"offset":2185},"end":{"line":73,"col":21,"offset":2193},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":73,"col":13,"offset":2185},"end":{"line":73,"col":17,"offset":2189},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8da77c74caa934514182e38d6c616463455ae47e3ee40f58bd56b48d78bf3f5d6f00a44b7295f7816f148fa331f63c6a831425199a96dea30ea9cad4d2a686af_0","lines":"  next_ch = getc (f);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.c","start":{"line":82,"col":17,"offset":2401},"end":{"line":82,"col":25,"offset":2409},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":82,"col":17,"offset":2401},"end":{"line":82,"col":21,"offset":2405},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8da77c74caa934514182e38d6c616463455ae47e3ee40f58bd56b48d78bf3f5d6f00a44b7295f7816f148fa331f63c6a831425199a96dea30ea9cad4d2a686af_1","lines":"      next_ch = getc (f);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/filemode.c","start":{"line":159,"col":3,"offset":3717},"end":{"line":166,"col":6,"offset":3866},"extra":{"metavars":{"$EXPR1":{"start":{"line":159,"col":7,"offset":3721},"end":{"line":159,"col":11,"offset":3725},"abstract_content":"bits"},"$EXPR2":{"start":{"line":159,"col":14,"offset":3728},"end":{"line":159,"col":21,"offset":3735},"abstract_content":"S_ISUID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5c51158eacd673820cb295cf700cdeda448a903aeff6ef7d8374b630e35c4d57397935c3bc3e185a60a5f8284fbe839f5fe45fe36b0ca56b35df6db5357f3b7f_0","lines":"  if (bits & S_ISUID)\n    {\n      if (chars[3] != 'x')\n\t/* Set-uid, but not executable by owner.  */\n\tchars[3] = 'S';\n      else\n\tchars[3] = 's';\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/filemode.c","start":{"line":169,"col":3,"offset":3891},"end":{"line":176,"col":6,"offset":4040},"extra":{"metavars":{"$EXPR1":{"start":{"line":169,"col":7,"offset":3895},"end":{"line":169,"col":11,"offset":3899},"abstract_content":"bits"},"$EXPR2":{"start":{"line":169,"col":14,"offset":3902},"end":{"line":169,"col":21,"offset":3909},"abstract_content":"S_ISGID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"42748c8036e6de722f57b419c4bfb51d1bb7729320303325cd5ca4040d726a641390bc2eb0b0366e2ea5bf8891b2c9245ab27ece6ec9e13c24f56912d3a6a8ca_0","lines":"  if (bits & S_ISGID)\n    {\n      if (chars[6] != 'x')\n\t/* Set-gid, but not executable by group.  */\n\tchars[6] = 'S';\n      else\n\tchars[6] = 's';\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/filemode.c","start":{"line":179,"col":3,"offset":4065},"end":{"line":186,"col":6,"offset":4214},"extra":{"metavars":{"$EXPR1":{"start":{"line":179,"col":7,"offset":4069},"end":{"line":179,"col":11,"offset":4073},"abstract_content":"bits"},"$EXPR2":{"start":{"line":179,"col":14,"offset":4076},"end":{"line":179,"col":21,"offset":4083},"abstract_content":"S_ISVTX"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40dda5638b2a66710d333e4f6a3a56686d8094498c83bd74e55e11db7cc7194132399b1a6cc1155dd052b38d3746925bc0498a475f91419d3023538328bbd7d6_0","lines":"  if (bits & S_ISVTX)\n    {\n      if (chars[9] != 'x')\n\t/* Sticky, but not executable by others.  */\n\tchars[9] = 'T';\n      else\n\tchars[9] = 't';\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/global.c","start":{"line":182,"col":14,"offset":5569},"end":{"line":182,"col":29,"offset":5584},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":182,"col":14,"offset":5569},"end":{"line":182,"col":25,"offset":5580},"abstract_content":"warn_option"},"$SIGNED":{"start":{"line":182,"col":28,"offset":5583},"end":{"line":182,"col":29,"offset":5584},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1d42c9404577c13af1d8dc9ebc86ed8bebfe30a7a1a0a418e562937448d572eccafe2fd7443c383339247d36172b4a3c8b3f276cbd7cc81c22bfb0d3e68b8f9b_0","lines":"unsigned int warn_option = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":70,"col":28,"offset":1751},"end":{"line":70,"col":60,"offset":1783},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":28,"offset":1751},"end":{"line":70,"col":35,"offset":1758},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f20d209b8fd56bc232330fe438284e94d5b1075494544858d22eb3ccf10520f5c9bb6ba069194caa0f2bbff6dbeaf780114b2d9ac3bf54f9c59c53e5509460c4_0","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":74,"col":7,"offset":1835},"end":{"line":74,"col":53,"offset":1881},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":7,"offset":1835},"end":{"line":74,"col":14,"offset":1842},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f269c349092f8ac734f93e34e826f2869edeaa3fcfa3bc0dd51993b094d5651b58f944b70c1f596b9cd5450e02731f104aed9e486f949757174a93afd56fdd3a_0","lines":"      sprintf (usernum_string, \"%u\", (unsigned) uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":109,"col":28,"offset":2842},"end":{"line":109,"col":60,"offset":2874},"extra":{"metavars":{"$FUN":{"start":{"line":109,"col":28,"offset":2842},"end":{"line":109,"col":35,"offset":2849},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f20d209b8fd56bc232330fe438284e94d5b1075494544858d22eb3ccf10520f5c9bb6ba069194caa0f2bbff6dbeaf780114b2d9ac3bf54f9c59c53e5509460c4_1","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":145,"col":28,"offset":3653},"end":{"line":145,"col":60,"offset":3685},"extra":{"metavars":{"$FUN":{"start":{"line":145,"col":28,"offset":3653},"end":{"line":145,"col":35,"offset":3660},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f20d209b8fd56bc232330fe438284e94d5b1075494544858d22eb3ccf10520f5c9bb6ba069194caa0f2bbff6dbeaf780114b2d9ac3bf54f9c59c53e5509460c4_2","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":149,"col":7,"offset":3737},"end":{"line":149,"col":58,"offset":3788},"extra":{"metavars":{"$FUN":{"start":{"line":149,"col":7,"offset":3737},"end":{"line":149,"col":14,"offset":3744},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f269c349092f8ac734f93e34e826f2869edeaa3fcfa3bc0dd51993b094d5651b58f944b70c1f596b9cd5450e02731f104aed9e486f949757174a93afd56fdd3a_1","lines":"      sprintf (groupnum_string, \"%u\", (unsigned int) gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","start":{"line":184,"col":28,"offset":4761},"end":{"line":184,"col":60,"offset":4793},"extra":{"metavars":{"$FUN":{"start":{"line":184,"col":28,"offset":4761},"end":{"line":184,"col":35,"offset":4768},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f20d209b8fd56bc232330fe438284e94d5b1075494544858d22eb3ccf10520f5c9bb6ba069194caa0f2bbff6dbeaf780114b2d9ac3bf54f9c59c53e5509460c4_3","lines":"  tail = (struct userid *) xmalloc (sizeof (struct userid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":322,"col":23,"offset":10749},"end":{"line":322,"col":33,"offset":10759},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"760147ecf985347ad15055569aeea2fa2a2ff37778cd357e0436188bf1c2a13487238a9f441c27bb523c5d85d1dd7bc8fba120b147ea6f0e992d2d04df80fc0e_0","lines":"      io_block_size = atoi (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":339,"col":23,"offset":11277},"end":{"line":339,"col":33,"offset":11287},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"760147ecf985347ad15055569aeea2fa2a2ff37778cd357e0436188bf1c2a13487238a9f441c27bb523c5d85d1dd7bc8fba120b147ea6f0e992d2d04df80fc0e_1","lines":"      io_block_size = atoi (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":495,"col":8,"offset":15334},"end":{"line":495,"col":17,"offset":15343},"extra":{"metavars":{"$PTR":{"start":{"line":495,"col":14,"offset":15340},"end":{"line":495,"col":15,"offset":15341},"abstract_content":"u"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ac186c31840e6a28524446f5e814c90559cc68fe1f001f9524765cd574094d831d9126209c42d9670355ccaae9d58ca0b888a00cdb81c7a42f16760131285554_0","lines":"\t      free (u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":500,"col":8,"offset":15405},"end":{"line":500,"col":17,"offset":15414},"extra":{"metavars":{"$PTR":{"start":{"line":500,"col":14,"offset":15411},"end":{"line":500,"col":15,"offset":15412},"abstract_content":"g"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04aee5805b1fd129c926da068d823ad0d4effe0211d12309ec9a676088f6d0b4b82c784c44f801ccce62b552d92a8df8079eec0e7277dde4eaea41d7fc62018f_0","lines":"\t      free (g);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":587,"col":32,"offset":16943},"end":{"line":587,"col":36,"offset":16947},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"290c66d517949a156643109ab1d1034812d921e9f69c87abdd311e9599285283fe403db342bdb9c1f2a109608a846e7698990061dc2422fb4d3b0faef3454d28_0","lines":"  if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &index, NULL))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":629,"col":24,"offset":18421},"end":{"line":629,"col":28,"offset":18425},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"290c66d517949a156643109ab1d1034812d921e9f69c87abdd311e9599285283fe403db342bdb9c1f2a109608a846e7698990061dc2422fb4d3b0faef3454d28_1","lines":"      save_patterns = &argv[index];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":701,"col":24,"offset":21334},"end":{"line":701,"col":28,"offset":21338},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"290c66d517949a156643109ab1d1034812d921e9f69c87abdd311e9599285283fe403db342bdb9c1f2a109608a846e7698990061dc2422fb4d3b0faef3454d28_2","lines":"      directory_name = argv[index];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":755,"col":27,"offset":22977},"end":{"line":755,"col":48,"offset":22998},"extra":{"metavars":{"$FUN":{"start":{"line":755,"col":27,"offset":22977},"end":{"line":755,"col":34,"offset":22984},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a77e2cbd084b896ffbc3927f361677838af4366de46fc61c72491cd21f165dc5c1e9602b7c5873c66589024d1bf71cc1150648b55df558e08708d706f67ac02c_0","lines":"  input_buffer = (char *) xmalloc (in_buf_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":761,"col":28,"offset":23126},"end":{"line":761,"col":50,"offset":23148},"extra":{"metavars":{"$FUN":{"start":{"line":761,"col":28,"offset":23126},"end":{"line":761,"col":35,"offset":23133},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a77e2cbd084b896ffbc3927f361677838af4366de46fc61c72491cd21f165dc5c1e9602b7c5873c66589024d1bf71cc1150648b55df558e08708d706f67ac02c_1","lines":"  output_buffer = (char *) xmalloc (out_buf_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":770,"col":3,"offset":23258},"end":{"line":770,"col":25,"offset":23280},"extra":{"metavars":{"$FUN":{"start":{"line":770,"col":3,"offset":23258},"end":{"line":770,"col":12,"offset":23267},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f5a4d4dbf23def552dc1bf4009c7167676dccff9325054f4013824de930f87f6d9b7e6c7639bfbf649430ca1b5c0f848f0cb0f059e6b690edc284c39d1482fa_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":774,"col":21,"offset":23366},"end":{"line":774,"col":25,"offset":23370},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"290c66d517949a156643109ab1d1034812d921e9f69c87abdd311e9599285283fe403db342bdb9c1f2a109608a846e7698990061dc2422fb4d3b0faef3454d28_3","lines":"  set_program_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":776,"col":23,"offset":23446},"end":{"line":776,"col":27,"offset":23450},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"290c66d517949a156643109ab1d1034812d921e9f69c87abdd311e9599285283fe403db342bdb9c1f2a109608a846e7698990061dc2422fb4d3b0faef3454d28_4","lines":"  process_args (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":63,"col":3,"offset":2189},"end":{"line":63,"col":36,"offset":2222},"extra":{"metavars":{"$EXPR1":{"start":{"line":63,"col":21,"offset":2207},"end":{"line":63,"col":30,"offset":2216},"abstract_content":"getuid()"},"$EXPR2":{"start":{"line":63,"col":34,"offset":2220},"end":{"line":63,"col":35,"offset":2221},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cd8881c0fe5b8e03dad824a190918b3399c1ff29ac85ab0b553ab4fd7fca83956a82a0cdff47b545a738027ecac269ed40b2af18a9818733b96b158c2d4290a_0","lines":"  int we_are_root = getuid () == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-alloca","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":64,"col":13,"offset":2235},"end":{"line":64,"col":42,"offset":2264},"extra":{"metavars":{},"message":"Use of alloca() is unsafe because it cannot ensure that the pointer  returned points to a valid and usable block of memory. The allocation  made may exceed the bounds of the stack, or even go further into other  objects in memory, and alloca() cannot determine such an error.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/1325","https://nullprogram.com/blog/2019/10/28/","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"139c76a309994ea0675510b94db1ce1446b6f61c215960b906f778e00f326d1362237b292fb794918e2382e528305ee2779783ba8bdf9a7f561e3be1639d33e1_0","lines":"  dirpath = alloca (strlen (argpath) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":64,"col":13,"offset":2235},"end":{"line":64,"col":42,"offset":2264},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"a"},"$FUN":{"start":{"line":64,"col":13,"offset":2235},"end":{"line":64,"col":19,"offset":2241},"abstract_content":"alloca"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c6ab4fd453bef8fde5010f362eb4981ade6d816de534220a5d4cd5b8ffb80f6a4389ace94d81787fc3f3f59528da5da244476effa0a7f6d684257df0c45d9f26_0","lines":"  dirpath = alloca (strlen (argpath) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":66,"col":3,"offset":2269},"end":{"line":66,"col":28,"offset":2294},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"76a9cc2bd37a1329e9f242152a17e95c66bcfca3c2117dddb4c6734ac6fe50312499736adcbcfbd1e6a077d303b95abc927ef4889e2d0babaa9f5c72fc953642_0","lines":"  strcpy (dirpath, argpath);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":66,"col":3,"offset":2269},"end":{"line":66,"col":28,"offset":2294},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":3,"offset":2269},"end":{"line":66,"col":9,"offset":2275},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5774ae0f28b79e067bd7f3fd5df1304bf7c4fbd585e4fb0ad6d1d277e9d96d5ead565907dcdce38e96d61dd675a4d6ab4bb4ed866ba03f46bf2bd848bca2557_0","lines":"  strcpy (dirpath, argpath);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":68,"col":7,"offset":2303},"end":{"line":68,"col":29,"offset":2325},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3c16159c6c4dfe8a4450ea0e1e725aaadf6efd367a99dd46b771e27a5d91f824b0ad9f8ed8a4f320895f6c8842b8017458adf71e3b1e037562dab2cb40717c93_0","lines":"  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":68,"col":7,"offset":2303},"end":{"line":68,"col":29,"offset":2325},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":7,"offset":2303},"end":{"line":68,"col":11,"offset":2307},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca0d1680581eee067a58568325886ab89f88b780807e869efa884701e16480f2b58d942a5797f1740fa7654a78c288a3228d034dd716937bea73654605984f5_0","lines":"  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":79,"col":8,"offset":2585},"end":{"line":79,"col":30,"offset":2607},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3c16159c6c4dfe8a4450ea0e1e725aaadf6efd367a99dd46b771e27a5d91f824b0ad9f8ed8a4f320895f6c8842b8017458adf71e3b1e037562dab2cb40717c93_1","lines":"\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":79,"col":8,"offset":2585},"end":{"line":79,"col":30,"offset":2607},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":8,"offset":2585},"end":{"line":79,"col":12,"offset":2589},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca0d1680581eee067a58568325886ab89f88b780807e869efa884701e16480f2b58d942a5797f1740fa7654a78c288a3228d034dd716937bea73654605984f5_1","lines":"\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":81,"col":12,"offset":2627},"end":{"line":81,"col":57,"offset":2672},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":12,"offset":2627},"end":{"line":81,"col":17,"offset":2632},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb06b5a9a7aa0b1f09b53c215c44d2982cd384103a44f750a9478d19ea5e5f5dfb99174488bf3cbd411e8ec14f5a679be7c24e5fbe70c4fc38bca4b9fa4694d_0","lines":"\t      if (mkdir (dirpath, tmpmode ^ invert_permissions))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":91,"col":9,"offset":2870},"end":{"line":91,"col":31,"offset":2892},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3c16159c6c4dfe8a4450ea0e1e725aaadf6efd367a99dd46b771e27a5d91f824b0ad9f8ed8a4f320895f6c8842b8017458adf71e3b1e037562dab2cb40717c93_2","lines":"\t\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":91,"col":9,"offset":2870},"end":{"line":91,"col":31,"offset":2892},"extra":{"metavars":{"$FUN":{"start":{"line":91,"col":9,"offset":2870},"end":{"line":91,"col":13,"offset":2874},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca0d1680581eee067a58568325886ab89f88b780807e869efa884701e16480f2b58d942a5797f1740fa7654a78c288a3228d034dd716937bea73654605984f5_2","lines":"\t\t  if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":100,"col":9,"offset":3056},"end":{"line":100,"col":61,"offset":3108},"extra":{"metavars":{"$FUN":{"start":{"line":100,"col":9,"offset":3056},"end":{"line":100,"col":23,"offset":3070},"abstract_content":"delay_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"878fc3f8ecbf45b99744752c25e9e1187a54255cbaeca753882d7b7f30b243bdd1f514bdc5b70feff7766900c537f6c67cba573f33fa532572d6658a8e6fad6a_0","lines":"\t\t      delay_set_stat (dirpath, &stats, invert_permissions);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":121,"col":11,"offset":3544},"end":{"line":121,"col":56,"offset":3589},"extra":{"metavars":{"$FUN":{"start":{"line":121,"col":11,"offset":3544},"end":{"line":121,"col":16,"offset":3549},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb06b5a9a7aa0b1f09b53c215c44d2982cd384103a44f750a9478d19ea5e5f5dfb99174488bf3cbd411e8ec14f5a679be7c24e5fbe70c4fc38bca4b9fa4694d_1","lines":"      if (mkdir (dirpath, tmpmode ^ invert_permissions))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":127,"col":10,"offset":3801},"end":{"line":127,"col":32,"offset":3823},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3c16159c6c4dfe8a4450ea0e1e725aaadf6efd367a99dd46b771e27a5d91f824b0ad9f8ed8a4f320895f6c8842b8017458adf71e3b1e037562dab2cb40717c93_3","lines":"\t       (stat (dirpath, &stats) != 0) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":127,"col":10,"offset":3801},"end":{"line":127,"col":32,"offset":3823},"extra":{"metavars":{"$FUN":{"start":{"line":127,"col":10,"offset":3801},"end":{"line":127,"col":14,"offset":3805},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca0d1680581eee067a58568325886ab89f88b780807e869efa884701e16480f2b58d942a5797f1740fa7654a78c288a3228d034dd716937bea73654605984f5_3","lines":"\t       (stat (dirpath, &stats) != 0) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":134,"col":16,"offset":3987},"end":{"line":134,"col":38,"offset":4009},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"3c16159c6c4dfe8a4450ea0e1e725aaadf6efd367a99dd46b771e27a5d91f824b0ad9f8ed8a4f320895f6c8842b8017458adf71e3b1e037562dab2cb40717c93_4","lines":"      else if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":134,"col":16,"offset":3987},"end":{"line":134,"col":38,"offset":4009},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":16,"offset":3987},"end":{"line":134,"col":20,"offset":3991},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca0d1680581eee067a58568325886ab89f88b780807e869efa884701e16480f2b58d942a5797f1740fa7654a78c288a3228d034dd716937bea73654605984f5_4","lines":"      else if (stat (dirpath, &stats))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","start":{"line":143,"col":4,"offset":4149},"end":{"line":143,"col":56,"offset":4201},"extra":{"metavars":{"$FUN":{"start":{"line":143,"col":4,"offset":4149},"end":{"line":143,"col":18,"offset":4163},"abstract_content":"delay_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"878fc3f8ecbf45b99744752c25e9e1187a54255cbaeca753882d7b7f30b243bdd1f514bdc5b70feff7766900c537f6c67cba573f33fa532572d6658a8e6fad6a_1","lines":"\t  delay_set_stat (dirpath, &stats, invert_permissions);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":213,"col":17,"offset":4818},"end":{"line":213,"col":28,"offset":4829},"extra":{"metavars":{"$NARROW":{"start":{"line":213,"col":17,"offset":4818},"end":{"line":213,"col":22,"offset":4823},"abstract_content":"count"},"$LARGE":{"start":{"line":213,"col":25,"offset":4826},"end":{"line":213,"col":28,"offset":4829},"abstract_content":"val"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e5c7b504a33c719cd43a7e40036bc61000522700f62fd752c633d9f78d607a5b2ded4338d3d908d8eb1e5ea608e90bac68b49b232a88cfee57703f748e67e598_0","lines":"\t    if (*p || (count = val) != count)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":228,"col":14,"offset":5077},"end":{"line":228,"col":29,"offset":5092},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":228,"col":14,"offset":5077},"end":{"line":228,"col":20,"offset":5083},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bfa4acf33b87163c3a8e7439fce4c8e2a539a55fc7af42e701373ad62796d1331c2473e40fab3ed5466f2f07df7331c26f555f781fd3f1a7efb5ba06988238db_0","lines":"\t  tapedev = getenv (\"TAPE\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":229,"col":4,"offset":5097},"end":{"line":229,"col":24,"offset":5117},"extra":{"metavars":{"$COND":{"start":{"line":229,"col":8,"offset":5101},"end":{"line":229,"col":23,"offset":5116},"abstract_content":"tapedev==NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ca07350197fba5ad74397400a5f5b233cdeacd2e0c70095003a71b74eedee871db7ca9a43edfd3664e250bb88151a9eaf1065c4f61c826e46906d4964bdb176a_0","lines":"\t  if (tapedev == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":270,"col":7,"offset":5696},"end":{"line":270,"col":27,"offset":5716},"extra":{"metavars":{"$FUN":{"start":{"line":270,"col":7,"offset":5696},"end":{"line":270,"col":12,"offset":5701},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"be022ecb44e4091d6ac7c56f95b81fbd0749dc895657ad74f15cc6c4bac76719e167423da61211f1104615e588f776d770f455501f8844b06cf05cf6f6f5e033_0","lines":"  if (fstat (desc, &stats) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":321,"col":3,"offset":7065},"end":{"line":321,"col":25,"offset":7087},"extra":{"metavars":{"$FUN":{"start":{"line":321,"col":3,"offset":7065},"end":{"line":321,"col":12,"offset":7074},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ae67127a1d6d34b83c52142e4a19cf19cb132616c85561cb30f7f61429f1419feec9d3fb05fb6065949c9230eee0063e159ef952fa66fc88c863d9af073fb6b_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":325,"col":21,"offset":7175},"end":{"line":325,"col":25,"offset":7179},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"214a6fa4d570366b240686794b3419027b1fd2219f14103db993c6bb5ad5aa335a66ebc1bea76d56193ce0e40195bedad246c0d19a85eb03dc8ee1dd8c794937_0","lines":"  set_program_name (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":329,"col":32,"offset":7331},"end":{"line":329,"col":36,"offset":7335},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"214a6fa4d570366b240686794b3419027b1fd2219f14103db993c6bb5ad5aa335a66ebc1bea76d56193ce0e40195bedad246c0d19a85eb03dc8ee1dd8c794937_1","lines":"  if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, NULL, NULL))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":338,"col":18,"offset":7493},"end":{"line":338,"col":68,"offset":7543},"extra":{"metavars":{"$FUN":{"start":{"line":338,"col":18,"offset":7493},"end":{"line":338,"col":25,"offset":7500},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b337aedfc6433237dbed6bab39283123877c91946984d22cef8607e37fd4c2df27d9a209e405de2d67ddf93c738c81267026b5919b9012a7426cd1b4108411e6_0","lines":"      tapedesc = rmtopen (tapedev, O_WRONLY, 0, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":342,"col":18,"offset":7589},"end":{"line":342,"col":68,"offset":7639},"extra":{"metavars":{"$FUN":{"start":{"line":342,"col":18,"offset":7589},"end":{"line":342,"col":25,"offset":7596},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b337aedfc6433237dbed6bab39283123877c91946984d22cef8607e37fd4c2df27d9a209e405de2d67ddf93c738c81267026b5919b9012a7426cd1b4108411e6_1","lines":"      tapedesc = rmtopen (tapedev, O_RDONLY, 0, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":38,"col":3,"offset":1178},"end":{"line":38,"col":57,"offset":1232},"extra":{"metavars":{"$FUN":{"start":{"line":38,"col":3,"offset":1178},"end":{"line":38,"col":10,"offset":1185},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_0","lines":"  strncpy (hold_tar_linkname, linkname, TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":38,"col":3,"offset":1178},"end":{"line":38,"col":57,"offset":1232},"extra":{"metavars":{"$TYPE":{"start":{"line":36,"col":10,"offset":1130},"end":{"line":36,"col":14,"offset":1134},"abstract_content":"char"},"$LEN":{"start":{"line":36,"col":33,"offset":1153},"end":{"line":36,"col":52,"offset":1172},"abstract_content":"TARLINKNAMESIZE+1"},"$FUN":{"start":{"line":38,"col":3,"offset":1178},"end":{"line":38,"col":10,"offset":1185},"abstract_content":"strncpy"},"$BUF":{"start":{"line":38,"col":12,"offset":1187},"end":{"line":38,"col":29,"offset":1204},"abstract_content":"hold_tar_linkname"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"5dfb94993ffeb8a9428e76c4d29a721df23b915b901c525a1385d66e4bab6c7d44b0aa4758680d24e579cf8a1ad93c88b0d383469eaae6344f28cec8e49dd97b_0","lines":"  strncpy (hold_tar_linkname, linkname, TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":40,"col":3,"offset":1281},"end":{"line":40,"col":28,"offset":1306},"extra":{"metavars":{"$TYPE":{"start":{"line":36,"col":10,"offset":1130},"end":{"line":36,"col":14,"offset":1134},"abstract_content":"char"},"$LEN":{"start":{"line":36,"col":33,"offset":1153},"end":{"line":36,"col":52,"offset":1172},"abstract_content":"TARLINKNAMESIZE+1"},"$PTR":{"start":{"line":40,"col":10,"offset":1288},"end":{"line":40,"col":27,"offset":1305},"abstract_content":"hold_tar_linkname"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c748553232c839bb84e0e1e0b4a2ce970120c6f04b486cfd0605c254b49de1fa9ff0eef4e3d5c457f281a3b74c62e3b70bf60b718cdb3e203cd60ba64f3c52bc_0","lines":"  return hold_tar_linkname;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":52,"col":5,"offset":1575},"end":{"line":52,"col":29,"offset":1599},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":52,"col":5,"offset":1575},"end":{"line":52,"col":11,"offset":1581},"abstract_content":"length"},"$SIGNED":{"start":{"line":52,"col":28,"offset":1598},"end":{"line":52,"col":29,"offset":1599},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0aa50c2745ec0608008b2d4dca6f5dfeb9d325cdc62c3dd50df0b0b1ac15acf9cc8fe7df8db935712c1c8446bc88c778003eb79c7f58663f692c6ab706dc1e22_0","lines":"    length = TARPREFIXSIZE+2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":53,"col":8,"offset":1608},"end":{"line":53,"col":22,"offset":1622},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":53,"col":8,"offset":1608},"end":{"line":53,"col":9,"offset":1609},"abstract_content":"i"},"$SIGNED":{"start":{"line":53,"col":21,"offset":1621},"end":{"line":53,"col":22,"offset":1622},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"178146f07db4995532f1552245f0b83b041a0d90c760d974f7ee0f79b9cfda91ae3203f4caca1d08040ddbdd2443c7a8817d7afc6762c68d98962a0aff7c5f7b_0","lines":"  for (i = length - 1; i > 0; i--)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":67,"col":7,"offset":1943},"end":{"line":67,"col":57,"offset":1993},"extra":{"metavars":{"$FUN":{"start":{"line":67,"col":7,"offset":1943},"end":{"line":67,"col":14,"offset":1950},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_1","lines":"      strncpy (hold_tar_filename, filename, TARNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":67,"col":7,"offset":1943},"end":{"line":67,"col":57,"offset":1993},"extra":{"metavars":{"$TYPE":{"start":{"line":64,"col":10,"offset":1833},"end":{"line":64,"col":14,"offset":1837},"abstract_content":"char"},"$LEN":{"start":{"line":64,"col":33,"offset":1856},"end":{"line":64,"col":64,"offset":1887},"abstract_content":"TARNAMESIZE+TARPREFIXSIZE+2"},"$FUN":{"start":{"line":67,"col":7,"offset":1943},"end":{"line":67,"col":14,"offset":1950},"abstract_content":"strncpy"},"$BUF":{"start":{"line":67,"col":16,"offset":1952},"end":{"line":67,"col":33,"offset":1969},"abstract_content":"hold_tar_filename"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"415c9546137bdc6cd9cacffea7e4ff6537581ff41a0c6fc2a6924a249102da8455f7d51f2e1dc500a157d544c4e770d4159ffbdd4762cfdea38805dd1ba9c1a1_0","lines":"      strncpy (hold_tar_filename, filename, TARNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":72,"col":7,"offset":2065},"end":{"line":72,"col":57,"offset":2115},"extra":{"metavars":{"$FUN":{"start":{"line":72,"col":7,"offset":2065},"end":{"line":72,"col":14,"offset":2072},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_2","lines":"      strncpy (hold_tar_filename, prefix, TARPREFIXSIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":72,"col":7,"offset":2065},"end":{"line":72,"col":57,"offset":2115},"extra":{"metavars":{"$TYPE":{"start":{"line":64,"col":10,"offset":1833},"end":{"line":64,"col":14,"offset":1837},"abstract_content":"char"},"$LEN":{"start":{"line":64,"col":33,"offset":1856},"end":{"line":64,"col":64,"offset":1887},"abstract_content":"TARNAMESIZE+TARPREFIXSIZE+2"},"$FUN":{"start":{"line":72,"col":7,"offset":2065},"end":{"line":72,"col":14,"offset":2072},"abstract_content":"strncpy"},"$BUF":{"start":{"line":72,"col":16,"offset":2074},"end":{"line":72,"col":33,"offset":2091},"abstract_content":"hold_tar_filename"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"415c9546137bdc6cd9cacffea7e4ff6537581ff41a0c6fc2a6924a249102da8455f7d51f2e1dc500a157d544c4e770d4159ffbdd4762cfdea38805dd1ba9c1a1_1","lines":"      strncpy (hold_tar_filename, prefix, TARPREFIXSIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":74,"col":7,"offset":2170},"end":{"line":74,"col":38,"offset":2201},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":7,"offset":2170},"end":{"line":74,"col":13,"offset":2176},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68111e4dc75a3731d05c430ae98762c50f2b11de35c97b7252b2953554c722d323280225ad8d75962a071d0b42e922a576a796e9ab274e45a54214d92c8b5c05_0","lines":"      strcat (hold_tar_filename, \"/\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":75,"col":7,"offset":2209},"end":{"line":75,"col":57,"offset":2259},"extra":{"metavars":{"$FUN":{"start":{"line":75,"col":7,"offset":2209},"end":{"line":75,"col":14,"offset":2216},"abstract_content":"strncat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f1ec6006168ac97f63ae134044c961539154decf7c60e490ca1177009b42dfe461e02d4cbc87beb37cb8fdfe8ce523d7b705291b0c6b7211f03705ac19664e8_0","lines":"      strncat (hold_tar_filename, filename, TARNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":75,"col":7,"offset":2209},"end":{"line":75,"col":57,"offset":2259},"extra":{"metavars":{"$DST":{"start":{"line":75,"col":16,"offset":2218},"end":{"line":75,"col":33,"offset":2235},"abstract_content":"hold_tar_filename"},"$SRC":{"start":{"line":75,"col":35,"offset":2237},"end":{"line":75,"col":43,"offset":2245},"abstract_content":"filename"},"$LEN":{"start":{"line":75,"col":45,"offset":2247},"end":{"line":75,"col":56,"offset":2258},"abstract_content":"TARNAMESIZE"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"030379ca4aa24b214e411daa3a516de4cc4ab31fe93cc36487d82247c69a3acacc024cb929267ce9a376aee26c7ba2a5f9bf8d9d96d8244ab1cecaed4215f04e_0","lines":"      strncat (hold_tar_filename, filename, TARNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":75,"col":7,"offset":2209},"end":{"line":75,"col":57,"offset":2259},"extra":{"metavars":{"$TYPE":{"start":{"line":64,"col":10,"offset":1833},"end":{"line":64,"col":14,"offset":1837},"abstract_content":"char"},"$LEN":{"start":{"line":64,"col":33,"offset":1856},"end":{"line":64,"col":64,"offset":1887},"abstract_content":"TARNAMESIZE+TARPREFIXSIZE+2"},"$FUN":{"start":{"line":75,"col":7,"offset":2209},"end":{"line":75,"col":14,"offset":2216},"abstract_content":"strncat"},"$BUF":{"start":{"line":75,"col":16,"offset":2218},"end":{"line":75,"col":33,"offset":2235},"abstract_content":"hold_tar_filename"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"9e5ab8038d7a5253ac001fd1e496babc105045b6c4794ca794e0d1d5e1bb8c9f34883c6b6574a15bd91397d244ca9ce9e12884caaed1a155db5ce9699cdd53f1_0","lines":"      strncat (hold_tar_filename, filename, TARNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":78,"col":3,"offset":2330},"end":{"line":78,"col":28,"offset":2355},"extra":{"metavars":{"$TYPE":{"start":{"line":64,"col":10,"offset":1833},"end":{"line":64,"col":14,"offset":1837},"abstract_content":"char"},"$LEN":{"start":{"line":64,"col":33,"offset":1856},"end":{"line":64,"col":64,"offset":1887},"abstract_content":"TARNAMESIZE+TARPREFIXSIZE+2"},"$PTR":{"start":{"line":78,"col":10,"offset":2337},"end":{"line":78,"col":27,"offset":2354},"abstract_content":"hold_tar_filename"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"deb3c20c20a095cacb05d602f23f4f4c7cf99a86a7cdf735521c3fce199492bbade81eab2eef7102c491abb76963d2abc4a927594a13d9b96f8b7336f398a230_0","lines":"  return hold_tar_filename;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":100,"col":16,"offset":2808},"end":{"line":100,"col":23,"offset":2815},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":100,"col":16,"offset":2808},"end":{"line":100,"col":19,"offset":2811},"abstract_content":"sum"},"$SIGNED":{"start":{"line":100,"col":22,"offset":2814},"end":{"line":100,"col":23,"offset":2815},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1f7b18a9288389b493b857d99d5fd65e8d39ff6671e5df0d91eada843f8ae51caf43a96eed45b937d4a2452652e9dd93ff97be4450a1c9d582bdea11d2572dff_0","lines":"  unsigned int sum = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":147,"col":7,"offset":3890},"end":{"line":147,"col":58,"offset":3941},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":7,"offset":3890},"end":{"line":147,"col":14,"offset":3897},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_3","lines":"      strncpy (tar_hdr->name, file_hdr->c_name, name_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":147,"col":7,"offset":3890},"end":{"line":147,"col":58,"offset":3941},"extra":{"metavars":{"$DST":{"start":{"line":147,"col":16,"offset":3899},"end":{"line":147,"col":29,"offset":3912},"abstract_content":"tar_hdr->->name"},"$SRC":{"start":{"line":147,"col":31,"offset":3914},"end":{"line":147,"col":47,"offset":3930},"abstract_content":"file_hdr->->c_name"},"$LEN":{"start":{"line":147,"col":49,"offset":3932},"end":{"line":147,"col":57,"offset":3940},"abstract_content":"name_len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"27ddca184c7a7bcf85ea31239990f11fd7b91f257925eaaedc0c0c74e486d762fcdfba9073376466d7e98f582d47c8d204568f47f5492a321f735588727949ec_0","lines":"      strncpy (tar_hdr->name, file_hdr->c_name, name_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":147,"col":7,"offset":3890},"end":{"line":147,"col":58,"offset":3941},"extra":{"metavars":{"$FUN":{"start":{"line":147,"col":7,"offset":3890},"end":{"line":147,"col":14,"offset":3897},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_0","lines":"      strncpy (tar_hdr->name, file_hdr->c_name, name_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":154,"col":7,"offset":4110},"end":{"line":154,"col":62,"offset":4165},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":7,"offset":4110},"end":{"line":154,"col":14,"offset":4117},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_4","lines":"      strncpy (tar_hdr->prefix, file_hdr->c_name, prefix_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":154,"col":7,"offset":4110},"end":{"line":154,"col":62,"offset":4165},"extra":{"metavars":{"$DST":{"start":{"line":154,"col":16,"offset":4119},"end":{"line":154,"col":31,"offset":4134},"abstract_content":"tar_hdr->->prefix"},"$SRC":{"start":{"line":154,"col":33,"offset":4136},"end":{"line":154,"col":49,"offset":4152},"abstract_content":"file_hdr->->c_name"},"$LEN":{"start":{"line":154,"col":51,"offset":4154},"end":{"line":154,"col":61,"offset":4164},"abstract_content":"prefix_len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c1e11bcbf3bc36bfe1bf67f4f2699e2be3471110de925d1494f5dfefcc16ea36cc2e776a19ba873e2430531ce8cdc1d843f59442387b20ffc433b2f6339e10e9_0","lines":"      strncpy (tar_hdr->prefix, file_hdr->c_name, prefix_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":154,"col":7,"offset":4110},"end":{"line":154,"col":62,"offset":4165},"extra":{"metavars":{"$FUN":{"start":{"line":154,"col":7,"offset":4110},"end":{"line":154,"col":14,"offset":4117},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_1","lines":"      strncpy (tar_hdr->prefix, file_hdr->c_name, prefix_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":155,"col":7,"offset":4173},"end":{"line":156,"col":35,"offset":4266},"extra":{"metavars":{"$FUN":{"start":{"line":155,"col":7,"offset":4173},"end":{"line":155,"col":14,"offset":4180},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_5","lines":"      strncpy (tar_hdr->name, file_hdr->c_name + prefix_len + 1,\n\t       name_len - prefix_len - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":155,"col":7,"offset":4173},"end":{"line":156,"col":35,"offset":4266},"extra":{"metavars":{"$DST":{"start":{"line":155,"col":16,"offset":4182},"end":{"line":155,"col":29,"offset":4195},"abstract_content":"tar_hdr->->name"},"$SRC":{"start":{"line":155,"col":31,"offset":4197},"end":{"line":155,"col":64,"offset":4230},"abstract_content":"file_hdr->->c_name+prefix_len+1"},"$LEN":{"start":{"line":156,"col":9,"offset":4240},"end":{"line":156,"col":34,"offset":4265},"abstract_content":"name_len-prefix_len-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"de0276175935ad50425e645b1298443e91e21039f24bff8046202cfb8c37d7401a945ae143ad16623cfb472774b50e68ab941a210db1498417e9443ebe0c7f90_0","lines":"      strncpy (tar_hdr->name, file_hdr->c_name + prefix_len + 1,\n\t       name_len - prefix_len - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":155,"col":7,"offset":4173},"end":{"line":156,"col":35,"offset":4266},"extra":{"metavars":{"$FUN":{"start":{"line":155,"col":7,"offset":4173},"end":{"line":155,"col":14,"offset":4180},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_2","lines":"      strncpy (tar_hdr->name, file_hdr->c_name + prefix_len + 1,\n\t       name_len - prefix_len - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":167,"col":11,"offset":4628},"end":{"line":167,"col":37,"offset":4654},"extra":{"metavars":{"$VAR":{"start":{"line":167,"col":11,"offset":4628},"end":{"line":167,"col":37,"offset":4654},"abstract_content":"file_hdr->->c_mode&CP_IFMT"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d6b3e8981ce5091f65f1f90db30a3d6ac889eaad5f9aaca657a3d01d6784c4b3e7b0d7cfad2b7a32f7551b9c655891515718e0d970523dd93e125b0f736f61b9_0","lines":"  switch (file_hdr->c_mode & CP_IFMT)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":174,"col":4,"offset":4820},"end":{"line":175,"col":22,"offset":4895},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":4,"offset":4820},"end":{"line":174,"col":11,"offset":4827},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_6","lines":"\t  strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,\n\t\t   TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":174,"col":4,"offset":4820},"end":{"line":175,"col":22,"offset":4895},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":4,"offset":4820},"end":{"line":174,"col":11,"offset":4827},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_3","lines":"\t  strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,\n\t\t   TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":201,"col":7,"offset":5513},"end":{"line":202,"col":25,"offset":5591},"extra":{"metavars":{"$FUN":{"start":{"line":201,"col":7,"offset":5513},"end":{"line":201,"col":14,"offset":5520},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_7","lines":"      strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,\n\t       TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":201,"col":7,"offset":5513},"end":{"line":202,"col":25,"offset":5591},"extra":{"metavars":{"$FUN":{"start":{"line":201,"col":7,"offset":5513},"end":{"line":201,"col":14,"offset":5520},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_4","lines":"      strncpy (tar_hdr->linkname, file_hdr->c_tar_linkname,\n\t       TARLINKNAMESIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":212,"col":7,"offset":5752},"end":{"line":212,"col":48,"offset":5793},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":7,"offset":5752},"end":{"line":212,"col":14,"offset":5759},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_8","lines":"      strncpy (tar_hdr->magic, TMAGIC, TMAGLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":212,"col":7,"offset":5752},"end":{"line":212,"col":48,"offset":5793},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":7,"offset":5752},"end":{"line":212,"col":14,"offset":5759},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_5","lines":"      strncpy (tar_hdr->magic, TMAGIC, TMAGLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":213,"col":7,"offset":5801},"end":{"line":213,"col":53,"offset":5847},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":7,"offset":5801},"end":{"line":213,"col":14,"offset":5808},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff810f1cb04251b6a8d2d45ec8f3bb00f1a5fc99a00b5bb250729fe9b17e18124cba68981627cceca2df8780d5e2f99089485a918ea13acccecfd4d997705678_9","lines":"      strncpy (tar_hdr->version, TVERSION, TVERSLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unterminated-string-strncpy-stpncpy","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":213,"col":7,"offset":5801},"end":{"line":213,"col":53,"offset":5847},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":7,"offset":5801},"end":{"line":213,"col":14,"offset":5808},"abstract_content":"strncpy"}},"message":"If there is no NUL character byte in the first n bytes of the source string, strncpy() and stpncpy() do not NUL-terminate the destination buffer. If the program does not explicitly terminate the destination buffer, this will almost certainly result in information disclosure, and possibly a buffer overflow condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/170","https://cwe.mitre.org/data/definitions/126","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d407ba4d80d30e2dd9dbe5997db1b870f591b88dee5e8ae7c5c91b246bccac3e1eaab96def046e5b36917f142fc82a2fd77bb6bbb3698aed76b808b3af2cf9e0_6","lines":"      strncpy (tar_hdr->version, TVERSION, TVERSLEN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":217,"col":2,"offset":5907},"end":{"line":217,"col":31,"offset":5936},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"90efcccf454d46fe3c7a3f70c2d81593552b04ff1b7fc31e8e8f0b841467167ff52e2b7d12b283371db2bdc4bc68e20eb03db2b7f796b5c14982ae8c2dceac7a_0","lines":"\tstrcpy (tar_hdr->uname, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":217,"col":2,"offset":5907},"end":{"line":217,"col":31,"offset":5936},"extra":{"metavars":{"$FUN":{"start":{"line":217,"col":2,"offset":5907},"end":{"line":217,"col":8,"offset":5913},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24dd16979e3cc97605da3a32a31686004d77451ff210fdf18bda8cb9c3111315e8e81b0d09070e47370f8abaef3fb97e0332851d831eca9c1cc2dc30d3bd4abb_0","lines":"\tstrcpy (tar_hdr->uname, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":220,"col":2,"offset":5996},"end":{"line":220,"col":31,"offset":6025},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"90efcccf454d46fe3c7a3f70c2d81593552b04ff1b7fc31e8e8f0b841467167ff52e2b7d12b283371db2bdc4bc68e20eb03db2b7f796b5c14982ae8c2dceac7a_1","lines":"\tstrcpy (tar_hdr->gname, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":220,"col":2,"offset":5996},"end":{"line":220,"col":31,"offset":6025},"extra":{"metavars":{"$FUN":{"start":{"line":220,"col":2,"offset":5996},"end":{"line":220,"col":8,"offset":6002},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24dd16979e3cc97605da3a32a31686004d77451ff210fdf18bda8cb9c3111315e8e81b0d09070e47370f8abaef3fb97e0332851d831eca9c1cc2dc30d3bd4abb_1","lines":"\tstrcpy (tar_hdr->gname, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":262,"col":3,"offset":6970},"end":{"line":262,"col":64,"offset":7031},"extra":{"metavars":{"$FUN":{"start":{"line":262,"col":3,"offset":6970},"end":{"line":262,"col":21,"offset":6988},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"981cb8fcc09f524893cdf51e223120e6745d10d32bd3f454dc203f2f3a36421862a793af1d425f20af92d85c8c7f30a941cae75c64433edb1c1df0dd5380021b_0","lines":"  tape_buffered_read ((char *) &tar_rec, in_des, TARRECORDSIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":275,"col":7,"offset":7506},"end":{"line":275,"col":68,"offset":7567},"extra":{"metavars":{"$FUN":{"start":{"line":275,"col":7,"offset":7506},"end":{"line":275,"col":25,"offset":7524},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"981cb8fcc09f524893cdf51e223120e6745d10d32bd3f454dc203f2f3a36421862a793af1d425f20af92d85c8c7f30a941cae75c64433edb1c1df0dd5380021b_1","lines":"      tape_buffered_read ((char *) &tar_rec, in_des, TARRECORDSIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":306,"col":4,"offset":8482},"end":{"line":306,"col":66,"offset":8544},"extra":{"metavars":{"$FUN":{"start":{"line":306,"col":4,"offset":8482},"end":{"line":306,"col":11,"offset":8489},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aeec17e3018eee358943121eec290836ee36275546f8515fc3e022e2a34199c41fef46905eae0fd92fc3daad5be559d002b1a8c31cc130b2deec33ac3d8bbb04_0","lines":"\t  memmove (&tar_rec, ((char *) &tar_rec) + 1, TARRECORDSIZE - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":307,"col":4,"offset":8549},"end":{"line":307,"col":77,"offset":8622},"extra":{"metavars":{"$FUN":{"start":{"line":307,"col":4,"offset":8549},"end":{"line":307,"col":22,"offset":8567},"abstract_content":"tape_buffered_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"981cb8fcc09f524893cdf51e223120e6745d10d32bd3f454dc203f2f3a36421862a793af1d425f20af92d85c8c7f30a941cae75c64433edb1c1df0dd5380021b_2","lines":"\t  tape_buffered_read (((char *) &tar_rec) + (TARRECORDSIZE - 1), in_des, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":324,"col":7,"offset":9277},"end":{"line":328,"col":46,"offset":9453},"extra":{"metavars":{"$EXPR1":{"start":{"line":325,"col":8,"offset":9332},"end":{"line":325,"col":12,"offset":9336},"abstract_content":"uidp"},"$EXPR2":{"start":{"line":325,"col":15,"offset":9339},"end":{"line":325,"col":44,"offset":9368},"abstract_content":"getuidbyname(tar_hdr->->uname)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"41b3a4f741392e0b207d6e6803777adda8d510146eac0e0c9ba2d5e6e809dd6184d351db2f04b9ffebad8caa631c7b7642d90222cc0fde0eea4c32cc0048e588_0","lines":"      if (archive_format == arf_ustar && !numeric_uid\n\t  && (uidp = getuidbyname (tar_hdr->uname)))\n\tfile_hdr->c_uid = *uidp;\n      else\n\tfile_hdr->c_uid = FROM_OCTAL (tar_hdr->uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":330,"col":7,"offset":9461},"end":{"line":334,"col":46,"offset":9637},"extra":{"metavars":{"$EXPR1":{"start":{"line":331,"col":8,"offset":9516},"end":{"line":331,"col":12,"offset":9520},"abstract_content":"gidp"},"$EXPR2":{"start":{"line":331,"col":15,"offset":9523},"end":{"line":331,"col":44,"offset":9552},"abstract_content":"getgidbyname(tar_hdr->->gname)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfd264c82d749557ba15d92fb844615e0912fe7f5bf9fae5c183714e6faf97cdfb6417d76c26ee01ae3bcfac7bc2fedc64e5dacbc9a59072cf3a4add82418bc2_0","lines":"      if (archive_format == arf_ustar && !numeric_uid\n\t  && (gidp = getgidbyname (tar_hdr->gname)))\n\tfile_hdr->c_gid = *gidp;\n      else\n\tfile_hdr->c_gid = FROM_OCTAL (tar_hdr->gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":341,"col":15,"offset":9926},"end":{"line":341,"col":32,"offset":9943},"extra":{"metavars":{"$VAR":{"start":{"line":341,"col":15,"offset":9926},"end":{"line":341,"col":32,"offset":9943},"abstract_content":"tar_hdr->->typeflag"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d4a8ae8d1b0c9761cdcab4b202c568d2baa9b9af690daf016c65e5b86e35bfbed5963528e9ce49bf618d969fd9b3a5528c0744a77185ae89e7b97d2ec38f952_0","lines":"      switch (tar_hdr->typeflag)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":127,"col":8,"offset":3466},"end":{"line":127,"col":59,"offset":3517},"extra":{"metavars":{"$EXPR1":{"start":{"line":127,"col":48,"offset":3506},"end":{"line":127,"col":49,"offset":3507},"abstract_content":"g"},"$EXPR2":{"start":{"line":127,"col":53,"offset":3511},"end":{"line":127,"col":57,"offset":3515},"abstract_content":"NULL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"91a8f1b1c97e484c35ed38b9d4280f881a39c43d416e03c9826f673a8d30d1a88f4ddf41c52f858293d19249e17f1e18ade5f61b75a77d45d602fa925366d611_0","lines":"\t      use_login_group = (separator != NULL && g == NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":131,"col":10,"offset":3631},"end":{"line":131,"col":18,"offset":3639},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"21fbd77288d69218044d480b44c96e6b2119b532907ad2b266548b8d7410bf486d70e537b32678ef73900de37e7e0b82c6a29635c89d8066ee7d87af492f3e89_0","lines":"\t\t*uid = atoi (u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":149,"col":5,"offset":4095},"end":{"line":149,"col":55,"offset":4145},"extra":{"metavars":{"$FUN":{"start":{"line":149,"col":5,"offset":4095},"end":{"line":149,"col":12,"offset":4102},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"155730566473fc14b09c969ba105e27957da1a010df5b526c7e13509c4ed7facd4221a89374e90644956dbfbe819907038c6048a4f8545146ebdcacd50b2a744_0","lines":"\t\t  sprintf (uint_buf, \"%u\", (unsigned) (pwd->pw_gid));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":178,"col":13,"offset":4566},"end":{"line":178,"col":21,"offset":4574},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"21fbd77288d69218044d480b44c96e6b2119b532907ad2b266548b8d7410bf486d70e537b32678ef73900de37e7e0b82c6a29635c89d8066ee7d87af492f3e89_1","lines":"\t    *gid = atoi (g);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":197,"col":11,"offset":4879},"end":{"line":197,"col":28,"offset":4896},"extra":{"metavars":{"$EXPR":{"start":{"line":197,"col":11,"offset":4879},"end":{"line":197,"col":20,"offset":4888},"abstract_content":"groupname","propagated_value":{"svalue_start":{"line":86,"col":15,"offset":2641},"svalue_end":{"line":86,"col":19,"offset":2645},"svalue_abstract_content":"NULL"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9742d31f83935fdc8c1584a36940536d92ac7d98811a41db4901e5ba2f9db695193c558aa010c652f309f3d7cdeb4be651a96358744f51a5cbbd61cb1b5569ab_0","lines":"      if (groupname != NULL && error_msg == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":204,"col":5,"offset":5042},"end":{"line":204,"col":26,"offset":5063},"extra":{"metavars":{"$PTR":{"start":{"line":204,"col":11,"offset":5048},"end":{"line":204,"col":24,"offset":5061},"abstract_content":"*username_arg"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"866267f69443491527d5f0c50f69bf0757429d221d5a75d3bd0ff3409a74f989deb2479039d565edec80cf44ad0749c82ea6d2793b2535b47753898afd104f45_0","lines":"\t\t  free (*username_arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":232,"col":7,"offset":5420},"end":{"line":232,"col":29,"offset":5442},"extra":{"metavars":{"$RET":{"start":{"line":232,"col":7,"offset":5420},"end":{"line":232,"col":10,"offset":5423},"abstract_content":"tmp"},"$FUN":{"start":{"line":232,"col":13,"offset":5426},"end":{"line":232,"col":19,"offset":5432},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f798e024e7c427180a8385dacefd5ce405743cb9c8948f798d8692852352812473fa69b434e34633be7a5c6c6ce039c4018c6de27a687f105d27050c09506dfe_0","lines":"      tmp = strdup (argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":232,"col":21,"offset":5434},"end":{"line":232,"col":25,"offset":5438},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"36e6d2a3480edfa9143adfe6580a836c502edd38b9a447103624fe2187829a40b6acf945c7ffcd4e2c5fb351fd8dcb3db73369399659a7ad4821617cbdeaa1e7_0","lines":"      tmp = strdup (argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","start":{"line":236,"col":8,"offset":5575},"end":{"line":236,"col":12,"offset":5579},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"36e6d2a3480edfa9143adfe6580a836c502edd38b9a447103624fe2187829a40b6acf945c7ffcd4e2c5fb351fd8dcb3db73369399659a7ad4821617cbdeaa1e7_1","lines":"\t      argv[i],","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":203,"col":16,"offset":5858},"end":{"line":203,"col":57,"offset":5899},"extra":{"metavars":{"$FUN":{"start":{"line":203,"col":16,"offset":5858},"end":{"line":203,"col":23,"offset":5865},"abstract_content":"rmtread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f756119ecee1e07a7cb07647740451e446944819a7235247954eb2b60063860e1b0e14ecabb589efccddcf369125f77970a635aa3bc7697d9c68a00254f5e6_0","lines":"  input_size = rmtread (in_des, input_buffer, num_bytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":207,"col":20,"offset":5999},"end":{"line":207,"col":61,"offset":6040},"extra":{"metavars":{"$FUN":{"start":{"line":207,"col":20,"offset":5999},"end":{"line":207,"col":27,"offset":6006},"abstract_content":"rmtread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f756119ecee1e07a7cb07647740451e446944819a7235247954eb2b60063860e1b0e14ecabb589efccddcf369125f77970a635aa3bc7697d9c68a00254f5e6_1","lines":"      input_size = rmtread (in_des, input_buffer, num_bytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":226,"col":16,"offset":6708},"end":{"line":226,"col":54,"offset":6746},"extra":{"metavars":{"$FUN":{"start":{"line":226,"col":16,"offset":6708},"end":{"line":226,"col":20,"offset":6712},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"445486eea66a5e4138fff306a4fa89b82887366b26881a71569e047d7785de17a5791f5b9bdb612f2b876051e51eb43978c9e64f77bc3662b837c2abdb6f6664_0","lines":"  input_size = read (in_des, input_buffer, num_bytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":256,"col":4,"offset":7493},"end":{"line":256,"col":52,"offset":7541},"extra":{"metavars":{"$FUN":{"start":{"line":256,"col":4,"offset":7493},"end":{"line":256,"col":10,"offset":7499},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_0","lines":"\t  memcpy (out_buff, in_buf, (unsigned) space_left);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":283,"col":4,"offset":8242},"end":{"line":283,"col":52,"offset":8290},"extra":{"metavars":{"$FUN":{"start":{"line":283,"col":4,"offset":8242},"end":{"line":283,"col":10,"offset":8248},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_1","lines":"\t  memcpy (out_buff, in_buf, (unsigned) space_left);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":310,"col":7,"offset":8984},"end":{"line":310,"col":54,"offset":9031},"extra":{"metavars":{"$FUN":{"start":{"line":310,"col":7,"offset":8984},"end":{"line":310,"col":13,"offset":8990},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_2","lines":"      memcpy (in_buf, in_buff, (unsigned) space_left);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":327,"col":1,"offset":9520},"end":{"line":327,"col":19,"offset":9538},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":1,"offset":9520},"end":{"line":327,"col":19,"offset":9538},"abstract_content":"tape_buffered_peek"},"$LARGE":{"start":{"line":385,"col":10,"offset":11436},"end":{"line":385,"col":19,"offset":11445},"abstract_content":"got_bytes"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a155b7e6c41ca932be500331934945c7a96d96a1efb0e1bf983236f910de49ca87a8fa7e37c175bd267f767091b3d22dbcb08231fbbc22234c37a616ebc7bb0_0","lines":"tape_buffered_peek (char *peek_buf, int in_des, int num_bytes)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":360,"col":4,"offset":10741},"end":{"line":360,"col":53,"offset":10790},"extra":{"metavars":{"$FUN":{"start":{"line":360,"col":4,"offset":10741},"end":{"line":360,"col":11,"offset":10748},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dbf35bf9576de1dd0de356b0e8c8f35b53c54e6beca2fce9b47db8838e884feeeeb64582055e2a60a476b4a43d1064e843a9669ebb69791c5093ceba11a3d0af_0","lines":"\t  memmove (input_buffer, input_buffer + half, half);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":360,"col":4,"offset":10741},"end":{"line":360,"col":53,"offset":10790},"extra":{"metavars":{"$DST":{"start":{"line":360,"col":13,"offset":10750},"end":{"line":360,"col":25,"offset":10762},"abstract_content":"input_buffer"},"$SRC":{"start":{"line":360,"col":27,"offset":10764},"end":{"line":360,"col":46,"offset":10783},"abstract_content":"input_buffer+half"},"$LEN":{"start":{"line":360,"col":48,"offset":10785},"end":{"line":360,"col":52,"offset":10789},"abstract_content":"half","propagated_value":{"svalue_start":{"line":359,"col":11,"offset":10715},"svalue_end":{"line":359,"col":32,"offset":10736},"svalue_abstract_content":"input_buffer_size/2"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9ad9384d0eebc925bb89e5f79dfb460cab80832dcfee015a9fcbbeef262dc94a4de91bb59e6c83b359b24e97041c26efe4caff18a2d65bc0215f12cd3394cca0_0","lines":"\t  memmove (input_buffer, input_buffer + half, half);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":364,"col":24,"offset":10882},"end":{"line":364,"col":67,"offset":10925},"extra":{"metavars":{"$FUN":{"start":{"line":364,"col":24,"offset":10882},"end":{"line":364,"col":31,"offset":10889},"abstract_content":"rmtread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f756119ecee1e07a7cb07647740451e446944819a7235247954eb2b60063860e1b0e14ecabb589efccddcf369125f77970a635aa3bc7697d9c68a00254f5e6_2","lines":"      tmp_input_size = rmtread (in_des, append_buf, io_block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":370,"col":25,"offset":11048},"end":{"line":370,"col":68,"offset":11091},"extra":{"metavars":{"$FUN":{"start":{"line":370,"col":25,"offset":11048},"end":{"line":370,"col":32,"offset":11055},"abstract_content":"rmtread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f756119ecee1e07a7cb07647740451e446944819a7235247954eb2b60063860e1b0e14ecabb589efccddcf369125f77970a635aa3bc7697d9c68a00254f5e6_3","lines":"\t      tmp_input_size = rmtread (in_des, append_buf, io_block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":384,"col":3,"offset":11377},"end":{"line":384,"col":51,"offset":11425},"extra":{"metavars":{"$FUN":{"start":{"line":384,"col":3,"offset":11377},"end":{"line":384,"col":9,"offset":11383},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_3","lines":"  memcpy (peek_buf, in_buff, (unsigned) got_bytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":487,"col":2,"offset":14157},"end":{"line":506,"col":5,"offset":14809},"extra":{"metavars":{"$EXPR1":{"start":{"line":487,"col":7,"offset":14162},"end":{"line":487,"col":9,"offset":14164},"abstract_content":"rc"},"$EXPR2":{"start":{"line":487,"col":12,"offset":14167},"end":{"line":489,"col":39,"offset":14277},"abstract_content":"disk_fill_input_buffer(in_des num_bytes<DISK_IO_BLOCK_SIZE num_bytes DISK_IO_BLOCK_SIZE)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b1c4810753c06d2eee17f400555a3ba4d17238b788dfc187f1b7c0b923eb127998c8a984e57f926130ac2cc0c4b66c7bbb837109e1340dd276342d987b13650c_0","lines":"\tif ((rc = disk_fill_input_buffer (in_des,\n\t\t\t\t\t  num_bytes < DISK_IO_BLOCK_SIZE ?\n\t\t\t\t\t  num_bytes : DISK_IO_BLOCK_SIZE)))\n\t  {\n\t    if (rc > 0)\n\t      {\n\t\t  char buf[UINTMAX_STRSIZE_BOUND];\n\t\t  error (0, 0,\n\t\t\t ngettext (\"File %s shrunk by %s byte, padding with zeros\",\n\t\t\t\t   \"File %s shrunk by %s bytes, padding with zeros\",\n\t\t\t\t   num_bytes),\n\t\t\t filename,  STRINGIFY_BIGINT (num_bytes, buf));\n\t      }\n\t    else\n\t      error (0, 0,\n\t\t     _(\"Read error at byte %lld in file %s, padding with zeros\"),\n\t\t     (long long) (original_num_bytes - num_bytes), filename);\n\t    write_nuls_to_file (num_bytes, out_des, tape_buffered_write);\n\t    break;\n\t  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":540,"col":2,"offset":15756},"end":{"line":557,"col":5,"offset":16342},"extra":{"metavars":{"$EXPR1":{"start":{"line":540,"col":7,"offset":15761},"end":{"line":540,"col":9,"offset":15763},"abstract_content":"rc","propagated_value":{"svalue_start":{"line":540,"col":12,"offset":15766},"svalue_end":{"line":540,"col":54,"offset":15808},"svalue_abstract_content":"disk_fill_input_buffer(in_des num_bytes)"}},"$EXPR2":{"start":{"line":540,"col":12,"offset":15766},"end":{"line":540,"col":54,"offset":15808},"abstract_content":"disk_fill_input_buffer(in_des num_bytes)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d8287a91da3e022043ed4d97d1cdf0d1fe10aa03b44ffed53d8d0d0f6c15fae22b7e6dab6eaf81c70c2ada97d3de19f003c9a94fbc01f162c981522bc58089e7_0","lines":"\tif ((rc = disk_fill_input_buffer (in_des, num_bytes)))\n\t  {\n\t    if (rc > 0)\n\t      {\n\t\tchar buf[UINTMAX_STRSIZE_BOUND];\n\t\terror (0, 0,\n\t\t       ngettext (\"File %s shrunk by %s byte, padding with zeros\",\n\t\t\t\t \"File %s shrunk by %s bytes, padding with zeros\",\n\t\t\t\t num_bytes),\n\t\t       filename,  STRINGIFY_BIGINT (num_bytes, buf));\n\t      }\n\t    else\n\t      error (0, 0,\n\t\t     _(\"Read error at byte %lld in file %s, padding with zeros\"),\n\t\t     (long long) (original_num_bytes - num_bytes), filename);\n\t    write_nuls_to_file (num_bytes, out_des, disk_buffered_write);\n\t    break;\n\t  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":613,"col":7,"offset":17833},"end":{"line":616,"col":13,"offset":17944},"extra":{"metavars":{"$EXPR1":{"start":{"line":613,"col":11,"offset":17837},"end":{"line":613,"col":22,"offset":17848},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":613,"col":25,"offset":17851},"end":{"line":613,"col":43,"offset":17869},"abstract_content":"CPIO_WARN_INTERDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"76bbd53bc3480885578531621a0b783bb9eb8098636ea74aa8a90462d59c0a6765231470776e03a6d301a49f81966b0ff5af0cac4e0ca6f1761eba35510c8390_0","lines":"      if (warn_option & CPIO_WARN_INTERDIR)\n\tfmt = _(\"Creating intermediate directory `%s'\");\n      else\n\tfmt = NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":620,"col":3,"offset":17990},"end":{"line":620,"col":14,"offset":18001},"extra":{"metavars":{"$PTR":{"start":{"line":620,"col":9,"offset":17996},"end":{"line":620,"col":12,"offset":17999},"abstract_content":"dir","propagated_value":{"svalue_start":{"line":605,"col":9,"offset":17656},"svalue_end":{"line":605,"col":24,"offset":17671},"svalue_abstract_content":"dir_name(name)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9ab9b775ba0bf4f4e29cb93db3759852f1ae131c2f740f775a5542fb690e705cc5d842e5f2eb8233fa312c6ceb189953dc8bfd1fd11e53d344946aee1b9aab4c_0","lines":"  free (dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":654,"col":26,"offset":19335},"end":{"line":654,"col":57,"offset":19366},"extra":{"metavars":{"$FUN":{"start":{"line":654,"col":26,"offset":19335},"end":{"line":654,"col":33,"offset":19342},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2070bd24e2e7fcdc941dd0eea5b6aed557276ccd27bdacfd1f5c148a14af78598242b034aa3271aab9bfd755b217b156a014e9c6f2ad1e908fb02f350f339565_0","lines":"      tmp_buf = (char *) xmalloc (useful_bytes_in_block);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":655,"col":7,"offset":19374},"end":{"line":655,"col":58,"offset":19425},"extra":{"metavars":{"$FUN":{"start":{"line":655,"col":7,"offset":19374},"end":{"line":655,"col":11,"offset":19378},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"445486eea66a5e4138fff306a4fa89b82887366b26881a71569e047d7785de17a5791f5b9bdb612f2b876051e51eb43978c9e64f77bc3662b837c2abdb6f6664_1","lines":"      read (out_file_des, tmp_buf, useful_bytes_in_block);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":655,"col":7,"offset":19374},"end":{"line":655,"col":58,"offset":19425},"extra":{"metavars":{"$FD":{"start":{"line":655,"col":13,"offset":19380},"end":{"line":655,"col":25,"offset":19392},"abstract_content":"out_file_des"},"$BUF":{"start":{"line":655,"col":27,"offset":19394},"end":{"line":655,"col":34,"offset":19401},"abstract_content":"tmp_buf","propagated_value":{"svalue_start":{"line":654,"col":17,"offset":19326},"svalue_end":{"line":654,"col":57,"offset":19366},"svalue_abstract_content":"(char*xmalloc(useful_bytes_in_block)"}},"$LEN":{"start":{"line":655,"col":36,"offset":19403},"end":{"line":655,"col":57,"offset":19424},"abstract_content":"useful_bytes_in_block","propagated_value":{"svalue_start":{"line":647,"col":27,"offset":19055},"svalue_end":{"line":647,"col":58,"offset":19086},"svalue_abstract_content":"start_of_header%io_block_size"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"946e0110fd8b74b237114eaba49b620e4da37c47bbebf0288170fb95fea438bfece75f851bc659505ec257cdbc264d7bb3fa818067be32404c94cd77aedd84eb_0","lines":"      read (out_file_des, tmp_buf, useful_bytes_in_block);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":660,"col":7,"offset":19695},"end":{"line":660,"col":22,"offset":19710},"extra":{"metavars":{"$PTR":{"start":{"line":660,"col":13,"offset":19701},"end":{"line":660,"col":20,"offset":19708},"abstract_content":"tmp_buf","propagated_value":{"svalue_start":{"line":654,"col":17,"offset":19326},"svalue_end":{"line":654,"col":57,"offset":19366},"svalue_abstract_content":"(char*xmalloc(useful_bytes_in_block)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"502feafef28ac4a62423e6a453cfa43b8cfe0315fb998c20da208a09a478781ef4aad799565a3bdca10bc604f0435b2e4b20b865e1e94ad4ba95af2ef91915b3_0","lines":"      free (tmp_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":739,"col":31,"offset":21645},"end":{"line":739,"col":66,"offset":21680},"extra":{"metavars":{"$FUN":{"start":{"line":739,"col":31,"offset":21645},"end":{"line":739,"col":38,"offset":21652},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2070bd24e2e7fcdc941dd0eea5b6aed557276ccd27bdacfd1f5c148a14af78598242b034aa3271aab9bfd755b217b156a014e9c6f2ad1e908fb02f350f339565_1","lines":"  temp = (struct inode_val *) xmalloc (sizeof (struct inode_val));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":750,"col":3,"offset":21946},"end":{"line":754,"col":19,"offset":22117},"extra":{"metavars":{"$EXPR1":{"start":{"line":751,"col":7,"offset":21970},"end":{"line":751,"col":17,"offset":21980},"abstract_content":"hash_table"},"$EXPR2":{"start":{"line":751,"col":20,"offset":21983},"end":{"line":752,"col":30,"offset":22053},"abstract_content":"hash_initialize(0 0 inode_val_hasher inode_val_compare 0)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f5c53b03ee994a9917fa65dfd42a1819baecbbedb8a0adc5331e023400081a8b8116780d02bf6076fb65e3c34762ce5532bd4d214b5ba0ba24830505f038e280_0","lines":"  if (!((hash_table\n\t || (hash_table = hash_initialize (0, 0, inode_val_hasher,\n\t\t\t\t\t   inode_val_compare, 0)))\n\t&& (e = hash_insert (hash_table, temp))))\n    xalloc_die ();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":804,"col":10,"offset":23132},"end":{"line":804,"col":74,"offset":23196},"extra":{"metavars":{"$FUN":{"start":{"line":804,"col":10,"offset":23132},"end":{"line":804,"col":17,"offset":23139},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45fbd9068462dbb2459f3a68ca40d602d770e126eb522681194e330f1e577ad74a46fe1d0f16fc0f7ec3466a3eb2d45f107692bb5d9788d85ac9ec25cbdd1b16_0","lines":"    fd = rmtopen (file, O_RDONLY | O_BINARY, MODE_RW, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":808,"col":7,"offset":23241},"end":{"line":809,"col":23,"offset":23328},"extra":{"metavars":{"$FUN":{"start":{"line":808,"col":7,"offset":23241},"end":{"line":808,"col":14,"offset":23248},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45fbd9068462dbb2459f3a68ca40d602d770e126eb522681194e330f1e577ad74a46fe1d0f16fc0f7ec3466a3eb2d45f107692bb5d9788d85ac9ec25cbdd1b16_1","lines":"\tfd = rmtopen (file, O_WRONLY | O_CREAT | O_TRUNC | O_BINARY, MODE_RW,\n\t\t\trsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":811,"col":7,"offset":23347},"end":{"line":811,"col":69,"offset":23409},"extra":{"metavars":{"$FUN":{"start":{"line":811,"col":7,"offset":23347},"end":{"line":811,"col":14,"offset":23354},"abstract_content":"rmtopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45fbd9068462dbb2459f3a68ca40d602d770e126eb522681194e330f1e577ad74a46fe1d0f16fc0f7ec3466a3eb2d45f107692bb5d9788d85ac9ec25cbdd1b16_2","lines":"\tfd = rmtopen (file, O_RDWR | O_BINARY, MODE_RW, rsh_command_option);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":855,"col":12,"offset":24640},"end":{"line":855,"col":33,"offset":24661},"extra":{"metavars":{"$FUN":{"start":{"line":855,"col":12,"offset":24640},"end":{"line":855,"col":17,"offset":24645},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f336d3c100a5c293f8373e2b3ee9bb227bc2a05c4bd70a3ac417fe38beca41d29893aea3b9467a469b37054582e53d6d2f8c0c28cd8c2a1d14925f4f9287974e_0","lines":"  tty_in = fopen (TTY_NAME, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":858,"col":13,"offset":24743},"end":{"line":858,"col":34,"offset":24764},"extra":{"metavars":{"$FUN":{"start":{"line":858,"col":13,"offset":24743},"end":{"line":858,"col":18,"offset":24748},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f336d3c100a5c293f8373e2b3ee9bb227bc2a05c4bd70a3ac417fe38beca41d29893aea3b9467a469b37054582e53d6d2f8c0c28cd8c2a1d14925f4f9287974e_1","lines":"  tty_out = fopen (TTY_NAME, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":875,"col":5,"offset":25312},"end":{"line":875,"col":82,"offset":25389},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"19d1493453d197421947df6fa3196093486247b4548b57c9c95a52bc591fcd7ae9b614084a7ff90e6fdc19ce48c587da8fdf65e7e27943f20c8784b356e5a0ce_0","lines":"    fprintf (tty_out, _(\"Found end of tape.  Load next tape and press RETURN. \"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":877,"col":5,"offset":25402},"end":{"line":877,"col":97,"offset":25494},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"19d1493453d197421947df6fa3196093486247b4548b57c9c95a52bc591fcd7ae9b614084a7ff90e6fdc19ce48c587da8fdf65e7e27943f20c8784b356e5a0ce_1","lines":"    fprintf (tty_out, _(\"Found end of tape.  To continue, type device/file name when ready.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":886,"col":6,"offset":25572},"end":{"line":886,"col":19,"offset":25585},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":886,"col":6,"offset":25572},"end":{"line":886,"col":10,"offset":25576},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dfb0401a073faef06f1810bdca3bfde6ce774c67efa407000f1038790c83d2c4fec43f40d7bfbece2c52e26ba84fb88c1e452ca3e9ceca9755bbdb039c26623e_0","lines":"\tc = getc (tty_in);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":899,"col":8,"offset":25791},"end":{"line":900,"col":64,"offset":25872},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"19d1493453d197421947df6fa3196093486247b4548b57c9c95a52bc591fcd7ae9b614084a7ff90e6fdc19ce48c587da8fdf65e7e27943f20c8784b356e5a0ce_2","lines":"\t      fprintf (tty_out,\n\t\t       _(\"To continue, type device/file name when ready.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":904,"col":14,"offset":25920},"end":{"line":904,"col":42,"offset":25948},"extra":{"metavars":{"$1":{"start":{"line":1,"col":8,"offset":7},"end":{"line":1,"col":9,"offset":8},"abstract_content":"s"},"$FUN":{"start":{"line":904,"col":14,"offset":25920},"end":{"line":904,"col":22,"offset":25928},"abstract_content":"ds_fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"90c7c1311b7bc8cb5db4538d9eab1d65eda3134eafd1ce0f87769737f7f1a96ace6bd16f4d69e5b3a830ce234af3e6333fde712cfc3e2754e4f450fc9ee50827_0","lines":"\t  str_res = ds_fgets (tty_in, &new_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":928,"col":3,"offset":26805},"end":{"line":928,"col":29,"offset":26831},"extra":{"metavars":{"$PTR":{"start":{"line":928,"col":9,"offset":26811},"end":{"line":928,"col":27,"offset":26829},"abstract_content":"new_name.ds_string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bdca33f4b795bb19643e14115e3585430d8d55c84ecafae0f9d85e0e1bab13b2214761e40ca66e16ecf7353495fcc9e29b05328785587d2292324ac913baa0d8_0","lines":"  free (new_name.ds_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":951,"col":7,"offset":27409},"end":{"line":951,"col":38,"offset":27440},"extra":{"metavars":{"$EXPR1":{"start":{"line":951,"col":27,"offset":27429},"end":{"line":951,"col":29,"offset":27431},"abstract_content":"*p"},"$EXPR2":{"start":{"line":951,"col":33,"offset":27435},"end":{"line":951,"col":36,"offset":27438},"abstract_content":"'%'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b1026f8b69a9618c98e9fe578fe4161b0550abf1f9fe0c636d567bf20aacde8d3f70e52f3971615a6425500328a9f25fa2d5aefe2bbd82235888164e8506dd3d_0","lines":"      prev_was_percent = (*p == '%');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":960,"col":20,"offset":27565},"end":{"line":960,"col":31,"offset":27576},"extra":{"metavars":{"$PTR1":{"start":{"line":960,"col":20,"offset":27565},"end":{"line":960,"col":21,"offset":27566},"abstract_content":"p"},"$PTR2":{"start":{"line":960,"col":24,"offset":27569},"end":{"line":960,"col":31,"offset":27576},"abstract_content":"message"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"523c95d279b58bd3bf70219181ca37fa852e103ee2f1bcec9a3c42d8220214aa576e76e9adf91de5e796e28f430dfb1ac482a690895c79740c92926027837b86_0","lines":"      int length = p - message - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":962,"col":39,"offset":27621},"end":{"line":962,"col":59,"offset":27641},"extra":{"metavars":{"$FUN":{"start":{"line":962,"col":39,"offset":27621},"end":{"line":962,"col":46,"offset":27628},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2070bd24e2e7fcdc941dd0eea5b6aed557276ccd27bdacfd1f5c148a14af78598242b034aa3271aab9bfd755b217b156a014e9c6f2ad1e908fb02f350f339565_2","lines":"      new_media_message_with_number = xmalloc (length + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":963,"col":7,"offset":27649},"end":{"line":963,"col":63,"offset":27705},"extra":{"metavars":{"$FUN":{"start":{"line":963,"col":7,"offset":27649},"end":{"line":963,"col":14,"offset":27656},"abstract_content":"strncpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210f48bcd257554c3cdf2f8cbebec99e2ff8d938f49d562c5ed56135599dc4c8c191d560ec92eeeda01db078eb26b97282e10d6fda44e8850e5b1e5387d92a18_0","lines":"      strncpy (new_media_message_with_number, message, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":963,"col":7,"offset":27649},"end":{"line":963,"col":63,"offset":27705},"extra":{"metavars":{"$DST":{"start":{"line":963,"col":16,"offset":27658},"end":{"line":963,"col":45,"offset":27687},"abstract_content":"new_media_message_with_number","propagated_value":{"svalue_start":{"line":962,"col":39,"offset":27621},"svalue_end":{"line":962,"col":59,"offset":27641},"svalue_abstract_content":"xmalloc(length+1)"}},"$SRC":{"start":{"line":963,"col":47,"offset":27689},"end":{"line":963,"col":54,"offset":27696},"abstract_content":"message"},"$LEN":{"start":{"line":963,"col":56,"offset":27698},"end":{"line":963,"col":62,"offset":27704},"abstract_content":"length","propagated_value":{"svalue_start":{"line":960,"col":20,"offset":27565},"svalue_end":{"line":960,"col":35,"offset":27580},"svalue_abstract_content":"p-message-1"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7dc270b6bcece7e2f248d9f7e0e843552d4ba55504aa9d8b211977e810a92186a94d1f2ea2315b2b413043e547ac6952344607056769909f09f501445c24c233_0","lines":"      strncpy (new_media_message_with_number, message, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":966,"col":40,"offset":27829},"end":{"line":966,"col":60,"offset":27849},"extra":{"metavars":{"$FUN":{"start":{"line":966,"col":40,"offset":27829},"end":{"line":966,"col":47,"offset":27836},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2070bd24e2e7fcdc941dd0eea5b6aed557276ccd27bdacfd1f5c148a14af78598242b034aa3271aab9bfd755b217b156a014e9c6f2ad1e908fb02f350f339565_3","lines":"      new_media_message_after_number = xmalloc (length + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":967,"col":7,"offset":27857},"end":{"line":967,"col":53,"offset":27903},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"c730b23154f6c3eca66b0ea4a7baf6700d8bfdfa830276bd0ce5a36b3a854b275aff2bef8aa6631adc607a0538c6cd4a16761357158144fb8211efcda3925d5e_0","lines":"      strcpy (new_media_message_after_number, p + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":967,"col":7,"offset":27857},"end":{"line":967,"col":53,"offset":27903},"extra":{"metavars":{"$FUN":{"start":{"line":967,"col":7,"offset":27857},"end":{"line":967,"col":13,"offset":27863},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a0bbb2f3f97f0654f14080c61e1255326e42362f7fb739dbe81a0f297296fd16d817dafa823557d0572f883dd65d56cabe0089e31877c21ecd84984f076fa65d_0","lines":"      strcpy (new_media_message_after_number, p + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":988,"col":8,"offset":28587},"end":{"line":988,"col":30,"offset":28609},"extra":{"metavars":{"$FUN":{"start":{"line":988,"col":8,"offset":28587},"end":{"line":988,"col":15,"offset":28594},"abstract_content":"symlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f9ebb2b3435f4f64937c7155ca957b90918489515f101c926e4a60ff46087b2873eb6b901b1feaa4b720f08cf3fa1bf028f3929125213eba69d305bc48bda187_0","lines":"  rc = symlink (name1, name2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1021,"col":10,"offset":29265},"end":{"line":1021,"col":22,"offset":29277},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1021,"col":10,"offset":29265},"end":{"line":1021,"col":18,"offset":29273},"abstract_content":"nwritten"},"$SIGNED":{"start":{"line":1021,"col":21,"offset":29276},"end":{"line":1021,"col":22,"offset":29277},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5203159c16471be4e580326c5557141b1f79a4156acbed9c52b4344779dae35a764a911b0af626cc8bf7e41931ca19774739ac7c7df2d53d2828ddb987a79a17_0","lines":"  size_t nwritten = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1044,"col":21,"offset":29718},"end":{"line":1044,"col":36,"offset":29733},"extra":{"metavars":{"$PTR1":{"start":{"line":1044,"col":21,"offset":29718},"end":{"line":1044,"col":24,"offset":29721},"abstract_content":"buf"},"$PTR2":{"start":{"line":1044,"col":27,"offset":29724},"end":{"line":1044,"col":36,"offset":29733},"abstract_content":"start_ptr"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"062696ef0e7a31cd59421c2bce3661a5e872408e47f5cd92f7c839c6c8e35a4ea662db1ac0a894cb287d1f949a9260210fe28c4c9ba000d0a5a826a0ab8f2e9b_0","lines":"\t\t  ssize_t bytes = buf - start_ptr + rest;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1079,"col":37,"offset":30499},"end":{"line":1079,"col":52,"offset":30514},"extra":{"metavars":{"$PTR1":{"start":{"line":1079,"col":37,"offset":30499},"end":{"line":1079,"col":40,"offset":30502},"abstract_content":"buf"},"$PTR2":{"start":{"line":1079,"col":43,"offset":30505},"end":{"line":1079,"col":52,"offset":30514},"abstract_content":"start_ptr"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"062696ef0e7a31cd59421c2bce3661a5e872408e47f5cd92f7c839c6c8e35a4ea662db1ac0a894cb287d1f949a9260210fe28c4c9ba000d0a5a826a0ab8f2e9b_1","lines":"      n = write (fildes, start_ptr, buf - start_ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1158,"col":3,"offset":32496},"end":{"line":1161,"col":28,"offset":32614},"extra":{"metavars":{"$EXPR1":{"start":{"line":1158,"col":7,"offset":32500},"end":{"line":1158,"col":18,"offset":32511},"abstract_content":"hdr->->c_mode"},"$EXPR2":{"start":{"line":1158,"col":21,"offset":32514},"end":{"line":1158,"col":29,"offset":32522},"abstract_content":"CP_IFREG"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"62e4d098765ad06755089c9af451e410df7fcb2c42468a8662b9e263623cfbabb81c39a490ed8da96c87e49167d7614156bb75a96187359f57dcc9d442386db7_0","lines":"  if (hdr->c_mode & CP_IFREG)\n    st->st_mode |= S_IFREG;\n  else if (hdr->c_mode & CP_IFDIR)\n    st->st_mode |= S_IFDIR;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1160,"col":8,"offset":32559},"end":{"line":1161,"col":28,"offset":32614},"extra":{"metavars":{"$EXPR1":{"start":{"line":1160,"col":12,"offset":32563},"end":{"line":1160,"col":23,"offset":32574},"abstract_content":"hdr->->c_mode"},"$EXPR2":{"start":{"line":1160,"col":26,"offset":32577},"end":{"line":1160,"col":34,"offset":32585},"abstract_content":"CP_IFDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f7b24fa7d51ad45ba1543a91acfc63facc44eace1d07ce0dac6ba3d624c5fe489e89323eaee2eca543e08ea5eb56d6679275e36b02b33fbe5897372f593b2d05_0","lines":"  else if (hdr->c_mode & CP_IFDIR)\n    st->st_mode |= S_IFDIR;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1205,"col":12,"offset":33577},"end":{"line":1205,"col":33,"offset":33598},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":1205,"col":12,"offset":33577},"end":{"line":1205,"col":18,"offset":33583},"abstract_content":"fchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f309547595263db28a15a5d399be358269b838d8492f0e4ca70672f00e5657409b0eb8368f4220366ae4f2bc936edb137fc677499a3f470bcc7a35b258d5c178_0","lines":"    return fchown (fd, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1207,"col":12,"offset":33618},"end":{"line":1207,"col":34,"offset":33640},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"own"},"$FUN":{"start":{"line":1207,"col":12,"offset":33618},"end":{"line":1207,"col":17,"offset":33623},"abstract_content":"chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"89cac7dd65fb57f8526030ab60356e233b3886225e4120356efea1c52ae664581f3ee3a32ea16e94fe58d7dd6dedd498c03015ebc50fc50126854883655b93fd_0","lines":"    return chown (name, uid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1214,"col":12,"offset":33749},"end":{"line":1214,"col":29,"offset":33766},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$FUN":{"start":{"line":1214,"col":12,"offset":33749},"end":{"line":1214,"col":18,"offset":33755},"abstract_content":"fchmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"de7dbe0d76df94133fd22843b83cf1580fbe1b2820a079ca17926a1e2da2e9ca3c4dcb20a3c9574f958a313932eb1a2559391969b18de7afb6d43bec5dc6b86c_0","lines":"    return fchmod (fd, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1216,"col":12,"offset":33786},"end":{"line":1216,"col":30,"offset":33804},"extra":{"metavars":{"$5":{"start":{"line":1,"col":3,"offset":2},"end":{"line":1,"col":6,"offset":5},"abstract_content":"mod"},"$FUN":{"start":{"line":1216,"col":12,"offset":33786},"end":{"line":1216,"col":17,"offset":33791},"abstract_content":"chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ca785122ddbe06511aa35db4483518745d42836dfce2aa6c818ea5cec39591f4422812a62ed76d62125bbbc210e27ff0df63bb5ec7975970b74a434e816fa03_0","lines":"    return chmod (name, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1226,"col":12,"offset":33994},"end":{"line":1226,"col":58,"offset":34040},"extra":{"metavars":{"$5":{"start":{"line":1,"col":13,"offset":12},"end":{"line":1,"col":16,"offset":15},"abstract_content":"own"},"$FUN":{"start":{"line":1226,"col":12,"offset":33994},"end":{"line":1226,"col":27,"offset":34009},"abstract_content":"fchown_or_chown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b72bac912c9fc651e5f118c3583074d6b41fafbe1d8795698f04724e186cfbf15007203460cc0bebe051b574b59fa7abcd502a0e68aef15ca6a5c08001e14f4_0","lines":"      if ((fchown_or_chown (fd, header->c_name, uid, gid) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1231,"col":7,"offset":34191},"end":{"line":1231,"col":59,"offset":34243},"extra":{"metavars":{"$5":{"start":{"line":1,"col":13,"offset":12},"end":{"line":1,"col":16,"offset":15},"abstract_content":"mod"},"$FUN":{"start":{"line":1231,"col":7,"offset":34191},"end":{"line":1231,"col":22,"offset":34206},"abstract_content":"fchmod_or_chmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8398cf0a40b3a3e34ccae7b5b1b6fba519309040c11300389b87374697af8c65168d87597e1c99448de08eaf17978de8f5e702b090802f363ed90ddb1fff2f13_0","lines":"  if (fchmod_or_chmod (fd, header->c_name, header->c_mode) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1259,"col":24,"offset":35033},"end":{"line":1259,"col":78,"offset":35087},"extra":{"metavars":{"$FUN":{"start":{"line":1259,"col":24,"offset":35033},"end":{"line":1259,"col":33,"offset":35042},"abstract_content":"x2realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55f8b0561e25df95ab1a1c2867a6ebf5b9df84d53923f7367f96ac5258f55d45a3d07813f18586f0d1189b96c65c4c8e0e362ccf30d4994aa54ff12da3eb58cd_0","lines":"    file_hdr->c_name = x2realloc (file_hdr->c_name, &file_hdr->c_name_buflen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1265,"col":10,"offset":35170},"end":{"line":1265,"col":33,"offset":35193},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1265,"col":10,"offset":35170},"end":{"line":1265,"col":13,"offset":35173},"abstract_content":"len"},"$SIGNED":{"start":{"line":1265,"col":32,"offset":35192},"end":{"line":1265,"col":33,"offset":35193},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"770850d464942dd34a3bc9906f967877614ea8bde384ff32f4ed2d6e427cf3d03ca3f10e445aa591ecbe69613294b3e4b73fb37ae19581d78dfdd86a7713fe82_0","lines":"  size_t len = strlen (name) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1269,"col":3,"offset":35267},"end":{"line":1269,"col":40,"offset":35304},"extra":{"metavars":{"$FUN":{"start":{"line":1269,"col":3,"offset":35267},"end":{"line":1269,"col":10,"offset":35274},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dbf35bf9576de1dd0de356b0e8c8f35b53c54e6beca2fce9b47db8838e884feeeeb64582055e2a60a476b4a43d1064e843a9669ebb69791c5093ceba11a3d0af_1","lines":"  memmove (file_hdr->c_name, name, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1294,"col":5,"offset":36213},"end":{"line":1294,"col":48,"offset":36256},"extra":{"metavars":{"$FUN":{"start":{"line":1294,"col":5,"offset":36213},"end":{"line":1294,"col":12,"offset":36220},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dbf35bf9576de1dd0de356b0e8c8f35b53c54e6beca2fce9b47db8838e884feeeeb64582055e2a60a476b4a43d1064e843a9669ebb69791c5093ceba11a3d0af_2","lines":"    memmove (name, p, (size_t)(strlen (p) + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1325,"col":5,"offset":37272},"end":{"line":1325,"col":67,"offset":37334},"extra":{"metavars":{"$FUN":{"start":{"line":1325,"col":5,"offset":37272},"end":{"line":1325,"col":12,"offset":37279},"abstract_content":"xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2070bd24e2e7fcdc941dd0eea5b6aed557276ccd27bdacfd1f5c148a14af78598242b034aa3271aab9bfd755b217b156a014e9c6f2ad1e908fb02f350f339565_4","lines":"    xmalloc (sizeof (struct delayed_set_stat) + file_name_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1327,"col":3,"offset":37376},"end":{"line":1327,"col":53,"offset":37426},"extra":{"metavars":{"$FUN":{"start":{"line":1327,"col":3,"offset":37376},"end":{"line":1327,"col":9,"offset":37382},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_4","lines":"  memcpy (&data->stat, file_stat, sizeof data->stat);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1329,"col":3,"offset":37472},"end":{"line":1329,"col":48,"offset":37517},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"c730b23154f6c3eca66b0ea4a7baf6700d8bfdfa830276bd0ce5a36b3a854b275aff2bef8aa6631adc607a0538c6cd4a16761357158144fb8211efcda3925d5e_1","lines":"  strcpy (data->stat.c_name, file_stat->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1329,"col":3,"offset":37472},"end":{"line":1329,"col":48,"offset":37517},"extra":{"metavars":{"$FUN":{"start":{"line":1329,"col":3,"offset":37472},"end":{"line":1329,"col":9,"offset":37478},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a0bbb2f3f97f0654f14080c61e1255326e42362f7fb739dbe81a0f297296fd16d817dafa823557d0572f883dd65d56cabe0089e31877c21ecd84984f076fa65d_1","lines":"  strcpy (data->stat.c_name, file_stat->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1342,"col":3,"offset":37785},"end":{"line":1342,"col":48,"offset":37830},"extra":{"metavars":{"$FUN":{"start":{"line":1342,"col":3,"offset":37785},"end":{"line":1342,"col":22,"offset":37804},"abstract_content":"delay_cpio_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03dbee7359fd2541d1edf547e923478a7b7ae240e0d403aebb932d083cc6b8be264791d030f1ba663d0b995c10d2955aec8374ce14b43e3666f0555dbf6695f3_0","lines":"  delay_cpio_set_stat (&fs, invert_permissions);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1356,"col":11,"offset":38306},"end":{"line":1356,"col":40,"offset":38335},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"a46a741e9f51a7d209490d4a2c365f0b5478c1687c00a201c24439377c4c3250e955fd148bca9b74b0af9537db457b9223aec8e36a57a3129a1b2507dbe28a0c_0","lines":"      if (stat (data->stat.c_name, &st) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1356,"col":11,"offset":38306},"end":{"line":1356,"col":40,"offset":38335},"extra":{"metavars":{"$FUN":{"start":{"line":1356,"col":11,"offset":38306},"end":{"line":1356,"col":15,"offset":38310},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6cb072aa0d110f57470c5d59790c5bd57dd9ca1cd95a4549299df9708af9070cb0bdc623d449afd899bac9ab14280e3c89bf95462840c195cb6243026aca7cf6_0","lines":"      if (stat (data->stat.c_name, &st) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1388,"col":4,"offset":39073},"end":{"line":1389,"col":46,"offset":39149},"extra":{"metavars":{"$FUN":{"start":{"line":1388,"col":4,"offset":39073},"end":{"line":1388,"col":10,"offset":39079},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2f348ea2fba4f4363e4fafbec3c14bb8e6ef5eb150749d5c21618175ffec055e2dd81baee65c5b8b739cdfbf492526430495862d64dba58bcb61ec6dce12220_5","lines":"\t  memcpy (&data->stat, file_hdr,\n\t\t  offsetof (struct cpio_file_stat, c_name));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1408,"col":7,"offset":39495},"end":{"line":1408,"col":19,"offset":39507},"extra":{"metavars":{"$PTR":{"start":{"line":1408,"col":13,"offset":39501},"end":{"line":1408,"col":17,"offset":39505},"abstract_content":"data","propagated_value":{"svalue_start":{"line":1401,"col":39,"offset":39297},"svalue_end":{"line":1401,"col":60,"offset":39318},"svalue_abstract_content":"delayed_set_stat_head"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8930780160e88768c97b7d39ecd526bfa9e261a21830bff68c0ac5de1918bbb0b4130135d8aec326815cc1f986fc777ff1217cc9d6758801d755024dda24cffb_0","lines":"      free (data);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1419,"col":3,"offset":39648},"end":{"line":1432,"col":6,"offset":39925},"extra":{"metavars":{"$EXPR1":{"start":{"line":1419,"col":9,"offset":39654},"end":{"line":1419,"col":25,"offset":39670},"abstract_content":"file_hdr->->c_mode"},"$EXPR2":{"start":{"line":1419,"col":28,"offset":39673},"end":{"line":1419,"col":35,"offset":39680},"abstract_content":"S_IWUSR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8a9be30885d2417ad879433829df13fce2417938608624fd1d11b1d49c682f719c88f7af42b350542bd61aea946de6ac7da07a5d53f4dffc770d83bed5b97158_0","lines":"  if (!(file_hdr->c_mode & S_IWUSR))\n    {\n      rc = mkdir (file_hdr->c_name, mode | S_IWUSR);\n      if (rc == 0)\n\t{\n\t  delay_cpio_set_stat (file_hdr, 0);\n\t  *setstat_delayed = 1;\n\t}\n    }\n  else\n    {\n      rc = mkdir (file_hdr->c_name, mode);\n      *setstat_delayed = 0;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1421,"col":12,"offset":39700},"end":{"line":1421,"col":52,"offset":39740},"extra":{"metavars":{"$FUN":{"start":{"line":1421,"col":12,"offset":39700},"end":{"line":1421,"col":17,"offset":39705},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8e428cf70ec94bd7ca4a82cff9b4e2b6c5d876ce2952e3d017848f0201696ed8f6d85b418a697604b4bf43b2677bd7a489eaef74eed4adef1380ccc82aa853db_0","lines":"      rc = mkdir (file_hdr->c_name, mode | S_IWUSR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1424,"col":4,"offset":39767},"end":{"line":1424,"col":37,"offset":39800},"extra":{"metavars":{"$FUN":{"start":{"line":1424,"col":4,"offset":39767},"end":{"line":1424,"col":23,"offset":39786},"abstract_content":"delay_cpio_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03dbee7359fd2541d1edf547e923478a7b7ae240e0d403aebb932d083cc6b8be264791d030f1ba663d0b995c10d2955aec8374ce14b43e3666f0555dbf6695f3_1","lines":"\t  delay_cpio_set_stat (file_hdr, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1430,"col":12,"offset":39860},"end":{"line":1430,"col":42,"offset":39890},"extra":{"metavars":{"$FUN":{"start":{"line":1430,"col":12,"offset":39860},"end":{"line":1430,"col":17,"offset":39865},"abstract_content":"mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8e428cf70ec94bd7ca4a82cff9b4e2b6c5d876ce2952e3d017848f0201696ed8f6d85b418a697604b4bf43b2677bd7a489eaef74eed4adef1380ccc82aa853db_1","lines":"      rc = mkdir (file_hdr->c_name, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1459,"col":11,"offset":40630},"end":{"line":1459,"col":50,"offset":40669},"extra":{"metavars":{"$FUN":{"start":{"line":1459,"col":11,"offset":40630},"end":{"line":1459,"col":21,"offset":40640},"abstract_content":"cpio_mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d84ab666d329a1881fdd880109556aea9c744f2f755ae8f3dfd3b064ea926abbf0d5cbcd86a3781f4e206fe09474ae22f73b3f4824f8153a7f8efa6f3a98d9e4_0","lines":"    res = cpio_mkdir (file_hdr, &setstat_delayed);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1465,"col":13,"offset":40792},"end":{"line":1465,"col":52,"offset":40831},"extra":{"metavars":{"$FUN":{"start":{"line":1465,"col":13,"offset":40792},"end":{"line":1465,"col":23,"offset":40802},"abstract_content":"cpio_mkdir"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d84ab666d329a1881fdd880109556aea9c744f2f755ae8f3dfd3b064ea926abbf0d5cbcd86a3781f4e206fe09474ae22f73b3f4824f8153a7f8efa6f3a98d9e4_1","lines":"      res = cpio_mkdir (file_hdr, &setstat_delayed);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1480,"col":11,"offset":41234},"end":{"line":1480,"col":47,"offset":41270},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"a46a741e9f51a7d209490d4a2c365f0b5478c1687c00a201c24439377c4c3250e955fd148bca9b74b0af9537db457b9223aec8e36a57a3129a1b2507dbe28a0c_1","lines":"      if (lstat (file_hdr->c_name, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1480,"col":11,"offset":41234},"end":{"line":1480,"col":47,"offset":41270},"extra":{"metavars":{"$FUN":{"start":{"line":1480,"col":11,"offset":41234},"end":{"line":1480,"col":16,"offset":41239},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d3066dacf574494e9b366eedfe1f36c716c8d91c33daecf468bf9b68902314ce739817302732566d80de4a40bf6674771caa85bb4608ab86a32330905209af59_0","lines":"      if (lstat (file_hdr->c_name, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1493,"col":27,"offset":41504},"end":{"line":1493,"col":61,"offset":41538},"extra":{"metavars":{"$FUN":{"start":{"line":1493,"col":27,"offset":41504},"end":{"line":1493,"col":50,"offset":41527},"abstract_content":"repair_delayed_set_stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0cb68deca7572b60378e903b46c04492beacd930a254ba96683a02561d582d565ce7229eaa13a499eb97c723ec84f5af5009b119b9e3fd8a93e2c0098cbcd563_0","lines":"  if (!setstat_delayed && repair_delayed_set_stat (file_hdr))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1505,"col":4,"offset":41730},"end":{"line":1508,"col":29,"offset":41889},"extra":{"metavars":{"$EXPR1":{"start":{"line":1506,"col":6,"offset":41783},"end":{"line":1506,"col":17,"offset":41794},"abstract_content":"warn_option"},"$EXPR2":{"start":{"line":1506,"col":20,"offset":41797},"end":{"line":1506,"col":38,"offset":41815},"abstract_content":"CPIO_WARN_INTERDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"76bbd53bc3480885578531621a0b783bb9eb8098636ea74aa8a90462d59c0a6765231470776e03a6d301a49f81966b0ff5af0cac4e0ca6f1761eba35510c8390_1","lines":"\t  if (make_path (change_directory_option, -1, -1,\n\t\t\t (warn_option & CPIO_WARN_INTERDIR) ?\n\t\t\t _(\"Creating directory `%s'\") : NULL))\n\t    exit (PAXEXIT_FAILURE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":1543,"col":3,"offset":42480},"end":{"line":1543,"col":27,"offset":42504},"extra":{"metavars":{"$PTR":{"start":{"line":1543,"col":9,"offset":42486},"end":{"line":1543,"col":25,"offset":42502},"abstract_content":"file_hdr->->c_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8a2bfd2d4b22651398a0f5f234343e417c04aaf15346fd810b3d6902d0fa89a5c86b7143d04d4f4bbc03923e9507aad0f9df9c130b2b4b1cb6b03b993bbe94df_0","lines":"  free (file_hdr->c_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":44,"col":7,"offset":0},"end":{"line":44,"col":13,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":47,"col":30,"offset":0},"end":{"line":47,"col":31,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c:44:\n `new ==` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":44,"col":7,"offset":0},"end":{"line":44,"col":13,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","start":{"line":47,"col":30,"offset":0},"end":{"line":47,"col":31,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","start":{"line":43,"col":5,"offset":0},"end":{"line":43,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c:43:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","start":{"line":43,"col":5,"offset":0},"end":{"line":43,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":43,"col":5,"offset":0},"end":{"line":43,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c:43:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":43,"col":5,"offset":0},"end":{"line":43,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","start":{"line":47,"col":1,"offset":0},"end":{"line":47,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":40,"col":8,"offset":0},"end":{"line":40,"col":31,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":34,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":50,"col":11,"offset":0},"end":{"line":54,"col":34,"offset":124}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":57,"col":8,"offset":0},"end":{"line":57,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":57,"col":21,"offset":0},"end":{"line":57,"col":22,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":58,"col":12,"offset":0},"end":{"line":58,"col":36,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":76,"col":12,"offset":0},"end":{"line":76,"col":35,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":87,"col":8,"offset":0},"end":{"line":87,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":87,"col":25,"offset":0},"end":{"line":87,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":101,"col":9,"offset":0},"end":{"line":101,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":102,"col":10,"offset":0},"end":{"line":102,"col":13,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":103,"col":15,"offset":0},"end":{"line":103,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":104,"col":12,"offset":0},"end":{"line":104,"col":15,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h:26:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":40,"col":8,"offset":0},"end":{"line":40,"col":31,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":44,"col":1,"offset":0},"end":{"line":44,"col":34,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":50,"col":11,"offset":0},"end":{"line":54,"col":34,"offset":124}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":57,"col":8,"offset":0},"end":{"line":57,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":57,"col":21,"offset":0},"end":{"line":57,"col":22,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":58,"col":12,"offset":0},"end":{"line":58,"col":36,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":76,"col":12,"offset":0},"end":{"line":76,"col":35,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":87,"col":8,"offset":0},"end":{"line":87,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":87,"col":25,"offset":0},"end":{"line":87,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":101,"col":9,"offset":0},"end":{"line":101,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":102,"col":10,"offset":0},"end":{"line":102,"col":13,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":103,"col":15,"offset":0},"end":{"line":103,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","start":{"line":104,"col":12,"offset":0},"end":{"line":104,"col":15,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":48,"col":1,"offset":0},"end":{"line":48,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":58,"col":1,"offset":0},"end":{"line":58,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":75,"col":18,"offset":0},"end":{"line":75,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":84,"col":18,"offset":0},"end":{"line":84,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":96,"col":1,"offset":0},"end":{"line":96,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":107,"col":1,"offset":0},"end":{"line":107,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":6,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":6,"offset":5}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h:39:\n `rotl64` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":48,"col":1,"offset":0},"end":{"line":48,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":58,"col":1,"offset":0},"end":{"line":58,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":75,"col":18,"offset":0},"end":{"line":75,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":84,"col":18,"offset":0},"end":{"line":84,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":96,"col":1,"offset":0},"end":{"line":96,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":107,"col":1,"offset":0},"end":{"line":107,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":6,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":6,"offset":5}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":56,"col":5,"offset":0},"end":{"line":56,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":8,"offset":7}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c:56:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":56,"col":5,"offset":0},"end":{"line":56,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","start":{"line":125,"col":1,"offset":0},"end":{"line":125,"col":8,"offset":7}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":108,"col":1,"offset":0},"end":{"line":108,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":110,"col":1,"offset":0},"end":{"line":111,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":113,"col":1,"offset":0},"end":{"line":114,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":116,"col":1,"offset":0},"end":{"line":117,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":121,"col":1,"offset":0},"end":{"line":121,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":123,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":126,"col":1,"offset":0},"end":{"line":126,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":144,"col":1,"offset":0},"end":{"line":144,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":146,"col":1,"offset":0},"end":{"line":147,"col":13,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":149,"col":1,"offset":0},"end":{"line":150,"col":15,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":152,"col":1,"offset":0},"end":{"line":153,"col":15,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":159,"col":1,"offset":0},"end":{"line":160,"col":14,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":167,"col":40,"offset":0},"end":{"line":167,"col":43,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c:108:\n `#ifdef` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":108,"col":1,"offset":0},"end":{"line":108,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":110,"col":1,"offset":0},"end":{"line":111,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":113,"col":1,"offset":0},"end":{"line":114,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":116,"col":1,"offset":0},"end":{"line":117,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":121,"col":1,"offset":0},"end":{"line":121,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":123,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":126,"col":1,"offset":0},"end":{"line":126,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":144,"col":1,"offset":0},"end":{"line":144,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":146,"col":1,"offset":0},"end":{"line":147,"col":13,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":149,"col":1,"offset":0},"end":{"line":150,"col":15,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":152,"col":1,"offset":0},"end":{"line":153,"col":15,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":159,"col":1,"offset":0},"end":{"line":160,"col":14,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","start":{"line":167,"col":40,"offset":0},"end":{"line":167,"col":43,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":269,"col":1,"offset":0},"end":{"line":269,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":405,"col":1,"offset":0},"end":{"line":405,"col":11,"offset":10}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c:269:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":269,"col":1,"offset":0},"end":{"line":269,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","start":{"line":405,"col":1,"offset":0},"end":{"line":405,"col":11,"offset":10}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":123,"col":1,"offset":0},"end":{"line":123,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":364,"col":9,"offset":0},"end":{"line":364,"col":10,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c:123:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":123,"col":1,"offset":0},"end":{"line":123,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","start":{"line":364,"col":9,"offset":0},"end":{"line":364,"col":10,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":431,"col":1,"offset":0},"end":{"line":431,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":714,"col":53,"offset":0},"end":{"line":714,"col":54,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c:431:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":431,"col":1,"offset":0},"end":{"line":431,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","start":{"line":714,"col":53,"offset":0},"end":{"line":714,"col":54,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":34,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":36,"col":10,"offset":0},"end":{"line":40,"col":23,"offset":130}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":34,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":35,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":318,"col":5,"offset":0},"end":{"line":319,"col":5,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":319,"col":7,"offset":0},"end":{"line":319,"col":22,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":24,"offset":0},"end":{"line":321,"col":38,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":53,"offset":0},"end":{"line":321,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":59,"offset":0},"end":{"line":321,"col":62,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":322,"col":40,"offset":0},"end":{"line":322,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":324,"col":1,"offset":0},"end":{"line":325,"col":69,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":336,"col":5,"offset":0},"end":{"line":338,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":342,"col":79,"offset":0},"end":{"line":342,"col":80,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":345,"col":1,"offset":0},"end":{"line":345,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":362,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":367,"col":73,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":368,"col":43,"offset":0},"end":{"line":368,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":384,"col":26,"offset":538}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":385,"col":60,"offset":0},"end":{"line":385,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":6,"offset":0},"end":{"line":395,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":23,"offset":0},"end":{"line":395,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":30,"offset":0},"end":{"line":395,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":44,"offset":0},"end":{"line":395,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":401,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":75,"offset":97}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":408,"col":21,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":420,"col":1,"offset":0},"end":{"line":420,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":423,"col":1,"offset":0},"end":{"line":423,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":436,"col":1,"offset":0},"end":{"line":438,"col":7,"offset":114}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":440,"col":1,"offset":0},"end":{"line":440,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":441,"col":53,"offset":0},"end":{"line":441,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":443,"col":1,"offset":0},"end":{"line":445,"col":19,"offset":95}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":20,"offset":38}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":464,"col":1,"offset":0},"end":{"line":465,"col":23,"offset":99}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":470,"col":1,"offset":0},"end":{"line":470,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":471,"col":55,"offset":0},"end":{"line":471,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":472,"col":1,"offset":0},"end":{"line":479,"col":32,"offset":236}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":488,"col":5,"offset":0},"end":{"line":489,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":62,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":494,"col":52,"offset":0},"end":{"line":494,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":496,"col":6,"offset":69}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":517,"col":1,"offset":0},"end":{"line":517,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":523,"col":5,"offset":0},"end":{"line":524,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":524,"col":7,"offset":0},"end":{"line":524,"col":21,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":525,"col":38,"offset":0},"end":{"line":525,"col":52,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":525,"col":67,"offset":0},"end":{"line":525,"col":71,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":526,"col":54,"offset":0},"end":{"line":526,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":528,"col":1,"offset":0},"end":{"line":528,"col":74,"offset":73}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":539,"col":5,"offset":0},"end":{"line":541,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":545,"col":1,"offset":0},"end":{"line":545,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":546,"col":53,"offset":0},"end":{"line":546,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":547,"col":1,"offset":0},"end":{"line":550,"col":63,"offset":155}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":551,"col":53,"offset":0},"end":{"line":551,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":553,"col":1,"offset":0},"end":{"line":554,"col":8,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":565,"col":5,"offset":0},"end":{"line":566,"col":5,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":566,"col":7,"offset":0},"end":{"line":566,"col":22,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":567,"col":39,"offset":0},"end":{"line":567,"col":53,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":567,"col":68,"offset":0},"end":{"line":567,"col":72,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":568,"col":55,"offset":0},"end":{"line":568,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":570,"col":1,"offset":0},"end":{"line":570,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":581,"col":5,"offset":0},"end":{"line":583,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":587,"col":1,"offset":0},"end":{"line":587,"col":73,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":588,"col":52,"offset":0},"end":{"line":588,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":589,"col":1,"offset":0},"end":{"line":592,"col":73,"offset":174}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":593,"col":52,"offset":0},"end":{"line":593,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":596,"col":1,"offset":0},"end":{"line":597,"col":8,"offset":87}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":608,"col":5,"offset":0},"end":{"line":609,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":609,"col":7,"offset":0},"end":{"line":609,"col":21,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":24,"offset":0},"end":{"line":611,"col":38,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":53,"offset":0},"end":{"line":611,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":65,"offset":0},"end":{"line":611,"col":68,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":612,"col":40,"offset":0},"end":{"line":612,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":614,"col":1,"offset":0},"end":{"line":615,"col":71,"offset":102}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":626,"col":1,"offset":0},"end":{"line":627,"col":20,"offset":37}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":636,"col":9,"offset":0},"end":{"line":638,"col":7,"offset":77}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":682,"col":14,"offset":0},"end":{"line":682,"col":59,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":694,"col":1,"offset":0},"end":{"line":694,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":6,"offset":0},"end":{"line":699,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":24,"offset":0},"end":{"line":699,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":31,"offset":0},"end":{"line":699,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":46,"offset":0},"end":{"line":699,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":704,"col":1,"offset":0},"end":{"line":705,"col":77,"offset":137}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":706,"col":56,"offset":0},"end":{"line":706,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":707,"col":1,"offset":0},"end":{"line":708,"col":78,"offset":138}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":710,"col":8,"offset":0},"end":{"line":710,"col":24,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":711,"col":40,"offset":0},"end":{"line":711,"col":54,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":712,"col":43,"offset":0},"end":{"line":712,"col":66,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":712,"col":68,"offset":0},"end":{"line":712,"col":71,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":713,"col":56,"offset":0},"end":{"line":713,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":715,"col":1,"offset":0},"end":{"line":718,"col":22,"offset":169}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h:24:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":34,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":36,"col":10,"offset":0},"end":{"line":40,"col":23,"offset":130}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":34,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":35,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":318,"col":5,"offset":0},"end":{"line":319,"col":5,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":319,"col":7,"offset":0},"end":{"line":319,"col":22,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":24,"offset":0},"end":{"line":321,"col":38,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":53,"offset":0},"end":{"line":321,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":321,"col":59,"offset":0},"end":{"line":321,"col":62,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":322,"col":40,"offset":0},"end":{"line":322,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":324,"col":1,"offset":0},"end":{"line":325,"col":69,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":336,"col":5,"offset":0},"end":{"line":338,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":342,"col":79,"offset":0},"end":{"line":342,"col":80,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":345,"col":1,"offset":0},"end":{"line":345,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":362,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":367,"col":73,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":368,"col":43,"offset":0},"end":{"line":368,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":384,"col":26,"offset":538}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":385,"col":60,"offset":0},"end":{"line":385,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":6,"offset":0},"end":{"line":395,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":23,"offset":0},"end":{"line":395,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":30,"offset":0},"end":{"line":395,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":395,"col":44,"offset":0},"end":{"line":395,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":401,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":75,"offset":97}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":408,"col":21,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":420,"col":1,"offset":0},"end":{"line":420,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":423,"col":1,"offset":0},"end":{"line":423,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":436,"col":1,"offset":0},"end":{"line":438,"col":7,"offset":114}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":440,"col":1,"offset":0},"end":{"line":440,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":441,"col":53,"offset":0},"end":{"line":441,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":443,"col":1,"offset":0},"end":{"line":445,"col":19,"offset":95}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":20,"offset":38}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":464,"col":1,"offset":0},"end":{"line":465,"col":23,"offset":99}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":470,"col":1,"offset":0},"end":{"line":470,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":471,"col":55,"offset":0},"end":{"line":471,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":472,"col":1,"offset":0},"end":{"line":479,"col":32,"offset":236}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":488,"col":5,"offset":0},"end":{"line":489,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":62,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":494,"col":52,"offset":0},"end":{"line":494,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":496,"col":6,"offset":69}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":517,"col":1,"offset":0},"end":{"line":517,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":523,"col":5,"offset":0},"end":{"line":524,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":524,"col":7,"offset":0},"end":{"line":524,"col":21,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":525,"col":38,"offset":0},"end":{"line":525,"col":52,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":525,"col":67,"offset":0},"end":{"line":525,"col":71,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":526,"col":54,"offset":0},"end":{"line":526,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":528,"col":1,"offset":0},"end":{"line":528,"col":74,"offset":73}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":539,"col":5,"offset":0},"end":{"line":541,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":545,"col":1,"offset":0},"end":{"line":545,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":546,"col":53,"offset":0},"end":{"line":546,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":547,"col":1,"offset":0},"end":{"line":550,"col":63,"offset":155}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":551,"col":53,"offset":0},"end":{"line":551,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":553,"col":1,"offset":0},"end":{"line":554,"col":8,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":565,"col":5,"offset":0},"end":{"line":566,"col":5,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":566,"col":7,"offset":0},"end":{"line":566,"col":22,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":567,"col":39,"offset":0},"end":{"line":567,"col":53,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":567,"col":68,"offset":0},"end":{"line":567,"col":72,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":568,"col":55,"offset":0},"end":{"line":568,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":570,"col":1,"offset":0},"end":{"line":570,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":581,"col":5,"offset":0},"end":{"line":583,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":587,"col":1,"offset":0},"end":{"line":587,"col":73,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":588,"col":52,"offset":0},"end":{"line":588,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":589,"col":1,"offset":0},"end":{"line":592,"col":73,"offset":174}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":593,"col":52,"offset":0},"end":{"line":593,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":596,"col":1,"offset":0},"end":{"line":597,"col":8,"offset":87}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":608,"col":5,"offset":0},"end":{"line":609,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":609,"col":7,"offset":0},"end":{"line":609,"col":21,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":24,"offset":0},"end":{"line":611,"col":38,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":53,"offset":0},"end":{"line":611,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":611,"col":65,"offset":0},"end":{"line":611,"col":68,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":612,"col":40,"offset":0},"end":{"line":612,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":614,"col":1,"offset":0},"end":{"line":615,"col":71,"offset":102}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":626,"col":1,"offset":0},"end":{"line":627,"col":20,"offset":37}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":636,"col":9,"offset":0},"end":{"line":638,"col":7,"offset":77}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":682,"col":14,"offset":0},"end":{"line":682,"col":59,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":694,"col":1,"offset":0},"end":{"line":694,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":6,"offset":0},"end":{"line":699,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":24,"offset":0},"end":{"line":699,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":31,"offset":0},"end":{"line":699,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":699,"col":46,"offset":0},"end":{"line":699,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":704,"col":1,"offset":0},"end":{"line":705,"col":77,"offset":137}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":706,"col":56,"offset":0},"end":{"line":706,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":707,"col":1,"offset":0},"end":{"line":708,"col":78,"offset":138}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":710,"col":8,"offset":0},"end":{"line":710,"col":24,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":711,"col":40,"offset":0},"end":{"line":711,"col":54,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":712,"col":43,"offset":0},"end":{"line":712,"col":66,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":712,"col":68,"offset":0},"end":{"line":712,"col":71,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":713,"col":56,"offset":0},"end":{"line":713,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","start":{"line":715,"col":1,"offset":0},"end":{"line":718,"col":22,"offset":169}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":89,"col":36,"offset":0},"end":{"line":89,"col":48,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":90,"col":36,"offset":0},"end":{"line":90,"col":48,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":91,"col":34,"offset":0},"end":{"line":91,"col":45,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":92,"col":34,"offset":0},"end":{"line":92,"col":45,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":93,"col":28,"offset":0},"end":{"line":93,"col":38,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":94,"col":28,"offset":0},"end":{"line":94,"col":38,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":95,"col":33,"offset":0},"end":{"line":95,"col":44,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":96,"col":33,"offset":0},"end":{"line":96,"col":44,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":98,"col":38,"offset":0},"end":{"line":98,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":99,"col":38,"offset":0},"end":{"line":99,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":103,"col":35,"offset":0},"end":{"line":103,"col":48,"offset":13}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h:89:\n `== SCHAR_MIN` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":89,"col":36,"offset":0},"end":{"line":89,"col":48,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":90,"col":36,"offset":0},"end":{"line":90,"col":48,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":91,"col":34,"offset":0},"end":{"line":91,"col":45,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":92,"col":34,"offset":0},"end":{"line":92,"col":45,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":93,"col":28,"offset":0},"end":{"line":93,"col":38,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":94,"col":28,"offset":0},"end":{"line":94,"col":38,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":95,"col":33,"offset":0},"end":{"line":95,"col":44,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":96,"col":33,"offset":0},"end":{"line":96,"col":44,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":98,"col":38,"offset":0},"end":{"line":98,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":99,"col":38,"offset":0},"end":{"line":99,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","start":{"line":103,"col":35,"offset":0},"end":{"line":103,"col":48,"offset":13}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":23,"col":10,"offset":0},"end":{"line":23,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":42,"col":1,"offset":0},"end":{"line":42,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":53,"col":5,"offset":0},"end":{"line":54,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":76,"col":1,"offset":0},"end":{"line":76,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":79,"col":5,"offset":0},"end":{"line":79,"col":30,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":88,"col":1,"offset":0},"end":{"line":88,"col":30,"offset":29}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":95,"col":1,"offset":0},"end":{"line":95,"col":26,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":103,"col":6,"offset":0},"end":{"line":103,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":103,"col":23,"offset":0},"end":{"line":103,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":107,"col":1,"offset":0},"end":{"line":107,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":112,"col":1,"offset":0},"end":{"line":112,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":118,"col":6,"offset":0},"end":{"line":118,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":118,"col":25,"offset":0},"end":{"line":118,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":186,"col":1,"offset":0},"end":{"line":186,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":207,"col":1,"offset":0},"end":{"line":207,"col":38,"offset":37}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":321,"col":7,"offset":0},"end":{"line":321,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":321,"col":26,"offset":0},"end":{"line":321,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":335,"col":7,"offset":0},"end":{"line":335,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":335,"col":35,"offset":0},"end":{"line":335,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":513,"col":6,"offset":0},"end":{"line":514,"col":9,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":541,"col":6,"offset":0},"end":{"line":542,"col":9,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":557,"col":6,"offset":0},"end":{"line":557,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":557,"col":19,"offset":0},"end":{"line":557,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":24,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":618,"col":1,"offset":0},"end":{"line":619,"col":25,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":625,"col":7,"offset":0},"end":{"line":625,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":625,"col":26,"offset":0},"end":{"line":625,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":635,"col":7,"offset":0},"end":{"line":635,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":635,"col":35,"offset":0},"end":{"line":635,"col":36,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h:23:\n `@GUARD_PREFIX@_STDINT_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":23,"col":10,"offset":0},"end":{"line":23,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":28,"col":1,"offset":0},"end":{"line":28,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":42,"col":1,"offset":0},"end":{"line":42,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":53,"col":5,"offset":0},"end":{"line":54,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":76,"col":1,"offset":0},"end":{"line":76,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":79,"col":5,"offset":0},"end":{"line":79,"col":30,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":88,"col":1,"offset":0},"end":{"line":88,"col":30,"offset":29}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":95,"col":1,"offset":0},"end":{"line":95,"col":26,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":103,"col":6,"offset":0},"end":{"line":103,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":103,"col":23,"offset":0},"end":{"line":103,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":107,"col":1,"offset":0},"end":{"line":107,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":112,"col":1,"offset":0},"end":{"line":112,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":118,"col":6,"offset":0},"end":{"line":118,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":118,"col":25,"offset":0},"end":{"line":118,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":186,"col":1,"offset":0},"end":{"line":186,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":207,"col":1,"offset":0},"end":{"line":207,"col":38,"offset":37}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":321,"col":7,"offset":0},"end":{"line":321,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":321,"col":26,"offset":0},"end":{"line":321,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":335,"col":7,"offset":0},"end":{"line":335,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":335,"col":35,"offset":0},"end":{"line":335,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":513,"col":6,"offset":0},"end":{"line":514,"col":9,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":541,"col":6,"offset":0},"end":{"line":542,"col":9,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":557,"col":6,"offset":0},"end":{"line":557,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":557,"col":19,"offset":0},"end":{"line":557,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":611,"col":1,"offset":0},"end":{"line":612,"col":24,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":618,"col":1,"offset":0},"end":{"line":619,"col":25,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":625,"col":7,"offset":0},"end":{"line":625,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":625,"col":26,"offset":0},"end":{"line":625,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":635,"col":7,"offset":0},"end":{"line":635,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","start":{"line":635,"col":35,"offset":0},"end":{"line":635,"col":36,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":763,"col":13,"offset":0},"end":{"line":763,"col":24,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1260,"col":7,"offset":0},"end":{"line":1260,"col":25,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1263,"col":1,"offset":0},"end":{"line":1263,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1266,"col":5,"offset":0},"end":{"line":1266,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c:151:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":763,"col":13,"offset":0},"end":{"line":763,"col":24,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1260,"col":7,"offset":0},"end":{"line":1260,"col":25,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1263,"col":1,"offset":0},"end":{"line":1263,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","start":{"line":1266,"col":5,"offset":0},"end":{"line":1266,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":225,"col":25,"offset":0},"end":{"line":225,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":226,"col":28,"offset":0},"end":{"line":226,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":549,"col":1,"offset":0},"end":{"line":549,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c:225:\n `argc` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":225,"col":25,"offset":0},"end":{"line":225,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":226,"col":28,"offset":0},"end":{"line":226,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","start":{"line":549,"col":1,"offset":0},"end":{"line":549,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vasnprintf.c:1:\n `/* vsprintf with automatic memory allocation.\n   Copyright (C) 1999, 2002-2017 Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License along\n   with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n/* This file can be parametrized with the following macros:\n     VASNPRINTF         The name of the function being defined.\n     FCHAR_T            The element type of the format string.\n     DCHAR_T            The element type of the destination (result) string.\n     FCHAR_T_ONLY_ASCII Set to 1 to enable verification that all characters\n                        in the format string are ASCII. MUST be set if\n                        FCHAR_T and DCHAR_T are not the same type.\n     DIRECTIVE          Structure denoting a format directive.\n                        Depends on FCHAR_T.\n     DIRECTIVES         Structure denoting the set of format directives of a\n                        format string.  Depends on FCHAR_T.\n     PRINTF_PARSE       Function that parses a format string.\n                        Depends on FCHAR_T.\n     DCHAR_CPY          memcpy like function for DCHAR_T[] arrays.\n     DCHAR_SET          memset like function for DCHAR_T[] arrays.\n     DCHAR_MBSNLEN      mbsnlen like function for DCHAR_T[] arrays.\n     SNPRINTF           The system's snprintf (or similar) function.\n                        This may be either snprintf or swprintf.\n     TCHAR_T            The element type of the argument and result string\n                        of the said SNPRINTF function.  This may be either\n                        char or wchar_t.  The code exploits that\n                        sizeof (TCHAR_T) | sizeof (DCHAR_T) and\n                        alignof (TCHAR_T) <= alignof (DCHAR_T).\n     DCHAR_IS_TCHAR     Set to 1 if DCHAR_T and TCHAR_T are the same type.\n     DCHAR_CONV_FROM_ENCODING A function to convert from char[] to DCHAR[].\n     DCHAR_IS_UINT8_T   Set to 1 if DCHAR_T is uint8_t.\n     DCHAR_IS_UINT16_T  Set to 1 if DCHAR_T is uint16_t.\n     DCHAR_IS_UINT32_T  Set to 1 if DCHAR_T is uint32_t.  */\n\n/* Tell glibc's <stdio.h> to provide a prototype for snprintf().\n   This must come before <config.h> because <config.h> may include\n   <features.h>, and once <features.h> has been included, it's too late.  */\n#ifndef _GNU_SOURCE\n# define _GNU_SOURCE    1\n#endif\n\n#ifndef VASNPRINTF\n# include <config.h>\n#endif\n#ifndef IN_LIBINTL\n# include <alloca.h>\n#endif\n\n/* Specification.  */\n#ifndef VASNPRINTF\n# if WIDE_CHAR_VERSION\n#  include \"vasnwprintf.h\"\n# else\n#  include \"vasnprintf.h\"\n# endif\n#endif\n\n#include <locale.h>     /* localeconv() */\n#include <stdio.h>      /* snprintf(), sprintf() */\n#include <stdlib.h>     /* abort(), malloc(), realloc(), free() */\n#include <string.h>     /* memcpy(), strlen() */\n#include <errno.h>      /* errno */\n#include <limits.h>     /* CHAR_BIT */\n#include <float.h>      /* DBL_MAX_EXP, LDBL_MAX_EXP */\n#if HAVE_NL_LANGINFO\n# include <langinfo.h>\n#endif\n#ifndef VASNPRINTF\n# if WIDE_CHAR_VERSION\n#  include \"wprintf-parse.h\"\n# else\n#  include \"printf-parse.h\"\n# endif\n#endif\n\n/* Checked size_t computations.  */\n#include \"xsize.h\"\n\n#include \"verify.h\"\n\n#if (NEED_PRINTF_DOUBLE || NEED_PRINTF_LONG_DOUBLE) && !defined IN_LIBINTL\n# include <math.h>\n# include \"float+.h\"\n#endif\n\n#if (NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE) && !defined IN_LIBINTL\n# include <math.h>\n# include \"isnand-nolibm.h\"\n#endif\n\n#if (NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE) && !defined IN_LIBINTL\n# include <math.h>\n# include \"isnanl-nolibm.h\"\n# include \"fpucw.h\"\n#endif\n\n#if (NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_DOUBLE) && !defined IN_LIBINTL\n# include <math.h>\n# include \"isnand-nolibm.h\"\n# include \"printf-frexp.h\"\n#endif\n\n#if (NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_LONG_DOUBLE) && !defined IN_LIBINTL\n# include <math.h>\n# include \"isnanl-nolibm.h\"\n# include \"printf-frexpl.h\"\n# include \"fpucw.h\"\n#endif\n\n/* Default parameters.  */\n#ifndef VASNPRINTF\n# if WIDE_CHAR_VERSION\n#  define VASNPRINTF vasnwprintf\n#  define FCHAR_T wchar_t\n#  define DCHAR_T wchar_t\n#  define TCHAR_T wchar_t\n#  define DCHAR_IS_TCHAR 1\n#  define DIRECTIVE wchar_t_directive\n#  define DIRECTIVES wchar_t_directives\n#  define PRINTF_PARSE wprintf_parse\n#  define DCHAR_CPY wmemcpy\n#  define DCHAR_SET wmemset\n# else\n#  define VASNPRINTF vasnprintf\n#  define FCHAR_T char\n#  define DCHAR_T char\n#  define TCHAR_T char\n#  define DCHAR_IS_TCHAR 1\n#  define DIRECTIVE char_directive\n#  define DIRECTIVES char_directives\n#  define PRINTF_PARSE printf_parse\n#  define DCHAR_CPY memcpy\n#  define DCHAR_SET memset\n# endif\n#endif\n#if WIDE_CHAR_VERSION\n  /* TCHAR_T is wchar_t.  */\n# define USE_SNPRINTF 1\n# if HAVE_DECL__SNWPRINTF\n   /* On Windows, the function swprintf() has a different signature than\n      on Unix; we use the function _snwprintf() or - on mingw - snwprintf()\n      instead.  The mingw function snwprintf() has fewer bugs than the\n      MSVCRT function _snwprintf(), so prefer that.  */\n#  if defined __MINGW32__\n#   define SNPRINTF snwprintf\n#  else\n#   define SNPRINTF _snwprintf\n#  endif\n# else\n   /* Unix.  */\n#  define SNPRINTF swprintf\n# endif\n#else\n  /* TCHAR_T is char.  */\n  /* Use snprintf if it exists under the name 'snprintf' or '_snprintf'.\n     But don't use it on BeOS, since BeOS snprintf produces no output if the\n     size argument is >= 0x3000000.\n     Also don't use it on Linux libc5, since there snprintf with size = 1\n     writes any output without bounds, like sprintf.  */\n# if (HAVE_DECL__SNPRINTF || HAVE_SNPRINTF) && !defined __BEOS__ && !(__GNU_LIBRARY__ == 1)\n#  define USE_SNPRINTF 1\n# else\n#  define USE_SNPRINTF 0\n# endif\n# if HAVE_DECL__SNPRINTF\n   /* Windows.  The mingw function snprintf() has fewer bugs than the MSVCRT\n      function _snprintf(), so prefer that.  */\n#  if defined __MINGW32__\n#   define SNPRINTF snprintf\n    /* Here we need to call the native snprintf, not rpl_snprintf.  */\n#   undef snprintf\n#  else\n#   define SNPRINTF _snprintf\n#  endif\n# else\n   /* Unix.  */\n#  define SNPRINTF snprintf\n   /* Here we need to call the native snprintf, not rpl_snprintf.  */\n#  undef snprintf\n# endif\n#endif\n/* Here we need to call the native sprintf, not rpl_sprintf.  */\n#undef sprintf\n\n/* GCC >= 4.0 with -Wall emits unjustified \"... may be used uninitialized\"\n   warnings in this file.  Use -Dlint to suppress them.  */\n#if defined GCC_LINT || defined lint\n# define IF_LINT(Code) Code\n#else\n# define IF_LINT(Code) /* empty */\n#endif\n\n/* Avoid some warnings from \"gcc -Wshadow\".\n   This file doesn't use the exp() and remainder() functions.  */\n#undef exp\n#define exp expo\n#undef remainder\n#define remainder rem\n\n#if (!USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99) && !WIDE_CHAR_VERSION\n# if (HAVE_STRNLEN && !defined _AIX)\n#  define local_strnlen strnlen\n# else\n#  ifndef local_strnlen_defined\n#   define local_strnlen_defined 1\nstatic size_t\nlocal_strnlen (const char *string, size_t maxlen)\n{\n  const char *end = memchr (string, '\\0', maxlen);\n  return end ? (size_t) (end - string) : maxlen;\n}\n#  endif\n# endif\n#endif\n\n#if (((!USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99) && WIDE_CHAR_VERSION) || ((!USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || (NEED_PRINTF_DIRECTIVE_LS && !defined IN_LIBINTL)) && !WIDE_CHAR_VERSION && DCHAR_IS_TCHAR)) && HAVE_WCHAR_T\n# if HAVE_WCSLEN\n#  define local_wcslen wcslen\n# else\n   /* Solaris 2.5.1 has wcslen() in a separate library libw.so. To avoid\n      a dependency towards this library, here is a local substitute.\n      Define this substitute only once, even if this file is included\n      twice in the same compilation unit.  */\n#  ifndef local_wcslen_defined\n#   define local_wcslen_defined 1\nstatic size_t\nlocal_wcslen (const wchar_t *s)\n{\n  const wchar_t *ptr;\n\n  for (ptr = s; *ptr != (wchar_t) 0; ptr++)\n    ;\n  return ptr - s;\n}\n#  endif\n# endif\n#endif\n\n#if (!USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99) && HAVE_WCHAR_T && WIDE_CHAR_VERSION\n# if HAVE_WCSNLEN\n#  define local_wcsnlen wcsnlen\n# else\n#  ifndef local_wcsnlen_defined\n#   define local_wcsnlen_defined 1\nstatic size_t\nlocal_wcsnlen (const wchar_t *s, size_t maxlen)\n{\n  const wchar_t *ptr;\n\n  for (ptr = s; maxlen > 0 && *ptr != (wchar_t) 0; ptr++, maxlen--)\n    ;\n  return ptr - s;\n}\n#  endif\n# endif\n#endif\n\n#if (NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE || NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE) && !defined IN_LIBINTL\n/* Determine the decimal-point character according to the current locale.  */\n# ifndef decimal_point_char_defined\n#  define decimal_point_char_defined 1\nstatic char\ndecimal_point_char (void)\n{\n  const char *point;\n  /* Determine it in a multithread-safe way.  We know nl_langinfo is\n     multithread-safe on glibc systems and Mac OS X systems, but is not required\n     to be multithread-safe by POSIX.  sprintf(), however, is multithread-safe.\n     localeconv() is rarely multithread-safe.  */\n#  if HAVE_NL_LANGINFO && (__GLIBC__ || defined __UCLIBC__ || (defined __APPLE__ && defined __MACH__))\n  point = nl_langinfo (RADIXCHAR);\n#  elif 1\n  char pointbuf[5];\n  sprintf (pointbuf, \"%#.0f\", 1.0);\n  point = &pointbuf[1];\n#  else\n  point = localeconv () -> decimal_point;\n#  endif\n  /* The decimal point is always a single byte: either '.' or ','.  */\n  return (point[0] != '\\0' ? point[0] : '.');\n}\n# endif\n#endif\n\n#if NEED_PRINTF_INFINITE_DOUBLE && !NEED_PRINTF_DOUBLE && !defined IN_LIBINTL\n\n/* Equivalent to !isfinite(x) || x == 0, but does not require libm.  */\nstatic int\nis_infinite_or_zero (double x)\n{\n  return isnand (x) || x + x == x;\n}\n\n#endif\n\n#if NEED_PRINTF_INFINITE_LONG_DOUBLE && !NEED_PRINTF_LONG_DOUBLE && !defined IN_LIBINTL\n\n/* Equivalent to !isfinite(x) || x == 0, but does not require libm.  */\nstatic int\nis_infinite_or_zerol (long double x)\n{\n  return isnanl (x) || x + x == x;\n}\n\n#endif\n\n#if (NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_DOUBLE) && !defined IN_LIBINTL\n\n/* Converting 'long double' to decimal without rare rounding bugs requires\n   real bignums.  We use the naming conventions of GNU gmp, but vastly simpler\n   (and slower) algorithms.  */\n\ntypedef unsigned int mp_limb_t;\n# define GMP_LIMB_BITS 32\nverify (sizeof (mp_limb_t) * CHAR_BIT == GMP_LIMB_BITS);\n\ntypedef unsigned long long mp_twolimb_t;\n# define GMP_TWOLIMB_BITS 64\nverify (sizeof (mp_twolimb_t) * CHAR_BIT == GMP_TWOLIMB_BITS);\n\n/* Representation of a bignum >= 0.  */\ntypedef struct\n{\n  size_t nlimbs;\n  mp_limb_t *limbs; /* Bits in little-endian order, allocated with malloc().  */\n} mpn_t;\n\n/* Compute the product of two bignums >= 0.\n   Return the allocated memory in case of success, NULL in case of memory\n   allocation failure.  */\nstatic void *\nmultiply (mpn_t src1, mpn_t src2, mpn_t *dest)\n{\n  const mp_limb_t *p1;\n  const mp_limb_t *p2;\n  size_t len1;\n  size_t len2;\n\n  if (src1.nlimbs <= src2.nlimbs)\n    {\n      len1 = src1.nlimbs;\n      p1 = src1.limbs;\n      len2 = src2.nlimbs;\n      p2 = src2.limbs;\n    }\n  else\n    {\n      len1 = src2.nlimbs;\n      p1 = src2.limbs;\n      len2 = src1.nlimbs;\n      p2 = src1.limbs;\n    }\n  /* Now 0 <= len1 <= len2.  */\n  if (len1 == 0)\n    {\n      /* src1 or src2 is zero.  */\n      dest->nlimbs = 0;\n      dest->limbs = (mp_limb_t *) malloc (1);\n    }\n  else\n    {\n      /* Here 1 <= len1 <= len2.  */\n      size_t dlen;\n      mp_limb_t *dp;\n      size_t k, i, j;\n\n      dlen = len1 + len2;\n      dp = (mp_limb_t *) malloc (dlen * sizeof (mp_limb_t));\n      if (dp == NULL)\n        return NULL;\n      for (k = len2; k > 0; )\n        dp[--k] = 0;\n      for (i = 0; i < len1; i++)\n        {\n          mp_limb_t digit1 = p1[i];\n          mp_twolimb_t carry = 0;\n          for (j = 0; j < len2; j++)\n            {\n              mp_limb_t digit2 = p2[j];\n              carry += (mp_twolimb_t) digit1 * (mp_twolimb_t) digit2;\n              carry += dp[i + j];\n              dp[i + j] = (mp_limb_t) carry;\n              carry = carry >> GMP_LIMB_BITS;\n            }\n          dp[i + len2] = (mp_limb_t) carry;\n        }\n      /* Normalise.  */\n      while (dlen > 0 && dp[dlen - 1] == 0)\n        dlen--;\n      dest->nlimbs = dlen;\n      dest->limbs = dp;\n    }\n  return dest->limbs;\n}\n\n/* Compute the quotient of a bignum a >= 0 and a bignum b > 0.\n   a is written as  a = q * b + r  with 0 <= r < b.  q is the quotient, r\n   the remainder.\n   Finally, round-to-even is performed: If r > b/2 or if r = b/2 and q is odd,\n   q is incremented.\n   Return the allocated memory in case of success, NULL in case of memory\n   allocation failure.  */\nstatic void *\ndivide (mpn_t a, mpn_t b, mpn_t *q)\n{\n  /* Algorithm:\n     First normalise a and b: a=[a[m-1],...,a[0]], b=[b[n-1],...,b[0]]\n     with m>=0 and n>0 (in base beta = 2^GMP_LIMB_BITS).\n     If m<n, then q:=0 and r:=a.\n     If m>=n=1, perform a single-precision division:\n       r:=0, j:=m,\n       while j>0 do\n         {Here (q[m-1]*beta^(m-1)+...+q[j]*beta^j) * b[0] + r*beta^j =\n               = a[m-1]*beta^(m-1)+...+a[j]*beta^j und 0<=r<b[0]<beta}\n         j:=j-1, r:=r*beta+a[j], q[j]:=floor(r/b[0]), r:=r-b[0]*q[j].\n       Normalise [q[m-1],...,q[0]], yields q.\n     If m>=n>1, perform a multiple-precision division:\n       We have a/b < beta^(m-n+1).\n       s:=intDsize-1-(highest bit in b[n-1]), 0<=s<intDsize.\n       Shift a and b left by s bits, copying them. r:=a.\n       r=[r[m],...,r[0]], b=[b[n-1],...,b[0]] with b[n-1]>=beta/2.\n       For j=m-n,...,0: {Here 0 <= r < b*beta^(j+1).}\n         Compute q* :\n           q* := floor((r[j+n]*beta+r[j+n-1])/b[n-1]).\n           In case of overflow (q* >= beta) set q* := beta-1.\n           Compute c2 := ((r[j+n]*beta+r[j+n-1]) - q* * b[n-1])*beta + r[j+n-2]\n           and c3 := b[n-2] * q*.\n           {We have 0 <= c2 < 2*beta^2, even 0 <= c2 < beta^2 if no overflow\n            occurred.  Furthermore 0 <= c3 < beta^2.\n            If there was overflow and\n            r[j+n]*beta+r[j+n-1] - q* * b[n-1] >= beta, i.e. c2 >= beta^2,\n            the next test can be skipped.}\n           While c3 > c2, {Here 0 <= c2 < c3 < beta^2}\n             Put q* := q* - 1, c2 := c2 + b[n-1]*beta, c3 := c3 - b[n-2].\n           If q* > 0:\n             Put r := r - b * q* * beta^j. In detail:\n               [r[n+j],...,r[j]] := [r[n+j],...,r[j]] - q* * [b[n-1],...,b[0]].\n               hence: u:=0, for i:=0 to n-1 do\n                              u := u + q* * b[i],\n                              r[j+i]:=r[j+i]-(u mod beta) (+ beta, if carry),\n                              u:=u div beta (+ 1, if carry in subtraction)\n                      r[n+j]:=r[n+j]-u.\n               {Since always u = (q* * [b[i-1],...,b[0]] div beta^i) + 1\n                               < q* + 1 <= beta,\n                the carry u does not overflow.}\n             If a negative carry occurs, put q* := q* - 1\n               and [r[n+j],...,r[j]] := [r[n+j],...,r[j]] + [0,b[n-1],...,b[0]].\n         Set q[j] := q*.\n       Normalise [q[m-n],..,q[0]]; this yields the quotient q.\n       Shift [r[n-1],...,r[0]] right by s bits and normalise; this yields the\n       rest r.\n       The room for q[j] can be allocated at the memory location of r[n+j].\n     Finally, round-to-even:\n       Shift r left by 1 bit.\n       If r > b or if r = b and q[0] is odd, q := q+1.\n   */\n  const mp_limb_t *a_ptr = a.limbs;\n  size_t a_len = a.nlimbs;\n  const mp_limb_t *b_ptr = b.limbs;\n  size_t b_len = b.nlimbs;\n  mp_limb_t *roomptr;\n  mp_limb_t *tmp_roomptr = NULL;\n  mp_limb_t *q_ptr;\n  size_t q_len;\n  mp_limb_t *r_ptr;\n  size_t r_len;\n\n  /* Allocate room for a_len+2 digits.\n     (Need a_len+1 digits for the real division and 1 more digit for the\n     final rounding of q.)  */\n  roomptr = (mp_limb_t *) malloc ((a_len + 2) * sizeof (mp_limb_t));\n  if (roomptr == NULL)\n    return NULL;\n\n  /* Normalise a.  */\n  while (a_len > 0 && a_ptr[a_len - 1] == 0)\n    a_len--;\n\n  /* Normalise b.  */\n  for (;;)\n    {\n      if (b_len == 0)\n        /* Division by zero.  */\n        abort ();\n      if (b_ptr[b_len - 1] == 0)\n        b_len--;\n      else\n        break;\n    }\n\n  /* Here m = a_len >= 0 and n = b_len > 0.  */\n\n  if (a_len < b_len)\n    {\n      /* m<n: trivial case.  q=0, r := copy of a.  */\n      r_ptr = roomptr;\n      r_len = a_len;\n      memcpy (r_ptr, a_ptr, a_len * sizeof (mp_limb_t));\n      q_ptr = roomptr + a_len;\n      q_len = 0;\n    }\n  else if (b_len == 1)\n    {\n      /* n=1: single precision division.\n         beta^(m-1) <= a < beta^m  ==>  beta^(m-2) <= a/b < beta^m  */\n      r_ptr = roomptr;\n      q_ptr = roomptr + 1;\n      {\n        mp_limb_t den = b_ptr[0];\n        mp_limb_t remainder = 0;\n        const mp_limb_t *sourceptr = a_ptr + a_len;\n        mp_limb_t *destptr = q_ptr + a_len;\n        size_t count;\n        for (count = a_len; count > 0; count--)\n          {\n            mp_twolimb_t num =\n              ((mp_twolimb_t) remainder << GMP_LIMB_BITS) | *--sourceptr;\n            *--destptr = num / den;\n            remainder = num % den;\n          }\n        /* Normalise and store r.  */\n        if (remainder > 0)\n          {\n            r_ptr[0] = remainder;\n            r_len = 1;\n          }\n        else\n          r_len = 0;\n        /* Normalise q.  */\n        q_len = a_len;\n        if (q_ptr[q_len - 1] == 0)\n          q_len--;\n      }\n    }\n  else\n    {\n      /* n>1: multiple precision division.\n         beta^(m-1) <= a < beta^m, beta^(n-1) <= b < beta^n  ==>\n         beta^(m-n-1) <= a/b < beta^(m-n+1).  */\n      /* Determine s.  */\n      size_t s;\n      {\n        mp_limb_t msd = b_ptr[b_len - 1]; /* = b[n-1], > 0 */\n        /* Determine s = GMP_LIMB_BITS - integer_length (msd).\n           Code copied from gnulib's integer_length.c.  */\n# if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)\n        s = __builtin_clz (msd);\n# else\n#  if defined DBL_EXPBIT0_WORD && defined DBL_EXPBIT0_BIT\n        if (GMP_LIMB_BITS <= DBL_MANT_BIT)\n          {\n            /* Use 'double' operations.\n               Assumes an IEEE 754 'double' implementation.  */\n#   define DBL_EXP_MASK ((DBL_MAX_EXP - DBL_MIN_EXP) | 7)\n#   define DBL_EXP_BIAS (DBL_EXP_MASK / 2 - 1)\n#   define NWORDS \\\n     ((sizeof (double) + sizeof (unsigned int) - 1) / sizeof (unsigned int))\n            union { double value; unsigned int word[NWORDS]; } m;\n\n            /* Use a single integer to floating-point conversion.  */\n            m.value = msd;\n\n            s = GMP_LIMB_BITS\n                - (((m.word[DBL_EXPBIT0_WORD] >> DBL_EXPBIT0_BIT) & DBL_EXP_MASK)\n                   - DBL_EXP_BIAS);\n          }\n        else\n#   undef NWORDS\n#  endif\n          {\n            s = 31;\n            if (msd >= 0x10000)\n              {\n                msd = msd >> 16;\n                s -= 16;\n              }\n            if (msd >= 0x100)\n              {\n                msd = msd >> 8;\n                s -= 8;\n              }\n            if (msd >= 0x10)\n              {\n                msd = msd >> 4;\n                s -= 4;\n              }\n            if (msd >= 0x4)\n              {\n                msd = msd >> 2;\n                s -= 2;\n              }\n            if (msd >= 0x2)\n              {\n                msd = msd >> 1;\n                s -= 1;\n              }\n          }\n# endif\n      }\n      /* 0 <= s < GMP_LIMB_BITS.\n         Copy b, shifting it left by s bits.  */\n      if (s > 0)\n        {\n          tmp_roomptr = (mp_limb_t *) malloc (b_len * sizeof (mp_limb_t));\n          if (tmp_roomptr == NULL)\n            {\n              free (roomptr);\n              return NULL;\n            }\n          {\n            const mp_limb_t *sourceptr = b_ptr;\n            mp_limb_t *destptr = tmp_roomptr;\n            mp_twolimb_t accu = 0;\n            size_t count;\n            for (count = b_len; count > 0; count--)\n              {\n                accu += (mp_twolimb_t) *sourceptr++ << s;\n                *destptr++ = (mp_limb_t) accu;\n                accu = accu >> GMP_LIMB_BITS;\n              }\n            /* accu must be zero, since that was how s was determined.  */\n            if (accu != 0)\n              abort ();\n          }\n          b_ptr = tmp_roomptr;\n        }\n      /* Copy a, shifting it left by s bits, yields r.\n         Memory layout:\n         At the beginning: r = roomptr[0..a_len],\n         at the end: r = roomptr[0..b_len-1], q = roomptr[b_len..a_len]  */\n      r_ptr = roomptr;\n      if (s == 0)\n        {\n          memcpy (r_ptr, a_ptr, a_len * sizeof (mp_limb_t));\n          r_ptr[a_len] = 0;\n        }\n      else\n        {\n          const mp_limb_t *sourceptr = a_ptr;\n          mp_limb_t *destptr = r_ptr;\n          mp_twolimb_t accu = 0;\n          size_t count;\n          for (count = a_len; count > 0; count--)\n            {\n              accu += (mp_twolimb_t) *sourceptr++ << s;\n              *destptr++ = (mp_limb_t) accu;\n              accu = accu >> GMP_LIMB_BITS;\n            }\n          *destptr++ = (mp_limb_t) accu;\n        }\n      q_ptr = roomptr + b_len;\n      q_len = a_len - b_len + 1; /* q will have m-n+1 limbs */\n      {\n        size_t j = a_len - b_len; /* m-n */\n        mp_limb_t b_msd = b_ptr[b_len - 1]; /* b[n-1] */\n        mp_limb_t b_2msd = b_ptr[b_len - 2]; /* b[n-2] */\n        mp_twolimb_t b_msdd = /* b[n-1]*beta+b[n-2] */\n          ((mp_twolimb_t) b_msd << GMP_LIMB_BITS) | b_2msd;\n        /* Division loop, traversed m-n+1 times.\n           j counts down, b is unchanged, beta/2 <= b[n-1] < beta.  */\n        for (;;)\n          {\n            mp_limb_t q_star;\n            mp_limb_t c1;\n            if (r_ptr[j + b_len] < b_msd) /* r[j+n] < b[n-1] ? */\n              {\n                /* Divide r[j+n]*beta+r[j+n-1] by b[n-1], no overflow.  */\n                mp_twolimb_t num =\n                  ((mp_twolimb_t) r_ptr[j + b_len] << GMP_LIMB_BITS)\n                  | r_ptr[j + b_len - 1];\n                q_star = num / b_msd;\n                c1 = num % b_msd;\n              }\n            else\n              {\n                /* Overflow, hence r[j+n]*beta+r[j+n-1] >= beta*b[n-1].  */\n                q_star = (mp_limb_t)~(mp_limb_t)0; /* q* = beta-1 */\n                /* Test whether r[j+n]*beta+r[j+n-1] - (beta-1)*b[n-1] >= beta\n                   <==> r[j+n]*beta+r[j+n-1] + b[n-1] >= beta*b[n-1]+beta\n                   <==> b[n-1] < floor((r[j+n]*beta+r[j+n-1]+b[n-1])/beta)\n                        {<= beta !}.\n                   If yes, jump directly to the subtraction loop.\n                   (Otherwise, r[j+n]*beta+r[j+n-1] - (beta-1)*b[n-1] < beta\n                    <==> floor((r[j+n]*beta+r[j+n-1]+b[n-1])/beta) = b[n-1] ) */\n                if (r_ptr[j + b_len] > b_msd\n                    || (c1 = r_ptr[j + b_len - 1] + b_msd) < b_msd)\n                  /* r[j+n] >= b[n-1]+1 or\n                     r[j+n] = b[n-1] and the addition r[j+n-1]+b[n-1] gives a\n                     carry.  */\n                  goto subtract;\n              }\n            /* q_star = q*,\n               c1 = (r[j+n]*beta+r[j+n-1]) - q* * b[n-1] (>=0, <beta).  */\n            {\n              mp_twolimb_t c2 = /* c1*beta+r[j+n-2] */\n                ((mp_twolimb_t) c1 << GMP_LIMB_BITS) | r_ptr[j + b_len - 2];\n              mp_twolimb_t c3 = /* b[n-2] * q* */\n                (mp_twolimb_t) b_2msd * (mp_twolimb_t) q_star;\n              /* While c2 < c3, increase c2 and decrease c3.\n                 Consider c3-c2.  While it is > 0, decrease it by\n                 b[n-1]*beta+b[n-2].  Because of b[n-1]*beta+b[n-2] >= beta^2/2\n                 this can happen only twice.  */\n              if (c3 > c2)\n                {\n                  q_star = q_star - 1; /* q* := q* - 1 */\n                  if (c3 - c2 > b_msdd)\n                    q_star = q_star - 1; /* q* := q* - 1 */\n                }\n            }\n            if (q_star > 0)\n              subtract:\n              {\n                /* Subtract r := r - b * q* * beta^j.  */\n                mp_limb_t cr;\n                {\n                  const mp_limb_t *sourceptr = b_ptr;\n                  mp_limb_t *destptr = r_ptr + j;\n                  mp_twolimb_t carry = 0;\n                  size_t count;\n                  for (count = b_len; count > 0; count--)\n                    {\n                      /* Here 0 <= carry <= q*.  */\n                      carry =\n                        carry\n                        + (mp_twolimb_t) q_star * (mp_twolimb_t) *sourceptr++\n                        + (mp_limb_t) ~(*destptr);\n                      /* Here 0 <= carry <= beta*q* + beta-1.  */\n                      *destptr++ = ~(mp_limb_t) carry;\n                      carry = carry >> GMP_LIMB_BITS; /* <= q* */\n                    }\n                  cr = (mp_limb_t) carry;\n                }\n                /* Subtract cr from r_ptr[j + b_len], then forget about\n                   r_ptr[j + b_len].  */\n                if (cr > r_ptr[j + b_len])\n                  {\n                    /* Subtraction gave a carry.  */\n                    q_star = q_star - 1; /* q* := q* - 1 */\n                    /* Add b back.  */\n                    {\n                      const mp_limb_t *sourceptr = b_ptr;\n                      mp_limb_t *destptr = r_ptr + j;\n                      mp_limb_t carry = 0;\n                      size_t count;\n                      for (count = b_len; count > 0; count--)\n                        {\n                          mp_limb_t source1 = *sourceptr++;\n                          mp_limb_t source2 = *destptr;\n                          *destptr++ = source1 + source2 + carry;\n                          carry =\n                            (carry\n                             ? source1 >= (mp_limb_t) ~source2\n                             : source1 > (mp_limb_t) ~source2);\n                        }\n                    }\n                    /* Forget about the carry and about r[j+n].  */\n                  }\n              }\n            /* q* is determined.  Store it as q[j].  */\n            q_ptr[j] = q_star;\n            if (j == 0)\n              break;\n            j--;\n          }\n      }\n      r_len = b_len;\n      /* Normalise q.  */\n      if (q_ptr[q_len - 1] == 0)\n        q_len--;\n# if 0 /* Not needed here, since we need r only to compare it with b/2, and\n          b is shifted left by s bits.  */\n      /* Shift r right by s bits.  */\n      if (s > 0)\n        {\n          mp_limb_t ptr = r_ptr + r_len;\n          mp_twolimb_t accu = 0;\n          size_t count;\n          for (count = r_len; count > 0; count--)\n            {\n              accu = (mp_twolimb_t) (mp_limb_t) accu << GMP_LIMB_BITS;\n              accu += (mp_twolimb_t) *--ptr << (GMP_LIMB_BITS - s);\n              *ptr = (mp_limb_t) (accu >> GMP_LIMB_BITS);\n            }\n        }\n# endif\n      /* Normalise r.  */\n      while (r_len > 0 && r_ptr[r_len - 1] == 0)\n        r_len--;\n    }\n  /* Compare r << 1 with b.  */\n  if (r_len > b_len)\n    goto increment_q;\n  {\n    size_t i;\n    for (i = b_len;;)\n      {\n        mp_limb_t r_i =\n          (i <= r_len && i > 0 ? r_ptr[i - 1] >> (GMP_LIMB_BITS - 1) : 0)\n          | (i < r_len ? r_ptr[i] << 1 : 0);\n        mp_limb_t b_i = (i < b_len ? b_ptr[i] : 0);\n        if (r_i > b_i)\n          goto increment_q;\n        if (r_i < b_i)\n          goto keep_q;\n        if (i == 0)\n          break;\n        i--;\n      }\n  }\n  if (q_len > 0 && ((q_ptr[0] & 1) != 0))\n    /* q is odd.  */\n    increment_q:\n    {\n      size_t i;\n      for (i = 0; i < q_len; i++)\n        if (++(q_ptr[i]) != 0)\n          goto keep_q;\n      q_ptr[q_len++] = 1;\n    }\n  keep_q:\n  if (tmp_roomptr != NULL)\n    free (tmp_roomptr);\n  q->limbs = q_ptr;\n  q->nlimbs = q_len;\n  return roomptr;\n}\n\n/* Convert a bignum a >= 0, multiplied with 10^extra_zeroes, to decimal\n   representation.\n   Destroys the contents of a.\n   Return the allocated memory - containing the decimal digits in low-to-high\n   order, terminated with a NUL character - in case of success, NULL in case\n   of memory allocation failure.  */\nstatic char *\nconvert_to_decimal (mpn_t a, size_t extra_zeroes)\n{\n  mp_limb_t *a_ptr = a.limbs;\n  size_t a_len = a.nlimbs;\n  /* 0.03345 is slightly larger than log(2)/(9*log(10)).  */\n  size_t c_len = 9 * ((size_t)(a_len * (GMP_LIMB_BITS * 0.03345f)) + 1);\n  char *c_ptr = (char *) malloc (xsum (c_len, extra_zeroes));\n  if (c_ptr != NULL)\n    {\n      char *d_ptr = c_ptr;\n      for (; extra_zeroes > 0; extra_zeroes--)\n        *d_ptr++ = '0';\n      while (a_len > 0)\n        {\n          /* Divide a by 10^9, in-place.  */\n          mp_limb_t remainder = 0;\n          mp_limb_t *ptr = a_ptr + a_len;\n          size_t count;\n          for (count = a_len; count > 0; count--)\n            {\n              mp_twolimb_t num =\n                ((mp_twolimb_t) remainder << GMP_LIMB_BITS) | *--ptr;\n              *ptr = num / 1000000000;\n              remainder = num % 1000000000;\n            }\n          /* Store the remainder as 9 decimal digits.  */\n          for (count = 9; count > 0; count--)\n            {\n              *d_ptr++ = '0' + (remainder % 10);\n              remainder = remainder / 10;\n            }\n          /* Normalize a.  */\n          if (a_ptr[a_len - 1] == 0)\n            a_len--;\n        }\n      /* Remove leading zeroes.  */\n      while (d_ptr > c_ptr && d_ptr[-1] == '0')\n        d_ptr--;\n      /* But keep at least one zero.  */\n      if (d_ptr == c_ptr)\n        *d_ptr++ = '0';\n      /* Terminate the string.  */\n      *d_ptr = '\\0';\n    }\n  return c_ptr;\n}\n\n# if NEED_PRINTF_LONG_DOUBLE\n\n/* Assuming x is finite and >= 0:\n   write x as x = 2^e * m, where m is a bignum.\n   Return the allocated memory in case of success, NULL in case of memory\n   allocation failure.  */\nstatic void *\ndecode_long_double (long double x, int *ep, mpn_t *mp)\n{\n  mpn_t m;\n  int exp;\n  long double y;\n  size_t i;\n\n  /* Allocate memory for result.  */\n  m.nlimbs = (LDBL_MANT_BIT + GMP_LIMB_BITS - 1) / GMP_LIMB_BITS;\n  m.limbs = (mp_limb_t *) malloc (m.nlimbs * sizeof (mp_limb_t));\n  if (m.limbs == NULL)\n    return NULL;\n  /* Split into exponential part and mantissa.  */\n  y = frexpl (x, &exp);\n  if (!(y >= 0.0L && y < 1.0L))\n    abort ();\n  /* x = 2^exp * y = 2^(exp - LDBL_MANT_BIT) * (y * 2^LDBL_MANT_BIT), and the\n     latter is an integer.  */\n  /* Convert the mantissa (y * 2^LDBL_MANT_BIT) to a sequence of limbs.\n     I'm not sure whether it's safe to cast a 'long double' value between\n     2^31 and 2^32 to 'unsigned int', therefore play safe and cast only\n     'long double' values between 0 and 2^16 (to 'unsigned int' or 'int',\n     doesn't matter).  */\n#  if (LDBL_MANT_BIT % GMP_LIMB_BITS) != 0\n#   if (LDBL_MANT_BIT % GMP_LIMB_BITS) > GMP_LIMB_BITS / 2\n    {\n      mp_limb_t hi, lo;\n      y *= (mp_limb_t) 1 << (LDBL_MANT_BIT % (GMP_LIMB_BITS / 2));\n      hi = (int) y;\n      y -= hi;\n      if (!(y >= 0.0L && y < 1.0L))\n        abort ();\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      lo = (int) y;\n      y -= lo;\n      if (!(y >= 0.0L && y < 1.0L))\n        abort ();\n      m.limbs[LDBL_MANT_BIT / GMP_LIMB_BITS] = (hi << (GMP_LIMB_BITS / 2)) | lo;\n    }\n#   else\n    {\n      mp_limb_t d;\n      y *= (mp_limb_t) 1 << (LDBL_MANT_BIT % GMP_LIMB_BITS);\n      d = (int) y;\n      y -= d;\n      if (!(y >= 0.0L && y < 1.0L))\n        abort ();\n      m.limbs[LDBL_MANT_BIT / GMP_LIMB_BITS] = d;\n    }\n#   endif\n#  endif\n  for (i = LDBL_MANT_BIT / GMP_LIMB_BITS; i > 0; )\n    {\n      mp_limb_t hi, lo;\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      hi = (int) y;\n      y -= hi;\n      if (!(y >= 0.0L && y < 1.0L))\n        abort ();\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      lo = (int) y;\n      y -= lo;\n      if (!(y >= 0.0L && y < 1.0L))\n        abort ();\n      m.limbs[--i] = (hi << (GMP_LIMB_BITS / 2)) | lo;\n    }\n#  if 0 /* On FreeBSD 6.1/x86, 'long double' numbers sometimes have excess\n           precision.  */\n  if (!(y == 0.0L))\n    abort ();\n#  endif\n  /* Normalise.  */\n  while (m.nlimbs > 0 && m.limbs[m.nlimbs - 1] == 0)\n    m.nlimbs--;\n  *mp = m;\n  *ep = exp - LDBL_MANT_BIT;\n  return m.limbs;\n}\n\n# endif\n\n# if NEED_PRINTF_DOUBLE\n\n/* Assuming x is finite and >= 0:\n   write x as x = 2^e * m, where m is a bignum.\n   Return the allocated memory in case of success, NULL in case of memory\n   allocation failure.  */\nstatic void *\ndecode_double (double x, int *ep, mpn_t *mp)\n{\n  mpn_t m;\n  int exp;\n  double y;\n  size_t i;\n\n  /* Allocate memory for result.  */\n  m.nlimbs = (DBL_MANT_BIT + GMP_LIMB_BITS - 1) / GMP_LIMB_BITS;\n  m.limbs = (mp_limb_t *) malloc (m.nlimbs * sizeof (mp_limb_t));\n  if (m.limbs == NULL)\n    return NULL;\n  /* Split into exponential part and mantissa.  */\n  y = frexp (x, &exp);\n  if (!(y >= 0.0 && y < 1.0))\n    abort ();\n  /* x = 2^exp * y = 2^(exp - DBL_MANT_BIT) * (y * 2^DBL_MANT_BIT), and the\n     latter is an integer.  */\n  /* Convert the mantissa (y * 2^DBL_MANT_BIT) to a sequence of limbs.\n     I'm not sure whether it's safe to cast a 'double' value between\n     2^31 and 2^32 to 'unsigned int', therefore play safe and cast only\n     'double' values between 0 and 2^16 (to 'unsigned int' or 'int',\n     doesn't matter).  */\n#  if (DBL_MANT_BIT % GMP_LIMB_BITS) != 0\n#   if (DBL_MANT_BIT % GMP_LIMB_BITS) > GMP_LIMB_BITS / 2\n    {\n      mp_limb_t hi, lo;\n      y *= (mp_limb_t) 1 << (DBL_MANT_BIT % (GMP_LIMB_BITS / 2));\n      hi = (int) y;\n      y -= hi;\n      if (!(y >= 0.0 && y < 1.0))\n        abort ();\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      lo = (int) y;\n      y -= lo;\n      if (!(y >= 0.0 && y < 1.0))\n        abort ();\n      m.limbs[DBL_MANT_BIT / GMP_LIMB_BITS] = (hi << (GMP_LIMB_BITS / 2)) | lo;\n    }\n#   else\n    {\n      mp_limb_t d;\n      y *= (mp_limb_t) 1 << (DBL_MANT_BIT % GMP_LIMB_BITS);\n      d = (int) y;\n      y -= d;\n      if (!(y >= 0.0 && y < 1.0))\n        abort ();\n      m.limbs[DBL_MANT_BIT / GMP_LIMB_BITS] = d;\n    }\n#   endif\n#  endif\n  for (i = DBL_MANT_BIT / GMP_LIMB_BITS; i > 0; )\n    {\n      mp_limb_t hi, lo;\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      hi = (int) y;\n      y -= hi;\n      if (!(y >= 0.0 && y < 1.0))\n        abort ();\n      y *= (mp_limb_t) 1 << (GMP_LIMB_BITS / 2);\n      lo = (int) y;\n      y -= lo;\n      if (!(y >= 0.0 && y < 1.0))\n        abort ();\n      m.limbs[--i] = (hi << (GMP_LIMB_BITS / 2)) | lo;\n    }\n  if (!(y == 0.0))\n    abort ();\n  /* Normalise.  */\n  while (m.nlimbs > 0 && m.limbs[m.nlimbs - 1] == 0)\n    m.nlimbs--;\n  *mp = m;\n  *ep = exp - DBL_MANT_BIT;\n  return m.limbs;\n}\n\n# endif\n\n/* Assuming x = 2^e * m is finite and >= 0, and n is an integer:\n   Returns the decimal representation of round (x * 10^n).\n   Return the allocated memory - containing the decimal digits in low-to-high\n   order, terminated with a NUL character - in case of success, NULL in case\n   of memory allocation failure.  */\nstatic char *\nscale10_round_decimal_decoded (int e, mpn_t m, void *memory, int n)\n{\n  int s;\n  size_t extra_zeroes;\n  unsigned int abs_n;\n  unsigned int abs_s;\n  mp_limb_t *pow5_ptr;\n  size_t pow5_len;\n  unsigned int s_limbs;\n  unsigned int s_bits;\n  mpn_t pow5;\n  mpn_t z;\n  void *z_memory;\n  char *digits;\n\n  if (memory == NULL)\n    return NULL;\n  /* x = 2^e * m, hence\n     y = round (2^e * 10^n * m) = round (2^(e+n) * 5^n * m)\n       = round (2^s * 5^n * m).  */\n  s = e + n;\n  extra_zeroes = 0;\n  /* Factor out a common power of 10 if possible.  */\n  if (s > 0 && n > 0)\n    {\n      extra_zeroes = (s < n ? s : n);\n      s -= extra_zeroes;\n      n -= extra_zeroes;\n    }\n  /* Here y = round (2^s * 5^n * m) * 10^extra_zeroes.\n     Before converting to decimal, we need to compute\n     z = round (2^s * 5^n * m).  */\n  /* Compute 5^|n|, possibly shifted by |s| bits if n and s have the same\n     sign.  2.322 is slightly larger than log(5)/log(2).  */\n  abs_n = (n >= 0 ? n : -n);\n  abs_s = (s >= 0 ? s : -s);\n  pow5_ptr = (mp_limb_t *) malloc (((int)(abs_n * (2.322f / GMP_LIMB_BITS)) + 1\n                                    + abs_s / GMP_LIMB_BITS + 1)\n                                   * sizeof (mp_limb_t));\n  if (pow5_ptr == NULL)\n    {\n      free (memory);\n      return NULL;\n    }\n  /* Initialize with 1.  */\n  pow5_ptr[0] = 1;\n  pow5_len = 1;\n  /* Multiply with 5^|n|.  */\n  if (abs_n > 0)\n    {\n      static mp_limb_t const small_pow5[13 + 1] =\n        {\n          1, 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625,\n          48828125, 244140625, 1220703125\n        };\n      unsigned int n13;\n      for (n13 = 0; n13 <= abs_n; n13 += 13)\n        {\n          mp_limb_t digit1 = small_pow5[n13 + 13 <= abs_n ? 13 : abs_n - n13];\n          size_t j;\n          mp_twolimb_t carry = 0;\n          for (j = 0; j < pow5_len; j++)\n            {\n              mp_limb_t digit2 = pow5_ptr[j];\n              carry += (mp_twolimb_t) digit1 * (mp_twolimb_t) digit2;\n              pow5_ptr[j] = (mp_limb_t) carry;\n              carry = carry >> GMP_LIMB_BITS;\n            }\n          if (carry > 0)\n            pow5_ptr[pow5_len++] = (mp_limb_t) carry;\n        }\n    }\n  s_limbs = abs_s / GMP_LIMB_BITS;\n  s_bits = abs_s % GMP_LIMB_BITS;\n  if (n >= 0 ? s >= 0 : s <= 0)\n    {\n      /* Multiply with 2^|s|.  */\n      if (s_bits > 0)\n        {\n          mp_limb_t *ptr = pow5_ptr;\n          mp_twolimb_t accu = 0;\n          size_t count;\n          for (count = pow5_len; count > 0; count--)\n            {\n              accu += (mp_twolimb_t) *ptr << s_bits;\n              *ptr++ = (mp_limb_t) accu;\n              accu = accu >> GMP_LIMB_BITS;\n            }\n          if (accu > 0)\n            {\n              *ptr = (mp_limb_t) accu;\n              pow5_len++;\n            }\n        }\n      if (s_limbs > 0)\n        {\n          size_t count;\n          for (count = pow5_len; count > 0;)\n            {\n              count--;\n              pow5_ptr[s_limbs + count] = pow5_ptr[count];\n            }\n          for (count = s_limbs; count > 0;)\n            {\n              count--;\n              pow5_ptr[count] = 0;\n            }\n          pow5_len += s_limbs;\n        }\n      pow5.limbs = pow5_ptr;\n      pow5.nlimbs = pow5_len;\n      if (n >= 0)\n        {\n          /* Multiply m with pow5.  No division needed.  */\n          z_memory = multiply (m, pow5, &z);\n        }\n      else\n        {\n          /* Divide m by pow5 and round.  */\n          z_memory = divide (m, pow5, &z);\n        }\n    }\n  else\n    {\n      pow5.limbs = pow5_ptr;\n      pow5.nlimbs = pow5_len;\n      if (n >= 0)\n        {\n          /* n >= 0, s < 0.\n             Multiply m with pow5, then divide by 2^|s|.  */\n          mpn_t numerator;\n          mpn_t denominator;\n          void *tmp_memory;\n          tmp_memory = multiply (m, pow5, &numerator);\n          if (tmp_memory == NULL)\n            {\n              free (pow5_ptr);\n              free (memory);\n              return NULL;\n            }\n          /* Construct 2^|s|.  */\n          {\n            mp_limb_t *ptr = pow5_ptr + pow5_len;\n            size_t i;\n            for (i = 0; i < s_limbs; i++)\n              ptr[i] = 0;\n            ptr[s_limbs] = (mp_limb_t) 1 << s_bits;\n            denominator.limbs = ptr;\n            denominator.nlimbs = s_limbs + 1;\n          }\n          z_memory = divide (numerator, denominator, &z);\n          free (tmp_memory);\n        }\n      else\n        {\n          /* n < 0, s > 0.\n             Multiply m with 2^s, then divide by pow5.  */\n          mpn_t numerator;\n          mp_limb_t *num_ptr;\n          num_ptr = (mp_limb_t *) malloc ((m.nlimbs + s_limbs + 1)\n                                          * sizeof (mp_limb_t));\n          if (num_ptr == NULL)\n            {\n              free (pow5_ptr);\n              free (memory);\n              return NULL;\n            }\n          {\n            mp_limb_t *destptr = num_ptr;\n            {\n              size_t i;\n              for (i = 0; i < s_limbs; i++)\n                *destptr++ = 0;\n            }\n            if (s_bits > 0)\n              {\n                const mp_limb_t *sourceptr = m.limbs;\n                mp_twolimb_t accu = 0;\n                size_t count;\n                for (count = m.nlimbs; count > 0; count--)\n                  {\n                    accu += (mp_twolimb_t) *sourceptr++ << s_bits;\n                    *destptr++ = (mp_limb_t) accu;\n                    accu = accu >> GMP_LIMB_BITS;\n                  }\n                if (accu > 0)\n                  *destptr++ = (mp_limb_t) accu;\n              }\n            else\n              {\n                const mp_limb_t *sourceptr = m.limbs;\n                size_t count;\n                for (count = m.nlimbs; count > 0; count--)\n                  *destptr++ = *sourceptr++;\n              }\n            numerator.limbs = num_ptr;\n            numerator.nlimbs = destptr - num_ptr;\n          }\n          z_memory = divide (numerator, pow5, &z);\n          free (num_ptr);\n        }\n    }\n  free (pow5_ptr);\n  free (memory);\n\n  /* Here y = round (x * 10^n) = z * 10^extra_zeroes.  */\n\n  if (z_memory == NULL)\n    return NULL;\n  digits = convert_to_decimal (z, extra_zeroes);\n  free (z_memory);\n  return digits;\n}\n\n# if NEED_PRINTF_LONG_DOUBLE\n\n/* Assuming x is finite and >= 0, and n is an integer:\n   Returns the decimal representation of round (x * 10^n).\n   Return the allocated memory - containing the decimal digits in low-to-high\n   order, terminated with a NUL character - in case of success, NULL in case\n   of memory allocation failure.  */\nstatic char *\nscale10_round_decimal_long_double (long double x, int n)\n{\n  int e IF_LINT(= 0);\n  mpn_t m;\n  void *memory = decode_long_double (x, &e, &m);\n  return scale10_round_decimal_decoded (e, m, memory, n);\n}\n\n# endif\n\n# if NEED_PRINTF_DOUBLE\n\n/* Assuming x is finite and >= 0, and n is an integer:\n   Returns the decimal representation of round (x * 10^n).\n   Return the allocated memory - containing the decimal digits in low-to-high\n   order, terminated with a NUL character - in case of success, NULL in case\n   of memory allocation failure.  */\nstatic char *\nscale10_round_decimal_double (double x, int n)\n{\n  int e IF_LINT(= 0);\n  mpn_t m;\n  void *memory = decode_double (x, &e, &m);\n  return scale10_round_decimal_decoded (e, m, memory, n);\n}\n\n# endif\n\n# if NEED_PRINTF_LONG_DOUBLE\n\n/* Assuming x is finite and > 0:\n   Return an approximation for n with 10^n <= x < 10^(n+1).\n   The approximation is usually the right n, but may be off by 1 sometimes.  */\nstatic int\nfloorlog10l (long double x)\n{\n  int exp;\n  long double y;\n  double z;\n  double l;\n\n  /* Split into exponential part and mantissa.  */\n  y = frexpl (x, &exp);\n  if (!(y >= 0.0L && y < 1.0L))\n    abort ();\n  if (y == 0.0L)\n    return INT_MIN;\n  if (y < 0.5L)\n    {\n      while (y < (1.0L / (1 << (GMP_LIMB_BITS / 2)) / (1 << (GMP_LIMB_BITS / 2))))\n        {\n          y *= 1.0L * (1 << (GMP_LIMB_BITS / 2)) * (1 << (GMP_LIMB_BITS / 2));\n          exp -= GMP_LIMB_BITS;\n        }\n      if (y < (1.0L / (1 << 16)))\n        {\n          y *= 1.0L * (1 << 16);\n          exp -= 16;\n        }\n      if (y < (1.0L / (1 << 8)))\n        {\n          y *= 1.0L * (1 << 8);\n          exp -= 8;\n        }\n      if (y < (1.0L / (1 << 4)))\n        {\n          y *= 1.0L * (1 << 4);\n          exp -= 4;\n        }\n      if (y < (1.0L / (1 << 2)))\n        {\n          y *= 1.0L * (1 << 2);\n          exp -= 2;\n        }\n      if (y < (1.0L / (1 << 1)))\n        {\n          y *= 1.0L * (1 << 1);\n          exp -= 1;\n        }\n    }\n  if (!(y >= 0.5L && y < 1.0L))\n    abort ();\n  /* Compute an approximation for l = log2(x) = exp + log2(y).  */\n  l = exp;\n  z = y;\n  if (z < 0.70710678118654752444)\n    {\n      z *= 1.4142135623730950488;\n      l -= 0.5;\n    }\n  if (z < 0.8408964152537145431)\n    {\n      z *= 1.1892071150027210667;\n      l -= 0.25;\n    }\n  if (z < 0.91700404320467123175)\n    {\n      z *= 1.0905077326652576592;\n      l -= 0.125;\n    }\n  if (z < 0.9576032806985736469)\n    {\n      z *= 1.0442737824274138403;\n      l -= 0.0625;\n    }\n  /* Now 0.95 <= z <= 1.01.  */\n  z = 1 - z;\n  /* log2(1-z) = 1/log(2) * (- z - z^2/2 - z^3/3 - z^4/4 - ...)\n     Four terms are enough to get an approximation with error < 10^-7.  */\n  l -= 1.4426950408889634074 * z * (1.0 + z * (0.5 + z * ((1.0 / 3) + z * 0.25)));\n  /* Finally multiply with log(2)/log(10), yields an approximation for\n     log10(x).  */\n  l *= 0.30102999566398119523;\n  /* Round down to the next integer.  */\n  return (int) l + (l < 0 ? -1 : 0);\n}\n\n# endif\n\n# if NEED_PRINTF_DOUBLE\n\n/* Assuming x is finite and > 0:\n   Return an approximation for n with 10^n <= x < 10^(n+1).\n   The approximation is usually the right n, but may be off by 1 sometimes.  */\nstatic int\nfloorlog10 (double x)\n{\n  int exp;\n  double y;\n  double z;\n  double l;\n\n  /* Split into exponential part and mantissa.  */\n  y = frexp (x, &exp);\n  if (!(y >= 0.0 && y < 1.0))\n    abort ();\n  if (y == 0.0)\n    return INT_MIN;\n  if (y < 0.5)\n    {\n      while (y < (1.0 / (1 << (GMP_LIMB_BITS / 2)) / (1 << (GMP_LIMB_BITS / 2))))\n        {\n          y *= 1.0 * (1 << (GMP_LIMB_BITS / 2)) * (1 << (GMP_LIMB_BITS / 2));\n          exp -= GMP_LIMB_BITS;\n        }\n      if (y < (1.0 / (1 << 16)))\n        {\n          y *= 1.0 * (1 << 16);\n          exp -= 16;\n        }\n      if (y < (1.0 / (1 << 8)))\n        {\n          y *= 1.0 * (1 << 8);\n          exp -= 8;\n        }\n      if (y < (1.0 / (1 << 4)))\n        {\n          y *= 1.0 * (1 << 4);\n          exp -= 4;\n        }\n      if (y < (1.0 / (1 << 2)))\n        {\n          y *= 1.0 * (1 << 2);\n          exp -= 2;\n        }\n      if (y < (1.0 / (1 << 1)))\n        {\n          y *= 1.0 * (1 << 1);\n          exp -= 1;\n        }\n    }\n  if (!(y >= 0.5 && y < 1.0))\n    abort ();\n  /* Compute an approximation for l = log2(x) = exp + log2(y).  */\n  l = exp;\n  z = y;\n  if (z < 0.70710678118654752444)\n    {\n      z *= 1.4142135623730950488;\n      l -= 0.5;\n    }\n  if (z < 0.8408964152537145431)\n    {\n      z *= 1.1892071150027210667;\n      l -= 0.25;\n    }\n  if (z < 0.91700404320467123175)\n    {\n      z *= 1.0905077326652576592;\n      l -= 0.125;\n    }\n  if (z < 0.9576032806985736469)\n    {\n      z *= 1.0442737824274138403;\n      l -= 0.0625;\n    }\n  /* Now 0.95 <= z <= 1.01.  */\n  z = 1 - z;\n  /* log2(1-z) = 1/log(2) * (- z - z^2/2 - z^3/3 - z^4/4 - ...)\n     Four terms are enough to get an approximation with error < 10^-7.  */\n  l -= 1.4426950408889634074 * z * (1.0 + z * (0.5 + z * ((1.0 / 3) + z * 0.25)));\n  /* Finally multiply with log(2)/log(10), yields an approximation for\n     log10(x).  */\n  l *= 0.30102999566398119523;\n  /* Round down to the next integer.  */\n  return (int) l + (l < 0 ? -1 : 0);\n}\n\n# endif\n\n/* Tests whether a string of digits consists of exactly PRECISION zeroes and\n   a single '1' digit.  */\nstatic int\nis_borderline (const char *digits, size_t precision)\n{\n  for (; precision > 0; precision--, digits++)\n    if (*digits != '0')\n      return 0;\n  if (*digits != '1')\n    return 0;\n  digits++;\n  return *digits == '\\0';\n}\n\n#endif\n\n#if !USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99\n\n/* Use a different function name, to make it possible that the 'wchar_t'\n   parametrization and the 'char' parametrization get compiled in the same\n   translation unit.  */\n# if WIDE_CHAR_VERSION\n#  define MAX_ROOM_NEEDED wmax_room_needed\n# else\n#  define MAX_ROOM_NEEDED max_room_needed\n# endif\n\n/* Returns the number of TCHAR_T units needed as temporary space for the result\n   of sprintf or SNPRINTF of a single conversion directive.  */\nstatic size_t\nMAX_ROOM_NEEDED (const arguments *ap, size_t arg_index, FCHAR_T conversion,\n                 arg_type type, int flags, size_t width, int has_precision,\n                 size_t precision, int pad_ourselves)\n{\n  size_t tmp_length;\n\n  switch (conversion)\n    {\n    case 'd': case 'i': case 'u':\n# if HAVE_LONG_LONG_INT\n      if (type == TYPE_LONGLONGINT || type == TYPE_ULONGLONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long long) * CHAR_BIT\n                          * 0.30103 /* binary -> decimal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n# endif\n      if (type == TYPE_LONGINT || type == TYPE_ULONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long) * CHAR_BIT\n                          * 0.30103 /* binary -> decimal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n        tmp_length =\n          (unsigned int) (sizeof (unsigned int) * CHAR_BIT\n                          * 0.30103 /* binary -> decimal */\n                         )\n          + 1; /* turn floor into ceil */\n      if (tmp_length < precision)\n        tmp_length = precision;\n      /* Multiply by 2, as an estimate for FLAG_GROUP.  */\n      tmp_length = xsum (tmp_length, tmp_length);\n      /* Add 1, to account for a leading sign.  */\n      tmp_length = xsum (tmp_length, 1);\n      break;\n\n    case 'o':\n# if HAVE_LONG_LONG_INT\n      if (type == TYPE_LONGLONGINT || type == TYPE_ULONGLONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long long) * CHAR_BIT\n                          * 0.333334 /* binary -> octal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n# endif\n      if (type == TYPE_LONGINT || type == TYPE_ULONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long) * CHAR_BIT\n                          * 0.333334 /* binary -> octal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n        tmp_length =\n          (unsigned int) (sizeof (unsigned int) * CHAR_BIT\n                          * 0.333334 /* binary -> octal */\n                         )\n          + 1; /* turn floor into ceil */\n      if (tmp_length < precision)\n        tmp_length = precision;\n      /* Add 1, to account for a leading sign.  */\n      tmp_length = xsum (tmp_length, 1);\n      break;\n\n    case 'x': case 'X':\n# if HAVE_LONG_LONG_INT\n      if (type == TYPE_LONGLONGINT || type == TYPE_ULONGLONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long long) * CHAR_BIT\n                          * 0.25 /* binary -> hexadecimal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n# endif\n      if (type == TYPE_LONGINT || type == TYPE_ULONGINT)\n        tmp_length =\n          (unsigned int) (sizeof (unsigned long) * CHAR_BIT\n                          * 0.25 /* binary -> hexadecimal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n        tmp_length =\n          (unsigned int) (sizeof (unsigned int) * CHAR_BIT\n                          * 0.25 /* binary -> hexadecimal */\n                         )\n          + 1; /* turn floor into ceil */\n      if (tmp_length < precision)\n        tmp_length = precision;\n      /* Add 2, to account for a leading sign or alternate form.  */\n      tmp_length = xsum (tmp_length, 2);\n      break;\n\n    case 'f': case 'F':\n      if (type == TYPE_LONGDOUBLE)\n        tmp_length =\n          (unsigned int) (LDBL_MAX_EXP\n                          * 0.30103 /* binary -> decimal */\n                          * 2 /* estimate for FLAG_GROUP */\n                         )\n          + 1 /* turn floor into ceil */\n          + 10; /* sign, decimal point etc. */\n      else\n        tmp_length =\n          (unsigned int) (DBL_MAX_EXP\n                          * 0.30103 /* binary -> decimal */\n                          * 2 /* estimate for FLAG_GROUP */\n                         )\n          + 1 /* turn floor into ceil */\n          + 10; /* sign, decimal point etc. */\n      tmp_length = xsum (tmp_length, precision);\n      break;\n\n    case 'e': case 'E': case 'g': case 'G':\n      tmp_length =\n        12; /* sign, decimal point, exponent etc. */\n      tmp_length = xsum (tmp_length, precision);\n      break;\n\n    case 'a': case 'A':\n      if (type == TYPE_LONGDOUBLE)\n        tmp_length =\n          (unsigned int) (LDBL_DIG\n                          * 0.831 /* decimal -> hexadecimal */\n                         )\n          + 1; /* turn floor into ceil */\n      else\n        tmp_length =\n          (unsigned int) (DBL_DIG\n                          * 0.831 /* decimal -> hexadecimal */\n                         )\n          + 1; /* turn floor into ceil */\n      if (tmp_length < precision)\n        tmp_length = precision;\n      /* Account for sign, decimal point etc. */\n      tmp_length = xsum (tmp_length, 12);\n      break;\n\n    case 'c':\n# if HAVE_WINT_T && !WIDE_CHAR_VERSION\n      if (type == TYPE_WIDE_CHAR)\n        tmp_length = MB_CUR_MAX;\n      else\n# endif\n        tmp_length = 1;\n      break;\n\n    case 's':\n# if HAVE_WCHAR_T\n      if (type == TYPE_WIDE_STRING)\n        {\n#  if WIDE_CHAR_VERSION\n          /* ISO C says about %ls in fwprintf:\n               \"If the precision is not specified or is greater than the size\n                of the array, the array shall contain a null wide character.\"\n             So if there is a precision, we must not use wcslen.  */\n          const wchar_t *arg = ap->arg[arg_index].a.a_wide_string;\n\n          if (has_precision)\n            tmp_length = local_wcsnlen (arg, precision);\n          else\n            tmp_length = local_wcslen (arg);\n#  else\n          /* ISO C says about %ls in fprintf:\n               \"If a precision is specified, no more than that many bytes are\n                written (including shift sequences, if any), and the array\n                shall contain a null wide character if, to equal the multibyte\n                character sequence length given by the precision, the function\n                would need to access a wide character one past the end of the\n                array.\"\n             So if there is a precision, we must not use wcslen.  */\n          /* This case has already been handled separately in VASNPRINTF.  */\n          abort ();\n#  endif\n        }\n      else\n# endif\n        {\n# if WIDE_CHAR_VERSION\n          /* ISO C says about %s in fwprintf:\n               \"If the precision is not specified or is greater than the size\n                of the converted array, the converted array shall contain a\n                null wide character.\"\n             So if there is a precision, we must not use strlen.  */\n          /* This case has already been handled separately in VASNPRINTF.  */\n          abort ();\n# else\n          /* ISO C says about %s in fprintf:\n               \"If the precision is not specified or greater than the size of\n                the array, the array shall contain a null character.\"\n             So if there is a precision, we must not use strlen.  */\n          const char *arg = ap->arg[arg_index].a.a_string;\n\n          if (has_precision)\n            tmp_length = local_strnlen (arg, precision);\n          else\n            tmp_length = strlen (arg);\n# endif\n        }\n      break;\n\n    case 'p':\n      tmp_length =\n        (unsigned int) (sizeof (void *) * CHAR_BIT\n                        * 0.25 /* binary -> hexadecimal */\n                       )\n          + 1 /* turn floor into ceil */\n          + 2; /* account for leading 0x */\n      break;\n\n    default:\n      abort ();\n    }\n\n  if (!pad_ourselves)\n    {\n# if ENABLE_UNISTDIO\n      /* Padding considers the number of characters, therefore the number of\n         elements after padding may be\n           > max (tmp_length, width)\n         but is certainly\n           <= tmp_length + width.  */\n      tmp_length = xsum (tmp_length, width);\n# else\n      /* Padding considers the number of elements, says POSIX.  */\n      if (tmp_length < width)\n        tmp_length = width;\n# endif\n    }\n\n  tmp_length = xsum (tmp_length, 1); /* account for trailing NUL */\n\n  return tmp_length;\n}\n\n#endif\n\nDCHAR_T *\nVASNPRINTF (DCHAR_T *resultbuf, size_t *lengthp,\n            const FCHAR_T *format, va_list args)\n{\n  DIRECTIVES d;\n  arguments a;\n\n  if (PRINTF_PARSE (format, &d, &a) < 0)\n    /* errno is already set.  */\n    return NULL;\n\n#define CLEANUP() \\\n  if (d.dir != d.direct_alloc_dir)                                      \\\n    free (d.dir);                                                       \\\n  if (a.arg != a.direct_alloc_arg)                                      \\\n    free (a.arg);\n\n  if (PRINTF_FETCHARGS (args, &a) < 0)\n    {\n      CLEANUP ();\n      errno = EINVAL;\n      return NULL;\n    }\n\n  {\n    size_t buf_neededlength;\n    TCHAR_T *buf;\n    TCHAR_T *buf_malloced;\n    const FCHAR_T *cp;\n    size_t i;\n    DIRECTIVE *dp;\n    /* Output string accumulator.  */\n    DCHAR_T *result;\n    size_t allocated;\n    size_t length;\n\n    /* Allocate a small buffer that will hold a directive passed to\n       sprintf or snprintf.  */\n    buf_neededlength =\n      xsum4 (7, d.max_width_length, d.max_precision_length, 6);\n#if HAVE_ALLOCA\n    if (buf_neededlength < 4000 / sizeof (TCHAR_T))\n      {\n        buf = (TCHAR_T *) alloca (buf_neededlength * sizeof (TCHAR_T));\n        buf_malloced = NULL;\n      }\n    else\n#endif\n      {\n        size_t buf_memsize = xtimes (buf_neededlength, sizeof (TCHAR_T));\n        if (size_overflow_p (buf_memsize))\n          goto out_of_memory_1;\n        buf = (TCHAR_T *) malloc (buf_memsize);\n        if (buf == NULL)\n          goto out_of_memory_1;\n        buf_malloced = buf;\n      }\n\n    if (resultbuf != NULL)\n      {\n        result = resultbuf;\n        allocated = *lengthp;\n      }\n    else\n      {\n        result = NULL;\n        allocated = 0;\n      }\n    length = 0;\n    /* Invariants:\n       result is either == resultbuf or == NULL or malloc-allocated.\n       If length > 0, then result != NULL.  */\n\n    /* Ensures that allocated >= needed.  Aborts through a jump to\n       out_of_memory if needed is SIZE_MAX or otherwise too big.  */\n#define ENSURE_ALLOCATION(needed) \\\n    if ((needed) > allocated)                                                \\\n      {                                                                      \\\n        size_t memory_size;                                                  \\\n        DCHAR_T *memory;                                                     \\\n                                                                             \\\n        allocated = (allocated > 0 ? xtimes (allocated, 2) : 12);            \\\n        if ((needed) > allocated)                                            \\\n          allocated = (needed);                                              \\\n        memory_size = xtimes (allocated, sizeof (DCHAR_T));                  \\\n        if (size_overflow_p (memory_size))                                   \\\n          goto out_of_memory;                                                \\\n        if (result == resultbuf || result == NULL)                           \\\n          memory = (DCHAR_T *) malloc (memory_size);                         \\\n        else                                                                 \\\n          memory = (DCHAR_T *) realloc (result, memory_size);                \\\n        if (memory == NULL)                                                  \\\n          goto out_of_memory;                                                \\\n        if (result == resultbuf && length > 0)                               \\\n          DCHAR_CPY (memory, result, length);                                \\\n        result = memory;                                                     \\\n      }\n\n    for (cp = format, i = 0, dp = &d.dir[0]; ; cp = dp->dir_end, i++, dp++)\n      {\n        if (cp != dp->dir_start)\n          {\n            size_t n = dp->dir_start - cp;\n            size_t augmented_length = xsum (length, n);\n\n            ENSURE_ALLOCATION (augmented_length);\n            /* This copies a piece of FCHAR_T[] into a DCHAR_T[].  Here we\n               need that the format string contains only ASCII characters\n               if FCHAR_T and DCHAR_T are not the same type.  */\n            if (sizeof (FCHAR_T) == sizeof (DCHAR_T))\n              {\n                DCHAR_CPY (result + length, (const DCHAR_T *) cp, n);\n                length = augmented_length;\n              }\n            else\n              {\n                do\n                  result[length++] = *cp++;\n                while (--n > 0);\n              }\n          }\n        if (i == d.count)\n          break;\n\n        /* Execute a single directive.  */\n        if (dp->conversion == '%')\n          {\n            size_t augmented_length;\n\n            if (!(dp->arg_index == ARG_NONE))\n              abort ();\n            augmented_length = xsum (length, 1);\n            ENSURE_ALLOCATION (augmented_length);\n            result[length] = '%';\n            length = augmented_length;\n          }\n        else\n          {\n            if (!(dp->arg_index != ARG_NONE))\n              abort ();\n\n            if (dp->conversion == 'n')\n              {\n                switch (a.arg[dp->arg_index].type)\n                  {\n                  case TYPE_COUNT_SCHAR_POINTER:\n                    *a.arg[dp->arg_index].a.a_count_schar_pointer = length;\n                    break;\n                  case TYPE_COUNT_SHORT_POINTER:\n                    *a.arg[dp->arg_index].a.a_count_short_pointer = length;\n                    break;\n                  case TYPE_COUNT_INT_POINTER:\n                    *a.arg[dp->arg_index].a.a_count_int_pointer = length;\n                    break;\n                  case TYPE_COUNT_LONGINT_POINTER:\n                    *a.arg[dp->arg_index].a.a_count_longint_pointer = length;\n                    break;\n#if HAVE_LONG_LONG_INT\n                  case TYPE_COUNT_LONGLONGINT_POINTER:\n                    *a.arg[dp->arg_index].a.a_count_longlongint_pointer = length;\n                    break;\n#endif\n                  default:\n                    abort ();\n                  }\n              }\n#if ENABLE_UNISTDIO\n            /* The unistdio extensions.  */\n            else if (dp->conversion == 'U')\n              {\n                arg_type type = a.arg[dp->arg_index].type;\n                int flags = dp->flags;\n                int has_width;\n                size_t width;\n                int has_precision;\n                size_t precision;\n\n                has_width = 0;\n                width = 0;\n                if (dp->width_start != dp->width_end)\n                  {\n                    if (dp->width_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->width_arg_index].a.a_int;\n                        width = arg;\n                        if (arg < 0)\n                          {\n                            /* \"A negative field width is taken as a '-' flag\n                                followed by a positive field width.\"  */\n                            flags |= FLAG_LEFT;\n                            width = -width;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->width_start;\n\n                        do\n                          width = xsum (xtimes (width, 10), *digitp++ - '0');\n                        while (digitp != dp->width_end);\n                      }\n                    has_width = 1;\n                  }\n\n                has_precision = 0;\n                precision = 0;\n                if (dp->precision_start != dp->precision_end)\n                  {\n                    if (dp->precision_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->precision_arg_index].a.a_int;\n                        /* \"A negative precision is taken as if the precision\n                            were omitted.\"  */\n                        if (arg >= 0)\n                          {\n                            precision = arg;\n                            has_precision = 1;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->precision_start + 1;\n\n                        precision = 0;\n                        while (digitp != dp->precision_end)\n                          precision = xsum (xtimes (precision, 10), *digitp++ - '0');\n                        has_precision = 1;\n                      }\n                  }\n\n                switch (type)\n                  {\n                  case TYPE_U8_STRING:\n                    {\n                      const uint8_t *arg = a.arg[dp->arg_index].a.a_u8_string;\n                      const uint8_t *arg_end;\n                      size_t characters;\n\n                      if (has_precision)\n                        {\n                          /* Use only PRECISION characters, from the left.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (; precision > 0; precision--)\n                            {\n                              int count = u8_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else if (has_width)\n                        {\n                          /* Use the entire string, and count the number of\n                             characters.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (;;)\n                            {\n                              int count = u8_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else\n                        {\n                          /* Use the entire string.  */\n                          arg_end = arg + u8_strlen (arg);\n                          /* The number of characters doesn't matter.  */\n                          characters = 0;\n                        }\n\n                      if (characters < width && !(dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n\n# if DCHAR_IS_UINT8_T\n                      {\n                        size_t n = arg_end - arg;\n                        ENSURE_ALLOCATION (xsum (length, n));\n                        DCHAR_CPY (result + length, arg, n);\n                        length += n;\n                      }\n# else\n                      { /* Convert.  */\n                        DCHAR_T *converted = result + length;\n                        size_t converted_len = allocated - length;\n#  if DCHAR_IS_TCHAR\n                        /* Convert from UTF-8 to locale encoding.  */\n                        converted =\n                          u8_conv_to_encoding (locale_charset (),\n                                               iconveh_question_mark,\n                                               arg, arg_end - arg, NULL,\n                                               converted, &converted_len);\n#  else\n                        /* Convert from UTF-8 to UTF-16/UTF-32.  */\n                        converted =\n                          U8_TO_DCHAR (arg, arg_end - arg,\n                                       converted, &converted_len);\n#  endif\n                        if (converted == NULL)\n                          {\n                            int saved_errno = errno;\n                            if (!(result == resultbuf || result == NULL))\n                              free (result);\n                            if (buf_malloced != NULL)\n                              free (buf_malloced);\n                            CLEANUP ();\n                            errno = saved_errno;\n                            return NULL;\n                          }\n                        if (converted != result + length)\n                          {\n                            ENSURE_ALLOCATION (xsum (length, converted_len));\n                            DCHAR_CPY (result + length, converted, converted_len);\n                            free (converted);\n                          }\n                        length += converted_len;\n                      }\n# endif\n\n                      if (characters < width && (dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n                    }\n                    break;\n\n                  case TYPE_U16_STRING:\n                    {\n                      const uint16_t *arg = a.arg[dp->arg_index].a.a_u16_string;\n                      const uint16_t *arg_end;\n                      size_t characters;\n\n                      if (has_precision)\n                        {\n                          /* Use only PRECISION characters, from the left.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (; precision > 0; precision--)\n                            {\n                              int count = u16_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else if (has_width)\n                        {\n                          /* Use the entire string, and count the number of\n                             characters.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (;;)\n                            {\n                              int count = u16_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else\n                        {\n                          /* Use the entire string.  */\n                          arg_end = arg + u16_strlen (arg);\n                          /* The number of characters doesn't matter.  */\n                          characters = 0;\n                        }\n\n                      if (characters < width && !(dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n\n# if DCHAR_IS_UINT16_T\n                      {\n                        size_t n = arg_end - arg;\n                        ENSURE_ALLOCATION (xsum (length, n));\n                        DCHAR_CPY (result + length, arg, n);\n                        length += n;\n                      }\n# else\n                      { /* Convert.  */\n                        DCHAR_T *converted = result + length;\n                        size_t converted_len = allocated - length;\n#  if DCHAR_IS_TCHAR\n                        /* Convert from UTF-16 to locale encoding.  */\n                        converted =\n                          u16_conv_to_encoding (locale_charset (),\n                                                iconveh_question_mark,\n                                                arg, arg_end - arg, NULL,\n                                                converted, &converted_len);\n#  else\n                        /* Convert from UTF-16 to UTF-8/UTF-32.  */\n                        converted =\n                          U16_TO_DCHAR (arg, arg_end - arg,\n                                        converted, &converted_len);\n#  endif\n                        if (converted == NULL)\n                          {\n                            int saved_errno = errno;\n                            if (!(result == resultbuf || result == NULL))\n                              free (result);\n                            if (buf_malloced != NULL)\n                              free (buf_malloced);\n                            CLEANUP ();\n                            errno = saved_errno;\n                            return NULL;\n                          }\n                        if (converted != result + length)\n                          {\n                            ENSURE_ALLOCATION (xsum (length, converted_len));\n                            DCHAR_CPY (result + length, converted, converted_len);\n                            free (converted);\n                          }\n                        length += converted_len;\n                      }\n# endif\n\n                      if (characters < width && (dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n                    }\n                    break;\n\n                  case TYPE_U32_STRING:\n                    {\n                      const uint32_t *arg = a.arg[dp->arg_index].a.a_u32_string;\n                      const uint32_t *arg_end;\n                      size_t characters;\n\n                      if (has_precision)\n                        {\n                          /* Use only PRECISION characters, from the left.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (; precision > 0; precision--)\n                            {\n                              int count = u32_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else if (has_width)\n                        {\n                          /* Use the entire string, and count the number of\n                             characters.  */\n                          arg_end = arg;\n                          characters = 0;\n                          for (;;)\n                            {\n                              int count = u32_strmblen (arg_end);\n                              if (count == 0)\n                                break;\n                              if (count < 0)\n                                {\n                                  if (!(result == resultbuf || result == NULL))\n                                    free (result);\n                                  if (buf_malloced != NULL)\n                                    free (buf_malloced);\n                                  CLEANUP ();\n                                  errno = EILSEQ;\n                                  return NULL;\n                                }\n                              arg_end += count;\n                              characters++;\n                            }\n                        }\n                      else\n                        {\n                          /* Use the entire string.  */\n                          arg_end = arg + u32_strlen (arg);\n                          /* The number of characters doesn't matter.  */\n                          characters = 0;\n                        }\n\n                      if (characters < width && !(dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n\n# if DCHAR_IS_UINT32_T\n                      {\n                        size_t n = arg_end - arg;\n                        ENSURE_ALLOCATION (xsum (length, n));\n                        DCHAR_CPY (result + length, arg, n);\n                        length += n;\n                      }\n# else\n                      { /* Convert.  */\n                        DCHAR_T *converted = result + length;\n                        size_t converted_len = allocated - length;\n#  if DCHAR_IS_TCHAR\n                        /* Convert from UTF-32 to locale encoding.  */\n                        converted =\n                          u32_conv_to_encoding (locale_charset (),\n                                                iconveh_question_mark,\n                                                arg, arg_end - arg, NULL,\n                                                converted, &converted_len);\n#  else\n                        /* Convert from UTF-32 to UTF-8/UTF-16.  */\n                        converted =\n                          U32_TO_DCHAR (arg, arg_end - arg,\n                                        converted, &converted_len);\n#  endif\n                        if (converted == NULL)\n                          {\n                            int saved_errno = errno;\n                            if (!(result == resultbuf || result == NULL))\n                              free (result);\n                            if (buf_malloced != NULL)\n                              free (buf_malloced);\n                            CLEANUP ();\n                            errno = saved_errno;\n                            return NULL;\n                          }\n                        if (converted != result + length)\n                          {\n                            ENSURE_ALLOCATION (xsum (length, converted_len));\n                            DCHAR_CPY (result + length, converted, converted_len);\n                            free (converted);\n                          }\n                        length += converted_len;\n                      }\n# endif\n\n                      if (characters < width && (dp->flags & FLAG_LEFT))\n                        {\n                          size_t n = width - characters;\n                          ENSURE_ALLOCATION (xsum (length, n));\n                          DCHAR_SET (result + length, ' ', n);\n                          length += n;\n                        }\n                    }\n                    break;\n\n                  default:\n                    abort ();\n                  }\n              }\n#endif\n#if (!USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || (NEED_PRINTF_DIRECTIVE_LS && !defined IN_LIBINTL)) && HAVE_WCHAR_T\n            else if (dp->conversion == 's'\n# if WIDE_CHAR_VERSION\n                     && a.arg[dp->arg_index].type != TYPE_WIDE_STRING\n# else\n                     && a.arg[dp->arg_index].type == TYPE_WIDE_STRING\n# endif\n                    )\n              {\n                /* The normal handling of the 's' directive below requires\n                   allocating a temporary buffer.  The determination of its\n                   length (tmp_length), in the case when a precision is\n                   specified, below requires a conversion between a char[]\n                   string and a wchar_t[] wide string.  It could be done, but\n                   we have no guarantee that the implementation of sprintf will\n                   use the exactly same algorithm.  Without this guarantee, it\n                   is possible to have buffer overrun bugs.  In order to avoid\n                   such bugs, we implement the entire processing of the 's'\n                   directive ourselves.  */\n                int flags = dp->flags;\n                int has_width;\n                size_t width;\n                int has_precision;\n                size_t precision;\n\n                has_width = 0;\n                width = 0;\n                if (dp->width_start != dp->width_end)\n                  {\n                    if (dp->width_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->width_arg_index].a.a_int;\n                        width = arg;\n                        if (arg < 0)\n                          {\n                            /* \"A negative field width is taken as a '-' flag\n                                followed by a positive field width.\"  */\n                            flags |= FLAG_LEFT;\n                            width = -width;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->width_start;\n\n                        do\n                          width = xsum (xtimes (width, 10), *digitp++ - '0');\n                        while (digitp != dp->width_end);\n                      }\n                    has_width = 1;\n                  }\n\n                has_precision = 0;\n                precision = 6;\n                if (dp->precision_start != dp->precision_end)\n                  {\n                    if (dp->precision_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->precision_arg_index].a.a_int;\n                        /* \"A negative precision is taken as if the precision\n                            were omitted.\"  */\n                        if (arg >= 0)\n                          {\n                            precision = arg;\n                            has_precision = 1;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->precision_start + 1;\n\n                        precision = 0;\n                        while (digitp != dp->precision_end)\n                          precision = xsum (xtimes (precision, 10), *digitp++ - '0');\n                        has_precision = 1;\n                      }\n                  }\n\n# if WIDE_CHAR_VERSION\n                /* %s in vasnwprintf.  See the specification of fwprintf.  */\n                {\n                  const char *arg = a.arg[dp->arg_index].a.a_string;\n                  const char *arg_end;\n                  size_t characters;\n\n                  if (has_precision)\n                    {\n                      /* Use only as many bytes as needed to produce PRECISION\n                         wide characters, from the left.  */\n#  if HAVE_MBRTOWC\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      arg_end = arg;\n                      characters = 0;\n                      for (; precision > 0; precision--)\n                        {\n                          int count;\n#  if HAVE_MBRTOWC\n                          count = mbrlen (arg_end, MB_CUR_MAX, &state);\n#  else\n                          count = mblen (arg_end, MB_CUR_MAX);\n#  endif\n                          if (count == 0)\n                            /* Found the terminating NUL.  */\n                            break;\n                          if (count < 0)\n                            {\n                              /* Invalid or incomplete multibyte character.  */\n                              if (!(result == resultbuf || result == NULL))\n                                free (result);\n                              if (buf_malloced != NULL)\n                                free (buf_malloced);\n                              CLEANUP ();\n                              errno = EILSEQ;\n                              return NULL;\n                            }\n                          arg_end += count;\n                          characters++;\n                        }\n                    }\n                  else if (has_width)\n                    {\n                      /* Use the entire string, and count the number of wide\n                         characters.  */\n#  if HAVE_MBRTOWC\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      arg_end = arg;\n                      characters = 0;\n                      for (;;)\n                        {\n                          int count;\n#  if HAVE_MBRTOWC\n                          count = mbrlen (arg_end, MB_CUR_MAX, &state);\n#  else\n                          count = mblen (arg_end, MB_CUR_MAX);\n#  endif\n                          if (count == 0)\n                            /* Found the terminating NUL.  */\n                            break;\n                          if (count < 0)\n                            {\n                              /* Invalid or incomplete multibyte character.  */\n                              if (!(result == resultbuf || result == NULL))\n                                free (result);\n                              if (buf_malloced != NULL)\n                                free (buf_malloced);\n                              CLEANUP ();\n                              errno = EILSEQ;\n                              return NULL;\n                            }\n                          arg_end += count;\n                          characters++;\n                        }\n                    }\n                  else\n                    {\n                      /* Use the entire string.  */\n                      arg_end = arg + strlen (arg);\n                      /* The number of characters doesn't matter.  */\n                      characters = 0;\n                    }\n\n                  if (characters < width && !(dp->flags & FLAG_LEFT))\n                    {\n                      size_t n = width - characters;\n                      ENSURE_ALLOCATION (xsum (length, n));\n                      DCHAR_SET (result + length, ' ', n);\n                      length += n;\n                    }\n\n                  if (has_precision || has_width)\n                    {\n                      /* We know the number of wide characters in advance.  */\n                      size_t remaining;\n#  if HAVE_MBRTOWC\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      ENSURE_ALLOCATION (xsum (length, characters));\n                      for (remaining = characters; remaining > 0; remaining--)\n                        {\n                          wchar_t wc;\n                          int count;\n#  if HAVE_MBRTOWC\n                          count = mbrtowc (&wc, arg, arg_end - arg, &state);\n#  else\n                          count = mbtowc (&wc, arg, arg_end - arg);\n#  endif\n                          if (count <= 0)\n                            /* mbrtowc not consistent with mbrlen, or mbtowc\n                               not consistent with mblen.  */\n                            abort ();\n                          result[length++] = wc;\n                          arg += count;\n                        }\n                      if (!(arg == arg_end))\n                        abort ();\n                    }\n                  else\n                    {\n#  if HAVE_MBRTOWC\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      while (arg < arg_end)\n                        {\n                          wchar_t wc;\n                          int count;\n#  if HAVE_MBRTOWC\n                          count = mbrtowc (&wc, arg, arg_end - arg, &state);\n#  else\n                          count = mbtowc (&wc, arg, arg_end - arg);\n#  endif\n                          if (count <= 0)\n                            /* mbrtowc not consistent with mbrlen, or mbtowc\n                               not consistent with mblen.  */\n                            abort ();\n                          ENSURE_ALLOCATION (xsum (length, 1));\n                          result[length++] = wc;\n                          arg += count;\n                        }\n                    }\n\n                  if (characters < width && (dp->flags & FLAG_LEFT))\n                    {\n                      size_t n = width - characters;\n                      ENSURE_ALLOCATION (xsum (length, n));\n                      DCHAR_SET (result + length, ' ', n);\n                      length += n;\n                    }\n                }\n# else\n                /* %ls in vasnprintf.  See the specification of fprintf.  */\n                {\n                  const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;\n                  const wchar_t *arg_end;\n                  size_t characters;\n#  if !DCHAR_IS_TCHAR\n                  /* This code assumes that TCHAR_T is 'char'.  */\n                  verify (sizeof (TCHAR_T) == 1);\n                  TCHAR_T *tmpsrc;\n                  DCHAR_T *tmpdst;\n                  size_t tmpdst_len;\n#  endif\n                  size_t w;\n\n                  if (has_precision)\n                    {\n                      /* Use only as many wide characters as needed to produce\n                         at most PRECISION bytes, from the left.  */\n#  if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      arg_end = arg;\n                      characters = 0;\n                      while (precision > 0)\n                        {\n                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */\n                          int count;\n\n                          if (*arg_end == 0)\n                            /* Found the terminating null wide character.  */\n                            break;\n#  if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                          count = wcrtomb (cbuf, *arg_end, &state);\n#  else\n                          count = wctomb (cbuf, *arg_end);\n#  endif\n                          if (count < 0)\n                            {\n                              /* Cannot convert.  */\n                              if (!(result == resultbuf || result == NULL))\n                                free (result);\n                              if (buf_malloced != NULL)\n                                free (buf_malloced);\n                              CLEANUP ();\n                              errno = EILSEQ;\n                              return NULL;\n                            }\n                          if (precision < count)\n                            break;\n                          arg_end++;\n                          characters += count;\n                          precision -= count;\n                        }\n                    }\n#  if DCHAR_IS_TCHAR\n                  else if (has_width)\n#  else\n                  else\n#  endif\n                    {\n                      /* Use the entire string, and count the number of\n                         bytes.  */\n#  if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#  endif\n                      arg_end = arg;\n                      characters = 0;\n                      for (;;)\n                        {\n                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */\n                          int count;\n\n                          if (*arg_end == 0)\n                            /* Found the terminating null wide character.  */\n                            break;\n#  if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                          count = wcrtomb (cbuf, *arg_end, &state);\n#  else\n                          count = wctomb (cbuf, *arg_end);\n#  endif\n                          if (count < 0)\n                            {\n                              /* Cannot convert.  */\n                              if (!(result == resultbuf || result == NULL))\n                                free (result);\n                              if (buf_malloced != NULL)\n                                free (buf_malloced);\n                              CLEANUP ();\n                              errno = EILSEQ;\n                              return NULL;\n                            }\n                          arg_end++;\n                          characters += count;\n                        }\n                    }\n#  if DCHAR_IS_TCHAR\n                  else\n                    {\n                      /* Use the entire string.  */\n                      arg_end = arg + local_wcslen (arg);\n                      /* The number of bytes doesn't matter.  */\n                      characters = 0;\n                    }\n#  endif\n\n#  if !DCHAR_IS_TCHAR\n                  /* Convert the string into a piece of temporary memory.  */\n                  tmpsrc = (TCHAR_T *) malloc (characters * sizeof (TCHAR_T));\n                  if (tmpsrc == NULL)\n                    goto out_of_memory;\n                  {\n                    TCHAR_T *tmpptr = tmpsrc;\n                    size_t remaining;\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                    mbstate_t state;\n                    memset (&state, '\\0', sizeof (mbstate_t));\n#   endif\n                    for (remaining = characters; remaining > 0; )\n                      {\n                        char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */\n                        int count;\n\n                        if (*arg == 0)\n                          abort ();\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                        count = wcrtomb (cbuf, *arg, &state);\n#   else\n                        count = wctomb (cbuf, *arg);\n#   endif\n                        if (count <= 0)\n                          /* Inconsistency.  */\n                          abort ();\n                        memcpy (tmpptr, cbuf, count);\n                        tmpptr += count;\n                        arg++;\n                        remaining -= count;\n                      }\n                    if (!(arg == arg_end))\n                      abort ();\n                  }\n\n                  /* Convert from TCHAR_T[] to DCHAR_T[].  */\n                  tmpdst =\n                    DCHAR_CONV_FROM_ENCODING (locale_charset (),\n                                              iconveh_question_mark,\n                                              tmpsrc, characters,\n                                              NULL,\n                                              NULL, &tmpdst_len);\n                  if (tmpdst == NULL)\n                    {\n                      int saved_errno = errno;\n                      free (tmpsrc);\n                      if (!(result == resultbuf || result == NULL))\n                        free (result);\n                      if (buf_malloced != NULL)\n                        free (buf_malloced);\n                      CLEANUP ();\n                      errno = saved_errno;\n                      return NULL;\n                    }\n                  free (tmpsrc);\n#  endif\n\n                  if (has_width)\n                    {\n#  if ENABLE_UNISTDIO\n                      /* Outside POSIX, it's preferable to compare the width\n                         against the number of _characters_ of the converted\n                         value.  */\n                      w = DCHAR_MBSNLEN (result + length, characters);\n#  else\n                      /* The width is compared against the number of _bytes_\n                         of the converted value, says POSIX.  */\n                      w = characters;\n#  endif\n                    }\n                  else\n                    /* w doesn't matter.  */\n                    w = 0;\n\n                  if (w < width && !(dp->flags & FLAG_LEFT))\n                    {\n                      size_t n = width - w;\n                      ENSURE_ALLOCATION (xsum (length, n));\n                      DCHAR_SET (result + length, ' ', n);\n                      length += n;\n                    }\n\n#  if DCHAR_IS_TCHAR\n                  if (has_precision || has_width)\n                    {\n                      /* We know the number of bytes in advance.  */\n                      size_t remaining;\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#   endif\n                      ENSURE_ALLOCATION (xsum (length, characters));\n                      for (remaining = characters; remaining > 0; )\n                        {\n                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */\n                          int count;\n\n                          if (*arg == 0)\n                            abort ();\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                          count = wcrtomb (cbuf, *arg, &state);\n#   else\n                          count = wctomb (cbuf, *arg);\n#   endif\n                          if (count <= 0)\n                            /* Inconsistency.  */\n                            abort ();\n                          memcpy (result + length, cbuf, count);\n                          length += count;\n                          arg++;\n                          remaining -= count;\n                        }\n                      if (!(arg == arg_end))\n                        abort ();\n                    }\n                  else\n                    {\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                      mbstate_t state;\n                      memset (&state, '\\0', sizeof (mbstate_t));\n#   endif\n                      while (arg < arg_end)\n                        {\n                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */\n                          int count;\n\n                          if (*arg == 0)\n                            abort ();\n#   if HAVE_WCRTOMB && !defined GNULIB_defined_mbstate_t\n                          count = wcrtomb (cbuf, *arg, &state);\n#   else\n                          count = wctomb (cbuf, *arg);\n#   endif\n                          if (count <= 0)\n                            {\n                              /* Cannot convert.  */\n                              if (!(result == resultbuf || result == NULL))\n                                free (result);\n                              if (buf_malloced != NULL)\n                                free (buf_malloced);\n                              CLEANUP ();\n                              errno = EILSEQ;\n                              return NULL;\n                            }\n                          ENSURE_ALLOCATION (xsum (length, count));\n                          memcpy (result + length, cbuf, count);\n                          length += count;\n                          arg++;\n                        }\n                    }\n#  else\n                  ENSURE_ALLOCATION (xsum (length, tmpdst_len));\n                  DCHAR_CPY (result + length, tmpdst, tmpdst_len);\n                  free (tmpdst);\n                  length += tmpdst_len;\n#  endif\n\n                  if (w < width && (dp->flags & FLAG_LEFT))\n                    {\n                      size_t n = width - w;\n                      ENSURE_ALLOCATION (xsum (length, n));\n                      DCHAR_SET (result + length, ' ', n);\n                      length += n;\n                    }\n                }\n# endif\n              }\n#endif\n#if (NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_DOUBLE) && !defined IN_LIBINTL\n            else if ((dp->conversion == 'a' || dp->conversion == 'A')\n# if !(NEED_PRINTF_DIRECTIVE_A || (NEED_PRINTF_LONG_DOUBLE && NEED_PRINTF_DOUBLE))\n                     && (0\n#  if NEED_PRINTF_DOUBLE\n                         || a.arg[dp->arg_index].type == TYPE_DOUBLE\n#  endif\n#  if NEED_PRINTF_LONG_DOUBLE\n                         || a.arg[dp->arg_index].type == TYPE_LONGDOUBLE\n#  endif\n                        )\n# endif\n                    )\n              {\n                arg_type type = a.arg[dp->arg_index].type;\n                int flags = dp->flags;\n                size_t width;\n                int has_precision;\n                size_t precision;\n                size_t tmp_length;\n                size_t count;\n                DCHAR_T tmpbuf[700];\n                DCHAR_T *tmp;\n                DCHAR_T *pad_ptr;\n                DCHAR_T *p;\n\n                width = 0;\n                if (dp->width_start != dp->width_end)\n                  {\n                    if (dp->width_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->width_arg_index].a.a_int;\n                        width = arg;\n                        if (arg < 0)\n                          {\n                            /* \"A negative field width is taken as a '-' flag\n                                followed by a positive field width.\"  */\n                            flags |= FLAG_LEFT;\n                            width = -width;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->width_start;\n\n                        do\n                          width = xsum (xtimes (width, 10), *digitp++ - '0');\n                        while (digitp != dp->width_end);\n                      }\n                  }\n\n                has_precision = 0;\n                precision = 0;\n                if (dp->precision_start != dp->precision_end)\n                  {\n                    if (dp->precision_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->precision_arg_index].a.a_int;\n                        /* \"A negative precision is taken as if the precision\n                            were omitted.\"  */\n                        if (arg >= 0)\n                          {\n                            precision = arg;\n                            has_precision = 1;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->precision_start + 1;\n\n                        precision = 0;\n                        while (digitp != dp->precision_end)\n                          precision = xsum (xtimes (precision, 10), *digitp++ - '0');\n                        has_precision = 1;\n                      }\n                  }\n\n                /* Allocate a temporary buffer of sufficient size.  */\n                if (type == TYPE_LONGDOUBLE)\n                  tmp_length =\n                    (unsigned int) ((LDBL_DIG + 1)\n                                    * 0.831 /* decimal -> hexadecimal */\n                                   )\n                    + 1; /* turn floor into ceil */\n                else\n                  tmp_length =\n                    (unsigned int) ((DBL_DIG + 1)\n                                    * 0.831 /* decimal -> hexadecimal */\n                                   )\n                    + 1; /* turn floor into ceil */\n                if (tmp_length < precision)\n                  tmp_length = precision;\n                /* Account for sign, decimal point etc. */\n                tmp_length = xsum (tmp_length, 12);\n\n                if (tmp_length < width)\n                  tmp_length = width;\n\n                tmp_length = xsum (tmp_length, 1); /* account for trailing NUL */\n\n                if (tmp_length <= sizeof (tmpbuf) / sizeof (DCHAR_T))\n                  tmp = tmpbuf;\n                else\n                  {\n                    size_t tmp_memsize = xtimes (tmp_length, sizeof (DCHAR_T));\n\n                    if (size_overflow_p (tmp_memsize))\n                      /* Overflow, would lead to out of memory.  */\n                      goto out_of_memory;\n                    tmp = (DCHAR_T *) malloc (tmp_memsize);\n                    if (tmp == NULL)\n                      /* Out of memory.  */\n                      goto out_of_memory;\n                  }\n\n                pad_ptr = NULL;\n                p = tmp;\n                if (type == TYPE_LONGDOUBLE)\n                  {\n# if NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_LONG_DOUBLE\n                    long double arg = a.arg[dp->arg_index].a.a_longdouble;\n\n                    if (isnanl (arg))\n                      {\n                        if (dp->conversion == 'A')\n                          {\n                            *p++ = 'N'; *p++ = 'A'; *p++ = 'N';\n                          }\n                        else\n                          {\n                            *p++ = 'n'; *p++ = 'a'; *p++ = 'n';\n                          }\n                      }\n                    else\n                      {\n                        int sign = 0;\n                        DECL_LONG_DOUBLE_ROUNDING\n\n                        BEGIN_LONG_DOUBLE_ROUNDING ();\n\n                        if (signbit (arg)) /* arg < 0.0L or negative zero */\n                          {\n                            sign = -1;\n                            arg = -arg;\n                          }\n\n                        if (sign < 0)\n                          *p++ = '-';\n                        else if (flags & FLAG_SHOWSIGN)\n                          *p++ = '+';\n                        else if (flags & FLAG_SPACE)\n                          *p++ = ' ';\n\n                        if (arg > 0.0L && arg + arg == arg)\n                          {\n                            if (dp->conversion == 'A')\n                              {\n                                *p++ = 'I'; *p++ = 'N'; *p++ = 'F';\n                              }\n                            else\n                              {\n                                *p++ = 'i'; *p++ = 'n'; *p++ = 'f';\n                              }\n                          }\n                        else\n                          {\n                            int exponent;\n                            long double mantissa;\n\n                            if (arg > 0.0L)\n                              mantissa = printf_frexpl (arg, &exponent);\n                            else\n                              {\n                                exponent = 0;\n                                mantissa = 0.0L;\n                              }\n\n                            if (has_precision\n                                && precision < (unsigned int) ((LDBL_DIG + 1) * 0.831) + 1)\n                              {\n                                /* Round the mantissa.  */\n                                long double tail = mantissa;\n                                size_t q;\n\n                                for (q = precision; ; q--)\n                                  {\n                                    int digit = (int) tail;\n                                    tail -= digit;\n                                    if (q == 0)\n                                      {\n                                        if (digit & 1 ? tail >= 0.5L : tail > 0.5L)\n                                          tail = 1 - tail;\n                                        else\n                                          tail = - tail;\n                                        break;\n                                      }\n                                    tail *= 16.0L;\n                                  }\n                                if (tail != 0.0L)\n                                  for (q = precision; q > 0; q--)\n                                    tail *= 0.0625L;\n                                mantissa += tail;\n                              }\n\n                            *p++ = '0';\n                            *p++ = dp->conversion - 'A' + 'X';\n                            pad_ptr = p;\n                            {\n                              int digit;\n\n                              digit = (int) mantissa;\n                              mantissa -= digit;\n                              *p++ = '0' + digit;\n                              if ((flags & FLAG_ALT)\n                                  || mantissa > 0.0L || precision > 0)\n                                {\n                                  *p++ = decimal_point_char ();\n                                  /* This loop terminates because we assume\n                                     that FLT_RADIX is a power of 2.  */\n                                  while (mantissa > 0.0L)\n                                    {\n                                      mantissa *= 16.0L;\n                                      digit = (int) mantissa;\n                                      mantissa -= digit;\n                                      *p++ = digit\n                                             + (digit < 10\n                                                ? '0'\n                                                : dp->conversion - 10);\n                                      if (precision > 0)\n                                        precision--;\n                                    }\n                                  while (precision > 0)\n                                    {\n                                      *p++ = '0';\n                                      precision--;\n                                    }\n                                }\n                              }\n                              *p++ = dp->conversion - 'A' + 'P';\n#  if WIDE_CHAR_VERSION\n                              {\n                                static const wchar_t decimal_format[] =\n                                  { '%', '+', 'd', '\\0' };\n                                SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                              }\n                              while (*p != '\\0')\n                                p++;\n#  else\n                              if (sizeof (DCHAR_T) == 1)\n                                {\n                                  sprintf ((char *) p, \"%+d\", exponent);\n                                  while (*p != '\\0')\n                                    p++;\n                                }\n                              else\n                                {\n                                  char expbuf[6 + 1];\n                                  const char *ep;\n                                  sprintf (expbuf, \"%+d\", exponent);\n                                  for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                    p++;\n                                }\n#  endif\n                          }\n\n                        END_LONG_DOUBLE_ROUNDING ();\n                      }\n# else\n                    abort ();\n# endif\n                  }\n                else\n                  {\n# if NEED_PRINTF_DIRECTIVE_A || NEED_PRINTF_DOUBLE\n                    double arg = a.arg[dp->arg_index].a.a_double;\n\n                    if (isnand (arg))\n                      {\n                        if (dp->conversion == 'A')\n                          {\n                            *p++ = 'N'; *p++ = 'A'; *p++ = 'N';\n                          }\n                        else\n                          {\n                            *p++ = 'n'; *p++ = 'a'; *p++ = 'n';\n                          }\n                      }\n                    else\n                      {\n                        int sign = 0;\n\n                        if (signbit (arg)) /* arg < 0.0 or negative zero */\n                          {\n                            sign = -1;\n                            arg = -arg;\n                          }\n\n                        if (sign < 0)\n                          *p++ = '-';\n                        else if (flags & FLAG_SHOWSIGN)\n                          *p++ = '+';\n                        else if (flags & FLAG_SPACE)\n                          *p++ = ' ';\n\n                        if (arg > 0.0 && arg + arg == arg)\n                          {\n                            if (dp->conversion == 'A')\n                              {\n                                *p++ = 'I'; *p++ = 'N'; *p++ = 'F';\n                              }\n                            else\n                              {\n                                *p++ = 'i'; *p++ = 'n'; *p++ = 'f';\n                              }\n                          }\n                        else\n                          {\n                            int exponent;\n                            double mantissa;\n\n                            if (arg > 0.0)\n                              mantissa = printf_frexp (arg, &exponent);\n                            else\n                              {\n                                exponent = 0;\n                                mantissa = 0.0;\n                              }\n\n                            if (has_precision\n                                && precision < (unsigned int) ((DBL_DIG + 1) * 0.831) + 1)\n                              {\n                                /* Round the mantissa.  */\n                                double tail = mantissa;\n                                size_t q;\n\n                                for (q = precision; ; q--)\n                                  {\n                                    int digit = (int) tail;\n                                    tail -= digit;\n                                    if (q == 0)\n                                      {\n                                        if (digit & 1 ? tail >= 0.5 : tail > 0.5)\n                                          tail = 1 - tail;\n                                        else\n                                          tail = - tail;\n                                        break;\n                                      }\n                                    tail *= 16.0;\n                                  }\n                                if (tail != 0.0)\n                                  for (q = precision; q > 0; q--)\n                                    tail *= 0.0625;\n                                mantissa += tail;\n                              }\n\n                            *p++ = '0';\n                            *p++ = dp->conversion - 'A' + 'X';\n                            pad_ptr = p;\n                            {\n                              int digit;\n\n                              digit = (int) mantissa;\n                              mantissa -= digit;\n                              *p++ = '0' + digit;\n                              if ((flags & FLAG_ALT)\n                                  || mantissa > 0.0 || precision > 0)\n                                {\n                                  *p++ = decimal_point_char ();\n                                  /* This loop terminates because we assume\n                                     that FLT_RADIX is a power of 2.  */\n                                  while (mantissa > 0.0)\n                                    {\n                                      mantissa *= 16.0;\n                                      digit = (int) mantissa;\n                                      mantissa -= digit;\n                                      *p++ = digit\n                                             + (digit < 10\n                                                ? '0'\n                                                : dp->conversion - 10);\n                                      if (precision > 0)\n                                        precision--;\n                                    }\n                                  while (precision > 0)\n                                    {\n                                      *p++ = '0';\n                                      precision--;\n                                    }\n                                }\n                              }\n                              *p++ = dp->conversion - 'A' + 'P';\n#  if WIDE_CHAR_VERSION\n                              {\n                                static const wchar_t decimal_format[] =\n                                  { '%', '+', 'd', '\\0' };\n                                SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                              }\n                              while (*p != '\\0')\n                                p++;\n#  else\n                              if (sizeof (DCHAR_T) == 1)\n                                {\n                                  sprintf ((char *) p, \"%+d\", exponent);\n                                  while (*p != '\\0')\n                                    p++;\n                                }\n                              else\n                                {\n                                  char expbuf[6 + 1];\n                                  const char *ep;\n                                  sprintf (expbuf, \"%+d\", exponent);\n                                  for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                    p++;\n                                }\n#  endif\n                          }\n                      }\n# else\n                    abort ();\n# endif\n                  }\n\n                /* The generated string now extends from tmp to p, with the\n                   zero padding insertion point being at pad_ptr.  */\n                count = p - tmp;\n\n                if (count < width)\n                  {\n                    size_t pad = width - count;\n                    DCHAR_T *end = p + pad;\n\n                    if (flags & FLAG_LEFT)\n                      {\n                        /* Pad with spaces on the right.  */\n                        for (; pad > 0; pad--)\n                          *p++ = ' ';\n                      }\n                    else if ((flags & FLAG_ZERO) && pad_ptr != NULL)\n                      {\n                        /* Pad with zeroes.  */\n                        DCHAR_T *q = end;\n\n                        while (p > pad_ptr)\n                          *--q = *--p;\n                        for (; pad > 0; pad--)\n                          *p++ = '0';\n                      }\n                    else\n                      {\n                        /* Pad with spaces on the left.  */\n                        DCHAR_T *q = end;\n\n                        while (p > tmp)\n                          *--q = *--p;\n                        for (; pad > 0; pad--)\n                          *p++ = ' ';\n                      }\n\n                    p = end;\n                  }\n\n                count = p - tmp;\n\n                if (count >= tmp_length)\n                  /* tmp_length was incorrectly calculated - fix the\n                     code above!  */\n                  abort ();\n\n                /* Make room for the result.  */\n                if (count >= allocated - length)\n                  {\n                    size_t n = xsum (length, count);\n\n                    ENSURE_ALLOCATION (n);\n                  }\n\n                /* Append the result.  */\n                memcpy (result + length, tmp, count * sizeof (DCHAR_T));\n                if (tmp != tmpbuf)\n                  free (tmp);\n                length += count;\n              }\n#endif\n#if (NEED_PRINTF_INFINITE_DOUBLE || NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE || NEED_PRINTF_LONG_DOUBLE) && !defined IN_LIBINTL\n            else if ((dp->conversion == 'f' || dp->conversion == 'F'\n                      || dp->conversion == 'e' || dp->conversion == 'E'\n                      || dp->conversion == 'g' || dp->conversion == 'G'\n                      || dp->conversion == 'a' || dp->conversion == 'A')\n                     && (0\n# if NEED_PRINTF_DOUBLE\n                         || a.arg[dp->arg_index].type == TYPE_DOUBLE\n# elif NEED_PRINTF_INFINITE_DOUBLE\n                         || (a.arg[dp->arg_index].type == TYPE_DOUBLE\n                             /* The systems (mingw) which produce wrong output\n                                for Inf, -Inf, and NaN also do so for -0.0.\n                                Therefore we treat this case here as well.  */\n                             && is_infinite_or_zero (a.arg[dp->arg_index].a.a_double))\n# endif\n# if NEED_PRINTF_LONG_DOUBLE\n                         || a.arg[dp->arg_index].type == TYPE_LONGDOUBLE\n# elif NEED_PRINTF_INFINITE_LONG_DOUBLE\n                         || (a.arg[dp->arg_index].type == TYPE_LONGDOUBLE\n                             /* Some systems produce wrong output for Inf,\n                                -Inf, and NaN.  Some systems in this category\n                                (IRIX 5.3) also do so for -0.0.  Therefore we\n                                treat this case here as well.  */\n                             && is_infinite_or_zerol (a.arg[dp->arg_index].a.a_longdouble))\n# endif\n                        ))\n              {\n# if (NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE) && (NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE)\n                arg_type type = a.arg[dp->arg_index].type;\n# endif\n                int flags = dp->flags;\n                size_t width;\n                size_t count;\n                int has_precision;\n                size_t precision;\n                size_t tmp_length;\n                DCHAR_T tmpbuf[700];\n                DCHAR_T *tmp;\n                DCHAR_T *pad_ptr;\n                DCHAR_T *p;\n\n                width = 0;\n                if (dp->width_start != dp->width_end)\n                  {\n                    if (dp->width_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->width_arg_index].a.a_int;\n                        width = arg;\n                        if (arg < 0)\n                          {\n                            /* \"A negative field width is taken as a '-' flag\n                                followed by a positive field width.\"  */\n                            flags |= FLAG_LEFT;\n                            width = -width;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->width_start;\n\n                        do\n                          width = xsum (xtimes (width, 10), *digitp++ - '0');\n                        while (digitp != dp->width_end);\n                      }\n                  }\n\n                has_precision = 0;\n                precision = 0;\n                if (dp->precision_start != dp->precision_end)\n                  {\n                    if (dp->precision_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->precision_arg_index].a.a_int;\n                        /* \"A negative precision is taken as if the precision\n                            were omitted.\"  */\n                        if (arg >= 0)\n                          {\n                            precision = arg;\n                            has_precision = 1;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->precision_start + 1;\n\n                        precision = 0;\n                        while (digitp != dp->precision_end)\n                          precision = xsum (xtimes (precision, 10), *digitp++ - '0');\n                        has_precision = 1;\n                      }\n                  }\n\n                /* POSIX specifies the default precision to be 6 for %f, %F,\n                   %e, %E, but not for %g, %G.  Implementations appear to use\n                   the same default precision also for %g, %G.  But for %a, %A,\n                   the default precision is 0.  */\n                if (!has_precision)\n                  if (!(dp->conversion == 'a' || dp->conversion == 'A'))\n                    precision = 6;\n\n                /* Allocate a temporary buffer of sufficient size.  */\n# if NEED_PRINTF_DOUBLE && NEED_PRINTF_LONG_DOUBLE\n                tmp_length = (type == TYPE_LONGDOUBLE ? LDBL_DIG + 1 : DBL_DIG + 1);\n# elif NEED_PRINTF_INFINITE_DOUBLE && NEED_PRINTF_LONG_DOUBLE\n                tmp_length = (type == TYPE_LONGDOUBLE ? LDBL_DIG + 1 : 0);\n# elif NEED_PRINTF_LONG_DOUBLE\n                tmp_length = LDBL_DIG + 1;\n# elif NEED_PRINTF_DOUBLE\n                tmp_length = DBL_DIG + 1;\n# else\n                tmp_length = 0;\n# endif\n                if (tmp_length < precision)\n                  tmp_length = precision;\n# if NEED_PRINTF_LONG_DOUBLE\n#  if NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE\n                if (type == TYPE_LONGDOUBLE)\n#  endif\n                  if (dp->conversion == 'f' || dp->conversion == 'F')\n                    {\n                      long double arg = a.arg[dp->arg_index].a.a_longdouble;\n                      if (!(isnanl (arg) || arg + arg == arg))\n                        {\n                          /* arg is finite and nonzero.  */\n                          int exponent = floorlog10l (arg < 0 ? -arg : arg);\n                          if (exponent >= 0 && tmp_length < exponent + precision)\n                            tmp_length = exponent + precision;\n                        }\n                    }\n# endif\n# if NEED_PRINTF_DOUBLE\n#  if NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE\n                if (type == TYPE_DOUBLE)\n#  endif\n                  if (dp->conversion == 'f' || dp->conversion == 'F')\n                    {\n                      double arg = a.arg[dp->arg_index].a.a_double;\n                      if (!(isnand (arg) || arg + arg == arg))\n                        {\n                          /* arg is finite and nonzero.  */\n                          int exponent = floorlog10 (arg < 0 ? -arg : arg);\n                          if (exponent >= 0 && tmp_length < exponent + precision)\n                            tmp_length = exponent + precision;\n                        }\n                    }\n# endif\n                /* Account for sign, decimal point etc. */\n                tmp_length = xsum (tmp_length, 12);\n\n                if (tmp_length < width)\n                  tmp_length = width;\n\n                tmp_length = xsum (tmp_length, 1); /* account for trailing NUL */\n\n                if (tmp_length <= sizeof (tmpbuf) / sizeof (DCHAR_T))\n                  tmp = tmpbuf;\n                else\n                  {\n                    size_t tmp_memsize = xtimes (tmp_length, sizeof (DCHAR_T));\n\n                    if (size_overflow_p (tmp_memsize))\n                      /* Overflow, would lead to out of memory.  */\n                      goto out_of_memory;\n                    tmp = (DCHAR_T *) malloc (tmp_memsize);\n                    if (tmp == NULL)\n                      /* Out of memory.  */\n                      goto out_of_memory;\n                  }\n\n                pad_ptr = NULL;\n                p = tmp;\n\n# if NEED_PRINTF_LONG_DOUBLE || NEED_PRINTF_INFINITE_LONG_DOUBLE\n#  if NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE\n                if (type == TYPE_LONGDOUBLE)\n#  endif\n                  {\n                    long double arg = a.arg[dp->arg_index].a.a_longdouble;\n\n                    if (isnanl (arg))\n                      {\n                        if (dp->conversion >= 'A' && dp->conversion <= 'Z')\n                          {\n                            *p++ = 'N'; *p++ = 'A'; *p++ = 'N';\n                          }\n                        else\n                          {\n                            *p++ = 'n'; *p++ = 'a'; *p++ = 'n';\n                          }\n                      }\n                    else\n                      {\n                        int sign = 0;\n                        DECL_LONG_DOUBLE_ROUNDING\n\n                        BEGIN_LONG_DOUBLE_ROUNDING ();\n\n                        if (signbit (arg)) /* arg < 0.0L or negative zero */\n                          {\n                            sign = -1;\n                            arg = -arg;\n                          }\n\n                        if (sign < 0)\n                          *p++ = '-';\n                        else if (flags & FLAG_SHOWSIGN)\n                          *p++ = '+';\n                        else if (flags & FLAG_SPACE)\n                          *p++ = ' ';\n\n                        if (arg > 0.0L && arg + arg == arg)\n                          {\n                            if (dp->conversion >= 'A' && dp->conversion <= 'Z')\n                              {\n                                *p++ = 'I'; *p++ = 'N'; *p++ = 'F';\n                              }\n                            else\n                              {\n                                *p++ = 'i'; *p++ = 'n'; *p++ = 'f';\n                              }\n                          }\n                        else\n                          {\n#  if NEED_PRINTF_LONG_DOUBLE\n                            pad_ptr = p;\n\n                            if (dp->conversion == 'f' || dp->conversion == 'F')\n                              {\n                                char *digits;\n                                size_t ndigits;\n\n                                digits =\n                                  scale10_round_decimal_long_double (arg, precision);\n                                if (digits == NULL)\n                                  {\n                                    END_LONG_DOUBLE_ROUNDING ();\n                                    goto out_of_memory;\n                                  }\n                                ndigits = strlen (digits);\n\n                                if (ndigits > precision)\n                                  do\n                                    {\n                                      --ndigits;\n                                      *p++ = digits[ndigits];\n                                    }\n                                  while (ndigits > precision);\n                                else\n                                  *p++ = '0';\n                                /* Here ndigits <= precision.  */\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > ndigits; precision--)\n                                      *p++ = '0';\n                                    while (ndigits > 0)\n                                      {\n                                        --ndigits;\n                                        *p++ = digits[ndigits];\n                                      }\n                                  }\n\n                                free (digits);\n                              }\n                            else if (dp->conversion == 'e' || dp->conversion == 'E')\n                              {\n                                int exponent;\n\n                                if (arg == 0.0L)\n                                  {\n                                    exponent = 0;\n                                    *p++ = '0';\n                                    if ((flags & FLAG_ALT) || precision > 0)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        for (; precision > 0; precision--)\n                                          *p++ = '0';\n                                      }\n                                  }\n                                else\n                                  {\n                                    /* arg > 0.0L.  */\n                                    int adjusted;\n                                    char *digits;\n                                    size_t ndigits;\n\n                                    exponent = floorlog10l (arg);\n                                    adjusted = 0;\n                                    for (;;)\n                                      {\n                                        digits =\n                                          scale10_round_decimal_long_double (arg,\n                                                                             (int)precision - exponent);\n                                        if (digits == NULL)\n                                          {\n                                            END_LONG_DOUBLE_ROUNDING ();\n                                            goto out_of_memory;\n                                          }\n                                        ndigits = strlen (digits);\n\n                                        if (ndigits == precision + 1)\n                                          break;\n                                        if (ndigits < precision\n                                            || ndigits > precision + 2)\n                                          /* The exponent was not guessed\n                                             precisely enough.  */\n                                          abort ();\n                                        if (adjusted)\n                                          /* None of two values of exponent is\n                                             the right one.  Prevent an endless\n                                             loop.  */\n                                          abort ();\n                                        free (digits);\n                                        if (ndigits == precision)\n                                          exponent -= 1;\n                                        else\n                                          exponent += 1;\n                                        adjusted = 1;\n                                      }\n                                    /* Here ndigits = precision+1.  */\n                                    if (is_borderline (digits, precision))\n                                      {\n                                        /* Maybe the exponent guess was too high\n                                           and a smaller exponent can be reached\n                                           by turning a 10...0 into 9...9x.  */\n                                        char *digits2 =\n                                          scale10_round_decimal_long_double (arg,\n                                                                             (int)precision - exponent + 1);\n                                        if (digits2 == NULL)\n                                          {\n                                            free (digits);\n                                            END_LONG_DOUBLE_ROUNDING ();\n                                            goto out_of_memory;\n                                          }\n                                        if (strlen (digits2) == precision + 1)\n                                          {\n                                            free (digits);\n                                            digits = digits2;\n                                            exponent -= 1;\n                                          }\n                                        else\n                                          free (digits2);\n                                      }\n                                    /* Here ndigits = precision+1.  */\n\n                                    *p++ = digits[--ndigits];\n                                    if ((flags & FLAG_ALT) || precision > 0)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        while (ndigits > 0)\n                                          {\n                                            --ndigits;\n                                            *p++ = digits[ndigits];\n                                          }\n                                      }\n\n                                    free (digits);\n                                  }\n\n                                *p++ = dp->conversion; /* 'e' or 'E' */\n#   if WIDE_CHAR_VERSION\n                                {\n                                  static const wchar_t decimal_format[] =\n                                    { '%', '+', '.', '2', 'd', '\\0' };\n                                  SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                                }\n                                while (*p != '\\0')\n                                  p++;\n#   else\n                                if (sizeof (DCHAR_T) == 1)\n                                  {\n                                    sprintf ((char *) p, \"%+.2d\", exponent);\n                                    while (*p != '\\0')\n                                      p++;\n                                  }\n                                else\n                                  {\n                                    char expbuf[6 + 1];\n                                    const char *ep;\n                                    sprintf (expbuf, \"%+.2d\", exponent);\n                                    for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                      p++;\n                                  }\n#   endif\n                              }\n                            else if (dp->conversion == 'g' || dp->conversion == 'G')\n                              {\n                                if (precision == 0)\n                                  precision = 1;\n                                /* precision >= 1.  */\n\n                                if (arg == 0.0L)\n                                  /* The exponent is 0, >= -4, < precision.\n                                     Use fixed-point notation.  */\n                                  {\n                                    size_t ndigits = precision;\n                                    /* Number of trailing zeroes that have to be\n                                       dropped.  */\n                                    size_t nzeroes =\n                                      (flags & FLAG_ALT ? 0 : precision - 1);\n\n                                    --ndigits;\n                                    *p++ = '0';\n                                    if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        while (ndigits > nzeroes)\n                                          {\n                                            --ndigits;\n                                            *p++ = '0';\n                                          }\n                                      }\n                                  }\n                                else\n                                  {\n                                    /* arg > 0.0L.  */\n                                    int exponent;\n                                    int adjusted;\n                                    char *digits;\n                                    size_t ndigits;\n                                    size_t nzeroes;\n\n                                    exponent = floorlog10l (arg);\n                                    adjusted = 0;\n                                    for (;;)\n                                      {\n                                        digits =\n                                          scale10_round_decimal_long_double (arg,\n                                                                             (int)(precision - 1) - exponent);\n                                        if (digits == NULL)\n                                          {\n                                            END_LONG_DOUBLE_ROUNDING ();\n                                            goto out_of_memory;\n                                          }\n                                        ndigits = strlen (digits);\n\n                                        if (ndigits == precision)\n                                          break;\n                                        if (ndigits < precision - 1\n                                            || ndigits > precision + 1)\n                                          /* The exponent was not guessed\n                                             precisely enough.  */\n                                          abort ();\n                                        if (adjusted)\n                                          /* None of two values of exponent is\n                                             the right one.  Prevent an endless\n                                             loop.  */\n                                          abort ();\n                                        free (digits);\n                                        if (ndigits < precision)\n                                          exponent -= 1;\n                                        else\n                                          exponent += 1;\n                                        adjusted = 1;\n                                      }\n                                    /* Here ndigits = precision.  */\n                                    if (is_borderline (digits, precision - 1))\n                                      {\n                                        /* Maybe the exponent guess was too high\n                                           and a smaller exponent can be reached\n                                           by turning a 10...0 into 9...9x.  */\n                                        char *digits2 =\n                                          scale10_round_decimal_long_double (arg,\n                                                                             (int)(precision - 1) - exponent + 1);\n                                        if (digits2 == NULL)\n                                          {\n                                            free (digits);\n                                            END_LONG_DOUBLE_ROUNDING ();\n                                            goto out_of_memory;\n                                          }\n                                        if (strlen (digits2) == precision)\n                                          {\n                                            free (digits);\n                                            digits = digits2;\n                                            exponent -= 1;\n                                          }\n                                        else\n                                          free (digits2);\n                                      }\n                                    /* Here ndigits = precision.  */\n\n                                    /* Determine the number of trailing zeroes\n                                       that have to be dropped.  */\n                                    nzeroes = 0;\n                                    if ((flags & FLAG_ALT) == 0)\n                                      while (nzeroes < ndigits\n                                             && digits[nzeroes] == '0')\n                                        nzeroes++;\n\n                                    /* The exponent is now determined.  */\n                                    if (exponent >= -4\n                                        && exponent < (long)precision)\n                                      {\n                                        /* Fixed-point notation:\n                                           max(exponent,0)+1 digits, then the\n                                           decimal point, then the remaining\n                                           digits without trailing zeroes.  */\n                                        if (exponent >= 0)\n                                          {\n                                            size_t ecount = exponent + 1;\n                                            /* Note: count <= precision = ndigits.  */\n                                            for (; ecount > 0; ecount--)\n                                              *p++ = digits[--ndigits];\n                                            if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                              {\n                                                *p++ = decimal_point_char ();\n                                                while (ndigits > nzeroes)\n                                                  {\n                                                    --ndigits;\n                                                    *p++ = digits[ndigits];\n                                                  }\n                                              }\n                                          }\n                                        else\n                                          {\n                                            size_t ecount = -exponent - 1;\n                                            *p++ = '0';\n                                            *p++ = decimal_point_char ();\n                                            for (; ecount > 0; ecount--)\n                                              *p++ = '0';\n                                            while (ndigits > nzeroes)\n                                              {\n                                                --ndigits;\n                                                *p++ = digits[ndigits];\n                                              }\n                                          }\n                                      }\n                                    else\n                                      {\n                                        /* Exponential notation.  */\n                                        *p++ = digits[--ndigits];\n                                        if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                          {\n                                            *p++ = decimal_point_char ();\n                                            while (ndigits > nzeroes)\n                                              {\n                                                --ndigits;\n                                                *p++ = digits[ndigits];\n                                              }\n                                          }\n                                        *p++ = dp->conversion - 'G' + 'E'; /* 'e' or 'E' */\n#   if WIDE_CHAR_VERSION\n                                        {\n                                          static const wchar_t decimal_format[] =\n                                            { '%', '+', '.', '2', 'd', '\\0' };\n                                          SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                                        }\n                                        while (*p != '\\0')\n                                          p++;\n#   else\n                                        if (sizeof (DCHAR_T) == 1)\n                                          {\n                                            sprintf ((char *) p, \"%+.2d\", exponent);\n                                            while (*p != '\\0')\n                                              p++;\n                                          }\n                                        else\n                                          {\n                                            char expbuf[6 + 1];\n                                            const char *ep;\n                                            sprintf (expbuf, \"%+.2d\", exponent);\n                                            for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                              p++;\n                                          }\n#   endif\n                                      }\n\n                                    free (digits);\n                                  }\n                              }\n                            else\n                              abort ();\n#  else\n                            /* arg is finite.  */\n                            if (!(arg == 0.0L))\n                              abort ();\n\n                            pad_ptr = p;\n\n                            if (dp->conversion == 'f' || dp->conversion == 'F')\n                              {\n                                *p++ = '0';\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > 0; precision--)\n                                      *p++ = '0';\n                                  }\n                              }\n                            else if (dp->conversion == 'e' || dp->conversion == 'E')\n                              {\n                                *p++ = '0';\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > 0; precision--)\n                                      *p++ = '0';\n                                  }\n                                *p++ = dp->conversion; /* 'e' or 'E' */\n                                *p++ = '+';\n                                *p++ = '0';\n                                *p++ = '0';\n                              }\n                            else if (dp->conversion == 'g' || dp->conversion == 'G')\n                              {\n                                *p++ = '0';\n                                if (flags & FLAG_ALT)\n                                  {\n                                    size_t ndigits =\n                                      (precision > 0 ? precision - 1 : 0);\n                                    *p++ = decimal_point_char ();\n                                    for (; ndigits > 0; --ndigits)\n                                      *p++ = '0';\n                                  }\n                              }\n                            else if (dp->conversion == 'a' || dp->conversion == 'A')\n                              {\n                                *p++ = '0';\n                                *p++ = dp->conversion - 'A' + 'X';\n                                pad_ptr = p;\n                                *p++ = '0';\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > 0; precision--)\n                                      *p++ = '0';\n                                  }\n                                *p++ = dp->conversion - 'A' + 'P';\n                                *p++ = '+';\n                                *p++ = '0';\n                              }\n                            else\n                              abort ();\n#  endif\n                          }\n\n                        END_LONG_DOUBLE_ROUNDING ();\n                      }\n                  }\n#  if NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE\n                else\n#  endif\n# endif\n# if NEED_PRINTF_DOUBLE || NEED_PRINTF_INFINITE_DOUBLE\n                  {\n                    double arg = a.arg[dp->arg_index].a.a_double;\n\n                    if (isnand (arg))\n                      {\n                        if (dp->conversion >= 'A' && dp->conversion <= 'Z')\n                          {\n                            *p++ = 'N'; *p++ = 'A'; *p++ = 'N';\n                          }\n                        else\n                          {\n                            *p++ = 'n'; *p++ = 'a'; *p++ = 'n';\n                          }\n                      }\n                    else\n                      {\n                        int sign = 0;\n\n                        if (signbit (arg)) /* arg < 0.0 or negative zero */\n                          {\n                            sign = -1;\n                            arg = -arg;\n                          }\n\n                        if (sign < 0)\n                          *p++ = '-';\n                        else if (flags & FLAG_SHOWSIGN)\n                          *p++ = '+';\n                        else if (flags & FLAG_SPACE)\n                          *p++ = ' ';\n\n                        if (arg > 0.0 && arg + arg == arg)\n                          {\n                            if (dp->conversion >= 'A' && dp->conversion <= 'Z')\n                              {\n                                *p++ = 'I'; *p++ = 'N'; *p++ = 'F';\n                              }\n                            else\n                              {\n                                *p++ = 'i'; *p++ = 'n'; *p++ = 'f';\n                              }\n                          }\n                        else\n                          {\n#  if NEED_PRINTF_DOUBLE\n                            pad_ptr = p;\n\n                            if (dp->conversion == 'f' || dp->conversion == 'F')\n                              {\n                                char *digits;\n                                size_t ndigits;\n\n                                digits =\n                                  scale10_round_decimal_double (arg, precision);\n                                if (digits == NULL)\n                                  goto out_of_memory;\n                                ndigits = strlen (digits);\n\n                                if (ndigits > precision)\n                                  do\n                                    {\n                                      --ndigits;\n                                      *p++ = digits[ndigits];\n                                    }\n                                  while (ndigits > precision);\n                                else\n                                  *p++ = '0';\n                                /* Here ndigits <= precision.  */\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > ndigits; precision--)\n                                      *p++ = '0';\n                                    while (ndigits > 0)\n                                      {\n                                        --ndigits;\n                                        *p++ = digits[ndigits];\n                                      }\n                                  }\n\n                                free (digits);\n                              }\n                            else if (dp->conversion == 'e' || dp->conversion == 'E')\n                              {\n                                int exponent;\n\n                                if (arg == 0.0)\n                                  {\n                                    exponent = 0;\n                                    *p++ = '0';\n                                    if ((flags & FLAG_ALT) || precision > 0)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        for (; precision > 0; precision--)\n                                          *p++ = '0';\n                                      }\n                                  }\n                                else\n                                  {\n                                    /* arg > 0.0.  */\n                                    int adjusted;\n                                    char *digits;\n                                    size_t ndigits;\n\n                                    exponent = floorlog10 (arg);\n                                    adjusted = 0;\n                                    for (;;)\n                                      {\n                                        digits =\n                                          scale10_round_decimal_double (arg,\n                                                                        (int)precision - exponent);\n                                        if (digits == NULL)\n                                          goto out_of_memory;\n                                        ndigits = strlen (digits);\n\n                                        if (ndigits == precision + 1)\n                                          break;\n                                        if (ndigits < precision\n                                            || ndigits > precision + 2)\n                                          /* The exponent was not guessed\n                                             precisely enough.  */\n                                          abort ();\n                                        if (adjusted)\n                                          /* None of two values of exponent is\n                                             the right one.  Prevent an endless\n                                             loop.  */\n                                          abort ();\n                                        free (digits);\n                                        if (ndigits == precision)\n                                          exponent -= 1;\n                                        else\n                                          exponent += 1;\n                                        adjusted = 1;\n                                      }\n                                    /* Here ndigits = precision+1.  */\n                                    if (is_borderline (digits, precision))\n                                      {\n                                        /* Maybe the exponent guess was too high\n                                           and a smaller exponent can be reached\n                                           by turning a 10...0 into 9...9x.  */\n                                        char *digits2 =\n                                          scale10_round_decimal_double (arg,\n                                                                        (int)precision - exponent + 1);\n                                        if (digits2 == NULL)\n                                          {\n                                            free (digits);\n                                            goto out_of_memory;\n                                          }\n                                        if (strlen (digits2) == precision + 1)\n                                          {\n                                            free (digits);\n                                            digits = digits2;\n                                            exponent -= 1;\n                                          }\n                                        else\n                                          free (digits2);\n                                      }\n                                    /* Here ndigits = precision+1.  */\n\n                                    *p++ = digits[--ndigits];\n                                    if ((flags & FLAG_ALT) || precision > 0)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        while (ndigits > 0)\n                                          {\n                                            --ndigits;\n                                            *p++ = digits[ndigits];\n                                          }\n                                      }\n\n                                    free (digits);\n                                  }\n\n                                *p++ = dp->conversion; /* 'e' or 'E' */\n#   if WIDE_CHAR_VERSION\n                                {\n                                  static const wchar_t decimal_format[] =\n                                    /* Produce the same number of exponent digits\n                                       as the native printf implementation.  */\n#    if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                                    { '%', '+', '.', '3', 'd', '\\0' };\n#    else\n                                    { '%', '+', '.', '2', 'd', '\\0' };\n#    endif\n                                  SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                                }\n                                while (*p != '\\0')\n                                  p++;\n#   else\n                                {\n                                  static const char decimal_format[] =\n                                    /* Produce the same number of exponent digits\n                                       as the native printf implementation.  */\n#    if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                                    \"%+.3d\";\n#    else\n                                    \"%+.2d\";\n#    endif\n                                  if (sizeof (DCHAR_T) == 1)\n                                    {\n                                      sprintf ((char *) p, decimal_format, exponent);\n                                      while (*p != '\\0')\n                                        p++;\n                                    }\n                                  else\n                                    {\n                                      char expbuf[6 + 1];\n                                      const char *ep;\n                                      sprintf (expbuf, decimal_format, exponent);\n                                      for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                        p++;\n                                    }\n                                }\n#   endif\n                              }\n                            else if (dp->conversion == 'g' || dp->conversion == 'G')\n                              {\n                                if (precision == 0)\n                                  precision = 1;\n                                /* precision >= 1.  */\n\n                                if (arg == 0.0)\n                                  /* The exponent is 0, >= -4, < precision.\n                                     Use fixed-point notation.  */\n                                  {\n                                    size_t ndigits = precision;\n                                    /* Number of trailing zeroes that have to be\n                                       dropped.  */\n                                    size_t nzeroes =\n                                      (flags & FLAG_ALT ? 0 : precision - 1);\n\n                                    --ndigits;\n                                    *p++ = '0';\n                                    if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                      {\n                                        *p++ = decimal_point_char ();\n                                        while (ndigits > nzeroes)\n                                          {\n                                            --ndigits;\n                                            *p++ = '0';\n                                          }\n                                      }\n                                  }\n                                else\n                                  {\n                                    /* arg > 0.0.  */\n                                    int exponent;\n                                    int adjusted;\n                                    char *digits;\n                                    size_t ndigits;\n                                    size_t nzeroes;\n\n                                    exponent = floorlog10 (arg);\n                                    adjusted = 0;\n                                    for (;;)\n                                      {\n                                        digits =\n                                          scale10_round_decimal_double (arg,\n                                                                        (int)(precision - 1) - exponent);\n                                        if (digits == NULL)\n                                          goto out_of_memory;\n                                        ndigits = strlen (digits);\n\n                                        if (ndigits == precision)\n                                          break;\n                                        if (ndigits < precision - 1\n                                            || ndigits > precision + 1)\n                                          /* The exponent was not guessed\n                                             precisely enough.  */\n                                          abort ();\n                                        if (adjusted)\n                                          /* None of two values of exponent is\n                                             the right one.  Prevent an endless\n                                             loop.  */\n                                          abort ();\n                                        free (digits);\n                                        if (ndigits < precision)\n                                          exponent -= 1;\n                                        else\n                                          exponent += 1;\n                                        adjusted = 1;\n                                      }\n                                    /* Here ndigits = precision.  */\n                                    if (is_borderline (digits, precision - 1))\n                                      {\n                                        /* Maybe the exponent guess was too high\n                                           and a smaller exponent can be reached\n                                           by turning a 10...0 into 9...9x.  */\n                                        char *digits2 =\n                                          scale10_round_decimal_double (arg,\n                                                                        (int)(precision - 1) - exponent + 1);\n                                        if (digits2 == NULL)\n                                          {\n                                            free (digits);\n                                            goto out_of_memory;\n                                          }\n                                        if (strlen (digits2) == precision)\n                                          {\n                                            free (digits);\n                                            digits = digits2;\n                                            exponent -= 1;\n                                          }\n                                        else\n                                          free (digits2);\n                                      }\n                                    /* Here ndigits = precision.  */\n\n                                    /* Determine the number of trailing zeroes\n                                       that have to be dropped.  */\n                                    nzeroes = 0;\n                                    if ((flags & FLAG_ALT) == 0)\n                                      while (nzeroes < ndigits\n                                             && digits[nzeroes] == '0')\n                                        nzeroes++;\n\n                                    /* The exponent is now determined.  */\n                                    if (exponent >= -4\n                                        && exponent < (long)precision)\n                                      {\n                                        /* Fixed-point notation:\n                                           max(exponent,0)+1 digits, then the\n                                           decimal point, then the remaining\n                                           digits without trailing zeroes.  */\n                                        if (exponent >= 0)\n                                          {\n                                            size_t ecount = exponent + 1;\n                                            /* Note: ecount <= precision = ndigits.  */\n                                            for (; ecount > 0; ecount--)\n                                              *p++ = digits[--ndigits];\n                                            if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                              {\n                                                *p++ = decimal_point_char ();\n                                                while (ndigits > nzeroes)\n                                                  {\n                                                    --ndigits;\n                                                    *p++ = digits[ndigits];\n                                                  }\n                                              }\n                                          }\n                                        else\n                                          {\n                                            size_t ecount = -exponent - 1;\n                                            *p++ = '0';\n                                            *p++ = decimal_point_char ();\n                                            for (; ecount > 0; ecount--)\n                                              *p++ = '0';\n                                            while (ndigits > nzeroes)\n                                              {\n                                                --ndigits;\n                                                *p++ = digits[ndigits];\n                                              }\n                                          }\n                                      }\n                                    else\n                                      {\n                                        /* Exponential notation.  */\n                                        *p++ = digits[--ndigits];\n                                        if ((flags & FLAG_ALT) || ndigits > nzeroes)\n                                          {\n                                            *p++ = decimal_point_char ();\n                                            while (ndigits > nzeroes)\n                                              {\n                                                --ndigits;\n                                                *p++ = digits[ndigits];\n                                              }\n                                          }\n                                        *p++ = dp->conversion - 'G' + 'E'; /* 'e' or 'E' */\n#   if WIDE_CHAR_VERSION\n                                        {\n                                          static const wchar_t decimal_format[] =\n                                            /* Produce the same number of exponent digits\n                                               as the native printf implementation.  */\n#    if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                                            { '%', '+', '.', '3', 'd', '\\0' };\n#    else\n                                            { '%', '+', '.', '2', 'd', '\\0' };\n#    endif\n                                          SNPRINTF (p, 6 + 1, decimal_format, exponent);\n                                        }\n                                        while (*p != '\\0')\n                                          p++;\n#   else\n                                        {\n                                          static const char decimal_format[] =\n                                            /* Produce the same number of exponent digits\n                                               as the native printf implementation.  */\n#    if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                                            \"%+.3d\";\n#    else\n                                            \"%+.2d\";\n#    endif\n                                          if (sizeof (DCHAR_T) == 1)\n                                            {\n                                              sprintf ((char *) p, decimal_format, exponent);\n                                              while (*p != '\\0')\n                                                p++;\n                                            }\n                                          else\n                                            {\n                                              char expbuf[6 + 1];\n                                              const char *ep;\n                                              sprintf (expbuf, decimal_format, exponent);\n                                              for (ep = expbuf; (*p = *ep) != '\\0'; ep++)\n                                                p++;\n                                            }\n                                        }\n#   endif\n                                      }\n\n                                    free (digits);\n                                  }\n                              }\n                            else\n                              abort ();\n#  else\n                            /* arg is finite.  */\n                            if (!(arg == 0.0))\n                              abort ();\n\n                            pad_ptr = p;\n\n                            if (dp->conversion == 'f' || dp->conversion == 'F')\n                              {\n                                *p++ = '0';\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > 0; precision--)\n                                      *p++ = '0';\n                                  }\n                              }\n                            else if (dp->conversion == 'e' || dp->conversion == 'E')\n                              {\n                                *p++ = '0';\n                                if ((flags & FLAG_ALT) || precision > 0)\n                                  {\n                                    *p++ = decimal_point_char ();\n                                    for (; precision > 0; precision--)\n                                      *p++ = '0';\n                                  }\n                                *p++ = dp->conversion; /* 'e' or 'E' */\n                                *p++ = '+';\n                                /* Produce the same number of exponent digits as\n                                   the native printf implementation.  */\n#   if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                                *p++ = '0';\n#   endif\n                                *p++ = '0';\n                                *p++ = '0';\n                              }\n                            else if (dp->conversion == 'g' || dp->conversion == 'G')\n                              {\n                                *p++ = '0';\n                                if (flags & FLAG_ALT)\n                                  {\n                                    size_t ndigits =\n                                      (precision > 0 ? precision - 1 : 0);\n                                    *p++ = decimal_point_char ();\n                                    for (; ndigits > 0; --ndigits)\n                                      *p++ = '0';\n                                  }\n                              }\n                            else\n                              abort ();\n#  endif\n                          }\n                      }\n                  }\n# endif\n\n                /* The generated string now extends from tmp to p, with the\n                   zero padding insertion point being at pad_ptr.  */\n                count = p - tmp;\n\n                if (count < width)\n                  {\n                    size_t pad = width - count;\n                    DCHAR_T *end = p + pad;\n\n                    if (flags & FLAG_LEFT)\n                      {\n                        /* Pad with spaces on the right.  */\n                        for (; pad > 0; pad--)\n                          *p++ = ' ';\n                      }\n                    else if ((flags & FLAG_ZERO) && pad_ptr != NULL)\n                      {\n                        /* Pad with zeroes.  */\n                        DCHAR_T *q = end;\n\n                        while (p > pad_ptr)\n                          *--q = *--p;\n                        for (; pad > 0; pad--)\n                          *p++ = '0';\n                      }\n                    else\n                      {\n                        /* Pad with spaces on the left.  */\n                        DCHAR_T *q = end;\n\n                        while (p > tmp)\n                          *--q = *--p;\n                        for (; pad > 0; pad--)\n                          *p++ = ' ';\n                      }\n\n                    p = end;\n                  }\n\n                count = p - tmp;\n\n                if (count >= tmp_length)\n                  /* tmp_length was incorrectly calculated - fix the\n                     code above!  */\n                  abort ();\n\n                /* Make room for the result.  */\n                if (count >= allocated - length)\n                  {\n                    size_t n = xsum (length, count);\n\n                    ENSURE_ALLOCATION (n);\n                  }\n\n                /* Append the result.  */\n                memcpy (result + length, tmp, count * sizeof (DCHAR_T));\n                if (tmp != tmpbuf)\n                  free (tmp);\n                length += count;\n              }\n#endif\n            else\n              {\n                arg_type type = a.arg[dp->arg_index].type;\n                int flags = dp->flags;\n#if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                int has_width;\n#endif\n#if !USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                size_t width;\n#endif\n#if !USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || NEED_PRINTF_UNBOUNDED_PRECISION\n                int has_precision;\n                size_t precision;\n#endif\n#if NEED_PRINTF_UNBOUNDED_PRECISION\n                int prec_ourselves;\n#else\n#               define prec_ourselves 0\n#endif\n#if NEED_PRINTF_FLAG_LEFTADJUST\n#               define pad_ourselves 1\n#elif !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                int pad_ourselves;\n#else\n#               define pad_ourselves 0\n#endif\n                TCHAR_T *fbp;\n                unsigned int prefix_count;\n                int prefixes[2] IF_LINT (= { 0 });\n                int orig_errno;\n#if !USE_SNPRINTF\n                size_t tmp_length;\n                TCHAR_T tmpbuf[700];\n                TCHAR_T *tmp;\n#endif\n\n#if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                has_width = 0;\n#endif\n#if !USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                width = 0;\n                if (dp->width_start != dp->width_end)\n                  {\n                    if (dp->width_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->width_arg_index].a.a_int;\n                        width = arg;\n                        if (arg < 0)\n                          {\n                            /* \"A negative field width is taken as a '-' flag\n                                followed by a positive field width.\"  */\n                            flags |= FLAG_LEFT;\n                            width = -width;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->width_start;\n\n                        do\n                          width = xsum (xtimes (width, 10), *digitp++ - '0');\n                        while (digitp != dp->width_end);\n                      }\n#if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                    has_width = 1;\n#endif\n                  }\n#endif\n\n#if !USE_SNPRINTF || !HAVE_SNPRINTF_RETVAL_C99 || NEED_PRINTF_UNBOUNDED_PRECISION\n                has_precision = 0;\n                precision = 6;\n                if (dp->precision_start != dp->precision_end)\n                  {\n                    if (dp->precision_arg_index != ARG_NONE)\n                      {\n                        int arg;\n\n                        if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                          abort ();\n                        arg = a.arg[dp->precision_arg_index].a.a_int;\n                        /* \"A negative precision is taken as if the precision\n                            were omitted.\"  */\n                        if (arg >= 0)\n                          {\n                            precision = arg;\n                            has_precision = 1;\n                          }\n                      }\n                    else\n                      {\n                        const FCHAR_T *digitp = dp->precision_start + 1;\n\n                        precision = 0;\n                        while (digitp != dp->precision_end)\n                          precision = xsum (xtimes (precision, 10), *digitp++ - '0');\n                        has_precision = 1;\n                      }\n                  }\n#endif\n\n                /* Decide whether to handle the precision ourselves.  */\n#if NEED_PRINTF_UNBOUNDED_PRECISION\n                switch (dp->conversion)\n                  {\n                  case 'd': case 'i': case 'u':\n                  case 'o':\n                  case 'x': case 'X': case 'p':\n                    prec_ourselves = has_precision && (precision > 0);\n                    break;\n                  default:\n                    prec_ourselves = 0;\n                    break;\n                  }\n#endif\n\n                /* Decide whether to perform the padding ourselves.  */\n#if !NEED_PRINTF_FLAG_LEFTADJUST && (!DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION)\n                switch (dp->conversion)\n                  {\n# if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO\n                  /* If we need conversion from TCHAR_T[] to DCHAR_T[], we need\n                     to perform the padding after this conversion.  Functions\n                     with unistdio extensions perform the padding based on\n                     character count rather than element count.  */\n                  case 'c': case 's':\n# endif\n# if NEED_PRINTF_FLAG_ZERO\n                  case 'f': case 'F': case 'e': case 'E': case 'g': case 'G':\n                  case 'a': case 'A':\n# endif\n                    pad_ourselves = 1;\n                    break;\n                  default:\n                    pad_ourselves = prec_ourselves;\n                    break;\n                  }\n#endif\n\n#if !USE_SNPRINTF\n                /* Allocate a temporary buffer of sufficient size for calling\n                   sprintf.  */\n                tmp_length =\n                  MAX_ROOM_NEEDED (&a, dp->arg_index, dp->conversion, type,\n                                   flags, width, has_precision, precision,\n                                   pad_ourselves);\n\n                if (tmp_length <= sizeof (tmpbuf) / sizeof (TCHAR_T))\n                  tmp = tmpbuf;\n                else\n                  {\n                    size_t tmp_memsize = xtimes (tmp_length, sizeof (TCHAR_T));\n\n                    if (size_overflow_p (tmp_memsize))\n                      /* Overflow, would lead to out of memory.  */\n                      goto out_of_memory;\n                    tmp = (TCHAR_T *) malloc (tmp_memsize);\n                    if (tmp == NULL)\n                      /* Out of memory.  */\n                      goto out_of_memory;\n                  }\n#endif\n\n                /* Construct the format string for calling snprintf or\n                   sprintf.  */\n                fbp = buf;\n                *fbp++ = '%';\n#if NEED_PRINTF_FLAG_GROUPING\n                /* The underlying implementation doesn't support the ' flag.\n                   Produce no grouping characters in this case; this is\n                   acceptable because the grouping is locale dependent.  */\n#else\n                if (flags & FLAG_GROUP)\n                  *fbp++ = '\\'';\n#endif\n                if (flags & FLAG_LEFT)\n                  *fbp++ = '-';\n                if (flags & FLAG_SHOWSIGN)\n                  *fbp++ = '+';\n                if (flags & FLAG_SPACE)\n                  *fbp++ = ' ';\n                if (flags & FLAG_ALT)\n                  *fbp++ = '#';\n#if __GLIBC__ >= 2 && !defined __UCLIBC__\n                if (flags & FLAG_LOCALIZED)\n                  *fbp++ = 'I';\n#endif\n                if (!pad_ourselves)\n                  {\n                    if (flags & FLAG_ZERO)\n                      *fbp++ = '0';\n                    if (dp->width_start != dp->width_end)\n                      {\n                        size_t n = dp->width_end - dp->width_start;\n                        /* The width specification is known to consist only\n                           of standard ASCII characters.  */\n                        if (sizeof (FCHAR_T) == sizeof (TCHAR_T))\n                          {\n                            memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));\n                            fbp += n;\n                          }\n                        else\n                          {\n                            const FCHAR_T *mp = dp->width_start;\n                            do\n                              *fbp++ = *mp++;\n                            while (--n > 0);\n                          }\n                      }\n                  }\n                if (!prec_ourselves)\n                  {\n                    if (dp->precision_start != dp->precision_end)\n                      {\n                        size_t n = dp->precision_end - dp->precision_start;\n                        /* The precision specification is known to consist only\n                           of standard ASCII characters.  */\n                        if (sizeof (FCHAR_T) == sizeof (TCHAR_T))\n                          {\n                            memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));\n                            fbp += n;\n                          }\n                        else\n                          {\n                            const FCHAR_T *mp = dp->precision_start;\n                            do\n                              *fbp++ = *mp++;\n                            while (--n > 0);\n                          }\n                      }\n                  }\n\n                switch (type)\n                  {\n#if HAVE_LONG_LONG_INT\n                  case TYPE_LONGLONGINT:\n                  case TYPE_ULONGLONGINT:\n# if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__\n                    *fbp++ = 'I';\n                    *fbp++ = '6';\n                    *fbp++ = '4';\n                    break;\n# else\n                    *fbp++ = 'l';\n# endif\n#endif\n                    /*FALLTHROUGH*/\n                  case TYPE_LONGINT:\n                  case TYPE_ULONGINT:\n#if HAVE_WINT_T\n                  case TYPE_WIDE_CHAR:\n#endif\n#if HAVE_WCHAR_T\n                  case TYPE_WIDE_STRING:\n#endif\n                    *fbp++ = 'l';\n                    break;\n                  case TYPE_LONGDOUBLE:\n                    *fbp++ = 'L';\n                    break;\n                  default:\n                    break;\n                  }\n#if NEED_PRINTF_DIRECTIVE_F\n                if (dp->conversion == 'F')\n                  *fbp = 'f';\n                else\n#endif\n                  *fbp = dp->conversion;\n#if USE_SNPRINTF\n# if !(((__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 3)) && !defined __UCLIBC__) || ((defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__))\n                fbp[1] = '%';\n                fbp[2] = 'n';\n                fbp[3] = '\\0';\n# else\n                /* On glibc2 systems from glibc >= 2.3 - probably also older\n                   ones - we know that snprintf's return value conforms to\n                   ISO C 99: the tests gl_SNPRINTF_RETVAL_C99 and\n                   gl_SNPRINTF_TRUNCATION_C99 pass.\n                   Therefore we can avoid using %n in this situation.\n                   On glibc2 systems from 2004-10-18 or newer, the use of %n\n                   in format strings in writable memory may crash the program\n                   (if compiled with _FORTIFY_SOURCE=2), so we should avoid it\n                   in this situation.  */\n                /* On native Windows systems (such as mingw), we can avoid using\n                   %n because:\n                     - Although the gl_SNPRINTF_TRUNCATION_C99 test fails,\n                       snprintf does not write more than the specified number\n                       of bytes. (snprintf (buf, 3, \"%d %d\", 4567, 89) writes\n                       '4', '5', '6' into buf, not '4', '5', '\\0'.)\n                     - Although the gl_SNPRINTF_RETVAL_C99 test fails, snprintf\n                       allows us to recognize the case of an insufficient\n                       buffer size: it returns -1 in this case.\n                   On native Windows systems (such as mingw) where the OS is\n                   Windows Vista, the use of %n in format strings by default\n                   crashes the program. See\n                     <http://gcc.gnu.org/ml/gcc/2007-06/msg00122.html> and\n                     <http://msdn2.microsoft.com/en-us/library/ms175782(VS.80).aspx>\n                   So we should avoid %n in this situation.  */\n                fbp[1] = '\\0';\n# endif\n#else\n                fbp[1] = '\\0';\n#endif\n\n                /* Construct the arguments for calling snprintf or sprintf.  */\n                prefix_count = 0;\n                if (!pad_ourselves && dp->width_arg_index != ARG_NONE)\n                  {\n                    if (!(a.arg[dp->width_arg_index].type == TYPE_INT))\n                      abort ();\n                    prefixes[prefix_count++] = a.arg[dp->width_arg_index].a.a_int;\n                  }\n                if (!prec_ourselves && dp->precision_arg_index != ARG_NONE)\n                  {\n                    if (!(a.arg[dp->precision_arg_index].type == TYPE_INT))\n                      abort ();\n                    prefixes[prefix_count++] = a.arg[dp->precision_arg_index].a.a_int;\n                  }\n\n#if USE_SNPRINTF\n                /* The SNPRINTF result is appended after result[0..length].\n                   The latter is an array of DCHAR_T; SNPRINTF appends an\n                   array of TCHAR_T to it.  This is possible because\n                   sizeof (TCHAR_T) divides sizeof (DCHAR_T) and\n                   alignof (TCHAR_T) <= alignof (DCHAR_T).  */\n# define TCHARS_PER_DCHAR (sizeof (DCHAR_T) / sizeof (TCHAR_T))\n                /* Ensure that maxlen below will be >= 2.  Needed on BeOS,\n                   where an snprintf() with maxlen==1 acts like sprintf().  */\n                ENSURE_ALLOCATION (xsum (length,\n                                         (2 + TCHARS_PER_DCHAR - 1)\n                                         / TCHARS_PER_DCHAR));\n                /* Prepare checking whether snprintf returns the count\n                   via %n.  */\n                *(TCHAR_T *) (result + length) = '\\0';\n#endif\n\n                orig_errno = errno;\n\n                for (;;)\n                  {\n                    int count = -1;\n\n#if USE_SNPRINTF\n                    int retcount = 0;\n                    size_t maxlen = allocated - length;\n                    /* SNPRINTF can fail if its second argument is\n                       > INT_MAX.  */\n                    if (maxlen > INT_MAX / TCHARS_PER_DCHAR)\n                      maxlen = INT_MAX / TCHARS_PER_DCHAR;\n                    maxlen = maxlen * TCHARS_PER_DCHAR;\n# define SNPRINTF_BUF(arg) \\\n                    switch (prefix_count)                                   \\\n                      {                                                     \\\n                      case 0:                                               \\\n                        retcount = SNPRINTF ((TCHAR_T *) (result + length), \\\n                                             maxlen, buf,                   \\\n                                             arg, &count);                  \\\n                        break;                                              \\\n                      case 1:                                               \\\n                        retcount = SNPRINTF ((TCHAR_T *) (result + length), \\\n                                             maxlen, buf,                   \\\n                                             prefixes[0], arg, &count);     \\\n                        break;                                              \\\n                      case 2:                                               \\\n                        retcount = SNPRINTF ((TCHAR_T *) (result + length), \\\n                                             maxlen, buf,                   \\\n                                             prefixes[0], prefixes[1], arg, \\\n                                             &count);                       \\\n                        break;                                              \\\n                      default:                                              \\\n                        abort ();                                           \\\n                      }\n#else\n# define SNPRINTF_BUF(arg) \\\n                    switch (prefix_count)                                   \\\n                      {                                                     \\\n                      case 0:                                               \\\n                        count = sprintf (tmp, buf, arg);                    \\\n                        break;                                              \\\n                      case 1:                                               \\\n                        count = sprintf (tmp, buf, prefixes[0], arg);       \\\n                        break;                                              \\\n                      case 2:                                               \\\n                        count = sprintf (tmp, buf, prefixes[0], prefixes[1],\\\n                                         arg);                              \\\n                        break;                                              \\\n                      default:                                              \\\n                        abort ();                                           \\\n                      }\n#endif\n\n                    errno = 0;\n                    switch (type)\n                      {\n                      case TYPE_SCHAR:\n                        {\n                          int arg = a.arg[dp->arg_index].a.a_schar;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_UCHAR:\n                        {\n                          unsigned int arg = a.arg[dp->arg_index].a.a_uchar;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_SHORT:\n                        {\n                          int arg = a.arg[dp->arg_index].a.a_short;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_USHORT:\n                        {\n                          unsigned int arg = a.arg[dp->arg_index].a.a_ushort;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_INT:\n                        {\n                          int arg = a.arg[dp->arg_index].a.a_int;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_UINT:\n                        {\n                          unsigned int arg = a.arg[dp->arg_index].a.a_uint;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_LONGINT:\n                        {\n                          long int arg = a.arg[dp->arg_index].a.a_longint;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_ULONGINT:\n                        {\n                          unsigned long int arg = a.arg[dp->arg_index].a.a_ulongint;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#if HAVE_LONG_LONG_INT\n                      case TYPE_LONGLONGINT:\n                        {\n                          long long int arg = a.arg[dp->arg_index].a.a_longlongint;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_ULONGLONGINT:\n                        {\n                          unsigned long long int arg = a.arg[dp->arg_index].a.a_ulonglongint;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#endif\n                      case TYPE_DOUBLE:\n                        {\n                          double arg = a.arg[dp->arg_index].a.a_double;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_LONGDOUBLE:\n                        {\n                          long double arg = a.arg[dp->arg_index].a.a_longdouble;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      case TYPE_CHAR:\n                        {\n                          int arg = a.arg[dp->arg_index].a.a_char;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#if HAVE_WINT_T\n                      case TYPE_WIDE_CHAR:\n                        {\n                          wint_t arg = a.arg[dp->arg_index].a.a_wide_char;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#endif\n                      case TYPE_STRING:\n                        {\n                          const char *arg = a.arg[dp->arg_index].a.a_string;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#if HAVE_WCHAR_T\n                      case TYPE_WIDE_STRING:\n                        {\n                          const wchar_t *arg = a.arg[dp->arg_index].a.a_wide_string;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n#endif\n                      case TYPE_POINTER:\n                        {\n                          void *arg = a.arg[dp->arg_index].a.a_pointer;\n                          SNPRINTF_BUF (arg);\n                        }\n                        break;\n                      default:\n                        abort ();\n                      }\n\n#if USE_SNPRINTF\n                    /* Portability: Not all implementations of snprintf()\n                       are ISO C 99 compliant.  Determine the number of\n                       bytes that snprintf() has produced or would have\n                       produced.  */\n                    if (count >= 0)\n                      {\n                        /* Verify that snprintf() has NUL-terminated its\n                           result.  */\n                        if (count < maxlen\n                            && ((TCHAR_T *) (result + length)) [count] != '\\0')\n                          abort ();\n                        /* Portability hack.  */\n                        if (retcount > count)\n                          count = retcount;\n                      }\n                    else\n                      {\n                        /* snprintf() doesn't understand the '%n'\n                           directive.  */\n                        if (fbp[1] != '\\0')\n                          {\n                            /* Don't use the '%n' directive; instead, look\n                               at the snprintf() return value.  */\n                            fbp[1] = '\\0';\n                            continue;\n                          }\n                        else\n                          {\n                            /* Look at the snprintf() return value.  */\n                            if (retcount < 0)\n                              {\n# if !HAVE_SNPRINTF_RETVAL_C99\n                                /* HP-UX 10.20 snprintf() is doubly deficient:\n                                   It doesn't understand the '%n' directive,\n                                   *and* it returns -1 (rather than the length\n                                   that would have been required) when the\n                                   buffer is too small.\n                                   But a failure at this point can also come\n                                   from other reasons than a too small buffer,\n                                   such as an invalid wide string argument to\n                                   the %ls directive, or possibly an invalid\n                                   floating-point argument.  */\n                                size_t tmp_length =\n                                  MAX_ROOM_NEEDED (&a, dp->arg_index,\n                                                   dp->conversion, type, flags,\n                                                   width,\n                                                   has_precision,\n                                                   precision, pad_ourselves);\n\n                                if (maxlen < tmp_length)\n                                  {\n                                    /* Make more room.  But try to do through\n                                       this reallocation only once.  */\n                                    size_t bigger_need =\n                                      xsum (length,\n                                            xsum (tmp_length,\n                                                  TCHARS_PER_DCHAR - 1)\n                                            / TCHARS_PER_DCHAR);\n                                    /* And always grow proportionally.\n                                       (There may be several arguments, each\n                                       needing a little more room than the\n                                       previous one.)  */\n                                    size_t bigger_need2 =\n                                      xsum (xtimes (allocated, 2), 12);\n                                    if (bigger_need < bigger_need2)\n                                      bigger_need = bigger_need2;\n                                    ENSURE_ALLOCATION (bigger_need);\n                                    continue;\n                                  }\n# endif\n                              }\n                            else\n                              count = retcount;\n                          }\n                      }\n#endif\n\n                    /* Attempt to handle failure.  */\n                    if (count < 0)\n                      {\n                        /* SNPRINTF or sprintf failed.  Save and use the errno\n                           that it has set, if any.  */\n                        int saved_errno = errno;\n                        if (saved_errno == 0)\n                          {\n                            if (dp->conversion == 'c' || dp->conversion == 's')\n                              saved_errno = EILSEQ;\n                            else\n                              saved_errno = EINVAL;\n                          }\n\n                        if (!(result == resultbuf || result == NULL))\n                          free (result);\n                        if (buf_malloced != NULL)\n                          free (buf_malloced);\n                        CLEANUP ();\n\n                        errno = saved_errno;\n                        return NULL;\n                      }\n\n#if USE_SNPRINTF\n                    /* Handle overflow of the allocated buffer.\n                       If such an overflow occurs, a C99 compliant snprintf()\n                       returns a count >= maxlen.  However, a non-compliant\n                       snprintf() function returns only count = maxlen - 1.  To\n                       cover both cases, test whether count >= maxlen - 1.  */\n                    if ((unsigned int) count + 1 >= maxlen)\n                      {\n                        /* If maxlen already has attained its allowed maximum,\n                           allocating more memory will not increase maxlen.\n                           Instead of looping, bail out.  */\n                        if (maxlen == INT_MAX / TCHARS_PER_DCHAR)\n                          goto overflow;\n                        else\n                          {\n                            /* Need at least (count + 1) * sizeof (TCHAR_T)\n                               bytes.  (The +1 is for the trailing NUL.)\n                               But ask for (count + 2) * sizeof (TCHAR_T)\n                               bytes, so that in the next round, we likely get\n                                 maxlen > (unsigned int) count + 1\n                               and so we don't get here again.\n                               And allocate proportionally, to avoid looping\n                               eternally if snprintf() reports a too small\n                               count.  */\n                            size_t n =\n                              xmax (xsum (length,\n                                          ((unsigned int) count + 2\n                                           + TCHARS_PER_DCHAR - 1)\n                                          / TCHARS_PER_DCHAR),\n                                    xtimes (allocated, 2));\n\n                            ENSURE_ALLOCATION (n);\n                            continue;\n                          }\n                      }\n#endif\n\n#if NEED_PRINTF_UNBOUNDED_PRECISION\n                    if (prec_ourselves)\n                      {\n                        /* Handle the precision.  */\n                        TCHAR_T *prec_ptr =\n# if USE_SNPRINTF\n                          (TCHAR_T *) (result + length);\n# else\n                          tmp;\n# endif\n                        size_t prefix_count;\n                        size_t move;\n\n                        prefix_count = 0;\n                        /* Put the additional zeroes after the sign.  */\n                        if (count >= 1\n                            && (*prec_ptr == '-' || *prec_ptr == '+'\n                                || *prec_ptr == ' '))\n                          prefix_count = 1;\n                        /* Put the additional zeroes after the 0x prefix if\n                           (flags & FLAG_ALT) || (dp->conversion == 'p').  */\n                        else if (count >= 2\n                                 && prec_ptr[0] == '0'\n                                 && (prec_ptr[1] == 'x' || prec_ptr[1] == 'X'))\n                          prefix_count = 2;\n\n                        move = count - prefix_count;\n                        if (precision > move)\n                          {\n                            /* Insert zeroes.  */\n                            size_t insert = precision - move;\n                            TCHAR_T *prec_end;\n\n# if USE_SNPRINTF\n                            size_t n =\n                              xsum (length,\n                                    (count + insert + TCHARS_PER_DCHAR - 1)\n                                    / TCHARS_PER_DCHAR);\n                            length += (count + TCHARS_PER_DCHAR - 1) / TCHARS_PER_DCHAR;\n                            ENSURE_ALLOCATION (n);\n                            length -= (count + TCHARS_PER_DCHAR - 1) / TCHARS_PER_DCHAR;\n                            prec_ptr = (TCHAR_T *) (result + length);\n# endif\n\n                            prec_end = prec_ptr + count;\n                            prec_ptr += prefix_count;\n\n                            while (prec_end > prec_ptr)\n                              {\n                                prec_end--;\n                                prec_end[insert] = prec_end[0];\n                              }\n\n                            prec_end += insert;\n                            do\n                              *--prec_end = '0';\n                            while (prec_end > prec_ptr);\n\n                            count += insert;\n                          }\n                      }\n#endif\n\n#if !USE_SNPRINTF\n                    if (count >= tmp_length)\n                      /* tmp_length was incorrectly calculated - fix the\n                         code above!  */\n                      abort ();\n#endif\n\n#if !DCHAR_IS_TCHAR\n                    /* Convert from TCHAR_T[] to DCHAR_T[].  */\n                    if (dp->conversion == 'c' || dp->conversion == 's')\n                      {\n                        /* type = TYPE_CHAR or TYPE_WIDE_CHAR or TYPE_STRING\n                           TYPE_WIDE_STRING.\n                           The result string is not certainly ASCII.  */\n                        const TCHAR_T *tmpsrc;\n                        DCHAR_T *tmpdst;\n                        size_t tmpdst_len;\n                        /* This code assumes that TCHAR_T is 'char'.  */\n                        verify (sizeof (TCHAR_T) == 1);\n# if USE_SNPRINTF\n                        tmpsrc = (TCHAR_T *) (result + length);\n# else\n                        tmpsrc = tmp;\n# endif\n                        tmpdst =\n                          DCHAR_CONV_FROM_ENCODING (locale_charset (),\n                                                    iconveh_question_mark,\n                                                    tmpsrc, count,\n                                                    NULL,\n                                                    NULL, &tmpdst_len);\n                        if (tmpdst == NULL)\n                          {\n                            int saved_errno = errno;\n                            if (!(result == resultbuf || result == NULL))\n                              free (result);\n                            if (buf_malloced != NULL)\n                              free (buf_malloced);\n                            CLEANUP ();\n                            errno = saved_errno;\n                            return NULL;\n                          }\n                        ENSURE_ALLOCATION (xsum (length, tmpdst_len));\n                        DCHAR_CPY (result + length, tmpdst, tmpdst_len);\n                        free (tmpdst);\n                        count = tmpdst_len;\n                      }\n                    else\n                      {\n                        /* The result string is ASCII.\n                           Simple 1:1 conversion.  */\n# if USE_SNPRINTF\n                        /* If sizeof (DCHAR_T) == sizeof (TCHAR_T), it's a\n                           no-op conversion, in-place on the array starting\n                           at (result + length).  */\n                        if (sizeof (DCHAR_T) != sizeof (TCHAR_T))\n# endif\n                          {\n                            const TCHAR_T *tmpsrc;\n                            DCHAR_T *tmpdst;\n                            size_t n;\n\n# if USE_SNPRINTF\n                            if (result == resultbuf)\n                              {\n                                tmpsrc = (TCHAR_T *) (result + length);\n                                /* ENSURE_ALLOCATION will not move tmpsrc\n                                   (because it's part of resultbuf).  */\n                                ENSURE_ALLOCATION (xsum (length, count));\n                              }\n                            else\n                              {\n                                /* ENSURE_ALLOCATION will move the array\n                                   (because it uses realloc().  */\n                                ENSURE_ALLOCATION (xsum (length, count));\n                                tmpsrc = (TCHAR_T *) (result + length);\n                              }\n# else\n                            tmpsrc = tmp;\n                            ENSURE_ALLOCATION (xsum (length, count));\n# endif\n                            tmpdst = result + length;\n                            /* Copy backwards, because of overlapping.  */\n                            tmpsrc += count;\n                            tmpdst += count;\n                            for (n = count; n > 0; n--)\n                              *--tmpdst = *--tmpsrc;\n                          }\n                      }\n#endif\n\n#if DCHAR_IS_TCHAR && !USE_SNPRINTF\n                    /* Make room for the result.  */\n                    if (count > allocated - length)\n                      {\n                        /* Need at least count elements.  But allocate\n                           proportionally.  */\n                        size_t n =\n                          xmax (xsum (length, count), xtimes (allocated, 2));\n\n                        ENSURE_ALLOCATION (n);\n                      }\n#endif\n\n                    /* Here count <= allocated - length.  */\n\n                    /* Perform padding.  */\n#if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO || NEED_PRINTF_FLAG_LEFTADJUST || NEED_PRINTF_FLAG_ZERO || NEED_PRINTF_UNBOUNDED_PRECISION\n                    if (pad_ourselves && has_width)\n                      {\n                        size_t w;\n# if ENABLE_UNISTDIO\n                        /* Outside POSIX, it's preferable to compare the width\n                           against the number of _characters_ of the converted\n                           value.  */\n                        w = DCHAR_MBSNLEN (result + length, count);\n# else\n                        /* The width is compared against the number of _bytes_\n                           of the converted value, says POSIX.  */\n                        w = count;\n# endif\n                        if (w < width)\n                          {\n                            size_t pad = width - w;\n\n                            /* Make room for the result.  */\n                            if (xsum (count, pad) > allocated - length)\n                              {\n                                /* Need at least count + pad elements.  But\n                                   allocate proportionally.  */\n                                size_t n =\n                                  xmax (xsum3 (length, count, pad),\n                                        xtimes (allocated, 2));\n\n# if USE_SNPRINTF\n                                length += count;\n                                ENSURE_ALLOCATION (n);\n                                length -= count;\n# else\n                                ENSURE_ALLOCATION (n);\n# endif\n                              }\n                            /* Here count + pad <= allocated - length.  */\n\n                            {\n# if !DCHAR_IS_TCHAR || USE_SNPRINTF\n                              DCHAR_T * const rp = result + length;\n# else\n                              DCHAR_T * const rp = tmp;\n# endif\n                              DCHAR_T *p = rp + count;\n                              DCHAR_T *end = p + pad;\n                              DCHAR_T *pad_ptr;\n# if !DCHAR_IS_TCHAR || ENABLE_UNISTDIO\n                              if (dp->conversion == 'c'\n                                  || dp->conversion == 's')\n                                /* No zero-padding for string directives.  */\n                                pad_ptr = NULL;\n                              else\n# endif\n                                {\n                                  pad_ptr = (*rp == '-' ? rp + 1 : rp);\n                                  /* No zero-padding of \"inf\" and \"nan\".  */\n                                  if ((*pad_ptr >= 'A' && *pad_ptr <= 'Z')\n                                      || (*pad_ptr >= 'a' && *pad_ptr <= 'z'))\n                                    pad_ptr = NULL;\n                                }\n                              /* The generated string now extends from rp to p,\n                                 with the zero padding insertion point being at\n                                 pad_ptr.  */\n\n                              count = count + pad; /* = end - rp */\n\n                              if (flags & FLAG_LEFT)\n                                {\n                                  /* Pad with spaces on the right.  */\n                                  for (; pad > 0; pad--)\n                                    *p++ = ' ';\n                                }\n                              else if ((flags & FLAG_ZERO) && pad_ptr != NULL)\n                                {\n                                  /* Pad with zeroes.  */\n                                  DCHAR_T *q = end;\n\n                                  while (p > pad_ptr)\n                                    *--q = *--p;\n                                  for (; pad > 0; pad--)\n                                    *p++ = '0';\n                                }\n                              else\n                                {\n                                  /* Pad with spaces on the left.  */\n                                  DCHAR_T *q = end;\n\n                                  while (p > rp)\n                                    *--q = *--p;\n                                  for (; pad > 0; pad--)\n                                    *p++ = ' ';\n                                }\n                            }\n                          }\n                      }\n#endif\n\n                    /* Here still count <= allocated - length.  */\n\n#if !DCHAR_IS_TCHAR || USE_SNPRINTF\n                    /* The snprintf() result did fit.  */\n#else\n                    /* Append the sprintf() result.  */\n                    memcpy (result + length, tmp, count * sizeof (DCHAR_T));\n#endif\n#if !USE_SNPRINTF\n                    if (tmp != tmpbuf)\n                      free (tmp);\n#endif\n\n#if NEED_PRINTF_DIRECTIVE_F\n                    if (dp->conversion == 'F')\n                      {\n                        /* Convert the %f result to upper case for %F.  */\n                        DCHAR_T *rp = result + length;\n                        size_t rc;\n                        for (rc = count; rc > 0; rc--, rp++)\n                          if (*rp >= 'a' && *rp <= 'z')\n                            *rp = *rp - 'a' + 'A';\n                      }\n#endif\n\n                    length += count;\n                    break;\n                  }\n                errno = orig_errno;\n#undef pad_ourselves\n#undef prec_ourselves\n              }\n          }\n      }\n\n    /* Add the final NUL.  */\n    ENSURE_ALLOCATION (xsum (length, 1));\n    result[length] = '\\0';\n\n    if (result != resultbuf && length + 1 < allocated)\n      {\n        /* Shrink the allocated memory if possible.  */\n        DCHAR_T *memory;\n\n        memory = (DCHAR_T *) realloc (result, (length + 1) * sizeof (DCHAR_T));\n        if (memory != NULL)\n          result = memory;\n      }\n\n    if (buf_malloced != NULL)\n      free (buf_malloced);\n    CLEANUP ();\n    *lengthp = length;\n    /* Note that we can produce a big string of a length > INT_MAX.  POSIX\n       says that snprintf() fails with errno = EOVERFLOW in this case, but\n       that's only because snprintf() returns an 'int'.  This function does\n       not have this limitation.  */\n    return result;\n\n#if USE_SNPRINTF\n  overflow:\n    if (!(result == resultbuf || result == NULL))\n      free (result);\n    if (buf_malloced != NULL)\n      free (buf_malloced);\n    CLEANUP ();\n    errno = EOVERFLOW;\n    return NULL;\n#endif\n\n  out_of_memory:\n    if (!(result == resultbuf || result == NULL))\n      free (result);\n    if (buf_malloced != NULL)\n      free (buf_malloced);\n  out_of_memory_1:\n    CLEANUP ();\n    errno = ENOMEM;\n    return NULL;\n  }\n}\n\n#undef MAX_ROOM_NEEDED\n#undef TCHARS_PER_DCHAR\n#undef SNPRINTF\n#undef USE_SNPRINTF\n#undef DCHAR_SET\n#undef DCHAR_CPY\n#undef PRINTF_PARSE\n#undef DIRECTIVES\n#undef DIRECTIVE\n#undef DCHAR_IS_TCHAR\n#undef TCHAR_T\n#undef DCHAR_T\n#undef FCHAR_T\n#undef VASNPRINTF\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vasnprintf.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":25,"col":32,"offset":114}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":27,"col":10,"offset":0},"end":{"line":27,"col":33,"offset":23}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h:17:\n `@GUARD_PREFIX@_STDARG_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":25,"col":32,"offset":114}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","start":{"line":27,"col":10,"offset":0},"end":{"line":27,"col":33,"offset":23}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.h:1:\n `/* Program name management.\n   Copyright (C) 2016-2017 Free Software Foundation, Inc.\n\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n#ifndef _GL_GETPROGNAME_H\n#define _GL_GETPROGNAME_H\n\n#include <stdlib.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/* Return the base name of the executing program.\n   On native Windows this will usually end in \".exe\" or \".EXE\". */\n#ifndef HAVE_GETPROGNAME\nextern char const *getprogname (void)\n# ifdef HAVE_DECL_PROGRAM_INVOCATION_NAME\n  _GL_ATTRIBUTE_PURE\n# endif\n  ;\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n\n#endif\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","start":{"line":43,"col":47,"offset":0},"end":{"line":43,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","start":{"line":48,"col":1,"offset":0},"end":{"line":48,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c:43:\n `;` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","start":{"line":43,"col":47,"offset":0},"end":{"line":43,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","start":{"line":48,"col":1,"offset":0},"end":{"line":48,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.h","start":{"line":41,"col":20,"offset":0},"end":{"line":41,"col":23,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.h:41:\n `int` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.h","start":{"line":41,"col":20,"offset":0},"end":{"line":41,"col":23,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","start":{"line":48,"col":5,"offset":0},"end":{"line":48,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","start":{"line":52,"col":1,"offset":0},"end":{"line":52,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c:48:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","start":{"line":48,"col":5,"offset":0},"end":{"line":48,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","start":{"line":52,"col":1,"offset":0},"end":{"line":52,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":23,"col":10,"offset":0},"end":{"line":23,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":23,"col":23,"offset":0},"end":{"line":23,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":27,"col":1,"offset":0},"end":{"line":27,"col":35,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":30,"col":10,"offset":0},"end":{"line":30,"col":36,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":34,"col":5,"offset":0},"end":{"line":36,"col":5,"offset":65}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h:19:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":23,"col":10,"offset":0},"end":{"line":23,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":23,"col":23,"offset":0},"end":{"line":23,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":27,"col":1,"offset":0},"end":{"line":27,"col":35,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":30,"col":10,"offset":0},"end":{"line":30,"col":36,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","start":{"line":34,"col":5,"offset":0},"end":{"line":36,"col":5,"offset":65}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":61,"col":1,"offset":0},"end":{"line":61,"col":27,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":72,"col":1,"offset":0},"end":{"line":72,"col":27,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":27,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":27,"offset":26}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h:61:\n `__attribute__ ((__pure__))` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":61,"col":1,"offset":0},"end":{"line":61,"col":27,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":72,"col":1,"offset":0},"end":{"line":72,"col":27,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":27,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":27,"offset":26}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":78,"col":3,"offset":0},"end":{"line":79,"col":4,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":81,"col":1,"offset":0},"end":{"line":82,"col":20,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":87,"col":1,"offset":0},"end":{"line":87,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":152,"col":1,"offset":0},"end":{"line":154,"col":7,"offset":19}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h:78:\n `TYPE_COUNT_LONGINT_POINTER\n#if` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":78,"col":3,"offset":0},"end":{"line":79,"col":4,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":81,"col":1,"offset":0},"end":{"line":82,"col":20,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":87,"col":1,"offset":0},"end":{"line":87,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","start":{"line":152,"col":1,"offset":0},"end":{"line":154,"col":7,"offset":19}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":77,"col":5,"offset":0},"end":{"line":77,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":84,"col":1,"offset":0},"end":{"line":84,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c:77:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":77,"col":5,"offset":0},"end":{"line":77,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","start":{"line":84,"col":1,"offset":0},"end":{"line":84,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","start":{"line":77,"col":1,"offset":0},"end":{"line":77,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","start":{"line":104,"col":1,"offset":0},"end":{"line":104,"col":21,"offset":20}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h:77:\n `#  if !@HAVE__BOOL@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","start":{"line":77,"col":1,"offset":0},"end":{"line":77,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","start":{"line":104,"col":1,"offset":0},"end":{"line":104,"col":21,"offset":20}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","start":{"line":187,"col":1,"offset":0},"end":{"line":187,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","start":{"line":189,"col":1,"offset":0},"end":{"line":190,"col":4,"offset":11}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h:187:\n `# else` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","start":{"line":187,"col":1,"offset":0},"end":{"line":187,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","start":{"line":189,"col":1,"offset":0},"end":{"line":190,"col":4,"offset":11}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":57,"col":27,"offset":0},"end":{"line":57,"col":49,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":70,"col":27,"offset":0},"end":{"line":70,"col":49,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":83,"col":27,"offset":0},"end":{"line":83,"col":49,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":96,"col":27,"offset":0},"end":{"line":96,"col":49,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":111,"col":22,"offset":0},"end":{"line":111,"col":56,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":56,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":139,"col":22,"offset":0},"end":{"line":139,"col":56,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":154,"col":22,"offset":0},"end":{"line":154,"col":56,"offset":34}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h:57:\n `int _GL_ATTRIBUTE_PURE` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":57,"col":27,"offset":0},"end":{"line":57,"col":49,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":70,"col":27,"offset":0},"end":{"line":70,"col":49,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":83,"col":27,"offset":0},"end":{"line":83,"col":49,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":96,"col":27,"offset":0},"end":{"line":96,"col":49,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":111,"col":22,"offset":0},"end":{"line":111,"col":56,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":56,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":139,"col":22,"offset":0},"end":{"line":139,"col":56,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","start":{"line":154,"col":22,"offset":0},"end":{"line":154,"col":56,"offset":34}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_time.in.h:1:\n `/* Provide a more complete sys/time.h.\n\n   Copyright (C) 2007-2017 Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n/* Written by Paul Eggert.  */\n\n#ifndef _@GUARD_PREFIX@_SYS_TIME_H\n\n#if __GNUC__ >= 3\n@PRAGMA_SYSTEM_HEADER@\n#endif\n@PRAGMA_COLUMNS@\n\n/* On Cygwin and on many BSDish systems, <sys/time.h> includes itself\n   recursively via <sys/select.h>.\n   Simply delegate to the system's header in this case; it is a no-op.\n   Without this extra ifdef, the C++ gettimeofday declaration below\n   would be a forward declaration in gnulib's nested <sys/time.h>.  */\n#if defined _CYGWIN_SYS_TIME_H || defined _SYS_TIME_H || defined _SYS_TIME_H_\n# @INCLUDE_NEXT@ @NEXT_SYS_TIME_H@\n#else\n\n/* The include_next requires a split double-inclusion guard.  */\n#if @HAVE_SYS_TIME_H@\n# @INCLUDE_NEXT@ @NEXT_SYS_TIME_H@\n#endif\n\n#ifndef _@GUARD_PREFIX@_SYS_TIME_H\n#define _@GUARD_PREFIX@_SYS_TIME_H\n\n#if ! @HAVE_SYS_TIME_H@\n# include <time.h>\n#endif\n\n/* On native Windows with MSVC, get the 'struct timeval' type.\n   Also, on native Windows with a 64-bit time_t, where we are overriding the\n   'struct timeval' type, get all declarations of system functions whose\n   signature contains 'struct timeval'.  */\n#if (defined _MSC_VER || @REPLACE_STRUCT_TIMEVAL@) && @HAVE_WINSOCK2_H@ && !defined _GL_INCLUDING_WINSOCK2_H\n# define _GL_INCLUDING_WINSOCK2_H\n# include <winsock2.h>\n# undef _GL_INCLUDING_WINSOCK2_H\n#endif\n\n/* The definitions of _GL_FUNCDECL_RPL etc. are copied here.  */\n\n/* The definition of _GL_ARG_NONNULL is copied here.  */\n\n/* The definition of _GL_WARN_ON_USE is copied here.  */\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n#if !@HAVE_STRUCT_TIMEVAL@ || @REPLACE_STRUCT_TIMEVAL@\n\n# if @REPLACE_STRUCT_TIMEVAL@\n#  define timeval rpl_timeval\n# endif\n\n# if !GNULIB_defined_struct_timeval\nstruct timeval\n{\n  time_t tv_sec;\n  long int tv_usec;\n};\n#  define GNULIB_defined_struct_timeval 1\n# endif\n\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n\n#if @GNULIB_GETTIMEOFDAY@\n# if @REPLACE_GETTIMEOFDAY@\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef gettimeofday\n#   define gettimeofday rpl_gettimeofday\n#  endif\n_GL_FUNCDECL_RPL (gettimeofday, int,\n                  (struct timeval *restrict, void *restrict)\n                  _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (gettimeofday, int,\n                  (struct timeval *restrict, void *restrict));\n# else\n#  if !@HAVE_GETTIMEOFDAY@\n_GL_FUNCDECL_SYS (gettimeofday, int,\n                  (struct timeval *restrict, void *restrict)\n                  _GL_ARG_NONNULL ((1)));\n#  endif\n/* Need to cast, because on glibc systems, by default, the second argument is\n                                                  struct timezone *.  */\n_GL_CXXALIAS_SYS_CAST (gettimeofday, int,\n                       (struct timeval *restrict, void *restrict));\n# endif\n_GL_CXXALIASWARN (gettimeofday);\n# if defined __cplusplus && defined GNULIB_NAMESPACE\nnamespace GNULIB_NAMESPACE {\n  typedef ::timeval\n#undef timeval\n    timeval;\n}\n# endif\n#elif defined GNULIB_POSIXCHECK\n# undef gettimeofday\n# if HAVE_RAW_DECL_GETTIMEOFDAY\n_GL_WARN_ON_USE (gettimeofday, \"gettimeofday is unportable - \"\n                 \"use gnulib module gettimeofday for portability\");\n# endif\n#endif\n\n/* Hide some function declarations from <winsock2.h>.  */\n\n#if defined _MSC_VER && @HAVE_WINSOCK2_H@\n# if !defined _@GUARD_PREFIX@_UNISTD_H\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef close\n#   define close close_used_without_including_unistd_h\n#  else\n     _GL_WARN_ON_USE (close,\n                      \"close() used without including <unistd.h>\");\n#  endif\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef gethostname\n#   define gethostname gethostname_used_without_including_unistd_h\n#  else\n     _GL_WARN_ON_USE (gethostname,\n                      \"gethostname() used without including <unistd.h>\");\n#  endif\n# endif\n# if !defined _@GUARD_PREFIX@_SYS_SOCKET_H\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef socket\n#   define socket              socket_used_without_including_sys_socket_h\n#   undef connect\n#   define connect             connect_used_without_including_sys_socket_h\n#   undef accept\n#   define accept              accept_used_without_including_sys_socket_h\n#   undef bind\n#   define bind                bind_used_without_including_sys_socket_h\n#   undef getpeername\n#   define getpeername         getpeername_used_without_including_sys_socket_h\n#   undef getsockname\n#   define getsockname         getsockname_used_without_including_sys_socket_h\n#   undef getsockopt\n#   define getsockopt          getsockopt_used_without_including_sys_socket_h\n#   undef listen\n#   define listen              listen_used_without_including_sys_socket_h\n#   undef recv\n#   define recv                recv_used_without_including_sys_socket_h\n#   undef send\n#   define send                send_used_without_including_sys_socket_h\n#   undef recvfrom\n#   define recvfrom            recvfrom_used_without_including_sys_socket_h\n#   undef sendto\n#   define sendto              sendto_used_without_including_sys_socket_h\n#   undef setsockopt\n#   define setsockopt          setsockopt_used_without_including_sys_socket_h\n#   undef shutdown\n#   define shutdown            shutdown_used_without_including_sys_socket_h\n#  else\n     _GL_WARN_ON_USE (socket,\n                      \"socket() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (connect,\n                      \"connect() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (accept,\n                      \"accept() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (bind,\n                      \"bind() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (getpeername,\n                      \"getpeername() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (getsockname,\n                      \"getsockname() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (getsockopt,\n                      \"getsockopt() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (listen,\n                      \"listen() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (recv,\n                      \"recv() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (send,\n                      \"send() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (recvfrom,\n                      \"recvfrom() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (sendto,\n                      \"sendto() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (setsockopt,\n                      \"setsockopt() used without including <sys/socket.h>\");\n     _GL_WARN_ON_USE (shutdown,\n                      \"shutdown() used without including <sys/socket.h>\");\n#  endif\n# endif\n# if !defined _@GUARD_PREFIX@_SYS_SELECT_H\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef select\n#   define select select_used_without_including_sys_select_h\n#  else\n     _GL_WARN_ON_USE (select,\n                      \"select() used without including <sys/select.h>\");\n#  endif\n# endif\n#endif\n\n#endif /* _@GUARD_PREFIX@_SYS_TIME_H */\n#endif /* _CYGWIN_SYS_TIME_H */\n#endif /* _@GUARD_PREFIX@_SYS_TIME_H */\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_time.in.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":229,"col":1,"offset":0},"end":{"line":229,"col":16,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":231,"col":1,"offset":0},"end":{"line":232,"col":16,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":234,"col":1,"offset":0},"end":{"line":234,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":336,"col":1,"offset":0},"end":{"line":336,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c:229:\n `#ifdef S_ISFIFO` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":229,"col":1,"offset":0},"end":{"line":229,"col":16,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":231,"col":1,"offset":0},"end":{"line":232,"col":16,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":234,"col":1,"offset":0},"end":{"line":234,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","start":{"line":336,"col":1,"offset":0},"end":{"line":336,"col":2,"offset":1}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","message":"Timeout when running SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc on /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c:\n ","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":832,"col":1,"offset":0},"end":{"line":832,"col":65,"offset":64}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1802,"col":9,"offset":0},"end":{"line":1802,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":2005,"col":3,"offset":0},"end":{"line":2005,"col":7,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":2311,"col":29,"offset":0},"end":{"line":2311,"col":62,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3407,"col":32,"offset":0},"end":{"line":3407,"col":34,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3408,"col":22,"offset":0},"end":{"line":3408,"col":23,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c:832:\n `#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":832,"col":1,"offset":0},"end":{"line":832,"col":65,"offset":64}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":1802,"col":9,"offset":0},"end":{"line":1802,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":2005,"col":3,"offset":0},"end":{"line":2005,"col":7,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":2311,"col":29,"offset":0},"end":{"line":2311,"col":62,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3407,"col":32,"offset":0},"end":{"line":3407,"col":34,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","start":{"line":3408,"col":22,"offset":0},"end":{"line":3408,"col":23,"offset":1}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","message":"Timeout when running SEAM.semgrep-rules.c.raptor-missing-break-in-switch on /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror-override.c:\n ","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror-override.c"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.in.h:1:\n Failure: ii_of_name: IdDeref","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.in.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":49,"col":23,"offset":142}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":62,"col":10,"offset":0},"end":{"line":62,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":70,"col":6,"offset":0},"end":{"line":70,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":85,"col":5,"offset":0},"end":{"line":87,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":57,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":114,"col":1,"offset":0},"end":{"line":114,"col":68,"offset":67}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":115,"col":51,"offset":0},"end":{"line":115,"col":52,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":8,"offset":154}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":134,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":79,"offset":109}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":140,"col":40,"offset":0},"end":{"line":140,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":141,"col":1,"offset":0},"end":{"line":156,"col":25,"offset":545}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":157,"col":60,"offset":0},"end":{"line":157,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":254,"col":5,"offset":0},"end":{"line":255,"col":5,"offset":25}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h:21:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":49,"col":23,"offset":142}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":62,"col":10,"offset":0},"end":{"line":62,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":70,"col":6,"offset":0},"end":{"line":70,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":85,"col":5,"offset":0},"end":{"line":87,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":57,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":114,"col":1,"offset":0},"end":{"line":114,"col":68,"offset":67}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":115,"col":51,"offset":0},"end":{"line":115,"col":52,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":8,"offset":154}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":134,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":79,"offset":109}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":140,"col":40,"offset":0},"end":{"line":140,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":141,"col":1,"offset":0},"end":{"line":156,"col":25,"offset":545}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":157,"col":60,"offset":0},"end":{"line":157,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","start":{"line":254,"col":5,"offset":0},"end":{"line":255,"col":5,"offset":25}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/gettext.h:1:\n `/* Convenience header for conditional use of GNU <libintl.h>.\n   Copyright (C) 1995-1998, 2000-2002, 2004-2006, 2009-2017 Free Software\n   Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License along\n   with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n#ifndef _LIBGETTEXT_H\n#define _LIBGETTEXT_H 1\n\n/* NLS can be disabled through the configure --disable-nls option.  */\n#if ENABLE_NLS\n\n/* Get declarations of GNU message catalog functions.  */\n# include <libintl.h>\n\n/* You can set the DEFAULT_TEXT_DOMAIN macro to specify the domain used by\n   the gettext() and ngettext() macros.  This is an alternative to calling\n   textdomain(), and is useful for libraries.  */\n# ifdef DEFAULT_TEXT_DOMAIN\n#  undef gettext\n#  define gettext(Msgid) \\\n     dgettext (DEFAULT_TEXT_DOMAIN, Msgid)\n#  undef ngettext\n#  define ngettext(Msgid1, Msgid2, N) \\\n     dngettext (DEFAULT_TEXT_DOMAIN, Msgid1, Msgid2, N)\n# endif\n\n#else\n\n/* Solaris /usr/include/locale.h includes /usr/include/libintl.h, which\n   chokes if dcgettext is defined as a macro.  So include it now, to make\n   later inclusions of <locale.h> a NOP.  We don't include <libintl.h>\n   as well because people using \"gettext.h\" will not include <libintl.h>,\n   and also including <libintl.h> would fail on SunOS 4, whereas <locale.h>\n   is OK.  */\n#if defined(__sun)\n# include <locale.h>\n#endif\n\n/* Many header files from the libstdc++ coming with g++ 3.3 or newer include\n   <libintl.h>, which chokes if dcgettext is defined as a macro.  So include\n   it now, to make later inclusions of <libintl.h> a NOP.  */\n#if defined(__cplusplus) && defined(__GNUG__) && (__GNUC__ >= 3)\n# include <cstdlib>\n# if (__GLIBC__ >= 2 && !defined __UCLIBC__) || _GLIBCXX_HAVE_LIBINTL_H\n#  include <libintl.h>\n# endif\n#endif\n\n/* Disabled NLS.\n   The casts to 'const char *' serve the purpose of producing warnings\n   for invalid uses of the value returned from these functions.\n   On pre-ANSI systems without 'const', the config.h file is supposed to\n   contain \"#define const\".  */\n# undef gettext\n# define gettext(Msgid) ((const char *) (Msgid))\n# undef dgettext\n# define dgettext(Domainname, Msgid) ((void) (Domainname), gettext (Msgid))\n# undef dcgettext\n# define dcgettext(Domainname, Msgid, Category) \\\n    ((void) (Category), dgettext (Domainname, Msgid))\n# undef ngettext\n# define ngettext(Msgid1, Msgid2, N) \\\n    ((N) == 1 \\\n     ? ((void) (Msgid2), (const char *) (Msgid1)) \\\n     : ((void) (Msgid1), (const char *) (Msgid2)))\n# undef dngettext\n# define dngettext(Domainname, Msgid1, Msgid2, N) \\\n    ((void) (Domainname), ngettext (Msgid1, Msgid2, N))\n# undef dcngettext\n# define dcngettext(Domainname, Msgid1, Msgid2, N, Category) \\\n    ((void) (Category), dngettext (Domainname, Msgid1, Msgid2, N))\n# undef textdomain\n# define textdomain(Domainname) ((const char *) (Domainname))\n# undef bindtextdomain\n# define bindtextdomain(Domainname, Dirname) \\\n    ((void) (Domainname), (const char *) (Dirname))\n# undef bind_textdomain_codeset\n# define bind_textdomain_codeset(Domainname, Codeset) \\\n    ((void) (Domainname), (const char *) (Codeset))\n\n#endif\n\n/* Prefer gnulib's setlocale override over libintl's setlocale override.  */\n#ifdef GNULIB_defined_setlocale\n# undef setlocale\n# define setlocale rpl_setlocale\n#endif\n\n/* A pseudo function call that serves as a marker for the automated\n   extraction of messages, but does not call gettext().  The run-time\n   translation is done at a different place in the code.\n   The argument, String, should be a literal string.  Concatenated strings\n   and other string expressions won't work.\n   The macro's expansion is not parenthesized, so that it is suitable as\n   initializer for static 'char[]' or 'const char[]' variables.  */\n#define gettext_noop(String) String\n\n/* The separator between msgctxt and msgid in a .mo file.  */\n#define GETTEXT_CONTEXT_GLUE \"\\004\"\n\n/* Pseudo function calls, taking a MSGCTXT and a MSGID instead of just a\n   MSGID.  MSGCTXT and MSGID must be string literals.  MSGCTXT should be\n   short and rarely need to change.\n   The letter 'p' stands for 'particular' or 'special'.  */\n#ifdef DEFAULT_TEXT_DOMAIN\n# define pgettext(Msgctxt, Msgid) \\\n   pgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#else\n# define pgettext(Msgctxt, Msgid) \\\n   pgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#endif\n#define dpgettext(Domainname, Msgctxt, Msgid) \\\n  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#define dcpgettext(Domainname, Msgctxt, Msgid, Category) \\\n  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, Category)\n#ifdef DEFAULT_TEXT_DOMAIN\n# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \\\n   npgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#else\n# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \\\n   npgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#endif\n#define dnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N) \\\n  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#define dcnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N, Category) \\\n  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, Category)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\npgettext_aux (const char *domain,\n              const char *msg_ctxt_id, const char *msgid,\n              int category)\n{\n  const char *translation = dcgettext (domain, msg_ctxt_id, category);\n  if (translation == msg_ctxt_id)\n    return msgid;\n  else\n    return translation;\n}\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\nnpgettext_aux (const char *domain,\n               const char *msg_ctxt_id, const char *msgid,\n               const char *msgid_plural, unsigned long int n,\n               int category)\n{\n  const char *translation =\n    dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);\n  if (translation == msg_ctxt_id || translation == msgid_plural)\n    return (n == 1 ? msgid : msgid_plural);\n  else\n    return translation;\n}\n\n/* The same thing extended for non-constant arguments.  Here MSGCTXT and MSGID\n   can be arbitrary expressions.  But for string literals these macros are\n   less efficient than those above.  */\n\n#include <string.h>\n\n#if (((__GNUC__ >= 3 || __GNUG__ >= 2) && !defined __STRICT_ANSI__) \\\n     /* || __STDC_VERSION__ >= 199901L */ )\n# define _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS 1\n#else\n# define _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS 0\n#endif\n\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n#include <stdlib.h>\n#endif\n\n#define pgettext_expr(Msgctxt, Msgid) \\\n  dcpgettext_expr (NULL, Msgctxt, Msgid, LC_MESSAGES)\n#define dpgettext_expr(Domainname, Msgctxt, Msgid) \\\n  dcpgettext_expr (Domainname, Msgctxt, Msgid, LC_MESSAGES)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\ndcpgettext_expr (const char *domain,\n                 const char *msgctxt, const char *msgid,\n                 int category)\n{\n  size_t msgctxt_len = strlen (msgctxt) + 1;\n  size_t msgid_len = strlen (msgid) + 1;\n  const char *translation;\n#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n  char msg_ctxt_id[msgctxt_len + msgid_len];\n#else\n  char buf[1024];\n  char *msg_ctxt_id =\n    (msgctxt_len + msgid_len <= sizeof (buf)\n     ? buf\n     : (char *) malloc (msgctxt_len + msgid_len));\n  if (msg_ctxt_id != NULL)\n#endif\n    {\n      int found_translation;\n      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);\n      msg_ctxt_id[msgctxt_len - 1] = '\\004';\n      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);\n      translation = dcgettext (domain, msg_ctxt_id, category);\n      found_translation = (translation != msg_ctxt_id);\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n      if (msg_ctxt_id != buf)\n        free (msg_ctxt_id);\n#endif\n      if (found_translation)\n        return translation;\n    }\n  return msgid;\n}\n\n#define npgettext_expr(Msgctxt, Msgid, MsgidPlural, N) \\\n  dcnpgettext_expr (NULL, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)\n#define dnpgettext_expr(Domainname, Msgctxt, Msgid, MsgidPlural, N) \\\n  dcnpgettext_expr (Domainname, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\ndcnpgettext_expr (const char *domain,\n                  const char *msgctxt, const char *msgid,\n                  const char *msgid_plural, unsigned long int n,\n                  int category)\n{\n  size_t msgctxt_len = strlen (msgctxt) + 1;\n  size_t msgid_len = strlen (msgid) + 1;\n  const char *translation;\n#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n  char msg_ctxt_id[msgctxt_len + msgid_len];\n#else\n  char buf[1024];\n  char *msg_ctxt_id =\n    (msgctxt_len + msgid_len <= sizeof (buf)\n     ? buf\n     : (char *) malloc (msgctxt_len + msgid_len));\n  if (msg_ctxt_id != NULL)\n#endif\n    {\n      int found_translation;\n      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);\n      msg_ctxt_id[msgctxt_len - 1] = '\\004';\n      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);\n      translation = dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);\n      found_translation = !(translation == msg_ctxt_id || translation == msgid_plural);\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n      if (msg_ctxt_id != buf)\n        free (msg_ctxt_id);\n#endif\n      if (found_translation)\n        return translation;\n    }\n  return (n == 1 ? msgid : msgid_plural);\n}\n\n#endif /* _LIBGETTEXT_H */\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/gettext.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":49,"col":23,"offset":142}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":62,"col":10,"offset":0},"end":{"line":62,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":70,"col":6,"offset":0},"end":{"line":70,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":85,"col":5,"offset":0},"end":{"line":87,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":57,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":114,"col":1,"offset":0},"end":{"line":114,"col":68,"offset":67}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":115,"col":51,"offset":0},"end":{"line":115,"col":52,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":8,"offset":154}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":134,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":79,"offset":109}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":140,"col":40,"offset":0},"end":{"line":140,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":141,"col":1,"offset":0},"end":{"line":156,"col":25,"offset":545}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":157,"col":60,"offset":0},"end":{"line":157,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":254,"col":5,"offset":0},"end":{"line":255,"col":5,"offset":25}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h:21:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":49,"col":23,"offset":142}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":60,"col":1,"offset":0},"end":{"line":60,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":62,"col":10,"offset":0},"end":{"line":62,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":70,"col":6,"offset":0},"end":{"line":70,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":85,"col":5,"offset":0},"end":{"line":87,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":91,"col":1,"offset":0},"end":{"line":91,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":92,"col":1,"offset":0},"end":{"line":92,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":94,"col":1,"offset":0},"end":{"line":95,"col":57,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":114,"col":1,"offset":0},"end":{"line":114,"col":68,"offset":67}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":115,"col":51,"offset":0},"end":{"line":115,"col":52,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":8,"offset":154}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":134,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":79,"offset":109}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":140,"col":40,"offset":0},"end":{"line":140,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":141,"col":1,"offset":0},"end":{"line":156,"col":25,"offset":545}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":157,"col":60,"offset":0},"end":{"line":157,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","start":{"line":254,"col":5,"offset":0},"end":{"line":255,"col":5,"offset":25}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":285,"col":5,"offset":0},"end":{"line":285,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c:277:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","start":{"line":285,"col":5,"offset":0},"end":{"line":285,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/signal.in.h:1:\n `/* A GNU-like <signal.h>.\n\n   Copyright (C) 2006-2017 Free Software Foundation, Inc.\n\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n#if __GNUC__ >= 3\n@PRAGMA_SYSTEM_HEADER@\n#endif\n@PRAGMA_COLUMNS@\n\n#if defined __need_sig_atomic_t || defined __need_sigset_t || defined _GL_ALREADY_INCLUDING_SIGNAL_H || (defined _SIGNAL_H && !defined __SIZEOF_PTHREAD_MUTEX_T)\n/* Special invocation convention:\n   - Inside glibc header files.\n   - On glibc systems we have a sequence of nested includes\n     <signal.h> -> <ucontext.h> -> <signal.h>.\n     In this situation, the functions are not yet declared, therefore we cannot\n     provide the C++ aliases.\n   - On glibc systems with GCC 4.3 we have a sequence of nested includes\n     <csignal> -> </usr/include/signal.h> -> <sys/ucontext.h> -> <signal.h>.\n     In this situation, some of the functions are not yet declared, therefore\n     we cannot provide the C++ aliases.  */\n\n# @INCLUDE_NEXT@ @NEXT_SIGNAL_H@\n\n#else\n/* Normal invocation convention.  */\n\n#ifndef _@GUARD_PREFIX@_SIGNAL_H\n\n#define _GL_ALREADY_INCLUDING_SIGNAL_H\n\n/* Define pid_t, uid_t.\n   Also, mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.\n   On Solaris 10, <signal.h> includes <sys/types.h>, which eventually includes\n   us; so include <sys/types.h> now, before the second inclusion guard.  */\n#include <sys/types.h>\n\n/* The include_next requires a split double-inclusion guard.  */\n#@INCLUDE_NEXT@ @NEXT_SIGNAL_H@\n\n#undef _GL_ALREADY_INCLUDING_SIGNAL_H\n\n#ifndef _@GUARD_PREFIX@_SIGNAL_H\n#define _@GUARD_PREFIX@_SIGNAL_H\n\n/* Mac OS X 10.3, FreeBSD 6.4, OpenBSD 3.8, OSF/1 4.0, Solaris 2.6, Android\n   declare pthread_sigmask in <pthread.h>, not in <signal.h>.\n   But avoid namespace pollution on glibc systems.*/\n#if (@GNULIB_PTHREAD_SIGMASK@ || defined GNULIB_POSIXCHECK) \\\n    && ((defined __APPLE__ && defined __MACH__) \\\n        || defined __FreeBSD__ || defined __OpenBSD__ || defined __osf__ \\\n        || defined __sun || defined __ANDROID__) \\\n    && ! defined __GLIBC__\n# include <pthread.h>\n#endif\n\n/* The definitions of _GL_FUNCDECL_RPL etc. are copied here.  */\n\n/* The definition of _GL_ARG_NONNULL is copied here.  */\n\n/* The definition of _GL_WARN_ON_USE is copied here.  */\n\n/* On AIX, sig_atomic_t already includes volatile.  C99 requires that\n   'volatile sig_atomic_t' ignore the extra modifier, but C89 did not.\n   Hence, redefine this to a non-volatile type as needed.  */\n#if ! @HAVE_TYPE_VOLATILE_SIG_ATOMIC_T@\n# if !GNULIB_defined_sig_atomic_t\ntypedef int rpl_sig_atomic_t;\n#  undef sig_atomic_t\n#  define sig_atomic_t rpl_sig_atomic_t\n#  define GNULIB_defined_sig_atomic_t 1\n# endif\n#endif\n\n/* A set or mask of signals.  */\n#if !@HAVE_SIGSET_T@\n# if !GNULIB_defined_sigset_t\ntypedef unsigned int sigset_t;\n#  define GNULIB_defined_sigset_t 1\n# endif\n#endif\n\n/* Define sighandler_t, the type of signal handlers.  A GNU extension.  */\n#if !@HAVE_SIGHANDLER_T@\n# ifdef __cplusplus\nextern \"C\" {\n# endif\n# if !GNULIB_defined_sighandler_t\ntypedef void (*sighandler_t) (int);\n#  define GNULIB_defined_sighandler_t 1\n# endif\n# ifdef __cplusplus\n}\n# endif\n#endif\n\n\n#if @GNULIB_SIGNAL_H_SIGPIPE@\n# ifndef SIGPIPE\n/* Define SIGPIPE to a value that does not overlap with other signals.  */\n#  define SIGPIPE 13\n#  define GNULIB_defined_SIGPIPE 1\n/* To actually use SIGPIPE, you also need the gnulib modules 'sigprocmask',\n   'write', 'stdio'.  */\n# endif\n#endif\n\n\n/* Maximum signal number + 1.  */\n#ifndef NSIG\n# if defined __TANDEM\n#  define NSIG 32\n# endif\n#endif\n\n\n#if @GNULIB_PTHREAD_SIGMASK@\n# if @REPLACE_PTHREAD_SIGMASK@\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef pthread_sigmask\n#   define pthread_sigmask rpl_pthread_sigmask\n#  endif\n_GL_FUNCDECL_RPL (pthread_sigmask, int,\n                  (int how, const sigset_t *new_mask, sigset_t *old_mask));\n_GL_CXXALIAS_RPL (pthread_sigmask, int,\n                  (int how, const sigset_t *new_mask, sigset_t *old_mask));\n# else\n#  if !@HAVE_PTHREAD_SIGMASK@\n_GL_FUNCDECL_SYS (pthread_sigmask, int,\n                  (int how, const sigset_t *new_mask, sigset_t *old_mask));\n#  endif\n_GL_CXXALIAS_SYS (pthread_sigmask, int,\n                  (int how, const sigset_t *new_mask, sigset_t *old_mask));\n# endif\n_GL_CXXALIASWARN (pthread_sigmask);\n#elif defined GNULIB_POSIXCHECK\n# undef pthread_sigmask\n# if HAVE_RAW_DECL_PTHREAD_SIGMASK\n_GL_WARN_ON_USE (pthread_sigmask, \"pthread_sigmask is not portable - \"\n                 \"use gnulib module pthread_sigmask for portability\");\n# endif\n#endif\n\n\n#if @GNULIB_RAISE@\n# if @REPLACE_RAISE@\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   undef raise\n#   define raise rpl_raise\n#  endif\n_GL_FUNCDECL_RPL (raise, int, (int sig));\n_GL_CXXALIAS_RPL (raise, int, (int sig));\n# else\n#  if !@HAVE_RAISE@\n_GL_FUNCDECL_SYS (raise, int, (int sig));\n#  endif\n_GL_CXXALIAS_SYS (raise, int, (int sig));\n# endif\n_GL_CXXALIASWARN (raise);\n#elif defined GNULIB_POSIXCHECK\n# undef raise\n/* Assume raise is always declared.  */\n_GL_WARN_ON_USE (raise, \"raise can crash on native Windows - \"\n                 \"use gnulib module raise for portability\");\n#endif\n\n\n#if @GNULIB_SIGPROCMASK@\n# if !@HAVE_POSIX_SIGNALBLOCKING@\n\n#  ifndef GNULIB_defined_signal_blocking\n#   define GNULIB_defined_signal_blocking 1\n#  endif\n\n/* Maximum signal number + 1.  */\n#  ifndef NSIG\n#   define NSIG 32\n#  endif\n\n/* This code supports only 32 signals.  */\n#  if !GNULIB_defined_verify_NSIG_constraint\ntypedef int verify_NSIG_constraint[NSIG <= 32 ? 1 : -1];\n#   define GNULIB_defined_verify_NSIG_constraint 1\n#  endif\n\n# endif\n\n/* When also using extern inline, suppress the use of static inline in\n   standard headers of problematic Apple configurations, as Libc at\n   least through Libc-825.26 (2013-04-09) mishandles it; see, e.g.,\n   <http://lists.gnu.org/archive/html/bug-gnulib/2012-12/msg00023.html>.\n   Perhaps Apple will fix this some day.  */\n#if (defined _GL_EXTERN_INLINE_IN_USE && defined __APPLE__ \\\n     && (defined __i386__ || defined __x86_64__))\n# undef sigaddset\n# undef sigdelset\n# undef sigemptyset\n# undef sigfillset\n# undef sigismember\n#endif\n\n/* Test whether a given signal is contained in a signal set.  */\n# if @HAVE_POSIX_SIGNALBLOCKING@\n/* This function is defined as a macro on Mac OS X.  */\n#  if defined __cplusplus && defined GNULIB_NAMESPACE\n#   undef sigismember\n#  endif\n# else\n_GL_FUNCDECL_SYS (sigismember, int, (const sigset_t *set, int sig)\n                                    _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigismember, int, (const sigset_t *set, int sig));\n_GL_CXXALIASWARN (sigismember);\n\n/* Initialize a signal set to the empty set.  */\n# if @HAVE_POSIX_SIGNALBLOCKING@\n/* This function is defined as a macro on Mac OS X.  */\n#  if defined __cplusplus && defined GNULIB_NAMESPACE\n#   undef sigemptyset\n#  endif\n# else\n_GL_FUNCDECL_SYS (sigemptyset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigemptyset, int, (sigset_t *set));\n_GL_CXXALIASWARN (sigemptyset);\n\n/* Add a signal to a signal set.  */\n# if @HAVE_POSIX_SIGNALBLOCKING@\n/* This function is defined as a macro on Mac OS X.  */\n#  if defined __cplusplus && defined GNULIB_NAMESPACE\n#   undef sigaddset\n#  endif\n# else\n_GL_FUNCDECL_SYS (sigaddset, int, (sigset_t *set, int sig)\n                                  _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigaddset, int, (sigset_t *set, int sig));\n_GL_CXXALIASWARN (sigaddset);\n\n/* Remove a signal from a signal set.  */\n# if @HAVE_POSIX_SIGNALBLOCKING@\n/* This function is defined as a macro on Mac OS X.  */\n#  if defined __cplusplus && defined GNULIB_NAMESPACE\n#   undef sigdelset\n#  endif\n# else\n_GL_FUNCDECL_SYS (sigdelset, int, (sigset_t *set, int sig)\n                                  _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigdelset, int, (sigset_t *set, int sig));\n_GL_CXXALIASWARN (sigdelset);\n\n/* Fill a signal set with all possible signals.  */\n# if @HAVE_POSIX_SIGNALBLOCKING@\n/* This function is defined as a macro on Mac OS X.  */\n#  if defined __cplusplus && defined GNULIB_NAMESPACE\n#   undef sigfillset\n#  endif\n# else\n_GL_FUNCDECL_SYS (sigfillset, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigfillset, int, (sigset_t *set));\n_GL_CXXALIASWARN (sigfillset);\n\n/* Return the set of those blocked signals that are pending.  */\n# if !@HAVE_POSIX_SIGNALBLOCKING@\n_GL_FUNCDECL_SYS (sigpending, int, (sigset_t *set) _GL_ARG_NONNULL ((1)));\n# endif\n_GL_CXXALIAS_SYS (sigpending, int, (sigset_t *set));\n_GL_CXXALIASWARN (sigpending);\n\n/* If OLD_SET is not NULL, put the current set of blocked signals in *OLD_SET.\n   Then, if SET is not NULL, affect the current set of blocked signals by\n   combining it with *SET as indicated in OPERATION.\n   In this implementation, you are not allowed to change a signal handler\n   while the signal is blocked.  */\n# if !@HAVE_POSIX_SIGNALBLOCKING@\n#  define SIG_BLOCK   0  /* blocked_set = blocked_set | *set; */\n#  define SIG_SETMASK 1  /* blocked_set = *set; */\n#  define SIG_UNBLOCK 2  /* blocked_set = blocked_set & ~*set; */\n_GL_FUNCDECL_SYS (sigprocmask, int,\n                  (int operation, const sigset_t *set, sigset_t *old_set));\n# endif\n_GL_CXXALIAS_SYS (sigprocmask, int,\n                  (int operation, const sigset_t *set, sigset_t *old_set));\n_GL_CXXALIASWARN (sigprocmask);\n\n/* Install the handler FUNC for signal SIG, and return the previous\n   handler.  */\n# ifdef __cplusplus\nextern \"C\" {\n# endif\n# if !GNULIB_defined_function_taking_int_returning_void_t\ntypedef void (*_gl_function_taking_int_returning_void_t) (int);\n#  define GNULIB_defined_function_taking_int_returning_void_t 1\n# endif\n# ifdef __cplusplus\n}\n# endif\n# if !@HAVE_POSIX_SIGNALBLOCKING@\n#  if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#   define signal rpl_signal\n#  endif\n_GL_FUNCDECL_RPL (signal, _gl_function_taking_int_returning_void_t,\n                  (int sig, _gl_function_taking_int_returning_void_t func));\n_GL_CXXALIAS_RPL (signal, _gl_function_taking_int_returning_void_t,\n                  (int sig, _gl_function_taking_int_returning_void_t func));\n# else\n_GL_CXXALIAS_SYS (signal, _gl_function_taking_int_returning_void_t,\n                  (int sig, _gl_function_taking_int_returning_void_t func));\n# endif\n_GL_CXXALIASWARN (signal);\n\n# if !@HAVE_POSIX_SIGNALBLOCKING@ && GNULIB_defined_SIGPIPE\n/* Raise signal SIGPIPE.  */\n_GL_EXTERN_C int _gl_raise_SIGPIPE (void);\n# endif\n\n#elif defined GNULIB_POSIXCHECK\n# undef sigaddset\n# if HAVE_RAW_DECL_SIGADDSET\n_GL_WARN_ON_USE (sigaddset, \"sigaddset is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigdelset\n# if HAVE_RAW_DECL_SIGDELSET\n_GL_WARN_ON_USE (sigdelset, \"sigdelset is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigemptyset\n# if HAVE_RAW_DECL_SIGEMPTYSET\n_GL_WARN_ON_USE (sigemptyset, \"sigemptyset is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigfillset\n# if HAVE_RAW_DECL_SIGFILLSET\n_GL_WARN_ON_USE (sigfillset, \"sigfillset is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigismember\n# if HAVE_RAW_DECL_SIGISMEMBER\n_GL_WARN_ON_USE (sigismember, \"sigismember is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigpending\n# if HAVE_RAW_DECL_SIGPENDING\n_GL_WARN_ON_USE (sigpending, \"sigpending is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n# undef sigprocmask\n# if HAVE_RAW_DECL_SIGPROCMASK\n_GL_WARN_ON_USE (sigprocmask, \"sigprocmask is unportable - \"\n                 \"use the gnulib module sigprocmask for portability\");\n# endif\n#endif /* @GNULIB_SIGPROCMASK@ */\n\n\n#if @GNULIB_SIGACTION@\n# if !@HAVE_SIGACTION@\n\n#  if !@HAVE_SIGINFO_T@\n\n#   if !GNULIB_defined_siginfo_types\n\n/* Present to allow compilation, but unsupported by gnulib.  */\nunion sigval\n{\n  int sival_int;\n  void *sival_ptr;\n};\n\n/* Present to allow compilation, but unsupported by gnulib.  */\nstruct siginfo_t\n{\n  int si_signo;\n  int si_code;\n  int si_errno;\n  pid_t si_pid;\n  uid_t si_uid;\n  void *si_addr;\n  int si_status;\n  long si_band;\n  union sigval si_value;\n};\ntypedef struct siginfo_t siginfo_t;\n\n#    define GNULIB_defined_siginfo_types 1\n#   endif\n\n#  endif /* !@HAVE_SIGINFO_T@ */\n\n/* We assume that platforms which lack the sigaction() function also lack\n   the 'struct sigaction' type, and vice versa.  */\n\n#  if !GNULIB_defined_struct_sigaction\n\nstruct sigaction\n{\n  union\n  {\n    void (*_sa_handler) (int);\n    /* Present to allow compilation, but unsupported by gnulib.  POSIX\n       says that implementations may, but not must, make sa_sigaction\n       overlap with sa_handler, but we know of no implementation where\n       they do not overlap.  */\n    void (*_sa_sigaction) (int, siginfo_t *, void *);\n  } _sa_func;\n  sigset_t sa_mask;\n  /* Not all POSIX flags are supported.  */\n  int sa_flags;\n};\n#   define sa_handler _sa_func._sa_handler\n#   define sa_sigaction _sa_func._sa_sigaction\n/* Unsupported flags are not present.  */\n#   define SA_RESETHAND 1\n#   define SA_NODEFER 2\n#   define SA_RESTART 4\n\n#   define GNULIB_defined_struct_sigaction 1\n#  endif\n\n_GL_FUNCDECL_SYS (sigaction, int, (int, const struct sigaction *restrict,\n                                   struct sigaction *restrict));\n\n# elif !@HAVE_STRUCT_SIGACTION_SA_SIGACTION@\n\n#  define sa_sigaction sa_handler\n\n# endif /* !@HAVE_SIGACTION@, !@HAVE_STRUCT_SIGACTION_SA_SIGACTION@ */\n\n_GL_CXXALIAS_SYS (sigaction, int, (int, const struct sigaction *restrict,\n                                   struct sigaction *restrict));\n_GL_CXXALIASWARN (sigaction);\n\n#elif defined GNULIB_POSIXCHECK\n# undef sigaction\n# if HAVE_RAW_DECL_SIGACTION\n_GL_WARN_ON_USE (sigaction, \"sigaction is unportable - \"\n                 \"use the gnulib module sigaction for portability\");\n# endif\n#endif\n\n/* Some systems don't have SA_NODEFER.  */\n#ifndef SA_NODEFER\n# define SA_NODEFER 0\n#endif\n\n\n#endif /* _@GUARD_PREFIX@_SIGNAL_H */\n#endif /* _@GUARD_PREFIX@_SIGNAL_H */\n#endif\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/signal.in.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":34,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":36,"col":10,"offset":0},"end":{"line":40,"col":23,"offset":130}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":34,"offset":33}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":35,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":318,"col":5,"offset":0},"end":{"line":319,"col":5,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":319,"col":7,"offset":0},"end":{"line":319,"col":22,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":24,"offset":0},"end":{"line":321,"col":38,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":53,"offset":0},"end":{"line":321,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":59,"offset":0},"end":{"line":321,"col":62,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":322,"col":40,"offset":0},"end":{"line":322,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":324,"col":1,"offset":0},"end":{"line":325,"col":69,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":336,"col":5,"offset":0},"end":{"line":338,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":342,"col":79,"offset":0},"end":{"line":342,"col":80,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":345,"col":1,"offset":0},"end":{"line":345,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":362,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":367,"col":73,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":368,"col":43,"offset":0},"end":{"line":368,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":384,"col":26,"offset":538}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":385,"col":60,"offset":0},"end":{"line":385,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":6,"offset":0},"end":{"line":395,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":23,"offset":0},"end":{"line":395,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":30,"offset":0},"end":{"line":395,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":44,"offset":0},"end":{"line":395,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":401,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":75,"offset":97}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":408,"col":21,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":420,"col":1,"offset":0},"end":{"line":420,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":423,"col":1,"offset":0},"end":{"line":423,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":436,"col":1,"offset":0},"end":{"line":438,"col":7,"offset":114}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":440,"col":1,"offset":0},"end":{"line":440,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":441,"col":53,"offset":0},"end":{"line":441,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":443,"col":1,"offset":0},"end":{"line":445,"col":19,"offset":95}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":20,"offset":38}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":464,"col":1,"offset":0},"end":{"line":465,"col":23,"offset":99}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":470,"col":1,"offset":0},"end":{"line":470,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":471,"col":55,"offset":0},"end":{"line":471,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":472,"col":1,"offset":0},"end":{"line":479,"col":32,"offset":236}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":488,"col":5,"offset":0},"end":{"line":489,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":62,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":494,"col":52,"offset":0},"end":{"line":494,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":496,"col":6,"offset":69}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":517,"col":1,"offset":0},"end":{"line":517,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":523,"col":5,"offset":0},"end":{"line":524,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":524,"col":7,"offset":0},"end":{"line":524,"col":21,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":525,"col":38,"offset":0},"end":{"line":525,"col":52,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":525,"col":67,"offset":0},"end":{"line":525,"col":71,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":526,"col":54,"offset":0},"end":{"line":526,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":528,"col":1,"offset":0},"end":{"line":528,"col":74,"offset":73}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":539,"col":5,"offset":0},"end":{"line":541,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":545,"col":1,"offset":0},"end":{"line":545,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":546,"col":53,"offset":0},"end":{"line":546,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":547,"col":1,"offset":0},"end":{"line":550,"col":63,"offset":155}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":551,"col":53,"offset":0},"end":{"line":551,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":553,"col":1,"offset":0},"end":{"line":554,"col":8,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":565,"col":5,"offset":0},"end":{"line":566,"col":5,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":566,"col":7,"offset":0},"end":{"line":566,"col":22,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":567,"col":39,"offset":0},"end":{"line":567,"col":53,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":567,"col":68,"offset":0},"end":{"line":567,"col":72,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":568,"col":55,"offset":0},"end":{"line":568,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":570,"col":1,"offset":0},"end":{"line":570,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":581,"col":5,"offset":0},"end":{"line":583,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":587,"col":1,"offset":0},"end":{"line":587,"col":73,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":588,"col":52,"offset":0},"end":{"line":588,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":589,"col":1,"offset":0},"end":{"line":592,"col":73,"offset":174}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":593,"col":52,"offset":0},"end":{"line":593,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":596,"col":1,"offset":0},"end":{"line":597,"col":8,"offset":87}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":608,"col":5,"offset":0},"end":{"line":609,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":609,"col":7,"offset":0},"end":{"line":609,"col":21,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":24,"offset":0},"end":{"line":611,"col":38,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":53,"offset":0},"end":{"line":611,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":65,"offset":0},"end":{"line":611,"col":68,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":612,"col":40,"offset":0},"end":{"line":612,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":614,"col":1,"offset":0},"end":{"line":615,"col":71,"offset":102}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":626,"col":5,"offset":0},"end":{"line":628,"col":17,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":628,"col":30,"offset":0},"end":{"line":628,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":628,"col":49,"offset":0},"end":{"line":628,"col":53,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":640,"col":1,"offset":0},"end":{"line":640,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":6,"offset":0},"end":{"line":645,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":24,"offset":0},"end":{"line":645,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":31,"offset":0},"end":{"line":645,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":46,"offset":0},"end":{"line":645,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":650,"col":1,"offset":0},"end":{"line":651,"col":77,"offset":137}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":652,"col":56,"offset":0},"end":{"line":652,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":653,"col":1,"offset":0},"end":{"line":654,"col":78,"offset":138}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":656,"col":8,"offset":0},"end":{"line":656,"col":24,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":657,"col":40,"offset":0},"end":{"line":657,"col":54,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":658,"col":43,"offset":0},"end":{"line":658,"col":66,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":658,"col":68,"offset":0},"end":{"line":658,"col":71,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":659,"col":56,"offset":0},"end":{"line":659,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":661,"col":1,"offset":0},"end":{"line":664,"col":22,"offset":169}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h:24:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":34,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":36,"col":10,"offset":0},"end":{"line":40,"col":23,"offset":130}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":34,"offset":33}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":48,"col":10,"offset":0},"end":{"line":48,"col":35,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":318,"col":5,"offset":0},"end":{"line":319,"col":5,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":319,"col":7,"offset":0},"end":{"line":319,"col":22,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":24,"offset":0},"end":{"line":321,"col":38,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":53,"offset":0},"end":{"line":321,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":321,"col":59,"offset":0},"end":{"line":321,"col":62,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":322,"col":40,"offset":0},"end":{"line":322,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":324,"col":1,"offset":0},"end":{"line":325,"col":69,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":336,"col":5,"offset":0},"end":{"line":338,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":342,"col":79,"offset":0},"end":{"line":342,"col":80,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":345,"col":1,"offset":0},"end":{"line":345,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":362,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":367,"col":73,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":368,"col":43,"offset":0},"end":{"line":368,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":384,"col":26,"offset":538}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":385,"col":60,"offset":0},"end":{"line":385,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":6,"offset":0},"end":{"line":395,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":23,"offset":0},"end":{"line":395,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":30,"offset":0},"end":{"line":395,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":395,"col":44,"offset":0},"end":{"line":395,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":401,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":75,"offset":97}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":408,"col":21,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":420,"col":1,"offset":0},"end":{"line":420,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":423,"col":1,"offset":0},"end":{"line":423,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":436,"col":1,"offset":0},"end":{"line":438,"col":7,"offset":114}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":440,"col":1,"offset":0},"end":{"line":440,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":441,"col":53,"offset":0},"end":{"line":441,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":443,"col":1,"offset":0},"end":{"line":445,"col":19,"offset":95}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":20,"offset":38}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":464,"col":1,"offset":0},"end":{"line":465,"col":23,"offset":99}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":470,"col":1,"offset":0},"end":{"line":470,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":471,"col":55,"offset":0},"end":{"line":471,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":472,"col":1,"offset":0},"end":{"line":479,"col":32,"offset":236}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":488,"col":5,"offset":0},"end":{"line":489,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":493,"col":1,"offset":0},"end":{"line":493,"col":62,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":494,"col":52,"offset":0},"end":{"line":494,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":496,"col":6,"offset":69}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":517,"col":1,"offset":0},"end":{"line":517,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":523,"col":5,"offset":0},"end":{"line":524,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":524,"col":7,"offset":0},"end":{"line":524,"col":21,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":525,"col":38,"offset":0},"end":{"line":525,"col":52,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":525,"col":67,"offset":0},"end":{"line":525,"col":71,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":526,"col":54,"offset":0},"end":{"line":526,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":528,"col":1,"offset":0},"end":{"line":528,"col":74,"offset":73}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":539,"col":5,"offset":0},"end":{"line":541,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":545,"col":1,"offset":0},"end":{"line":545,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":546,"col":53,"offset":0},"end":{"line":546,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":547,"col":1,"offset":0},"end":{"line":550,"col":63,"offset":155}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":551,"col":53,"offset":0},"end":{"line":551,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":553,"col":1,"offset":0},"end":{"line":554,"col":8,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":565,"col":5,"offset":0},"end":{"line":566,"col":5,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":566,"col":7,"offset":0},"end":{"line":566,"col":22,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":567,"col":39,"offset":0},"end":{"line":567,"col":53,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":567,"col":68,"offset":0},"end":{"line":567,"col":72,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":568,"col":55,"offset":0},"end":{"line":568,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":570,"col":1,"offset":0},"end":{"line":570,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":581,"col":5,"offset":0},"end":{"line":583,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":587,"col":1,"offset":0},"end":{"line":587,"col":73,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":588,"col":52,"offset":0},"end":{"line":588,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":589,"col":1,"offset":0},"end":{"line":592,"col":73,"offset":174}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":593,"col":52,"offset":0},"end":{"line":593,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":596,"col":1,"offset":0},"end":{"line":597,"col":8,"offset":87}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":608,"col":5,"offset":0},"end":{"line":609,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":609,"col":7,"offset":0},"end":{"line":609,"col":21,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":24,"offset":0},"end":{"line":611,"col":38,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":53,"offset":0},"end":{"line":611,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":611,"col":65,"offset":0},"end":{"line":611,"col":68,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":612,"col":40,"offset":0},"end":{"line":612,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":614,"col":1,"offset":0},"end":{"line":615,"col":71,"offset":102}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":626,"col":5,"offset":0},"end":{"line":628,"col":17,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":628,"col":30,"offset":0},"end":{"line":628,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":628,"col":49,"offset":0},"end":{"line":628,"col":53,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":640,"col":1,"offset":0},"end":{"line":640,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":6,"offset":0},"end":{"line":645,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":24,"offset":0},"end":{"line":645,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":31,"offset":0},"end":{"line":645,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":645,"col":46,"offset":0},"end":{"line":645,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":650,"col":1,"offset":0},"end":{"line":651,"col":77,"offset":137}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":652,"col":56,"offset":0},"end":{"line":652,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":653,"col":1,"offset":0},"end":{"line":654,"col":78,"offset":138}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":656,"col":8,"offset":0},"end":{"line":656,"col":24,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":657,"col":40,"offset":0},"end":{"line":657,"col":54,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":658,"col":43,"offset":0},"end":{"line":658,"col":66,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":658,"col":68,"offset":0},"end":{"line":658,"col":71,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":659,"col":56,"offset":0},"end":{"line":659,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","start":{"line":661,"col":1,"offset":0},"end":{"line":664,"col":22,"offset":169}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":623,"col":7,"offset":0},"end":{"line":623,"col":26,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":626,"col":1,"offset":0},"end":{"line":626,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":629,"col":5,"offset":0},"end":{"line":629,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c:623:\n `output_is_special =` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":623,"col":7,"offset":0},"end":{"line":623,"col":26,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":626,"col":1,"offset":0},"end":{"line":626,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","start":{"line":629,"col":5,"offset":0},"end":{"line":629,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":415,"col":49,"offset":0},"end":{"line":415,"col":59,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":419,"col":51,"offset":0},"end":{"line":419,"col":61,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":556,"col":63,"offset":0},"end":{"line":556,"col":70,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":557,"col":64,"offset":0},"end":{"line":557,"col":71,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":561,"col":61,"offset":0},"end":{"line":561,"col":68,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":562,"col":62,"offset":0},"end":{"line":562,"col":69,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":569,"col":6,"offset":0},"end":{"line":569,"col":13,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":572,"col":6,"offset":0},"end":{"line":572,"col":13,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":594,"col":9,"offset":0},"end":{"line":594,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":600,"col":9,"offset":0},"end":{"line":600,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":612,"col":9,"offset":0},"end":{"line":612,"col":12,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h:415:\n `__restrict` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":415,"col":49,"offset":0},"end":{"line":415,"col":59,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":419,"col":51,"offset":0},"end":{"line":419,"col":61,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":556,"col":63,"offset":0},"end":{"line":556,"col":70,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":557,"col":64,"offset":0},"end":{"line":557,"col":71,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":561,"col":61,"offset":0},"end":{"line":561,"col":68,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":562,"col":62,"offset":0},"end":{"line":562,"col":69,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":569,"col":6,"offset":0},"end":{"line":569,"col":13,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":572,"col":6,"offset":0},"end":{"line":572,"col":13,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":594,"col":9,"offset":0},"end":{"line":594,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":600,"col":9,"offset":0},"end":{"line":600,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","start":{"line":612,"col":9,"offset":0},"end":{"line":612,"col":12,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":29,"col":1,"offset":0},"end":{"line":29,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":59,"col":10,"offset":0},"end":{"line":59,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":63,"col":1,"offset":0},"end":{"line":63,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":85,"col":1,"offset":0},"end":{"line":86,"col":32,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":91,"col":10,"offset":0},"end":{"line":91,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":110,"col":6,"offset":0},"end":{"line":110,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":110,"col":18,"offset":0},"end":{"line":110,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":119,"col":6,"offset":0},"end":{"line":120,"col":6,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":7,"offset":0},"end":{"line":137,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":20,"offset":0},"end":{"line":137,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":25,"offset":0},"end":{"line":137,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":38,"offset":0},"end":{"line":137,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":44,"offset":0},"end":{"line":138,"col":5,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":148,"col":5,"offset":0},"end":{"line":150,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":154,"col":39,"offset":0},"end":{"line":154,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":155,"col":35,"offset":0},"end":{"line":155,"col":38,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":157,"col":7,"offset":0},"end":{"line":163,"col":6,"offset":167}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":173,"col":5,"offset":0},"end":{"line":175,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":179,"col":1,"offset":0},"end":{"line":181,"col":7,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":182,"col":25,"offset":0},"end":{"line":189,"col":6,"offset":247}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":199,"col":5,"offset":0},"end":{"line":201,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":205,"col":1,"offset":0},"end":{"line":214,"col":32,"offset":329}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":224,"col":5,"offset":0},"end":{"line":226,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":230,"col":1,"offset":0},"end":{"line":1041,"col":7,"offset":27033}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h:29:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":29,"col":1,"offset":0},"end":{"line":29,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":59,"col":10,"offset":0},"end":{"line":59,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":63,"col":1,"offset":0},"end":{"line":63,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":85,"col":1,"offset":0},"end":{"line":86,"col":32,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":91,"col":10,"offset":0},"end":{"line":91,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":110,"col":6,"offset":0},"end":{"line":110,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":110,"col":18,"offset":0},"end":{"line":110,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":119,"col":6,"offset":0},"end":{"line":120,"col":6,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":7,"offset":0},"end":{"line":137,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":20,"offset":0},"end":{"line":137,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":25,"offset":0},"end":{"line":137,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":38,"offset":0},"end":{"line":137,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":137,"col":44,"offset":0},"end":{"line":138,"col":5,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":148,"col":5,"offset":0},"end":{"line":150,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":154,"col":39,"offset":0},"end":{"line":154,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":155,"col":35,"offset":0},"end":{"line":155,"col":38,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":157,"col":7,"offset":0},"end":{"line":163,"col":6,"offset":167}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":173,"col":5,"offset":0},"end":{"line":175,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":179,"col":1,"offset":0},"end":{"line":181,"col":7,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":182,"col":25,"offset":0},"end":{"line":189,"col":6,"offset":247}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":199,"col":5,"offset":0},"end":{"line":201,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":205,"col":1,"offset":0},"end":{"line":214,"col":32,"offset":329}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":224,"col":5,"offset":0},"end":{"line":226,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","start":{"line":230,"col":1,"offset":0},"end":{"line":1041,"col":7,"offset":27033}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":572,"col":1,"offset":0},"end":{"line":572,"col":18,"offset":17}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":574,"col":1,"offset":0},"end":{"line":574,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1895,"col":1,"offset":0},"end":{"line":1895,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c:572:\n `static inline int` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":572,"col":1,"offset":0},"end":{"line":572,"col":18,"offset":17}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":574,"col":1,"offset":0},"end":{"line":574,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","start":{"line":1895,"col":1,"offset":0},"end":{"line":1895,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":19,"col":10,"offset":0},"end":{"line":19,"col":35,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":26,"col":22,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":37,"col":1,"offset":0},"end":{"line":37,"col":35,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":46,"col":10,"offset":0},"end":{"line":46,"col":35,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":23,"offset":22}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h:19:\n `@GUARD_PREFIX@_SYSEXITS_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":19,"col":10,"offset":0},"end":{"line":19,"col":35,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":26,"col":22,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":37,"col":1,"offset":0},"end":{"line":37,"col":35,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":46,"col":10,"offset":0},"end":{"line":46,"col":35,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":23,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","start":{"line":50,"col":5,"offset":0},"end":{"line":50,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c:50:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","start":{"line":50,"col":5,"offset":0},"end":{"line":50,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","start":{"line":54,"col":1,"offset":0},"end":{"line":54,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","start":{"line":122,"col":1,"offset":0},"end":{"line":122,"col":8,"offset":7}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c:122:\n `# endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","start":{"line":122,"col":1,"offset":0},"end":{"line":122,"col":8,"offset":7}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":61,"col":17,"offset":0},"end":{"line":61,"col":20,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":67,"col":17,"offset":0},"end":{"line":67,"col":20,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":81,"col":17,"offset":0},"end":{"line":81,"col":20,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":87,"col":17,"offset":0},"end":{"line":87,"col":20,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":101,"col":15,"offset":0},"end":{"line":101,"col":18,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":107,"col":15,"offset":0},"end":{"line":107,"col":18,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h:61:\n `int` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":61,"col":17,"offset":0},"end":{"line":61,"col":20,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":67,"col":17,"offset":0},"end":{"line":67,"col":20,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":81,"col":17,"offset":0},"end":{"line":81,"col":20,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":87,"col":17,"offset":0},"end":{"line":87,"col":20,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":101,"col":15,"offset":0},"end":{"line":101,"col":18,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","start":{"line":107,"col":15,"offset":0},"end":{"line":107,"col":18,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":41,"col":18,"offset":0},"end":{"line":41,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c:41:\n `;` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":41,"col":18,"offset":0},"end":{"line":41,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","start":{"line":46,"col":1,"offset":0},"end":{"line":46,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":34,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":32,"col":5,"offset":0},"end":{"line":36,"col":24,"offset":82}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":30,"offset":29}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":57,"col":5,"offset":0},"end":{"line":63,"col":6,"offset":143}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":74,"col":1,"offset":0},"end":{"line":74,"col":24,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":30,"offset":29}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h:18:\n `@GUARD_PREFIX@_STRINGS_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":34,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":23,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":32,"col":5,"offset":0},"end":{"line":36,"col":24,"offset":82}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":30,"offset":29}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":57,"col":5,"offset":0},"end":{"line":63,"col":6,"offset":143}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":74,"col":1,"offset":0},"end":{"line":74,"col":24,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":30,"offset":29}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.h:1:\n `/* Safe automatic memory allocation.\n   Copyright (C) 2003-2007, 2009-2017 Free Software Foundation, Inc.\n   Written by Bruno Haible <bruno@clisp.org>, 2003.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n#ifndef _MALLOCA_H\n#define _MALLOCA_H\n\n#include <alloca.h>\n#include <stddef.h>\n#include <stdlib.h>\n#include <stdint.h>\n\n#include \"xalloc-oversized.h\"\n\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\n/* safe_alloca(N) is equivalent to alloca(N) when it is safe to call\n   alloca(N); otherwise it returns NULL.  It either returns N bytes of\n   memory allocated on the stack, that lasts until the function returns,\n   or NULL.\n   Use of safe_alloca should be avoided:\n     - inside arguments of function calls - undefined behaviour,\n     - in inline functions - the allocation may actually last until the\n       calling function returns.\n*/\n#if HAVE_ALLOCA\n/* The OS usually guarantees only one guard page at the bottom of the stack,\n   and a page size can be as small as 4096 bytes.  So we cannot safely\n   allocate anything larger than 4096 bytes.  Also care for the possibility\n   of a few compiler-allocated temporary stack slots.\n   This must be a macro, not a function.  */\n# define safe_alloca(N) ((N) < 4032 ? alloca (N) : NULL)\n#else\n# define safe_alloca(N) ((void) (N), NULL)\n#endif\n\n/* malloca(N) is a safe variant of alloca(N).  It allocates N bytes of\n   memory allocated on the stack, that must be freed using freea() before\n   the function returns.  Upon failure, it returns NULL.  */\n#if HAVE_ALLOCA\n# define malloca(N) \\\n  ((N) < 4032 - sa_increment                                        \\\n   ? (void *) ((char *) alloca ((N) + sa_increment) + sa_increment) \\\n   : mmalloca (N))\n#else\n# define malloca(N) \\\n  mmalloca (N)\n#endif\nextern void * mmalloca (size_t n);\n\n/* Free a block of memory allocated through malloca().  */\n#if HAVE_ALLOCA\nextern void freea (void *p);\n#else\n# define freea free\n#endif\n\n/* nmalloca(N,S) is an overflow-safe variant of malloca (N * S).\n   It allocates an array of N objects, each with S bytes of memory,\n   on the stack.  S must be positive and N must be nonnegative.\n   The array must be freed using freea() before the function returns.  */\n#define nmalloca(n, s) (xalloc_oversized (n, s) ? NULL : malloca ((n) * (s)))\n\n\n#ifdef __cplusplus\n}\n#endif\n\n\n/* ------------------- Auxiliary, non-public definitions ------------------- */\n\n/* Determine the alignment of a type at compile time.  */\n#if defined __GNUC__ || defined __IBM__ALIGNOF__\n# define sa_alignof __alignof__\n#elif defined __cplusplus\n  template <class type> struct sa_alignof_helper { char __slot1; type __slot2; };\n# define sa_alignof(type) offsetof (sa_alignof_helper<type>, __slot2)\n#elif defined __hpux\n  /* Work around a HP-UX 10.20 cc bug with enums constants defined as offsetof\n     values.  */\n# define sa_alignof(type) (sizeof (type) <= 4 ? 4 : 8)\n#elif defined _AIX\n  /* Work around an AIX 3.2.5 xlc bug with enums constants defined as offsetof\n     values.  */\n# define sa_alignof(type) (sizeof (type) <= 4 ? 4 : 8)\n#else\n# define sa_alignof(type) offsetof (struct { char __slot1; type __slot2; }, __slot2)\n#endif\n\nenum\n{\n/* The desired alignment of memory allocations is the maximum alignment\n   among all elementary types.  */\n  sa_alignment_long = sa_alignof (long),\n  sa_alignment_double = sa_alignof (double),\n#if HAVE_LONG_LONG_INT\n  sa_alignment_longlong = sa_alignof (long long),\n#endif\n  sa_alignment_longdouble = sa_alignof (long double),\n  sa_alignment_max = ((sa_alignment_long - 1) | (sa_alignment_double - 1)\n#if HAVE_LONG_LONG_INT\n                      | (sa_alignment_longlong - 1)\n#endif\n                      | (sa_alignment_longdouble - 1)\n                     ) + 1,\n/* The increment that guarantees room for a magic word must be >= sizeof (int)\n   and a multiple of sa_alignment_max.  */\n  sa_increment = ((sizeof (int) + sa_alignment_max - 1) / sa_alignment_max) * sa_alignment_max\n};\n\n#endif /* _MALLOCA_H */\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":78,"col":1,"offset":0},"end":{"line":78,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c:78:\n `#if D_INO_IN_DIRENT` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":78,"col":1,"offset":0},"end":{"line":78,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":45,"col":37,"offset":0},"end":{"line":45,"col":58,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":48,"col":37,"offset":0},"end":{"line":48,"col":60,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":51,"col":37,"offset":0},"end":{"line":51,"col":52,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":54,"col":38,"offset":0},"end":{"line":54,"col":62,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":57,"col":35,"offset":0},"end":{"line":57,"col":40,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":60,"col":47,"offset":0},"end":{"line":60,"col":50,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":63,"col":46,"offset":0},"end":{"line":63,"col":49,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":66,"col":51,"offset":0},"end":{"line":66,"col":59,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":70,"col":50,"offset":0},"end":{"line":70,"col":58,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":73,"col":55,"offset":0},"end":{"line":73,"col":68,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":77,"col":38,"offset":0},"end":{"line":77,"col":46,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":80,"col":49,"offset":0},"end":{"line":80,"col":55,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":83,"col":36,"offset":0},"end":{"line":83,"col":41,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":92,"col":35,"offset":0},"end":{"line":92,"col":40,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":97,"col":46,"offset":0},"end":{"line":97,"col":52,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":106,"col":45,"offset":0},"end":{"line":106,"col":50,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":106,"col":59,"offset":0},"end":{"line":106,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":124,"col":39,"offset":0},"end":{"line":124,"col":47,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":127,"col":60,"offset":0},"end":{"line":127,"col":66,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":130,"col":59,"offset":0},"end":{"line":130,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":133,"col":49,"offset":0},"end":{"line":133,"col":56,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":136,"col":60,"offset":0},"end":{"line":136,"col":65,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":140,"col":64,"offset":0},"end":{"line":140,"col":74,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":146,"col":49,"offset":0},"end":{"line":146,"col":58,"offset":9}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":158,"col":50,"offset":0},"end":{"line":158,"col":60,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":170,"col":50,"offset":0},"end":{"line":170,"col":60,"offset":10}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c:33:\n `STATIC` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":45,"col":37,"offset":0},"end":{"line":45,"col":58,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":48,"col":37,"offset":0},"end":{"line":48,"col":60,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":51,"col":37,"offset":0},"end":{"line":51,"col":52,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":54,"col":38,"offset":0},"end":{"line":54,"col":62,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":57,"col":35,"offset":0},"end":{"line":57,"col":40,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":60,"col":47,"offset":0},"end":{"line":60,"col":50,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":63,"col":46,"offset":0},"end":{"line":63,"col":49,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":66,"col":51,"offset":0},"end":{"line":66,"col":59,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":70,"col":50,"offset":0},"end":{"line":70,"col":58,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":73,"col":55,"offset":0},"end":{"line":73,"col":68,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":77,"col":38,"offset":0},"end":{"line":77,"col":46,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":80,"col":49,"offset":0},"end":{"line":80,"col":55,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":83,"col":36,"offset":0},"end":{"line":83,"col":41,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":92,"col":35,"offset":0},"end":{"line":92,"col":40,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":97,"col":46,"offset":0},"end":{"line":97,"col":52,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":106,"col":45,"offset":0},"end":{"line":106,"col":50,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":106,"col":59,"offset":0},"end":{"line":106,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":124,"col":39,"offset":0},"end":{"line":124,"col":47,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":127,"col":60,"offset":0},"end":{"line":127,"col":66,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":130,"col":59,"offset":0},"end":{"line":130,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":133,"col":49,"offset":0},"end":{"line":133,"col":56,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":136,"col":60,"offset":0},"end":{"line":136,"col":65,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":140,"col":64,"offset":0},"end":{"line":140,"col":74,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":146,"col":49,"offset":0},"end":{"line":146,"col":58,"offset":9}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":158,"col":50,"offset":0},"end":{"line":158,"col":60,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","start":{"line":170,"col":50,"offset":0},"end":{"line":170,"col":60,"offset":10}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.h","start":{"line":23,"col":1,"offset":0},"end":{"line":366,"col":7,"offset":8506}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.h:23:\n `#ifndef C_CTYPE_H\n#define C_CTYPE_H\n\n#include <stdbool.h>\n\n#ifndef _GL_INLINE_HEADER_BEGIN\n #error \"Please include config.h first.\"\n#endif\n_GL_INLINE_HEADER_BEGIN\n#ifndef C_CTYPE_INLINE\n# define C_CTYPE_INLINE _GL_INLINE\n#endif\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\n/* The functions defined in this file assume the \"C\" locale and a character\n   set without diacritics (ASCII-US or EBCDIC-US or something like that).\n   Even if the \"C\" locale on a particular system is an extension of the ASCII\n   character set (like on BeOS, where it is UTF-8, or on AmigaOS, where it\n   is ISO-8859-1), the functions in this file recognize only the ASCII\n   characters.  */\n\n\n#if (' ' == 32) && ('!' == 33) && ('\"' == 34) && ('#' == 35) \\\n    && ('%' == 37) && ('&' == 38) && ('\\'' == 39) && ('(' == 40) \\\n    && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \\\n    && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \\\n    && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \\\n    && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \\\n    && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \\\n    && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \\\n    && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \\\n    && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \\\n    && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \\\n    && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \\\n    && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \\\n    && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \\\n    && ('Z' == 90) && ('[' == 91) && ('\\\\' == 92) && (']' == 93) \\\n    && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \\\n    && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \\\n    && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \\\n    && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \\\n    && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \\\n    && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \\\n    && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \\\n    && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126)\n/* The character set is ASCII or one of its variants or extensions, not EBCDIC.\n   Testing the value of '\\n' and '\\r' is not relevant.  */\n# define C_CTYPE_ASCII 1\n#elif ! (' ' == '\\x40' && '0' == '\\xf0'                     \\\n         && 'A' == '\\xc1' && 'J' == '\\xd1' && 'S' == '\\xe2' \\\n         && 'a' == '\\x81' && 'j' == '\\x91' && 's' == '\\xa2')\n# error \"Only ASCII and EBCDIC are supported\"\n#endif\n\n#if 'A' < 0\n# error \"EBCDIC and char is signed -- not supported\"\n#endif\n\n/* Cases for control characters.  */\n\n#define _C_CTYPE_CNTRL \\\n   case '\\a': case '\\b': case '\\f': case '\\n': \\\n   case '\\r': case '\\t': case '\\v': \\\n   _C_CTYPE_OTHER_CNTRL\n\n/* ASCII control characters other than those with \\-letter escapes.  */\n\n#if C_CTYPE_ASCII\n# define _C_CTYPE_OTHER_CNTRL \\\n    case '\\x00': case '\\x01': case '\\x02': case '\\x03': \\\n    case '\\x04': case '\\x05': case '\\x06': case '\\x0e': \\\n    case '\\x0f': case '\\x10': case '\\x11': case '\\x12': \\\n    case '\\x13': case '\\x14': case '\\x15': case '\\x16': \\\n    case '\\x17': case '\\x18': case '\\x19': case '\\x1a': \\\n    case '\\x1b': case '\\x1c': case '\\x1d': case '\\x1e': \\\n    case '\\x1f': case '\\x7f'\n#else\n   /* Use EBCDIC code page 1047's assignments for ASCII control chars;\n      assume all EBCDIC code pages agree about these assignments.  */\n# define _C_CTYPE_OTHER_CNTRL \\\n    case '\\x00': case '\\x01': case '\\x02': case '\\x03': \\\n    case '\\x07': case '\\x0e': case '\\x0f': case '\\x10': \\\n    case '\\x11': case '\\x12': case '\\x13': case '\\x18': \\\n    case '\\x19': case '\\x1c': case '\\x1d': case '\\x1e': \\\n    case '\\x1f': case '\\x26': case '\\x27': case '\\x2d': \\\n    case '\\x2e': case '\\x32': case '\\x37': case '\\x3c': \\\n    case '\\x3d': case '\\x3f'\n#endif\n\n/* Cases for lowercase hex letters, and lowercase letters, all offset by N.  */\n\n#define _C_CTYPE_LOWER_A_THRU_F_N(n) \\\n   case 'a' + (n): case 'b' + (n): case 'c' + (n): case 'd' + (n): \\\n   case 'e' + (n): case 'f' + (n)\n#define _C_CTYPE_LOWER_N(n) \\\n   _C_CTYPE_LOWER_A_THRU_F_N(n): \\\n   case 'g' + (n): case 'h' + (n): case 'i' + (n): case 'j' + (n): \\\n   case 'k' + (n): case 'l' + (n): case 'm' + (n): case 'n' + (n): \\\n   case 'o' + (n): case 'p' + (n): case 'q' + (n): case 'r' + (n): \\\n   case 's' + (n): case 't' + (n): case 'u' + (n): case 'v' + (n): \\\n   case 'w' + (n): case 'x' + (n): case 'y' + (n): case 'z' + (n)\n\n/* Cases for hex letters, digits, lower, punct, and upper.  */\n\n#define _C_CTYPE_A_THRU_F \\\n   _C_CTYPE_LOWER_A_THRU_F_N (0): \\\n   _C_CTYPE_LOWER_A_THRU_F_N ('A' - 'a')\n#define _C_CTYPE_DIGIT                     \\\n   case '0': case '1': case '2': case '3': \\\n   case '4': case '5': case '6': case '7': \\\n   case '8': case '9'\n#define _C_CTYPE_LOWER _C_CTYPE_LOWER_N (0)\n#define _C_CTYPE_PUNCT \\\n   case '!': case '\"': case '#': case '$':  \\\n   case '%': case '&': case '\\'': case '(': \\\n   case ')': case '*': case '+': case ',':  \\\n   case '-': case '.': case '/': case ':':  \\\n   case ';': case '<': case '=': case '>':  \\\n   case '?': case '@': case '[': case '\\\\': \\\n   case ']': case '^': case '_': case '`':  \\\n   case '{': case '|': case '}': case '~'\n#define _C_CTYPE_UPPER _C_CTYPE_LOWER_N ('A' - 'a')\n\n\n/* Function definitions.  */\n\n/* Unlike the functions in <ctype.h>, which require an argument in the range\n   of the 'unsigned char' type, the functions here operate on values that are\n   in the 'unsigned char' range or in the 'char' range.  In other words,\n   when you have a 'char' value, you need to cast it before using it as\n   argument to a <ctype.h> function:\n\n         const char *s = ...;\n         if (isalpha ((unsigned char) *s)) ...\n\n   but you don't need to cast it for the functions defined in this file:\n\n         const char *s = ...;\n         if (c_isalpha (*s)) ...\n */\n\nC_CTYPE_INLINE bool\nc_isalnum (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_DIGIT:\n    _C_CTYPE_LOWER:\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isalpha (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_LOWER:\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\n/* The function isascii is not locale dependent.\n   Its use in EBCDIC is questionable. */\nC_CTYPE_INLINE bool\nc_isascii (int c)\n{\n  switch (c)\n    {\n    case ' ':\n    _C_CTYPE_CNTRL:\n    _C_CTYPE_DIGIT:\n    _C_CTYPE_LOWER:\n    _C_CTYPE_PUNCT:\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isblank (int c)\n{\n  return c == ' ' || c == '\\t';\n}\n\nC_CTYPE_INLINE bool\nc_iscntrl (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_CNTRL:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isdigit (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_DIGIT:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isgraph (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_DIGIT:\n    _C_CTYPE_LOWER:\n    _C_CTYPE_PUNCT:\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_islower (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_LOWER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isprint (int c)\n{\n  switch (c)\n    {\n    case ' ':\n    _C_CTYPE_DIGIT:\n    _C_CTYPE_LOWER:\n    _C_CTYPE_PUNCT:\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_ispunct (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_PUNCT:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isspace (int c)\n{\n  switch (c)\n    {\n    case ' ': case '\\t': case '\\n': case '\\v': case '\\f': case '\\r':\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isupper (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_UPPER:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE bool\nc_isxdigit (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_DIGIT:\n    _C_CTYPE_A_THRU_F:\n      return true;\n    default:\n      return false;\n    }\n}\n\nC_CTYPE_INLINE int\nc_tolower (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_UPPER:\n      return c - 'A' + 'a';\n    default:\n      return c;\n    }\n}\n\nC_CTYPE_INLINE int\nc_toupper (int c)\n{\n  switch (c)\n    {\n    _C_CTYPE_LOWER:\n      return c - 'a' + 'A';\n    default:\n      return c;\n    }\n}\n\n#ifdef __cplusplus\n}\n#endif\n\n_GL_INLINE_HEADER_END\n\n#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.h","start":{"line":23,"col":1,"offset":0},"end":{"line":366,"col":7,"offset":8506}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","start":{"line":351,"col":24,"offset":0},"end":{"line":351,"col":60,"offset":36}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c:351:\n `void (*obstack_alloc_failed_handler)` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","start":{"line":351,"col":24,"offset":0},"end":{"line":351,"col":60,"offset":36}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":29,"col":1,"offset":0},"end":{"line":29,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":47,"col":18,"offset":42}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":69,"col":1,"offset":0},"end":{"line":70,"col":33,"offset":52}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":73,"col":10,"offset":0},"end":{"line":73,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":102,"col":6,"offset":0},"end":{"line":102,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":102,"col":18,"offset":0},"end":{"line":102,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":111,"col":6,"offset":0},"end":{"line":112,"col":6,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":132,"col":1,"offset":0},"end":{"line":132,"col":45,"offset":44}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":155,"col":7,"offset":0},"end":{"line":156,"col":7,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":171,"col":7,"offset":0},"end":{"line":172,"col":7,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":178,"col":19,"offset":0},"end":{"line":181,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":183,"col":1,"offset":0},"end":{"line":183,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":190,"col":19,"offset":0},"end":{"line":193,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":195,"col":1,"offset":0},"end":{"line":195,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":201,"col":19,"offset":0},"end":{"line":204,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":206,"col":1,"offset":0},"end":{"line":206,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":212,"col":19,"offset":0},"end":{"line":215,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":223,"col":19,"offset":0},"end":{"line":226,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":228,"col":1,"offset":0},"end":{"line":228,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":234,"col":19,"offset":0},"end":{"line":237,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":239,"col":1,"offset":0},"end":{"line":239,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":245,"col":19,"offset":0},"end":{"line":248,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":250,"col":1,"offset":0},"end":{"line":250,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":256,"col":19,"offset":0},"end":{"line":259,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":261,"col":1,"offset":0},"end":{"line":261,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":267,"col":19,"offset":0},"end":{"line":270,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":272,"col":1,"offset":0},"end":{"line":272,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":280,"col":19,"offset":0},"end":{"line":283,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":285,"col":1,"offset":0},"end":{"line":285,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":292,"col":19,"offset":0},"end":{"line":295,"col":8,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":297,"col":1,"offset":0},"end":{"line":297,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":303,"col":19,"offset":0},"end":{"line":306,"col":8,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":308,"col":1,"offset":0},"end":{"line":308,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":315,"col":19,"offset":0},"end":{"line":318,"col":8,"offset":52}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":320,"col":1,"offset":0},"end":{"line":320,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":326,"col":19,"offset":0},"end":{"line":329,"col":8,"offset":52}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":331,"col":1,"offset":0},"end":{"line":331,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":340,"col":7,"offset":0},"end":{"line":341,"col":7,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":344,"col":1,"offset":0},"end":{"line":349,"col":8,"offset":119}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":366,"col":19,"offset":0},"end":{"line":366,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":375,"col":19,"offset":0},"end":{"line":375,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":389,"col":5,"offset":0},"end":{"line":427,"col":7,"offset":1417}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":427,"col":23,"offset":0},"end":{"line":427,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":427,"col":28,"offset":0},"end":{"line":435,"col":4,"offset":168}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":435,"col":6,"offset":0},"end":{"line":436,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":443,"col":5,"offset":0},"end":{"line":449,"col":6,"offset":192}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":460,"col":5,"offset":0},"end":{"line":466,"col":6,"offset":206}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":474,"col":5,"offset":0},"end":{"line":474,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":474,"col":22,"offset":0},"end":{"line":474,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":475,"col":45,"offset":0},"end":{"line":475,"col":47,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":476,"col":45,"offset":0},"end":{"line":476,"col":47,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":478,"col":45,"offset":0},"end":{"line":478,"col":47,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":479,"col":45,"offset":0},"end":{"line":479,"col":47,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":484,"col":6,"offset":0},"end":{"line":485,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":492,"col":5,"offset":0},"end":{"line":498,"col":6,"offset":199}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":509,"col":5,"offset":0},"end":{"line":515,"col":6,"offset":219}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":523,"col":1,"offset":0},"end":{"line":527,"col":7,"offset":105}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h:29:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":29,"col":1,"offset":0},"end":{"line":29,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":45,"col":10,"offset":0},"end":{"line":47,"col":18,"offset":42}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":69,"col":1,"offset":0},"end":{"line":70,"col":33,"offset":52}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":73,"col":10,"offset":0},"end":{"line":73,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":102,"col":6,"offset":0},"end":{"line":102,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":102,"col":18,"offset":0},"end":{"line":102,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":111,"col":6,"offset":0},"end":{"line":112,"col":6,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":132,"col":1,"offset":0},"end":{"line":132,"col":45,"offset":44}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":155,"col":7,"offset":0},"end":{"line":156,"col":7,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":171,"col":7,"offset":0},"end":{"line":172,"col":7,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":178,"col":19,"offset":0},"end":{"line":181,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":183,"col":1,"offset":0},"end":{"line":183,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":190,"col":19,"offset":0},"end":{"line":193,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":195,"col":1,"offset":0},"end":{"line":195,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":201,"col":19,"offset":0},"end":{"line":204,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":206,"col":1,"offset":0},"end":{"line":206,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":212,"col":19,"offset":0},"end":{"line":215,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":223,"col":19,"offset":0},"end":{"line":226,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":228,"col":1,"offset":0},"end":{"line":228,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":234,"col":19,"offset":0},"end":{"line":237,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":239,"col":1,"offset":0},"end":{"line":239,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":245,"col":19,"offset":0},"end":{"line":248,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":250,"col":1,"offset":0},"end":{"line":250,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":256,"col":19,"offset":0},"end":{"line":259,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":261,"col":1,"offset":0},"end":{"line":261,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":267,"col":19,"offset":0},"end":{"line":270,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":272,"col":1,"offset":0},"end":{"line":272,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":280,"col":19,"offset":0},"end":{"line":283,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":285,"col":1,"offset":0},"end":{"line":285,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":292,"col":19,"offset":0},"end":{"line":295,"col":8,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":297,"col":1,"offset":0},"end":{"line":297,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":303,"col":19,"offset":0},"end":{"line":306,"col":8,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":308,"col":1,"offset":0},"end":{"line":308,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":315,"col":19,"offset":0},"end":{"line":318,"col":8,"offset":52}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":320,"col":1,"offset":0},"end":{"line":320,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":326,"col":19,"offset":0},"end":{"line":329,"col":8,"offset":52}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":331,"col":1,"offset":0},"end":{"line":331,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":340,"col":7,"offset":0},"end":{"line":341,"col":7,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":344,"col":1,"offset":0},"end":{"line":349,"col":8,"offset":119}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":366,"col":19,"offset":0},"end":{"line":366,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":375,"col":19,"offset":0},"end":{"line":375,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":389,"col":5,"offset":0},"end":{"line":427,"col":7,"offset":1417}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":427,"col":23,"offset":0},"end":{"line":427,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":427,"col":28,"offset":0},"end":{"line":435,"col":4,"offset":168}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":435,"col":6,"offset":0},"end":{"line":436,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":443,"col":5,"offset":0},"end":{"line":449,"col":6,"offset":192}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":460,"col":5,"offset":0},"end":{"line":466,"col":6,"offset":206}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":474,"col":5,"offset":0},"end":{"line":474,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":474,"col":22,"offset":0},"end":{"line":474,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":475,"col":45,"offset":0},"end":{"line":475,"col":47,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":476,"col":45,"offset":0},"end":{"line":476,"col":47,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":478,"col":45,"offset":0},"end":{"line":478,"col":47,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":479,"col":45,"offset":0},"end":{"line":479,"col":47,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":484,"col":6,"offset":0},"end":{"line":485,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":492,"col":5,"offset":0},"end":{"line":498,"col":6,"offset":199}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":509,"col":5,"offset":0},"end":{"line":515,"col":6,"offset":219}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","start":{"line":523,"col":1,"offset":0},"end":{"line":527,"col":7,"offset":105}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":712,"col":53,"offset":0},"end":{"line":712,"col":54,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c:712:\n `)` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","start":{"line":712,"col":53,"offset":0},"end":{"line":712,"col":54,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":27,"col":1,"offset":0},"end":{"line":27,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":32,"col":10,"offset":0},"end":{"line":35,"col":32,"offset":121}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":37,"col":10,"offset":0},"end":{"line":37,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":44,"col":5,"offset":0},"end":{"line":44,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":44,"col":25,"offset":0},"end":{"line":44,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":79,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":58,"col":1,"offset":0},"end":{"line":58,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":63,"col":1,"offset":0},"end":{"line":63,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":74,"offset":73}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":6,"offset":0},"end":{"line":90,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":21,"offset":0},"end":{"line":90,"col":22,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":26,"offset":0},"end":{"line":90,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":42,"offset":0},"end":{"line":90,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":47,"offset":0},"end":{"line":90,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":64,"offset":0},"end":{"line":90,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":19,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":132,"col":6,"offset":0},"end":{"line":137,"col":6,"offset":155}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":146,"col":1,"offset":0},"end":{"line":146,"col":19,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":149,"col":6,"offset":0},"end":{"line":156,"col":6,"offset":284}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":164,"col":5,"offset":0},"end":{"line":166,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":170,"col":1,"offset":0},"end":{"line":176,"col":32,"offset":265}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":183,"col":5,"offset":0},"end":{"line":185,"col":6,"offset":75}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":69,"offset":68}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":189,"col":72,"offset":0},"end":{"line":189,"col":73,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":190,"col":1,"offset":0},"end":{"line":193,"col":69,"offset":183}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":194,"col":72,"offset":0},"end":{"line":194,"col":73,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":196,"col":1,"offset":0},"end":{"line":197,"col":8,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":208,"col":1,"offset":0},"end":{"line":208,"col":24,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":213,"col":6,"offset":0},"end":{"line":219,"col":6,"offset":259}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":227,"col":1,"offset":0},"end":{"line":227,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":239,"col":7,"offset":0},"end":{"line":239,"col":23,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":241,"col":26,"offset":0},"end":{"line":241,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":241,"col":63,"offset":0},"end":{"line":241,"col":64,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":242,"col":46,"offset":0},"end":{"line":242,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":244,"col":1,"offset":0},"end":{"line":245,"col":73,"offset":106}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":258,"col":6,"offset":0},"end":{"line":263,"col":6,"offset":143}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":275,"col":5,"offset":0},"end":{"line":277,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":282,"col":1,"offset":0},"end":{"line":288,"col":57,"offset":248}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":296,"col":5,"offset":0},"end":{"line":298,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":302,"col":1,"offset":0},"end":{"line":310,"col":21,"offset":289}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":316,"col":6,"offset":0},"end":{"line":378,"col":6,"offset":2593}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":386,"col":1,"offset":0},"end":{"line":386,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":396,"col":6,"offset":0},"end":{"line":397,"col":6,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":54,"offset":53}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":400,"col":76,"offset":0},"end":{"line":400,"col":77,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":404,"col":54,"offset":139}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":404,"col":76,"offset":0},"end":{"line":404,"col":77,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":407,"col":8,"offset":63}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":417,"col":1,"offset":0},"end":{"line":417,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":428,"col":7,"offset":0},"end":{"line":428,"col":22,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":429,"col":32,"offset":0},"end":{"line":429,"col":41,"offset":9}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":430,"col":55,"offset":0},"end":{"line":430,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":432,"col":1,"offset":0},"end":{"line":432,"col":76,"offset":75}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":442,"col":1,"offset":0},"end":{"line":442,"col":26,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":445,"col":6,"offset":0},"end":{"line":450,"col":6,"offset":169}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":458,"col":1,"offset":0},"end":{"line":458,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":461,"col":6,"offset":0},"end":{"line":462,"col":6,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":466,"col":1,"offset":0},"end":{"line":468,"col":7,"offset":98}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":469,"col":7,"offset":0},"end":{"line":475,"col":6,"offset":158}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":483,"col":1,"offset":0},"end":{"line":483,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":487,"col":6,"offset":0},"end":{"line":488,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":492,"col":1,"offset":0},"end":{"line":501,"col":32,"offset":381}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":509,"col":5,"offset":0},"end":{"line":511,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":46,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":515,"col":68,"offset":0},"end":{"line":515,"col":69,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":516,"col":1,"offset":0},"end":{"line":519,"col":8,"offset":110}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":523,"col":1,"offset":0},"end":{"line":523,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":527,"col":6,"offset":0},"end":{"line":528,"col":6,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":532,"col":1,"offset":0},"end":{"line":764,"col":26,"offset":7772}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":765,"col":67,"offset":0},"end":{"line":765,"col":68,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":768,"col":5,"offset":0},"end":{"line":770,"col":6,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":773,"col":1,"offset":0},"end":{"line":773,"col":71,"offset":70}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":774,"col":58,"offset":0},"end":{"line":774,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":775,"col":1,"offset":0},"end":{"line":778,"col":71,"offset":173}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":779,"col":58,"offset":0},"end":{"line":779,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":781,"col":1,"offset":0},"end":{"line":782,"col":8,"offset":80}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":792,"col":1,"offset":0},"end":{"line":792,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":795,"col":6,"offset":0},"end":{"line":800,"col":6,"offset":193}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":808,"col":1,"offset":0},"end":{"line":808,"col":27,"offset":26}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":810,"col":6,"offset":0},"end":{"line":816,"col":6,"offset":233}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":824,"col":1,"offset":0},"end":{"line":824,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":827,"col":6,"offset":0},"end":{"line":828,"col":6,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":832,"col":1,"offset":0},"end":{"line":833,"col":69,"offset":99}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":834,"col":40,"offset":0},"end":{"line":834,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":835,"col":1,"offset":0},"end":{"line":992,"col":7,"offset":5334}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h:19:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":27,"col":1,"offset":0},"end":{"line":27,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":32,"col":10,"offset":0},"end":{"line":35,"col":32,"offset":121}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":37,"col":10,"offset":0},"end":{"line":37,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":44,"col":5,"offset":0},"end":{"line":44,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":44,"col":25,"offset":0},"end":{"line":44,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":49,"col":1,"offset":0},"end":{"line":49,"col":79,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":58,"col":1,"offset":0},"end":{"line":58,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":63,"col":1,"offset":0},"end":{"line":63,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":74,"offset":73}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":6,"offset":0},"end":{"line":90,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":21,"offset":0},"end":{"line":90,"col":22,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":26,"offset":0},"end":{"line":90,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":42,"offset":0},"end":{"line":90,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":47,"offset":0},"end":{"line":90,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":90,"col":64,"offset":0},"end":{"line":90,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":19,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":132,"col":6,"offset":0},"end":{"line":137,"col":6,"offset":155}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":146,"col":1,"offset":0},"end":{"line":146,"col":19,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":149,"col":6,"offset":0},"end":{"line":156,"col":6,"offset":284}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":164,"col":5,"offset":0},"end":{"line":166,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":170,"col":1,"offset":0},"end":{"line":176,"col":32,"offset":265}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":183,"col":5,"offset":0},"end":{"line":185,"col":6,"offset":75}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":69,"offset":68}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":189,"col":72,"offset":0},"end":{"line":189,"col":73,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":190,"col":1,"offset":0},"end":{"line":193,"col":69,"offset":183}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":194,"col":72,"offset":0},"end":{"line":194,"col":73,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":196,"col":1,"offset":0},"end":{"line":197,"col":8,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":208,"col":1,"offset":0},"end":{"line":208,"col":24,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":213,"col":6,"offset":0},"end":{"line":219,"col":6,"offset":259}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":227,"col":1,"offset":0},"end":{"line":227,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":239,"col":7,"offset":0},"end":{"line":239,"col":23,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":241,"col":26,"offset":0},"end":{"line":241,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":241,"col":63,"offset":0},"end":{"line":241,"col":64,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":242,"col":46,"offset":0},"end":{"line":242,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":244,"col":1,"offset":0},"end":{"line":245,"col":73,"offset":106}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":258,"col":6,"offset":0},"end":{"line":263,"col":6,"offset":143}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":275,"col":5,"offset":0},"end":{"line":277,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":282,"col":1,"offset":0},"end":{"line":288,"col":57,"offset":248}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":296,"col":5,"offset":0},"end":{"line":298,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":302,"col":1,"offset":0},"end":{"line":310,"col":21,"offset":289}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":316,"col":6,"offset":0},"end":{"line":378,"col":6,"offset":2593}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":386,"col":1,"offset":0},"end":{"line":386,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":396,"col":6,"offset":0},"end":{"line":397,"col":6,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":400,"col":1,"offset":0},"end":{"line":400,"col":54,"offset":53}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":400,"col":76,"offset":0},"end":{"line":400,"col":77,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":401,"col":1,"offset":0},"end":{"line":404,"col":54,"offset":139}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":404,"col":76,"offset":0},"end":{"line":404,"col":77,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":406,"col":1,"offset":0},"end":{"line":407,"col":8,"offset":63}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":417,"col":1,"offset":0},"end":{"line":417,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":428,"col":7,"offset":0},"end":{"line":428,"col":22,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":429,"col":32,"offset":0},"end":{"line":429,"col":41,"offset":9}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":430,"col":55,"offset":0},"end":{"line":430,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":432,"col":1,"offset":0},"end":{"line":432,"col":76,"offset":75}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":442,"col":1,"offset":0},"end":{"line":442,"col":26,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":445,"col":6,"offset":0},"end":{"line":450,"col":6,"offset":169}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":458,"col":1,"offset":0},"end":{"line":458,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":461,"col":6,"offset":0},"end":{"line":462,"col":6,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":466,"col":1,"offset":0},"end":{"line":468,"col":7,"offset":98}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":469,"col":7,"offset":0},"end":{"line":475,"col":6,"offset":158}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":483,"col":1,"offset":0},"end":{"line":483,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":487,"col":6,"offset":0},"end":{"line":488,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":492,"col":1,"offset":0},"end":{"line":501,"col":32,"offset":381}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":509,"col":5,"offset":0},"end":{"line":511,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":515,"col":46,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":515,"col":68,"offset":0},"end":{"line":515,"col":69,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":516,"col":1,"offset":0},"end":{"line":519,"col":8,"offset":110}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":523,"col":1,"offset":0},"end":{"line":523,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":527,"col":6,"offset":0},"end":{"line":528,"col":6,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":532,"col":1,"offset":0},"end":{"line":764,"col":26,"offset":7772}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":765,"col":67,"offset":0},"end":{"line":765,"col":68,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":768,"col":5,"offset":0},"end":{"line":770,"col":6,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":773,"col":1,"offset":0},"end":{"line":773,"col":71,"offset":70}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":774,"col":58,"offset":0},"end":{"line":774,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":775,"col":1,"offset":0},"end":{"line":778,"col":71,"offset":173}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":779,"col":58,"offset":0},"end":{"line":779,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":781,"col":1,"offset":0},"end":{"line":782,"col":8,"offset":80}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":792,"col":1,"offset":0},"end":{"line":792,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":795,"col":6,"offset":0},"end":{"line":800,"col":6,"offset":193}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":808,"col":1,"offset":0},"end":{"line":808,"col":27,"offset":26}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":810,"col":6,"offset":0},"end":{"line":816,"col":6,"offset":233}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":824,"col":1,"offset":0},"end":{"line":824,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":827,"col":6,"offset":0},"end":{"line":828,"col":6,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":832,"col":1,"offset":0},"end":{"line":833,"col":69,"offset":99}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":834,"col":40,"offset":0},"end":{"line":834,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","start":{"line":835,"col":1,"offset":0},"end":{"line":992,"col":7,"offset":5334}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":444,"col":1,"offset":0},"end":{"line":444,"col":9,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":463,"col":1,"offset":0},"end":{"line":463,"col":11,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":757,"col":11,"offset":0},"end":{"line":757,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":758,"col":35,"offset":0},"end":{"line":758,"col":37,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":763,"col":11,"offset":0},"end":{"line":763,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":765,"col":11,"offset":0},"end":{"line":765,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":769,"col":10,"offset":0},"end":{"line":769,"col":13,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c:444:\n `is_prime` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":444,"col":1,"offset":0},"end":{"line":444,"col":9,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":463,"col":1,"offset":0},"end":{"line":463,"col":11,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":757,"col":11,"offset":0},"end":{"line":757,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":758,"col":35,"offset":0},"end":{"line":758,"col":37,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":763,"col":11,"offset":0},"end":{"line":763,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":765,"col":11,"offset":0},"end":{"line":765,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","start":{"line":769,"col":10,"offset":0},"end":{"line":769,"col":13,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":588,"col":15,"offset":0},"end":{"line":588,"col":39,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":589,"col":8,"offset":0},"end":{"line":589,"col":32,"offset":24}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c:588:\n `\"File %s grew, %\"PRIuMAX` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":588,"col":15,"offset":0},"end":{"line":588,"col":39,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c","start":{"line":589,"col":8,"offset":0},"end":{"line":589,"col":32,"offset":24}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":37,"col":5,"offset":0},"end":{"line":38,"col":9,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":5,"offset":0},"end":{"line":44,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":24,"offset":0},"end":{"line":44,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":29,"offset":0},"end":{"line":44,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":54,"offset":0},"end":{"line":44,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":51,"col":5,"offset":0},"end":{"line":51,"col":29,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":63,"col":11,"offset":0},"end":{"line":63,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":63,"col":25,"offset":0},"end":{"line":63,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":65,"col":11,"offset":0},"end":{"line":65,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":65,"col":28,"offset":0},"end":{"line":65,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":73,"col":6,"offset":0},"end":{"line":73,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":73,"col":22,"offset":0},"end":{"line":73,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":7,"offset":0},"end":{"line":95,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":20,"offset":0},"end":{"line":95,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":25,"offset":0},"end":{"line":95,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":39,"offset":0},"end":{"line":95,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":44,"offset":0},"end":{"line":95,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":57,"offset":0},"end":{"line":95,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":8,"offset":0},"end":{"line":100,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":21,"offset":0},"end":{"line":100,"col":22,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":26,"offset":0},"end":{"line":100,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":37,"offset":0},"end":{"line":100,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":42,"offset":0},"end":{"line":100,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":54,"offset":0},"end":{"line":100,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":59,"offset":0},"end":{"line":100,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":73,"offset":0},"end":{"line":100,"col":74,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":11,"offset":0},"end":{"line":101,"col":12,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":24,"offset":0},"end":{"line":101,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":29,"offset":0},"end":{"line":101,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":41,"offset":0},"end":{"line":101,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":46,"offset":0},"end":{"line":101,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":60,"offset":0},"end":{"line":101,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":65,"offset":0},"end":{"line":101,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":78,"offset":0},"end":{"line":101,"col":79,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":110,"col":7,"offset":0},"end":{"line":110,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":110,"col":28,"offset":0},"end":{"line":110,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":111,"col":10,"offset":0},"end":{"line":111,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":111,"col":29,"offset":0},"end":{"line":111,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":47,"offset":46}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":6,"offset":0},"end":{"line":123,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":18,"offset":0},"end":{"line":123,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":23,"offset":0},"end":{"line":123,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":36,"offset":0},"end":{"line":123,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":25,"offset":0},"end":{"line":124,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":30,"offset":0},"end":{"line":124,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":48,"offset":0},"end":{"line":124,"col":49,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":27,"offset":0},"end":{"line":125,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":41,"offset":0},"end":{"line":125,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":132,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":132,"col":28,"offset":0},"end":{"line":132,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":5,"offset":0},"end":{"line":154,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":24,"offset":0},"end":{"line":154,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":29,"offset":0},"end":{"line":155,"col":30,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":216,"col":6,"offset":0},"end":{"line":216,"col":30,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":258,"col":5,"offset":0},"end":{"line":261,"col":6,"offset":119}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":270,"col":1,"offset":0},"end":{"line":270,"col":19,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":276,"col":6,"offset":0},"end":{"line":277,"col":6,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":281,"col":1,"offset":0},"end":{"line":281,"col":71,"offset":70}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":282,"col":52,"offset":0},"end":{"line":282,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":283,"col":1,"offset":0},"end":{"line":283,"col":72,"offset":71}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":285,"col":8,"offset":0},"end":{"line":285,"col":20,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":38,"offset":0},"end":{"line":286,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":56,"offset":0},"end":{"line":286,"col":59,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":67,"offset":0},"end":{"line":286,"col":70,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":287,"col":52,"offset":0},"end":{"line":287,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":289,"col":1,"offset":0},"end":{"line":289,"col":72,"offset":71}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":302,"col":5,"offset":0},"end":{"line":305,"col":6,"offset":117}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":309,"col":1,"offset":0},"end":{"line":313,"col":8,"offset":137}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":326,"col":5,"offset":0},"end":{"line":328,"col":6,"offset":37}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":331,"col":1,"offset":0},"end":{"line":335,"col":8,"offset":140}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":346,"col":1,"offset":0},"end":{"line":346,"col":18,"offset":17}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":352,"col":6,"offset":0},"end":{"line":353,"col":6,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":356,"col":1,"offset":0},"end":{"line":365,"col":32,"offset":315}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":374,"col":1,"offset":0},"end":{"line":374,"col":18,"offset":17}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":383,"col":6,"offset":0},"end":{"line":384,"col":6,"offset":17}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":387,"col":1,"offset":0},"end":{"line":394,"col":32,"offset":331}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":26,"offset":46}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":418,"col":1,"offset":0},"end":{"line":1586,"col":22,"offset":39358}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h:17:\n `@GUARD_PREFIX@_UNISTD_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":31,"col":1,"offset":0},"end":{"line":31,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":37,"col":5,"offset":0},"end":{"line":38,"col":9,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":39,"col":1,"offset":0},"end":{"line":39,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":5,"offset":0},"end":{"line":44,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":24,"offset":0},"end":{"line":44,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":29,"offset":0},"end":{"line":44,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":44,"col":54,"offset":0},"end":{"line":44,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":51,"col":5,"offset":0},"end":{"line":51,"col":29,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":63,"col":11,"offset":0},"end":{"line":63,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":63,"col":25,"offset":0},"end":{"line":63,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":65,"col":11,"offset":0},"end":{"line":65,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":65,"col":28,"offset":0},"end":{"line":65,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":73,"col":6,"offset":0},"end":{"line":73,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":73,"col":22,"offset":0},"end":{"line":73,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":7,"offset":0},"end":{"line":95,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":20,"offset":0},"end":{"line":95,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":25,"offset":0},"end":{"line":95,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":39,"offset":0},"end":{"line":95,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":44,"offset":0},"end":{"line":95,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":95,"col":57,"offset":0},"end":{"line":95,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":8,"offset":0},"end":{"line":100,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":21,"offset":0},"end":{"line":100,"col":22,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":26,"offset":0},"end":{"line":100,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":37,"offset":0},"end":{"line":100,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":42,"offset":0},"end":{"line":100,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":54,"offset":0},"end":{"line":100,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":59,"offset":0},"end":{"line":100,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":100,"col":73,"offset":0},"end":{"line":100,"col":74,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":11,"offset":0},"end":{"line":101,"col":12,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":24,"offset":0},"end":{"line":101,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":29,"offset":0},"end":{"line":101,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":41,"offset":0},"end":{"line":101,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":46,"offset":0},"end":{"line":101,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":60,"offset":0},"end":{"line":101,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":65,"offset":0},"end":{"line":101,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":101,"col":78,"offset":0},"end":{"line":101,"col":79,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":110,"col":7,"offset":0},"end":{"line":110,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":110,"col":28,"offset":0},"end":{"line":110,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":111,"col":10,"offset":0},"end":{"line":111,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":111,"col":29,"offset":0},"end":{"line":111,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":118,"col":1,"offset":0},"end":{"line":118,"col":47,"offset":46}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":6,"offset":0},"end":{"line":123,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":18,"offset":0},"end":{"line":123,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":23,"offset":0},"end":{"line":123,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":123,"col":36,"offset":0},"end":{"line":123,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":25,"offset":0},"end":{"line":124,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":30,"offset":0},"end":{"line":124,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":124,"col":48,"offset":0},"end":{"line":124,"col":49,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":22,"offset":0},"end":{"line":125,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":27,"offset":0},"end":{"line":125,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":125,"col":41,"offset":0},"end":{"line":125,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":132,"col":5,"offset":0},"end":{"line":132,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":132,"col":28,"offset":0},"end":{"line":132,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":5,"offset":0},"end":{"line":154,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":24,"offset":0},"end":{"line":154,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":154,"col":29,"offset":0},"end":{"line":155,"col":30,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":216,"col":6,"offset":0},"end":{"line":216,"col":30,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":258,"col":5,"offset":0},"end":{"line":261,"col":6,"offset":119}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":270,"col":1,"offset":0},"end":{"line":270,"col":19,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":276,"col":6,"offset":0},"end":{"line":277,"col":6,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":281,"col":1,"offset":0},"end":{"line":281,"col":71,"offset":70}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":282,"col":52,"offset":0},"end":{"line":282,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":283,"col":1,"offset":0},"end":{"line":283,"col":72,"offset":71}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":285,"col":8,"offset":0},"end":{"line":285,"col":20,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":38,"offset":0},"end":{"line":286,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":56,"offset":0},"end":{"line":286,"col":59,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":286,"col":67,"offset":0},"end":{"line":286,"col":70,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":287,"col":52,"offset":0},"end":{"line":287,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":289,"col":1,"offset":0},"end":{"line":289,"col":72,"offset":71}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":302,"col":5,"offset":0},"end":{"line":305,"col":6,"offset":117}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":309,"col":1,"offset":0},"end":{"line":313,"col":8,"offset":137}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":326,"col":5,"offset":0},"end":{"line":328,"col":6,"offset":37}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":331,"col":1,"offset":0},"end":{"line":335,"col":8,"offset":140}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":346,"col":1,"offset":0},"end":{"line":346,"col":18,"offset":17}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":352,"col":6,"offset":0},"end":{"line":353,"col":6,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":356,"col":1,"offset":0},"end":{"line":365,"col":32,"offset":315}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":374,"col":1,"offset":0},"end":{"line":374,"col":18,"offset":17}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":383,"col":6,"offset":0},"end":{"line":384,"col":6,"offset":17}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":387,"col":1,"offset":0},"end":{"line":394,"col":32,"offset":331}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":403,"col":1,"offset":0},"end":{"line":404,"col":26,"offset":46}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","start":{"line":418,"col":1,"offset":0},"end":{"line":1586,"col":22,"offset":39358}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-pv.c:1:\n `/* Default definition for ARGP_PROGRAM_VERSION.\n   Copyright (C) 1996-2017 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n   Written by Miles Bader <miles@gnu.ai.mit.edu>.\n\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n/* If set by the user program to a non-zero value, then a default option\n   --version is added (unless the ARGP_NO_HELP flag is used), which will\n   print this string followed by a newline and exit (unless the\n   ARGP_NO_EXIT flag is used).  Overridden by ARGP_PROGRAM_VERSION_HOOK.  */\nconst char *argp_program_version\n/* This variable should be zero-initialized.  On most systems, putting it into\n   BSS is sufficient.  Not so on Mac OS X 10.3 and 10.4, see\n   <http://lists.gnu.org/archive/html/bug-gnulib/2009-01/msg00329.html>\n   <http://lists.gnu.org/archive/html/bug-gnulib/2009-08/msg00096.html>.  */\n#if defined __ELF__\n  /* On ELF systems, variables in BSS behave well.  */\n#else\n  = (const char *) 0\n#endif\n  ;\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-pv.c"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-ba.c:1:\n `/* Default definition for ARGP_PROGRAM_BUG_ADDRESS.\n   Copyright (C) 1996-2017 Free Software Foundation, Inc.\n   This file is part of the GNU C Library.\n   Written by Miles Bader <miles@gnu.ai.mit.edu>.\n\n   This program is free software: you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3 of the License, or\n   (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */\n\n/* If set by the user program, it should point to string that is the\n   bug-reporting address for the program.  It will be printed by argp_help if\n   the ARGP_HELP_BUG_ADDR flag is set (as it is by various standard help\n   messages), embedded in a sentence that says something like \"Report bugs to\n   ADDR.\"  */\nconst char *argp_program_bug_address\n/* This variable should be zero-initialized.  On most systems, putting it into\n   BSS is sufficient.  Not so on Mac OS X 10.3 and 10.4, see\n   <http://lists.gnu.org/archive/html/bug-gnulib/2009-01/msg00329.html>\n   <http://lists.gnu.org/archive/html/bug-gnulib/2009-08/msg00096.html>.  */\n#if defined __ELF__\n  /* On ELF systems, variables in BSS behave well.  */\n#else\n  = (const char *) 0\n#endif\n  ;\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-ba.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","start":{"line":35,"col":3,"offset":0},"end":{"line":35,"col":10,"offset":7}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","start":{"line":37,"col":3,"offset":0},"end":{"line":37,"col":4,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c:35:\n `= { 0 }` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","start":{"line":35,"col":3,"offset":0},"end":{"line":35,"col":10,"offset":7}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","start":{"line":37,"col":3,"offset":0},"end":{"line":37,"col":4,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":40,"col":21,"offset":0},"end":{"line":40,"col":36,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":77,"col":21,"offset":0},"end":{"line":77,"col":43,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":87,"col":21,"offset":0},"end":{"line":87,"col":43,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":101,"col":21,"offset":0},"end":{"line":101,"col":27,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h:40:\n `struct timespec` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":40,"col":21,"offset":0},"end":{"line":40,"col":36,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":77,"col":21,"offset":0},"end":{"line":77,"col":43,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":87,"col":21,"offset":0},"end":{"line":87,"col":43,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","start":{"line":101,"col":21,"offset":0},"end":{"line":101,"col":27,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":101,"col":3,"offset":0},"end":{"line":108,"col":9,"offset":341}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c:101:\n `if (fp->rp == fp->buf\n      && fp->wp == fp->buf)\n#elif FUNC_FFLUSH_STDIN < 0 && 200809 <= _POSIX_VERSION\n  /* Cross-compiling to some other system advertising conformance to\n     POSIX.1-2008 or later.  Assume fseeko and fflush work as advertised.\n     If this assumption is incorrect, please report the bug to\n     bug-gnulib.  */\n  if (0)` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","start":{"line":101,"col":3,"offset":0},"end":{"line":108,"col":9,"offset":341}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":106,"col":1,"offset":0},"end":{"line":106,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":108,"col":1,"offset":0},"end":{"line":109,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":111,"col":1,"offset":0},"end":{"line":112,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":114,"col":1,"offset":0},"end":{"line":115,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":117,"col":1,"offset":0},"end":{"line":117,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":121,"col":1,"offset":0},"end":{"line":122,"col":7,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":142,"col":1,"offset":0},"end":{"line":142,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":144,"col":1,"offset":0},"end":{"line":145,"col":13,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":147,"col":1,"offset":0},"end":{"line":148,"col":15,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":150,"col":1,"offset":0},"end":{"line":151,"col":15,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":153,"col":1,"offset":0},"end":{"line":153,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":157,"col":1,"offset":0},"end":{"line":158,"col":14,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":165,"col":40,"offset":0},"end":{"line":165,"col":43,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c:106:\n `#ifdef` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":106,"col":1,"offset":0},"end":{"line":106,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":108,"col":1,"offset":0},"end":{"line":109,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":111,"col":1,"offset":0},"end":{"line":112,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":114,"col":1,"offset":0},"end":{"line":115,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":117,"col":1,"offset":0},"end":{"line":117,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":119,"col":1,"offset":0},"end":{"line":119,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":121,"col":1,"offset":0},"end":{"line":122,"col":7,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":124,"col":1,"offset":0},"end":{"line":124,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":142,"col":1,"offset":0},"end":{"line":142,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":144,"col":1,"offset":0},"end":{"line":145,"col":13,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":147,"col":1,"offset":0},"end":{"line":148,"col":15,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":150,"col":1,"offset":0},"end":{"line":151,"col":15,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":153,"col":1,"offset":0},"end":{"line":153,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":157,"col":1,"offset":0},"end":{"line":158,"col":14,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","start":{"line":165,"col":40,"offset":0},"end":{"line":165,"col":43,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":186,"col":1,"offset":0},"end":{"line":186,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":254,"col":1,"offset":0},"end":{"line":254,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":11,"offset":10}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c:186:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":186,"col":1,"offset":0},"end":{"line":186,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":254,"col":1,"offset":0},"end":{"line":254,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","start":{"line":342,"col":1,"offset":0},"end":{"line":342,"col":11,"offset":10}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time.in.h:1:\n `/* A more-standard <time.h>.\n\n   Copyright (C) 2007-2017 Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n#if __GNUC__ >= 3\n@PRAGMA_SYSTEM_HEADER@\n#endif\n@PRAGMA_COLUMNS@\n\n/* Don't get in the way of glibc when it includes time.h merely to\n   declare a few standard symbols, rather than to declare all the\n   symbols.  (However, skip this for MinGW as it treats __need_time_t\n   incompatibly.)  Also, Solaris 8 <time.h> eventually includes itself\n   recursively; if that is happening, just include the system <time.h>\n   without adding our own declarations.  */\n#if (((defined __need_time_t || defined __need_clock_t \\\n       || defined __need_timespec)                     \\\n      && !defined __MINGW32__)                         \\\n     || defined _@GUARD_PREFIX@_TIME_H)\n\n# @INCLUDE_NEXT@ @NEXT_TIME_H@\n\n#else\n\n# define _@GUARD_PREFIX@_TIME_H\n\n# @INCLUDE_NEXT@ @NEXT_TIME_H@\n\n/* NetBSD 5.0 mis-defines NULL.  */\n# include <stddef.h>\n\n/* The definitions of _GL_FUNCDECL_RPL etc. are copied here.  */\n\n/* The definition of _GL_ARG_NONNULL is copied here.  */\n\n/* The definition of _GL_WARN_ON_USE is copied here.  */\n\n/* Some systems don't define struct timespec (e.g., AIX 4.1, Ultrix 4.3).\n   Or they define it with the wrong member names or define it in <sys/time.h>\n   (e.g., FreeBSD circa 1997).  Stock Mingw prior to 3.0 does not define it,\n   but the pthreads-win32 library defines it in <pthread.h>.  */\n# if ! @TIME_H_DEFINES_STRUCT_TIMESPEC@\n#  if @SYS_TIME_H_DEFINES_STRUCT_TIMESPEC@\n#   include <sys/time.h>\n#  elif @PTHREAD_H_DEFINES_STRUCT_TIMESPEC@\n#   include <pthread.h>\n#  elif @UNISTD_H_DEFINES_STRUCT_TIMESPEC@\n#   include <unistd.h>\n#  else\n\n#   ifdef __cplusplus\nextern \"C\" {\n#   endif\n\n#   if !GNULIB_defined_struct_timespec\n#    undef timespec\n#    define timespec rpl_timespec\nstruct timespec\n{\n  time_t tv_sec;\n  long int tv_nsec;\n};\n#    define GNULIB_defined_struct_timespec 1\n#   endif\n\n#   ifdef __cplusplus\n}\n#   endif\n\n#  endif\n# endif\n\n# if !GNULIB_defined_struct_time_t_must_be_integral\n/* Per http://austingroupbugs.net/view.php?id=327, POSIX requires\n   time_t to be an integer type, even though C99 permits floating\n   point.  We don't know of any implementation that uses floating\n   point, and it is much easier to write code that doesn't have to\n   worry about that corner case, so we force the issue.  */\nstruct __time_t_must_be_integral {\n  unsigned int __floating_time_t_unsupported : (time_t) 1;\n};\n#  define GNULIB_defined_struct_time_t_must_be_integral 1\n# endif\n\n/* Sleep for at least RQTP seconds unless interrupted,  If interrupted,\n   return -1 and store the remaining time into RMTP.  See\n   <http://www.opengroup.org/susv3xsh/nanosleep.html>.  */\n# if @GNULIB_NANOSLEEP@\n#  if @REPLACE_NANOSLEEP@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    define nanosleep rpl_nanosleep\n#   endif\n_GL_FUNCDECL_RPL (nanosleep, int,\n                  (struct timespec const *__rqtp, struct timespec *__rmtp)\n                  _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (nanosleep, int,\n                  (struct timespec const *__rqtp, struct timespec *__rmtp));\n#  else\n#   if ! @HAVE_NANOSLEEP@\n_GL_FUNCDECL_SYS (nanosleep, int,\n                  (struct timespec const *__rqtp, struct timespec *__rmtp)\n                  _GL_ARG_NONNULL ((1)));\n#   endif\n_GL_CXXALIAS_SYS (nanosleep, int,\n                  (struct timespec const *__rqtp, struct timespec *__rmtp));\n#  endif\n_GL_CXXALIASWARN (nanosleep);\n# endif\n\n/* Return the 'time_t' representation of TP and normalize TP.  */\n# if @GNULIB_MKTIME@\n#  if @REPLACE_MKTIME@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    define mktime rpl_mktime\n#   endif\n_GL_FUNCDECL_RPL (mktime, time_t, (struct tm *__tp) _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (mktime, time_t, (struct tm *__tp));\n#  else\n_GL_CXXALIAS_SYS (mktime, time_t, (struct tm *__tp));\n#  endif\n_GL_CXXALIASWARN (mktime);\n# endif\n\n/* Convert TIMER to RESULT, assuming local time and UTC respectively.  See\n   <http://www.opengroup.org/susv3xsh/localtime_r.html> and\n   <http://www.opengroup.org/susv3xsh/gmtime_r.html>.  */\n# if @GNULIB_TIME_R@\n#  if @REPLACE_LOCALTIME_R@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    undef localtime_r\n#    define localtime_r rpl_localtime_r\n#   endif\n_GL_FUNCDECL_RPL (localtime_r, struct tm *, (time_t const *restrict __timer,\n                                             struct tm *restrict __result)\n                                            _GL_ARG_NONNULL ((1, 2)));\n_GL_CXXALIAS_RPL (localtime_r, struct tm *, (time_t const *restrict __timer,\n                                             struct tm *restrict __result));\n#  else\n#   if ! @HAVE_DECL_LOCALTIME_R@\n_GL_FUNCDECL_SYS (localtime_r, struct tm *, (time_t const *restrict __timer,\n                                             struct tm *restrict __result)\n                                            _GL_ARG_NONNULL ((1, 2)));\n#   endif\n_GL_CXXALIAS_SYS (localtime_r, struct tm *, (time_t const *restrict __timer,\n                                             struct tm *restrict __result));\n#  endif\n#  if @HAVE_DECL_LOCALTIME_R@\n_GL_CXXALIASWARN (localtime_r);\n#  endif\n#  if @REPLACE_LOCALTIME_R@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    undef gmtime_r\n#    define gmtime_r rpl_gmtime_r\n#   endif\n_GL_FUNCDECL_RPL (gmtime_r, struct tm *, (time_t const *restrict __timer,\n                                          struct tm *restrict __result)\n                                         _GL_ARG_NONNULL ((1, 2)));\n_GL_CXXALIAS_RPL (gmtime_r, struct tm *, (time_t const *restrict __timer,\n                                          struct tm *restrict __result));\n#  else\n#   if ! @HAVE_DECL_LOCALTIME_R@\n_GL_FUNCDECL_SYS (gmtime_r, struct tm *, (time_t const *restrict __timer,\n                                          struct tm *restrict __result)\n                                         _GL_ARG_NONNULL ((1, 2)));\n#   endif\n_GL_CXXALIAS_SYS (gmtime_r, struct tm *, (time_t const *restrict __timer,\n                                          struct tm *restrict __result));\n#  endif\n#  if @HAVE_DECL_LOCALTIME_R@\n_GL_CXXALIASWARN (gmtime_r);\n#  endif\n# endif\n\n/* Convert TIMER to RESULT, assuming local time and UTC respectively.  See\n   <http://www.opengroup.org/susv3xsh/localtime.html> and\n   <http://www.opengroup.org/susv3xsh/gmtime.html>.  */\n# if @GNULIB_GETTIMEOFDAY@\n#  if @REPLACE_LOCALTIME@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    undef localtime\n#    define localtime rpl_localtime\n#   endif\n_GL_FUNCDECL_RPL (localtime, struct tm *, (time_t const *__timer)\n\t\t                          _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (localtime, struct tm *, (time_t const *__timer));\n#  else\n_GL_CXXALIAS_SYS (localtime, struct tm *, (time_t const *__timer));\n#  endif\n_GL_CXXALIASWARN (localtime);\n# endif\n\n# if @GNULIB_GETTIMEOFDAY@\n#  if @REPLACE_GMTIME@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    undef gmtime\n#    define gmtime rpl_gmtime\n#   endif\n_GL_FUNCDECL_RPL (gmtime, struct tm *, (time_t const *__timer)\n                                       _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (gmtime, struct tm *, (time_t const *__timer));\n#  else\n_GL_CXXALIAS_SYS (gmtime, struct tm *, (time_t const *__timer));\n#  endif\n_GL_CXXALIASWARN (gmtime);\n# endif\n\n/* Parse BUF as a time stamp, assuming FORMAT specifies its layout, and store\n   the resulting broken-down time into TM.  See\n   <http://www.opengroup.org/susv3xsh/strptime.html>.  */\n# if @GNULIB_STRPTIME@\n#  if ! @HAVE_STRPTIME@\n_GL_FUNCDECL_SYS (strptime, char *, (char const *restrict __buf,\n                                     char const *restrict __format,\n                                     struct tm *restrict __tm)\n                                    _GL_ARG_NONNULL ((1, 2, 3)));\n#  endif\n_GL_CXXALIAS_SYS (strptime, char *, (char const *restrict __buf,\n                                     char const *restrict __format,\n                                     struct tm *restrict __tm));\n_GL_CXXALIASWARN (strptime);\n# endif\n\n# if defined _GNU_SOURCE && @GNULIB_TIME_RZ@ && ! @HAVE_TIMEZONE_T@\ntypedef struct tm_zone *timezone_t;\n_GL_FUNCDECL_SYS (tzalloc, timezone_t, (char const *__name));\n_GL_CXXALIAS_SYS (tzalloc, timezone_t, (char const *__name));\n_GL_FUNCDECL_SYS (tzfree, void, (timezone_t __tz));\n_GL_CXXALIAS_SYS (tzfree, void, (timezone_t __tz));\n_GL_FUNCDECL_SYS (localtime_rz, struct tm *,\n                  (timezone_t __tz, time_t const *restrict __timer,\n                   struct tm *restrict __result) _GL_ARG_NONNULL ((2, 3)));\n_GL_CXXALIAS_SYS (localtime_rz, struct tm *,\n                  (timezone_t __tz, time_t const *restrict __timer,\n                   struct tm *restrict __result));\n_GL_FUNCDECL_SYS (mktime_z, time_t,\n                  (timezone_t __tz, struct tm *restrict __result)\n                  _GL_ARG_NONNULL ((2)));\n_GL_CXXALIAS_SYS (mktime_z, time_t,\n                  (timezone_t __tz, struct tm *restrict __result));\n# endif\n\n/* Convert TM to a time_t value, assuming UTC.  */\n# if @GNULIB_TIMEGM@\n#  if @REPLACE_TIMEGM@\n#   if !(defined __cplusplus && defined GNULIB_NAMESPACE)\n#    undef timegm\n#    define timegm rpl_timegm\n#   endif\n_GL_FUNCDECL_RPL (timegm, time_t, (struct tm *__tm) _GL_ARG_NONNULL ((1)));\n_GL_CXXALIAS_RPL (timegm, time_t, (struct tm *__tm));\n#  else\n#   if ! @HAVE_TIMEGM@\n_GL_FUNCDECL_SYS (timegm, time_t, (struct tm *__tm) _GL_ARG_NONNULL ((1)));\n#   endif\n_GL_CXXALIAS_SYS (timegm, time_t, (struct tm *__tm));\n#  endif\n_GL_CXXALIASWARN (timegm);\n# endif\n\n/* Encourage applications to avoid unsafe functions that can overrun\n   buffers when given outlandish struct tm values.  Portable\n   applications should use strftime (or even sprintf) instead.  */\n# if defined GNULIB_POSIXCHECK\n#  undef asctime\n_GL_WARN_ON_USE (asctime, \"asctime can overrun buffers in some cases - \"\n                 \"better use strftime (or even sprintf) instead\");\n# endif\n# if defined GNULIB_POSIXCHECK\n#  undef asctime_r\n_GL_WARN_ON_USE (asctime, \"asctime_r can overrun buffers in some cases - \"\n                 \"better use strftime (or even sprintf) instead\");\n# endif\n# if defined GNULIB_POSIXCHECK\n#  undef ctime\n_GL_WARN_ON_USE (asctime, \"ctime can overrun buffers in some cases - \"\n                 \"better use strftime (or even sprintf) instead\");\n# endif\n# if defined GNULIB_POSIXCHECK\n#  undef ctime_r\n_GL_WARN_ON_USE (asctime, \"ctime_r can overrun buffers in some cases - \"\n                 \"better use strftime (or even sprintf) instead\");\n# endif\n\n#endif\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time.in.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":213,"col":12,"offset":0},"end":{"line":213,"col":18,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":226,"col":12,"offset":0},"end":{"line":226,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":239,"col":12,"offset":0},"end":{"line":239,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":249,"col":12,"offset":0},"end":{"line":249,"col":18,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":261,"col":12,"offset":0},"end":{"line":261,"col":18,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":273,"col":12,"offset":0},"end":{"line":273,"col":18,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":285,"col":12,"offset":0},"end":{"line":285,"col":18,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h:213:\n `size_t` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":213,"col":12,"offset":0},"end":{"line":213,"col":18,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":226,"col":12,"offset":0},"end":{"line":226,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":239,"col":12,"offset":0},"end":{"line":239,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":249,"col":12,"offset":0},"end":{"line":249,"col":18,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":261,"col":12,"offset":0},"end":{"line":261,"col":18,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":273,"col":12,"offset":0},"end":{"line":273,"col":18,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","start":{"line":285,"col":12,"offset":0},"end":{"line":285,"col":18,"offset":6}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/rmt/rmt.c:1:\n `/* This file is part of GNU Paxutils.\n   Copyright (C) 2009 Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program.  If not, see <http://www.gnu.org/licenses/>. */\n\n#include \"system.h\"\n#include \"system-ioctl.h\"\n#include <configmake.h>\n#include <argp.h>\n#include <argp-version-etc.h>\n#include <getopt.h>\n#include <full-write.h>\n#include <configmake.h>\n#include <inttostr.h>\n#include <error.h>\n#include <progname.h>\n#include <c-ctype.h>\n#include <safe-read.h>\n\n#ifndef EXIT_FAILURE\n# define EXIT_FAILURE 1\n#endif\n#ifndef EXIT_SUCCESS\n# define EXIT_SUCCESS 0\n#endif\n\n\f\nint dbglev;\nFILE *dbgout;\n\n#define DEBUG(lev,msg)\t\t\t\t\t\t\\\n  do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, \"%s\", msg); } while (0)\n#define DEBUG1(lev, fmt, x)\t\t\t\t\t\t\\\n  do { if (dbgout && (lev) <= dbglev) fprintf (dbgout, fmt, x); } while (0)\n#define DEBUG2(lev, fmt, x1, x2)\t\t\t\t\t\\\n  do\t\t\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\t\\\n      if (dbgout && (lev) <= dbglev)\t\t\t\t\t\\\n\tfprintf (dbgout, fmt, x1, x2);\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\t\\\n  while (0)\n\n#define VDEBUG(lev, pfx, fmt, ap)\t\t\\\n  do\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\\\n      if (dbgout && (lev) <= dbglev)\t\t\\\n\t{\t\t\t\t\t\\\n\t  fprintf (dbgout, \"%s\", pfx);\t\t\\\n\t  vfprintf (dbgout, fmt, ap);\t\t\\\n\t}\t\t\t\t\t\\\n    }\t\t\t\t\t\t\\\n  while (0)\n\n\n\f\nstatic void\ntrimnl (char *str)\n{\n  if (str)\n    {\n      size_t len = strlen (str);\n      if (len > 1 && str[len-1] == '\\n')\n\tstr[len-1] = 0;\n    }\n}\n\n\n\f\nchar *input_buf_ptr = NULL;\nsize_t input_buf_size = 0;\n\nstatic char *\nrmt_read (void)\n{\n  ssize_t rc = getline (&input_buf_ptr, &input_buf_size, stdin);\n  if (rc > 0)\n    {\n      DEBUG1 (10, \"C: %s\", input_buf_ptr);\n      trimnl (input_buf_ptr);\n      return input_buf_ptr;\n    }\n  DEBUG (10, \"reached EOF\");\n  return NULL;\n}\n\nstatic void\nrmt_write (const char *fmt, ...)\n{\n  va_list ap;\n  va_start (ap, fmt);\n  vfprintf (stdout, fmt, ap);\n  fflush (stdout);\n  VDEBUG (10, \"S: \", fmt, ap);\n}\n\nstatic void\nrmt_reply (uintmax_t code)\n{\n  char buf[UINTMAX_STRSIZE_BOUND];\n  rmt_write (\"A%s\\n\", umaxtostr (code, buf));\n}\n\nstatic void\nrmt_error_message (int code, const char *msg)\n{\n  DEBUG1 (10, \"S: E%d\\n\", code);\n  DEBUG1 (10, \"S: %s\\n\", msg);\n  DEBUG1 (1, \"error: %s\\n\", msg);\n  fprintf (stdout, \"E%d\\n%s\\n\", code, msg);\n  fflush (stdout);\n}\n\nstatic void\nrmt_error (int code)\n{\n  rmt_error_message (code, strerror (code));\n}\n\n\f\nchar *record_buffer_ptr;\nsize_t record_buffer_size;\n\nstatic void\nprepare_record_buffer (size_t size)\n{\n  if (size > record_buffer_size)\n    {\n      record_buffer_ptr = xrealloc (record_buffer_ptr, size);\n      record_buffer_size = size;\n    }\n}\n\n\n\f\nint device_fd = -1;\n\nstruct rmt_kw\n{\n  char const *name;\n  size_t len;\n  int value;\n};\n\n#define RMT_KW(s,v) { #s, sizeof (#s) - 1, v }\n\nstatic int\nxlat_kw (const char *s, const char *pfx,\n\t struct rmt_kw const *kw, int *valp, const char **endp)\n{\n  size_t slen = strlen (s);\n\n  if (pfx)\n    {\n      size_t pfxlen = strlen (pfx);\n      if (slen > pfxlen && memcmp (s, pfx, pfxlen) == 0)\n\t{\n\t  s += pfxlen;\n\t  slen -= pfxlen;\n\t}\n    }\n\n  for (; kw->name; kw++)\n    {\n      if (slen >= kw->len\n\t  && memcmp (kw->name, s, kw->len) == 0\n\t  && !(s[kw->len] && c_isalnum (s[kw->len])))\n\t{\n\t  *valp = kw->value;\n\t  *endp = s + kw->len;\n\t  return 0;\n\t}\n    }\n  return 1;\n}\n\nstatic const char *\nskip_ws (const char *s)\n{\n  while (*s && c_isblank (*s))\n    s++;\n  return s;\n}\n\nstatic struct rmt_kw const open_flag_kw[] =\n  {\n#ifdef O_APPEND\n    RMT_KW(APPEND, O_APPEND),\n#endif\n    RMT_KW(CREAT, O_CREAT),\n#ifdef O_DSYNC\n    RMT_KW(DSYNC, O_DSYNC),\n#endif\n    RMT_KW(EXCL, O_EXCL),\n#ifdef O_LARGEFILE\n    RMT_KW(LARGEFILE, O_LARGEFILE),\n#endif\n#ifdef O_NOCTTY\n    RMT_KW(NOCTTY, O_NOCTTY),\n#endif\n#if O_NONBLOCK\n    RMT_KW(NONBLOCK, O_NONBLOCK),\n#endif\n    RMT_KW(RDONLY, O_RDONLY),\n    RMT_KW(RDWR, O_RDWR),\n#ifdef O_RSYNC\n    RMT_KW(RSYNC, O_RSYNC),\n#endif\n#ifdef O_SYNC\n    RMT_KW(SYNC, O_SYNC),\n#endif\n    RMT_KW(TRUNC, O_TRUNC),\n    RMT_KW(WRONLY, O_WRONLY),\n    { NULL }\n  };\n\nstatic int\ndecode_open_flag (const char *mstr, int *pmode)\n{\n  int numeric_mode = 0;\n  int mode = 0;\n  const char *p;\n\n  mstr = skip_ws (mstr);\n  if (c_isdigit (*mstr))\n    {\n      numeric_mode = strtol (mstr, (char**) &p, 10);\n      mstr = skip_ws (p);\n    }\n\n  if (*mstr)\n    {\n      while (mstr)\n\t{\n\t  int v;\n\t  \n\t  mstr = skip_ws (mstr);\n\t  if (*mstr == 0)\n\t    break;\n\t  else if (c_isdigit (*mstr))\n\t    v = strtol (mstr, (char**) &p, 10);\n\t  else if (xlat_kw (mstr, \"O_\", open_flag_kw, &v, &p))\n\t    {\n\t      rmt_error_message (EINVAL, \"invalid open mode\");\n\t      return 1;\n\t    }\n\n\t  mode |= v;\n\t  \n\t  if (*p && c_isblank (*p))\n\t    p = skip_ws (p);\n\t  if (*p == 0)\n\t    break;\n\t  else if (*p == '|')\n\t    {\n\t      /* FIXMEL\n\t\t if (p[1] == 0)\n\t\t rmt_error_message (EINVAL, \"invalid open mode\");\n\t      */\n\t      mstr = p + 1;\n\t    }\n\t  else\n\t    {\n\t      rmt_error_message (EINVAL, \"invalid open mode\");\n\t      return 1;\n\t    }\n\t}\n    }\n  else\n    mode = numeric_mode;\n  *pmode = mode;\n  return 0;\n}\n\n\f\n/* Syntax\n   ------\n   O<device>\\n<flags>\\n\n\n   Function\n   --------\n   Opens the <device> with given <flags>. If a device had already been opened,\n   it is closed before opening the new one.\n\n   Arguments\n   ---------\n   <device> - name of the device to open.\n   <flags>  - flags for open(2): a decimal number, or any valid O_* constant\n   from fcntl.h (the initial O_ may be omitted), or a bitwise or (using '|')\n   of any number of these, e.g.:\n\n      576\n      64|512\n      CREAT|TRUNC\n\n   In addition, a compined form is also allowed, i.e. a decimal mode followed\n   by its symbolic representation.  In this case the symbolic representation\n   is given preference.\n      \n   Reply\n   -----\n   A0\\n on success, E0\\n<msg>\\n on error.\n\n   Extensions\n   ----------\n   BSD version allows only decimal number as <flags>\n*/\n\nstatic void\nopen_device (char *str)\n{\n  char *device = xstrdup (str);\n  char *flag_str;\n  int flag;\n\n  flag_str = rmt_read ();\n  if (!flag_str)\n    {\n      DEBUG (1, \"unexpected EOF\");\n      exit (EXIT_FAILURE);\n    }\n  if (decode_open_flag (flag_str, &flag) == 0)\n    {\n      if (device_fd >= 0)\n\tclose (device_fd);\n\n      device_fd = open (device, flag, MODE_RW);\n      if (device_fd < 0)\n\trmt_error (errno);\n      else\n\trmt_reply (0);\n    }\n  free (device);\n}\n\f\n/* Syntax\n   ------\n   C[<device>]\\n\n\n   Function\n   --------\n   Close the currently open device.\n\n   Arguments\n   ---------\n   Any arguments are silently ignored.\n\n   Reply\n   -----\n   A0\\n on success, E0\\n<msg>\\n on error.\n*/\nstatic void\nclose_device (void)\n{\n  if (close (device_fd) < 0)\n    rmt_error (errno);\n  else\n    {\n      device_fd = -1;\n      rmt_reply (0);\n    }\n}\n\f\n/* Syntax\n   ------\n   L<whence>\\n<offset>\\n\n\n   Function\n   --------\n   Perform an lseek(2) on the currently open device with the specified\n   parameters.\n\n   Arguments\n   ---------\n   <whence>  -  Where to measure offset from. Valid values are:\n                0, SET, SEEK_SET to seek from the file beginning,\n\t\t1, CUR, SEEK_CUR to seek from the current location in file,\n\t\t2, END, SEEK_END to seek from the file end.\n   Reply\n   -----\n   A<offset>\\n on success. The <offset> is the new offset in file.\n   E0\\n<msg>\\n on error.\n\n   Extensions\n   ----------\n   BSD version allows only 0,1,2 as <whence>.\n*/\n\nstatic struct rmt_kw const seek_whence_kw[] =\n  {\n    RMT_KW(SET, SEEK_SET),\n    RMT_KW(CUR, SEEK_CUR),\n    RMT_KW(END, SEEK_END),\n    { NULL }\n  };\n\nstatic void\nlseek_device (const char *str)\n{\n  char *p;\n  int whence;\n  off_t off;\n  uintmax_t n;\n\n  if (str[0] && str[1] == 0)\n    {\n      switch (str[0])\n\t{\n\tcase '0':\n\t  whence = SEEK_SET;\n\t  break;\n\n\tcase '1':\n\t  whence = SEEK_CUR;\n\t  break;\n\n\tcase '2':\n\t  whence = SEEK_END;\n\t  break;\n\n\tdefault:\n\t  rmt_error_message (EINVAL, N_(\"Seek direction out of range\"));\n\t  return;\n\t}\n    }\n  else if (xlat_kw (str, \"SEEK_\", seek_whence_kw, &whence, (const char **) &p))\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid seek direction\"));\n      return;\n    }\n\n  str = rmt_read ();\n  n = off = strtoumax (str, &p, 10);\n  if (*p)\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid seek offset\"));\n      return;\n    }\n\n  if (n != off || errno == ERANGE)\n    {\n      rmt_error_message (EINVAL, N_(\"Seek offset out of range\"));\n      return;\n    }\n\n  off = lseek (device_fd, off, whence);\n  if (off < 0)\n    rmt_error (errno);\n  else\n    rmt_reply (off);\n}\n\f\n/* Syntax\n   ------\n   R<count>\\n\n\n   Function\n   --------\n   Read <count> bytes of data from the current device.\n\n   Arguments\n   ---------\n   <count>  -  number of bytes to read.\n\n   Reply\n   -----\n   On success: A<rdcount>\\n, followed by <rdcount> bytes of data read from\n   the device.\n   On error: E0\\n<msg>\\n\n*/\n\nstatic void\nread_device (const char *str)\n{\n  char *p;\n  size_t size;\n  uintmax_t n;\n  size_t status;\n\n  n = size = strtoumax (str, &p, 10);\n  if (*p)\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid byte count\"));\n      return;\n    }\n\n  if (n != size || errno == ERANGE)\n    {\n      rmt_error_message (EINVAL, N_(\"Byte count out of range\"));\n      return;\n    }\n\n  prepare_record_buffer (size);\n  status = safe_read (device_fd, record_buffer_ptr, size);\n  if (status == SAFE_READ_ERROR)\n    rmt_error (errno);\n  else\n    {\n      rmt_reply (status);\n      full_write (STDOUT_FILENO, record_buffer_ptr, status);\n    }\n}\n\f\n/* Syntax\n   ------\n   W<count>\\n followed by <count> bytes of input data.\n\n   Function\n   --------\n   Write data onto the current device.\n\n   Arguments\n   ---------\n   <count>  - number of bytes.\n\n   Reply\n   -----\n   On success: A<wrcount>\\n, where <wrcount> is number of bytes actually\n   written.\n   On error: E0\\n<msg>\\n\n*/\n\nstatic void\nwrite_device (const char *str)\n{\n  char *p;\n  size_t size;\n  uintmax_t n;\n  size_t status;\n\n  n = size = strtoumax (str, &p, 10);\n  if (*p)\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid byte count\"));\n      return;\n    }\n\n  if (n != size || errno == ERANGE)\n    {\n      rmt_error_message (EINVAL, N_(\"Byte count out of range\"));\n      return;\n    }\n\n  prepare_record_buffer (size);\n  if (fread (record_buffer_ptr, size, 1, stdin) != 1)\n    {\n      if (feof (stdin))\n\trmt_error_message (EIO, N_(\"Premature eof\"));\n      else\n\trmt_error (errno);\n      return;\n    }\n\n  status = full_write (device_fd, record_buffer_ptr, size);\n  if (status != size)\n    rmt_error (errno);\n  else\n    rmt_reply (status);\n}\n\f\n/* Syntax\n   ------\n   I<opcode>\\n<count>\\n\n\n   Function\n   --------\n   Perform a MTIOCOP ioctl(2) command using the specified paramedters.\n\n   Arguments\n   ---------\n   <opcode>   -  MTIOCOP operation code.\n   <count>    -  mt_count.\n\n   Reply\n   -----\n   On success: A0\\n\n   On error: E0\\n<msg>\\n\n*/\n\nstatic void\niocop_device (const char *str)\n{\n  char *p;\n  long opcode;\n  off_t count;\n  uintmax_t n;\n\n  opcode = strtol (str, &p, 10);\n  if (*p)\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid operation code\"));\n      return;\n    }\n  str = rmt_read ();\n  n = count = strtoumax (str, &p, 10);\n  if (*p)\n    {\n      rmt_error_message (EINVAL, N_(\"Invalid byte count\"));\n      return;\n    }\n\n  if (n != count || errno == ERANGE)\n    {\n      rmt_error_message (EINVAL, N_(\"Byte count out of range\"));\n      return;\n    }\n\n#ifdef MTIOCTOP\n  {\n    struct mtop mtop;\n\n    mtop.mt_count = count;\n    if (mtop.mt_count != count)\n      {\n\trmt_error_message (EINVAL, N_(\"Byte count out of range\"));\n\treturn;\n      }\n\n    mtop.mt_op = opcode;\n    if (ioctl (device_fd, MTIOCTOP, (char *) &mtop) < 0)\n      rmt_error (errno);\n    else\n      rmt_reply (0);\n  }\n#else\n  rmt_error_message (ENOSYS, N_(\"Operation not supported\"));\n#endif\n}\n\f\n/* Syntax\n   ------\n   S\\n\n\n   Function\n   --------\n   Return the status of the open device, as obtained with a MTIOCGET\n   ioctl call.\n\n   Arguments\n   ---------\n   None\n\n   Reply\n   -----\n   On success: A<count>\\n followed by <count> bytes of data.\n   On error: E0\\n<msg>\\n\n*/\n\nstatic void\nstatus_device (const char *str)\n{\n  if (*str)\n    {\n      rmt_error_message (EINVAL, N_(\"Unexpected arguments\"));\n      return;\n    }\n#ifdef MTIOCGET\n  {\n    struct mtget mtget;\n\n    if (ioctl (device_fd, MTIOCGET, (char *) &mtget) < 0)\n      rmt_error (errno);\n    else\n      {\n\trmt_reply (sizeof (mtget));\n\tfull_write (STDOUT_FILENO, (char *) &mtget, sizeof (mtget));\n      }\n  }\n#else\n  rmt_error_message (ENOSYS, N_(\"Operation not supported\"));\n#endif\n}\n\n\n\f\nconst char *argp_program_version = \"rmt (\" PACKAGE_NAME \") \" VERSION;\nconst char *argp_program_bug_address = \"<\" PACKAGE_BUGREPORT \">\";\n\nstatic char const doc[] = N_(\"Manipulate a tape drive, accepting commands from a remote process\");\n\nenum {\n  DEBUG_FILE_OPTION = 256\n};\n\nstatic struct argp_option options[] = {\n  { \"debug\", 'd', N_(\"NUMBER\"), 0,\n    N_(\"set debug level\"), 0 },\n  { \"debug-file\", DEBUG_FILE_OPTION, N_(\"FILE\"), 0,\n    N_(\"set debug output file name\"), 0 },\n  { NULL }\n};\n\nstatic error_t\nparse_opt (int key, char *arg, struct argp_state *state)\n{\n  switch (key)\n    {\n    case 'd':\n      dbglev = strtol (arg, NULL, 0);\n      break;\n\n    case DEBUG_FILE_OPTION:\n      dbgout = fopen (arg, \"w\");\n      if (!dbgout)\n\terror (EXIT_FAILURE, errno, _(\"cannot open %s\"), arg);\n      break;\n\n    case ARGP_KEY_FINI:\n      if (dbglev)\n\t{\n\t  if (!dbgout)\n\t    dbgout = stderr;\n\t}\n      else if (dbgout)\n\tdbglev = 1;\n      break;\n\n    default:\n      return ARGP_ERR_UNKNOWN;\n    }\n  return 0;\n}\n\nstatic struct argp argp = {\n  options,\n  parse_opt,\n  NULL,\n  doc,\n  NULL,\n  NULL,\n  NULL\n};\n\nstatic const char *rmt_authors[] = {\n  \"Sergey Poznyakoff\",\n  NULL\n};\n\n\f\nvoid\nxalloc_die (void)\n{\n  rmt_error (ENOMEM);\n  exit (EXIT_FAILURE);\n}\n\n\f\nint\nmain (int argc, char **argv)\n{\n  char *buf;\n  int idx;\n  int stop = 0;\n\n  set_program_name (argv[0]);\n  argp_version_setup (\"rmt\", rmt_authors);\n\n  if (isatty (STDOUT_FILENO))\n    {\n      setlocale (LC_ALL, \"\");\n      bindtextdomain (PACKAGE, LOCALEDIR);\n      textdomain (PACKAGE);\n    }\n\n  if (argp_parse (&argp, argc, argv, ARGP_IN_ORDER, &idx, NULL))\n    exit (EXIT_FAILURE);\n  if (idx != argc)\n    {\n      if (idx != argc - 1)\n\terror (EXIT_FAILURE, 0, _(\"too many arguments\"));\n      dbgout = fopen (argv[idx], \"w\");\n      if (!dbgout)\n\terror (EXIT_FAILURE, errno, _(\"cannot open %s\"), argv[idx]);\n      dbglev = 1;\n    }\n\n  while (!stop && (buf = rmt_read ()) != NULL)\n    {\n      switch (buf[0])\n\t{\n\tcase 'C':\n\t  close_device ();\n\t  stop = 1;\n\t  break;\n\n\tcase 'I':\n\t  iocop_device (buf + 1);\n\t  break;\n\n\tcase 'L':\n\t  lseek_device (buf + 1);\n\t  break;\n\n\tcase 'O':\n\t  open_device (buf + 1);\n\t  break;\n\n\tcase 'R':\n\t  read_device (buf + 1);\n\t  break;\n\n\tcase 'S':\n\t  status_device (buf + 1);\n\t  break;\n\n\tcase 'W':\n\t  write_device (buf + 1);\n\t  break;\n\n\tdefault:\n\t  DEBUG1 (1, \"garbage input %s\\n\", buf);\n\t  rmt_error_message (EINVAL, N_(\"Garbage command\"));\n\t  return EXIT_FAILURE;\t/* exit status used to be 3 */\n\t}\n    }\n  if (device_fd >= 0)\n    close_device ();\n  free (input_buf_ptr);\n  free (record_buffer_ptr);\n  return EXIT_SUCCESS;\n}\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/rmt/rmt.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":711,"col":53,"offset":0},"end":{"line":711,"col":54,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c:711:\n `)` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","start":{"line":711,"col":53,"offset":0},"end":{"line":711,"col":54,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c:390:\n `STATIC` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","start":{"line":390,"col":1,"offset":0},"end":{"line":390,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":132,"col":3,"offset":0},"end":{"line":132,"col":4,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":23,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":472,"col":19,"offset":0},"end":{"line":472,"col":23,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":532,"col":19,"offset":0},"end":{"line":532,"col":23,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":632,"col":1,"offset":0},"end":{"line":632,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c:80:\n `STATIC` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":80,"col":1,"offset":0},"end":{"line":80,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":132,"col":3,"offset":0},"end":{"line":132,"col":4,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":23,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":472,"col":19,"offset":0},"end":{"line":472,"col":23,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":532,"col":19,"offset":0},"end":{"line":532,"col":23,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","start":{"line":632,"col":1,"offset":0},"end":{"line":632,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.h","start":{"line":230,"col":31,"offset":0},"end":{"line":230,"col":67,"offset":36}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.h:230:\n `void (*obstack_alloc_failed_handler)` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.h","start":{"line":230,"col":31,"offset":0},"end":{"line":230,"col":67,"offset":36}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":36,"offset":35}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":79,"col":23,"offset":0},"end":{"line":80,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":85,"col":23,"offset":0},"end":{"line":86,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":91,"col":23,"offset":0},"end":{"line":92,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":97,"col":23,"offset":0},"end":{"line":98,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":103,"col":23,"offset":0},"end":{"line":104,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":109,"col":23,"offset":0},"end":{"line":110,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":115,"col":24,"offset":0},"end":{"line":116,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":121,"col":24,"offset":0},"end":{"line":122,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":127,"col":24,"offset":0},"end":{"line":128,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":133,"col":24,"offset":0},"end":{"line":134,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":139,"col":24,"offset":0},"end":{"line":140,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":145,"col":24,"offset":0},"end":{"line":146,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":151,"col":24,"offset":0},"end":{"line":152,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":157,"col":24,"offset":0},"end":{"line":158,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":163,"col":24,"offset":0},"end":{"line":164,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":169,"col":24,"offset":0},"end":{"line":170,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":175,"col":24,"offset":0},"end":{"line":176,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":181,"col":24,"offset":0},"end":{"line":182,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":188,"col":7,"offset":0},"end":{"line":188,"col":50,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":188,"col":71,"offset":0},"end":{"line":188,"col":72,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":192,"col":8,"offset":0},"end":{"line":192,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":192,"col":27,"offset":0},"end":{"line":192,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":195,"col":25,"offset":0},"end":{"line":196,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":199,"col":25,"offset":0},"end":{"line":200,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":205,"col":7,"offset":0},"end":{"line":205,"col":50,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":205,"col":73,"offset":0},"end":{"line":205,"col":74,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":209,"col":8,"offset":0},"end":{"line":209,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":209,"col":36,"offset":0},"end":{"line":209,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":212,"col":25,"offset":0},"end":{"line":213,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":216,"col":25,"offset":0},"end":{"line":217,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":220,"col":25,"offset":0},"end":{"line":221,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":224,"col":25,"offset":0},"end":{"line":225,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":230,"col":28,"offset":0},"end":{"line":231,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":234,"col":28,"offset":0},"end":{"line":235,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":238,"col":28,"offset":0},"end":{"line":239,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":242,"col":28,"offset":0},"end":{"line":243,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":246,"col":28,"offset":0},"end":{"line":247,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":250,"col":28,"offset":0},"end":{"line":251,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":254,"col":29,"offset":0},"end":{"line":255,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":258,"col":29,"offset":0},"end":{"line":259,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":262,"col":29,"offset":0},"end":{"line":263,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":266,"col":29,"offset":0},"end":{"line":267,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":270,"col":29,"offset":0},"end":{"line":271,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":274,"col":29,"offset":0},"end":{"line":275,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":278,"col":29,"offset":0},"end":{"line":279,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":282,"col":29,"offset":0},"end":{"line":283,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":286,"col":29,"offset":0},"end":{"line":287,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":290,"col":29,"offset":0},"end":{"line":291,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":294,"col":29,"offset":0},"end":{"line":295,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":298,"col":29,"offset":0},"end":{"line":299,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":303,"col":30,"offset":0},"end":{"line":304,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":307,"col":30,"offset":0},"end":{"line":308,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":313,"col":30,"offset":0},"end":{"line":314,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":317,"col":30,"offset":0},"end":{"line":318,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":321,"col":30,"offset":0},"end":{"line":322,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":325,"col":30,"offset":0},"end":{"line":326,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":331,"col":27,"offset":0},"end":{"line":332,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":339,"col":27,"offset":0},"end":{"line":340,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":347,"col":27,"offset":0},"end":{"line":348,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":355,"col":27,"offset":0},"end":{"line":356,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":363,"col":27,"offset":0},"end":{"line":364,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":371,"col":27,"offset":0},"end":{"line":372,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":379,"col":28,"offset":0},"end":{"line":380,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":387,"col":28,"offset":0},"end":{"line":388,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":395,"col":28,"offset":0},"end":{"line":396,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":403,"col":28,"offset":0},"end":{"line":404,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":411,"col":28,"offset":0},"end":{"line":412,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":419,"col":28,"offset":0},"end":{"line":420,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":427,"col":28,"offset":0},"end":{"line":428,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":435,"col":28,"offset":0},"end":{"line":436,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":443,"col":28,"offset":0},"end":{"line":444,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":451,"col":28,"offset":0},"end":{"line":452,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":459,"col":28,"offset":0},"end":{"line":460,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":467,"col":28,"offset":0},"end":{"line":468,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":476,"col":29,"offset":0},"end":{"line":477,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":480,"col":29,"offset":0},"end":{"line":481,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":486,"col":29,"offset":0},"end":{"line":487,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":490,"col":29,"offset":0},"end":{"line":491,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":494,"col":29,"offset":0},"end":{"line":495,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":498,"col":29,"offset":0},"end":{"line":499,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":504,"col":25,"offset":0},"end":{"line":505,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":506,"col":1,"offset":0},"end":{"line":506,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":512,"col":25,"offset":0},"end":{"line":513,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":514,"col":1,"offset":0},"end":{"line":514,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":520,"col":25,"offset":0},"end":{"line":521,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":522,"col":1,"offset":0},"end":{"line":522,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":528,"col":25,"offset":0},"end":{"line":529,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":530,"col":1,"offset":0},"end":{"line":530,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":536,"col":25,"offset":0},"end":{"line":537,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":538,"col":1,"offset":0},"end":{"line":538,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":544,"col":25,"offset":0},"end":{"line":545,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":546,"col":1,"offset":0},"end":{"line":546,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":553,"col":25,"offset":0},"end":{"line":554,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":559,"col":25,"offset":0},"end":{"line":560,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":565,"col":25,"offset":0},"end":{"line":566,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":571,"col":25,"offset":0},"end":{"line":572,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":577,"col":25,"offset":0},"end":{"line":578,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":583,"col":25,"offset":0},"end":{"line":584,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":590,"col":23,"offset":0},"end":{"line":591,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":596,"col":23,"offset":0},"end":{"line":597,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":602,"col":23,"offset":0},"end":{"line":603,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":608,"col":23,"offset":0},"end":{"line":609,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":614,"col":23,"offset":0},"end":{"line":615,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":620,"col":24,"offset":0},"end":{"line":621,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":626,"col":24,"offset":0},"end":{"line":627,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":632,"col":24,"offset":0},"end":{"line":633,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":638,"col":24,"offset":0},"end":{"line":639,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":644,"col":24,"offset":0},"end":{"line":645,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":650,"col":24,"offset":0},"end":{"line":651,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":656,"col":24,"offset":0},"end":{"line":657,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":662,"col":24,"offset":0},"end":{"line":663,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":668,"col":24,"offset":0},"end":{"line":669,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":674,"col":24,"offset":0},"end":{"line":675,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":681,"col":7,"offset":0},"end":{"line":681,"col":50,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":681,"col":71,"offset":0},"end":{"line":681,"col":72,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":685,"col":8,"offset":0},"end":{"line":685,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":685,"col":27,"offset":0},"end":{"line":685,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":688,"col":25,"offset":0},"end":{"line":689,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":692,"col":25,"offset":0},"end":{"line":693,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":698,"col":7,"offset":0},"end":{"line":698,"col":50,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":698,"col":73,"offset":0},"end":{"line":698,"col":74,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":702,"col":8,"offset":0},"end":{"line":702,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":702,"col":36,"offset":0},"end":{"line":702,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":705,"col":25,"offset":0},"end":{"line":706,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":709,"col":25,"offset":0},"end":{"line":710,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":713,"col":25,"offset":0},"end":{"line":714,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":719,"col":28,"offset":0},"end":{"line":720,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":723,"col":28,"offset":0},"end":{"line":724,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":727,"col":28,"offset":0},"end":{"line":728,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":731,"col":28,"offset":0},"end":{"line":732,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":735,"col":28,"offset":0},"end":{"line":736,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":739,"col":29,"offset":0},"end":{"line":740,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":743,"col":29,"offset":0},"end":{"line":744,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":747,"col":29,"offset":0},"end":{"line":748,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":751,"col":29,"offset":0},"end":{"line":752,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":755,"col":29,"offset":0},"end":{"line":756,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":759,"col":29,"offset":0},"end":{"line":760,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":763,"col":29,"offset":0},"end":{"line":764,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":767,"col":29,"offset":0},"end":{"line":768,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":771,"col":29,"offset":0},"end":{"line":772,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":775,"col":29,"offset":0},"end":{"line":776,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":780,"col":30,"offset":0},"end":{"line":781,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":784,"col":30,"offset":0},"end":{"line":785,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":790,"col":30,"offset":0},"end":{"line":791,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":794,"col":30,"offset":0},"end":{"line":795,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":798,"col":30,"offset":0},"end":{"line":799,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":804,"col":27,"offset":0},"end":{"line":805,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":816,"col":27,"offset":0},"end":{"line":817,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":828,"col":27,"offset":0},"end":{"line":829,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":840,"col":27,"offset":0},"end":{"line":841,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":852,"col":27,"offset":0},"end":{"line":853,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":864,"col":28,"offset":0},"end":{"line":865,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":874,"col":28,"offset":0},"end":{"line":875,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":884,"col":28,"offset":0},"end":{"line":885,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":894,"col":28,"offset":0},"end":{"line":895,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":904,"col":28,"offset":0},"end":{"line":905,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":914,"col":28,"offset":0},"end":{"line":915,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":922,"col":28,"offset":0},"end":{"line":923,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":930,"col":28,"offset":0},"end":{"line":931,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":938,"col":28,"offset":0},"end":{"line":939,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":946,"col":28,"offset":0},"end":{"line":947,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":955,"col":29,"offset":0},"end":{"line":956,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":959,"col":29,"offset":0},"end":{"line":960,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":965,"col":29,"offset":0},"end":{"line":966,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":969,"col":29,"offset":0},"end":{"line":970,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":973,"col":29,"offset":0},"end":{"line":974,"col":9,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":979,"col":25,"offset":0},"end":{"line":980,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":981,"col":1,"offset":0},"end":{"line":981,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":987,"col":25,"offset":0},"end":{"line":988,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":989,"col":1,"offset":0},"end":{"line":989,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":995,"col":25,"offset":0},"end":{"line":996,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":997,"col":1,"offset":0},"end":{"line":997,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1003,"col":25,"offset":0},"end":{"line":1004,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1005,"col":1,"offset":0},"end":{"line":1005,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1011,"col":25,"offset":0},"end":{"line":1012,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1013,"col":1,"offset":0},"end":{"line":1013,"col":33,"offset":32}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1020,"col":25,"offset":0},"end":{"line":1021,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1026,"col":25,"offset":0},"end":{"line":1027,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1032,"col":25,"offset":0},"end":{"line":1033,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1038,"col":25,"offset":0},"end":{"line":1039,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1044,"col":25,"offset":0},"end":{"line":1045,"col":8,"offset":27}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1057,"col":1,"offset":0},"end":{"line":1058,"col":26,"offset":46}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1069,"col":5,"offset":0},"end":{"line":1070,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1070,"col":7,"offset":0},"end":{"line":1071,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1085,"col":5,"offset":0},"end":{"line":1087,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1092,"col":20,"offset":0},"end":{"line":1092,"col":42,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1093,"col":41,"offset":0},"end":{"line":1093,"col":63,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1095,"col":1,"offset":0},"end":{"line":1095,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1098,"col":20,"offset":0},"end":{"line":1098,"col":42,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1100,"col":41,"offset":0},"end":{"line":1100,"col":63,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1111,"col":5,"offset":0},"end":{"line":1113,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1118,"col":20,"offset":0},"end":{"line":1118,"col":42,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1119,"col":42,"offset":0},"end":{"line":1119,"col":64,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1121,"col":1,"offset":0},"end":{"line":1121,"col":29,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1124,"col":20,"offset":0},"end":{"line":1124,"col":42,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1126,"col":42,"offset":0},"end":{"line":1126,"col":64,"offset":22}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h:24:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":24,"col":1,"offset":0},"end":{"line":24,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":33,"col":1,"offset":0},"end":{"line":33,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":40,"col":1,"offset":0},"end":{"line":40,"col":36,"offset":35}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":79,"col":23,"offset":0},"end":{"line":80,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":85,"col":23,"offset":0},"end":{"line":86,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":91,"col":23,"offset":0},"end":{"line":92,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":97,"col":23,"offset":0},"end":{"line":98,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":103,"col":23,"offset":0},"end":{"line":104,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":109,"col":23,"offset":0},"end":{"line":110,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":115,"col":24,"offset":0},"end":{"line":116,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":121,"col":24,"offset":0},"end":{"line":122,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":127,"col":24,"offset":0},"end":{"line":128,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":133,"col":24,"offset":0},"end":{"line":134,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":139,"col":24,"offset":0},"end":{"line":140,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":145,"col":24,"offset":0},"end":{"line":146,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":151,"col":24,"offset":0},"end":{"line":152,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":157,"col":24,"offset":0},"end":{"line":158,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":163,"col":24,"offset":0},"end":{"line":164,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":169,"col":24,"offset":0},"end":{"line":170,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":175,"col":24,"offset":0},"end":{"line":176,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":181,"col":24,"offset":0},"end":{"line":182,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":188,"col":7,"offset":0},"end":{"line":188,"col":50,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":188,"col":71,"offset":0},"end":{"line":188,"col":72,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":192,"col":8,"offset":0},"end":{"line":192,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":192,"col":27,"offset":0},"end":{"line":192,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":195,"col":25,"offset":0},"end":{"line":196,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":199,"col":25,"offset":0},"end":{"line":200,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":205,"col":7,"offset":0},"end":{"line":205,"col":50,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":205,"col":73,"offset":0},"end":{"line":205,"col":74,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":209,"col":8,"offset":0},"end":{"line":209,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":209,"col":36,"offset":0},"end":{"line":209,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":212,"col":25,"offset":0},"end":{"line":213,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":216,"col":25,"offset":0},"end":{"line":217,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":220,"col":25,"offset":0},"end":{"line":221,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":224,"col":25,"offset":0},"end":{"line":225,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":230,"col":28,"offset":0},"end":{"line":231,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":234,"col":28,"offset":0},"end":{"line":235,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":238,"col":28,"offset":0},"end":{"line":239,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":242,"col":28,"offset":0},"end":{"line":243,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":246,"col":28,"offset":0},"end":{"line":247,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":250,"col":28,"offset":0},"end":{"line":251,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":254,"col":29,"offset":0},"end":{"line":255,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":258,"col":29,"offset":0},"end":{"line":259,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":262,"col":29,"offset":0},"end":{"line":263,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":266,"col":29,"offset":0},"end":{"line":267,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":270,"col":29,"offset":0},"end":{"line":271,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":274,"col":29,"offset":0},"end":{"line":275,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":278,"col":29,"offset":0},"end":{"line":279,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":282,"col":29,"offset":0},"end":{"line":283,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":286,"col":29,"offset":0},"end":{"line":287,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":290,"col":29,"offset":0},"end":{"line":291,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":294,"col":29,"offset":0},"end":{"line":295,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":298,"col":29,"offset":0},"end":{"line":299,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":303,"col":30,"offset":0},"end":{"line":304,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":307,"col":30,"offset":0},"end":{"line":308,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":313,"col":30,"offset":0},"end":{"line":314,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":317,"col":30,"offset":0},"end":{"line":318,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":321,"col":30,"offset":0},"end":{"line":322,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":325,"col":30,"offset":0},"end":{"line":326,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":331,"col":27,"offset":0},"end":{"line":332,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":339,"col":27,"offset":0},"end":{"line":340,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":347,"col":27,"offset":0},"end":{"line":348,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":355,"col":27,"offset":0},"end":{"line":356,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":363,"col":27,"offset":0},"end":{"line":364,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":371,"col":27,"offset":0},"end":{"line":372,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":379,"col":28,"offset":0},"end":{"line":380,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":387,"col":28,"offset":0},"end":{"line":388,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":395,"col":28,"offset":0},"end":{"line":396,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":403,"col":28,"offset":0},"end":{"line":404,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":411,"col":28,"offset":0},"end":{"line":412,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":419,"col":28,"offset":0},"end":{"line":420,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":427,"col":28,"offset":0},"end":{"line":428,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":435,"col":28,"offset":0},"end":{"line":436,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":443,"col":28,"offset":0},"end":{"line":444,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":451,"col":28,"offset":0},"end":{"line":452,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":459,"col":28,"offset":0},"end":{"line":460,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":467,"col":28,"offset":0},"end":{"line":468,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":476,"col":29,"offset":0},"end":{"line":477,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":480,"col":29,"offset":0},"end":{"line":481,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":486,"col":29,"offset":0},"end":{"line":487,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":490,"col":29,"offset":0},"end":{"line":491,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":494,"col":29,"offset":0},"end":{"line":495,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":498,"col":29,"offset":0},"end":{"line":499,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":504,"col":25,"offset":0},"end":{"line":505,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":506,"col":1,"offset":0},"end":{"line":506,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":512,"col":25,"offset":0},"end":{"line":513,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":514,"col":1,"offset":0},"end":{"line":514,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":520,"col":25,"offset":0},"end":{"line":521,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":522,"col":1,"offset":0},"end":{"line":522,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":528,"col":25,"offset":0},"end":{"line":529,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":530,"col":1,"offset":0},"end":{"line":530,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":536,"col":25,"offset":0},"end":{"line":537,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":538,"col":1,"offset":0},"end":{"line":538,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":544,"col":25,"offset":0},"end":{"line":545,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":546,"col":1,"offset":0},"end":{"line":546,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":553,"col":25,"offset":0},"end":{"line":554,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":559,"col":25,"offset":0},"end":{"line":560,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":565,"col":25,"offset":0},"end":{"line":566,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":571,"col":25,"offset":0},"end":{"line":572,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":577,"col":25,"offset":0},"end":{"line":578,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":583,"col":25,"offset":0},"end":{"line":584,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":590,"col":23,"offset":0},"end":{"line":591,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":596,"col":23,"offset":0},"end":{"line":597,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":602,"col":23,"offset":0},"end":{"line":603,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":608,"col":23,"offset":0},"end":{"line":609,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":614,"col":23,"offset":0},"end":{"line":615,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":620,"col":24,"offset":0},"end":{"line":621,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":626,"col":24,"offset":0},"end":{"line":627,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":632,"col":24,"offset":0},"end":{"line":633,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":638,"col":24,"offset":0},"end":{"line":639,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":644,"col":24,"offset":0},"end":{"line":645,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":650,"col":24,"offset":0},"end":{"line":651,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":656,"col":24,"offset":0},"end":{"line":657,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":662,"col":24,"offset":0},"end":{"line":663,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":668,"col":24,"offset":0},"end":{"line":669,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":674,"col":24,"offset":0},"end":{"line":675,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":681,"col":7,"offset":0},"end":{"line":681,"col":50,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":681,"col":71,"offset":0},"end":{"line":681,"col":72,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":685,"col":8,"offset":0},"end":{"line":685,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":685,"col":27,"offset":0},"end":{"line":685,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":688,"col":25,"offset":0},"end":{"line":689,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":692,"col":25,"offset":0},"end":{"line":693,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":698,"col":7,"offset":0},"end":{"line":698,"col":50,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":698,"col":73,"offset":0},"end":{"line":698,"col":74,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":702,"col":8,"offset":0},"end":{"line":702,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":702,"col":36,"offset":0},"end":{"line":702,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":705,"col":25,"offset":0},"end":{"line":706,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":709,"col":25,"offset":0},"end":{"line":710,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":713,"col":25,"offset":0},"end":{"line":714,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":719,"col":28,"offset":0},"end":{"line":720,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":723,"col":28,"offset":0},"end":{"line":724,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":727,"col":28,"offset":0},"end":{"line":728,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":731,"col":28,"offset":0},"end":{"line":732,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":735,"col":28,"offset":0},"end":{"line":736,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":739,"col":29,"offset":0},"end":{"line":740,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":743,"col":29,"offset":0},"end":{"line":744,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":747,"col":29,"offset":0},"end":{"line":748,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":751,"col":29,"offset":0},"end":{"line":752,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":755,"col":29,"offset":0},"end":{"line":756,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":759,"col":29,"offset":0},"end":{"line":760,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":763,"col":29,"offset":0},"end":{"line":764,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":767,"col":29,"offset":0},"end":{"line":768,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":771,"col":29,"offset":0},"end":{"line":772,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":775,"col":29,"offset":0},"end":{"line":776,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":780,"col":30,"offset":0},"end":{"line":781,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":784,"col":30,"offset":0},"end":{"line":785,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":790,"col":30,"offset":0},"end":{"line":791,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":794,"col":30,"offset":0},"end":{"line":795,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":798,"col":30,"offset":0},"end":{"line":799,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":804,"col":27,"offset":0},"end":{"line":805,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":816,"col":27,"offset":0},"end":{"line":817,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":828,"col":27,"offset":0},"end":{"line":829,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":840,"col":27,"offset":0},"end":{"line":841,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":852,"col":27,"offset":0},"end":{"line":853,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":864,"col":28,"offset":0},"end":{"line":865,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":874,"col":28,"offset":0},"end":{"line":875,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":884,"col":28,"offset":0},"end":{"line":885,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":894,"col":28,"offset":0},"end":{"line":895,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":904,"col":28,"offset":0},"end":{"line":905,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":914,"col":28,"offset":0},"end":{"line":915,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":922,"col":28,"offset":0},"end":{"line":923,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":930,"col":28,"offset":0},"end":{"line":931,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":938,"col":28,"offset":0},"end":{"line":939,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":946,"col":28,"offset":0},"end":{"line":947,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":955,"col":29,"offset":0},"end":{"line":956,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":959,"col":29,"offset":0},"end":{"line":960,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":965,"col":29,"offset":0},"end":{"line":966,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":969,"col":29,"offset":0},"end":{"line":970,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":973,"col":29,"offset":0},"end":{"line":974,"col":9,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":979,"col":25,"offset":0},"end":{"line":980,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":981,"col":1,"offset":0},"end":{"line":981,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":987,"col":25,"offset":0},"end":{"line":988,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":989,"col":1,"offset":0},"end":{"line":989,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":995,"col":25,"offset":0},"end":{"line":996,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":997,"col":1,"offset":0},"end":{"line":997,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1003,"col":25,"offset":0},"end":{"line":1004,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1005,"col":1,"offset":0},"end":{"line":1005,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1011,"col":25,"offset":0},"end":{"line":1012,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1013,"col":1,"offset":0},"end":{"line":1013,"col":33,"offset":32}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1020,"col":25,"offset":0},"end":{"line":1021,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1026,"col":25,"offset":0},"end":{"line":1027,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1032,"col":25,"offset":0},"end":{"line":1033,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1038,"col":25,"offset":0},"end":{"line":1039,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1044,"col":25,"offset":0},"end":{"line":1045,"col":8,"offset":27}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1057,"col":1,"offset":0},"end":{"line":1058,"col":26,"offset":46}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1069,"col":5,"offset":0},"end":{"line":1070,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1070,"col":7,"offset":0},"end":{"line":1071,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1085,"col":5,"offset":0},"end":{"line":1087,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1092,"col":20,"offset":0},"end":{"line":1092,"col":42,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1093,"col":41,"offset":0},"end":{"line":1093,"col":63,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1095,"col":1,"offset":0},"end":{"line":1095,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1098,"col":20,"offset":0},"end":{"line":1098,"col":42,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1100,"col":41,"offset":0},"end":{"line":1100,"col":63,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1111,"col":5,"offset":0},"end":{"line":1113,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1118,"col":20,"offset":0},"end":{"line":1118,"col":42,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1119,"col":42,"offset":0},"end":{"line":1119,"col":64,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1121,"col":1,"offset":0},"end":{"line":1121,"col":29,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1124,"col":20,"offset":0},"end":{"line":1124,"col":42,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","start":{"line":1126,"col":42,"offset":0},"end":{"line":1126,"col":64,"offset":22}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":4,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":221,"col":17,"offset":0},"end":{"line":221,"col":18,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":423,"col":17,"offset":0},"end":{"line":424,"col":20,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":596,"col":21,"offset":0},"end":{"line":596,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":801,"col":25,"offset":0},"end":{"line":801,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":803,"col":29,"offset":0},"end":{"line":805,"col":50,"offset":83}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":982,"col":1,"offset":0},"end":{"line":982,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":987,"col":1,"offset":0},"end":{"line":987,"col":4,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1026,"col":1,"offset":0},"end":{"line":1026,"col":4,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c:26:\n `FCT` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":26,"col":1,"offset":0},"end":{"line":26,"col":4,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":221,"col":17,"offset":0},"end":{"line":221,"col":18,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":423,"col":17,"offset":0},"end":{"line":424,"col":20,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":596,"col":21,"offset":0},"end":{"line":596,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":801,"col":25,"offset":0},"end":{"line":801,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":803,"col":29,"offset":0},"end":{"line":805,"col":50,"offset":83}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":982,"col":1,"offset":0},"end":{"line":982,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":987,"col":1,"offset":0},"end":{"line":987,"col":4,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","start":{"line":1026,"col":1,"offset":0},"end":{"line":1026,"col":4,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/anytostr.c","start":{"line":36,"col":1,"offset":0},"end":{"line":36,"col":9,"offset":8}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/anytostr.c:36:\n `anytostr` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/anytostr.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/anytostr.c","start":{"line":36,"col":1,"offset":0},"end":{"line":36,"col":9,"offset":8}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":67,"col":5,"offset":0},"end":{"line":67,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c:67:\n `}` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":67,"col":5,"offset":0},"end":{"line":67,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","start":{"line":71,"col":1,"offset":0},"end":{"line":71,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":32,"offset":114}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":33,"offset":23}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h:18:\n `@GUARD_PREFIX@_LIMITS_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":32,"offset":114}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":33,"offset":23}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c","start":{"line":70,"col":35,"offset":0},"end":{"line":70,"col":39,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c:70:\n `file` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c","start":{"line":70,"col":35,"offset":0},"end":{"line":70,"col":39,"offset":4}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt1.c:1:\n Failure: ii_of_name: IdDeref","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt1.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":102,"col":15,"offset":0},"end":{"line":102,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":104,"col":15,"offset":0},"end":{"line":104,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":115,"col":15,"offset":0},"end":{"line":115,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":117,"col":15,"offset":0},"end":{"line":117,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":179,"col":15,"offset":0},"end":{"line":179,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":217,"col":15,"offset":0},"end":{"line":217,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":219,"col":15,"offset":0},"end":{"line":219,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":222,"col":21,"offset":0},"end":{"line":222,"col":27,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h:102:\n `void` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":102,"col":15,"offset":0},"end":{"line":102,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":104,"col":15,"offset":0},"end":{"line":104,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":115,"col":15,"offset":0},"end":{"line":115,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":117,"col":15,"offset":0},"end":{"line":117,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":179,"col":15,"offset":0},"end":{"line":179,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":217,"col":15,"offset":0},"end":{"line":217,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":219,"col":15,"offset":0},"end":{"line":219,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","start":{"line":222,"col":21,"offset":0},"end":{"line":222,"col":27,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":98,"col":39,"offset":0},"end":{"line":98,"col":45,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c:98:\n `struct` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","start":{"line":98,"col":39,"offset":0},"end":{"line":98,"col":45,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":25,"col":5,"offset":0},"end":{"line":29,"col":24,"offset":80}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":35,"col":6,"offset":0},"end":{"line":37,"col":5,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":75,"col":5,"offset":0},"end":{"line":77,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":57,"offset":56}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":82,"col":79,"offset":0},"end":{"line":82,"col":80,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":85,"col":1,"offset":0},"end":{"line":86,"col":80,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":88,"col":1,"offset":0},"end":{"line":89,"col":8,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":99,"col":5,"offset":0},"end":{"line":105,"col":6,"offset":217}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":113,"col":5,"offset":0},"end":{"line":119,"col":6,"offset":205}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":127,"col":5,"offset":0},"end":{"line":129,"col":6,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":134,"col":1,"offset":0},"end":{"line":134,"col":45,"offset":44}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":134,"col":67,"offset":0},"end":{"line":134,"col":68,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":135,"col":1,"offset":0},"end":{"line":138,"col":45,"offset":121}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":138,"col":67,"offset":0},"end":{"line":138,"col":68,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":140,"col":1,"offset":0},"end":{"line":141,"col":8,"offset":54}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":19,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":154,"col":6,"offset":0},"end":{"line":155,"col":6,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":159,"col":1,"offset":0},"end":{"line":159,"col":38,"offset":37}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":159,"col":60,"offset":0},"end":{"line":159,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":164,"col":14,"offset":0},"end":{"line":164,"col":58,"offset":44}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":166,"col":14,"offset":0},"end":{"line":166,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":175,"col":9,"offset":0},"end":{"line":175,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":175,"col":25,"offset":0},"end":{"line":175,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":176,"col":1,"offset":0},"end":{"line":176,"col":38,"offset":37}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":176,"col":60,"offset":0},"end":{"line":176,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":178,"col":1,"offset":0},"end":{"line":179,"col":8,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":189,"col":1,"offset":0},"end":{"line":189,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":195,"col":6,"offset":0},"end":{"line":196,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":200,"col":1,"offset":0},"end":{"line":202,"col":7,"offset":100}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":8,"offset":0},"end":{"line":203,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":23,"offset":0},"end":{"line":203,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":28,"offset":0},"end":{"line":209,"col":6,"offset":169}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":222,"col":1,"offset":0},"end":{"line":226,"col":32,"offset":205}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":54,"offset":0},"end":{"line":226,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":62,"offset":0},"end":{"line":226,"col":75,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":78,"offset":0},"end":{"line":226,"col":80,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":227,"col":36,"offset":0},"end":{"line":227,"col":44,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":227,"col":45,"offset":0},"end":{"line":227,"col":47,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":231,"col":1,"offset":0},"end":{"line":236,"col":32,"offset":314}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":244,"col":1,"offset":0},"end":{"line":244,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":246,"col":6,"offset":0},"end":{"line":251,"col":8,"offset":208}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":254,"col":1,"offset":0},"end":{"line":257,"col":6,"offset":148}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h:17:\n `@GUARD_PREFIX@_DIRENT_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":17,"col":10,"offset":0},"end":{"line":17,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":22,"col":1,"offset":0},"end":{"line":22,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":25,"col":5,"offset":0},"end":{"line":29,"col":24,"offset":80}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":35,"col":6,"offset":0},"end":{"line":37,"col":5,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":75,"col":5,"offset":0},"end":{"line":77,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":57,"offset":56}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":82,"col":79,"offset":0},"end":{"line":82,"col":80,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":83,"col":1,"offset":0},"end":{"line":83,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":85,"col":1,"offset":0},"end":{"line":86,"col":80,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":88,"col":1,"offset":0},"end":{"line":89,"col":8,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":99,"col":5,"offset":0},"end":{"line":105,"col":6,"offset":217}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":113,"col":5,"offset":0},"end":{"line":119,"col":6,"offset":205}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":127,"col":5,"offset":0},"end":{"line":129,"col":6,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":134,"col":1,"offset":0},"end":{"line":134,"col":45,"offset":44}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":134,"col":67,"offset":0},"end":{"line":134,"col":68,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":135,"col":1,"offset":0},"end":{"line":138,"col":45,"offset":121}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":138,"col":67,"offset":0},"end":{"line":138,"col":68,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":140,"col":1,"offset":0},"end":{"line":141,"col":8,"offset":54}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":19,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":154,"col":6,"offset":0},"end":{"line":155,"col":6,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":159,"col":1,"offset":0},"end":{"line":159,"col":38,"offset":37}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":159,"col":60,"offset":0},"end":{"line":159,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":164,"col":14,"offset":0},"end":{"line":164,"col":58,"offset":44}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":166,"col":14,"offset":0},"end":{"line":166,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":175,"col":9,"offset":0},"end":{"line":175,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":175,"col":25,"offset":0},"end":{"line":175,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":176,"col":1,"offset":0},"end":{"line":176,"col":38,"offset":37}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":176,"col":60,"offset":0},"end":{"line":176,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":178,"col":1,"offset":0},"end":{"line":179,"col":8,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":189,"col":1,"offset":0},"end":{"line":189,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":195,"col":6,"offset":0},"end":{"line":196,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":200,"col":1,"offset":0},"end":{"line":202,"col":7,"offset":100}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":8,"offset":0},"end":{"line":203,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":23,"offset":0},"end":{"line":203,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":203,"col":28,"offset":0},"end":{"line":209,"col":6,"offset":169}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":222,"col":1,"offset":0},"end":{"line":226,"col":32,"offset":205}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":54,"offset":0},"end":{"line":226,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":62,"offset":0},"end":{"line":226,"col":75,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":226,"col":78,"offset":0},"end":{"line":226,"col":80,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":227,"col":36,"offset":0},"end":{"line":227,"col":44,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":227,"col":45,"offset":0},"end":{"line":227,"col":47,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":231,"col":1,"offset":0},"end":{"line":236,"col":32,"offset":314}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":244,"col":1,"offset":0},"end":{"line":244,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":246,"col":6,"offset":0},"end":{"line":251,"col":8,"offset":208}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","start":{"line":254,"col":1,"offset":0},"end":{"line":257,"col":6,"offset":148}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":75,"col":40,"offset":0},"end":{"line":75,"col":43,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":98,"col":37,"offset":0},"end":{"line":98,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":107,"col":1,"offset":0},"end":{"line":110,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":110,"col":14,"offset":0},"end":{"line":110,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":135,"col":1,"offset":0},"end":{"line":135,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":4,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":140,"col":124,"offset":0},"end":{"line":140,"col":125,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":143,"col":1,"offset":0},"end":{"line":145,"col":8,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":145,"col":14,"offset":0},"end":{"line":145,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":155,"col":1,"offset":0},"end":{"line":158,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":158,"col":14,"offset":0},"end":{"line":158,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":185,"col":1,"offset":0},"end":{"line":188,"col":8,"offset":42}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":188,"col":14,"offset":0},"end":{"line":188,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":202,"col":1,"offset":0},"end":{"line":205,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":205,"col":14,"offset":0},"end":{"line":205,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":211,"col":1,"offset":0},"end":{"line":214,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":214,"col":14,"offset":0},"end":{"line":214,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":222,"col":1,"offset":0},"end":{"line":224,"col":8,"offset":40}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":224,"col":14,"offset":0},"end":{"line":224,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":234,"col":1,"offset":0},"end":{"line":236,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":236,"col":14,"offset":0},"end":{"line":236,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":249,"col":1,"offset":0},"end":{"line":249,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":252,"col":1,"offset":0},"end":{"line":252,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c:75:\n `\"<\"` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":75,"col":40,"offset":0},"end":{"line":75,"col":43,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":98,"col":37,"offset":0},"end":{"line":98,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":107,"col":1,"offset":0},"end":{"line":110,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":110,"col":14,"offset":0},"end":{"line":110,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":135,"col":1,"offset":0},"end":{"line":135,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":4,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":140,"col":124,"offset":0},"end":{"line":140,"col":125,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":143,"col":1,"offset":0},"end":{"line":145,"col":8,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":145,"col":14,"offset":0},"end":{"line":145,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":155,"col":1,"offset":0},"end":{"line":158,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":158,"col":14,"offset":0},"end":{"line":158,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":185,"col":1,"offset":0},"end":{"line":188,"col":8,"offset":42}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":188,"col":14,"offset":0},"end":{"line":188,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":202,"col":1,"offset":0},"end":{"line":205,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":205,"col":14,"offset":0},"end":{"line":205,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":211,"col":1,"offset":0},"end":{"line":214,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":214,"col":14,"offset":0},"end":{"line":214,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":222,"col":1,"offset":0},"end":{"line":224,"col":8,"offset":40}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":224,"col":14,"offset":0},"end":{"line":224,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":234,"col":1,"offset":0},"end":{"line":236,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":236,"col":14,"offset":0},"end":{"line":236,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":249,"col":1,"offset":0},"end":{"line":249,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","start":{"line":252,"col":1,"offset":0},"end":{"line":252,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":150,"col":1,"offset":0},"end":{"line":150,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":764,"col":13,"offset":0},"end":{"line":764,"col":24,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1261,"col":7,"offset":0},"end":{"line":1261,"col":25,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1264,"col":1,"offset":0},"end":{"line":1264,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1267,"col":5,"offset":0},"end":{"line":1267,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c:150:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":150,"col":1,"offset":0},"end":{"line":150,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":764,"col":13,"offset":0},"end":{"line":764,"col":24,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1261,"col":7,"offset":0},"end":{"line":1261,"col":25,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1264,"col":1,"offset":0},"end":{"line":1264,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","start":{"line":1267,"col":5,"offset":0},"end":{"line":1267,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":30,"col":1,"offset":0},"end":{"line":30,"col":32,"offset":31}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":35,"col":10,"offset":0},"end":{"line":40,"col":32,"offset":161}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":44,"col":10,"offset":0},"end":{"line":44,"col":33,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":51,"col":5,"offset":0},"end":{"line":51,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":51,"col":19,"offset":0},"end":{"line":51,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":65,"col":6,"offset":0},"end":{"line":65,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":65,"col":23,"offset":0},"end":{"line":65,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":78,"col":1,"offset":0},"end":{"line":80,"col":43,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":43,"offset":42}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":93,"col":1,"offset":0},"end":{"line":95,"col":49,"offset":86}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":50,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":113,"col":1,"offset":0},"end":{"line":113,"col":73,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":115,"col":56,"offset":0},"end":{"line":115,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":73,"offset":176}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":121,"col":56,"offset":0},"end":{"line":121,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":126,"col":1,"offset":0},"end":{"line":129,"col":8,"offset":190}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":132,"col":1,"offset":0},"end":{"line":132,"col":69,"offset":68}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":133,"col":1,"offset":0},"end":{"line":134,"col":59,"offset":99}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":146,"col":5,"offset":0},"end":{"line":148,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":151,"col":1,"offset":0},"end":{"line":153,"col":62,"offset":161}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":155,"col":43,"offset":0},"end":{"line":155,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":156,"col":1,"offset":0},"end":{"line":175,"col":25,"offset":747}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":177,"col":48,"offset":0},"end":{"line":177,"col":49,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":183,"col":5,"offset":0},"end":{"line":194,"col":6,"offset":399}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":203,"col":5,"offset":0},"end":{"line":204,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":204,"col":8,"offset":0},"end":{"line":204,"col":27,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":205,"col":33,"offset":0},"end":{"line":205,"col":49,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":207,"col":57,"offset":0},"end":{"line":207,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":212,"col":1,"offset":0},"end":{"line":214,"col":68,"offset":161}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":59,"offset":58}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":218,"col":1,"offset":0},"end":{"line":218,"col":71,"offset":70}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":233,"col":5,"offset":0},"end":{"line":234,"col":5,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":234,"col":8,"offset":0},"end":{"line":234,"col":24,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":35,"offset":0},"end":{"line":235,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":44,"offset":0},"end":{"line":235,"col":49,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":56,"offset":0},"end":{"line":235,"col":59,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":237,"col":59,"offset":0},"end":{"line":237,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":242,"col":1,"offset":0},"end":{"line":244,"col":70,"offset":167}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":247,"col":1,"offset":0},"end":{"line":247,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":248,"col":1,"offset":0},"end":{"line":248,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":261,"col":5,"offset":0},"end":{"line":270,"col":6,"offset":330}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":280,"col":5,"offset":0},"end":{"line":282,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":286,"col":1,"offset":0},"end":{"line":288,"col":31,"offset":134}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":289,"col":43,"offset":0},"end":{"line":289,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":290,"col":1,"offset":0},"end":{"line":318,"col":25,"offset":981}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":320,"col":69,"offset":0},"end":{"line":320,"col":70,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":324,"col":5,"offset":0},"end":{"line":326,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":329,"col":1,"offset":0},"end":{"line":329,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":331,"col":59,"offset":0},"end":{"line":331,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":332,"col":1,"offset":0},"end":{"line":336,"col":67,"offset":181}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":338,"col":59,"offset":0},"end":{"line":338,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":346,"col":8,"offset":175}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":349,"col":1,"offset":0},"end":{"line":349,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":350,"col":1,"offset":0},"end":{"line":350,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":363,"col":5,"offset":0},"end":{"line":365,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":52,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":369,"col":74,"offset":0},"end":{"line":369,"col":75,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":370,"col":1,"offset":0},"end":{"line":371,"col":7,"offset":60}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":376,"col":9,"offset":0},"end":{"line":376,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":376,"col":26,"offset":0},"end":{"line":376,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":377,"col":1,"offset":0},"end":{"line":377,"col":52,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":377,"col":74,"offset":0},"end":{"line":377,"col":75,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":379,"col":1,"offset":0},"end":{"line":380,"col":8,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":391,"col":5,"offset":0},"end":{"line":393,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":397,"col":1,"offset":0},"end":{"line":397,"col":75,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":398,"col":60,"offset":0},"end":{"line":398,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":399,"col":1,"offset":0},"end":{"line":404,"col":32,"offset":228}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":413,"col":5,"offset":0},"end":{"line":415,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":419,"col":1,"offset":0},"end":{"line":419,"col":65,"offset":64}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":420,"col":57,"offset":0},"end":{"line":420,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":421,"col":1,"offset":0},"end":{"line":424,"col":65,"offset":166}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":425,"col":57,"offset":0},"end":{"line":425,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":427,"col":1,"offset":0},"end":{"line":428,"col":8,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":441,"col":5,"offset":0},"end":{"line":443,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":447,"col":1,"offset":0},"end":{"line":447,"col":70,"offset":69}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":449,"col":57,"offset":0},"end":{"line":449,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":450,"col":1,"offset":0},"end":{"line":453,"col":70,"offset":176}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":455,"col":57,"offset":0},"end":{"line":455,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":8,"offset":79}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":481,"col":5,"offset":0},"end":{"line":482,"col":5,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":482,"col":8,"offset":0},"end":{"line":482,"col":22,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":33,"offset":0},"end":{"line":483,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":42,"offset":0},"end":{"line":483,"col":47,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":59,"offset":0},"end":{"line":483,"col":64,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":485,"col":60,"offset":0},"end":{"line":485,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":490,"col":1,"offset":0},"end":{"line":492,"col":80,"offset":185}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":495,"col":71,"offset":70}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":496,"col":1,"offset":0},"end":{"line":497,"col":60,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":555,"col":5,"offset":0},"end":{"line":564,"col":5,"offset":343}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":578,"col":5,"offset":0},"end":{"line":580,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":583,"col":1,"offset":0},"end":{"line":583,"col":77,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":585,"col":59,"offset":0},"end":{"line":585,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":586,"col":1,"offset":0},"end":{"line":587,"col":7,"offset":85}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":591,"col":1,"offset":0},"end":{"line":594,"col":8,"offset":198}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":597,"col":1,"offset":0},"end":{"line":597,"col":73,"offset":72}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":598,"col":1,"offset":0},"end":{"line":599,"col":63,"offset":103}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":619,"col":5,"offset":0},"end":{"line":621,"col":6,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":624,"col":1,"offset":0},"end":{"line":625,"col":61,"offset":98}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":627,"col":43,"offset":0},"end":{"line":627,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":628,"col":1,"offset":0},"end":{"line":633,"col":61,"offset":232}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":635,"col":43,"offset":0},"end":{"line":635,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":640,"col":1,"offset":0},"end":{"line":643,"col":8,"offset":202}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":646,"col":1,"offset":0},"end":{"line":646,"col":77,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":647,"col":1,"offset":0},"end":{"line":648,"col":63,"offset":107}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":688,"col":5,"offset":0},"end":{"line":690,"col":6,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":694,"col":1,"offset":0},"end":{"line":696,"col":45,"offset":145}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":697,"col":43,"offset":0},"end":{"line":697,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":698,"col":1,"offset":0},"end":{"line":702,"col":55,"offset":209}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":705,"col":7,"offset":0},"end":{"line":716,"col":5,"offset":412}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":733,"col":1,"offset":0},"end":{"line":733,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":739,"col":6,"offset":0},"end":{"line":740,"col":6,"offset":77}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":743,"col":1,"offset":0},"end":{"line":743,"col":55,"offset":54}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":745,"col":56,"offset":0},"end":{"line":745,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":746,"col":1,"offset":0},"end":{"line":748,"col":55,"offset":118}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":750,"col":56,"offset":0},"end":{"line":750,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":751,"col":1,"offset":0},"end":{"line":752,"col":8,"offset":64}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":756,"col":1,"offset":0},"end":{"line":759,"col":13,"offset":156}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":764,"col":1,"offset":0},"end":{"line":764,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":773,"col":1,"offset":0},"end":{"line":773,"col":62,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":775,"col":56,"offset":0},"end":{"line":775,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":776,"col":1,"offset":0},"end":{"line":776,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":778,"col":1,"offset":0},"end":{"line":778,"col":62,"offset":61}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":780,"col":56,"offset":0},"end":{"line":780,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":781,"col":1,"offset":0},"end":{"line":781,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":786,"col":1,"offset":0},"end":{"line":786,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":795,"col":1,"offset":0},"end":{"line":795,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":797,"col":57,"offset":0},"end":{"line":797,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":798,"col":1,"offset":0},"end":{"line":798,"col":64,"offset":63}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":800,"col":1,"offset":0},"end":{"line":800,"col":63,"offset":62}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":802,"col":57,"offset":0},"end":{"line":802,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":803,"col":1,"offset":0},"end":{"line":803,"col":64,"offset":63}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":808,"col":5,"offset":0},"end":{"line":808,"col":20,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":14,"offset":0},"end":{"line":813,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":35,"offset":0},"end":{"line":813,"col":39,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":57,"offset":0},"end":{"line":813,"col":61,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":818,"col":5,"offset":0},"end":{"line":818,"col":24,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":14,"offset":0},"end":{"line":825,"col":28,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":36,"offset":0},"end":{"line":825,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":52,"offset":0},"end":{"line":825,"col":56,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":830,"col":5,"offset":0},"end":{"line":830,"col":25,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":14,"offset":0},"end":{"line":840,"col":29,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":37,"offset":0},"end":{"line":840,"col":41,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":53,"offset":0},"end":{"line":840,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":70,"offset":0},"end":{"line":840,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":845,"col":5,"offset":0},"end":{"line":845,"col":25,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":14,"offset":0},"end":{"line":854,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":40,"offset":0},"end":{"line":854,"col":44,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":60,"offset":0},"end":{"line":854,"col":64,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":859,"col":5,"offset":0},"end":{"line":859,"col":24,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":14,"offset":0},"end":{"line":865,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":39,"offset":0},"end":{"line":865,"col":43,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":61,"offset":0},"end":{"line":865,"col":65,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":870,"col":5,"offset":0},"end":{"line":870,"col":21,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":14,"offset":0},"end":{"line":876,"col":28,"offset":14}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":36,"offset":0},"end":{"line":876,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":56,"offset":0},"end":{"line":876,"col":60,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":881,"col":1,"offset":0},"end":{"line":881,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":890,"col":1,"offset":0},"end":{"line":890,"col":76,"offset":75}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":892,"col":60,"offset":0},"end":{"line":892,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":893,"col":1,"offset":0},"end":{"line":893,"col":77,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":895,"col":1,"offset":0},"end":{"line":895,"col":76,"offset":75}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":897,"col":60,"offset":0},"end":{"line":897,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":898,"col":1,"offset":0},"end":{"line":898,"col":77,"offset":76}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":903,"col":5,"offset":0},"end":{"line":903,"col":20,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":14,"offset":0},"end":{"line":909,"col":27,"offset":13}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":35,"offset":0},"end":{"line":909,"col":39,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":55,"offset":0},"end":{"line":909,"col":59,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":914,"col":5,"offset":0},"end":{"line":914,"col":20,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":14,"offset":0},"end":{"line":929,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":35,"offset":0},"end":{"line":929,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":51,"offset":0},"end":{"line":929,"col":55,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":933,"col":5,"offset":0},"end":{"line":933,"col":22,"offset":17}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":14,"offset":0},"end":{"line":950,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":51,"offset":0},"end":{"line":950,"col":55,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":70,"offset":0},"end":{"line":950,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":955,"col":5,"offset":0},"end":{"line":957,"col":6,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":961,"col":1,"offset":0},"end":{"line":965,"col":8,"offset":146}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":976,"col":5,"offset":0},"end":{"line":978,"col":6,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":982,"col":1,"offset":0},"end":{"line":982,"col":74,"offset":73}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":983,"col":57,"offset":0},"end":{"line":983,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":984,"col":1,"offset":0},"end":{"line":987,"col":74,"offset":186}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":988,"col":57,"offset":0},"end":{"line":988,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":990,"col":1,"offset":0},"end":{"line":992,"col":28,"offset":111}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1003,"col":5,"offset":0},"end":{"line":1005,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1008,"col":1,"offset":0},"end":{"line":1013,"col":9,"offset":198}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1016,"col":1,"offset":0},"end":{"line":1017,"col":8,"offset":63}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1027,"col":1,"offset":0},"end":{"line":1046,"col":7,"offset":638}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h:19:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":30,"col":1,"offset":0},"end":{"line":30,"col":32,"offset":31}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":35,"col":10,"offset":0},"end":{"line":40,"col":32,"offset":161}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":44,"col":10,"offset":0},"end":{"line":44,"col":33,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":51,"col":5,"offset":0},"end":{"line":51,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":51,"col":19,"offset":0},"end":{"line":51,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":65,"col":6,"offset":0},"end":{"line":65,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":65,"col":23,"offset":0},"end":{"line":65,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":78,"col":1,"offset":0},"end":{"line":80,"col":43,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":82,"col":1,"offset":0},"end":{"line":82,"col":43,"offset":42}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":93,"col":1,"offset":0},"end":{"line":95,"col":49,"offset":86}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":97,"col":1,"offset":0},"end":{"line":97,"col":50,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":108,"col":5,"offset":0},"end":{"line":110,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":113,"col":1,"offset":0},"end":{"line":113,"col":73,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":115,"col":56,"offset":0},"end":{"line":115,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":116,"col":1,"offset":0},"end":{"line":119,"col":73,"offset":176}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":121,"col":56,"offset":0},"end":{"line":121,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":126,"col":1,"offset":0},"end":{"line":129,"col":8,"offset":190}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":132,"col":1,"offset":0},"end":{"line":132,"col":69,"offset":68}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":133,"col":1,"offset":0},"end":{"line":134,"col":59,"offset":99}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":146,"col":5,"offset":0},"end":{"line":148,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":151,"col":1,"offset":0},"end":{"line":153,"col":62,"offset":161}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":155,"col":43,"offset":0},"end":{"line":155,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":156,"col":1,"offset":0},"end":{"line":175,"col":25,"offset":747}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":177,"col":48,"offset":0},"end":{"line":177,"col":49,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":183,"col":5,"offset":0},"end":{"line":194,"col":6,"offset":399}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":203,"col":5,"offset":0},"end":{"line":204,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":204,"col":8,"offset":0},"end":{"line":204,"col":27,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":205,"col":33,"offset":0},"end":{"line":205,"col":49,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":207,"col":57,"offset":0},"end":{"line":207,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":212,"col":1,"offset":0},"end":{"line":214,"col":68,"offset":161}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":217,"col":1,"offset":0},"end":{"line":217,"col":59,"offset":58}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":218,"col":1,"offset":0},"end":{"line":218,"col":71,"offset":70}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":233,"col":5,"offset":0},"end":{"line":234,"col":5,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":234,"col":8,"offset":0},"end":{"line":234,"col":24,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":35,"offset":0},"end":{"line":235,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":44,"offset":0},"end":{"line":235,"col":49,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":235,"col":56,"offset":0},"end":{"line":235,"col":59,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":237,"col":59,"offset":0},"end":{"line":237,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":242,"col":1,"offset":0},"end":{"line":244,"col":70,"offset":167}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":247,"col":1,"offset":0},"end":{"line":247,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":248,"col":1,"offset":0},"end":{"line":248,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":261,"col":5,"offset":0},"end":{"line":270,"col":6,"offset":330}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":280,"col":5,"offset":0},"end":{"line":282,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":286,"col":1,"offset":0},"end":{"line":288,"col":31,"offset":134}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":289,"col":43,"offset":0},"end":{"line":289,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":290,"col":1,"offset":0},"end":{"line":318,"col":25,"offset":981}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":320,"col":69,"offset":0},"end":{"line":320,"col":70,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":324,"col":5,"offset":0},"end":{"line":326,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":329,"col":1,"offset":0},"end":{"line":329,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":331,"col":59,"offset":0},"end":{"line":331,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":332,"col":1,"offset":0},"end":{"line":336,"col":67,"offset":181}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":338,"col":59,"offset":0},"end":{"line":338,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":346,"col":8,"offset":175}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":349,"col":1,"offset":0},"end":{"line":349,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":350,"col":1,"offset":0},"end":{"line":350,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":363,"col":5,"offset":0},"end":{"line":365,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":52,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":369,"col":74,"offset":0},"end":{"line":369,"col":75,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":370,"col":1,"offset":0},"end":{"line":371,"col":7,"offset":60}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":376,"col":9,"offset":0},"end":{"line":376,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":376,"col":26,"offset":0},"end":{"line":376,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":377,"col":1,"offset":0},"end":{"line":377,"col":52,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":377,"col":74,"offset":0},"end":{"line":377,"col":75,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":379,"col":1,"offset":0},"end":{"line":380,"col":8,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":391,"col":5,"offset":0},"end":{"line":393,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":397,"col":1,"offset":0},"end":{"line":397,"col":75,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":398,"col":60,"offset":0},"end":{"line":398,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":399,"col":1,"offset":0},"end":{"line":404,"col":32,"offset":228}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":413,"col":5,"offset":0},"end":{"line":415,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":419,"col":1,"offset":0},"end":{"line":419,"col":65,"offset":64}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":420,"col":57,"offset":0},"end":{"line":420,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":421,"col":1,"offset":0},"end":{"line":424,"col":65,"offset":166}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":425,"col":57,"offset":0},"end":{"line":425,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":427,"col":1,"offset":0},"end":{"line":428,"col":8,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":441,"col":5,"offset":0},"end":{"line":443,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":447,"col":1,"offset":0},"end":{"line":447,"col":70,"offset":69}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":449,"col":57,"offset":0},"end":{"line":449,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":450,"col":1,"offset":0},"end":{"line":453,"col":70,"offset":176}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":455,"col":57,"offset":0},"end":{"line":455,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":457,"col":1,"offset":0},"end":{"line":458,"col":8,"offset":79}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":481,"col":5,"offset":0},"end":{"line":482,"col":5,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":482,"col":8,"offset":0},"end":{"line":482,"col":22,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":33,"offset":0},"end":{"line":483,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":42,"offset":0},"end":{"line":483,"col":47,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":483,"col":59,"offset":0},"end":{"line":483,"col":64,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":485,"col":60,"offset":0},"end":{"line":485,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":490,"col":1,"offset":0},"end":{"line":492,"col":80,"offset":185}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":495,"col":1,"offset":0},"end":{"line":495,"col":71,"offset":70}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":496,"col":1,"offset":0},"end":{"line":497,"col":60,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":555,"col":5,"offset":0},"end":{"line":564,"col":5,"offset":343}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":578,"col":5,"offset":0},"end":{"line":580,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":583,"col":1,"offset":0},"end":{"line":583,"col":77,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":585,"col":59,"offset":0},"end":{"line":585,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":586,"col":1,"offset":0},"end":{"line":587,"col":7,"offset":85}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":591,"col":1,"offset":0},"end":{"line":594,"col":8,"offset":198}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":597,"col":1,"offset":0},"end":{"line":597,"col":73,"offset":72}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":598,"col":1,"offset":0},"end":{"line":599,"col":63,"offset":103}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":619,"col":5,"offset":0},"end":{"line":621,"col":6,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":624,"col":1,"offset":0},"end":{"line":625,"col":61,"offset":98}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":627,"col":43,"offset":0},"end":{"line":627,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":628,"col":1,"offset":0},"end":{"line":633,"col":61,"offset":232}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":635,"col":43,"offset":0},"end":{"line":635,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":640,"col":1,"offset":0},"end":{"line":643,"col":8,"offset":202}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":646,"col":1,"offset":0},"end":{"line":646,"col":77,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":647,"col":1,"offset":0},"end":{"line":648,"col":63,"offset":107}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":688,"col":5,"offset":0},"end":{"line":690,"col":6,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":694,"col":1,"offset":0},"end":{"line":696,"col":45,"offset":145}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":697,"col":43,"offset":0},"end":{"line":697,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":698,"col":1,"offset":0},"end":{"line":702,"col":55,"offset":209}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":705,"col":7,"offset":0},"end":{"line":716,"col":5,"offset":412}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":733,"col":1,"offset":0},"end":{"line":733,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":739,"col":6,"offset":0},"end":{"line":740,"col":6,"offset":77}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":743,"col":1,"offset":0},"end":{"line":743,"col":55,"offset":54}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":745,"col":56,"offset":0},"end":{"line":745,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":746,"col":1,"offset":0},"end":{"line":748,"col":55,"offset":118}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":750,"col":56,"offset":0},"end":{"line":750,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":751,"col":1,"offset":0},"end":{"line":752,"col":8,"offset":64}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":756,"col":1,"offset":0},"end":{"line":759,"col":13,"offset":156}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":764,"col":1,"offset":0},"end":{"line":764,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":773,"col":1,"offset":0},"end":{"line":773,"col":62,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":775,"col":56,"offset":0},"end":{"line":775,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":776,"col":1,"offset":0},"end":{"line":776,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":778,"col":1,"offset":0},"end":{"line":778,"col":62,"offset":61}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":780,"col":56,"offset":0},"end":{"line":780,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":781,"col":1,"offset":0},"end":{"line":781,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":786,"col":1,"offset":0},"end":{"line":786,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":795,"col":1,"offset":0},"end":{"line":795,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":797,"col":57,"offset":0},"end":{"line":797,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":798,"col":1,"offset":0},"end":{"line":798,"col":64,"offset":63}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":800,"col":1,"offset":0},"end":{"line":800,"col":63,"offset":62}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":802,"col":57,"offset":0},"end":{"line":802,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":803,"col":1,"offset":0},"end":{"line":803,"col":64,"offset":63}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":808,"col":5,"offset":0},"end":{"line":808,"col":20,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":14,"offset":0},"end":{"line":813,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":35,"offset":0},"end":{"line":813,"col":39,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":813,"col":57,"offset":0},"end":{"line":813,"col":61,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":818,"col":5,"offset":0},"end":{"line":818,"col":24,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":14,"offset":0},"end":{"line":825,"col":28,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":36,"offset":0},"end":{"line":825,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":825,"col":52,"offset":0},"end":{"line":825,"col":56,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":830,"col":5,"offset":0},"end":{"line":830,"col":25,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":14,"offset":0},"end":{"line":840,"col":29,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":37,"offset":0},"end":{"line":840,"col":41,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":53,"offset":0},"end":{"line":840,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":840,"col":70,"offset":0},"end":{"line":840,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":845,"col":5,"offset":0},"end":{"line":845,"col":25,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":14,"offset":0},"end":{"line":854,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":40,"offset":0},"end":{"line":854,"col":44,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":854,"col":60,"offset":0},"end":{"line":854,"col":64,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":859,"col":5,"offset":0},"end":{"line":859,"col":24,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":14,"offset":0},"end":{"line":865,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":39,"offset":0},"end":{"line":865,"col":43,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":865,"col":61,"offset":0},"end":{"line":865,"col":65,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":870,"col":5,"offset":0},"end":{"line":870,"col":21,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":14,"offset":0},"end":{"line":876,"col":28,"offset":14}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":36,"offset":0},"end":{"line":876,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":876,"col":56,"offset":0},"end":{"line":876,"col":60,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":881,"col":1,"offset":0},"end":{"line":881,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":890,"col":1,"offset":0},"end":{"line":890,"col":76,"offset":75}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":892,"col":60,"offset":0},"end":{"line":892,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":893,"col":1,"offset":0},"end":{"line":893,"col":77,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":895,"col":1,"offset":0},"end":{"line":895,"col":76,"offset":75}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":897,"col":60,"offset":0},"end":{"line":897,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":898,"col":1,"offset":0},"end":{"line":898,"col":77,"offset":76}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":903,"col":5,"offset":0},"end":{"line":903,"col":20,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":14,"offset":0},"end":{"line":909,"col":27,"offset":13}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":35,"offset":0},"end":{"line":909,"col":39,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":909,"col":55,"offset":0},"end":{"line":909,"col":59,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":914,"col":5,"offset":0},"end":{"line":914,"col":20,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":14,"offset":0},"end":{"line":929,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":35,"offset":0},"end":{"line":929,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":929,"col":51,"offset":0},"end":{"line":929,"col":55,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":933,"col":5,"offset":0},"end":{"line":933,"col":22,"offset":17}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":14,"offset":0},"end":{"line":950,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":51,"offset":0},"end":{"line":950,"col":55,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":950,"col":70,"offset":0},"end":{"line":950,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":955,"col":5,"offset":0},"end":{"line":957,"col":6,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":961,"col":1,"offset":0},"end":{"line":965,"col":8,"offset":146}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":976,"col":5,"offset":0},"end":{"line":978,"col":6,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":982,"col":1,"offset":0},"end":{"line":982,"col":74,"offset":73}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":983,"col":57,"offset":0},"end":{"line":983,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":984,"col":1,"offset":0},"end":{"line":987,"col":74,"offset":186}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":988,"col":57,"offset":0},"end":{"line":988,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":990,"col":1,"offset":0},"end":{"line":992,"col":28,"offset":111}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1003,"col":5,"offset":0},"end":{"line":1005,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1008,"col":1,"offset":0},"end":{"line":1013,"col":9,"offset":198}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1016,"col":1,"offset":0},"end":{"line":1017,"col":8,"offset":63}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","start":{"line":1027,"col":1,"offset":0},"end":{"line":1046,"col":7,"offset":638}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":31,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":37,"col":10,"offset":0},"end":{"line":42,"col":31,"offset":158}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":46,"col":10,"offset":0},"end":{"line":46,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":116,"col":6,"offset":0},"end":{"line":116,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":116,"col":22,"offset":0},"end":{"line":116,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":124,"col":6,"offset":0},"end":{"line":124,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":124,"col":20,"offset":0},"end":{"line":124,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":6,"offset":0},"end":{"line":135,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":20,"offset":0},"end":{"line":135,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":25,"offset":0},"end":{"line":135,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":39,"offset":0},"end":{"line":135,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":162,"col":5,"offset":0},"end":{"line":164,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":167,"col":1,"offset":0},"end":{"line":167,"col":66,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":169,"col":54,"offset":0},"end":{"line":169,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":170,"col":1,"offset":0},"end":{"line":170,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":172,"col":1,"offset":0},"end":{"line":175,"col":55,"offset":209}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":177,"col":1,"offset":0},"end":{"line":177,"col":67,"offset":66}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":190,"col":6,"offset":0},"end":{"line":191,"col":6,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":194,"col":1,"offset":0},"end":{"line":194,"col":46,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":194,"col":68,"offset":0},"end":{"line":194,"col":69,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":195,"col":1,"offset":0},"end":{"line":198,"col":8,"offset":110}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":207,"col":5,"offset":0},"end":{"line":209,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":213,"col":1,"offset":0},"end":{"line":213,"col":61,"offset":60}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":214,"col":56,"offset":0},"end":{"line":214,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":215,"col":1,"offset":0},"end":{"line":218,"col":8,"offset":140}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":227,"col":1,"offset":0},"end":{"line":227,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":234,"col":6,"offset":0},"end":{"line":235,"col":6,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":238,"col":1,"offset":0},"end":{"line":244,"col":32,"offset":226}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":251,"col":5,"offset":0},"end":{"line":252,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":252,"col":31,"offset":0},"end":{"line":252,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":252,"col":36,"offset":0},"end":{"line":253,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":257,"col":1,"offset":0},"end":{"line":257,"col":45,"offset":44}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":257,"col":67,"offset":0},"end":{"line":257,"col":68,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":258,"col":1,"offset":0},"end":{"line":261,"col":8,"offset":108}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":265,"col":5,"offset":0},"end":{"line":266,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":266,"col":31,"offset":0},"end":{"line":266,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":266,"col":36,"offset":0},"end":{"line":267,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":271,"col":1,"offset":0},"end":{"line":271,"col":64,"offset":63}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":272,"col":58,"offset":0},"end":{"line":272,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":273,"col":1,"offset":0},"end":{"line":276,"col":8,"offset":146}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":280,"col":5,"offset":0},"end":{"line":282,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":286,"col":1,"offset":0},"end":{"line":286,"col":74,"offset":73}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":287,"col":58,"offset":0},"end":{"line":287,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":288,"col":1,"offset":0},"end":{"line":293,"col":32,"offset":224}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":5,"offset":0},"end":{"line":300,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":26,"offset":0},"end":{"line":300,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":31,"offset":0},"end":{"line":300,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":46,"offset":0},"end":{"line":301,"col":5,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":7,"offset":0},"end":{"line":301,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":28,"offset":0},"end":{"line":301,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":33,"offset":0},"end":{"line":301,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":49,"offset":0},"end":{"line":301,"col":50,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":10,"offset":0},"end":{"line":302,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":25,"offset":0},"end":{"line":302,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":30,"offset":0},"end":{"line":302,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":56,"offset":0},"end":{"line":302,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":62,"offset":0},"end":{"line":302,"col":63,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":89,"offset":0},"end":{"line":302,"col":90,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":94,"offset":0},"end":{"line":302,"col":95,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":117,"offset":0},"end":{"line":302,"col":118,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":7,"offset":0},"end":{"line":307,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":28,"offset":0},"end":{"line":307,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":33,"offset":0},"end":{"line":322,"col":4,"offset":629}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":322,"col":6,"offset":0},"end":{"line":322,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":322,"col":27,"offset":0},"end":{"line":322,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":332,"col":1,"offset":0},"end":{"line":332,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":339,"col":6,"offset":0},"end":{"line":340,"col":6,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":49,"offset":48}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":343,"col":71,"offset":0},"end":{"line":343,"col":72,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":344,"col":1,"offset":0},"end":{"line":344,"col":50,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":346,"col":1,"offset":0},"end":{"line":347,"col":72,"offset":97}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":349,"col":1,"offset":0},"end":{"line":350,"col":8,"offset":58}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":361,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":32,"offset":0},"end":{"line":361,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":38,"offset":0},"end":{"line":361,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":65,"offset":0},"end":{"line":361,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":70,"offset":0},"end":{"line":361,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":93,"offset":0},"end":{"line":361,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":366,"col":52,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":366,"col":74,"offset":0},"end":{"line":366,"col":75,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":367,"col":1,"offset":0},"end":{"line":367,"col":53,"offset":52}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":53,"offset":52}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":374,"col":5,"offset":0},"end":{"line":375,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":32,"offset":0},"end":{"line":375,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":38,"offset":0},"end":{"line":375,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":65,"offset":0},"end":{"line":375,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":70,"offset":0},"end":{"line":375,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":93,"offset":0},"end":{"line":375,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":380,"col":1,"offset":0},"end":{"line":380,"col":65,"offset":64}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":381,"col":55,"offset":0},"end":{"line":381,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":382,"col":1,"offset":0},"end":{"line":382,"col":66,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":384,"col":1,"offset":0},"end":{"line":384,"col":66,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":389,"col":5,"offset":0},"end":{"line":390,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":390,"col":31,"offset":0},"end":{"line":390,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":390,"col":36,"offset":0},"end":{"line":391,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":395,"col":1,"offset":0},"end":{"line":395,"col":79,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":396,"col":55,"offset":0},"end":{"line":396,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":397,"col":1,"offset":0},"end":{"line":405,"col":23,"offset":254}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":410,"col":1,"offset":0},"end":{"line":411,"col":73,"offset":107}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":412,"col":43,"offset":0},"end":{"line":412,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":413,"col":1,"offset":0},"end":{"line":420,"col":32,"offset":294}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":428,"col":5,"offset":0},"end":{"line":429,"col":7,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":429,"col":31,"offset":0},"end":{"line":429,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":429,"col":36,"offset":0},"end":{"line":430,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":434,"col":1,"offset":0},"end":{"line":434,"col":71,"offset":70}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":436,"col":56,"offset":0},"end":{"line":436,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":437,"col":1,"offset":0},"end":{"line":442,"col":7,"offset":194}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":476,"col":5,"offset":0},"end":{"line":477,"col":5,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":481,"col":6,"offset":0},"end":{"line":482,"col":6,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":486,"col":1,"offset":0},"end":{"line":486,"col":66,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":487,"col":52,"offset":0},"end":{"line":487,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":488,"col":1,"offset":0},"end":{"line":491,"col":8,"offset":150}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":495,"col":5,"offset":0},"end":{"line":496,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":496,"col":7,"offset":0},"end":{"line":496,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":496,"col":20,"offset":0},"end":{"line":496,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":500,"col":1,"offset":0},"end":{"line":500,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":507,"col":1,"offset":0},"end":{"line":507,"col":68,"offset":67}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":508,"col":53,"offset":0},"end":{"line":508,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":509,"col":1,"offset":0},"end":{"line":512,"col":68,"offset":171}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":513,"col":53,"offset":0},"end":{"line":513,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":516,"col":8,"offset":77}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":540,"col":5,"offset":0},"end":{"line":541,"col":5,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":545,"col":6,"offset":0},"end":{"line":546,"col":6,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":550,"col":32,"offset":0},"end":{"line":550,"col":42,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":558,"col":5,"offset":0},"end":{"line":559,"col":5,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":559,"col":7,"offset":0},"end":{"line":559,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":559,"col":20,"offset":0},"end":{"line":559,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":563,"col":6,"offset":0},"end":{"line":564,"col":6,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":568,"col":34,"offset":0},"end":{"line":568,"col":44,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":571,"col":7,"offset":0},"end":{"line":577,"col":6,"offset":184}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":597,"col":5,"offset":0},"end":{"line":598,"col":7,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":32,"offset":0},"end":{"line":598,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":38,"offset":0},"end":{"line":598,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":65,"offset":0},"end":{"line":598,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":70,"offset":0},"end":{"line":598,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":93,"offset":0},"end":{"line":598,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":603,"col":1,"offset":0},"end":{"line":604,"col":70,"offset":103}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":605,"col":43,"offset":0},"end":{"line":605,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":606,"col":1,"offset":0},"end":{"line":607,"col":71,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":609,"col":1,"offset":0},"end":{"line":610,"col":71,"offset":104}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":624,"col":28,"offset":0},"end":{"line":624,"col":40,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":624,"col":52,"offset":0},"end":{"line":624,"col":67,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":628,"col":28,"offset":0},"end":{"line":628,"col":40,"offset":12}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":628,"col":52,"offset":0},"end":{"line":628,"col":67,"offset":15}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":638,"col":5,"offset":0},"end":{"line":639,"col":7,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":639,"col":31,"offset":0},"end":{"line":639,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":639,"col":36,"offset":0},"end":{"line":640,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":644,"col":1,"offset":0},"end":{"line":644,"col":45,"offset":44}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":644,"col":67,"offset":0},"end":{"line":644,"col":68,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":645,"col":1,"offset":0},"end":{"line":648,"col":8,"offset":119}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":652,"col":5,"offset":0},"end":{"line":653,"col":7,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":653,"col":31,"offset":0},"end":{"line":653,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":653,"col":36,"offset":0},"end":{"line":654,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":658,"col":1,"offset":0},"end":{"line":662,"col":8,"offset":137}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":666,"col":1,"offset":0},"end":{"line":666,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":673,"col":6,"offset":0},"end":{"line":674,"col":6,"offset":24}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":678,"col":1,"offset":0},"end":{"line":680,"col":33,"offset":137}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":681,"col":46,"offset":0},"end":{"line":681,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":682,"col":1,"offset":0},"end":{"line":747,"col":23,"offset":2359}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":747,"col":69,"offset":0},"end":{"line":747,"col":70,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":750,"col":1,"offset":0},"end":{"line":750,"col":61,"offset":60}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":757,"col":6,"offset":0},"end":{"line":758,"col":6,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":761,"col":1,"offset":0},"end":{"line":762,"col":65,"offset":103}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":764,"col":43,"offset":0},"end":{"line":764,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":765,"col":1,"offset":0},"end":{"line":770,"col":65,"offset":250}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":772,"col":43,"offset":0},"end":{"line":772,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":774,"col":1,"offset":0},"end":{"line":776,"col":8,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":778,"col":6,"offset":0},"end":{"line":779,"col":6,"offset":30}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":782,"col":1,"offset":0},"end":{"line":783,"col":74,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":785,"col":43,"offset":0},"end":{"line":785,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":786,"col":1,"offset":0},"end":{"line":832,"col":25,"offset":1581}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":833,"col":60,"offset":0},"end":{"line":833,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":836,"col":5,"offset":0},"end":{"line":838,"col":6,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":842,"col":1,"offset":0},"end":{"line":842,"col":69,"offset":68}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":843,"col":58,"offset":0},"end":{"line":843,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":844,"col":1,"offset":0},"end":{"line":847,"col":69,"offset":166}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":848,"col":58,"offset":0},"end":{"line":848,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":850,"col":1,"offset":0},"end":{"line":851,"col":8,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":5,"offset":0},"end":{"line":861,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":25,"offset":0},"end":{"line":861,"col":26,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":30,"offset":0},"end":{"line":861,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":44,"offset":0},"end":{"line":862,"col":5,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":7,"offset":0},"end":{"line":862,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":27,"offset":0},"end":{"line":862,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":32,"offset":0},"end":{"line":862,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":47,"offset":0},"end":{"line":862,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":10,"offset":0},"end":{"line":863,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":24,"offset":0},"end":{"line":863,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":29,"offset":0},"end":{"line":863,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":55,"offset":0},"end":{"line":863,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":61,"offset":0},"end":{"line":863,"col":62,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":88,"offset":0},"end":{"line":863,"col":89,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":93,"offset":0},"end":{"line":863,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":116,"offset":0},"end":{"line":863,"col":117,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":8,"offset":0},"end":{"line":869,"col":9,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":28,"offset":0},"end":{"line":869,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":33,"offset":0},"end":{"line":886,"col":7,"offset":755}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":889,"col":1,"offset":0},"end":{"line":890,"col":44,"offset":74}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":892,"col":40,"offset":0},"end":{"line":892,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":893,"col":1,"offset":0},"end":{"line":893,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":897,"col":1,"offset":0},"end":{"line":897,"col":58,"offset":57}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":901,"col":6,"offset":0},"end":{"line":901,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":901,"col":26,"offset":0},"end":{"line":901,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":911,"col":5,"offset":0},"end":{"line":912,"col":7,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":32,"offset":0},"end":{"line":912,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":38,"offset":0},"end":{"line":912,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":65,"offset":0},"end":{"line":912,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":70,"offset":0},"end":{"line":912,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":93,"offset":0},"end":{"line":912,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":917,"col":1,"offset":0},"end":{"line":917,"col":52,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":917,"col":74,"offset":0},"end":{"line":917,"col":75,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":918,"col":1,"offset":0},"end":{"line":918,"col":65,"offset":64}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":920,"col":1,"offset":0},"end":{"line":920,"col":52,"offset":51}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":925,"col":5,"offset":0},"end":{"line":926,"col":7,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":32,"offset":0},"end":{"line":926,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":38,"offset":0},"end":{"line":926,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":65,"offset":0},"end":{"line":926,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":70,"offset":0},"end":{"line":926,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":93,"offset":0},"end":{"line":926,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":931,"col":1,"offset":0},"end":{"line":931,"col":41,"offset":40}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":932,"col":1,"offset":0},"end":{"line":932,"col":41,"offset":40}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":934,"col":1,"offset":0},"end":{"line":934,"col":41,"offset":40}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":939,"col":5,"offset":0},"end":{"line":940,"col":7,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":32,"offset":0},"end":{"line":940,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":38,"offset":0},"end":{"line":940,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":65,"offset":0},"end":{"line":940,"col":66,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":70,"offset":0},"end":{"line":940,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":93,"offset":0},"end":{"line":940,"col":94,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":945,"col":1,"offset":0},"end":{"line":945,"col":50,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":945,"col":72,"offset":0},"end":{"line":945,"col":73,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":946,"col":1,"offset":0},"end":{"line":946,"col":51,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":948,"col":1,"offset":0},"end":{"line":948,"col":51,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":953,"col":5,"offset":0},"end":{"line":955,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":959,"col":1,"offset":0},"end":{"line":959,"col":50,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":959,"col":72,"offset":0},"end":{"line":959,"col":73,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":960,"col":1,"offset":0},"end":{"line":963,"col":8,"offset":118}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":972,"col":5,"offset":0},"end":{"line":974,"col":6,"offset":43}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":978,"col":1,"offset":0},"end":{"line":979,"col":71,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":980,"col":43,"offset":0},"end":{"line":980,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":981,"col":1,"offset":0},"end":{"line":988,"col":32,"offset":281}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":995,"col":5,"offset":0},"end":{"line":997,"col":6,"offset":47}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1001,"col":1,"offset":0},"end":{"line":1002,"col":75,"offset":107}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1003,"col":43,"offset":0},"end":{"line":1003,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1004,"col":1,"offset":0},"end":{"line":1019,"col":27,"offset":552}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1020,"col":62,"offset":0},"end":{"line":1020,"col":63,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1024,"col":5,"offset":0},"end":{"line":1025,"col":7,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1025,"col":31,"offset":0},"end":{"line":1025,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1025,"col":36,"offset":0},"end":{"line":1026,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1032,"col":1,"offset":0},"end":{"line":1104,"col":71,"offset":2882}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1115,"col":5,"offset":0},"end":{"line":1117,"col":6,"offset":45}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1120,"col":1,"offset":0},"end":{"line":1124,"col":8,"offset":146}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1134,"col":1,"offset":0},"end":{"line":1134,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1139,"col":6,"offset":0},"end":{"line":1140,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1143,"col":1,"offset":0},"end":{"line":1144,"col":59,"offset":91}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1146,"col":43,"offset":0},"end":{"line":1146,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1147,"col":1,"offset":0},"end":{"line":1152,"col":59,"offset":216}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1154,"col":43,"offset":0},"end":{"line":1154,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1156,"col":1,"offset":0},"end":{"line":1158,"col":8,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1160,"col":6,"offset":0},"end":{"line":1161,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1164,"col":1,"offset":0},"end":{"line":1165,"col":68,"offset":101}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1167,"col":43,"offset":0},"end":{"line":1167,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1168,"col":1,"offset":0},"end":{"line":1184,"col":24,"offset":539}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1188,"col":1,"offset":0},"end":{"line":1188,"col":76,"offset":75}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1190,"col":55,"offset":0},"end":{"line":1190,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1191,"col":1,"offset":0},"end":{"line":1194,"col":76,"offset":183}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1196,"col":55,"offset":0},"end":{"line":1196,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1200,"col":1,"offset":0},"end":{"line":1202,"col":8,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":5,"offset":0},"end":{"line":1212,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":27,"offset":0},"end":{"line":1212,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":32,"offset":0},"end":{"line":1212,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":48,"offset":0},"end":{"line":1213,"col":5,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":7,"offset":0},"end":{"line":1213,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":29,"offset":0},"end":{"line":1213,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":34,"offset":0},"end":{"line":1213,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":51,"offset":0},"end":{"line":1213,"col":52,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":10,"offset":0},"end":{"line":1214,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":26,"offset":0},"end":{"line":1214,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":31,"offset":0},"end":{"line":1214,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":57,"offset":0},"end":{"line":1214,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":63,"offset":0},"end":{"line":1214,"col":64,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":90,"offset":0},"end":{"line":1214,"col":91,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":95,"offset":0},"end":{"line":1214,"col":96,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":118,"offset":0},"end":{"line":1214,"col":119,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1219,"col":7,"offset":0},"end":{"line":1219,"col":30,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1220,"col":51,"offset":0},"end":{"line":1220,"col":55,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1220,"col":73,"offset":0},"end":{"line":1220,"col":77,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1222,"col":58,"offset":0},"end":{"line":1222,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1224,"col":1,"offset":0},"end":{"line":1225,"col":75,"offset":152}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1226,"col":58,"offset":0},"end":{"line":1226,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1228,"col":1,"offset":0},"end":{"line":1228,"col":79,"offset":78}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1233,"col":1,"offset":0},"end":{"line":1234,"col":69,"offset":106}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1238,"col":6,"offset":0},"end":{"line":1238,"col":7,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1238,"col":28,"offset":0},"end":{"line":1238,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1248,"col":5,"offset":0},"end":{"line":1249,"col":7,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1249,"col":31,"offset":0},"end":{"line":1249,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1249,"col":36,"offset":0},"end":{"line":1250,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1254,"col":1,"offset":0},"end":{"line":1255,"col":67,"offset":98}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1257,"col":43,"offset":0},"end":{"line":1257,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1258,"col":1,"offset":0},"end":{"line":1297,"col":26,"offset":1642}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1299,"col":36,"offset":0},"end":{"line":1299,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1302,"col":5,"offset":0},"end":{"line":1303,"col":7,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1303,"col":31,"offset":0},"end":{"line":1303,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1303,"col":36,"offset":0},"end":{"line":1304,"col":6,"offset":34}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1308,"col":1,"offset":0},"end":{"line":1308,"col":66,"offset":65}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1310,"col":53,"offset":0},"end":{"line":1310,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1311,"col":1,"offset":0},"end":{"line":1314,"col":8,"offset":150}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1318,"col":5,"offset":0},"end":{"line":1320,"col":6,"offset":49}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1323,"col":1,"offset":0},"end":{"line":1324,"col":77,"offset":110}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1326,"col":40,"offset":0},"end":{"line":1326,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1327,"col":1,"offset":0},"end":{"line":1370,"col":27,"offset":1646}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1372,"col":41,"offset":0},"end":{"line":1372,"col":42,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h:19:\n `@PRAGMA_SYSTEM_HEADER@` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":19,"col":1,"offset":0},"end":{"line":19,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":17,"offset":16}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":32,"col":1,"offset":0},"end":{"line":32,"col":31,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":37,"col":10,"offset":0},"end":{"line":42,"col":31,"offset":158}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":46,"col":10,"offset":0},"end":{"line":46,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":116,"col":6,"offset":0},"end":{"line":116,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":116,"col":22,"offset":0},"end":{"line":116,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":124,"col":6,"offset":0},"end":{"line":124,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":124,"col":20,"offset":0},"end":{"line":124,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":6,"offset":0},"end":{"line":135,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":20,"offset":0},"end":{"line":135,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":25,"offset":0},"end":{"line":135,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":135,"col":39,"offset":0},"end":{"line":135,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":162,"col":5,"offset":0},"end":{"line":164,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":167,"col":1,"offset":0},"end":{"line":167,"col":66,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":169,"col":54,"offset":0},"end":{"line":169,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":170,"col":1,"offset":0},"end":{"line":170,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":172,"col":1,"offset":0},"end":{"line":175,"col":55,"offset":209}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":177,"col":1,"offset":0},"end":{"line":177,"col":67,"offset":66}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":188,"col":1,"offset":0},"end":{"line":188,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":190,"col":6,"offset":0},"end":{"line":191,"col":6,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":194,"col":1,"offset":0},"end":{"line":194,"col":46,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":194,"col":68,"offset":0},"end":{"line":194,"col":69,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":195,"col":1,"offset":0},"end":{"line":198,"col":8,"offset":110}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":207,"col":5,"offset":0},"end":{"line":209,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":213,"col":1,"offset":0},"end":{"line":213,"col":61,"offset":60}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":214,"col":56,"offset":0},"end":{"line":214,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":215,"col":1,"offset":0},"end":{"line":218,"col":8,"offset":140}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":227,"col":1,"offset":0},"end":{"line":227,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":234,"col":6,"offset":0},"end":{"line":235,"col":6,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":238,"col":1,"offset":0},"end":{"line":244,"col":32,"offset":226}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":251,"col":5,"offset":0},"end":{"line":252,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":252,"col":31,"offset":0},"end":{"line":252,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":252,"col":36,"offset":0},"end":{"line":253,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":257,"col":1,"offset":0},"end":{"line":257,"col":45,"offset":44}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":257,"col":67,"offset":0},"end":{"line":257,"col":68,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":258,"col":1,"offset":0},"end":{"line":261,"col":8,"offset":108}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":265,"col":5,"offset":0},"end":{"line":266,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":266,"col":31,"offset":0},"end":{"line":266,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":266,"col":36,"offset":0},"end":{"line":267,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":271,"col":1,"offset":0},"end":{"line":271,"col":64,"offset":63}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":272,"col":58,"offset":0},"end":{"line":272,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":273,"col":1,"offset":0},"end":{"line":276,"col":8,"offset":146}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":280,"col":5,"offset":0},"end":{"line":282,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":286,"col":1,"offset":0},"end":{"line":286,"col":74,"offset":73}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":287,"col":58,"offset":0},"end":{"line":287,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":288,"col":1,"offset":0},"end":{"line":293,"col":32,"offset":224}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":5,"offset":0},"end":{"line":300,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":26,"offset":0},"end":{"line":300,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":31,"offset":0},"end":{"line":300,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":300,"col":46,"offset":0},"end":{"line":301,"col":5,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":7,"offset":0},"end":{"line":301,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":28,"offset":0},"end":{"line":301,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":33,"offset":0},"end":{"line":301,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":301,"col":49,"offset":0},"end":{"line":301,"col":50,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":10,"offset":0},"end":{"line":302,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":25,"offset":0},"end":{"line":302,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":30,"offset":0},"end":{"line":302,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":56,"offset":0},"end":{"line":302,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":62,"offset":0},"end":{"line":302,"col":63,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":89,"offset":0},"end":{"line":302,"col":90,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":94,"offset":0},"end":{"line":302,"col":95,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":302,"col":117,"offset":0},"end":{"line":302,"col":118,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":7,"offset":0},"end":{"line":307,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":28,"offset":0},"end":{"line":307,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":307,"col":33,"offset":0},"end":{"line":322,"col":4,"offset":629}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":322,"col":6,"offset":0},"end":{"line":322,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":322,"col":27,"offset":0},"end":{"line":322,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":332,"col":1,"offset":0},"end":{"line":332,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":339,"col":6,"offset":0},"end":{"line":340,"col":6,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":343,"col":1,"offset":0},"end":{"line":343,"col":49,"offset":48}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":343,"col":71,"offset":0},"end":{"line":343,"col":72,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":344,"col":1,"offset":0},"end":{"line":344,"col":50,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":346,"col":1,"offset":0},"end":{"line":347,"col":72,"offset":97}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":349,"col":1,"offset":0},"end":{"line":350,"col":8,"offset":58}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":360,"col":5,"offset":0},"end":{"line":361,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":32,"offset":0},"end":{"line":361,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":38,"offset":0},"end":{"line":361,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":65,"offset":0},"end":{"line":361,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":70,"offset":0},"end":{"line":361,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":361,"col":93,"offset":0},"end":{"line":361,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":366,"col":1,"offset":0},"end":{"line":366,"col":52,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":366,"col":74,"offset":0},"end":{"line":366,"col":75,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":367,"col":1,"offset":0},"end":{"line":367,"col":53,"offset":52}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":369,"col":1,"offset":0},"end":{"line":369,"col":53,"offset":52}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":374,"col":5,"offset":0},"end":{"line":375,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":32,"offset":0},"end":{"line":375,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":38,"offset":0},"end":{"line":375,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":65,"offset":0},"end":{"line":375,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":70,"offset":0},"end":{"line":375,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":375,"col":93,"offset":0},"end":{"line":375,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":380,"col":1,"offset":0},"end":{"line":380,"col":65,"offset":64}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":381,"col":55,"offset":0},"end":{"line":381,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":382,"col":1,"offset":0},"end":{"line":382,"col":66,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":384,"col":1,"offset":0},"end":{"line":384,"col":66,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":389,"col":5,"offset":0},"end":{"line":390,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":390,"col":31,"offset":0},"end":{"line":390,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":390,"col":36,"offset":0},"end":{"line":391,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":395,"col":1,"offset":0},"end":{"line":395,"col":79,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":396,"col":55,"offset":0},"end":{"line":396,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":397,"col":1,"offset":0},"end":{"line":405,"col":23,"offset":254}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":410,"col":1,"offset":0},"end":{"line":411,"col":73,"offset":107}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":412,"col":43,"offset":0},"end":{"line":412,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":413,"col":1,"offset":0},"end":{"line":420,"col":32,"offset":294}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":428,"col":5,"offset":0},"end":{"line":429,"col":7,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":429,"col":31,"offset":0},"end":{"line":429,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":429,"col":36,"offset":0},"end":{"line":430,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":434,"col":1,"offset":0},"end":{"line":434,"col":71,"offset":70}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":436,"col":56,"offset":0},"end":{"line":436,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":437,"col":1,"offset":0},"end":{"line":442,"col":7,"offset":194}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":476,"col":5,"offset":0},"end":{"line":477,"col":5,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":481,"col":6,"offset":0},"end":{"line":482,"col":6,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":486,"col":1,"offset":0},"end":{"line":486,"col":66,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":487,"col":52,"offset":0},"end":{"line":487,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":488,"col":1,"offset":0},"end":{"line":491,"col":8,"offset":150}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":495,"col":5,"offset":0},"end":{"line":496,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":496,"col":7,"offset":0},"end":{"line":496,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":496,"col":20,"offset":0},"end":{"line":496,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":500,"col":1,"offset":0},"end":{"line":500,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":507,"col":1,"offset":0},"end":{"line":507,"col":68,"offset":67}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":508,"col":53,"offset":0},"end":{"line":508,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":509,"col":1,"offset":0},"end":{"line":512,"col":68,"offset":171}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":513,"col":53,"offset":0},"end":{"line":513,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":515,"col":1,"offset":0},"end":{"line":516,"col":8,"offset":77}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":540,"col":5,"offset":0},"end":{"line":541,"col":5,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":545,"col":6,"offset":0},"end":{"line":546,"col":6,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":550,"col":32,"offset":0},"end":{"line":550,"col":42,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":558,"col":5,"offset":0},"end":{"line":559,"col":5,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":559,"col":7,"offset":0},"end":{"line":559,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":559,"col":20,"offset":0},"end":{"line":559,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":563,"col":6,"offset":0},"end":{"line":564,"col":6,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":568,"col":34,"offset":0},"end":{"line":568,"col":44,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":571,"col":7,"offset":0},"end":{"line":577,"col":6,"offset":184}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":597,"col":5,"offset":0},"end":{"line":598,"col":7,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":32,"offset":0},"end":{"line":598,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":38,"offset":0},"end":{"line":598,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":65,"offset":0},"end":{"line":598,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":70,"offset":0},"end":{"line":598,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":598,"col":93,"offset":0},"end":{"line":598,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":603,"col":1,"offset":0},"end":{"line":604,"col":70,"offset":103}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":605,"col":43,"offset":0},"end":{"line":605,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":606,"col":1,"offset":0},"end":{"line":607,"col":71,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":609,"col":1,"offset":0},"end":{"line":610,"col":71,"offset":104}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":624,"col":28,"offset":0},"end":{"line":624,"col":40,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":624,"col":52,"offset":0},"end":{"line":624,"col":67,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":628,"col":28,"offset":0},"end":{"line":628,"col":40,"offset":12}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":628,"col":52,"offset":0},"end":{"line":628,"col":67,"offset":15}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":638,"col":5,"offset":0},"end":{"line":639,"col":7,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":639,"col":31,"offset":0},"end":{"line":639,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":639,"col":36,"offset":0},"end":{"line":640,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":644,"col":1,"offset":0},"end":{"line":644,"col":45,"offset":44}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":644,"col":67,"offset":0},"end":{"line":644,"col":68,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":645,"col":1,"offset":0},"end":{"line":648,"col":8,"offset":119}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":652,"col":5,"offset":0},"end":{"line":653,"col":7,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":653,"col":31,"offset":0},"end":{"line":653,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":653,"col":36,"offset":0},"end":{"line":654,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":658,"col":1,"offset":0},"end":{"line":662,"col":8,"offset":137}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":666,"col":1,"offset":0},"end":{"line":666,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":673,"col":6,"offset":0},"end":{"line":674,"col":6,"offset":24}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":678,"col":1,"offset":0},"end":{"line":680,"col":33,"offset":137}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":681,"col":46,"offset":0},"end":{"line":681,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":682,"col":1,"offset":0},"end":{"line":747,"col":23,"offset":2359}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":747,"col":69,"offset":0},"end":{"line":747,"col":70,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":750,"col":1,"offset":0},"end":{"line":750,"col":61,"offset":60}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":757,"col":6,"offset":0},"end":{"line":758,"col":6,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":761,"col":1,"offset":0},"end":{"line":762,"col":65,"offset":103}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":764,"col":43,"offset":0},"end":{"line":764,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":765,"col":1,"offset":0},"end":{"line":770,"col":65,"offset":250}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":772,"col":43,"offset":0},"end":{"line":772,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":774,"col":1,"offset":0},"end":{"line":776,"col":8,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":778,"col":6,"offset":0},"end":{"line":779,"col":6,"offset":30}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":782,"col":1,"offset":0},"end":{"line":783,"col":74,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":785,"col":43,"offset":0},"end":{"line":785,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":786,"col":1,"offset":0},"end":{"line":832,"col":25,"offset":1581}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":833,"col":60,"offset":0},"end":{"line":833,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":836,"col":5,"offset":0},"end":{"line":838,"col":6,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":842,"col":1,"offset":0},"end":{"line":842,"col":69,"offset":68}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":843,"col":58,"offset":0},"end":{"line":843,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":844,"col":1,"offset":0},"end":{"line":847,"col":69,"offset":166}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":848,"col":58,"offset":0},"end":{"line":848,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":850,"col":1,"offset":0},"end":{"line":851,"col":8,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":5,"offset":0},"end":{"line":861,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":25,"offset":0},"end":{"line":861,"col":26,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":30,"offset":0},"end":{"line":861,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":861,"col":44,"offset":0},"end":{"line":862,"col":5,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":7,"offset":0},"end":{"line":862,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":27,"offset":0},"end":{"line":862,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":32,"offset":0},"end":{"line":862,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":862,"col":47,"offset":0},"end":{"line":862,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":10,"offset":0},"end":{"line":863,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":24,"offset":0},"end":{"line":863,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":29,"offset":0},"end":{"line":863,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":55,"offset":0},"end":{"line":863,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":61,"offset":0},"end":{"line":863,"col":62,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":88,"offset":0},"end":{"line":863,"col":89,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":93,"offset":0},"end":{"line":863,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":863,"col":116,"offset":0},"end":{"line":863,"col":117,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":8,"offset":0},"end":{"line":869,"col":9,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":28,"offset":0},"end":{"line":869,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":869,"col":33,"offset":0},"end":{"line":886,"col":7,"offset":755}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":889,"col":1,"offset":0},"end":{"line":890,"col":44,"offset":74}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":892,"col":40,"offset":0},"end":{"line":892,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":893,"col":1,"offset":0},"end":{"line":893,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":897,"col":1,"offset":0},"end":{"line":897,"col":58,"offset":57}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":901,"col":6,"offset":0},"end":{"line":901,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":901,"col":26,"offset":0},"end":{"line":901,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":911,"col":5,"offset":0},"end":{"line":912,"col":7,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":32,"offset":0},"end":{"line":912,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":38,"offset":0},"end":{"line":912,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":65,"offset":0},"end":{"line":912,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":70,"offset":0},"end":{"line":912,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":912,"col":93,"offset":0},"end":{"line":912,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":917,"col":1,"offset":0},"end":{"line":917,"col":52,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":917,"col":74,"offset":0},"end":{"line":917,"col":75,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":918,"col":1,"offset":0},"end":{"line":918,"col":65,"offset":64}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":920,"col":1,"offset":0},"end":{"line":920,"col":52,"offset":51}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":925,"col":5,"offset":0},"end":{"line":926,"col":7,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":32,"offset":0},"end":{"line":926,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":38,"offset":0},"end":{"line":926,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":65,"offset":0},"end":{"line":926,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":70,"offset":0},"end":{"line":926,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":926,"col":93,"offset":0},"end":{"line":926,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":931,"col":1,"offset":0},"end":{"line":931,"col":41,"offset":40}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":932,"col":1,"offset":0},"end":{"line":932,"col":41,"offset":40}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":934,"col":1,"offset":0},"end":{"line":934,"col":41,"offset":40}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":939,"col":5,"offset":0},"end":{"line":940,"col":7,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":32,"offset":0},"end":{"line":940,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":38,"offset":0},"end":{"line":940,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":65,"offset":0},"end":{"line":940,"col":66,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":70,"offset":0},"end":{"line":940,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":940,"col":93,"offset":0},"end":{"line":940,"col":94,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":945,"col":1,"offset":0},"end":{"line":945,"col":50,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":945,"col":72,"offset":0},"end":{"line":945,"col":73,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":946,"col":1,"offset":0},"end":{"line":946,"col":51,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":948,"col":1,"offset":0},"end":{"line":948,"col":51,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":953,"col":5,"offset":0},"end":{"line":955,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":959,"col":1,"offset":0},"end":{"line":959,"col":50,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":959,"col":72,"offset":0},"end":{"line":959,"col":73,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":960,"col":1,"offset":0},"end":{"line":963,"col":8,"offset":118}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":972,"col":5,"offset":0},"end":{"line":974,"col":6,"offset":43}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":978,"col":1,"offset":0},"end":{"line":979,"col":71,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":980,"col":43,"offset":0},"end":{"line":980,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":981,"col":1,"offset":0},"end":{"line":988,"col":32,"offset":281}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":995,"col":5,"offset":0},"end":{"line":997,"col":6,"offset":47}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1001,"col":1,"offset":0},"end":{"line":1002,"col":75,"offset":107}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1003,"col":43,"offset":0},"end":{"line":1003,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1004,"col":1,"offset":0},"end":{"line":1019,"col":27,"offset":552}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1020,"col":62,"offset":0},"end":{"line":1020,"col":63,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1024,"col":5,"offset":0},"end":{"line":1025,"col":7,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1025,"col":31,"offset":0},"end":{"line":1025,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1025,"col":36,"offset":0},"end":{"line":1026,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1032,"col":1,"offset":0},"end":{"line":1104,"col":71,"offset":2882}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1115,"col":5,"offset":0},"end":{"line":1117,"col":6,"offset":45}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1120,"col":1,"offset":0},"end":{"line":1124,"col":8,"offset":146}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1134,"col":1,"offset":0},"end":{"line":1134,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1139,"col":6,"offset":0},"end":{"line":1140,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1143,"col":1,"offset":0},"end":{"line":1144,"col":59,"offset":91}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1146,"col":43,"offset":0},"end":{"line":1146,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1147,"col":1,"offset":0},"end":{"line":1152,"col":59,"offset":216}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1154,"col":43,"offset":0},"end":{"line":1154,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1156,"col":1,"offset":0},"end":{"line":1158,"col":8,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1160,"col":6,"offset":0},"end":{"line":1161,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1164,"col":1,"offset":0},"end":{"line":1165,"col":68,"offset":101}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1167,"col":43,"offset":0},"end":{"line":1167,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1168,"col":1,"offset":0},"end":{"line":1184,"col":24,"offset":539}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1188,"col":1,"offset":0},"end":{"line":1188,"col":76,"offset":75}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1190,"col":55,"offset":0},"end":{"line":1190,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1191,"col":1,"offset":0},"end":{"line":1194,"col":76,"offset":183}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1196,"col":55,"offset":0},"end":{"line":1196,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1200,"col":1,"offset":0},"end":{"line":1202,"col":8,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":5,"offset":0},"end":{"line":1212,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":27,"offset":0},"end":{"line":1212,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":32,"offset":0},"end":{"line":1212,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1212,"col":48,"offset":0},"end":{"line":1213,"col":5,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":7,"offset":0},"end":{"line":1213,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":29,"offset":0},"end":{"line":1213,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":34,"offset":0},"end":{"line":1213,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1213,"col":51,"offset":0},"end":{"line":1213,"col":52,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":10,"offset":0},"end":{"line":1214,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":26,"offset":0},"end":{"line":1214,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":31,"offset":0},"end":{"line":1214,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":57,"offset":0},"end":{"line":1214,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":63,"offset":0},"end":{"line":1214,"col":64,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":90,"offset":0},"end":{"line":1214,"col":91,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":95,"offset":0},"end":{"line":1214,"col":96,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1214,"col":118,"offset":0},"end":{"line":1214,"col":119,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1219,"col":7,"offset":0},"end":{"line":1219,"col":30,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1220,"col":51,"offset":0},"end":{"line":1220,"col":55,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1220,"col":73,"offset":0},"end":{"line":1220,"col":77,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1222,"col":58,"offset":0},"end":{"line":1222,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1224,"col":1,"offset":0},"end":{"line":1225,"col":75,"offset":152}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1226,"col":58,"offset":0},"end":{"line":1226,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1228,"col":1,"offset":0},"end":{"line":1228,"col":79,"offset":78}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1233,"col":1,"offset":0},"end":{"line":1234,"col":69,"offset":106}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1238,"col":6,"offset":0},"end":{"line":1238,"col":7,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1238,"col":28,"offset":0},"end":{"line":1238,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1248,"col":5,"offset":0},"end":{"line":1249,"col":7,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1249,"col":31,"offset":0},"end":{"line":1249,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1249,"col":36,"offset":0},"end":{"line":1250,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1254,"col":1,"offset":0},"end":{"line":1255,"col":67,"offset":98}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1257,"col":43,"offset":0},"end":{"line":1257,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1258,"col":1,"offset":0},"end":{"line":1297,"col":26,"offset":1642}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1299,"col":36,"offset":0},"end":{"line":1299,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1302,"col":5,"offset":0},"end":{"line":1303,"col":7,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1303,"col":31,"offset":0},"end":{"line":1303,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1303,"col":36,"offset":0},"end":{"line":1304,"col":6,"offset":34}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1308,"col":1,"offset":0},"end":{"line":1308,"col":66,"offset":65}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1310,"col":53,"offset":0},"end":{"line":1310,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1311,"col":1,"offset":0},"end":{"line":1314,"col":8,"offset":150}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1318,"col":5,"offset":0},"end":{"line":1320,"col":6,"offset":49}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1323,"col":1,"offset":0},"end":{"line":1324,"col":77,"offset":110}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1326,"col":40,"offset":0},"end":{"line":1326,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1327,"col":1,"offset":0},"end":{"line":1370,"col":27,"offset":1646}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","start":{"line":1372,"col":41,"offset":0},"end":{"line":1372,"col":42,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":31,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":153,"col":1,"offset":0},"end":{"line":153,"col":24,"offset":23}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":22,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":161,"col":1,"offset":0},"end":{"line":161,"col":24,"offset":23}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h:18:\n `@GUARD_PREFIX@_ERRNO_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":31,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":153,"col":1,"offset":0},"end":{"line":153,"col":24,"offset":23}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":157,"col":1,"offset":0},"end":{"line":157,"col":22,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","start":{"line":161,"col":1,"offset":0},"end":{"line":161,"col":24,"offset":23}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":31,"offset":113}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":32,"offset":22}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":176,"col":1,"offset":0},"end":{"line":176,"col":20,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":179,"col":1,"offset":0},"end":{"line":179,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":181,"col":1,"offset":0},"end":{"line":181,"col":4,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h:18:\n `@GUARD_PREFIX@_FLOAT_H` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":18,"col":10,"offset":0},"end":{"line":18,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":23,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":23,"col":1,"offset":0},"end":{"line":26,"col":31,"offset":113}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":28,"col":10,"offset":0},"end":{"line":28,"col":32,"offset":22}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":176,"col":1,"offset":0},"end":{"line":176,"col":20,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":179,"col":1,"offset":0},"end":{"line":179,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","start":{"line":181,"col":1,"offset":0},"end":{"line":181,"col":4,"offset":3}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.h:1:\n `/* Invalid parameter handler for MSVC runtime libraries.\n   Copyright (C) 2011-2017 Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License along\n   with this program; if not, see <http://www.gnu.org/licenses/>.  */\n\n#ifndef _MSVC_INVAL_H\n#define _MSVC_INVAL_H\n\n/* With MSVC runtime libraries with the \"invalid parameter handler\" concept,\n   functions like fprintf(), dup2(), or close() crash when the caller passes\n   an invalid argument.  But POSIX wants error codes (such as EINVAL or EBADF)\n   instead.\n   This file defines macros that turn such an invalid parameter notification\n   into a non-local exit.  An error code can then be produced at the target\n   of this exit.  You can thus write code like\n\n     TRY_MSVC_INVAL\n       {\n         <Code that can trigger an invalid parameter notification\n          but does not do 'return', 'break', 'continue', nor 'goto'.>\n       }\n     CATCH_MSVC_INVAL\n       {\n         <Code that handles an invalid parameter notification\n          but does not do 'return', 'break', 'continue', nor 'goto'.>\n       }\n     DONE_MSVC_INVAL;\n\n   This entire block expands to a single statement.\n\n   The handling of invalid parameters can be done in three ways:\n\n     * The default way, which is reasonable for programs (not libraries):\n       AC_DEFINE([MSVC_INVALID_PARAMETER_HANDLING], [DEFAULT_HANDLING])\n\n     * The way for libraries that make \"hairy\" calls (like close(-1), or\n       fclose(fp) where fileno(fp) is closed, or simply getdtablesize()):\n       AC_DEFINE([MSVC_INVALID_PARAMETER_HANDLING], [HAIRY_LIBRARY_HANDLING])\n\n     * The way for libraries that make no \"hairy\" calls:\n       AC_DEFINE([MSVC_INVALID_PARAMETER_HANDLING], [SANE_LIBRARY_HANDLING])\n */\n\n#define DEFAULT_HANDLING       0\n#define HAIRY_LIBRARY_HANDLING 1\n#define SANE_LIBRARY_HANDLING  2\n\n#if HAVE_MSVC_INVALID_PARAMETER_HANDLER \\\n    && !(MSVC_INVALID_PARAMETER_HANDLING == SANE_LIBRARY_HANDLING)\n/* A native Windows platform with the \"invalid parameter handler\" concept,\n   and either DEFAULT_HANDLING or HAIRY_LIBRARY_HANDLING.  */\n\n# if MSVC_INVALID_PARAMETER_HANDLING == DEFAULT_HANDLING\n/* Default handling.  */\n\n#  ifdef __cplusplus\nextern \"C\" {\n#  endif\n\n/* Ensure that the invalid parameter handler in installed that just returns.\n   Because we assume no other part of the program installs a different\n   invalid parameter handler, this solution is multithread-safe.  */\nextern void gl_msvc_inval_ensure_handler (void);\n\n#  ifdef __cplusplus\n}\n#  endif\n\n#  define TRY_MSVC_INVAL \\\n     do                                                                        \\\n       {                                                                       \\\n         gl_msvc_inval_ensure_handler ();                                      \\\n         if (1)\n#  define CATCH_MSVC_INVAL \\\n         else\n#  define DONE_MSVC_INVAL \\\n       }                                                                       \\\n     while (0)\n\n# else\n/* Handling for hairy libraries.  */\n\n#  include <excpt.h>\n\n/* Gnulib can define its own status codes, as described in the page\n   \"Raising Software Exceptions\" on microsoft.com\n   <http://msdn.microsoft.com/en-us/library/het71c37.aspx>.\n   Our status codes are composed of\n     - 0xE0000000, mandatory for all user-defined status codes,\n     - 0x474E550, a API identifier (\"GNU\"),\n     - 0, 1, 2, ..., used to distinguish different status codes from the\n       same API.  */\n#  define STATUS_GNULIB_INVALID_PARAMETER (0xE0000000 + 0x474E550 + 0)\n\n#  if defined _MSC_VER\n/* A compiler that supports __try/__except, as described in the page\n   \"try-except statement\" on microsoft.com\n   <http://msdn.microsoft.com/en-us/library/s58ftw19.aspx>.\n   With __try/__except, we can use the multithread-safe exception handling.  */\n\n#   ifdef __cplusplus\nextern \"C\" {\n#   endif\n\n/* Ensure that the invalid parameter handler in installed that raises a\n   software exception with code STATUS_GNULIB_INVALID_PARAMETER.\n   Because we assume no other part of the program installs a different\n   invalid parameter handler, this solution is multithread-safe.  */\nextern void gl_msvc_inval_ensure_handler (void);\n\n#   ifdef __cplusplus\n}\n#   endif\n\n#   define TRY_MSVC_INVAL \\\n      do                                                                       \\\n        {                                                                      \\\n          gl_msvc_inval_ensure_handler ();                                     \\\n          __try\n#   define CATCH_MSVC_INVAL \\\n          __except (GetExceptionCode () == STATUS_GNULIB_INVALID_PARAMETER     \\\n                    ? EXCEPTION_EXECUTE_HANDLER                                \\\n                    : EXCEPTION_CONTINUE_SEARCH)\n#   define DONE_MSVC_INVAL \\\n        }                                                                      \\\n      while (0)\n\n#  else\n/* Any compiler.\n   We can only use setjmp/longjmp.  */\n\n#   include <setjmp.h>\n\n#   ifdef __cplusplus\nextern \"C\" {\n#   endif\n\nstruct gl_msvc_inval_per_thread\n{\n  /* The restart that will resume execution at the code between\n     CATCH_MSVC_INVAL and DONE_MSVC_INVAL.  It is enabled only between\n     TRY_MSVC_INVAL and CATCH_MSVC_INVAL.  */\n  jmp_buf restart;\n\n  /* Tells whether the contents of restart is valid.  */\n  int restart_valid;\n};\n\n/* Ensure that the invalid parameter handler in installed that passes\n   control to the gl_msvc_inval_restart if it is valid, or raises a\n   software exception with code STATUS_GNULIB_INVALID_PARAMETER otherwise.\n   Because we assume no other part of the program installs a different\n   invalid parameter handler, this solution is multithread-safe.  */\nextern void gl_msvc_inval_ensure_handler (void);\n\n/* Return a pointer to the per-thread data for the current thread.  */\nextern struct gl_msvc_inval_per_thread *gl_msvc_inval_current (void);\n\n#   ifdef __cplusplus\n}\n#   endif\n\n#   define TRY_MSVC_INVAL \\\n      do                                                                       \\\n        {                                                                      \\\n          struct gl_msvc_inval_per_thread *msvc_inval_current;                 \\\n          gl_msvc_inval_ensure_handler ();                                     \\\n          msvc_inval_current = gl_msvc_inval_current ();                       \\\n          /* First, initialize gl_msvc_inval_restart.  */                      \\\n          if (setjmp (msvc_inval_current->restart) == 0)                       \\\n            {                                                                  \\\n              /* Then, mark it as valid.  */                                   \\\n              msvc_inval_current->restart_valid = 1;\n#   define CATCH_MSVC_INVAL \\\n              /* Execution completed.                                          \\\n                 Mark gl_msvc_inval_restart as invalid.  */                    \\\n              msvc_inval_current->restart_valid = 0;                           \\\n            }                                                                  \\\n          else                                                                 \\\n            {                                                                  \\\n              /* Execution triggered an invalid parameter notification.        \\\n                 Mark gl_msvc_inval_restart as invalid.  */                    \\\n              msvc_inval_current->restart_valid = 0;\n#   define DONE_MSVC_INVAL \\\n            }                                                                  \\\n        }                                                                      \\\n      while (0)\n\n#  endif\n\n# endif\n\n#else\n/* A platform that does not need to the invalid parameter handler,\n   or when SANE_LIBRARY_HANDLING is desired.  */\n\n/* The braces here avoid GCC warnings like\n   \"warning: suggest explicit braces to avoid ambiguous 'else'\".  */\n# define TRY_MSVC_INVAL \\\n    do                                                                         \\\n      {                                                                        \\\n        if (1)\n# define CATCH_MSVC_INVAL \\\n        else\n# define DONE_MSVC_INVAL \\\n      }                                                                        \\\n    while (0)\n\n#endif\n\n#endif /* _MSVC_INVAL_H */\n` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":321,"col":1,"offset":0},"end":{"line":321,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c:155:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":155,"col":1,"offset":0},"end":{"line":155,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","start":{"line":321,"col":1,"offset":0},"end":{"line":321,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":58,"col":4,"offset":0},"end":{"line":58,"col":32,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":142,"col":8,"offset":0},"end":{"line":142,"col":12,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":193,"col":9,"offset":0},"end":{"line":193,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":195,"col":14,"offset":0},"end":{"line":195,"col":15,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":198,"col":8,"offset":0},"end":{"line":198,"col":10,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":199,"col":8,"offset":0},"end":{"line":199,"col":10,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":205,"col":22,"offset":0},"end":{"line":205,"col":25,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c:58:\n `must know STACK_DIRECTION at` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":58,"col":4,"offset":0},"end":{"line":58,"col":32,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":142,"col":8,"offset":0},"end":{"line":142,"col":12,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":193,"col":9,"offset":0},"end":{"line":193,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":195,"col":14,"offset":0},"end":{"line":195,"col":15,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":198,"col":8,"offset":0},"end":{"line":198,"col":10,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":199,"col":8,"offset":0},"end":{"line":199,"col":10,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","start":{"line":205,"col":22,"offset":0},"end":{"line":205,"col":25,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":622,"col":7,"offset":0},"end":{"line":622,"col":26,"offset":19}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":625,"col":1,"offset":0},"end":{"line":625,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":628,"col":5,"offset":0},"end":{"line":628,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c:622:\n `output_is_special =` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":622,"col":7,"offset":0},"end":{"line":622,"col":26,"offset":19}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":625,"col":1,"offset":0},"end":{"line":625,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","start":{"line":628,"col":5,"offset":0},"end":{"line":628,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":765,"col":13,"offset":0},"end":{"line":765,"col":24,"offset":11}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1262,"col":7,"offset":0},"end":{"line":1262,"col":25,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1265,"col":1,"offset":0},"end":{"line":1265,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1268,"col":5,"offset":0},"end":{"line":1268,"col":6,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c:151:\n `#endif` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":151,"col":1,"offset":0},"end":{"line":151,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":765,"col":13,"offset":0},"end":{"line":765,"col":24,"offset":11}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1262,"col":7,"offset":0},"end":{"line":1262,"col":25,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1265,"col":1,"offset":0},"end":{"line":1265,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","start":{"line":1268,"col":5,"offset":0},"end":{"line":1268,"col":6,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":36,"col":20,"offset":0},"end":{"line":36,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":36,"col":43,"offset":0},"end":{"line":36,"col":46,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":37,"col":14,"offset":0},"end":{"line":37,"col":17,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c:36:\n `file` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":36,"col":20,"offset":0},"end":{"line":36,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":36,"col":43,"offset":0},"end":{"line":36,"col":46,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","start":{"line":37,"col":14,"offset":0},"end":{"line":37,"col":17,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":228,"col":34,"offset":0},"end":{"line":228,"col":39,"offset":5}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":231,"col":26,"offset":0},"end":{"line":231,"col":29,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":233,"col":30,"offset":0},"end":{"line":233,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":331,"col":1,"offset":0},"end":{"line":331,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":334,"col":46,"offset":0},"end":{"line":334,"col":49,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":335,"col":46,"offset":0},"end":{"line":335,"col":49,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":356,"col":31,"offset":0},"end":{"line":356,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":375,"col":34,"offset":0},"end":{"line":375,"col":37,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":376,"col":32,"offset":0},"end":{"line":376,"col":35,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":417,"col":1,"offset":0},"end":{"line":417,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":419,"col":13,"offset":0},"end":{"line":419,"col":17,"offset":4}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":421,"col":49,"offset":0},"end":{"line":421,"col":50,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c:228:\n `group` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":228,"col":34,"offset":0},"end":{"line":228,"col":39,"offset":5}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":231,"col":26,"offset":0},"end":{"line":231,"col":29,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":233,"col":30,"offset":0},"end":{"line":233,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":331,"col":1,"offset":0},"end":{"line":331,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":334,"col":46,"offset":0},"end":{"line":334,"col":49,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":335,"col":46,"offset":0},"end":{"line":335,"col":49,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":356,"col":31,"offset":0},"end":{"line":356,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":375,"col":34,"offset":0},"end":{"line":375,"col":37,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":376,"col":32,"offset":0},"end":{"line":376,"col":35,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":417,"col":1,"offset":0},"end":{"line":417,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":419,"col":13,"offset":0},"end":{"line":419,"col":17,"offset":4}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","start":{"line":421,"col":49,"offset":0},"end":{"line":421,"col":50,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":75,"col":40,"offset":0},"end":{"line":75,"col":43,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":98,"col":37,"offset":0},"end":{"line":98,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":107,"col":1,"offset":0},"end":{"line":110,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":110,"col":14,"offset":0},"end":{"line":110,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":135,"col":1,"offset":0},"end":{"line":135,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":4,"offset":10}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":140,"col":124,"offset":0},"end":{"line":140,"col":125,"offset":1}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":143,"col":1,"offset":0},"end":{"line":145,"col":8,"offset":20}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":145,"col":14,"offset":0},"end":{"line":145,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":155,"col":1,"offset":0},"end":{"line":158,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":158,"col":14,"offset":0},"end":{"line":158,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":185,"col":1,"offset":0},"end":{"line":188,"col":8,"offset":42}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":188,"col":14,"offset":0},"end":{"line":188,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":202,"col":1,"offset":0},"end":{"line":205,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":205,"col":14,"offset":0},"end":{"line":205,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":211,"col":1,"offset":0},"end":{"line":214,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":214,"col":14,"offset":0},"end":{"line":214,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":222,"col":1,"offset":0},"end":{"line":224,"col":8,"offset":40}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":224,"col":14,"offset":0},"end":{"line":224,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":234,"col":1,"offset":0},"end":{"line":236,"col":8,"offset":41}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":236,"col":14,"offset":0},"end":{"line":236,"col":17,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":249,"col":1,"offset":0},"end":{"line":249,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":252,"col":1,"offset":0},"end":{"line":252,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c:75:\n `\"<\"` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":75,"col":40,"offset":0},"end":{"line":75,"col":43,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":94,"col":1,"offset":0},"end":{"line":94,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":98,"col":37,"offset":0},"end":{"line":98,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":107,"col":1,"offset":0},"end":{"line":110,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":110,"col":14,"offset":0},"end":{"line":110,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":135,"col":1,"offset":0},"end":{"line":135,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":138,"col":1,"offset":0},"end":{"line":139,"col":4,"offset":10}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":140,"col":124,"offset":0},"end":{"line":140,"col":125,"offset":1}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":143,"col":1,"offset":0},"end":{"line":145,"col":8,"offset":20}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":145,"col":14,"offset":0},"end":{"line":145,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":155,"col":1,"offset":0},"end":{"line":158,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":158,"col":14,"offset":0},"end":{"line":158,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":185,"col":1,"offset":0},"end":{"line":188,"col":8,"offset":42}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":188,"col":14,"offset":0},"end":{"line":188,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":202,"col":1,"offset":0},"end":{"line":205,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":205,"col":14,"offset":0},"end":{"line":205,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":211,"col":1,"offset":0},"end":{"line":214,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":214,"col":14,"offset":0},"end":{"line":214,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":222,"col":1,"offset":0},"end":{"line":224,"col":8,"offset":40}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":224,"col":14,"offset":0},"end":{"line":224,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":234,"col":1,"offset":0},"end":{"line":236,"col":8,"offset":41}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":236,"col":14,"offset":0},"end":{"line":236,"col":17,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":249,"col":1,"offset":0},"end":{"line":249,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","start":{"line":252,"col":1,"offset":0},"end":{"line":252,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":208,"col":12,"offset":0},"end":{"line":211,"col":6,"offset":234}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":308,"col":39,"offset":0},"end":{"line":308,"col":42,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":311,"col":57,"offset":0},"end":{"line":311,"col":60,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":319,"col":39,"offset":0},"end":{"line":319,"col":42,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":322,"col":57,"offset":0},"end":{"line":322,"col":60,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":370,"col":1,"offset":0},"end":{"line":370,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":411,"col":42,"offset":0},"end":{"line":411,"col":50,"offset":8}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":422,"col":48,"offset":0},"end":{"line":423,"col":26,"offset":42}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":424,"col":31,"offset":0},"end":{"line":424,"col":49,"offset":18}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":427,"col":57,"offset":0},"end":{"line":427,"col":63,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":428,"col":52,"offset":0},"end":{"line":428,"col":73,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":438,"col":56,"offset":0},"end":{"line":439,"col":34,"offset":50}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":441,"col":22,"offset":0},"end":{"line":441,"col":50,"offset":28}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":562,"col":41,"offset":0},"end":{"line":562,"col":44,"offset":3}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":845,"col":47,"offset":0},"end":{"line":845,"col":53,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":847,"col":47,"offset":0},"end":{"line":847,"col":68,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":850,"col":44,"offset":0},"end":{"line":850,"col":50,"offset":6}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":852,"col":44,"offset":0},"end":{"line":852,"col":65,"offset":21}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":892,"col":58,"offset":0},"end":{"line":892,"col":60,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1313,"col":58,"offset":0},"end":{"line":1313,"col":60,"offset":2}},{"path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1337,"col":58,"offset":0},"end":{"line":1337,"col":60,"offset":2}}]],"message":"Syntax error at line /home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c:208:\n `}                                                                  \\\n       }                                                                      \\\n     while (0)                                                                \\\n    )` was unexpected","path":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","spans":[{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":208,"col":12,"offset":0},"end":{"line":211,"col":6,"offset":234}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":308,"col":39,"offset":0},"end":{"line":308,"col":42,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":311,"col":57,"offset":0},"end":{"line":311,"col":60,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":319,"col":39,"offset":0},"end":{"line":319,"col":42,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":322,"col":57,"offset":0},"end":{"line":322,"col":60,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":370,"col":1,"offset":0},"end":{"line":370,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":411,"col":42,"offset":0},"end":{"line":411,"col":50,"offset":8}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":422,"col":48,"offset":0},"end":{"line":423,"col":26,"offset":42}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":424,"col":31,"offset":0},"end":{"line":424,"col":49,"offset":18}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":427,"col":57,"offset":0},"end":{"line":427,"col":63,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":428,"col":52,"offset":0},"end":{"line":428,"col":73,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":438,"col":56,"offset":0},"end":{"line":439,"col":34,"offset":50}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":441,"col":22,"offset":0},"end":{"line":441,"col":50,"offset":28}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":562,"col":41,"offset":0},"end":{"line":562,"col":44,"offset":3}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":845,"col":47,"offset":0},"end":{"line":845,"col":53,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":847,"col":47,"offset":0},"end":{"line":847,"col":68,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":850,"col":44,"offset":0},"end":{"line":850,"col":50,"offset":6}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":852,"col":44,"offset":0},"end":{"line":852,"col":65,"offset":21}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":892,"col":58,"offset":0},"end":{"line":892,"col":60,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1313,"col":58,"offset":0},"end":{"line":1313,"col":60,"offset":2}},{"file":"/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","start":{"line":1337,"col":58,"offset":0},"end":{"line":1337,"col":60,"offset":2}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.better.handle.device.nodes.cramfs.565474.patch/src/copyout.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.fatal.exits.mt.576637.patch/src/mt.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/rtapelib.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/sysdep.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/lib/sysdep.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.other.bugs.patch/src/main.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/lib/rtapelib.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/copyin.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/idcache.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/makepath.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32-compat.patch/src/userspec.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/gnu/fcntl.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.out-pass.mode.579533.patch/lib/system.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/fix.win32.undef.stat.patch/gnu/sys_stat.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/.pc/revert-CVE-2015-1197-handling.patch/src/copyin.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/build-aux/snippet/_Noreturn.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/build-aux/snippet/arg-nonnull.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/build-aux/snippet/c++defs.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/build-aux/snippet/warn-on-use.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alignof.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/alloca.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/anytostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argmatch.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-ba.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-eexst.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fmtstream.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-fs-xinl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-help.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-namefrob.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-parse.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-pin.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-pv.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-pvh.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-version-etc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-version-etc.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp-xinl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/argp.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/asnprintf.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/assure.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/at-func.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/basename-lgpl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/basename.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/bitrotate.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-ctype.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-strcase.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-strcasecmp.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-strcaseeq.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/c-strncasecmp.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chdir-long.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/chown.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/cloexec.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/cloexec.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close-stream.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close-stream.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/close.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/closedir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/closeout.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/closeout.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent--.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent-private.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent-safer.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirent.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirfd.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname-lgpl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dirname.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dosname.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup-safer.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/dup2.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/errno.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/error.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/exitfail.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/exitfail.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchdir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fchown-stub.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fcntl.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fd-hook.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fd-hook.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fd-safer.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fdopendir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fileblocks.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filename.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat-lgpl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/filenamecat.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/flexmember.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float+.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/float.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fnmatch_loop.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fpending.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fpending.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseek.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fseeko.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/fstatat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/full-write.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/full-write.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd-lgpl.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getcwd.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdelim.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getdtablesize.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getline.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt1.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getopt_int.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/getprogname.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/gettext.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/gettime.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/gettimeofday.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hard-locale.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/hash.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/imaxtostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/intprops.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttostr.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/inttypes.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/itold.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lchown.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/limits.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/localcharset.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lseek.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/lstat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/malloca.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbrtowc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsinit.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-impl.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs-state.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mbsrtowcs.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/memchr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mempcpy.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/memrchr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/minmax.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime-internal.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/mktime.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-inval.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/msvc-nothrow.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/obstack.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/offtostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/open.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-die.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-priv.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat-proc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/openat.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir-safer.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/opendir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/parse-datetime.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/pathmax.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/pipe-safer.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-args.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/printf-parse.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/progname.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/progname.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quote.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/quotearg.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/raise.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/rawmemchr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/read.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/readdir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/realloc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/rewinddir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/safe-read.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/safe-read.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/safe-write.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/safe-write.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/save-cwd.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/savedir.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/setenv.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/signal.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sleep.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat-time.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdalign.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdarg.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdbool.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stddef.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdint.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio-impl.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdio.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stdlib.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stpcpy.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strcasecmp.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strchrnul.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strdup.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/streq.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror-override.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror-override.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strerror.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strftime.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/string.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strings.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/stripslash.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strncasecmp.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strndup.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strnlen.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strnlen1.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strnlen1.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/strtol.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_stat.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_time.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sys_types.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/sysexits.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time-internal.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_r.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/time_rz.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timegm.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/timespec.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/uinttostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/umaxtostr.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd--.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd-safer.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unistd.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unlocked-io.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/unsetenv.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimens.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/utimensat.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vasnprintf.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vasnprintf.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/verify.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc-fsf.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/version-etc.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/vsnprintf.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wchar.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype-h.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/wctype.in.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/write.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc-die.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc-oversized.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xalloc.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xgetcwd.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xgetcwd.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xmalloc.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xsize.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xstrndup.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/gnu/xstrndup.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxerror.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxexit-status.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxexit.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxlib.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/paxnames.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rmt.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/rtapelib.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/sysdep.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/sysdep.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/system-ioctl.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/lib/system.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/rmt/rmt.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyin.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copyout.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/copypass.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/cpio.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/cpiohdr.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/defer.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/dstring.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/extern.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/fatal.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/filemode.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/filetypes.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/global.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/idcache.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/main.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/makepath.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/mt.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/safe-stat.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tar.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/tarhdr.h","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/userspec.c","/home/capstone/Desktop/root/cpio-2.13+dfsg/src/util.c"]},"interfile_languages_used":[],"skipped_rules":[]}