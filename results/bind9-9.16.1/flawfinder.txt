/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12686:8:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
	ret = chown(dbpath_copy, ns_os_uid(), -1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:611:8:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
			    chown(filename, runas_pw->pw_uid,
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:43:6:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
	n = chmod(PATH, 0);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:107:16:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
	unsigned long gets;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:200:15:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
	unsigned int gets; /*%< # of requests to this pool */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:577:36:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
		INSIST(ctx->stats[ctx->max_size].gets != 0U);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:604:26:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
	INSIST(ctx->stats[size].gets != 0U);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:691:36:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
		INSIST(ctx->stats[ctx->max_size].gets > 0U);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:694:27:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
		INSIST(ctx->stats[size].gets > 0U);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:882:22:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
			if (ctx->stats[i].gets != 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:887:39:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
					ctx, ctx->name, i, ctx->stats[i].gets);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:1203:21:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
			s->totalgets, s->gets);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:1236:27:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
			pool->fillcount, pool->gets,
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/fsaccess.c:80:6:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
	if (chmod(path, mode) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4361:6:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
	if (chmod(path, perm) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4369:6:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
	if (chown(path, owner, group) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:264:8:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
			i = chmod(templet, 0700);
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/named-checkconf.c:658:4:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			printf(VERSION "\n");
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/named-checkzone.c:356:4:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			printf(VERSION "\n");
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/util.c:31:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/util.c:43:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:219:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:235:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:260:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:842:6:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	if (access(filename, R_OK) != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2581:2:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vprintf(format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2597:3:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vprintf(format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2612:3:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vprintf(format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:196:2:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vprintf(format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:208:3:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vprintf(format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:403:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:415:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:442:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:461:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-revoke.c:224:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		if (access(newname, F_OK) == 0 && !force) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2727:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(out, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-verify.c:86:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stdout, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:80:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:109:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:162:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:183:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:295:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:326:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:2017:12:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	new_len = vsnprintf(ctx->cstr + cur_len, ctx->cstr_size - cur_len, p,
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:2036:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(ctx->cstr + cur_len, ctx->cstr_size - cur_len, p, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:8282:6:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	if (access(server->bindkeysfile, R_OK) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:1096:9:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
		(void)snprintf(signedname, signedlen, "%s" SIGNED, filename);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:270:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:281:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:292:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:304:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:145:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:406:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-list.c:143:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/util.c:31:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/util.c:43:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/cfg_test.c:37:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/adb_test.c:72:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:28:17:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	isc_fsaccess_t access;
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:52:46:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
			 ISC_FSACCESS_READ | ISC_FSACCESS_WRITE, &access);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:54:26:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	printf("fsaccess=%u\n", access);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:56:59:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	isc_fsaccess_add(ISC_FSACCESS_OTHER, ISC_FSACCESS_READ, &access);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:58:26:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	printf("fsaccess=%u\n", access);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:60:34:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	result = isc_fsaccess_set(PATH, access);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/log_test.c:85:4:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			fprintf(stderr, usage, progname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/log_test.c:95:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stderr, usage, progname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/log_test.c:316:6:  [4] (shell) system:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
	if (system("head " TEST_FILE "*; rm -f " TEST_FILE "*") != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/log_test.c:329:6:  [4] (shell) system:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
	if (system("tail -2") != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:170:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/find.c:150:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/genrsa.c:195:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/login.c:147:24:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = (CK_UTF8CHAR *)getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:243:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:189:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sign.c:237:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/verify.c:183:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
		pin = getpass("Enter Pin: ");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:273:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(state->zone_name, argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:275:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
		sprintf(state->zone_name, "%s.", argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:284:6:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
	n = sprintf(soa_data, "%s hostmaster%s%s 123 900 600 86400 3600",
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rsabigexponent/bigkey.c:64:4:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			fprintf(stderr,                                       \
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/dnstap-read.c:80:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:907:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/named-rrchecker.c:61:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:44:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:587:4:  [4] (shell) system:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
			system(Vcredist_x86);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1290:8:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	(void)vsnprintf(buf, sizeof(buf), format, va);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1385:8:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	(void)vsnprintf(buf, sizeof(buf), format, va);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1401:8:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	(void)vsnprintf(buf, sizeof(buf), format, va);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1419:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(buf, (LPTSTR)msgBuf);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:194:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stderr,                \
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:209:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stderr,                      \
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:226:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stderr,                      \
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:379:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(dns_key.data, zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:570:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(keyStr, zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:572:2:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
	strcat(keyStr, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:183:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(out, (char *)&tmpPtr[i + 1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:206:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(out, (char *)&tmpPtr[i]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:297:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(tmpPath, cd->basedir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:326:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, cd->xfrdir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:328:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:330:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, cd->datadir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:370:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(tmp, dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:397:7:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
						strcat(host, tmpPtr + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:403:7:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
						strcat(host, tmpString);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:409:5:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
				strcpy(tmp, dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:464:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmp, dir->entry.name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:478:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(direntry->dirpath, tmp);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:424:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:430:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:433:6:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
					strcat(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:438:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:421:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[2]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:429:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:640:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[3]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:644:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:668:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, PQgetvalue(rs, i, 2));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:675:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, PQgetvalue(rs, i, j));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:892:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, PQgetvalue(rs, i, 3));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:896:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, PQgetvalue(rs, i, j));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:302:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(qs, tseg->sql);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:305:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(qs, *(char **)tseg->sql);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:262:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(state->zone_name, argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:264:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
		sprintf(state->zone_name, "%s.", argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:273:6:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
	n = sprintf(soa_data, "%s hostmaster%s%s 123 900 600 86400 3600",
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:386:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(dns_key.data, zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:586:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(keyStr, zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:588:2:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
	strcat(keyStr, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:306:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(qs, tseg->cmd);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:309:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(qs, *(char **)tseg->cmd);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:43:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(dir->dirname, dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:101:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(dir->entry.name, entry->d_name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:183:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(out, (char *)&tmpPtr[i + 1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:206:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(out, (char *)&tmpPtr[i]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:293:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(tmpPath, cd->basedir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:325:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, cd->xfrdir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:327:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:329:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmpPath, cd->datadir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:383:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(tmp, dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:410:7:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
						strcat(host, tmpPtr + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:416:7:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
						strcat(host, tmpString);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:422:5:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
				strcpy(tmp, dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:476:3:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
		strcat(tmp, dir->entry.name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:491:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(direntry->dirpath, tmp);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:427:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:433:6:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
					strcpy(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:436:6:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
					strcat(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:441:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(data, vals[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:513:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[2]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:516:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:709:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[3]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:712:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:458:4:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
			strcat(query, item->arg);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:515:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
		sprintf(dest, "%s%s", zone, dot(zone));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:518:4:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
			sprintf(dest, "%s.%s%s", name, zone, dot(zone));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:520:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(dest, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:544:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(new, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:555:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(new, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:901:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(new_record->name, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:902:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(new_record->type, type);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:903:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(new_record->data, data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1151:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(real_name, zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1157:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
		strcpy(real_name, name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1346:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(zone_id, row[0]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:586:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[2]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:589:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:784:4:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
			strcpy(tmpString, safeGet(row[3]));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:787:5:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
				strcat(tmpString, safeGet(row[j]));
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:104:2:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	snprintf(corpusdir, sizeof(corpusdir), FUZZDIR "/%s.in", target);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:2237:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/callbacks.c:44:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:357:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:393:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:417:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1975:17:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	isc_fsaccess_t access;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1999:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
				 &access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2000:36:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		(void)isc_fsaccess_set(filename, access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2065:17:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	isc_fsaccess_t access;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2111:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
				 &access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2112:36:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		(void)isc_fsaccess_set(filename, access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:622:17:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	isc_fsaccess_t access;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:672:46:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
			 ISC_FSACCESS_READ | ISC_FSACCESS_WRITE, &access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:673:35:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	(void)isc_fsaccess_set(filename, access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen-win32.h:227:2:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
	strcpy(pattern, path);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:23:9:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#define snprintf _snprintf
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:23:18:  [4] (format) _snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#define snprintf _snprintf
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:244:4:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			fprintf(stdout, "\tswitch (%s) { \\\n" /*}*/, tsw);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:259:4:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
			fprintf(stdout, "\tcase %d: switch (%s) { \\\n" /*}*/,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:500:7:  [4] (buffer) sscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. If the scanf format is influenceable by an attacker, it's exploitable.
		if (sscanf(dir.filename, TYPECLASSFMT, typebuf, &type) != 2) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:639:7:  [4] (buffer) sscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. If the scanf format is influenceable by an attacker, it's exploitable.
		if (sscanf(dir.filename, TYPECLASSFMT, classbuf, &rdclass) != 2)
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:716:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stdout, copyright, year);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:968:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		fprintf(stdout,                                              \
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/librpz.h:218:47:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#define LIBRPZ_PF(f, l) __attribute__((format(printf, f, l)))
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:734:9:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
				n = snprintf(numbuf, sizeof(numbuf), fmt,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:3510:2:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	snprintf(buf, sizeof(buf), "%" PRIu64, q);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1938:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/soa_6.c:131:3:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
		snprintf(buf, sizeof(buf), comm ? "%-10lu ; " : "%lu", num);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5292:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), format, args);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5970:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, args);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tcpmsg.c:27:19:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#define XDEBUG(x) printf x
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:556:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(buf, sizeof(buf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:163:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(message, sizeof(message), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:218:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(message, sizeof(message), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3258:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:1608:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgtext, sizeof(msgtext), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:14973:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(message, sizeof(message), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:113:3:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
		vfprintf(stderr, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/buffer.c:479:6:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	l = snprintf(buf, 21, "%" PRId64, v);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/buffer.c:629:6:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	n = vsnprintf(NULL, 0, format, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/buffer.c:648:6:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	n = vsnprintf(isc_buffer_used(b), n + 1, format, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/error.c:80:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/error.c:89:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:33:63:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_add(int trustee, int permission, isc_fsaccess_t *access) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:38:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access |= permission;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:42:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access |= (permission << GROUP);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:46:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access |= (permission << OTHER);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:51:66:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_remove(int trustee, int permission, isc_fsaccess_t *access) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:56:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access &= ~permission;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:60:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access &= ~(permission << GROUP);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:64:4:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		*access &= ~(permission << OTHER);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:69:31:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
check_bad_bits(isc_fsaccess_t access, bool is_dir) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/fsaccess.c:92:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	if ((access & bits) != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/fsaccess.h:162:63:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_add(int trustee, int permission, isc_fsaccess_t *access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/fsaccess.h:165:66:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_remove(int trustee, int permission, isc_fsaccess_t *access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/fsaccess.h:168:51:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_set(const char *path, isc_fsaccess_t access);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1627:10:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
			(void)vsnprintf(lctx->buffer, sizeof(lctx->buffer),
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:481:2:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	fprintf(stderr, fmt)
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:484:2:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	fprintf(stderr, fmt, arg)
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:487:2:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	fprintf(stderr, fmt, arg1, arg2)
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:490:2:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	fprintf(stderr, #mech ": 0x%lx\n", rv)
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/crc64_test.c:63:2:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	snprintf(hex, sizeof(hex), "%016" PRIX64, crc);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:836:10:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	return (access(path, W_OK | X_OK) == 0);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/fsaccess.c:26:51:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_set(const char *path, isc_fsaccess_t access) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/fsaccess.c:43:26:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	result = check_bad_bits(access, is_dir);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/fsaccess.c:54:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	if ((access & bits) != 0) { \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/fsaccess.c:56:3:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		access &= ~bits;    \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:592:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:614:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:639:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:104:51:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
FAT_fsaccess_set(const char *path, isc_fsaccess_t access) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:114:7:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	if ((access & bits) != 0) { \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:116:3:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		access &= ~bits;    \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:144:65:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
NTFS_Access_Control(const char *filename, const char *user, int access,
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:192:12:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	caccess = access;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:296:52:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
NTFS_fsaccess_set(const char *path, isc_fsaccess_t access, bool isdir) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:307:46:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	return (NTFS_Access_Control(path, username, access, isdir));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:311:51:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
isc_fsaccess_set(const char *path, isc_fsaccess_t access) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:326:26:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
	result = check_bad_bits(access, is_dir);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:336:35:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		return (NTFS_fsaccess_set(path, access, is_dir));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:338:34:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
		return (FAT_fsaccess_set(path, access));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/pk11_api.c:31:1:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
getpass(const char *prompt) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:846:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:866:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.c:82:1:  [4] (format) syslog:If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant format string for syslog. 
syslog(int level, const char *fmt, ...) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.c:90:2:  [4] (format) vsprintf:Potential format string problem (CWE-134).  Make format string constant. 
	vsprintf(buf, fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.h:47:1:  [4] (format) syslog:If syslog's format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant format string for syslog. 
syslog(int level, const char *fmt, ...);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/unistd.h:51:9:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#define access _access
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:978:2:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	snprintf(buf, sizeof(buf), "%" PRIu64, obj->value.uint64);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3747:8:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	len = vsnprintf(message, sizeof(message), format, args);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3806:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/tests/duration_test.c:142:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
		sprintf(&conf[0],
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2671:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:288:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(message, sizeof(message), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:1742:2:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
	vsnprintf(msgbuf, sizeof(msgbuf), fmt, ap);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:404:2:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
	vfprintf(stderr, format, args);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2263:13:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
		homedir = getenv("HOME");
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:663:32:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	looknew->idnin = isatty(1) ? (getenv("IDN_DISABLE") == NULL) : false;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:122:8:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
			if (getenv("AFL_CMIN")) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:368:8:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
			if (getenv("AFL_CMIN")) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:732:6:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	if (getenv("AFL_CMIN")) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:752:6:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	if (getenv("__AFL_PERSISTENT") || getenv("AFL_CMIN")) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:752:36:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	if (getenv("__AFL_PERSISTENT") || getenv("AFL_CMIN")) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:397:7:  [3] (misc) chroot:chroot can be very helpful, but is hard to use correctly (CWE-250, CWE-22).  Make sure the program immediately chdir("/"), closes file descriptors, and drops root privileges, and that all necessary files (and no more!) are in the new root. 
		if (chroot(root) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:119:6:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	if (getenv("CYGWIN") != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:216:33:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	message->id = (unsigned short)(random() & 0xFFFF);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:161:33:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	message->id = (unsigned short)(random() & 0xFFFF);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rpz/dnsrps.c:67:14:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
	while ((i = getopt(argc, argv, "apn:w:")) != -1) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:616:33:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	message->id = (unsigned short)(random() & 0xFFFF);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:1023:2:  [3] (random) srand:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	srand((unsigned)time(NULL));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1575:2:  [3] (random) srand:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	srand(getpid());
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen-unix.h:41:32:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
#define isc_commandline_parse	 getopt
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:660:22:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	source_date_epoch = getenv("SOURCE_DATE_EPOCH");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:709:21:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
		const char *old = getenv("KRB5_KTNAME");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:1208:11:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
		start = random() % 4000000;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:1244:2:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
	srandom(time(NULL));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:1253:23:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
		r = ((unsigned long)random()) % maxvalue;
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:1129:11:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
		order = getenv("NET_ORDER");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:144:18:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	pk11_provider = getenv("PKCS11_PROVIDER");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/isctest.c:83:6:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	p = getenv("ISC_TASK_WORKERS");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:185:6:  [3] (misc) chroot:chroot can be very helpful, but is hard to use correctly (CWE-250, CWE-22).  Make sure the program immediately chdir("/"), closes file descriptors, and drops root privileges, and that all necessary files (and no more!) are in the new root. 
	if (chroot(dirname) < 0 || chdir("/") < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/condition.c:215:2:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
	EnterCriticalSection(mutex);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:234:7:  [3] (misc) AddAccessAllowedAce:This doesn't set the inheritance bits in the access control entry (ACE) header (CWE-732).  Make sure that you set inheritance by hand if you wish it to inherit. 
	if (!AddAccessAllowedAce(pacl, ACL_REVISION, NTFSbits, psid)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:237:7:  [3] (misc) AddAccessAllowedAce:This doesn't set the inheritance bits in the access control entry (ACE) header (CWE-732).  Make sure that you set inheritance by hand if you wish it to inherit. 
	if (!AddAccessAllowedAce(pacl, ACL_REVISION, NTFSbits, padminsid)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:281:7:  [3] (misc) AddAccessAllowedAce:This doesn't set the inheritance bits in the access control entry (ACE) header (CWE-732).  Make sure that you set inheritance by hand if you wish it to inherit. 
	if (!AddAccessAllowedAce(pacl, ACL_REVISION, NTFSbits, pothersid)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/include/isc/mutex.h:31:30:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
#define isc_mutex_init(mp)   InitializeCriticalSection((mp))
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/include/isc/mutex.h:32:31:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
#define isc_mutex_lock(mp)   (EnterCriticalSection((mp)), ISC_R_SUCCESS)
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:167:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:168:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:169:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:123.123.123.123")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:381:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:382:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:467:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:468:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:615:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char nbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:616:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char tbuf[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/named-checkconf.c:524:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[sizeof("CLASS65535")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/ddns-confgen.c:55:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char program[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/ddns-confgen.c:92:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key_txtsecret[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/keygen.c:123:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key_rawsecret[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/rndc-confgen.c:56:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char program[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/rndc-confgen.c:90:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key_txtsecret[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:252:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:362:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:450:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:616:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:618:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:825:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		static char buf[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1306:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[MAXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1734:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:64:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char domainopt[DNS_NAME_MAXTEXT];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:65:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char hexcookie[81];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:81:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:319:2:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	wchar_t time_str[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:321:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char time_str[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:323:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char fromtext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:417:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char store[sizeof(" in 18446744073709551616 us.")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:641:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:672:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:679:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:915:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char append[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:1843:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2228:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char batchline[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2230:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *bargv[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2235:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rcfile[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2270:15:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
				batchfp = fopen(rcfile, "r");
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2467:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			batchfp = fopen(filename, "r");
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2525:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char batchline[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2527:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *bargv[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:126:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char servercookie[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:152:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char keynametext[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:153:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char keyfile[MXNAME] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:154:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char keysecret[MXNAME] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:155:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char cookie_secret[33];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:156:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char cookie[8];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:502:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[sizeof("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255") +
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:528:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[sizeof("%4000000000")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:559:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:984:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:XXX.XXX.XXX.XXX/128")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1057:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[20];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1783:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char bad_namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1844:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2084:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char store[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2085:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ecsbuf[20];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2086:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cookiebuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2093:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char idn_origin[MXNAME], idn_textname[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2769:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2891:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3055:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3134:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3263:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3505:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char bb[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3685:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf1[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3686:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf2[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3837:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3838:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:3839:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:4188:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:4389:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char src[MXNAME], *dst;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:89:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[sizeof("?65535")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:148:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char fromtext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:170:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:207:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:280:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:281:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char typebuf2[DNS_RDATATYPE_FORMATSIZE +
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:333:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:398:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:409:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:430:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:567:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:568:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:674:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hostname[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:677:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char store[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:798:14:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			timeout = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:804:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			tries = atoi(isc_commandline_argument) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:830:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			ndots = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:113:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[MXNAME];		     /*% Name we're going to be
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:115:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		 cmdline[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:121:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		 name_space[BUFSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:122:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		 oname_space[BUFSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:145:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		  rdatastore[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:176:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *	      recvspace, *tmpsendspace, lengthspace[4];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:188:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char servername[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:189:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char userarg[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:194:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char origin[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:220:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern char		 keynametext[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:221:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern char		 keyfile[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/include/dig/dig.h:222:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern char		 keysecret[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:66:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char defclass[MXRD] = "IN";
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:67:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char deftype[MXRD] = "A";
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:71:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char domainopt[DNS_NAME_MAXTEXT];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:134:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[sizeof("?65535")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:168:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:188:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text[sizeof("ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:233:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:301:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:419:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char servtext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:448:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char nametext[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:461:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:524:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:750:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char store[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:140:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char timestr[32];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:319:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:390:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char backname[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:391:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:392:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmpname[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:454:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dsbuf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:1229:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char type[32];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:100:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char setname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:147:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:199:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:227:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:245:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:246:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text_buf[DST_KEY_MAXTEXTSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:247:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name_buf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:248:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char class_buf[10];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:538:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key_buf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:104:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char setname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:169:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:195:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:196:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pubname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:197:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char priname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:458:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key_buf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:139:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:469:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:632:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:633:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char algstr[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:746:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:297:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:298:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algstr[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:428:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:669:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:831:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:840:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-revoke.c:79:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newname[1024], oldname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-revoke.c:80:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-settime.c:138:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-settime.c:139:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-settime.c:189:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:154:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char saltbuf[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:281:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:283:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[BUFSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:443:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:498:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:499:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:500:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sigstr[SIG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:781:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nametext[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:782:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:840:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char *
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:842:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		  const unsigned char hash[NSEC3_MAX_HASH_LENGTH]) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:864:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		const unsigned char hash[NSEC3_MAX_HASH_LENGTH]) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:881:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:909:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:931:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:960:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dsbuf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:1112:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:1152:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:1955:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nsec3parambuf[5 + 255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2011:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2013:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nsec3buffer[DNS_NSEC3_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2020:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2080:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2180:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2181:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2749:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2894:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char orig_salt[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2989:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3003:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dsbuf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3004:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keybuf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3275:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *dskeyfile[MAXDSKEYS];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:61:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *keystates[KEYSTATES_NVALUES] = {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:121:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:122:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:318:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char timestr[15];
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:479:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:73:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char hex16[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:128:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char v[16], n;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:130:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rdata[sizeof("123.123.123.123.in-addr.arpa.")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:331:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:363:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:405:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:205:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:297:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:320:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:655:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:667:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:761:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char secret[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:851:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char secret[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/controlconf.c:1280:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:78:28:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	servaddr.sin_port = htons(atoi(port));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:310:10:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	qtype = atoi(sqtype);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:317:28:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	servaddr.sin_port = htons(atoi(sport));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:322:27:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	recaddr.sin_port = htons(atoi(rport));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:625:28:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	servaddr.sin_port = htons(atoi(port));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/geoip.c:34:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pathbuf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/include/named/server.h:107:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char  secret[32]; /*%< Server Cookie Secret */
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:122:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char program_name[NAME_MAX] = "named";
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:123:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char absolute_conffile[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:124:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char saved_command_line[4096] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:125:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char ellipsis[5] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:126:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char version[512];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:388:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char tmp[5];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:490:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rndcconf[PATH_MAX], *dot = NULL;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:634:26:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		isc_dscp_check_value = atoi(option + 5);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:662:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		maxudp = atoi(option + 7);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:672:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		dns_zone_mkey_hour = atoi(p);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:684:23:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		dns_zone_mkey_day = atoi(p);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:695:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		dns_zone_mkey_month = atoi(p);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:702:26:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		named_g_tat_interval = atoi(option + 4);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:665:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:667:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:869:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1316:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1915:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char reverse[48 + sizeof("ip6.arpa.")] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1916:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("x.x.")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1917:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	const char *dns64_dbtype[4] = { "_dns64", "dns64", ".", "." };
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:2646:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nameb[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:2825:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3312:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_SOA_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3345:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3379:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3384:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	const char *rbt_dbtype[4] = { "rbt" };
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3766:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:3824:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char full_path[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:4008:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5477:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char server[DNS_NAME_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5478:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char contact[DNS_NAME_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5479:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		const char *empty_dbtype[4] = { "_builtin", "empty", NULL,
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5910:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:6493:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:6883:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char label[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:6941:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:7264:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key_txtsecret[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:7265:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key_rawsecret[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:8004:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:10087:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:10311:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char problem[DNS_NAME_FORMATSIZE + 500] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:10312:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:10883:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024 + 32];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11146:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11558:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char target[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11653:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char boottime[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11654:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char configtime[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11655:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char line[1024], hostname[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11810:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11875:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char target[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11876:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char fbuf[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11920:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11921:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char creatorstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12127:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classstr[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12128:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12204:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classstr[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12205:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12414:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12496:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12669:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dbpath_copy[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12670:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char lockpath[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12813:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tempname[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12871:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char zname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:13667:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:13829:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14040:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14173:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char text[512 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14215:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DNS_SECALG_FORMATSIZE + 7]; /* <5-digit keyid>/<alg> */
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14217:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14246:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char hashbuf[64], flagbuf[64], iterbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14247:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char nbuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14358:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char output[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14442:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14444:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char serbuf[16], sserbuf[16], nodebuf[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14445:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char resignbuf[DNS_NAME_FORMATSIZE + DNS_RDATATYPE_FORMATSIZE + 2];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14446:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char lbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14447:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char xbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14448:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14449:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char kbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14450:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rtbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14588:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14589:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14755:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14756:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char viewbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14759:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15084:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[DNS_NAME_FORMATSIZE + 500] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15098:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[DNS_NAME_FORMATSIZE + 500] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15183:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[DNS_NAME_FORMATSIZE + 500];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15198:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char nbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15207:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char alg[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15208:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15289:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15318:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[DNS_NAME_FORMATSIZE + 500] = "";
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15496:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15581:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:133:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *nsstats_desc[ns_statscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:134:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *resstats_desc[dns_resstatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:135:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *adbstats_desc[dns_adbstats_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:136:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *zonestats_desc[dns_zonestatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:137:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *sockstats_desc[isc_sockstatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:138:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *dnssecstats_desc[dns_dnssecstats_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:139:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *udpinsizestats_desc[dns_sizecounter_in_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:140:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *udpoutsizestats_desc[dns_sizecounter_out_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:141:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *tcpinsizestats_desc[dns_sizecounter_in_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:142:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *tcpoutsizestats_desc[dns_sizecounter_out_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:143:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *dnstapstats_desc[dns_dnstapcounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:144:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *gluecachestats_desc[dns_gluecachestatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:146:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *nsstats_xmldesc[ns_statscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:147:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *resstats_xmldesc[dns_resstatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:148:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *adbstats_xmldesc[dns_adbstats_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:149:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *zonestats_xmldesc[dns_zonestatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:150:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *sockstats_xmldesc[isc_sockstatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:151:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *dnssecstats_xmldesc[dns_dnssecstats_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:152:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *udpinsizestats_xmldesc[dns_sizecounter_in_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:153:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *udpoutsizestats_xmldesc[dns_sizecounter_out_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:154:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *tcpinsizestats_xmldesc[dns_sizecounter_in_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:155:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *tcpoutsizestats_xmldesc[dns_sizecounter_out_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:156:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *dnstapstats_xmldesc[dns_dnstapcounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:157:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *gluecachestats_xmldesc[dns_gluecachestatscounter_max];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1437:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1507:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1518:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1589:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char codebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1645:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char codebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1701:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tagbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1767:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024 + 32]; /* sufficiently large for zone name and class */
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1935:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char boottime[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1936:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char configtime[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:1937:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nowstr[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:2590:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024 + 32]; /* sufficiently large for zone name and class */
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:2591:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[64];   /* sufficiently large for class */
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:2794:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char boottime[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:2795:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char configtime[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:2796:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nowstr[sizeof "yyyy-mm-ddThh:mm:ss.sssZ"];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3546:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3561:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3794:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:4099:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:4129:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tsigconf.c:53:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keynamedata[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:73:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:138:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:200:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:230:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:276:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:362:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	devnullfd = open("/dev/null", O_RDWR, 0);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:391:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:417:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:423:30:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		runas_pw = getpwuid((uid_t)atoi(username));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:443:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:526:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		fd = open(filename, O_WRONLY | O_CREAT | O_APPEND, mode);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:531:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		fd = open(filename, O_WRONLY | O_CREAT | O_EXCL, mode);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:575:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:631:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:678:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE], *f;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:749:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:795:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:828:16:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	singletonfd = open(filename, O_WRONLY | O_CREAT,
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:896:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char unamebuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/ntservice.c:28:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char ConsoleTitle[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:148:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	devnullfd = open("NUL", O_RDWR, 0);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:199:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		fd = open(filename, O_WRONLY | O_CREAT | O_APPEND, mode);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:202:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		fd = open(filename, O_WRONLY | O_CREAT | O_EXCL, mode);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:236:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:264:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:313:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:335:15:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	lockfilefd = open(filename, O_WRONLY | O_CREAT,
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/win32/os.c:395:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char unamebuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:206:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char servicename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:384:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[20];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1019:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1705:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1951:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1961:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2276:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cmdlinebuf[MAXCMD];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2367:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2454:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2504:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2536:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2652:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2712:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2740:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2746:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char serverstr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2919:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2920:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mykeystr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:93:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:96:9:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			id = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:106:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			wait = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:221:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:227:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			bits = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-list.c:84:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-list.c:87:9:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			id = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:83:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char program[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:464:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:535:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:591:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char secretarray[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:796:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:928:17:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			remoteport = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/adb_test.c:228:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char namedata[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byaddr_test.c:53:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char text[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byaddr_test.c:102:28:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			workers = (unsigned int)atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:89:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char text[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:98:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:210:26:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			level = (unsigned int)atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:216:28:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			workers = (unsigned int)atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:55:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char dbtype[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:74:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[1000];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:338:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[1000];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:339:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:356:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t1[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:357:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t2[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:419:18:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			pause_every = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:422:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			type = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:617:8:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			v = atoi(&s[2]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:631:26:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			trust = (unsigned int)atoi(&s[3]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:635:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			type = (unsigned int)atoi(&s[2]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:696:8:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			v = atoi(&s[2]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/fsaccess_test.c:38:7:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fp = fopen(PATH, "w");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:84:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[32];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:125:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char output[10 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:127:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:190:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char output[10 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:191:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char host[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:268:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:345:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char gssid[512];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:346:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char contextname[512];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:416:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char serveraddress[512];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/inter_test.c:28:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/log_test.c:69:20:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			file_versions = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/master_test.c:30:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/master_test.c:55:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char name_buf[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:44:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[1000];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:66:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[1000];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:107:18:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			split_label = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/nsecify.c:123:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newfilename[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rbt_test.c:85:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rbt_test.c:240:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *command, *arg, buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rwlock_test.c:95:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rwlock_test.c:99:14:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		nworkers = atoi(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/serial_test.c:22:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/shutdown_test.c:30:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/shutdown_test.c:167:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		workers = atoi(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:57:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char qdata[1024], rdata[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:65:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char output[10 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:129:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char namedata[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:218:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			port = (unsigned int)atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:66:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:67:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char host[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:156:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:271:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		workers = atoi(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sym_test.c:35:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[1000], *cp, *key;
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/task_test.c:72:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		workers = atoi(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/timer_test.c:103:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		workers = atoi(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:130:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[1000];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:146:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:84:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char label[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:122:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:131:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/find.c:113:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/find.c:120:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/genrsa.c:134:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/genrsa.c:144:21:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			bits = (CK_ULONG)atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/genrsa.c:147:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/login.c:103:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/login.c:109:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:146:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char label[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:194:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:204:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:98:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char label[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:140:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:150:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/session.c:102:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/session.c:105:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sha1.c:109:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sha1.c:113:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sign.c:197:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sign.c:207:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/verify.c:143:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			slot = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/verify.c:153:12:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			count = atoi(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:54:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char type[10];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:55:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data[200];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:176:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addr_buf[INET6_ADDRSTRLEN];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:241:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char soa_data[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:331:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:332:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char absolute[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:334:2:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
	strcpy(addrbuf, "unknown");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:411:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char full_name[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:412:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[512];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:413:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char last[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:446:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(last, full_name, size + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:734:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char absolute[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/db.c:614:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_SOA_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/db.c:645:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/db.c:683:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/syncptr.c:39:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/zone.c:33:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	const char *zone_argv[1];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dyndb/driver/zone.c:34:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zone_name[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/feature-test.c:77:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char hostname[MAXHOSTNAMELEN];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:75:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char output[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:137:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char host[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rndc/gencheck.c:47:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rndc/gencheck.c:60:7:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fd = open(argv[1], O_RDONLY);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rpz/dnsrps.c:44:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char c[120];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rpz/dnsrps.c:56:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cstr[sizeof("zone ") + 1024 + 10];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rsabigexponent/bigkey.c:53:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char filename[255];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/tkey/keycreate.c:62:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char noncedata[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/tkey/keycreate.c:72:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keyname[256];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/tkey/keycreate.c:136:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keydata[9];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/wire_test.c:180:7:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		f = fopen(argv[0], "r");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/wire_test.c:199:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char s[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/wire_test.c:297:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char b2[64 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/arpaname.c:21:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[16];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/dnstap-read.c:231:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/dnstap-read.c:237:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/dnstap-read.c:262:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/dnstap-read.c:271:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:116:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char cookie_secret[33];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:118:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char hexcookie[81];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:121:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[MXNAME]; /*% Name we're going to be
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:169:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[sizeof("?65535")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:293:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sockstr[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:638:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char ecsbuf[20];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:639:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char cookie[40];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:999:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:XXX.XXX.XXX.XXX/128")];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1668:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1898:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char batchline[MXNAME];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1900:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *bargv[64];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:2014:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			batchfp = fopen(batchname, "r");
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/named-rrchecker.c:75:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text[256 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/named-rrchecker.c:76:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data[64 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:78:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:79:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[DNS_NSEC3_SALTSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:80:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char text[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:103:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	hash_alg = atoi(algostr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:107:32:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	flags = flagstr == NULL ? 0 : atoi(flagstr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:111:15:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
	iterations = atoi(iterstr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:104:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR AccountName[256];		/* static account name buffer */
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:198:2:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	wchar_t AccountName[MAX_NAME_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:199:2:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	wchar_t AccountPassword[MAX_NAME_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:238:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR AccountName[256];		/* static account name buffer */
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:424:9:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			    (wchar_t *)malloc(UserRights[i].MaximumLength);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:69:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#undef open
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:105:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:216:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char winsys[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:288:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:289:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dirname[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:300:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char progfiles[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:319:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:577:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char Vcredist_x86[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:623:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char pathBuffer[2 * MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:901:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char accountName[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:946:2:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	wchar_t *PrivList[MAX_PRIVS];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:948:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *Groups[MAX_GROUPS];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1026:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pathBuffer[2 * MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1075:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pathBuffer[2 * MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1160:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pszMsgDLL[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1284:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1379:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1395:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1413:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1430:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR fileloc[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1431:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR linkpath[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1432:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR path[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1475:3:  [2] (buffer) MultiByteToWideChar:Requires maximum length in CHARACTERS, not bytes (CWE-120).  
		MultiByteToWideChar(CP_ACP, 0, linkpath, -1, wsz, MAX_PATH);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1502:3:  [2] (buffer) MultiByteToWideChar:Requires maximum length in CHARACTERS, not bytes (CWE-120).  
		MultiByteToWideChar(CP_ACP, 0, linkpath, -1, wsz, MAX_PATH);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1515:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR filename[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1516:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR path[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1556:2:  [2] (buffer) TCHAR:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	TCHAR commonPath[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/VersionInfo.cpp:274:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char queryString[256];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:254:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char lex_data_buf[max_data_len]; /*%< data array to use for lex_buffer below */
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:441:27:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((result = (*db_out)->open(*db_out, NULL, db_file, db_name, db_type,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:507:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data_arr[max_data_len];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:509:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data_arr2[max_data_len];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:639:22:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		bdbres = db.dbenv->open(db.dbenv, db_envdir,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:643:22:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		bdbres = db.dbenv->open(db.dbenv, db_envdir,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:601:23:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((result = (*db)->open(*db, NULL, db_file, db_name, db_type,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:656:22:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	bdbres = db->dbenv->open(
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:648:23:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((result = (*db)->open(*db, NULL, db_file, db_name, db_type,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:748:25:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	bdbhptres = db->dbenv->open(db->dbenv, argv[2],
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:84:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dirpath[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:348:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[PATH_MAX + NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:356:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char host[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:459:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char value[255];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:40:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[100];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:41:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char type[10];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:42:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data[200];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:162:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addr_buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:227:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char soa_data[200];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:326:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[100];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:327:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char absolute[1024];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:329:2:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
	strcpy(addrbuf, "unknown");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:397:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char full_name[256];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:398:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[512];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:440:3:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
		strcpy(buf, "unknown");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:693:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char absolute[1024];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:661:23:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((result = (*db)->open(*db, NULL, db_file, db_name, db_type,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:767:25:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	bdbhptres = db->dbenv->open(db->dbenv, argv[2],
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:471:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char value[255];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.h:26:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[DIR_NAMEMAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.h:31:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dirname[DIR_PATHMAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:82:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dirpath[DIR_PATHMAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:361:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[DIR_PATHMAX + DIR_NAMEMAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:369:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char host[DIR_NAMEMAX];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:187:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zone[255];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:188:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[100];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:189:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char type[10];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:190:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data[200];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:191:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ttl[10];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:756:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zaddr[INET_ADDRSTRLEN];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:801:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char ifaddr[INET_ADDRSTRLEN];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:904:2:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
	sprintf(new_record->ttl, "%d", ttlvalue);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1180:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char host[1024], admin[1024], data[4096];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1298:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char hostname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1324:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zone_id[16];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1696:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sn[32];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/perl/dlz_perl_driver.c:510:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char full_name[BUF_LEN];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/dns_rdata_fromwire_text.c:52:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char totext[1024];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/dns_rdata_fromwire_text.c:69:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char fromtext[1024];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/dns_rdata_fromwire_text.c:70:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char fromwire[1024];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/dns_rdata_fromwire_text.c:71:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char towire[1024];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/dns_rdata_fromwire_text.c:83:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char typebuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:38:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char filename[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:50:13:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		if ((fd = open(filename, O_RDONLY)) == -1) {
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:93:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char corpusdir[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:116:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[64 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:412:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:496:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char zeros[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:593:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char netaddrbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:1365:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char secret[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2129:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE + 128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2886:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char secretbuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3021:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3131:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3132:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3250:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3524:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE], *p = NULL;
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3587:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3643:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE], *p = NULL;
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3811:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3904:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char full_path[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/getaddresses.c:66:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char tmpbuf[128], *d;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:2232:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:2233:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:3011:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:3644:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:3645:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:3696:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:3751:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/adb.c:4087:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/badcache.c:473:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/badcache.c:474:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/byaddr.c:44:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char textname[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:379:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char czname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:380:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:715:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1011:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1076:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keycbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1251:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[256]; /* larger than INET6_ADDRSTRLEN */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1556:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1598:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pbuf[sizeof("65535")]; /* used both for port number and DSCP */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1599:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1821:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char bname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1922:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char cname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1923:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1924:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:2029:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char cname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/client.c:1522:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rdatabuf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/client.c:1523:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/client.c:3076:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[FLEXIBLE_ARRAY_MEMBER];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/compress.c:94:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char tableindex[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/diff.c:248:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/diff.c:249:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/diff.c:250:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:349:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:385:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:408:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:409:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:769:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:1171:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char netaddrstr[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:1367:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:2870:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dispatch.c:3743:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char foo[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dns64.c:28:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bits[16]; /*
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dns64.c:66:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		static const unsigned char zeros[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:197:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char data[256 + 8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:386:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[300];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:565:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:833:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char filename[DNS_NAME_FORMATSIZE +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:847:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:848:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:936:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:937:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char header[DNS_MESSAGE_HEADERLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1073:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char header[DNS_MESSAGE_HEADERLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1406:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1733:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char filename[DNS_NAME_FORMATSIZE +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1747:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1748:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1872:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1873:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1906:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1908:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char alg[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1948:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dsbuf1[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1949:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dsbuf2[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:1950:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keybuf[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:2136:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr1[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:2137:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr2[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnssec.c:2309:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnstap.c:892:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnstap.c:1228:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[100];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ds.c:120:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:99:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *numerictags[NUMERIC_NTAGS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:104:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *booleantags[BOOLEAN_NTAGS] = { "KSK:", "ZSK:" };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:107:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *timingtags[TIMING_NTAGS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:117:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *keystatestags[KEYSTATES_NTAGS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:122:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *keystates[KEYSTATES_NVALUES] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:522:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1186:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf1[DST_KEY_MAXSIZE], buf2[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1395:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1396:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1912:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char output[26]; /* Minimum buffer as per ctime_r() specification. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1915:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char utc[sizeof("YYYYMMDDHHSSMM")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1973:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1991:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fp = fopen(filename, "w")) == NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2059:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2060:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key_array[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2061:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text_array[DST_KEY_MAXTEXTSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2062:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char class_array[10];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2103:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fp = fopen(filename, "w")) == NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2214:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dns_array[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:55:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *timetags[TIMING_NTAGS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:63:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *numerictags[NUMERIC_NTAGS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:620:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:621:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[MAXFIELDSIZE * 2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_parse.c:666:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fp = fopen(filename, "w")) == NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_result.c:17:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *text[DST_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_result.c:43:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *ids[DST_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen-win32.h:218:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pattern[_MAX_PATH], *p;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:153:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:160:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:161:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:162:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dirbuf[PATH_MAX - 30];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:166:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:167:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char macroname[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:168:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char attr[ATTRIBUTESIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:195:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[10][256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:234:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf1[TYPECLASSBUF], buf2[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:318:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:490:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[TYPECLASSLEN + sizeof("_65535.h")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:491:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:537:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:538:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char srcdir[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:540:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:546:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char year[11];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:554:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf1[TYPECLASSBUF];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:989:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			if ((fd = fopen(prefix, "r")) != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:999:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			if ((fd = fopen(buf, "r")) != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:1007:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			if ((fd = fopen(suffix, "r")) != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapi_link.c:127:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapi_link.c:182:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[sig->length];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapi_link.c:183:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char err[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:142:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:256:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:260:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:353:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:354:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:438:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:439:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:525:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:554:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:581:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:681:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:839:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/hmac_link.c:204:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/hmac_link.c:227:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/hmac_link.c:270:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[ISC_MAX_MD_SIZE] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/compress.h:74:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char arena[DNS_COMPRESS_ARENA_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/dnstap.h:117:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/dnstap.h:118:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/dnstap.h:119:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/fixedname.h:64:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/geoip.h:84:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char as_string[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/librpz.h:213:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char c[120];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/nsec3.h:77:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		   unsigned char    rethash[NSEC3_MAX_HASH_LENGTH],
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/rdatalist.h:58:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char upper[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/types.h:116:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
typedef unsigned char		  dns_offsets_t[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/include/dns/view.h:229:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char secret[32]; /* Client secret */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:179:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char serial[4]; /*%< SOA serial before update. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:187:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char offset[4]; /*%< Offset from beginning of file. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:203:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char format[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:209:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char index_size[4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:211:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char sourceserial[4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:215:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char pad[JOURNAL_HEADER_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:223:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char size[4];	  /*%< In bytes, excluding header. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:224:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char serial0[4]; /*%< SOA serial before update. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:225:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char serial1[4]; /*%< SOA serial after update. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:233:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char size[4]; /*%< In bytes, excluding header. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:248:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char format[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:690:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char backup[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:2177:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newname[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:2178:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char backup[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:69:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *keystatetags[NUM_KEYSTATES] = { "DNSKEY", "ZRRSIG", "KRRSIG",
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:71:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *keystatestrings[4] = { "HIDDEN", "RUMOURED", "OMNIPRESENT",
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:162:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:525:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:879:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:1086:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:1260:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:1279:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keymgr.c:1416:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:236:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:416:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096], digest[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:607:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:608:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char obuf[DNS_NAME_FORMATSIZE + 200];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:618:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:675:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char fmt[sizeof("%04000000000d")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:676:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char numbuf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:678:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mode[2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:797:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dummy[2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:877:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1010:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1084:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classname1[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1085:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classname2[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1549:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1622:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char cbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1623:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char obuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1747:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1770:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1832:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:1887:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:2232:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[sizeof(header)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:2367:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char namebuf[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:3078:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:96:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char linebreak_buf[DNS_TOTEXT_LINEBREAK_MAXLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:229:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char spaces[N_SPACES + 1] = "          ";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:232:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char tabs[N_TABS + 1] = "\t\t\t\t\t\t\t\t\t\t";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:254:8:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
	char *tmpfile;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:605:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char ttlbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:1105:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[sizeof("YYYYMMDDHHMMSS")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:1332:12:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
	if (dctx->tmpfile != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:1333:34:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
		isc_mem_free(dctx->mctx, dctx->tmpfile);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:1479:51:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
		tresult = closeandrename(dctx->f, result, dctx->tmpfile,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:3420:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addr[16], addr_text[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:3486:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("18446744073709551615")]; /* 2^64-1 */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:3529:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("1234567890")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:3847:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof(" (65000 bytes)")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:4153:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("1234567890")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:4455:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:48:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char digitvalue[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2287:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2335:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2402:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *p, txt[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2650:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
const char ishex[256] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ncache.c:130:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[65536];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec.c:182:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[DNS_NSEC_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:231:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		   unsigned char rethash[NSEC3_MAX_HASH_LENGTH],
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:236:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:237:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nametext[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:472:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:552:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nexthash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:553:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nsec3buf[DNS_NSEC3_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1097:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1299:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1397:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nexthash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1398:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nsec3buf[DNS_NSEC3_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1728:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1845:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1953:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1970:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nsec3.c:1971:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char owner[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:460:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char nb[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:533:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char nbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:534:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:535:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char obuf[DNS_NAME_FORMATSIZE +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:630:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char nbuf[DNS_NAME_FORMATSIZE + 1], tbuf[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssl_link.c:285:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssldh_link.c:599:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char *bufs[4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslecdsa_link.c:158:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[EVP_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslecdsa_link.c:214:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[EVP_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslecdsa_link.c:398:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_KEY_ECDSA384SIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslecdsa_link.c:437:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_KEY_ECDSA384SIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:60:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PUBPREFIXLEN + DNS_KEY_ED25519SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:71:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PUBPREFIXLEN + DNS_KEY_ED25519SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:99:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PRIVPREFIXLEN + DNS_KEY_ED25519SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:111:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PRIVPREFIXLEN + DNS_KEY_ED25519SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:172:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PUBPREFIXLEN + DNS_KEY_ED448SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:183:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PUBPREFIXLEN + DNS_KEY_ED448SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:209:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PRIVPREFIXLEN + DNS_KEY_ED448SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/openssleddsa_link.c:221:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[PRIVPREFIXLEN + DNS_KEY_ED448SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslrsa_link.c:708:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char *bufs[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11rsa_link.c:1412:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char *bufs[10];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/private.c:67:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/private.c:113:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/private.c:340:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char nsec3buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/private.c:341:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char newbuf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/private.c:384:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keybuf[BUFSIZ], algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:94:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char FILE_VERSION[32] = "\0";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:100:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char version1[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:113:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char version2[32]; /* repeated; must match version1 */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:320:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hexdump[BUFSIZ * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:440:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[HEADER_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbt.c:3017:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:98:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char version1[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:105:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char version2[32]; /* repeated; must match version1 */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:255:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char upper[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:392:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[DNS_NSEC3_SALTSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:695:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char FILE_VERSION[32] = "\0";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:738:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hexdump[BUFSIZ * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:997:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:1217:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:1789:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char printname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:5373:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:5401:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char printname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:7581:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pad[sizeof(char *)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rbtdb.c:7670:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[RBTDB_HEADER_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:219:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[NUMBERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:281:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("4294967296")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:495:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[sizeof("65000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:554:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("CLASS65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:306:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char tmp[NS_LOCATORSZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:386:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bm[8 * 1024]; /* 64k bits */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:487:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char buf[sizeof("TYPE65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1028:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1323:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[sizeof("65000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1352:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("TYPE65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1759:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmpbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1976:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/any_255/tsig_250.c:135:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof(" 281474976710655 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/ch_3/a_1.c:71:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("0177777")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/afsdb_18.c:71:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/amtrelay_260.c:29:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr6[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/amtrelay_260.c:126:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("0 255 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/caa_257.c:17:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char const alphanumeric[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/caa_257.c:331:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/cert_37.c:65:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/csync_62.c:51:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("0123456789")]; /* Also TYPE65535 */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/doa_259.c:74:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("4294967295 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/ds_43.c:94:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui48_108.c:22:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char eui48[6];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui48_108.c:55:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xx-xx-xx-xx-xx-xx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui48_108.h:18:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char eui48[6];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui64_109.c:22:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char eui64[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui64_109.c:57:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xx-xx-xx-xx-xx-xx-xx-xx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/eui64_109.h:18:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char eui64[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/hip_55.c:124:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("225 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/ipseckey_45.c:28:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr6[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/ipseckey_45.c:126:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("255 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/key_25.c:89:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("[key id = 64000]")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/key_25.c:92:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/keydata_65533.c:85:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/keydata_65533.c:89:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/keydata_65533.c:175:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char rbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/keydata_65533.c:176:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char abuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/keydata_65533.c:177:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char dbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/l32_105.c:60:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("65000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/l64_106.c:24:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char locator[NS_LOCATORSZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/l64_106.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xxxx:xxxx:xxxx:xxxx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/l64_106.h:19:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char l64[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/loc_29.c:530:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sbuf[sizeof("90000000m")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/loc_29.c:531:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hbuf[sizeof("90000000m")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/loc_29.c:532:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char vbuf[sizeof("90000000m")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/loc_29.c:535:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[8 * 6 + 12 * 1 + 2 * 10 + sizeof(sbuf) + sizeof(hbuf) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/lp_107.c:57:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/mx_15.c:25:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:123.123.123.123.")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/mx_15.c:103:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/naptr_35.c:28:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char regex[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/naptr_35.c:246:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nid_104.c:24:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char locator[NS_LOCATORSZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nid_104.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xxxx:xxxx:xxxx:xxxx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nid_104.h:19:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nid[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3_50.c:44:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3_50.c:112:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("TYPE65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3_50.c:381:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char owner[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3param_51.c:97:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("65535 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nxt_30.c:29:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bm[8 * 1024]; /* 64k bits */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nxt_30.c:119:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
							char buf[sizeof("6553"
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/opt_41.c:46:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/rrsig_46.c:161:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("4294967295")]; /* Also TYPE65000. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/rt_21.c:67:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/sig_24.c:125:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("4294967295")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/sink_40.c:61:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("255 255 255")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/soa_6.c:77:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *soa_fieldnames[5] = { "serial", "refresh", "retry", "expire",
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/soa_6.c:127:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[sizeof("0123456789 ; ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/sshfp_44.c:75:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/tkey_249.c:122:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("4294967295 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/tlsa_52.c:68:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/uri_256.c:65:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("65000 ")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/zonemd_63.c:70:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("0123456789")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/a6_38.c:24:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/a6_38.c:100:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/a6_38.c:104:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("128")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/aaaa_28.c:24:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/aaaa_28.c:60:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[5 * 8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/apl_42.c:22:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char addr[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/apl_42.c:123:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/apl_42.c:124:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char txt[sizeof(" !64000:")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/atma_34.c:111:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/dhcid_49.c:37:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[5 + 3 * 11 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/kx_36.c:56:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/nsap_22.c:75:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("xx")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/px_26.c:72:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/srv_33.c:93:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("64000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/srv_33.c:305:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("_65000._tcp")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/wks_11.c:83:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bm[8 * 1024]; /* 64k bits */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/wks_11.c:88:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char service[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/wks_11.c:213:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("65535")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/request.c:496:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char netaddrstr[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/request.c:530:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char peer[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/request.c:543:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char peer[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:234:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:1537:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:1745:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:2465:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char zone[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:2637:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			unsigned char cookie[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3299:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3300:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3301:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3302:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3303:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char code[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3506:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:3915:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4221:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4222:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4861:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4862:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4883:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[DNS_NAME_FORMATSIZE + DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:4884:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5270:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5271:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5272:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5285:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nsbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5286:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char clbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5288:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5367:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5368:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5369:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:5965:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6212:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6213:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6214:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char classbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6963:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6964:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6965:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:6966:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7034:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7035:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7036:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7037:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7151:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ns_namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7152:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7153:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7432:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static const char hex[17] = "0123456789abcdef";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7433:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:7623:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:8102:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char cookie[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:8670:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:8932:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char nbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:8933:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char dbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:8934:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9035:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char qbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9036:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char nbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9037:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char tbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9726:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char zone[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9786:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char code[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9947:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9948:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9949:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9950:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:9951:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10116:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10570:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10571:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10645:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char ndata[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10669:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/resolver.c:10926:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/result.c:20:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *text[DNS_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/result.c:169:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *ids[DNS_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/result.c:295:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *rcode_text[DNS_R_NRCODERESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/result.c:318:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *rcode_ids[DNS_R_NRCODERESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:287:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:288:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:289:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char databuf[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:123.123.123.123")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:512:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:540:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:672:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:704:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char str[1 + 8 + 1 + INET6_ADDRSTRLEN + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:814:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ip_str[DNS_NAME_FORMATSIZE], ip2_str[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1336:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1599:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1703:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domain[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1783:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1792:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char domain[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1867:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domain[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:1888:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:2384:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:2629:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:616:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("age=2147483647")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:824:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_MAX(sizeof("/123"), sizeof("  (12345678)"))];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:1267:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char log_buf[DNS_RRL_LOG_BUF_LEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:488:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char str[2 * DNS_NAME_MAXTEXT + 5 * (sizeof("2147483647")) + 7];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:683:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:759:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:1322:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:387:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char origin[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:425:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char origin[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:522:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:524:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:596:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char wildstr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:756:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1057:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1156:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1157:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_type[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1528:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1529:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char clientstr[(sizeof "xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:255.255.255."
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1652:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_MAXTEXT + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1722:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_signer[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1723:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_name[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1724:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_addr[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1725:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_type[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1726:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_key[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1966:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char str[2 * DNS_NAME_MAXTEXT + 5 * (sizeof("2147483647")) + 7];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/spnego.c:312:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char b[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/spnego.c:316:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char b[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/spnego.c:594:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char mechbuf[17];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:193:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[16 * 4 + sizeof("IP6.ARPA.")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:243:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("X.X.X.X.Y.Y.Y.Y.2.0.0.2.IP6.ARPA.")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:80:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:88:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:119:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_identity[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:120:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_signer[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:121:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_name[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:122:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_addr[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:123:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_type[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:124:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b_key[DST_KEY_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:222:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:233:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/stats.c:509:28:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
LIBDNS_EXTERNAL_DATA const char *dns_statscounter_names[DNS_STATS_NCOUNTERS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dbversion_test.c:40:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char tempname[11] = "dtXXXXXXXX";
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dbversion_test.c:381:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[DNS_NSEC3_SALTSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dbversion_test.c:407:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dh_test.c:64:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dispatch_test.c:177:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static unsigned char buf1[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dispatch_test.c:178:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static unsigned char buf2[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dispatch_test.c:260:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char message[12];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dispatch_test.c:262:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rbuf[12];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstap_test.c:144:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char zone[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstap_test.c:145:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char qambuffer[4096], rambuffer[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstap_test.c:146:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char qrmbuffer[4096], rrmbuffer[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstap_test.c:322:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char s[BUFSIZ], *p;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:422:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:585:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rdata_buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dst_test.c:135:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char sig[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dst_test.c:223:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char sigbuf2[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dst_test.c:233:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char hexbuf[4096] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/geoip_test.c:80:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pathbuf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:117:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keydata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:144:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:177:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:234:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:571:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	FILE *f = fopen("/dev/null", "w");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:594:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:77:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char origin[sizeof(TEST_ORIGIN)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:78:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char name_buf[BUFLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:87:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[BIGBUFLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:411:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[BIGBUFLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:481:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char myorigin[sizeof(TEST_ORIGIN)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:484:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char namebuf[BUFLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:548:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:153:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf1[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:154:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf2[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:345:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char offsets[1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:363:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char offsets[1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:382:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:410:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char data[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:680:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char output_data[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/nsec3_test.c:91:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/nsec3_test.c:93:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char salt[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/private_test.c:103:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bufdata[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/private_test.c:168:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char data[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/private_test.c:169:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char output[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/private_test.c:204:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char data[DNS_NSEC3PARAM_BUFFERSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/private_test.c:205:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char output[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:216:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:253:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:323:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	rbtfile = fopen("./zone.bin", "w+b");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:334:7:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fd = open("zone.bin", O_RDWR);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:384:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	rbtfile = fopen("./zone.bin", "w+b");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_serialize_test.c:395:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		fd = open("zone.bin", O_RDWR);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:351:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[34];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:429:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[14];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:843:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[34];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:951:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *names[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rbt_test.c:1231:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[sizeof("name18446744073709551616.example.org.")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:84:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[512]; /* RDATA in wire format */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:261:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:298:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf_fromtext[1024], buf_fromwire[1024], buf_towire[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:300:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf_totext[1024] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:399:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf_totext[1024] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:400:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf_fromtext[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:445:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf_totext[1024] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:446:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf_fromtext[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:491:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[1024], buf_towire[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:602:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf1[1024], buf2[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:1758:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hipwire[DNS_RDATA_MAXLENGTH] = { 0x01, 0x00, 0x00, 0x01,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rdata_test.c:1761:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[1024 * 1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rsa_test.c:55:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char d[10] = { 0xa,  0x10, 0xbb, 0,    0xfe,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rsa_test.c:58:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char sigsha1[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rsa_test.c:83:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char sigsha256[256] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/rsa_test.c:108:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char sigsha512[512] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/sigs_test.c:104:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char found_covers[DNS_RDATATYPE_FORMATSIZE] = {};
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/sigs_test.c:105:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char found_type[DNS_RDATATYPE_FORMATSIZE] = {};
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/sigs_test.c:106:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char found_name[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:63:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:85:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:107:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:129:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:151:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/time_test.c:173:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/tsig_test.c:76:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char tsigbuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/tsig_test.c:105:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char tsigbuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/tsig_test.c:287:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char secret[16] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/zt_test.c:166:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/zt_test.c:188:13:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	zonefile = fopen("./zone.data", "wb");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/zt_test.c:190:13:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	origfile = fopen("./testdata/zt/zone1.db", "r+b");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/time.c:34:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof("!!!!!!YYYY!!!!!!!!MM!!!!!!!!DD!!!!!!!!HH!!!!!!!!MM!!!!"
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:239:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digests[ISC_MAX_MD_SIZE * 2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:356:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keydata[DST_KEY_MAXSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:704:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tkeyoutdata[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:822:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			static char hexdigits[16] = { '0', '1', '2', '3',
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:826:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			unsigned char randomdata[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:827:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char randomtext[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:1118:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[TEMP_BUFFER_SZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:1221:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char secretdata[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:1354:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[TEMP_BUFFER_SZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tkey.c:1491:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char array[TEMP_BUFFER_SZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:143:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char message[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:144:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:145:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char creatorstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:335:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:497:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:498:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char creatorstr[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:499:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algorithmstr[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:500:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keystr[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:571:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:572:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char creatorstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:573:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algorithmstr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:760:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:772:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char badtimedata[BADTIMELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:829:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char header[DNS_MESSAGE_HEADERLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:1076:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:1083:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char header[DNS_MESSAGE_HEADERLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:1438:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:1445:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char header[DNS_MESSAGE_HEADERLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ttl.c:47:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[60];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ttl.c:152:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ttl.c:153:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nbuf[64]; /* Number buffer */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:137:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _nbuf[DNS_NAME_FORMATSIZE];                   \
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:159:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _nbuf[DNS_NAME_FORMATSIZE];                      \
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:160:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _tbuf[DNS_RDATATYPE_FORMATSIZE];                 \
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:207:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char message[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:996:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buffer[DNS_NSEC_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:1046:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[1] = { 0 }; /* The root domain, no bits. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/update.c:1095:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[1024]; /* XXX */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:266:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char hash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:267:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char owner[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:949:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:950:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:1772:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char digest_types[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:2048:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:2208:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:2622:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:2854:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3253:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3283:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3284:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3318:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/validator.c:3319:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:92:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:368:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char template[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:369:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char keyfile[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:916:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keyfile[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:925:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			fp = fopen(keyfile, "r");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:2032:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newbuf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:2064:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/view.c:2434:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char nb[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:131:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char qbuffer_data[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:702:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char zonetext[DNS_NAME_MAXTEXT + 32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:984:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sourcetext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:985:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char signerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:1604:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mastertext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:1605:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgtext[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/xfrin.c:1640:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonetext[DNS_NAME_MAXTEXT + 32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:678:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[255];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:921:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[DNS_NSEC3PARAM_BUFFERSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1366:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1445:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1548:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1619:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2674:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2675:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2676:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char altbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2775:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2776:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2777:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char altbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2875:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2876:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:2877:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char altbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3029:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3030:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3140:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3332:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3536:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char saltbuf[255 * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3537:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char flags[sizeof("INITIAL|REMOVE|CREATE|NONSEC|OPTOUT")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3766:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:3976:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char timebuf[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4024:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4095:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4120:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[4096], digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4226:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4363:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_SOA_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:4839:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:5125:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:5126:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:5284:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:5285:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char altbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:6411:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char timebuf[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:6603:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char origin[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:6604:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char algbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:6720:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[1024]; /* XXX */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:7286:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nsecbuffer[DNS_NSEC_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:7364:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:7555:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:7691:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char parambuf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:7768:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:8977:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:9723:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data1[4096], data2[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:9838:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key_buf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:9898:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key_buf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:9977:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:9978:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key_buf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:10726:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:10790:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char timebuf[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:11981:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12048:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12529:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char master[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12530:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char source[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12594:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char rcode[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12903:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char master[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:12904:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char source[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:13002:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char rcode[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:13503:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:13513:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char addrbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:13787:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:14406:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char fromtext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:14964:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char message[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:15175:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rcode[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:15176:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:15719:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_SOA_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:15783:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16333:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16359:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16390:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16552:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[DNS_NAME_FORMATSIZE + sizeof(": TSIG ''")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16554:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16910:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char master[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:16911:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char source[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:17175:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char master[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:17220:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char rcode[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:17235:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char rcode[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18253:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char master[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18254:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char source[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18624:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18625:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf2[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18626:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18741:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char salt[255 * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18976:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:19323:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char timebuf[80];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:19585:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:19784:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buffer[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:19785:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:20174:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char data[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:20631:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char nbuf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:71:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char revoked_ksk[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:72:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char revoked_zsk[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:73:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char standby_ksk[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:74:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char standby_zsk[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:75:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char ksk_algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:76:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char zsk_algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:77:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char bad_algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:78:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char act_algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:221:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buffer[DNS_NSEC_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:222:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:223:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nextbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:224:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char found[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:308:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:309:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:445:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	    const unsigned char types[8192], unsigned int maxtype,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:448:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char cbm[8244];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:449:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:569:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char owner[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:643:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rawhash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:701:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	    const unsigned char types[8192], unsigned int maxtype,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:703:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:704:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hashbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:711:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rawhash[NSEC3_MAX_HASH_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:792:22:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	     const unsigned char types[8192], unsigned int maxtype,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:820:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char set_algorithms[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:821:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:822:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:823:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:925:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char types[8192];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1049:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1095:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1552:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			unsigned char buf[DNS_DS_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1620:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1621:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char buffer[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1666:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1914:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1941:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char algbuf[DNS_SECALG_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zt.c:404:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classstr[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zt.c:405:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zonename[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/dnsconf.c:53:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keydata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/dnsconf.c:56:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:442:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char abuf[sizeof(struct in6_addr)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:443:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char nbuf[NI_MAXHOST];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:445:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char ntmp[NI_MAXHOST];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:792:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char cname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:1164:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char v4_loop[4] = { 127, 0, 0, 1 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:1187:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char v6_loop[16] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:156:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char numserv[sizeof("65000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:157:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char numaddr[sizeof("abcd:abcd:abcd:abcd:abcd:abcd:255.255.255.255") +
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:296:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char hoststr[1024]; /* is this enough? */
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:98:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *search[RESCONFMAXSEARCH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:285:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[RESCONFMAXLINELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:315:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[RESCONFMAXLINELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:354:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[RESCONFMAXLINELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:406:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[RESCONFMAXLINELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:463:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[RESCONFMAXLINELEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:511:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char word[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:538:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fp = fopen(filename, "r")) != NULL) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/win32/resconf.c:33:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char searchlist[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/app.c:103:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/app.c:145:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/app.c:305:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/app.c:397:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/app.c:437:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base32.c:51:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[9];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base32.c:244:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base64.c:47:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base64.c:122:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[3];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/buffer.c:473:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[21];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/hex.c:44:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[3];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/ht.c:32:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key[FLEXIBLE_ARRAY_MEMBER];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:71:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char recvbuf[HTTP_RECVLEN]; /*%< receive buffer */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:950:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char datebuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1031:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char loadbuf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1201:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[sizeof "18446744073709551616"];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/interfaceiter.h:46:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char	      name[32];	  /*%< Interface name, null-terminated. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/lex.h:106:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
typedef char isc_lexspecials_t[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/netaddr.h:37:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char un[sizeof(((struct sockaddr_un *)0)->sun_path)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:218:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  manufacturer_id[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:220:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  library_description[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:231:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  slot_description[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:232:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  manufacturer_id[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:244:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  label[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:245:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  manufacturer_id[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:246:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  model[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:247:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  serial_number[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:261:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	  utc_time[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:509:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char year[4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:510:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char month[2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:511:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char day[2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:943:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char cb[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:984:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char  iv[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/pkcs11/pkcs11.h:990:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char  iv[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/lex.c:229:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/lex.c:244:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:142:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buffer[LOG_BUFFER_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1242:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char current[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1243:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newpath[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1324:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newts[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1325:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char newpath[PATH_MAX + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1489:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char local_time[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1490:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char iso8601z_string[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1491:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char iso8601l_string[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1492:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char level_string[24] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:102:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char bytes[ALIGNMENT_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:147:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:203:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16]; /*%< printed name in stats reports */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:646:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	INSIST(((unsigned char *)mem)[size] == 0xbe);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:729:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:2270:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:129:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char abuf[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:255.255.255.255")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:130:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char zbuf[sizeof("%4294967295")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:218:24:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static const unsigned char zeros[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:145:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:1043:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(&handle->peer, peer, sizeof(isc_sockaddr_t));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:1045:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(&handle->peer, &sock->peer, sizeof(isc_sockaddr_t));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:1049:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(&handle->local, local, sizeof(isc_sockaddr_t));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:1051:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(&handle->local, &sock->iface->addr,
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:73:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:74:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char manuf[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:75:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char model[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:76:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char serial[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:77:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pin[PINLEN + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:160:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:826:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:877:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pin[PINLEN + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11_result.c:19:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *text[PK11_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11_result.c:27:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *ids[PK11_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pthreads/condition.c:27:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pthreads/include/isc/condition.h:30:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char isc_condition_strbuf[ISC_STRERRORSIZE];    \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pthreads/mutex.c:293:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pthreads/thread.c:39:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];                                \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/result.c:33:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *description[ISC_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/result.c:106:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *identifier[ISC_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/sockaddr.c:120:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char pbuf[sizeof("65000")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/sockaddr.c:509:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy(isa, sa, length);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/task.c:118:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/task.c:1433:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char name[21];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/task.c:1958:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[255];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/aes_test.c:42:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char plaintext[3 * ISC_AES_BLOCK_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/aes_test.c:43:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char ciphertext[ISC_AES_BLOCK_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/aes_test.c:44:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char str[2 * ISC_AES_BLOCK_LENGTH + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/aes_test.c:45:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char key[ISC_AES256_KEYLENGTH + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/buffer_test.c:223:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/crc64_test.c:62:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hex[16 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/file_test.c:56:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/file_test.c:92:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/hmac_test.c:101:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/hmac_test.c:106:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hexdigest[ISC_MAX_MD_SIZE * 2 + 3];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/hmac_test.c:170:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE] __attribute((unused));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/hmac_test.c:200:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:71:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:79:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:89:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:97:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char key[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:110:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:123:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char key[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:134:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:146:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:157:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char key[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:171:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:184:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:205:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char key[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/isctest.c:85:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		workers = atoi(p);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/md_test.c:98:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/md_test.c:102:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hexdigest[ISC_MAX_MD_SIZE * 2 + 3];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/md_test.c:158:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE] __attribute((unused));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/md_test.c:187:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/mem_test.c:236:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096], *p, *q;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/mem_test.c:281:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096], *p;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/mem_test.c:322:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096], *p;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/safe_test.c:58:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf1[4] = { 1, 2, 3, 4 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/safe_test.c:59:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf2[4] = { 1, 2, 3, 4 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/safe_test.c:71:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf1[4] = { 1, 2, 3, 4 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/safe_test.c:72:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf2[4] = { 1, 2, 3, 4 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:167:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:232:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:323:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:411:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:501:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:592:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:724:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sendbuf[BUFSIZ * 2], recvbuf[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/symtab_test.c:83:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char str[16], *key;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/symtab_test.c:101:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char str[16], *key;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/symtab_test.c:117:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char str[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/symtab_test.c:129:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char str[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/symtab_test.c:140:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char str[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:34:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[ISC_FORMATHTTPTIMESTAMP_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:89:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:126:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:161:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:197:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:72:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *day[7] = { "Sunday",	  "Monday", "Tuesday", "Wednesday",
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:74:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *abday[7] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:77:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *mon[12] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:81:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *abmon[12] = { "Jan", "Feb", "Mar", "Apr", "May", "Jun",
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:83:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *am_pm[2] = { "AM", "PM" };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/errno2result.c:32:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:350:15:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	while ((fd = open(templet, O_RDWR | O_CREAT | O_EXCL, mode)) == -1) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:634:7:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fd = open(filename, flags, S_IRUSR | S_IWUSR);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:756:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:757:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:759:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hash[ISC_MAX_MD_SIZE * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/ifiter_getifaddrs.c:43:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char entry[ISC_IF_INET6_SZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/ifiter_getifaddrs.c:52:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/ifiter_getifaddrs.c:70:16:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		iter->proc = fopen("/proc/net/if_inet6", "r");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/include/isc/dir.h:27:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char	     name[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/include/isc/dir.h:34:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char	       dirname[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/interfaceiter.c:172:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char address[33];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/interfaceiter.c:173:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[IF_NAMESIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:123:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:226:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:292:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:389:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dummybuf[sizeof(struct cmsghdr) + 1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:414:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:443:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:449:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char b[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:454:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:573:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:635:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/net.c:804:7:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fp = fopen("/proc/sys/net/ipv4/ip_local_port_range", "r");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/pk11_api.c:32:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char loaderrmsg[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:352:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:584:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:606:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:630:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:631:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:801:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:932:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:968:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:994:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1060:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char dummybuf[sizeof(struct cmsghdr) + 1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1298:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1325:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1488:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1489:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cmsgbuf[RECVCMSGBUFLEN] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1652:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1655:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:1656:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cmsgbuf[SENDCMSGBUFLEN] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:2104:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:2783:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:3389:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:3548:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:3651:23:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	thread->devpoll_fd = open("/dev/poll", O_RDWR);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:3817:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char tname[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:3818:3:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
		sprintf(tname, "isc-socket-%d", i);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4205:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4338:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4339:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char path[sizeof(sockaddr->type.sunix.sun_path)];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4391:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4481:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4512:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4584:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4695:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4696:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char addrbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4856:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4857:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4978:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5161:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5184:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5198:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5354:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5463:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:5476:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[255];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/stdio.c:25:6:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	f = fopen(filename, mode);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/time.c:113:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/time.c:145:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/condition.c:38:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/errno2result.c:29:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:86:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
			if ((*doopen = open(path, flags,
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:118:1:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
mkstemp(char *path, bool binary) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:198:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[512];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:218:11:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
		tmpfd = mkstemp(buf, true);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:262:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fh = open(file, _O_RDONLY | _O_BINARY)) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:299:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fh = open(file, _O_RDWR | _O_BINARY)) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:375:7:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
	fd = mkstemp(templet, true);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:405:7:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
	fd = mkstemp(templet, binary);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:685:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	if ((fh = open(filename, _O_RDWR | _O_BINARY)) < 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:721:7:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fd = open(filename, flags, S_IRUSR | S_IWUSR);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:838:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:839:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:841:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char hash[ISC_MAX_MD_SIZE * 2 + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:41:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char username[255] = "\0";
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:51:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char drive[255];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:52:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char FSType[20];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmpbuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:56:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char filename[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:158:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainBuffer[100];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/fsaccess.c:349:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char domainBuffer[100];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/include/isc/dir.h:24:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		name[NAME_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/include/isc/dir.h:31:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char	       dirname[PATH_MAX];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/interfaceiter.c:100:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/net.c:53:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/net.c:111:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/net.c:185:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntgroups.c:68:2:  [2] (buffer) wchar_t:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	wchar_t user[MAX_NAME_LENGTH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:28:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char systemDir[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:29:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char namedBase[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:30:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char ns_confFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:31:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char rndc_confFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:32:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char ns_defaultpidfile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:33:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char ns_lockfile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:34:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char local_state_dir[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:35:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char sys_conf_dir[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:36:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char rndc_keyFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:37:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char session_keyFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:38:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char resolv_confFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntpaths.c:39:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char bind_keysFile[MAX_PATH];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/pk11_api.c:32:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char buf[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/pk11_api.c:64:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char loaderrmsg[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:243:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char name[16];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:405:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char socktext[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:472:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:493:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:520:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:561:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:630:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:838:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:857:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:858:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:887:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:1262:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:1293:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:1562:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:2024:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:2367:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:2967:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3049:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3222:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3379:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3704:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3826:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/socket.c:3845:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[255];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/stdio.c:26:6:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	f = fopen(filename, mode);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.c:84:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.c:85:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char *str[1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/syslog.c:159:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	const char *buf[1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/thread.c:26:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char strbuf[ISC_STRERRORSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:288:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:289:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:314:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:315:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:360:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:361:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:384:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:385:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:409:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:410:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:433:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:434:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:459:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char DateBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/time.c:460:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char TimeBuf[50];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/win32os.c:85:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		major = (unsigned int)atoi(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/win32os.c:90:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		minor = (unsigned int)atoi(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/win32os.c:95:27:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		spmajor = (unsigned int)atoi(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/win32os.c:101:27:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		spminor = (unsigned int)atoi(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/alist.c:46:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char spaces[MAX_INDENT + 1] = "                                         "
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:255:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:257:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digestb64[HSHA_LENGTH + 4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:378:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:380:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digestb64[HSHA_LENGTH * 4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:528:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char key[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:862:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char b[100];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/result.c:33:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *text[ISCCC_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/result.c:42:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const char *ids[ISCCC_R_NRESULTS] = {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/aclconf.c:575:26:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		de.geoip_elem.as_int = atoi(search);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/aclconf.c:725:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char buf[ISC_NETADDR_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/aclconf.c:738:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char buf[ISC_NETADDR_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:785:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:868:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:931:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:976:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1010:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[CFG_DURATION_MAXLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1164:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[CFG_DURATION_MAXLEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1197:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[0] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1210:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[1] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1218:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[3] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1232:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[4] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1245:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[5] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1253:24:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
		duration->parts[6] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1265:25:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
			duration->parts[2] = atoi(str + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3042:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3055:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[128];	   /* see lib/bind9/getaddresses.c */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3167:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char text[128];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3337:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char buf[ISC_NETADDR_FORMATSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3478:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3728:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tokenbuf[MAX_LOG_TOKEN + 10];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3729:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char where[PATH_MAX + 100];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3730:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	static char message[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3796:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/tests/duration_test.c:141:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char conf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:432:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char zone[DNS_NAME_MAXWIRE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:779:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char buf[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:800:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char log_buf[DNS_RRL_LOG_BUF_LEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:927:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char ecs[ECS_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:928:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char nsid[BUFSIZ], *nsidp;
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:929:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char cookie[COOKIE_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:937:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char expire[4];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:938:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char advtimo[2];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:1113:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char digest[ISC_MAX_MD_SIZE] ISC_NONSTRING = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:1126:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char input[16 + 16] ISC_NONSTRING = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:1161:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char input[4 + 4 + 16] ISC_NONSTRING = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:1213:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char dbuf[COOKIE_SIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2011:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char classname[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2062:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2077:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char tsigrcode[64];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2087:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2088:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char cnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2661:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2662:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char signerbuf[DNS_NAME_FORMATSIZE], qnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2663:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2724:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2725:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2726:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2775:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2776:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char original[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2777:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peerbuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2778:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:2779:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/include/ns/client.h:231:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char  cookie[8];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/include/ns/interfacemgr.h:77:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char		   name[32];   /*%< Null terminated. */
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/include/ns/server.h:78:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char	   secret[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/include/ns/server.h:128:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char secret[32];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/interfacemgr.c:95:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/interfacemgr.c:649:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char sabuf[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/interfacemgr.c:787:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char sabuf[ISC_SOCKADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/notify.c:78:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/notify.c:79:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tsigbuf[DNS_NAME_FORMATSIZE * 2 + sizeof(": TSIG '' ()")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/notify.c:128:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char cnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:146:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char qbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:147:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char tbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:835:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char msg[NS_CLIENT_ACLMSGSIZE("query (cache)")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:980:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char msg[NS_CLIENT_ACLMSGSIZE("query")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1115:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char cname_buf[DNS_NAME_FORMATSIZE] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1116:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char p_name_buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1117:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qname_buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1118:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1119:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1179:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1180:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char p_namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1238:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qnamebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:1239:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char p_namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:4502:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char buf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:4522:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char salt[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5142:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mbuf[2 * DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5143:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5311:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5312:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5313:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5578:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5934:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mbuf[4 * DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5935:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char qbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5936:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tbuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5951:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char pbuf[DNS_NAME_FORMATSIZE] = "<unset>";
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:5952:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char fbuf[DNS_NAME_FORMATSIZE] = "<unset>";
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:6165:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:6166:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:6241:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char log_buf[DNS_RRL_LOG_BUF_LEN];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:6783:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char errmsg[256];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:7166:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10919:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10920:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char clientbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10921:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10979:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10980:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10981:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10982:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char onbuf[ISC_NETADDR_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10983:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ecsbuf[DNS_ECS_FORMATSIZE + sizeof(" [ECS ]") - 1] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:10984:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ednsbuf[sizeof("E(65535)")] = { 0 };
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:11023:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:11024:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/query.c:11025:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/notify_test.c:67:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char rcodebuf[20];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/notify_test.c:91:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char ndata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/nstest.c:586:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char query[65536];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/nstest.c:929:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char s[BUFSIZ];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:145:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _nbuf[DNS_NAME_FORMATSIZE];                   \
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:172:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _nbuf[DNS_NAME_FORMATSIZE];                      \
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:173:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char _tbuf[DNS_RDATATYPE_FORMATSIZE];                 \
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:275:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char message[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:276:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:277:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:336:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:337:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:384:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:385:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1733:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char tmp[sizeof("xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:123.123.123.123.")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1734:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char ownerbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1735:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1736:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char altbuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1942:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2065:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2397:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[5];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2869:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2882:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char typebuf[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2969:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2990:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2991:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:2992:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char rdstr[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3062:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3093:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3094:6:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
					char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3110:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char namestr[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3111:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char typestr[DNS_RDATATYPE_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3370:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			unsigned char buf[DNS_NSEC3PARAM_BUFFERSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3548:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3549:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:88:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char _buf1[DNS_NAME_FORMATSIZE];                             \
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:89:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char _buf2[DNS_RDATACLASS_FORMATSIZE];                       \
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:129:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char mem[2000];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:737:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msg[NS_CLIENT_ACLMSGSIZE("zone transfer")];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:738:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char keyname[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:811:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char _buf1[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:812:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
				char _buf2[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:1736:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char msgbuf[2048];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:1737:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[DNS_NAME_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/xfrout.c:1738:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char classbuf[DNS_RDATACLASS_FORMATSIZE];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:141:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:167:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:183:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[NI_MAXHOST];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:496:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096]; /* XXX ad-hoc constant, but should be enough */
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:996:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096]; /* XXX ad hoc constant, but should be enough */
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:1151:11:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
		input = fopen(argv[0], "r");
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:63:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:103:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char keydata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:105:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char rrdata[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:134:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char t[4096];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:210:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char buf[4096]; /* XXX ad hoc constant, but should be enough */
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:275:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	const char *serveraddr[MAX_SERVERS];
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:379:7:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	fp = fopen(argv[0], "r");
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-gai.c:25:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char namebuf[1024], addrbuf[1024], servbuf[1024];
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:692:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, zonename, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:693:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/check-tool.c:705:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	region.length = strlen(classname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/named-checkconf.c:161:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(zclass);
/home/capstone/Desktop/root/bind9-9.16.1/bin/check/named-checkconf.c:501:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/ddns-confgen.c:235:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(keyname) + strlen(suffix) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/ddns-confgen.c:235:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(keyname) + strlen(suffix) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/rndc-confgen.c:232:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(chrootdir) + strlen(keyfile) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/bin/confgen/rndc-confgen.c:232:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(chrootdir) + strlen(keyfile) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:593:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(text);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1103:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t _l = strlen(cmd);                             \
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1358:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1365:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1423:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1454:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1535:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1541:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		    strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1596:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				tr.length = strlen(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/delv/delv.c:1676:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(in);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:48:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(s) >= isc_buffer_availablelength(b)) { \
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:89:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strspn(buf + 1, "0123456789") == strlen(buf + 1)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:976:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t _l = strlen(cmd);                             \
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:982:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t _l = strlen(cmd);                                 \
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:1914:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:1921:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:1968:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = (unsigned int)strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2020:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = (unsigned int)strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2185:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2190:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		    strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dig.c:2361:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					tr.length = (unsigned int)strlen(rv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:340:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = (int)strlen(in);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:898:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	secretsize = (unsigned int)strlen(keysecret) * 3 / 4;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1027:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		for (i = 0; i < 3 && strlen(buf) < sizeof(buf) - 2; i++) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1062:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(hmac);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1504:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		buf = isc_mem_allocate(mctx, strlen(value) / 2 + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:1505:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&b, buf, (unsigned int)strlen(value) / 2 + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2174:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = (unsigned int)strlen(origin);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2193:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = (unsigned int)strlen(textname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:2227:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = (unsigned int)strlen(textname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/dighost.c:4411:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	dstlen = strlen(dst);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:717:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				tr.length = strlen(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/host.c:753:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:567:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	tr.length = strlen(typetext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:584:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	tr.length = strlen(typetext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:637:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	size_t l = strlen(opt);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:757:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	tr.length = strlen(deftype);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dig/nslookup.c:764:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	tr.length = strlen(defclass);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:165:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, setname, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:166:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:279:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(path);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:294:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (isc_buffer_availablelength(&buf) < strlen(prefix)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-cds.c:306:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (isc_buffer_availablelength(&buf) <= strlen(suffix)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:66:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, setname, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:67:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:155:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(dirname) >= isc_buffer_availablelength(&buf)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:159:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (dirname[strlen(dirname) - 1] != '/') {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-dsfromkey.c:414:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(dir) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:70:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, setname, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:71:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(setname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-importkey.c:351:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(dir) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:375:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:376:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buf, strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:388:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(label) + 8;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keyfromlabel.c:400:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(algname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:322:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:323:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buf, strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-keygen.c:1186:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(algname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:916:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(dsdir) >= isc_buffer_availablelength(&b)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:920:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (dsdir[strlen(dsdir) - 1] != '/') {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:924:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(prefix) > isc_buffer_availablelength(&b)) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:2567:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origin);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3014:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	filenamelen = strlen(prefix) + strlen(namestr) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3014:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	filenamelen = strlen(prefix) + strlen(namestr) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3016:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		filenamelen += strlen(dsdir) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3393:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(dsdir) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3684:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size = strlen(file) + strlen(".signed") + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3684:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size = strlen(file) + strlen(".signed") + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-signzone.c:3925:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tempfilelen = strlen(output) + 20;
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssec-verify.c:102:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origin);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:364:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/bin/dnssec/dnssectool.c:379:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/builtin.c:332:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int len = strlen(text);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/config.c:406:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/config.c:426:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/config.c:802:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, keystr, strlen(keystr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/config.c:803:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(keystr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/config.c:997:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(algorithms[i].str);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/control.c:101:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	result = isc_lex_create(named_g_mctx, strlen(cmdline), &lex);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/control.c:106:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&src, cmdline, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/control.c:107:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&src, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/control.c:122:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	     strlen(cmdline) == 4) ||
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:87:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
		usleep(10000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:108:12:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		length = read(0, buf, 65536);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:110:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep(1000000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:331:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
		usleep(10000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:361:12:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		length = read(0, buf, 65536);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:363:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep(1000000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:634:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
		usleep(10000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:655:13:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
			length = read(0, buf + 2, 65535);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:663:13:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
			length = read(0, buf, 65535);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:666:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep(1000000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/fuzz.c:695:5:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
				usleep(10000);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:458:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			end = arg + strlen(arg);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:462:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (arglen == (int)strlen(def->name) &&
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/main.c:1545:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		int len = strlen(named_g_chrootdir);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:631:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:632:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:696:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&namebuf, namestr, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:697:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&namebuf, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:879:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, namestr, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:880:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1209:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1210:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1373:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1374:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1677:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1678:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1689:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1720:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1721:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1732:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1764:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1765:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1958:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, reverse, strlen(reverse));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:1959:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(reverse));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:2015:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cur_len = strlen(ctx->cstr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5775:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_constinit(&buffer, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:5776:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_add(&buffer, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:6077:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, zname, strlen(zname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:6078:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(zname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:7380:44:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, keynamestr, strlen(keynamestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:7381:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(keynamestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:8020:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, zonename, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:8021:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:8028:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.mv_size = strlen(zname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:10354:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(classtxt);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11580:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, target, strlen(target));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:11581:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(target));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12345:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	CHECK(isc_stdio_write(viewname, strlen(viewname), 1, fp, NULL));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12472:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key->mv_size = strlen(namebuf);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12886:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, origin, strlen(origin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12887:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(origin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12894:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		key.mv_size = strlen(zname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12942:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(tempname) < sizeof(tempname) - 1) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12990:50:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&argbuf, command, (unsigned int)strlen(command));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:12991:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&argbuf, strlen(command));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:13594:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buf, zonename, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:13595:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14415:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	return (putmem(b, str, strlen(str)));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14740:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(cmd);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14741:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (l > strlen(full) || strncasecmp(cmd, full, l) != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14807:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(ptr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14831:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(ptr);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14889:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&b, namebuf, strlen(namebuf));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:14890:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(namebuf));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15355:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(classtxt);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/server.c:15629:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(classtxt);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:369:18:  [1] (buffer) mismatch:Function does not check the second iterator for over-read conditions (CWE-126).  This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it. 
	SET_RESSTATDESC(mismatch, "mismatch responses received", "Mismatch");
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3302:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	*msglen = strlen(*msg);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3503:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					strlen(if_modified_since)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3505:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				line += strlen(if_modified_since);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3537:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_reinit(b, xslmsg, strlen(xslmsg));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/statschannel.c:3538:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(b, strlen(xslmsg));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:66:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, s, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:67:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:79:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, s, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:80:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:93:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, s, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tkeyconf.c:94:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tsigconf.c:71:44:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&keynamesrc, keyid, strlen(keyid));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tsigconf.c:72:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&keynamesrc, strlen(keyid));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/tsigconf.c:95:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		secretalloc = secretlen = strlen(secretstr) * 3 / 4;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/unix/os.c:298:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
			n = read(dfd[0], &buf, 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:261:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:262:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:277:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:278:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:308:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			r.length = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:493:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:494:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:972:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(dlzname) + 5;
/home/capstone/Desktop/root/bind9-9.16.1/bin/named/zoneconf.c:1089:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t signedlen = strlen(filename) + sizeof(SIGNED);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:466:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	int len = strlen(file);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:526:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	secretlen = strlen(secretstr) * 3 / 4;
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:600:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(algorithm) + strlen(mykeyname) + strlen(secretstr) + 3;
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:600:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(algorithm) + strlen(mykeyname) + strlen(secretstr) + 3;
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:600:48:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(algorithm) + strlen(mykeyname) + strlen(secretstr) + 3;
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1287:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&source, word, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1288:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&source, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1321:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		result = isc_lex_create(gmctx, strlen(cmdline), &lex);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1323:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&source, cmdline, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1324:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&source, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1386:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1402:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1635:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, namestr, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1636:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1648:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	secretlen = strlen(secretstr) * 3 / 4;
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1689:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, word, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1690:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1779:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1884:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:1908:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2953:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, servicename, strlen(servicename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2954:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(servicename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2969:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, mykeystr, strlen(mykeystr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:2970:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(mykeystr));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:3141:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, servicename, strlen(servicename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/nsupdate/nsupdate.c:3142:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(servicename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:134:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		search_template[0].ulValueLen = strlen(label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-destroy.c:164:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	memset(pin, 0, strlen(pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:371:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	search_template[0].ulValueLen = strlen((char *)label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:373:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	public_template[0].ulValueLen = strlen((char *)label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:375:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	private_template[0].ulValueLen = strlen((char *)label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-keygen.c:425:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	memset(pin, 0, strlen(pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-list.c:132:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		search_template[0].ulValueLen = strlen(label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/pkcs11/pkcs11-list.c:167:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen(pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/plugins/filter-aaaa.c:291:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, parameters, strlen(parameters));
/home/capstone/Desktop/root/bind9-9.16.1/bin/plugins/filter-aaaa.c:292:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(parameters));
/home/capstone/Desktop/root/bind9-9.16.1/bin/plugins/filter-aaaa.c:402:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, parameters, strlen(parameters));
/home/capstone/Desktop/root/bind9-9.16.1/bin/plugins/filter-aaaa.c:403:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(parameters));
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:340:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((!quiet || failed) && strlen(textmsg) != 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:1018:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		argslen += strlen(argv[i]) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/rndc/rndc.c:1025:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t len = strlen(argv[i]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/adb_test.c:237:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&t, target, strlen(target));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/adb_test.c:238:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&t, strlen(target));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:321:4:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/byname_test.c:322:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(argv[isc_commandline_index]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:121:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origintext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:170:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len = strlen(seektext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:260:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origintext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/db_test.c:476:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(s);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:93:7:  [1] (buffer) scanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
		c = scanf("%31s", buf);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:197:6:  [1] (buffer) scanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
	c = scanf("%255s", host);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:203:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, host, strlen(host));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:204:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(host));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:356:6:  [1] (buffer) scanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
	c = scanf("%511s", gssid);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:374:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, contextname, strlen(contextname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:375:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(contextname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:382:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, gssid, strlen(gssid));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:383:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(gssid));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/gsstest.c:421:7:  [1] (buffer) scanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
		c = scanf("%511s", serveraddress);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/master_test.c:63:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&source, argv[1], strlen(argv[1]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/master_test.c:64:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&source, strlen(argv[1]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/master_test.c:65:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_setactive(&source, strlen(argv[1]));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:122:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:147:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = strlen(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/name_test.c:167:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(s);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/nsecify.c:134:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origintext);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/nsecify.c:186:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(filename);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rbt_test.c:42:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	length = strlen(s);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rbt_test.c:293:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		length = strlen(buffer);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/rbt_test.c:315:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		length = strlen(command);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/shutdown_test.c:136:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		INSIST(strlen(name) < sizeof(ti->name));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:144:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&namesrc, nametext, strlen(nametext));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:145:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&namesrc, strlen(nametext));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:249:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, "child.example.", strlen("child.example."));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sig0_test.c:250:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen("child.example."));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:106:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.base = isc_mem_get(mctx, strlen(buf) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:108:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			region.length = strlen(buf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:178:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	region.base = isc_mem_get(mctx, strlen(buf) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sock_test.c:180:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(buf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/sym_test.c:66:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(s);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:91:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, zonename, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:92:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(zonename));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:109:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	region.length = strlen(classname);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:195:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(buf) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:199:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&buffer, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/optional/zone_test.c:200:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buffer, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:185:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/create.c:208:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		kTemplate[3].ulValueLen = strlen(label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/find.c:165:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/genrsa.c:210:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/login.c:184:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				  strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:259:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/privrsa.c:275:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		kTemplate[4].ulValueLen = strlen(label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:205:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/pubrsa.c:221:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		kTemplate[4].ulValueLen = strlen(label);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/sign.c:252:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/pkcs11/benchmarks/verify.c:198:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(pin, 0, strlen((char *)pin));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:106:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (first_empty == -1 && strlen(list[i].name) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:128:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(name) >= sizeof(list[i].name) ||
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:129:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(type) >= sizeof(list[i].type) ||
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:130:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(data) >= sizeof(list[i].data))
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:135:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].name, name, sizeof(list[i].name) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:138:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].type, type, sizeof(list[i].type) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:141:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].data, data, sizeof(list[i].data) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:267:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	state->zone_name = malloc(strlen(argv[1]) + 2);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:272:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (argv[1][strlen(argv[1]) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:474:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  Risk is low because the source is a constant string.
		strncpy(buf, "unknown", sizeof(buf));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:600:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(state->current[i].name) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:656:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(state->deletes[i].name) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:665:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(state->adds[i].name) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/dlzexternal/driver.c:776:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (name[strlen(name) - 1] != '.') {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:140:6:  [1] (buffer) scanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
	c = scanf("%255s", host);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:148:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, host, strlen(host));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/pipelined/pipequeries.c:149:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(host));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rndc/gencheck.c:66:18:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	while ((count = read(fd, buf, sizeof(buf))) != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rpz/dnsrps.c:146:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep((int)(seconds * 1000.0 * 1000.0));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rsabigexponent/bigkey.c:127:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buf, "example.", strlen("example."));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/rsabigexponent/bigkey.c:128:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen("example."));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/tkey/keycreate.c:157:48:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&namestr, ownername_str, strlen(ownername_str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tests/system/tkey/keycreate.c:158:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&namestr, strlen(ownername_str));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:69:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(s) >= isc_buffer_availablelength(b)) \
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:473:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					if (strlen("\n") >=
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:589:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&buf, query->textname, strlen(query->textname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:590:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(query->textname));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:979:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		buf = isc_mem_allocate(mctx, strlen(value) / 2 + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:980:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&b, buf, strlen(value) / 2 + 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1034:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		for (i = 0; i < 3 && strlen(buf) < sizeof(buf) - 2; i++) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1084:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(in);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1157:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t _l = strlen(cmd);                             \
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1163:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size_t _l = strlen(cmd);                                 \
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1722:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1729:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1771:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1788:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1877:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(option) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/mdig.c:1882:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		    strlen(option) > 1U) {
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:117:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, domain, strlen(domain));
/home/capstone/Desktop/root/bind9-9.16.1/bin/tools/nsec3hash.c:118:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(domain));
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:196:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	size_t namelen = strlen(name);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:197:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	size_t passwdlen = strlen(password);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:288:17:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	StringLength = wcslen(String);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/AccountInfo.cpp:428:4:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
			wcsncpy(PrivList[*PrivCount], UserRights[i].Buffer,
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:294:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(dirname, filename, index);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:624:4:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
			strncpy(pathBuffer, str, sizeof(pathBuffer) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:629:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				      (LPBYTE)(LPCTSTR)pathBuffer, strlen(pathBuffer));
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1027:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(pathBuffer, str, sizeof(pathBuffer) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1076:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(pathBuffer, str, sizeof(pathBuffer) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/bin/win32/BINDInstall/BINDInstallDlg.cpp:1177:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		(LPBYTE)pszMsgDLL, (DWORD)(strlen(pszMsgDLL) + 1)) != ERROR_SUCCESS)
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:321:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	skey->size = strlen(skey->data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:353:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	skey->size = strlen(skey->data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:472:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		key.size = strlen(input_key);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:477:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	data.size = strlen(input_data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:528:5:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
				strncpy(&data_type, token.value.as_pointer, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:531:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				if (strlen(token.value.as_pointer) > 1 ||
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:1001:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		bdbkey.size = strlen(zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:1029:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		bdbkey.size = strlen(host);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:1098:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		bdbkey.size = strlen(c_zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/bin/dlzbdb/dlzbdb.c:1102:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			bdbdata.size = strlen(c_ip);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:113:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	char *lastchar = (char *)&tmp[strlen(tmp) + 1];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:229:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:238:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	data.size = strlen(data.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:301:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:320:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(tmp, data.data, data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:413:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:482:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:502:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdb_driver.c:529:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(tmp, data.data, data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:110:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	for (p1 = str, p2 = str + strlen(str) - 1; p2 > p1; ++p1, --p2) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:130:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	char *lastchar = (char *)&tmp[strlen(tmp)];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:255:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:264:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	data.size = strlen(data.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:344:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	xfr_key.size = strlen(xfr_key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:380:3:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
		strcat(dns_key.data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:381:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(dns_key.data, xfr_data.data, xfr_data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:398:4:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
			strncpy(tmp, dns_data.data, dns_data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:513:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:561:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(zone) + strlen(name) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:561:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(zone) + strlen(name) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:571:2:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
	strcat(keyStr, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_bdbhpt_driver.c:591:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(tmp, data.data, data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:102:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int len = strlen(input);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:185:5:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
				strncat(out, (char *)&tmpPtr[i + 1],
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:188:4:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
			strncat(out, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:192:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen((char *)&tmpPtr[i + 1]) <=
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:208:4:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
			strncat(out, (char *)&tmpPtr[i], cd->splitcnt);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:210:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(out, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:214:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen((char *)&tmpPtr[i]) <= (unsigned int)cd->splitcnt) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:272:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(host);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:272:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(host);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:274:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:274:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:276:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:327:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(tmpPath, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:335:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(tmpPath, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:373:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	astPos = strlen(dir->dirname) - 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:379:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(tmp) - 3 > basedirlen) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:384:6:  [1] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant character.
					strcpy(host, "*");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:392:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
						if ((strlen(host) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:393:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
						     strlen(tmpPtr + 1) + 2) >
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:398:7:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
						strcat(host, ".");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:401:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					if ((strlen(host) + strlen(tmpString) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:401:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					if ((strlen(host) + strlen(tmpString) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:532:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:639:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	basepathlen = strlen(basepath);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:792:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	path[strlen(path) - 1] = '\0';
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:855:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(argv[5]) > 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:864:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:891:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->basedirsize = strlen(cd->basedir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:895:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->datadirsize = strlen(cd->datadir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_filesystem_driver.c:899:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->xfrdirsize = strlen(cd->xfrdir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:166:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (ldap_url->lud_dn == NULL || strlen(ldap_url->lud_dn) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:361:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = len + strlen(vals[0]) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:432:6:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
					strcat(data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:437:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:459:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(data) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:936:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strncasecmp(argv[2], V2, strlen(V2)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:938:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[2], V3, strlen(V3)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:949:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strncasecmp(argv[3], SIMPLE, strlen(SIMPLE)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:951:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[3], KRB41, strlen(KRB41)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:953:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[3], KRB42, strlen(KRB42)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_ldap_driver.c:987:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(argv[9]) > 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:98:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(instr);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:413:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:428:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:635:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_mysql_driver.c:643:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_odbc_driver.c:119:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	return (strlen((char *)a));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_odbc_driver.c:329:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(instr);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_odbc_driver.c:583:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				       (SQLINTEGER)strlen(querystring));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:234:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(instr);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:660:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(PQgetvalue(rs, i, j)) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:674:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:887:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(PQgetvalue(rs, i, j)) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/dlz_postgres_driver.c:895:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/include/dlz/sdlz_helper.h:61:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int strlen;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:117:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (query_str == NULL || strlen(query_str) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:164:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tseg->strlen = strlen(tseg->sql);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:285:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			length += tseg->strlen;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:287:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			length += strlen(*(char **)tseg->sql);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:462:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (key == NULL || input == NULL || strlen(input) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/drivers/sdlz_helper.c:466:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	keylen = strlen(key);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:89:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (first_empty == -1 && strlen(list[i].name) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:114:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(name) >= sizeof(list[i].name) ||
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:115:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(type) >= sizeof(list[i].type) ||
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:116:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(data) >= sizeof(list[i].data))
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:121:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].name, name, sizeof(list[i].name));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:124:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].type, type, sizeof(list[i].type));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:127:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(list[i].data, data, sizeof(list[i].data));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:256:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	state->zone_name = malloc(strlen(argv[1]) + 2);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:261:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (argv[1][strlen(argv[1]) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:408:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(full_name, state->zone_name, 255);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:517:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(state->current[i].name) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:586:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(state->deletes[i].name) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:595:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(state->adds[i].name) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/example/dlz_example.c:737:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (name[strlen(name) - 1] != '.') {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:119:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	for (p1 = str, p2 = str + strlen(str) - 1; p2 > p1; ++p1, --p2) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:139:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	char *lastchar = (char *)&tmp[strlen(tmp)];
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:265:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:274:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	data.size = strlen(data.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:351:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	xfr_key.size = strlen(xfr_key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:387:3:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
		strcat(dns_key.data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:388:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(dns_key.data, xfr_data.data, xfr_data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:405:4:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
			strncpy(tmp, dns_data.data, dns_data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:517:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(key.data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:577:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(zone) + strlen(name) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:577:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	key.size = strlen(zone) + strlen(name) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:587:2:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
	strcat(keyStr, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/bdbhpt/dlz_bdbhpt_dynamic.c:607:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(tmp, data.data, data.size);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:110:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (query_str == NULL || strlen(query_str) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:166:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tseg->strlen = strlen(tseg->cmd);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:287:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			length += tseg->strlen;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:289:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			length += strlen(*(char **)tseg->cmd);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/common/dlz_dbi.c:478:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	keylen = strlen(key);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:40:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(dirname) + 3 > sizeof(dir->dirname)) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:45:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	p = dir->dirname + strlen(dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:97:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (sizeof(dir->entry.name) <= strlen(entry->d_name)) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dir.c:103:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	dir->entry.length = strlen(entry->d_name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:99:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int len = strlen(input);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:185:5:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
				strncat(out, (char *)&tmpPtr[i + 1],
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:188:4:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
			strncat(out, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:192:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen((char *)&tmpPtr[i + 1]) <=
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:208:4:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
			strncat(out, (char *)&tmpPtr[i], cd->splitcnt);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:210:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(out, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:214:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen((char *)&tmpPtr[i]) <= (unsigned int)cd->splitcnt) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:261:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(host);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:261:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(host);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:263:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:263:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone) + strlen(client);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:265:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:326:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(tmpPath, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:334:3:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
		strncat(tmpPath, (char *)&cd->pathsep, 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:386:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	astPos = strlen(dir->dirname) - 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:392:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(tmp) - 3 > basedirlen) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:397:6:  [1] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant character.
					strcpy(host, "*");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:405:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
						if ((strlen(host) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:406:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
						     strlen(tmpPtr + 1) + 2) >
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:411:7:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
						strcat(host, ".");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:414:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					if ((strlen(host) + strlen(tmpString) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:414:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					if ((strlen(host) + strlen(tmpString) +
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:438:7:  [1] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant character.
						strcpy(host, "*");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:440:7:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
						strncpy(host,
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:543:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(data);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:640:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	basepathlen = strlen(basepath);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:804:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	path[strlen(path) - 1] = '\0';
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:880:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(argv[5]) > 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:889:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(argv[1]);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:913:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->basedirsize = strlen(cd->basedir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:920:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->datadirsize = strlen(cd->datadir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/filesystem/dlz_filesystem_dynamic.c:927:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cd->xfrdirsize = strlen(cd->xfrdir);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/include/dlz_dbi.h:65:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int strlen;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:170:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (ldap_url->lud_dn == NULL || strlen(ldap_url->lud_dn) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:360:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			len = len + strlen(vals[0]) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:435:6:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
					strcat(data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:440:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(data, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:460:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(data) < 1) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:962:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strncasecmp(argv[2], V2, strlen(V2)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:964:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[2], V3, strlen(V3)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:974:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strncasecmp(argv[3], SIMPLE, strlen(SIMPLE)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:976:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[3], KRB41, strlen(KRB41)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:978:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strncasecmp(argv[3], KRB42, strlen(KRB42)) == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/ldap/dlz_ldap_dynamic.c:1014:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(argv[9]) > 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:207:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(instr);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:497:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:515:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:697:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysql/dlz_mysql_dynamic.c:711:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:324:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	s = (char *)malloc((strlen(original) * 2) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:326:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		memset(s, 0, (strlen(original) * 2) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:329:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					 strlen(original));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:350:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	*len += strlen(*s);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:491:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (s == NULL || s[strlen(s) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:514:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(name) == 0 || strcmp(name, "@") == 0) {
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:535:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	new = (char *)malloc(strlen(name) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:540:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	nlen = strlen(name);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:541:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	zlen = strlen(zone);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:547:3:  [1] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant character.
		strcpy(new, "@");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:559:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(new, name, nlen - zlen);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:594:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	ret = mysql_real_query(dbi->sock, query, strlen(query));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:678:50:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned char *packet = (unsigned char *)malloc(strlen(zone) + 18);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:684:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	*packetlen = strlen(zone) + 18;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:704:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	memmove(&packet[13], zone, strlen(zone));
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:705:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	packet[13 + strlen(zone)] = 0;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1147:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		real_name = (char *)malloc(strlen(zone) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1153:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		real_name = (char *)malloc(strlen(name) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/mysqldyn/dlz_mysqldyn_mod.c:1697:3:  [1] (buffer) sscanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
		sscanf(record->data, "%*s %*s %31s %*s %*s %*s %*s", sn);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:215:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(instr);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:570:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:588:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:772:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len += strlen(safeGet(row[j])) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/sqlite3/dlz_sqlite3_dynamic.c:786:5:  [1] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). Risk is low because the source is a constant character.
				strcat(tmpString, " ");
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/wildcard/dlz_wildcard_dynamic.c:264:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
		strncpy(namebuf, zone, len - 1);
/home/capstone/Desktop/root/bind9-9.16.1/contrib/dlz/modules/wildcard/dlz_wildcard_dynamic.c:568:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	p += strlen(p);
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:38:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		char filename[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:38:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		char filename[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/bind9-9.16.1/fuzz/main.c:63:7:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		n = read(fd, data, st.st_size);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:92:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:106:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:120:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:121:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:232:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&buffer, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:233:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buffer, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:299:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:300:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:317:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:344:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:345:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:362:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:422:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, str, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:423:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:1302:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(cfg_obj_asstring(obj)) > 1024U)
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:1814:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				r.length = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:1838:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2095:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2120:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, znamestr, strlen(znamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2121:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(znamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2154:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tmp += strlen(tmp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2155:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len -= strlen(tmp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2715:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_constinit(&b2, snamestr, strlen(snamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2716:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_add(&b2, strlen(snamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:2919:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(algorithms[i].name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3038:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, keyid, strlen(keyid));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3039:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(keyid));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3210:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_constinit(&b, keyval, strlen(keyval));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3211:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			isc_buffer_add(&b, strlen(keyval));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3342:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, namestr, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:3343:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/check.c:4749:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			r.length = strlen(r.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/bind9/getaddresses.c:65:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strlen(hostname) <= 127U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/byaddr.c:84:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = (unsigned int)strlen(textname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:889:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int l = strlen(opt);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1508:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			    strlen(zone->catzs->view->name) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/catz.c:1540:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		rlen += strlen(entry->opts.zonedir) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dlz.c:424:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, zone_name, strlen(zone_name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dlz.c:425:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(zone_name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnstap.c:408:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		r->length = strlen((char *)p);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnstap.c:881:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	result = isc_buffer_reserve(b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dnstap.c:914:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	size_t dlen = strlen(DNSTAP_CONTENT_TYPE), rlen = 0;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:596:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	newfilenamelen = strlen(filename) + 5;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:598:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		newfilenamelen += strlen(dirname) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:646:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		newfilenamelen = strlen(filename) + 7;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:648:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			newfilenamelen += strlen(dirname) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:666:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	newfilenamelen = strlen(filename) + 9;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:668:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		newfilenamelen += strlen(dirname) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1566:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, DST_AS_STR(token), strlen(DST_AS_STR(token)));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1567:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(DST_AS_STR(token)));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:1944:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		(int)strlen(output) - 1, output);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2190:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (isc_buffer_availablelength(out) < strlen(directory)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2194:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(directory) > 0U &&
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2195:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		    directory[strlen(directory) - 1] != '/') {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/dst_api.c:2282:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	int olen = strlen(ofilename);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ecs.c:43:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(buf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen-win32.h:223:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) + 3 > sizeof(pattern)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen-win32.h:232:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	p = pattern + strlen(pattern);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:219:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(s) < TYPECLASSBUF);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:320:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(typebuf) < TYPECLASSBUF);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:340:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(typebuf) > sizeof(ttn->typebuf) - 1) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:345:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(ttn->typebuf, typebuf, sizeof(ttn->typebuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:348:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(ttn->macroname, ttn->typebuf, sizeof(ttn->macroname));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:352:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	c = strlen(ttn->macroname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:375:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(attr) > sizeof(ttn->attr) - 1) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:381:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(ttn->attr, attr, sizeof(ttn->attr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:398:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(typebuf) < TYPECLASSBUF);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:399:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(classbuf) < TYPECLASSBUF);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:400:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(dirbuf) < PATH_MAX);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:413:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(newtt->classbuf, classbuf, sizeof(newtt->classbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:416:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(newtt->typebuf, typebuf, sizeof(newtt->typebuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:422:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(newtt->dirbuf, dirbuf, sizeof(newtt->dirbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:465:2:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
	strncpy(newcc->classbuf, classbuf, sizeof(newcc->classbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:524:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	n = strlen(string);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:605:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(isc_commandline_argument) >
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:650:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strcmp(buf + 6 + strlen(srcdir), dir.filename) != 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gen.c:931:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					s, strlen(s) < 2U ? "\t" : "", s);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapi_link.c:264:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(keystr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/gssapictx.c:714:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			size = strlen(gssapi_keytab) + 13;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:698:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		namelen = strlen(filename);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/journal.c:2183:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(filename);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/keytable.c:566:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	result = isc_buffer_reserve(b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:830:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(gtype);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:863:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&buffer, lhsbuf, strlen(lhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:864:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buffer, strlen(lhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:865:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_setactive(&buffer, strlen(lhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:889:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&buffer, rhsbuf, strlen(rhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:890:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buffer, strlen(rhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:891:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_setactive(&buffer, strlen(rhsbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:982:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (tmp[strlen(tmp) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/master.c:983:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tmp[strlen(tmp) - 1] = '\0';
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:379:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			unsigned int i, len = strlen(indentctx->string);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:452:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/masterdump.c:1875:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	tempnamelen = strlen(file) + 20;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:90:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(s) >= isc_buffer_availablelength(b)) { \
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/message.c:4420:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (isc_buffer_availablelength(target) < strlen(opcodetext[opcode])) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2443:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buf, src, strlen(src));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/name.c:2444:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buf, strlen(src));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/nta.c:498:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	result = isc_buffer_reserve(b, strlen(str));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslrsa_link.c:801:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = (unsigned short)strlen(key->engine) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/opensslrsa_link.c:809:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = (unsigned short)strlen(key->label) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/peer.c:632:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, keyval, strlen(keyval));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/peer.c:633:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(keyval));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11ecdsa_link.c:734:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = strlen(key->engine) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11ecdsa_link.c:741:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = strlen(key->label) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11eddsa_link.c:731:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = strlen(key->engine) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11eddsa_link.c:738:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = strlen(key->label) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11rsa_link.c:1529:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = (unsigned short)strlen(key->engine) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/pkcs11rsa_link.c:1537:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		priv.elements[i].length = (unsigned short)strlen(key->label) +
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:203:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rcode.c:266:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		n = strlen(table[i].name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1746:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata.c:1765:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(tmpbuf) > isc_buffer_availablelength(target)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/mx_15.c:33:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (tmp[strlen(tmp) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/mx_15.c:34:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tmp[strlen(tmp) - 1] = '\0';
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3_50.c:86:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		RETERR(uint8_tobuffer(strlen(DNS_AS_STR(token)) / 2, target));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/nsec3param_51.c:84:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		RETERR(uint8_tobuffer(strlen(DNS_AS_STR(token)) / 2, target));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/rrsig_46.c:88:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(DNS_AS_STR(token)) <= 10U && *DNS_AS_STR(token) != '-' &&
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/generic/rrsig_46.c:113:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(DNS_AS_STR(token)) <= 10U && *DNS_AS_STR(token) != '-' &&
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rdata/in_1/wks_11.c:171:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		for (i = strlen(service) - 1; i >= 0; i--) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rootns.c:226:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(root_ns);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rpz.c:849:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	end = &ip_str[strlen(ip_str) + 1];
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:837:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		add_log_str(&lb, str1, strlen(str1));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:840:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		add_log_str(&lb, str2, strlen(str2));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:874:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			add_log_str(&lb, rstr, strlen(rstr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:907:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	add_log_str(&lb, strbuf, strlen(strbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/rrl.c:959:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		add_log_str(&lb, strbuf, strlen(strbuf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:339:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(type);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:357:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	datalen = strlen(data);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:426:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, name, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdb.c:427:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:242:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int len = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:254:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	unsigned int len = (strlen(data) / 64) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1810:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(type);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1859:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_constinit(&b, data, strlen(data));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1860:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&b, strlen(data));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1930:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, name, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/sdlz.c:1931:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:235:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:236:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:277:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu.c:278:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:66:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) > sizeof(addr.sun_path)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:184:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		  strlen(b_signer) + 1 + /* Signer */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:185:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		  strlen(b_name) + 1 +	 /* Name */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:186:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		  strlen(b_addr) + 1 +	 /* Address */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:187:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		  strlen(b_type) + 1 +	 /* Type */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:188:5:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		  strlen(b_key) + 1 +	 /* Key */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/ssu_external.c:231:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	ret = read(fd, &reply, sizeof(uint32_t));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/db_test.c:222:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep(100000); /* 100 ms */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/db_test.c:258:5:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
				usleep(100000); /* 100 ms */
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dbiterator_test.c:61:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, src, strlen(src));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dbiterator_test.c:62:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(src));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:347:2:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
	usleep(usec);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:500:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	length = strlen(src);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:568:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	length = strlen(namestr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dnstest.c:614:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(changes[i].type);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dst_test.c:172:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&b, keyname, strlen(keyname));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/dst_test.c:173:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(keyname));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:105:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&namebuf, deconst_namestr, strlen(deconst_namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/keytable_test.c:106:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&namebuf, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:114:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(origin);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/master_test.c:490:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(myorigin);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/name_test.c:414:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = strlen(testcases[i].namestr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/nsec3_test.c:118:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	length = strlen(params->expected_salt);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tests/sigs_test.c:143:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	typeregion.length = strlen(expected->type);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/time.c:90:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(buf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/time.c:142:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(source) != 14U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:509:6:  [1] (buffer) fscanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
	n = fscanf(fp, "%1023s %1023s %u %u %1023s %4095s\n", namestr,
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:523:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, namestr, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:524:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(namestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:531:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, creatorstr, strlen(creatorstr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:532:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(creatorstr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:539:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&b, algorithmstr, strlen(algorithmstr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/tsig.c:540:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&b, strlen(algorithmstr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1496:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		size += strlen(zone->db_argv[i]) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1507:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tmp2 += strlen(tmp2) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:1730:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		int len = strlen(zone->masterfile) + sizeof(".jnl");
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:14868:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(zone->view->name) < isc_buffer_availablelength(&buffer))
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:14937:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	} else if (strlen(zone->view->name) <
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18122:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	buflen = strlen(path) + strlen(templat) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:18122:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	buflen = strlen(path) + strlen(templat) + 2;
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zone.c:20357:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			r.length = strlen(algstr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/dns/zoneverify.c:1961:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		       (int)strlen(algbuf) + 13, "", vctx->zsk_algorithms[i],
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/dnsconf.c:113:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&namebuf, keynamestr, strlen(keynamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/dnsconf.c:114:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&namebuf, strlen(keynamestr));
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:614:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(domain);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getaddrinfo.c:625:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(hostname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:214:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((strlen(numserv) + 1) > servlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:219:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((strlen(sp->s_name) + 1) > servlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:262:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			char *p = numaddr + strlen(numaddr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:282:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(numaddr) + 1 > hostlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/getnameinfo.c:419:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if ((strlen(numaddr) + 1) > hostlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:140:7:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	ch = fgetc(fp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:142:8:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		ch = fgetc(fp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:157:7:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	ch = fgetc(fp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:159:8:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		ch = fgetc(fp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:202:8:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
		ch = fgetc(fp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:294:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:320:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:376:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:381:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	while (strlen(word) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:410:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:414:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	while (strlen(word) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:466:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:470:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	while (strlen(word) > 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:519:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	REQUIRE(strlen(filename) > 0U);
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/resconf.c:547:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (strlen(word) == 0U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/irs/win32/resconf.c:99:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	    strlen(FixedInfo->DomainName) > 0) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base32.c:419:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/base64.c:246:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/buffer.c:457:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/hex.c:188:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(source);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:472:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	hlen = strlen(header);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:475:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		vlen = strlen(value);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:823:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_reinit(b, msg, strlen(msg));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:824:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(b, strlen(msg));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:847:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_reinit(b, msg, strlen(msg));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:848:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(b, strlen(msg));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1136:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	needlen = strlen(httpd->protocol) + 1; /* protocol + space */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1138:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	needlen += strlen(httpd->retmsg) + 2; /* return msg + CRLF */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1159:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	needlen = strlen(name); /* name itself */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1161:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		needlen += 2 + strlen(val); /* :<space> and val */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1207:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	needlen = strlen(name);	    /* name itself */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/httpd.c:1208:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	needlen += 2 + strlen(buf); /* :<space> and val */
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/include/isc/buffer.h:908:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		_length = (unsigned int)strlen(_source);                  \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/lex.c:421:9:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
				c = getc(stream);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:429:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			    sizeof(*message) + strlen(message->text) + 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1066:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	bnamelen = strlen(bname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1151:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	bnamelen = strlen(bname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1684:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
								strlen(message->text));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/log.c:1713:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				       strlen(lctx->buffer) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/mem.c:1429:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(s) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:147:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		alen = strlen(netaddr->type.un);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:164:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	alen = strlen(abuf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netaddr.c:316:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) > sizeof(netaddr->type.un) - 1) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:419:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
		usleep(1000000);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/netmgr/netmgr.c:547:4:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
			usleep(100000);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:318:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(pin) > PINLEN) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:463:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				  (CK_ULONG)strlen(token->pin));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/pk11.c:882:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(label) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/regex.c:386:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
						len = strlen(cc[i]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/sockaddr.c:142:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		plen = strlen(sockaddr->type.sunix.sun_path);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/sockaddr.c:162:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	plen = strlen(pbuf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/sockaddr.c:469:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) >= sizeof(sockaddr->type.sunix.sun_path)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/string.c:95:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		return (dlen + strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/crc64_test.c:65:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_memory_equal(hex, result, (result ? strlen(result) : 0));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/hmac_test.c:113:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_memory_equal(hexdigest, result, (result ? strlen(result) : 0));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:104:55:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		result = isc_ht_add(ht, (const unsigned char *)key, strlen(key),
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:128:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				     strlen(key), &f);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:162:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				       strlen(key));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/ht_test.c:165:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				     strlen(key), &f);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/isctest.c:180:2:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
	usleep(usec);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/md_test.c:109:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_memory_equal(hexdigest, result, (result ? strlen(result) : 0));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/mem_test.c:314:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(p), 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:198:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:266:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:278:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:355:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:447:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:546:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:641:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/socket_test.c:759:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	r.length = strlen(sendbuf) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:64:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(buf), 20);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:100:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(buf), 24);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:137:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(buf), 19);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:172:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(buf), 23);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tests/time_test.c:208:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	assert_int_equal(strlen(buf), 17);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:251:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len = strlen(day[i]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:257:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len = strlen(abday[i]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:278:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len = strlen(mon[i]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:284:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				len = strlen(abmon[i]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:375:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				bp += strlen(am_pm[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/tm.c:386:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				bp += strlen(am_pm[1]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:60:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(dirname) + 3 > sizeof(dir->dirname)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:69:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	p = dir->dirname + strlen(dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:113:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (sizeof(dir->entry.name) <= strlen(entry->d_name)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:122:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	dir->entry.length = strlen(entry->d_name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/dir.c:214:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	for (x = templet + strlen(templet) - 1; *x == 'X' && x >= templet;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:245:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((prefixlen + strlen(templet) + 1) > buflen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:253:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((strlen(templet) + 1) > buflen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:544:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(base) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:577:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (strlen(dirname) + 1 == length) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:594:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) + strlen(filename) + 1 > pathlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:594:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(path) + strlen(filename) + 1 > pathlen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:714:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	ret = read(fd, buf, len);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:766:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(base) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:777:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		l += strlen(dir) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:780:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		l += strlen(ext) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/file.c:788:59:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	err = isc_md(ISC_MD_SHA256, (const unsigned char *)base, strlen(base),
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/ifiter_getifaddrs.c:153:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(ifa->ifa_name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/interfaceiter.c:189:8:  [1] (buffer) sscanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
	res = sscanf(iter->entry, "%32[a-f0-9] %x %x %x %x %16s\n", address,
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/interfaceiter.c:198:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(address) != 32) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:970:7:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	cc = read(thread->pipe_fds[0], buf, sizeof(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/unix/socket.c:4345:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	INSIST(strlen(sockaddr->type.sunix.sun_path) < sizeof(path));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:65:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	if (strlen(dirname) + 3 > sizeof(dir->dirname)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:74:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	p = dir->dirname + strlen(dir->dirname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:127:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	dir->entry.length = strlen(dir->entry.name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:202:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	       strlen(dir->entry.find_data.cFileName));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:209:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	dir->entry.length = strlen(dir->entry.name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/dir.c:255:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	for (x = templet + strlen(templet) - 1; *x == 'X' && x >= templet;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:349:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((prefixlen + strlen(templet) + 1) > buflen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:357:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((strlen(templet) + 1) > buflen) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:637:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if (namelen <= strlen(s)) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:802:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
	ret = read(fd, buf, (unsigned int)len);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:848:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(base) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:859:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		l += strlen(dir) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:862:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		l += strlen(ext) + 1;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/file.c:870:59:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	err = isc_md(ISC_MD_SHA256, (const unsigned char *)base, strlen(base),
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntgroups.c:115:13:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			retlen = wcslen(pTmpLBuf->lgrui0_name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isc/win32/ntgroups.c:175:13:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			retlen = wcslen(pTmpBuf->grui0_name);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:211:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		len = (unsigned int)strlen(ks);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:853:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:867:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(b);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:1018:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(_frm) + strlen(_to) + strlen(_ser) + strlen(_tim) + 4;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:1018:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(_frm) + strlen(_to) + strlen(_ser) + strlen(_tim) + 4;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:1018:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(_frm) + strlen(_to) + strlen(_ser) + strlen(_tim) + 4;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/cc.c:1018:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(_frm) + strlen(_to) + strlen(_ser) + strlen(_tim) + 4;
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccc/include/isccc/util.h:204:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		(r).rend = (r).rstart + strlen(s); \
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/aclconf.c:181:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	keylen = strlen(txtname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/aclconf.c:506:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(search);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/kaspconf.c:108:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		alg.length = strlen(alg.base);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/namedconf.c:367:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		obj->value.string.length = strlen("local");
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/namedconf.c:2528:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(str);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:793:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cfg_print_chars(pctx, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:837:6:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	l = strlen(p);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:877:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cfg_print_chars(pctx, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:926:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cfg_print_chars(pctx, s, strlen(s));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1091:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	cfg_print_chars(pctx, buf, strlen(buf));
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:1424:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	len = strlen(contents);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3041:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((flags & CFG_ADDR_V4PREFIXOK) != 0 && strlen(s) <= 15U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/parser.c:3054:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		if ((flags & CFG_ADDR_V6OK) != 0 && strlen(s) <= 127U) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/tests/duration_test.c:146:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&buf1, conf, strlen(conf) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/isccfg/tests/duration_test.c:147:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&buf1, strlen(conf) - 1);
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/client.c:972:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		ednsopts[count].length = (uint16_t)strlen(nsidp);
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/nstest.c:410:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_constinit(&buffer, name, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/nstest.c:411:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&buffer, strlen(name));
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/tests/nstest.c:874:2:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
	usleep(usec);
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1363:7:  [1] (buffer) equal:Function does not check the second iterator for over-read conditions (CWE-126).  This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it. 
	bool equal, case_equal, ttl_equal;
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1380:6:  [1] (buffer) equal:Function does not check the second iterator for over-read conditions (CWE-126).  This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it. 
	if (equal && case_equal && ttl_equal) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1406:8:  [1] (buffer) equal:Function does not check the second iterator for over-read conditions (CWE-126).  This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it. 
		if (!equal) {
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1772:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			if (tmp[strlen(tmp) - 1] == '.') {
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:1773:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
				tmp[strlen(tmp) - 1] = '\0';
/home/capstone/Desktop/root/bind9-9.16.1/lib/ns/update.c:3010:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
					len = strlen(rdstr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/nsprobe.c:1014:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	domainlen = strlen(buf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:116:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		tr.length = strlen(algname);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:153:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(keynamestr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:204:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		namelen = strlen(name_space);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:262:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/resolve.c:437:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(argv[0]);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:227:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(buf);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-async.c:287:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-request.c:76:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	namelen = strlen(namestr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-request.c:155:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			tr.length = strlen(isc_commandline_argument);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:257:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		namelen = strlen(zonenamestr);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:429:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_init(&source, word, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:430:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	isc_buffer_add(&source, strlen(word));
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:453:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		result = isc_lex_create(mctx, strlen(cmdline), &lex);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:455:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_init(&source, cmdline, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:456:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		isc_buffer_add(&source, strlen(cmdline));
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:560:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:579:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:659:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		region.length = strlen(word);
/home/capstone/Desktop/root/bind9-9.16.1/lib/samples/sample-update.c:671:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			region.length = strlen(word);
