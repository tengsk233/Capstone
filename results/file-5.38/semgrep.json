{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":43,"offset":11529},"extra":{"metavars":{"$FUN":{"start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":12,"offset":11498},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_0","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":20,"offset":11586},"extra":{"metavars":{"$FUN":{"start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":16,"offset":11582},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_0","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":50,"offset":11964},"extra":{"metavars":{"$FUN":{"start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":23,"offset":11937},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_1","lines":"\t\tif ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":20,"offset":11994},"extra":{"metavars":{"$FUN":{"start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":16,"offset":11990},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_1","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":13,"offset":12026},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":9,"offset":12022},"abstract_content":"offset"},"$SIGNED":{"start":{"line":397,"col":12,"offset":12025},"end":{"line":397,"col":13,"offset":12026},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6e9b1b36b077d2afac5671077969c1d3214364ff1309270af29cd1cf6e02f4739042a16b3e432bacd6f74d1c3762ee1376f248c468a3a689aa12bb83c421f415_0","lines":"\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":401,"col":4,"offset":12095},"end":{"line":403,"col":22,"offset":12226},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":401,"col":4,"offset":12095},"end":{"line":401,"col":10,"offset":12101},"abstract_content":"offset"},"$SIGNED":{"start":{"line":402,"col":8,"offset":12159},"end":{"line":402,"col":13,"offset":12164},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e843a5c3332c7bc415f633872b0a705cfb8131fe1a24fe2be0630f3b19aa7516de276467ee17c73f3d8ed25707e42e1519d19b83eb37e1a845598eac335a899c_0","lines":"\t\t\toffset = donote(ms, nbuf, offset, CAST(size_t, bufsize),\n\t\t\t    clazz, swap, 4, flags, notecount, fd, ph_off,\n\t\t\t    ph_num, fsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":32,"offset":12412},"extra":{"metavars":{"$FUN":{"start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":8,"offset":12388},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_0","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":32,"offset":13555},"extra":{"metavars":{"$FUN":{"start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":8,"offset":13531},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_1","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":535,"col":1,"offset":15342},"end":{"line":543,"col":20,"offset":15711},"extra":{"metavars":{"$EXPR1":{"start":{"line":541,"col":6,"offset":15562},"end":{"line":541,"col":12,"offset":15568},"abstract_content":"namesz"},"$EXPR2":{"start":{"line":541,"col":16,"offset":15572},"end":{"line":541,"col":17,"offset":15573},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4bbaf034a2d0109641a679d4d7f28fc8fce14efe8806b16d298f11d37ce7c62c5ed55b7efc3aa32f2e404101fc6cd468c458fc6742f78db14ae49e7e3063e6b6_0","lines":"private int\n/*ARGSUSED*/\ndo_bid_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,\n    int swap __attribute__((__unused__)), uint32_t namesz, uint32_t descsz,\n    size_t noff, size_t doff, int *flags)\n{\n\tif (namesz == 4 && strcmp(RCAST(char *, &nbuf[noff]), \"GNU\") == 0 &&\n\t    type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {\n\t\tuint8_t desc[20];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":36,"offset":16098},"extra":{"metavars":{"$FUN":{"start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":9,"offset":16071},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_2","lines":"\t\tmemcpy(desc, &nbuf[doff], descsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_3","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$TYPE":{"start":{"line":597,"col":3,"offset":17039},"end":{"line":597,"col":11,"offset":17047},"abstract_content":"uint32_t"},"$LEN":{"start":{"line":597,"col":17,"offset":17053},"end":{"line":597,"col":18,"offset":17054},"abstract_content":"4"},"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"},"$BUF":{"start":{"line":598,"col":10,"offset":17066},"end":{"line":598,"col":14,"offset":17070},"abstract_content":"desc"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"de1d741e6403cee5f063bfc5c8cfbc04ddc65abfe5aabbe904934415ffda5616264652e76631ca071bc8d91207e87f47bcc805adcb13b406bfe063fe647b46d9_0","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":43,"offset":18877},"extra":{"metavars":{"$FUN":{"start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":9,"offset":18843},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_4","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":43,"offset":19638},"extra":{"metavars":{"$FUN":{"start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":9,"offset":19604},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_5","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":13,"offset":19749},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":9,"offset":19745},"abstract_content":"i"},"$SIGNED":{"start":{"line":706,"col":12,"offset":19748},"end":{"line":706,"col":13,"offset":19749},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1dc123318f88b1bb81c6a16f5af40243aa1d03ff79f6c2d2da3b6e52b46996ca21da2d660d0f5893db116eec2e0ee6dd7364425651fab7daaf8d05dd89fdd5db_0","lines":"\t\tfor (i = 0; i < __arraycount(pax); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":53,"offset":21564},"extra":{"metavars":{"$FUN":{"start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":10,"offset":21521},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_6","lines":"\t\t\tmemcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":790,"col":3,"offset":22188},"end":{"line":808,"col":4,"offset":22689},"extra":{"metavars":{"$EXPR1":{"start":{"line":790,"col":30,"offset":22215},"end":{"line":790,"col":36,"offset":22221},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":790,"col":39,"offset":22224},"end":{"line":790,"col":52,"offset":22237},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"145439dd701cd8b32545a5bf173dc4d6100bc74736028ba3a2829b8fbc80e8abe214cfa60931341fb07baa431349602a4ad9884c4ac2c5dee5ba39c66f6623c1_0","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t argoff, pidoff;\n\n\t\t\tif (clazz == ELFCLASS32)\n\t\t\t\targoff = 4 + 4 + 17;\n\t\t\telse\n\t\t\t\targoff = 4 + 4 + 8 + 17;\n\t\t\tif (file_printf(ms, \", from '%.80s'\", nbuf + doff +\n\t\t\t    argoff) == -1)\n\t\t\t\treturn -1;\n\t\t\tpidoff = argoff + 81 + 2;\n\t\t\tif (doff + pidoff + 4 <= size) {\n\t\t\t\tif (file_printf(ms, \", pid=%u\",\n\t\t\t\t    elf_getu32(swap, *RCAST(uint32_t *, (nbuf +\n\t\t\t\t    doff + pidoff)))) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":24,"offset":22319},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":11,"offset":22306},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":794,"col":14,"offset":22309},"end":{"line":794,"col":15,"offset":22310},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d224ed366b55a4dba06c99bc964b44765a46c9e82558bae5de2dcfa9b4327367204c72521aa9207b805abc237ef024e660d0dd2051afdb164b155719e604481a_0","lines":"\t\t\t\targoff = 4 + 4 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":28,"offset":22356},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":11,"offset":22339},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":796,"col":14,"offset":22342},"end":{"line":796,"col":15,"offset":22343},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d224ed366b55a4dba06c99bc964b44765a46c9e82558bae5de2dcfa9b4327367204c72521aa9207b805abc237ef024e660d0dd2051afdb164b155719e604481a_1","lines":"\t\t\t\targoff = 4 + 4 + 8 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":28,"offset":22477},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":10,"offset":22459},"abstract_content":"pidoff"},"$SIGNED":{"start":{"line":800,"col":13,"offset":22462},"end":{"line":800,"col":19,"offset":22468},"abstract_content":"argoff"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6055e1609217ca4a0f61a04eca982bd4df75d2583356867d9dcd5cfed99fea470933bb59bc0924854edd01cd90fb5bb950c8cb0fe1758b3119471a1c5ea448ab_0","lines":"\t\t\tpidoff = argoff + 81 + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":812,"col":3,"offset":22719},"end":{"line":913,"col":4,"offset":25077},"extra":{"metavars":{"$EXPR1":{"start":{"line":812,"col":30,"offset":22746},"end":{"line":812,"col":36,"offset":22752},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":812,"col":39,"offset":22755},"end":{"line":812,"col":52,"offset":22768},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"145439dd701cd8b32545a5bf173dc4d6100bc74736028ba3a2829b8fbc80e8abe214cfa60931341fb07baa431349602a4ad9884c4ac2c5dee5ba39c66f6623c1_1","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t i, j;\n\t\t\tunsigned char c;\n\t\t\t/*\n\t\t\t * Extract the program name.  We assume\n\t\t\t * it to be 16 characters (that's what it\n\t\t\t * is in SunOS 5.x and Linux).\n\t\t\t *\n\t\t\t * Unfortunately, it's at a different offset\n\t\t\t * in various OSes, so try multiple offsets.\n\t\t\t * If the characters aren't all printable,\n\t\t\t * reject it.\n\t\t\t */\n\t\t\tfor (i = 0; i < NOFFSETS; i++) {\n\t\t\t\tunsigned char *cname, *cp;\n\t\t\t\tsize_t reloffset = prpsoffsets(i);\n\t\t\t\tsize_t noffset = doff + reloffset;\n\t\t\t\tsize_t k;\n\t\t\t\tfor (j = 0; j < 16; j++, noffset++,\n\t\t\t\t    reloffset++) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the buffer; if\n\t\t\t\t\t * we are, just give up.\n\t\t\t\t\t */\n\t\t\t\t\tif (noffset >= size)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the contents;\n\t\t\t\t\t * if we are, this obviously\n\t\t\t\t\t * isn't the right offset.\n\t\t\t\t\t */\n\t\t\t\t\tif (reloffset >= descsz)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\tc = nbuf[noffset];\n\t\t\t\t\tif (c == '\\0') {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A '\\0' at the\n\t\t\t\t\t\t * beginning is\n\t\t\t\t\t\t * obviously wrong.\n\t\t\t\t\t\t * Any other '\\0'\n\t\t\t\t\t\t * means we're done.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A nonprintable\n\t\t\t\t\t\t * character is also\n\t\t\t\t\t\t * wrong.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (!isprint(c) || isquote(c))\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t * Well, that worked.\n\t\t\t\t */\n\n\t\t\t\t/*\n\t\t\t\t * Try next offsets, in case this match is\n\t\t\t\t * in the middle of a string.\n\t\t\t\t */\n\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {\n\t\t\t\t\tsize_t no;\n\t\t\t\t\tint adjust = 1;\n\t\t\t\t\tif (prpsoffsets(k) >= prpsoffsets(i))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++)\n\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);\n\t\t\t\t\tif (adjust)\n\t\t\t\t\t\ti = k;\n\t\t\t\t}\n\n\t\t\t\tcname = CAST(unsigned char *,\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)]);\n\t\t\t\tfor (cp = cname; cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp); cp++)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t * Linux apparently appends a space at the end\n\t\t\t\t * of the command line: remove it.\n\t\t\t\t */\n\t\t\t\twhile (cp > cname && isspace(cp[-1]))\n\t\t\t\t\tcp--;\n\t\t\t\tif (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    CAST(int, cp - cname), cname) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\t\treturn 1;\n\n\t\t\ttryanother:\n\t\t\t\t;\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":14,"offset":23121},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":10,"offset":23117},"abstract_content":"i"},"$SIGNED":{"start":{"line":825,"col":13,"offset":23120},"end":{"line":825,"col":14,"offset":23121},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1dc123318f88b1bb81c6a16f5af40243aa1d03ff79f6c2d2da3b6e52b46996ca21da2d660d0f5893db116eec2e0ee6dd7364425651fab7daaf8d05dd89fdd5db_1","lines":"\t\t\tfor (i = 0; i < NOFFSETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":15,"offset":23281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":11,"offset":23277},"abstract_content":"j"},"$SIGNED":{"start":{"line":830,"col":14,"offset":23280},"end":{"line":830,"col":15,"offset":23281},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"686b4abd3ebdbffa8602ac0800607cae59d3963c2fdd27c3bbf9918333b937e1781be1a942064529efaf76a2efee03abf4e2e9832ad3ceac53d9c174c815f5fa_0","lines":"\t\t\t\tfor (j = 0; j < 16; j++, noffset++,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":19,"offset":24281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":11,"offset":24273},"abstract_content":"k"},"$SIGNED":{"start":{"line":880,"col":18,"offset":24280},"end":{"line":880,"col":19,"offset":24281},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"042922acf1a07a144c3bf8efb29ccb2c14fce8d39e0b4ca56d75ff842ec86ec773963525cb93eabf06394955d86f64835a63c7a2af49a56a98dd8fbb0aea76bb_0","lines":"\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":887,"col":7,"offset":24489},"end":{"line":888,"col":36,"offset":24540},"extra":{"metavars":{"$SIGNED":{"start":{"line":887,"col":7,"offset":24489},"end":{"line":887,"col":13,"offset":24495},"abstract_content":"adjust"},"$UNSIGNED":{"start":{"line":888,"col":32,"offset":24536},"end":{"line":888,"col":34,"offset":24538},"abstract_content":"no"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cf1cfa13aaae411656f696261e4bfde689a4f8bbe13cc1a0f9f7696ce5847b0f32a198fb2abdb721e2b4c207d355ed0e8561125d2f7c8ec574cf79e5eeab8bd6_0","lines":"\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":29,"offset":24970},"extra":{"metavars":{"$TYPE":{"start":{"line":826,"col":5,"offset":23148},"end":{"line":826,"col":18,"offset":23161},"abstract_content":"unsigned char"},"$PTR1":{"start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":21,"offset":24962},"abstract_content":"cp"},"$PTR2":{"start":{"line":905,"col":24,"offset":24965},"end":{"line":905,"col":29,"offset":24970},"abstract_content":"cname"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eae5cbfbcfbe060757b7c9eea4b6d06ed979ed9aab16a7e5eec58cb221f31f5f56ef2c806851f3bce0abf9d9844b44b42dc4553c7fb4ba7db96aa414168063fd_0","lines":"\t\t\t\t    CAST(int, cp - cname), cname) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":43,"offset":25492},"extra":{"metavars":{"$FUN":{"start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":12,"offset":25461},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_2","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":20,"offset":25549},"extra":{"metavars":{"$FUN":{"start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":16,"offset":25545},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_2","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":60,"offset":26236},"extra":{"metavars":{"$FUN":{"start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":21,"offset":26197},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_3","lines":"\t    (buflen = pread(fd, buf, CAST(size_t, buflen), offset)) <= 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":19,"offset":26264},"extra":{"metavars":{"$FUN":{"start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":15,"offset":26260},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_3","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":19,"offset":26574},"extra":{"metavars":{"$PTR1":{"start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":13,"offset":26568},"abstract_content":"bptr"},"$PTR2":{"start":{"line":978,"col":16,"offset":26571},"end":{"line":978,"col":19,"offset":26574},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5ae42599eddf6bb054cd046f90e6c504978ac5613e5ab50d768eeff71158b0350d1057ccfabad928a83c6fbbaaa85fcd0805ecad8e1908966166fc901fbab339_0","lines":"\treturn bptr - buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":999,"col":2,"offset":27097},"end":{"line":1001,"col":12,"offset":27206},"extra":{"metavars":{"$EXPR1":{"start":{"line":999,"col":17,"offset":27112},"end":{"line":999,"col":30,"offset":27125},"abstract_content":"FLAGS_IS_CORE"},"$EXPR2":{"start":{"line":999,"col":31,"offset":27126},"end":{"line":999,"col":51,"offset":27146},"abstract_content":"FLAGS_DID_CORE_STYLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"016d8f7b4a91aeda3146d03cb6eb1898df2e5776dc39b3890b4d7005de0ed9711d753a6fca5b83f15e1ce29f3b446b7e9203a03206bbe28e5ff9eb4f1476cca9_0","lines":"\tif ((*flags & (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE)) !=\n\t    (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":10,"offset":27562},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":6,"offset":27558},"abstract_content":"nval"},"$SIGNED":{"start":{"line":1024,"col":9,"offset":27561},"end":{"line":1024,"col":10,"offset":27562},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f19851b2c2ccfa88bcb2d1e74b905af250c59555eb00363865d0771b73ac8e9119f9af0f4056610de92c32f6e89a7ad698dac760f19da58d541a6d387ecbbd9_0","lines":"\tnval = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":54,"offset":27680},"extra":{"metavars":{"$FUN":{"start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":9,"offset":27635},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_7","lines":"\t\tmemcpy(xauxv_addr, &nbuf[doff + off], xauxv_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":45,"offset":29169},"extra":{"metavars":{"$FUN":{"start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":8,"offset":29132},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_8","lines":"\tmemcpy(xdh_addr, &dbuf[offset], xdh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1110,"col":3,"offset":29235},"end":{"line":1113,"col":22,"offset":29308},"extra":{"metavars":{"$EXPR1":{"start":{"line":1110,"col":7,"offset":29239},"end":{"line":1110,"col":14,"offset":29246},"abstract_content":"xdh_val"},"$EXPR2":{"start":{"line":1110,"col":17,"offset":29249},"end":{"line":1110,"col":25,"offset":29257},"abstract_content":"DF_1_PIE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dc004bd7ece716198b46890fbb9bcc777bc61eabdf1dfb29d0525e26463a137b33ac3d77f4cbe81a333951849e3e076d386f5e3efc720c62a6088c7c50a81686_0","lines":"\t\tif (xdh_val & DF_1_PIE)\n\t\t\tms->mode |= 0111;\n\t\telse\n\t\t\tms->mode &= ~0111;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":45,"offset":29991},"extra":{"metavars":{"$FUN":{"start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":8,"offset":29954},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_9","lines":"\tmemcpy(xnh_addr, &nbuf[offset], xnh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1160,"col":2,"offset":30192},"end":{"line":1165,"col":3,"offset":30343},"extra":{"metavars":{"$EXPR1":{"start":{"line":1160,"col":6,"offset":30196},"end":{"line":1160,"col":12,"offset":30202},"abstract_content":"namesz","propagated_value":{"svalue_start":{"line":1150,"col":11,"offset":30027},"svalue_end":{"line":1150,"col":21,"offset":30037},"svalue_abstract_content":"xnh_namesz"}},"$EXPR2":{"start":{"line":1160,"col":15,"offset":30205},"end":{"line":1160,"col":25,"offset":30215},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"552874cd1007f8cf4ce4bf4f1370712d205715cd637b04c40c3a1c6c10dd96d3f7d8e766bf751da354069db6039d92cb8d6c6e457a51d2928b203177b6fc7be0_0","lines":"\tif (namesz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note name size %#lx\",\n\t\t    CAST(unsigned long, namesz)) == -1)\n\t\t\treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1167,"col":2,"offset":30346},"end":{"line":1172,"col":3,"offset":30508},"extra":{"metavars":{"$EXPR1":{"start":{"line":1167,"col":6,"offset":30350},"end":{"line":1167,"col":12,"offset":30356},"abstract_content":"descsz","propagated_value":{"svalue_start":{"line":1151,"col":11,"offset":30049},"svalue_end":{"line":1151,"col":21,"offset":30059},"svalue_abstract_content":"xnh_descsz"}},"$EXPR2":{"start":{"line":1167,"col":15,"offset":30359},"end":{"line":1167,"col":25,"offset":30369},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7b6c0fadc2941415e23dbc8c6e21913c6a0619a4ffe6e49294cdf0c21a3812dd20de230b1f71e2afdd832f9575a33732d6d08c8735876cb1e323ddb9d1ba9b48_0","lines":"\tif (descsz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note description size %#lx\",\n\t\t    CAST(unsigned long, descsz)) == -1)\n\t\t    \treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1245,"col":4,"offset":32155},"end":{"line":1246,"col":19,"offset":32212},"extra":{"metavars":{"$EXPR1":{"start":{"line":1245,"col":8,"offset":32159},"end":{"line":1245,"col":14,"offset":32165},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1245,"col":17,"offset":32168},"end":{"line":1245,"col":41,"offset":32192},"abstract_content":"FLAGS_DID_NETBSD_UNKNOWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d6274101578d12ba441fc839b0a2fa7a8be0269a8538e4769993b0655949ec74fde3d5aaa12821ae4579ebb0810feec45e80bdffbb5899f737c97bb6e033374c_0","lines":"\t\t\tif (*flags & FLAGS_DID_NETBSD_UNKNOWN)\n\t\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1253,"col":3,"offset":32349},"end":{"line":1254,"col":18,"offset":32385},"extra":{"metavars":{"$EXPR1":{"start":{"line":1253,"col":7,"offset":32353},"end":{"line":1253,"col":13,"offset":32359},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1253,"col":16,"offset":32362},"end":{"line":1253,"col":20,"offset":32366},"abstract_content":"flag"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"93680d2de6341145b638647384db7323ea1e77a545286dad1a5f178bbf1e79e810b781f43ace2177177120d3482e36300617a125c199caee76b4fc1596bf878f_0","lines":"\t\tif (*flags & flag)\n\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":20,"offset":34187},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":16,"offset":34183},"abstract_content":"nbadcap"},"$SIGNED":{"start":{"line":1323,"col":19,"offset":34186},"end":{"line":1323,"col":20,"offset":34187},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0f110c0d6290034e686f3d1e2dae7950be780f693fdd50c17d537c8c416eaa0282ce760a3638eeec3b68e7d5d7d3ee8ebd775447a8ce3df6488d9b514fd02ac5_0","lines":"\tsize_t nbadcap = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":73,"offset":34754},"extra":{"metavars":{"$FUN":{"start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":11,"offset":34692},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_4","lines":"\tif (pread(fd, xsh_addr, xsh_sizeof, CAST(off_t, (off + size * strtab)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1360,"col":19,"offset":35149},"end":{"line":1361,"col":27,"offset":35209},"extra":{"metavars":{"$FUN":{"start":{"line":1360,"col":19,"offset":35149},"end":{"line":1360,"col":24,"offset":35154},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_5","lines":"\t\tif ((namesize = pread(fd, name, sizeof(name) - 1,\n\t\t    name_off + xsh_name)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1362,"col":4,"offset":35223},"end":{"line":1362,"col":20,"offset":35239},"extra":{"metavars":{"$FUN":{"start":{"line":1362,"col":4,"offset":35223},"end":{"line":1362,"col":16,"offset":35235},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_4","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1371,"col":7,"offset":35377},"end":{"line":1371,"col":43,"offset":35413},"extra":{"metavars":{"$FUN":{"start":{"line":1371,"col":7,"offset":35377},"end":{"line":1371,"col":12,"offset":35382},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_6","lines":"\t\tif (pread(fd, xsh_addr, xsh_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1373,"col":4,"offset":35454},"end":{"line":1373,"col":20,"offset":35470},"extra":{"metavars":{"$FUN":{"start":{"line":1373,"col":4,"offset":35454},"end":{"line":1373,"col":16,"offset":35466},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_5","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1396,"col":11,"offset":35836},"end":{"line":1396,"col":19,"offset":35844},"extra":{"metavars":{"$VAR":{"start":{"line":1396,"col":11,"offset":35836},"end":{"line":1396,"col":19,"offset":35844},"abstract_content":"xsh_type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4f1718b8bd0c61e3102176db507629267892f529f06b9c13743f360f89fdca35e3910ebcd71d486c5df32c94923a9f3324784a1934ecba3ef97845f31abadb26_0","lines":"\t\tswitch (xsh_type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1410,"col":16,"offset":36269},"end":{"line":1410,"col":32,"offset":36285},"extra":{"metavars":{"$FUN":{"start":{"line":1410,"col":16,"offset":36269},"end":{"line":1410,"col":22,"offset":36275},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fa5a9a97ffb8fa07e2cbbe6e248cac2753100e59fce75db05e98ca210a2bdaaff4767abdd3158fa367fa206be4e6c37690a534334cb8f2a655434656ca7c38fa_0","lines":"\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1415,"col":8,"offset":36398},"end":{"line":1415,"col":45,"offset":36435},"extra":{"metavars":{"$FUN":{"start":{"line":1415,"col":8,"offset":36398},"end":{"line":1415,"col":13,"offset":36403},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_7","lines":"\t\t\tif (pread(fd, nbuf, xsh_size, xsh_offset) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1417,"col":5,"offset":36476},"end":{"line":1417,"col":21,"offset":36492},"extra":{"metavars":{"$FUN":{"start":{"line":1417,"col":5,"offset":36476},"end":{"line":1417,"col":17,"offset":36488},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_6","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1418,"col":5,"offset":36498},"end":{"line":1418,"col":16,"offset":36509},"extra":{"metavars":{"$PTR":{"start":{"line":1418,"col":10,"offset":36503},"end":{"line":1418,"col":14,"offset":36507},"abstract_content":"nbuf","propagated_value":{"svalue_start":{"line":1410,"col":16,"offset":36269},"svalue_end":{"line":1410,"col":32,"offset":36285},"svalue_abstract_content":"malloc(xsh_size)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf24b46d55eb4e38bf844f6b27b57c32078a2828e446eb04da5ae07282ddcc9a5f2dbfd11637eda59d39d78d1d12596d3f1c1b238379c3444a5f950189ec7fc1_0","lines":"\t\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1432,"col":4,"offset":36770},"end":{"line":1432,"col":15,"offset":36781},"extra":{"metavars":{"$PTR":{"start":{"line":1432,"col":9,"offset":36775},"end":{"line":1432,"col":13,"offset":36779},"abstract_content":"nbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf24b46d55eb4e38bf844f6b27b57c32078a2828e446eb04da5ae07282ddcc9a5f2dbfd11637eda59d39d78d1d12596d3f1c1b238379c3444a5f950189ec7fc1_1","lines":"\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1462,"col":9,"offset":37331},"end":{"line":1462,"col":50,"offset":37372},"extra":{"metavars":{"$FUN":{"start":{"line":1462,"col":9,"offset":37331},"end":{"line":1462,"col":13,"offset":37335},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3d68157d7722f3b81008685c250726de94cefb2ce70bfb365ba33045da9fc325b011d415bfcacb8779a5e30254cd289dfbbab572fedf7ad113255406211de45f_0","lines":"\t\t\t\tif (read(fd, cbuf, CAST(size_t, xcap_sizeof)) !=","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1464,"col":6,"offset":37419},"end":{"line":1464,"col":22,"offset":37435},"extra":{"metavars":{"$FUN":{"start":{"line":1464,"col":6,"offset":37419},"end":{"line":1464,"col":18,"offset":37431},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_7","lines":"\t\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1471,"col":6,"offset":37553},"end":{"line":1471,"col":34,"offset":37581},"extra":{"metavars":{"$FUN":{"start":{"line":1471,"col":6,"offset":37553},"end":{"line":1471,"col":12,"offset":37559},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_10","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1483,"col":6,"offset":37830},"end":{"line":1483,"col":34,"offset":37858},"extra":{"metavars":{"$FUN":{"start":{"line":1483,"col":6,"offset":37830},"end":{"line":1483,"col":12,"offset":37836},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_11","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1497,"col":5,"offset":38107},"end":{"line":1497,"col":41,"offset":38143},"extra":{"metavars":{"$FUN":{"start":{"line":1497,"col":5,"offset":38107},"end":{"line":1497,"col":11,"offset":38113},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7660efd962c7ffdcf58ca31bf32d4083cbe8a34b7c775feac0c718c5973e8987b6d0939b915679384bf97e19cf52f874c75ab9cd52fffe171d22cbcb8eec0781_12","lines":"\t\t\t\tmemcpy(xcap_addr, cbuf, xcap_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1555,"col":5,"offset":39260},"end":{"line":1560,"col":6,"offset":39405},"extra":{"metavars":{"$EXPR1":{"start":{"line":1555,"col":9,"offset":39264},"end":{"line":1555,"col":16,"offset":39271},"abstract_content":"cap_hw1"},"$EXPR2":{"start":{"line":1555,"col":19,"offset":39274},"end":{"line":1555,"col":31,"offset":39286},"abstract_content":"cdp->->cd_mask"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e9d4e9246eced7409f2984ecbb016b47f02fd60dabec1402f56f28a7ad4a33cb6a77f11a09ee61683ab0862af176b582512dd6ba09251da886d8fbe19c2e542d_0","lines":"\t\t\t\tif (cap_hw1 & cdp->cd_mask) {\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcap_hw1 &= ~cdp->cd_mask;\n\t\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1577,"col":3,"offset":39774},"end":{"line":1583,"col":4,"offset":39967},"extra":{"metavars":{"$EXPR1":{"start":{"line":1577,"col":7,"offset":39778},"end":{"line":1577,"col":14,"offset":39785},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1577,"col":17,"offset":39788},"end":{"line":1577,"col":32,"offset":39803},"abstract_content":"SF1_SUNW_FPUSED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"346ac4375b63c40bce9a698032eeb778b826de0639838ce66f7f6611dca0a990fde69f033cd9a74f15f59a08564f3260a2cd7a1d72f752d36edefc6ab2145b9e_0","lines":"\t\tif (cap_sf1 & SF1_SUNW_FPUSED) {\n\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1578,"col":4,"offset":39810},"end":{"line":1582,"col":15,"offset":39963},"extra":{"metavars":{"$EXPR1":{"start":{"line":1579,"col":9,"offset":39838},"end":{"line":1579,"col":16,"offset":39845},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1579,"col":19,"offset":39848},"end":{"line":1579,"col":34,"offset":39863},"abstract_content":"SF1_SUNW_FPKNWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"67e2b2f149b9102322bc1df4766be9e38b635537069cba6b7f3534a798251572cc6b16f2c75197f228c50fecb3984102f611ae491fe4510cc613bb813117a2af_0","lines":"\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1628,"col":7,"offset":41029},"end":{"line":1628,"col":43,"offset":41065},"extra":{"metavars":{"$FUN":{"start":{"line":1628,"col":7,"offset":41029},"end":{"line":1628,"col":12,"offset":41034},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_8","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1630,"col":4,"offset":41106},"end":{"line":1630,"col":20,"offset":41122},"extra":{"metavars":{"$FUN":{"start":{"line":1630,"col":4,"offset":41106},"end":{"line":1630,"col":16,"offset":41118},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_8","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1636,"col":3,"offset":41175},"end":{"line":1636,"col":12,"offset":41184},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1636,"col":3,"offset":41175},"end":{"line":1636,"col":8,"offset":41180},"abstract_content":"align"},"$SIGNED":{"start":{"line":1636,"col":11,"offset":41183},"end":{"line":1636,"col":12,"offset":41184},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24825813920ab62e173f23febffe01cd80f9631a5a8aecd622e9cc14c5397325daecc89cad2ca668389792e3e8a4c399bc1718cf167b6dfbc49f2fced65af762_0","lines":"\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1647,"col":4,"offset":41421},"end":{"line":1654,"col":5,"offset":41633},"extra":{"metavars":{"$EXPR1":{"start":{"line":1647,"col":10,"offset":41427},"end":{"line":1647,"col":15,"offset":41432},"abstract_content":"align","propagated_value":{"svalue_start":{"line":1647,"col":18,"offset":41435},"svalue_end":{"line":1647,"col":27,"offset":41444},"svalue_abstract_content":"xph_align"}},"$EXPR2":{"start":{"line":1647,"col":18,"offset":41435},"end":{"line":1647,"col":27,"offset":41444},"abstract_content":"xph_align"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4bba39a9d0a3db60b4044db60442fabb9fc0bdd5be7b32a2c5553122ad2cbbe84cf50d289ed32171731b8a34c08b3e70916a3002e11ab2f79b70345f7dd4a281_0","lines":"\t\t\tif (((align = xph_align) & 0x80000000UL) != 0 ||\n\t\t\t    align < 4) {\n\t\t\t\tif (file_printf(ms,\n\t\t\t\t    \", invalid note alignment %#lx\",\n\t\t\t\t    CAST(unsigned long, align)) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\talign = 4;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1653,"col":5,"offset":41618},"end":{"line":1653,"col":14,"offset":41627},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1653,"col":5,"offset":41618},"end":{"line":1653,"col":10,"offset":41623},"abstract_content":"align"},"$SIGNED":{"start":{"line":1653,"col":13,"offset":41626},"end":{"line":1653,"col":14,"offset":41627},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"24825813920ab62e173f23febffe01cd80f9631a5a8aecd622e9cc14c5397325daecc89cad2ca668389792e3e8a4c399bc1718cf167b6dfbc49f2fced65af762_1","lines":"\t\t\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":46,"offset":41969},"extra":{"metavars":{"$FUN":{"start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":19,"offset":41942},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"040777068ac6b71280f71c1959216a5149fbd005d5b22824488d6df7ccb0309e977206bec0ead1468bc31aa853e018c9636f027b1d048d20f73d401572ea26c9_9","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":46,"offset":41969},"extra":{"metavars":{"$TYPE":{"start":{"line":1608,"col":2,"offset":40629},"end":{"line":1608,"col":15,"offset":40642},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":1608,"col":21,"offset":40648},"end":{"line":1608,"col":27,"offset":40654},"abstract_content":"BUFSIZ"},"$FUN":{"start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":19,"offset":41942},"abstract_content":"pread"},"$ARG1":{"start":{"line":1671,"col":20,"offset":41943},"end":{"line":1671,"col":22,"offset":41945},"abstract_content":"fd"},"$BUF":{"start":{"line":1671,"col":24,"offset":41947},"end":{"line":1671,"col":28,"offset":41951},"abstract_content":"nbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"cc0636735334e261a9541718301d25727596df58c94de846f3beebc2da55b4e49e9e90141f730ba0aad814816fbd6aa76d2bea7ff902e447994d355b53e1fb1a_0","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1673,"col":5,"offset":41999},"end":{"line":1673,"col":21,"offset":42015},"extra":{"metavars":{"$FUN":{"start":{"line":1673,"col":5,"offset":41999},"end":{"line":1673,"col":17,"offset":42011},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_9","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1677,"col":4,"offset":42049},"end":{"line":1677,"col":11,"offset":42056},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1677,"col":4,"offset":42049},"end":{"line":1677,"col":7,"offset":42052},"abstract_content":"len"},"$SIGNED":{"start":{"line":1677,"col":10,"offset":42055},"end":{"line":1677,"col":11,"offset":42056},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"112279ddc212551e95ab2484ab231372f5d2af77d53d48e8a7643ca3a498dce5a171520495e86fa44d7b9edc6319da8c18bf139f9e9e281fa0099d5d114ddd54_0","lines":"\t\t\tlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1682,"col":4,"offset":42148},"end":{"line":1682,"col":14,"offset":42158},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1682,"col":4,"offset":42148},"end":{"line":1682,"col":10,"offset":42154},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1682,"col":13,"offset":42157},"end":{"line":1682,"col":14,"offset":42158},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6e9b1b36b077d2afac5671077969c1d3214364ff1309270af29cd1cf6e02f4739042a16b3e432bacd6f74d1c3762ee1376f248c468a3a689aa12bb83c421f415_1","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1688,"col":5,"offset":42300},"end":{"line":1689,"col":44,"offset":42380},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1688,"col":5,"offset":42300},"end":{"line":1688,"col":11,"offset":42306},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1689,"col":32,"offset":42368},"end":{"line":1689,"col":37,"offset":42373},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e843a5c3332c7bc415f633872b0a705cfb8131fe1a24fe2be0630f3b19aa7516de276467ee17c73f3d8ed25707e42e1519d19b83eb37e1a845598eac335a899c_1","lines":"\t\t\t\toffset = dodynamic(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1700,"col":5,"offset":42571},"end":{"line":1700,"col":47,"offset":42613},"extra":{"metavars":{"$FUN":{"start":{"line":1700,"col":5,"offset":42571},"end":{"line":1700,"col":12,"offset":42578},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b47f66c90d335f95ff9780df0a31d13f7dd177c0409804e63880f259ca62dde1b2e2ccc706ccb718ecc78358bcecabc63c130211eab788856897ac35aa855de7_0","lines":"\t\t\t\tstrlcpy(interp, \"*empty*\", sizeof(interp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1707,"col":4,"offset":42739},"end":{"line":1707,"col":14,"offset":42749},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1707,"col":4,"offset":42739},"end":{"line":1707,"col":10,"offset":42745},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1707,"col":13,"offset":42748},"end":{"line":1707,"col":14,"offset":42749},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6e9b1b36b077d2afac5671077969c1d3214364ff1309270af29cd1cf6e02f4739042a16b3e432bacd6f74d1c3762ee1376f248c468a3a689aa12bb83c421f415_2","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1711,"col":5,"offset":42822},"end":{"line":1713,"col":39,"offset":42945},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1711,"col":5,"offset":42822},"end":{"line":1711,"col":11,"offset":42828},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1712,"col":32,"offset":42887},"end":{"line":1712,"col":37,"offset":42892},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e843a5c3332c7bc415f633872b0a705cfb8131fe1a24fe2be0630f3b19aa7516de276467ee17c73f3d8ed25707e42e1519d19b83eb37e1a845598eac335a899c_2","lines":"\t\t\t\toffset = donote(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap, align,\n\t\t\t\t    flags, notecount, fd, 0, 0, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1754,"col":2,"offset":43682},"end":{"line":1755,"col":12,"offset":43751},"extra":{"metavars":{"$EXPR1":{"start":{"line":1754,"col":6,"offset":43686},"end":{"line":1754,"col":15,"offset":43695},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1754,"col":19,"offset":43699},"end":{"line":1754,"col":57,"offset":43737},"abstract_content":"MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a275c298c0618475bdbb556c233b7611d3c117dc9d38d4de3eddb0c0f0c044f1859575aa5a2e296f505641e635f267db14422c12db56657bdc7b9d98a9d9bcf3_0","lines":"\tif (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1774,"col":3,"offset":44414},"end":{"line":1774,"col":43,"offset":44454},"extra":{"metavars":{"$SIGNED":{"start":{"line":1774,"col":3,"offset":44414},"end":{"line":1774,"col":5,"offset":44416},"abstract_content":"fd"},"$UNSIGNED":{"start":{"line":1774,"col":36,"offset":44447},"end":{"line":1774,"col":42,"offset":44453},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9743b3999f8c0e01b2362f683897dd55dba958f7b244dedf2ee03fabb3e37036701ef2793c6c4ff3c8850ec7ce11f025b5cda2753f0521cb18e59a7ceb2cda11_0","lines":"\t\tfd = file_pipe2file(ms, fd, buf, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1777,"col":3,"offset":44476},"end":{"line":1777,"col":19,"offset":44492},"extra":{"metavars":{"$FUN":{"start":{"line":1777,"col":3,"offset":44476},"end":{"line":1777,"col":15,"offset":44488},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_10","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1788,"col":7,"offset":44688},"end":{"line":1788,"col":21,"offset":44702},"extra":{"metavars":{"$FUN":{"start":{"line":1788,"col":7,"offset":44688},"end":{"line":1788,"col":12,"offset":44693},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5c343c374fc4fd0521546317cab203fdc26296c825658d6d0414d5cc8df019185c909ac1b5c9be77e86d5a1b200cc2d27287b9bad0fa72c6ba369582f76eeeb3_0","lines":"\t\tif (fstat(fd, &st) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1789,"col":4,"offset":44715},"end":{"line":1789,"col":20,"offset":44731},"extra":{"metavars":{"$FUN":{"start":{"line":1789,"col":4,"offset":44715},"end":{"line":1789,"col":16,"offset":44727},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da5310dca43da1a9109c0a29e10ce89b8b9651dc3a0f327e6eb948d6f5d65332aae0d428444597664d2d292b37830c865a0ccbb3aed81ff1c7a2f21d75cdbb9e_11","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":43,"offset":11529},"extra":{"metavars":{"$FUN":{"start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":12,"offset":11498},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_0","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":20,"offset":11586},"extra":{"metavars":{"$FUN":{"start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":16,"offset":11582},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_0","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":50,"offset":11964},"extra":{"metavars":{"$FUN":{"start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":23,"offset":11937},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_1","lines":"\t\tif ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":20,"offset":11994},"extra":{"metavars":{"$FUN":{"start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":16,"offset":11990},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_1","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":13,"offset":12026},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":9,"offset":12022},"abstract_content":"offset"},"$SIGNED":{"start":{"line":397,"col":12,"offset":12025},"end":{"line":397,"col":13,"offset":12026},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"485f08113f1e11258ce8e6b31d20f7ee94c8fc3600a32b690f1800932e21290ba06d4782743161790a2cb73bcdf17c8e5b9114a5069345284d274604757773b5_0","lines":"\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":401,"col":4,"offset":12095},"end":{"line":403,"col":22,"offset":12226},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":401,"col":4,"offset":12095},"end":{"line":401,"col":10,"offset":12101},"abstract_content":"offset"},"$SIGNED":{"start":{"line":402,"col":8,"offset":12159},"end":{"line":402,"col":13,"offset":12164},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2244dd5e18639d16a7949cc03587daf3b5e6b3c66135ba58d51e710b1b31f3c3d7c4fa19e9bad3f1fe04e52acf910bf8de636d23087d60acc5406ba554d5be58_0","lines":"\t\t\toffset = donote(ms, nbuf, offset, CAST(size_t, bufsize),\n\t\t\t    clazz, swap, 4, flags, notecount, fd, ph_off,\n\t\t\t    ph_num, fsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":32,"offset":12412},"extra":{"metavars":{"$FUN":{"start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":8,"offset":12388},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_0","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":32,"offset":13555},"extra":{"metavars":{"$FUN":{"start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":8,"offset":13531},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_1","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":535,"col":1,"offset":15342},"end":{"line":543,"col":20,"offset":15711},"extra":{"metavars":{"$EXPR1":{"start":{"line":541,"col":6,"offset":15562},"end":{"line":541,"col":12,"offset":15568},"abstract_content":"namesz"},"$EXPR2":{"start":{"line":541,"col":16,"offset":15572},"end":{"line":541,"col":17,"offset":15573},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7f381e86cc86a82b36e6f342367a046d5997d887b5008a901c08171dcb05c53ed346735dbd9be25bfa82cd4d9975146206bf1485f684b7a350175d0ba41451b6_0","lines":"private int\n/*ARGSUSED*/\ndo_bid_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,\n    int swap __attribute__((__unused__)), uint32_t namesz, uint32_t descsz,\n    size_t noff, size_t doff, int *flags)\n{\n\tif (namesz == 4 && strcmp(RCAST(char *, &nbuf[noff]), \"GNU\") == 0 &&\n\t    type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {\n\t\tuint8_t desc[20];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":36,"offset":16098},"extra":{"metavars":{"$FUN":{"start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":9,"offset":16071},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_2","lines":"\t\tmemcpy(desc, &nbuf[doff], descsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_3","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$TYPE":{"start":{"line":597,"col":3,"offset":17039},"end":{"line":597,"col":11,"offset":17047},"abstract_content":"uint32_t"},"$LEN":{"start":{"line":597,"col":17,"offset":17053},"end":{"line":597,"col":18,"offset":17054},"abstract_content":"4"},"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"},"$BUF":{"start":{"line":598,"col":10,"offset":17066},"end":{"line":598,"col":14,"offset":17070},"abstract_content":"desc"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bfc58a592abc6c327c3ccb8b8959306b1edb5bffffc9a503db4bdb4b5941cf9ac93b3473ffd140cae87a601cda7439c75d020e7290ab1b4babe4f974e2469cff_0","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":43,"offset":18877},"extra":{"metavars":{"$FUN":{"start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":9,"offset":18843},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_4","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":43,"offset":19638},"extra":{"metavars":{"$FUN":{"start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":9,"offset":19604},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_5","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":13,"offset":19749},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":9,"offset":19745},"abstract_content":"i"},"$SIGNED":{"start":{"line":706,"col":12,"offset":19748},"end":{"line":706,"col":13,"offset":19749},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"211a3a43eba167013d7877a9bfa138b517e41a7ace329aa538350ffb9e49fbd2eb27e49c7fc399df0030a0dce97c92a1d858c27fd993fabf27d35e7b53984ee6_0","lines":"\t\tfor (i = 0; i < __arraycount(pax); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":53,"offset":21564},"extra":{"metavars":{"$FUN":{"start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":10,"offset":21521},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_6","lines":"\t\t\tmemcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":790,"col":3,"offset":22188},"end":{"line":808,"col":4,"offset":22689},"extra":{"metavars":{"$EXPR1":{"start":{"line":790,"col":30,"offset":22215},"end":{"line":790,"col":36,"offset":22221},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":790,"col":39,"offset":22224},"end":{"line":790,"col":52,"offset":22237},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d5636addf012bbbeb794994ab7055562cdda1e1b6fb4aff03b3b747238577500e611e818b38e405b3c93a903a2265ef1da7f264fb119abf84be3157dde3b5a4b_0","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t argoff, pidoff;\n\n\t\t\tif (clazz == ELFCLASS32)\n\t\t\t\targoff = 4 + 4 + 17;\n\t\t\telse\n\t\t\t\targoff = 4 + 4 + 8 + 17;\n\t\t\tif (file_printf(ms, \", from '%.80s'\", nbuf + doff +\n\t\t\t    argoff) == -1)\n\t\t\t\treturn -1;\n\t\t\tpidoff = argoff + 81 + 2;\n\t\t\tif (doff + pidoff + 4 <= size) {\n\t\t\t\tif (file_printf(ms, \", pid=%u\",\n\t\t\t\t    elf_getu32(swap, *RCAST(uint32_t *, (nbuf +\n\t\t\t\t    doff + pidoff)))) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":24,"offset":22319},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":11,"offset":22306},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":794,"col":14,"offset":22309},"end":{"line":794,"col":15,"offset":22310},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8a25c8b9d1c856253b24edc48d6da89cd21929b5929a981ea9e528578175483ac7479728ef9c1e23e66aae7dccd7ea856c3d5ec9dcdce85e61ff997e12797e07_0","lines":"\t\t\t\targoff = 4 + 4 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":28,"offset":22356},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":11,"offset":22339},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":796,"col":14,"offset":22342},"end":{"line":796,"col":15,"offset":22343},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8a25c8b9d1c856253b24edc48d6da89cd21929b5929a981ea9e528578175483ac7479728ef9c1e23e66aae7dccd7ea856c3d5ec9dcdce85e61ff997e12797e07_1","lines":"\t\t\t\targoff = 4 + 4 + 8 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":28,"offset":22477},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":10,"offset":22459},"abstract_content":"pidoff"},"$SIGNED":{"start":{"line":800,"col":13,"offset":22462},"end":{"line":800,"col":19,"offset":22468},"abstract_content":"argoff"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c4058cf051026b71b7eac98b98b3f41de887ae111b4de86e4384f45f2d6fe60b119e974b1e20d752b3dc5c1a048d8de75263d3152d58e5afa2ca1ab08f1fadf4_0","lines":"\t\t\tpidoff = argoff + 81 + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":812,"col":3,"offset":22719},"end":{"line":913,"col":4,"offset":25077},"extra":{"metavars":{"$EXPR1":{"start":{"line":812,"col":30,"offset":22746},"end":{"line":812,"col":36,"offset":22752},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":812,"col":39,"offset":22755},"end":{"line":812,"col":52,"offset":22768},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d5636addf012bbbeb794994ab7055562cdda1e1b6fb4aff03b3b747238577500e611e818b38e405b3c93a903a2265ef1da7f264fb119abf84be3157dde3b5a4b_1","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t i, j;\n\t\t\tunsigned char c;\n\t\t\t/*\n\t\t\t * Extract the program name.  We assume\n\t\t\t * it to be 16 characters (that's what it\n\t\t\t * is in SunOS 5.x and Linux).\n\t\t\t *\n\t\t\t * Unfortunately, it's at a different offset\n\t\t\t * in various OSes, so try multiple offsets.\n\t\t\t * If the characters aren't all printable,\n\t\t\t * reject it.\n\t\t\t */\n\t\t\tfor (i = 0; i < NOFFSETS; i++) {\n\t\t\t\tunsigned char *cname, *cp;\n\t\t\t\tsize_t reloffset = prpsoffsets(i);\n\t\t\t\tsize_t noffset = doff + reloffset;\n\t\t\t\tsize_t k;\n\t\t\t\tfor (j = 0; j < 16; j++, noffset++,\n\t\t\t\t    reloffset++) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the buffer; if\n\t\t\t\t\t * we are, just give up.\n\t\t\t\t\t */\n\t\t\t\t\tif (noffset >= size)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the contents;\n\t\t\t\t\t * if we are, this obviously\n\t\t\t\t\t * isn't the right offset.\n\t\t\t\t\t */\n\t\t\t\t\tif (reloffset >= descsz)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\tc = nbuf[noffset];\n\t\t\t\t\tif (c == '\\0') {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A '\\0' at the\n\t\t\t\t\t\t * beginning is\n\t\t\t\t\t\t * obviously wrong.\n\t\t\t\t\t\t * Any other '\\0'\n\t\t\t\t\t\t * means we're done.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A nonprintable\n\t\t\t\t\t\t * character is also\n\t\t\t\t\t\t * wrong.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (!isprint(c) || isquote(c))\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t * Well, that worked.\n\t\t\t\t */\n\n\t\t\t\t/*\n\t\t\t\t * Try next offsets, in case this match is\n\t\t\t\t * in the middle of a string.\n\t\t\t\t */\n\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {\n\t\t\t\t\tsize_t no;\n\t\t\t\t\tint adjust = 1;\n\t\t\t\t\tif (prpsoffsets(k) >= prpsoffsets(i))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++)\n\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);\n\t\t\t\t\tif (adjust)\n\t\t\t\t\t\ti = k;\n\t\t\t\t}\n\n\t\t\t\tcname = CAST(unsigned char *,\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)]);\n\t\t\t\tfor (cp = cname; cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp); cp++)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t * Linux apparently appends a space at the end\n\t\t\t\t * of the command line: remove it.\n\t\t\t\t */\n\t\t\t\twhile (cp > cname && isspace(cp[-1]))\n\t\t\t\t\tcp--;\n\t\t\t\tif (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    CAST(int, cp - cname), cname) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\t\treturn 1;\n\n\t\t\ttryanother:\n\t\t\t\t;\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":14,"offset":23121},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":10,"offset":23117},"abstract_content":"i"},"$SIGNED":{"start":{"line":825,"col":13,"offset":23120},"end":{"line":825,"col":14,"offset":23121},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"211a3a43eba167013d7877a9bfa138b517e41a7ace329aa538350ffb9e49fbd2eb27e49c7fc399df0030a0dce97c92a1d858c27fd993fabf27d35e7b53984ee6_1","lines":"\t\t\tfor (i = 0; i < NOFFSETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":15,"offset":23281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":11,"offset":23277},"abstract_content":"j"},"$SIGNED":{"start":{"line":830,"col":14,"offset":23280},"end":{"line":830,"col":15,"offset":23281},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"09d4c5783ba4d0755a05b9cceafe56901f2104ab43cd0bcacdd756300038e1c42bad84b7de25997e0b8858840f221bbf076a10fcf835216fae34c2827aa7b743_0","lines":"\t\t\t\tfor (j = 0; j < 16; j++, noffset++,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":19,"offset":24281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":11,"offset":24273},"abstract_content":"k"},"$SIGNED":{"start":{"line":880,"col":18,"offset":24280},"end":{"line":880,"col":19,"offset":24281},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fe0206828387d65e47c18e8805b7d7aec5673a902a232da4fbc83b7a2e341a5cc9a86d4b77f8aed7f64fd72b01f8f6233831c510daa31cf0c54ec3b04f70dd6c_0","lines":"\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":887,"col":7,"offset":24489},"end":{"line":888,"col":36,"offset":24540},"extra":{"metavars":{"$SIGNED":{"start":{"line":887,"col":7,"offset":24489},"end":{"line":887,"col":13,"offset":24495},"abstract_content":"adjust"},"$UNSIGNED":{"start":{"line":888,"col":32,"offset":24536},"end":{"line":888,"col":34,"offset":24538},"abstract_content":"no"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"02efc1ce7a73e9365531002d9f1cf5473da08182d1d7344816bfc63ba306674ece80500abb5ed7e4665d9f9441db71c967af321f82362fcf58ddb3f7b6e2ee88_0","lines":"\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":29,"offset":24970},"extra":{"metavars":{"$TYPE":{"start":{"line":826,"col":5,"offset":23148},"end":{"line":826,"col":18,"offset":23161},"abstract_content":"unsigned char"},"$PTR1":{"start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":21,"offset":24962},"abstract_content":"cp"},"$PTR2":{"start":{"line":905,"col":24,"offset":24965},"end":{"line":905,"col":29,"offset":24970},"abstract_content":"cname"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6590aed5fd38128c313bae63fdf9cbdf3f0f8e6a64d377b354d6b14ff7199a148b4bf8062a3199e2bb5bcd55faacf7c982471a700283284fb4745b24c0c377a8_0","lines":"\t\t\t\t    CAST(int, cp - cname), cname) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":43,"offset":25492},"extra":{"metavars":{"$FUN":{"start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":12,"offset":25461},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_2","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":20,"offset":25549},"extra":{"metavars":{"$FUN":{"start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":16,"offset":25545},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_2","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":60,"offset":26236},"extra":{"metavars":{"$FUN":{"start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":21,"offset":26197},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_3","lines":"\t    (buflen = pread(fd, buf, CAST(size_t, buflen), offset)) <= 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":19,"offset":26264},"extra":{"metavars":{"$FUN":{"start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":15,"offset":26260},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_3","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":19,"offset":26574},"extra":{"metavars":{"$PTR1":{"start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":13,"offset":26568},"abstract_content":"bptr"},"$PTR2":{"start":{"line":978,"col":16,"offset":26571},"end":{"line":978,"col":19,"offset":26574},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd9af62e9ba1ed0f91628544eaca5c8ad44c5f4fe575015c793531da60844a3cb4fb99c43eae32a90a779d07ad5e791bd7eb2cca0cf7a4de31d5169117480d8e_0","lines":"\treturn bptr - buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":999,"col":2,"offset":27097},"end":{"line":1001,"col":12,"offset":27206},"extra":{"metavars":{"$EXPR1":{"start":{"line":999,"col":17,"offset":27112},"end":{"line":999,"col":30,"offset":27125},"abstract_content":"FLAGS_IS_CORE"},"$EXPR2":{"start":{"line":999,"col":31,"offset":27126},"end":{"line":999,"col":51,"offset":27146},"abstract_content":"FLAGS_DID_CORE_STYLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c65f4c8d8556ac9c643eeff0df1e6c03943c3b3ee61507b2eeaf5fed6c07dce1b6020654c1908113896db9273440972072ad22e248cccd895a48649105dfd052_0","lines":"\tif ((*flags & (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE)) !=\n\t    (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":10,"offset":27562},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":6,"offset":27558},"abstract_content":"nval"},"$SIGNED":{"start":{"line":1024,"col":9,"offset":27561},"end":{"line":1024,"col":10,"offset":27562},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"854a0d5aa5955ef920b83ff140a79d8f86d758438050721587f684fee1d7a66c50fd5ecbeb10b2384b0d43e5d440c016e577b3e9de383784b54882a4c62e08c6_0","lines":"\tnval = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":54,"offset":27680},"extra":{"metavars":{"$FUN":{"start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":9,"offset":27635},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_7","lines":"\t\tmemcpy(xauxv_addr, &nbuf[doff + off], xauxv_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":45,"offset":29169},"extra":{"metavars":{"$FUN":{"start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":8,"offset":29132},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_8","lines":"\tmemcpy(xdh_addr, &dbuf[offset], xdh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1110,"col":3,"offset":29235},"end":{"line":1113,"col":22,"offset":29308},"extra":{"metavars":{"$EXPR1":{"start":{"line":1110,"col":7,"offset":29239},"end":{"line":1110,"col":14,"offset":29246},"abstract_content":"xdh_val"},"$EXPR2":{"start":{"line":1110,"col":17,"offset":29249},"end":{"line":1110,"col":25,"offset":29257},"abstract_content":"DF_1_PIE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ab54d01babad98da492cd7182a9da2977048d720db0d1d2e9eb0c10b37ad929c50cc631be137e640810244bf0f478bdc0030d5d61247bfa65a4b52d79898eb5a_0","lines":"\t\tif (xdh_val & DF_1_PIE)\n\t\t\tms->mode |= 0111;\n\t\telse\n\t\t\tms->mode &= ~0111;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":45,"offset":29991},"extra":{"metavars":{"$FUN":{"start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":8,"offset":29954},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_9","lines":"\tmemcpy(xnh_addr, &nbuf[offset], xnh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1160,"col":2,"offset":30192},"end":{"line":1165,"col":3,"offset":30343},"extra":{"metavars":{"$EXPR1":{"start":{"line":1160,"col":6,"offset":30196},"end":{"line":1160,"col":12,"offset":30202},"abstract_content":"namesz","propagated_value":{"svalue_start":{"line":1150,"col":11,"offset":30027},"svalue_end":{"line":1150,"col":21,"offset":30037},"svalue_abstract_content":"xnh_namesz"}},"$EXPR2":{"start":{"line":1160,"col":15,"offset":30205},"end":{"line":1160,"col":25,"offset":30215},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"758b6db9dd162e5e55c5dbcdea625540394ba480bbf6245654001b48c2b4ce04099f19ea46c2dd435a2f61e7b4c0a7dd0ca97d35e2c3979ec30833bc9a49ac71_0","lines":"\tif (namesz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note name size %#lx\",\n\t\t    CAST(unsigned long, namesz)) == -1)\n\t\t\treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1167,"col":2,"offset":30346},"end":{"line":1172,"col":3,"offset":30508},"extra":{"metavars":{"$EXPR1":{"start":{"line":1167,"col":6,"offset":30350},"end":{"line":1167,"col":12,"offset":30356},"abstract_content":"descsz","propagated_value":{"svalue_start":{"line":1151,"col":11,"offset":30049},"svalue_end":{"line":1151,"col":21,"offset":30059},"svalue_abstract_content":"xnh_descsz"}},"$EXPR2":{"start":{"line":1167,"col":15,"offset":30359},"end":{"line":1167,"col":25,"offset":30369},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b944c084b1ade99a59791f980c8a22522022b33c8d5e03397597bfdf299524a7857522be105e2e0b9e8980b3e04fd6a3cef5ba8f6547a9d81f441c94eec6a7a2_0","lines":"\tif (descsz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note description size %#lx\",\n\t\t    CAST(unsigned long, descsz)) == -1)\n\t\t    \treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1245,"col":4,"offset":32155},"end":{"line":1246,"col":19,"offset":32212},"extra":{"metavars":{"$EXPR1":{"start":{"line":1245,"col":8,"offset":32159},"end":{"line":1245,"col":14,"offset":32165},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1245,"col":17,"offset":32168},"end":{"line":1245,"col":41,"offset":32192},"abstract_content":"FLAGS_DID_NETBSD_UNKNOWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"046e889c27662161f031157300116b3217fe93ebf7d072abdf99549bf53e141cf66d9f462dbb18162f8c166c855c73478bd01541b8202a48604b40805ea8c7f7_0","lines":"\t\t\tif (*flags & FLAGS_DID_NETBSD_UNKNOWN)\n\t\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1253,"col":3,"offset":32349},"end":{"line":1254,"col":18,"offset":32385},"extra":{"metavars":{"$EXPR1":{"start":{"line":1253,"col":7,"offset":32353},"end":{"line":1253,"col":13,"offset":32359},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1253,"col":16,"offset":32362},"end":{"line":1253,"col":20,"offset":32366},"abstract_content":"flag"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7fa0367f186adddb93a35793eef7bae2125383eceb1e50d3bf81776ecbba28756c962e76684329c6854a442555d5a5acc002294698fb1899b46e861eb09eb63f_0","lines":"\t\tif (*flags & flag)\n\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":20,"offset":34187},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":16,"offset":34183},"abstract_content":"nbadcap"},"$SIGNED":{"start":{"line":1323,"col":19,"offset":34186},"end":{"line":1323,"col":20,"offset":34187},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"161344c5e69d86b08dce7f34b4b8bc2539aa5451ecf6d85645a4c8695889c0acf9e68d441f946f02da386d8902b9d290fc24a614017fe811952afb2438aa1729_0","lines":"\tsize_t nbadcap = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":73,"offset":34754},"extra":{"metavars":{"$FUN":{"start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":11,"offset":34692},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_4","lines":"\tif (pread(fd, xsh_addr, xsh_sizeof, CAST(off_t, (off + size * strtab)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1360,"col":19,"offset":35149},"end":{"line":1361,"col":27,"offset":35209},"extra":{"metavars":{"$FUN":{"start":{"line":1360,"col":19,"offset":35149},"end":{"line":1360,"col":24,"offset":35154},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_5","lines":"\t\tif ((namesize = pread(fd, name, sizeof(name) - 1,\n\t\t    name_off + xsh_name)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1362,"col":4,"offset":35223},"end":{"line":1362,"col":20,"offset":35239},"extra":{"metavars":{"$FUN":{"start":{"line":1362,"col":4,"offset":35223},"end":{"line":1362,"col":16,"offset":35235},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_4","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1371,"col":7,"offset":35377},"end":{"line":1371,"col":43,"offset":35413},"extra":{"metavars":{"$FUN":{"start":{"line":1371,"col":7,"offset":35377},"end":{"line":1371,"col":12,"offset":35382},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_6","lines":"\t\tif (pread(fd, xsh_addr, xsh_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1373,"col":4,"offset":35454},"end":{"line":1373,"col":20,"offset":35470},"extra":{"metavars":{"$FUN":{"start":{"line":1373,"col":4,"offset":35454},"end":{"line":1373,"col":16,"offset":35466},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_5","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1396,"col":11,"offset":35836},"end":{"line":1396,"col":19,"offset":35844},"extra":{"metavars":{"$VAR":{"start":{"line":1396,"col":11,"offset":35836},"end":{"line":1396,"col":19,"offset":35844},"abstract_content":"xsh_type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"23d5ed9d1f03e0ee177f8b0000f061938912fc7933d3bcb3948bdac1686549633660d7c77cec5516756053b82e33d84f104431885949003fe53a26b2fd7f882d_0","lines":"\t\tswitch (xsh_type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1410,"col":16,"offset":36269},"end":{"line":1410,"col":32,"offset":36285},"extra":{"metavars":{"$FUN":{"start":{"line":1410,"col":16,"offset":36269},"end":{"line":1410,"col":22,"offset":36275},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa4543c8d44ae53cafd96997481a263d05cf9e5864bd766e8a17327624184b7353546347fe270ea8515069746797f03daf9f482166429deb0f3dd4c1dc49fba8_0","lines":"\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1415,"col":8,"offset":36398},"end":{"line":1415,"col":45,"offset":36435},"extra":{"metavars":{"$FUN":{"start":{"line":1415,"col":8,"offset":36398},"end":{"line":1415,"col":13,"offset":36403},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_7","lines":"\t\t\tif (pread(fd, nbuf, xsh_size, xsh_offset) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1417,"col":5,"offset":36476},"end":{"line":1417,"col":21,"offset":36492},"extra":{"metavars":{"$FUN":{"start":{"line":1417,"col":5,"offset":36476},"end":{"line":1417,"col":17,"offset":36488},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_6","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1418,"col":5,"offset":36498},"end":{"line":1418,"col":16,"offset":36509},"extra":{"metavars":{"$PTR":{"start":{"line":1418,"col":10,"offset":36503},"end":{"line":1418,"col":14,"offset":36507},"abstract_content":"nbuf","propagated_value":{"svalue_start":{"line":1410,"col":16,"offset":36269},"svalue_end":{"line":1410,"col":32,"offset":36285},"svalue_abstract_content":"malloc(xsh_size)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"85e4aa9294b4f58d7ff79604b2a959b22dc863182e24481d518a796ce66820ab415dec3358042d5f193290abbad71767ad47dcac539432a56008c25064ab39b4_0","lines":"\t\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1432,"col":4,"offset":36770},"end":{"line":1432,"col":15,"offset":36781},"extra":{"metavars":{"$PTR":{"start":{"line":1432,"col":9,"offset":36775},"end":{"line":1432,"col":13,"offset":36779},"abstract_content":"nbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"85e4aa9294b4f58d7ff79604b2a959b22dc863182e24481d518a796ce66820ab415dec3358042d5f193290abbad71767ad47dcac539432a56008c25064ab39b4_1","lines":"\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1462,"col":9,"offset":37331},"end":{"line":1462,"col":50,"offset":37372},"extra":{"metavars":{"$FUN":{"start":{"line":1462,"col":9,"offset":37331},"end":{"line":1462,"col":13,"offset":37335},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b89ca38f823fbc5a16baa48866df15ccafba3c2b1b6d2846c6b5400e3ca742c3692955d859cbe236a4aeb43044fa0325c9a1d552d4ccbc4600e72b02aa1e6239_0","lines":"\t\t\t\tif (read(fd, cbuf, CAST(size_t, xcap_sizeof)) !=","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1464,"col":6,"offset":37419},"end":{"line":1464,"col":22,"offset":37435},"extra":{"metavars":{"$FUN":{"start":{"line":1464,"col":6,"offset":37419},"end":{"line":1464,"col":18,"offset":37431},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_7","lines":"\t\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1471,"col":6,"offset":37553},"end":{"line":1471,"col":34,"offset":37581},"extra":{"metavars":{"$FUN":{"start":{"line":1471,"col":6,"offset":37553},"end":{"line":1471,"col":12,"offset":37559},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_10","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1483,"col":6,"offset":37830},"end":{"line":1483,"col":34,"offset":37858},"extra":{"metavars":{"$FUN":{"start":{"line":1483,"col":6,"offset":37830},"end":{"line":1483,"col":12,"offset":37836},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_11","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1497,"col":5,"offset":38107},"end":{"line":1497,"col":41,"offset":38143},"extra":{"metavars":{"$FUN":{"start":{"line":1497,"col":5,"offset":38107},"end":{"line":1497,"col":11,"offset":38113},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32adca9f780f1e067b1540edc7dcdd995c0418b1ec5a47024898eea69fd5988efd7c5bf84600634ee35000ef59b8bcda383ae50e7077938be3380e244267ec2e_12","lines":"\t\t\t\tmemcpy(xcap_addr, cbuf, xcap_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1555,"col":5,"offset":39260},"end":{"line":1560,"col":6,"offset":39405},"extra":{"metavars":{"$EXPR1":{"start":{"line":1555,"col":9,"offset":39264},"end":{"line":1555,"col":16,"offset":39271},"abstract_content":"cap_hw1"},"$EXPR2":{"start":{"line":1555,"col":19,"offset":39274},"end":{"line":1555,"col":31,"offset":39286},"abstract_content":"cdp->->cd_mask"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2538d4fb663cf7fd9391686fd9aebeb23253448129d45a417b9957554772a132cde4f59af41aaa473e1d229ef5fc1e8767d740c2b21c280c941f3a3d9dcc739f_0","lines":"\t\t\t\tif (cap_hw1 & cdp->cd_mask) {\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcap_hw1 &= ~cdp->cd_mask;\n\t\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1577,"col":3,"offset":39774},"end":{"line":1583,"col":4,"offset":39967},"extra":{"metavars":{"$EXPR1":{"start":{"line":1577,"col":7,"offset":39778},"end":{"line":1577,"col":14,"offset":39785},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1577,"col":17,"offset":39788},"end":{"line":1577,"col":32,"offset":39803},"abstract_content":"SF1_SUNW_FPUSED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ec2e7437308949dc4aad79bf2730462e3e3cd490d8c14e2822098419c1e4de7ca1d0ffc97d6c997fa0360420f266f7bd42312f858d872e8b82dd137b8f59d19b_0","lines":"\t\tif (cap_sf1 & SF1_SUNW_FPUSED) {\n\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1578,"col":4,"offset":39810},"end":{"line":1582,"col":15,"offset":39963},"extra":{"metavars":{"$EXPR1":{"start":{"line":1579,"col":9,"offset":39838},"end":{"line":1579,"col":16,"offset":39845},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1579,"col":19,"offset":39848},"end":{"line":1579,"col":34,"offset":39863},"abstract_content":"SF1_SUNW_FPKNWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9a4570fc3771ee0f3834ec67bbcf98bd82bfbfa70bb87607e1a069132e8d526d39f00a8cc513b1a8fd2ea762aca8670f3a448048e2615ba13b97826f3b505fe9_0","lines":"\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1628,"col":7,"offset":41029},"end":{"line":1628,"col":43,"offset":41065},"extra":{"metavars":{"$FUN":{"start":{"line":1628,"col":7,"offset":41029},"end":{"line":1628,"col":12,"offset":41034},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_8","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1630,"col":4,"offset":41106},"end":{"line":1630,"col":20,"offset":41122},"extra":{"metavars":{"$FUN":{"start":{"line":1630,"col":4,"offset":41106},"end":{"line":1630,"col":16,"offset":41118},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_8","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1636,"col":3,"offset":41175},"end":{"line":1636,"col":12,"offset":41184},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1636,"col":3,"offset":41175},"end":{"line":1636,"col":8,"offset":41180},"abstract_content":"align"},"$SIGNED":{"start":{"line":1636,"col":11,"offset":41183},"end":{"line":1636,"col":12,"offset":41184},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ac11e456bf16e30da474183bdaef2b5fd2d61cfc61e174f4b5f3b8523441a3457377d1a7c522fdea33a3bed2a03eedbd7e5756d29fdaa71a1625aad728c7b06a_0","lines":"\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1646,"col":4,"offset":41387},"end":{"line":1653,"col":5,"offset":41599},"extra":{"metavars":{"$EXPR1":{"start":{"line":1646,"col":10,"offset":41393},"end":{"line":1646,"col":15,"offset":41398},"abstract_content":"align","propagated_value":{"svalue_start":{"line":1646,"col":18,"offset":41401},"svalue_end":{"line":1646,"col":27,"offset":41410},"svalue_abstract_content":"xph_align"}},"$EXPR2":{"start":{"line":1646,"col":18,"offset":41401},"end":{"line":1646,"col":27,"offset":41410},"abstract_content":"xph_align"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f0536dde1549258b056e56c80b55f0343a4809364040b4f3891ec56db1d3f8f45a486844f14680d2b7ba29d1d223a12ce10f565fa0372ae4cfd904958a10c0d5_0","lines":"\t\t\tif (((align = xph_align) & 0x80000000UL) != 0 ||\n\t\t\t    align < 4) {\n\t\t\t\tif (file_printf(ms,\n\t\t\t\t    \", invalid note alignment %#lx\",\n\t\t\t\t    CAST(unsigned long, align)) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\talign = 4;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1652,"col":5,"offset":41584},"end":{"line":1652,"col":14,"offset":41593},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1652,"col":5,"offset":41584},"end":{"line":1652,"col":10,"offset":41589},"abstract_content":"align"},"$SIGNED":{"start":{"line":1652,"col":13,"offset":41592},"end":{"line":1652,"col":14,"offset":41593},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ac11e456bf16e30da474183bdaef2b5fd2d61cfc61e174f4b5f3b8523441a3457377d1a7c522fdea33a3bed2a03eedbd7e5756d29fdaa71a1625aad728c7b06a_1","lines":"\t\t\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":46,"offset":41969},"extra":{"metavars":{"$FUN":{"start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":19,"offset":41942},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e78095d4db94b5071e0267813fba2b3c64eb330b12a4afb2bccaef7e2d21471ad297d902a48cbb2e74231695471e8cf5409e382ba5733edba497fe778817a263_9","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":46,"offset":41969},"extra":{"metavars":{"$TYPE":{"start":{"line":1608,"col":2,"offset":40629},"end":{"line":1608,"col":15,"offset":40642},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":1608,"col":21,"offset":40648},"end":{"line":1608,"col":27,"offset":40654},"abstract_content":"BUFSIZ"},"$FUN":{"start":{"line":1671,"col":14,"offset":41937},"end":{"line":1671,"col":19,"offset":41942},"abstract_content":"pread"},"$ARG1":{"start":{"line":1671,"col":20,"offset":41943},"end":{"line":1671,"col":22,"offset":41945},"abstract_content":"fd"},"$BUF":{"start":{"line":1671,"col":24,"offset":41947},"end":{"line":1671,"col":28,"offset":41951},"abstract_content":"nbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"9dd8e055f1c91eb34fbd489866a68d0a6c74dc675f029ebb6604f81b4340dea171ab12043547a8d706b0a3d1ee20bab0b0211c4547db3f20246f8d4c07c4fbb3_0","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1673,"col":5,"offset":41999},"end":{"line":1673,"col":21,"offset":42015},"extra":{"metavars":{"$FUN":{"start":{"line":1673,"col":5,"offset":41999},"end":{"line":1673,"col":17,"offset":42011},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_9","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1677,"col":4,"offset":42049},"end":{"line":1677,"col":11,"offset":42056},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1677,"col":4,"offset":42049},"end":{"line":1677,"col":7,"offset":42052},"abstract_content":"len"},"$SIGNED":{"start":{"line":1677,"col":10,"offset":42055},"end":{"line":1677,"col":11,"offset":42056},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c788777ddbafc2526bf73ee9e2e49345ddc0c3d604ee3e7eb0187bda777def5abd734478ec4752bfe29bbab32e91102e1194ee9871221c5ab5c716afb129bbb9_0","lines":"\t\t\tlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1682,"col":4,"offset":42148},"end":{"line":1682,"col":14,"offset":42158},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1682,"col":4,"offset":42148},"end":{"line":1682,"col":10,"offset":42154},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1682,"col":13,"offset":42157},"end":{"line":1682,"col":14,"offset":42158},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"485f08113f1e11258ce8e6b31d20f7ee94c8fc3600a32b690f1800932e21290ba06d4782743161790a2cb73bcdf17c8e5b9114a5069345284d274604757773b5_1","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1688,"col":5,"offset":42300},"end":{"line":1689,"col":44,"offset":42380},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1688,"col":5,"offset":42300},"end":{"line":1688,"col":11,"offset":42306},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1689,"col":32,"offset":42368},"end":{"line":1689,"col":37,"offset":42373},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2244dd5e18639d16a7949cc03587daf3b5e6b3c66135ba58d51e710b1b31f3c3d7c4fa19e9bad3f1fe04e52acf910bf8de636d23087d60acc5406ba554d5be58_1","lines":"\t\t\t\toffset = dodynamic(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1700,"col":5,"offset":42571},"end":{"line":1700,"col":47,"offset":42613},"extra":{"metavars":{"$FUN":{"start":{"line":1700,"col":5,"offset":42571},"end":{"line":1700,"col":12,"offset":42578},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d49565f244879f6c7dee10c46058cf7507dab93e8899f6443cb68f30de71ac818f030573d81967863dfc5b8b8044bdb7487b2b588a410a187fb335a8638c77fd_0","lines":"\t\t\t\tstrlcpy(interp, \"*empty*\", sizeof(interp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1707,"col":4,"offset":42739},"end":{"line":1707,"col":14,"offset":42749},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1707,"col":4,"offset":42739},"end":{"line":1707,"col":10,"offset":42745},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1707,"col":13,"offset":42748},"end":{"line":1707,"col":14,"offset":42749},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"485f08113f1e11258ce8e6b31d20f7ee94c8fc3600a32b690f1800932e21290ba06d4782743161790a2cb73bcdf17c8e5b9114a5069345284d274604757773b5_2","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1711,"col":5,"offset":42822},"end":{"line":1713,"col":39,"offset":42945},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1711,"col":5,"offset":42822},"end":{"line":1711,"col":11,"offset":42828},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1712,"col":32,"offset":42887},"end":{"line":1712,"col":37,"offset":42892},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2244dd5e18639d16a7949cc03587daf3b5e6b3c66135ba58d51e710b1b31f3c3d7c4fa19e9bad3f1fe04e52acf910bf8de636d23087d60acc5406ba554d5be58_2","lines":"\t\t\t\toffset = donote(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap, align,\n\t\t\t\t    flags, notecount, fd, 0, 0, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1754,"col":2,"offset":43682},"end":{"line":1755,"col":12,"offset":43751},"extra":{"metavars":{"$EXPR1":{"start":{"line":1754,"col":6,"offset":43686},"end":{"line":1754,"col":15,"offset":43695},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1754,"col":19,"offset":43699},"end":{"line":1754,"col":57,"offset":43737},"abstract_content":"MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8cfd4be8971e855d8e1a89e9114bed0983223711c830e1176e34e33c8db0f2af1c31be88b1db2eb2c80ceb66c5026df67c5b237bcaae86fed85e818d2a231a3d_0","lines":"\tif (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1774,"col":3,"offset":44414},"end":{"line":1774,"col":43,"offset":44454},"extra":{"metavars":{"$SIGNED":{"start":{"line":1774,"col":3,"offset":44414},"end":{"line":1774,"col":5,"offset":44416},"abstract_content":"fd"},"$UNSIGNED":{"start":{"line":1774,"col":36,"offset":44447},"end":{"line":1774,"col":42,"offset":44453},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec79b171cac7152b4b303783573a796b53a02073f8b4ddf0f4c0535ea6f3be0bc3f435ce630de71fc5bffbfa05e3ecdfef5962963d425286b06d5bda456f6afc_0","lines":"\t\tfd = file_pipe2file(ms, fd, buf, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1777,"col":3,"offset":44476},"end":{"line":1777,"col":19,"offset":44492},"extra":{"metavars":{"$FUN":{"start":{"line":1777,"col":3,"offset":44476},"end":{"line":1777,"col":15,"offset":44488},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_10","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1788,"col":7,"offset":44688},"end":{"line":1788,"col":21,"offset":44702},"extra":{"metavars":{"$FUN":{"start":{"line":1788,"col":7,"offset":44688},"end":{"line":1788,"col":12,"offset":44693},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b730847d750f58a428176588ac86b38dc744765451385eee3738b91d7a76f05cadfa6078844bd9742a7cc30a9b72b624a22b2ed965b9fe19a15b4109319266c8_0","lines":"\t\tif (fstat(fd, &st) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1789,"col":4,"offset":44715},"end":{"line":1789,"col":20,"offset":44731},"extra":{"metavars":{"$FUN":{"start":{"line":1789,"col":4,"offset":44715},"end":{"line":1789,"col":16,"offset":44727},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f12ebdb9013b749021386663f23fbb115d0ffef8b650b71e3dd8488a9e76d43f08ee65154e058cbb9aaccb787b5dadabbc93ef215a170a1c535aa8cd68bce70_11","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":175,"col":26,"offset":5575},"end":{"line":175,"col":30,"offset":5579},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7772aea07bfef39a90e789af0bca791c3008b23aace5a36f111a885d83bb11a8fceb7b615a515ef56b124ea0a7b6e4ba695712997ec8aa6c27dec0d1f753edcb_0","lines":"\tif ((progname = strrchr(argv[0], '/')) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":178,"col":14,"offset":5632},"end":{"line":178,"col":18,"offset":5636},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7772aea07bfef39a90e789af0bca791c3008b23aace5a36f111a885d83bb11a8fceb7b615a515ef56b124ea0a7b6e4ba695712997ec8aa6c27dec0d1f753edcb_1","lines":"\t\tprogname = argv[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":185,"col":12,"offset":5742},"end":{"line":185,"col":35,"offset":5765},"extra":{"metavars":{"$FUN":{"start":{"line":185,"col":12,"offset":5742},"end":{"line":185,"col":22,"offset":5752},"abstract_content":"magic_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a4a33f5b29a0ac24caa98fb7bde6d1c2a23fe0feb97c14c81094f81b67da156e4930962a019dc54650add33ea08d2d1879320f68bd2fd287968f4efd089483e8_0","lines":"\tif ((ms = magic_open(MAGIC_CHECK)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":189,"col":26,"offset":5882},"end":{"line":189,"col":30,"offset":5886},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7772aea07bfef39a90e789af0bca791c3008b23aace5a36f111a885d83bb11a8fceb7b615a515ef56b124ea0a7b6e4ba695712997ec8aa6c27dec0d1f753edcb_2","lines":"\tret = magic_compile(ms, argv[1]) == -1 ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":343,"col":9,"offset":10764},"end":{"line":380,"col":20,"offset":11675},"extra":{"metavars":{"$EXPR1":{"start":{"line":343,"col":21,"offset":10776},"end":{"line":343,"col":25,"offset":10780},"abstract_content":"CAST"},"$EXPR2":{"start":{"line":343,"col":49,"offset":10804},"end":{"line":376,"col":3,"offset":11610},"abstract_content":"{{FILE_INVALID}}"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"354985269cf146eda4b3d614c298c55c74a5a282ebf99581cea40b47bc98da09b3199b166f77af1eeb918d77cdbb3fb9fbdfa816e62a9d241d0776918b44bbfc_0","lines":"\t} else if (isdigit(CAST(unsigned char, l[1]))) {\n\t\t/*\n\t\t * \"d{num}\" and \"u{num}\"; we only support {num} values\n\t\t * of 1, 2, 4, and 8 - the Single UNIX Specification\n\t\t * doesn't say anything about whether arbitrary\n\t\t * values should be supported, but both the Solaris 10\n\t\t * and OS X Mountain Lion versions of file passed the\n\t\t * Single UNIX Specification validation suite, and\n\t\t * neither of them support values bigger than 8 or\n\t\t * non-power-of-2 values.\n\t\t */\n\t\tif (isdigit(CAST(unsigned char, l[2]))) {\n\t\t\t/* Multi-digit, so > 9 */\n\t\t\treturn FILE_INVALID;\n\t\t}\n\t\tswitch (l[1]) {\n\t\tcase '1':\n\t\t\ttype = FILE_BYTE;\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\ttype = FILE_SHORT;\n\t\t\tbreak;\n\t\tcase '4':\n\t\t\ttype = FILE_LONG;\n\t\t\tbreak;\n\t\tcase '8':\n\t\t\ttype = FILE_QUAD;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* XXX - what about 3, 5, 6, or 7? */\n\t\t\treturn FILE_INVALID;\n\t\t}\n\t\tl += 2;\n\t} else {\n\t\t/*\n\t\t * \"d\" or \"u\" by itself.\n\t\t */\n\t\ttype = FILE_LONG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":399,"col":3,"offset":11879},"end":{"line":399,"col":36,"offset":11912},"extra":{"metavars":{"$ASSERT":{"start":{"line":399,"col":3,"offset":11879},"end":{"line":399,"col":9,"offset":11885},"abstract_content":"assert"},"$A":{"start":{"line":399,"col":10,"offset":11886},"end":{"line":399,"col":17,"offset":11893},"abstract_content":"p->->type"},"$B":{"start":{"line":399,"col":20,"offset":11896},"end":{"line":399,"col":35,"offset":11911},"abstract_content":"FILE_NAMES_SIZE"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b0090d1d18d66f5f95ca963946cc686dacf43cdaf49b830d04f495f2ec2caf301d23b51f717a0f9447fde1a517be8b1236cafbf3b6ac31c365fcbb2ca5869f3_0","lines":"\t\tassert(p->type < FILE_NAMES_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":412,"col":33,"offset":12180},"end":{"line":412,"col":52,"offset":12199},"extra":{"metavars":{"$FUN":{"start":{"line":412,"col":33,"offset":12180},"end":{"line":412,"col":39,"offset":12186},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210edc5be4fb00df75ce79f66123fd42d00be6ed5f68d9490ecd3e46004771467feb1b6f14987a59f1e459fbde028a80252af45ccee9405d9c27c4f5022d85fa_0","lines":"\tif ((ml = CAST(struct mlist *, malloc(sizeof(*ml)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":457,"col":3,"offset":13098},"end":{"line":458,"col":58,"offset":13184},"extra":{"metavars":{"$EXPR1":{"start":{"line":457,"col":7,"offset":13102},"end":{"line":457,"col":16,"offset":13111},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":457,"col":19,"offset":13114},"end":{"line":457,"col":30,"offset":13125},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_0","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"using regular magic file `%s'\", fn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":464,"col":7,"offset":13269},"end":{"line":464,"col":12,"offset":13274},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":464,"col":7,"offset":13269},"end":{"line":464,"col":8,"offset":13270},"abstract_content":"i"},"$SIGNED":{"start":{"line":464,"col":11,"offset":13273},"end":{"line":464,"col":12,"offset":13274},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_0","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":472,"col":8,"offset":13435},"end":{"line":472,"col":13,"offset":13440},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":472,"col":8,"offset":13435},"end":{"line":472,"col":9,"offset":13436},"abstract_content":"i"},"$SIGNED":{"start":{"line":472,"col":12,"offset":13439},"end":{"line":472,"col":13,"offset":13440},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_1","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":473,"col":4,"offset":13468},"end":{"line":474,"col":10,"offset":13532},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"504034e71faa412bd9fb0bcfb7c4ddf34dd590d7fc82a1f0309184de73bfe77f3f75d407bce741d347de6960359b0a3916c6b990ed53499295251a42678fbd1e_0","lines":"\t\t\tprintf(\"Set %\" SIZE_T_FORMAT \"u:\\nBinary patterns:\\n\",\n\t\t\t    i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":492,"col":7,"offset":13812},"end":{"line":492,"col":12,"offset":13817},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":492,"col":7,"offset":13812},"end":{"line":492,"col":8,"offset":13813},"abstract_content":"i"},"$SIGNED":{"start":{"line":492,"col":11,"offset":13816},"end":{"line":492,"col":12,"offset":13817},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_2","lines":"\tfor (i = 0; i < MAGIC_SETS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":494,"col":2,"offset":13869},"end":{"line":494,"col":19,"offset":13886},"extra":{"metavars":{"$PTR":{"start":{"line":494,"col":7,"offset":13874},"end":{"line":494,"col":17,"offset":13884},"abstract_content":"ms->->o.pbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c058adcea34457518c40cfc6c57c0b446cd3382fc614055cf74267559fb331a9ae0aaf1c84a65e77811cb298dd51865e451f8cc53db211b7e4b8ea38188945cf_0","lines":"\tfree(ms->o.pbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":495,"col":2,"offset":13888},"end":{"line":495,"col":18,"offset":13904},"extra":{"metavars":{"$PTR":{"start":{"line":495,"col":7,"offset":13893},"end":{"line":495,"col":16,"offset":13902},"abstract_content":"ms->->o.buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba1d5acb0e206ec9015993a5e6acdc5a4c98c4986ebaaa95f596b6f8d580f62a5970b0b64463891a733a30351fcb07a7d8f911a4a740057e270611429b27af40_0","lines":"\tfree(ms->o.buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":496,"col":2,"offset":13906},"end":{"line":496,"col":17,"offset":13921},"extra":{"metavars":{"$PTR":{"start":{"line":496,"col":7,"offset":13911},"end":{"line":496,"col":15,"offset":13919},"abstract_content":"ms->->c.li"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c03b5cdf2d76276f5c1cdce11324d16b1dced6b5aa8e310776cf41b9a0ea644baddc8d0a2c5a17b08cb764f8da205b5b95d206d7d8d3730bd24b1ed8bd842608_0","lines":"\tfree(ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":497,"col":2,"offset":13923},"end":{"line":497,"col":11,"offset":13932},"extra":{"metavars":{"$PTR":{"start":{"line":497,"col":7,"offset":13928},"end":{"line":497,"col":9,"offset":13930},"abstract_content":"ms"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8f9b0236fd2d0c2dfce051453559b271afa9c9bb408cddd4d2dbf05d7febc8a3ef4d735e25b9adccf32f58d36fe468733bf02fc1a17b3c13f9d79eaa6de3a10_0","lines":"\tfree(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":37,"offset":14068},"end":{"line":507,"col":31,"offset":14123},"extra":{"metavars":{"$FUN":{"start":{"line":506,"col":37,"offset":14068},"end":{"line":506,"col":43,"offset":14074},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"777b6cd95da6baa79f071a182aa65e124de7c8af0a2e19ff598c61639dd598c4d622b0e0126ff5877857561ec2713cb4b31486463620d9badd7d22b91c7eda39_0","lines":"\tif ((ms = CAST(struct magic_set *, calloc(CAST(size_t, 1u),\n\t    sizeof(struct magic_set)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":516,"col":2,"offset":14259},"end":{"line":516,"col":43,"offset":14300},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":516,"col":2,"offset":14259},"end":{"line":516,"col":5,"offset":14262},"abstract_content":"len"},"$SIGNED":{"start":{"line":516,"col":21,"offset":14278},"end":{"line":516,"col":23,"offset":14280},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dc3a6ffed7edb1885e6b4028e0521ff7dbd1a9a74590697e54a3a79d8e622749e20a4c9548b5adb91fb13ecfe10b06f0cc675b33de9bd36cc87e29ea9dbc055a_0","lines":"\tlen = (ms->c.len = 10) * sizeof(*ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":516,"col":9,"offset":14266},"end":{"line":516,"col":23,"offset":14280},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":516,"col":9,"offset":14266},"end":{"line":516,"col":18,"offset":14275},"abstract_content":"ms->->c.len"},"$SIGNED":{"start":{"line":516,"col":21,"offset":14278},"end":{"line":516,"col":23,"offset":14280},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"976069f8cbc0265216895ff0c516c1477d0083da39dfc6345a9de6a7aae10c01d78aa9d86c181ae98284a6be404ab2b2c2d608bb8b66869598cf4fb7c0357434_0","lines":"\tlen = (ms->c.len = 10) * sizeof(*ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":44,"offset":14347},"end":{"line":518,"col":55,"offset":14358},"extra":{"metavars":{"$X":{"start":{"line":516,"col":9,"offset":14266},"end":{"line":516,"col":23,"offset":14280},"abstract_content":"ms->->c.len=10"},"$Y":{"start":{"line":516,"col":27,"offset":14284},"end":{"line":516,"col":43,"offset":14300},"abstract_content":"sizeof*ms->->c.li"},"$FUN":{"start":{"line":518,"col":44,"offset":14347},"end":{"line":518,"col":50,"offset":14353},"abstract_content":"malloc"},"$N":{"start":{"line":518,"col":51,"offset":14354},"end":{"line":518,"col":54,"offset":14357},"abstract_content":"len"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"464438630e318a7758afb222d4a4900f877423465e0946acaa4739cf40a796f9384cc7f4661febfcfbacbcbadec0833dd566dc03af5a49a62898589477b7b60e_0","lines":"\tif ((ms->c.li = CAST(struct level_info *, malloc(len))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":44,"offset":14347},"end":{"line":518,"col":55,"offset":14358},"extra":{"metavars":{"$FUN":{"start":{"line":518,"col":44,"offset":14347},"end":{"line":518,"col":50,"offset":14353},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210edc5be4fb00df75ce79f66123fd42d00be6ed5f68d9490ecd3e46004771467feb1b6f14987a59f1e459fbde028a80252af45ccee9405d9c27c4f5022d85fa_1","lines":"\tif ((ms->c.li = CAST(struct level_info *, malloc(len))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":523,"col":7,"offset":14429},"end":{"line":523,"col":12,"offset":14434},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":523,"col":7,"offset":14429},"end":{"line":523,"col":8,"offset":14430},"abstract_content":"i"},"$SIGNED":{"start":{"line":523,"col":11,"offset":14433},"end":{"line":523,"col":12,"offset":14434},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_3","lines":"\tfor (i = 0; i < MAGIC_SETS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":536,"col":2,"offset":14790},"end":{"line":536,"col":11,"offset":14799},"extra":{"metavars":{"$PTR":{"start":{"line":536,"col":7,"offset":14795},"end":{"line":536,"col":9,"offset":14797},"abstract_content":"ms","propagated_value":{"svalue_start":{"line":506,"col":12,"offset":14043},"svalue_end":{"line":507,"col":32,"offset":14124},"svalue_abstract_content":"CAST(magic_set*calloc(CAST(1u)sizeof(struct magic_set)))"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f8f9b0236fd2d0c2dfce051453559b271afa9c9bb408cddd4d2dbf05d7febc8a3ef4d735e25b9adccf32f58d36fe468733bf02fc1a17b3c13f9d79eaa6de3a10_1","lines":"\tfree(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":551,"col":8,"offset":14994},"end":{"line":551,"col":13,"offset":14999},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":551,"col":8,"offset":14994},"end":{"line":551,"col":9,"offset":14995},"abstract_content":"i"},"$SIGNED":{"start":{"line":551,"col":12,"offset":14998},"end":{"line":551,"col":13,"offset":14999},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_4","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":557,"col":4,"offset":15189},"end":{"line":557,"col":24,"offset":15209},"extra":{"metavars":{"$PTR":{"start":{"line":557,"col":9,"offset":15194},"end":{"line":557,"col":22,"offset":15207},"abstract_content":"map->->magic[i]"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8000654a1959611f1e38ead747cc296ac5fedca882cad1e1ccd30062787fdfebb5e92f7696d94e122091862ca87abd289ed2103fd186c48401cf8ca9486afd33_0","lines":"\t\t\tfree(map->magic[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":559,"col":3,"offset":15216},"end":{"line":559,"col":16,"offset":15229},"extra":{"metavars":{"$PTR":{"start":{"line":559,"col":8,"offset":15221},"end":{"line":559,"col":14,"offset":15227},"abstract_content":"map->->p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d84f80264b6ce608fe81da685ce9b7552d0713da4c67c18bac1554e9875f61d25649890d56d9441b5b56a739ecb09bb56a7f6c0935aea18c4963a921dd16eb7b_0","lines":"\t\tfree(map->p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":570,"col":2,"offset":15387},"end":{"line":570,"col":12,"offset":15397},"extra":{"metavars":{"$PTR":{"start":{"line":570,"col":7,"offset":15392},"end":{"line":570,"col":10,"offset":15395},"abstract_content":"map"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8498e6850db0ee8f451e458a8123d4c85d6e08c46399502ffa44f48e8cc5f2240ff17d9900c2b4aa46651e4c2c9167a30df83974f44d6e7ba1c7ea6356ed38d2_0","lines":"\tfree(map);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":36,"offset":15501},"end":{"line":577,"col":61,"offset":15526},"extra":{"metavars":{"$FUN":{"start":{"line":577,"col":36,"offset":15501},"end":{"line":577,"col":42,"offset":15507},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"777b6cd95da6baa79f071a182aa65e124de7c8af0a2e19ff598c61639dd598c4d622b0e0126ff5877857561ec2713cb4b31486463620d9badd7d22b91c7eda39_1","lines":"\tif ((mlist = CAST(struct mlist *, calloc(1, sizeof(*mlist)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":36,"offset":15501},"end":{"line":577,"col":61,"offset":15526},"extra":{"metavars":{"$CNT":{"start":{"line":577,"col":43,"offset":15508},"end":{"line":577,"col":44,"offset":15509},"abstract_content":"1"},"$LEN":{"start":{"line":577,"col":46,"offset":15511},"end":{"line":577,"col":59,"offset":15524},"abstract_content":"sizeof*mlist"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7d7fcd5dbaf2de80bdc0e6155d1d881e6f757a1e89dc3e6269fd3dec888d843fea31c0df6d1c8795bf7990720b7c06cb2b0c961355048d0a5d0f3212c0e91844_0","lines":"\tif ((mlist = CAST(struct mlist *, calloc(1, sizeof(*mlist)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":589,"col":2,"offset":15730},"end":{"line":589,"col":11,"offset":15739},"extra":{"metavars":{"$PTR":{"start":{"line":589,"col":7,"offset":15735},"end":{"line":589,"col":9,"offset":15737},"abstract_content":"ml"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58610679e096f7afb9c5af2bfc97c5d5e359dfa580b5fa0f521363350b773d94a8253551f3420d86ccabcb90b565d0b34b20155ce43cd31dc4912c314ed16c7f_0","lines":"\tfree(ml);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":624,"col":7,"offset":16296},"end":{"line":624,"col":12,"offset":16301},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":624,"col":7,"offset":16296},"end":{"line":624,"col":8,"offset":16297},"abstract_content":"i"},"$SIGNED":{"start":{"line":624,"col":11,"offset":16300},"end":{"line":624,"col":12,"offset":16301},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_5","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":626,"col":23,"offset":16376},"end":{"line":626,"col":36,"offset":16389},"extra":{"metavars":{"$FUN":{"start":{"line":626,"col":23,"offset":16376},"end":{"line":626,"col":34,"offset":16387},"abstract_content":"mlist_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79ad25fd8b2073d113acf93b933d77f61b6edd10996a595bf3d669180c3a2361e9aa76ac032ce138d1a71dbdf457ef8644c1ece2ee734ee6dd04da90835352f6_0","lines":"\t\tif ((ms->mlist[i] = mlist_alloc()) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":632,"col":7,"offset":16472},"end":{"line":632,"col":12,"offset":16477},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":632,"col":7,"offset":16472},"end":{"line":632,"col":8,"offset":16473},"abstract_content":"i"},"$SIGNED":{"start":{"line":632,"col":11,"offset":16476},"end":{"line":632,"col":12,"offset":16477},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_6","lines":"\tfor (i = 0; i < nbufs; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":637,"col":8,"offset":16585},"end":{"line":637,"col":13,"offset":16590},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":637,"col":8,"offset":16585},"end":{"line":637,"col":9,"offset":16586},"abstract_content":"j"},"$SIGNED":{"start":{"line":637,"col":12,"offset":16589},"end":{"line":637,"col":13,"offset":16590},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"455fb92cb235963650c9105f9af1fbd34370f356a6b10ec7ea1e079c07e33ac9ba9f680a41b1218471b96a1bf2e80e835630b7343448b1f3cfd3f59d484dbae9_0","lines":"\t\tfor (j = 0; j < MAGIC_SETS; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":647,"col":7,"offset":16747},"end":{"line":647,"col":12,"offset":16752},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":647,"col":7,"offset":16747},"end":{"line":647,"col":8,"offset":16748},"abstract_content":"i"},"$SIGNED":{"start":{"line":647,"col":11,"offset":16751},"end":{"line":647,"col":12,"offset":16752},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_7","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":675,"col":7,"offset":17244},"end":{"line":675,"col":12,"offset":17249},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":675,"col":7,"offset":17244},"end":{"line":675,"col":8,"offset":17245},"abstract_content":"i"},"$SIGNED":{"start":{"line":675,"col":11,"offset":17248},"end":{"line":675,"col":12,"offset":17249},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_8","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":677,"col":23,"offset":17324},"end":{"line":677,"col":36,"offset":17337},"extra":{"metavars":{"$FUN":{"start":{"line":677,"col":23,"offset":17324},"end":{"line":677,"col":34,"offset":17335},"abstract_content":"mlist_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79ad25fd8b2073d113acf93b933d77f61b6edd10996a595bf3d669180c3a2361e9aa76ac032ce138d1a71dbdf457ef8644c1ece2ee734ee6dd04da90835352f6_1","lines":"\t\tif ((ms->mlist[i] = mlist_alloc()) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":683,"col":4,"offset":17476},"end":{"line":683,"col":14,"offset":17486},"extra":{"metavars":{"$PTR":{"start":{"line":683,"col":9,"offset":17481},"end":{"line":683,"col":12,"offset":17484},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1894d12e31590633960c21e889f82321dd3ad2c02c3db127ead78a3d112610158cbc2270bf2f6ed2c3b9caca5558de8276f8f4a7ceef517d0a04d7392863fa26_0","lines":"\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":700,"col":2,"offset":17701},"end":{"line":700,"col":12,"offset":17711},"extra":{"metavars":{"$PTR":{"start":{"line":700,"col":7,"offset":17706},"end":{"line":700,"col":10,"offset":17709},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1894d12e31590633960c21e889f82321dd3ad2c02c3db127ead78a3d112610158cbc2270bf2f6ed2c3b9caca5558de8276f8f4a7ceef517d0a04d7392863fa26_1","lines":"\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":703,"col":8,"offset":17739},"end":{"line":703,"col":13,"offset":17744},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":703,"col":8,"offset":17739},"end":{"line":703,"col":9,"offset":17740},"abstract_content":"i"},"$SIGNED":{"start":{"line":703,"col":12,"offset":17743},"end":{"line":703,"col":13,"offset":17744},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_9","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":718,"col":7,"offset":18002},"end":{"line":718,"col":12,"offset":18007},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":718,"col":7,"offset":18002},"end":{"line":718,"col":8,"offset":18003},"abstract_content":"i"},"$SIGNED":{"start":{"line":718,"col":11,"offset":18006},"end":{"line":718,"col":12,"offset":18007},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_10","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":750,"col":9,"offset":18720},"end":{"line":750,"col":15,"offset":18726},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":750,"col":9,"offset":18720},"end":{"line":750,"col":11,"offset":18722},"abstract_content":"rv"},"$SIGNED":{"start":{"line":750,"col":14,"offset":18725},"end":{"line":750,"col":15,"offset":18726},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"58b9bbcf8176005c3a0f099cd1a2e43f5d701ada8d3f4326e4984e115b22e41ae17e32960db00f789f58e17d2f19e22cecf910524f3a92a8191fee4ea0b23928_0","lines":"\tsize_t rv = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":753,"col":11,"offset":18763},"end":{"line":753,"col":13,"offset":18765},"extra":{"metavars":{"$VAR":{"start":{"line":753,"col":11,"offset":18763},"end":{"line":753,"col":13,"offset":18765},"abstract_content":"*p"},"$VAL1":{"start":{"line":754,"col":8,"offset":18776},"end":{"line":754,"col":12,"offset":18780},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":766,"col":8,"offset":18982},"end":{"line":766,"col":11,"offset":18985},"abstract_content":"'['"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"044825364e2a16573036f9fcfb2aeb3cb376ab912f0eefebfd829bdd36c060e0cdb679c64ffee65247fc95c38b26c62273638329b5e94534c9cf857ce071648d_0","lines":"\t\tswitch (*p) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1044,"col":10,"offset":24420},"end":{"line":1044,"col":17,"offset":24427},"extra":{"metavars":{"$VAR":{"start":{"line":1044,"col":10,"offset":24420},"end":{"line":1044,"col":17,"offset":24427},"abstract_content":"m->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a596b46949c440c61ec048d2d17648ec31aacefe95d088c29aa61fbbcf8715448b9c1200d91e320f51e60e8174ebf46a4deff75df6fd4118d2a6b75b65c32e0_0","lines":"\tswitch (m->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1087,"col":3,"offset":25254},"end":{"line":1090,"col":28,"offset":25358},"extra":{"metavars":{"$EXPR1":{"start":{"line":1087,"col":7,"offset":25258},"end":{"line":1087,"col":24,"offset":25275},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1087,"col":27,"offset":25278},"end":{"line":1087,"col":42,"offset":25293},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce5c9a391fc73088559a2122dc0c406355451baa92b2ab7acbc4398d975d15b40df33cab3333142f298a5dd2f2c219e803e88cbd91df72503685174ce29875f0_0","lines":"\t\tif (mstart->str_flags & STRING_TEXTTEST)\n\t\t\tmstart->flag |= TEXTTEST;\n\t\telse\n\t\t\tmstart->flag |= BINTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1095,"col":3,"offset":25434},"end":{"line":1096,"col":28,"offset":25501},"extra":{"metavars":{"$EXPR1":{"start":{"line":1095,"col":7,"offset":25438},"end":{"line":1095,"col":24,"offset":25455},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1095,"col":27,"offset":25458},"end":{"line":1095,"col":41,"offset":25472},"abstract_content":"STRING_BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8c948bb01e599b4d89330a2cb7b43b3e0320ab116d722db0fbefd8e940efff5fa0ac0056a4b5fe0278318ef43c185c677684d8780f6bd5691ec73e3d31c1db75_0","lines":"\t\tif (mstart->str_flags & STRING_BINTEST)\n\t\t\tmstart->flag |= BINTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1097,"col":3,"offset":25504},"end":{"line":1098,"col":29,"offset":25573},"extra":{"metavars":{"$EXPR1":{"start":{"line":1097,"col":7,"offset":25508},"end":{"line":1097,"col":24,"offset":25525},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1097,"col":27,"offset":25528},"end":{"line":1097,"col":42,"offset":25543},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce5c9a391fc73088559a2122dc0c406355451baa92b2ab7acbc4398d975d15b40df33cab3333142f298a5dd2f2c219e803e88cbd91df72503685174ce29875f0_1","lines":"\t\tif (mstart->str_flags & STRING_TEXTTEST)\n\t\t\tmstart->flag |= TEXTTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1100,"col":3,"offset":25577},"end":{"line":1101,"col":10,"offset":25625},"extra":{"metavars":{"$EXPR1":{"start":{"line":1100,"col":7,"offset":25581},"end":{"line":1100,"col":19,"offset":25593},"abstract_content":"mstart->->flag"},"$EXPR2":{"start":{"line":1100,"col":23,"offset":25597},"end":{"line":1100,"col":39,"offset":25613},"abstract_content":"TEXTTEST|BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7d478ac9603d3a496306054eae589ac86d37fce153efa529c3438838e02b03e3047b89cff7e933503cf5f777a66d18a4ab49845fa5b8439ab98d5430897857e0_0","lines":"\t\tif (mstart->flag & (TEXTTEST|BINTEST))\n\t\t\tbreak;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1125,"col":2,"offset":26144},"end":{"line":1125,"col":47,"offset":26189},"extra":{"metavars":{"$EXPR1":{"start":{"line":1125,"col":13,"offset":26155},"end":{"line":1125,"col":25,"offset":26167},"abstract_content":"me->->mp->->type"},"$EXPR2":{"start":{"line":1125,"col":29,"offset":26171},"end":{"line":1125,"col":38,"offset":26180},"abstract_content":"FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e96d4562baee166c5ecaddd508254111698505302167cc93c7d7022ea7409b00012e75b66f59e67ce1c6885716d4bd49b20554c2ff41c38c572787371e4badef_0","lines":"\tsize_t i = me->mp->type == FILE_NAME ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1125,"col":9,"offset":26151},"end":{"line":1125,"col":46,"offset":26188},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1125,"col":9,"offset":26151},"end":{"line":1125,"col":10,"offset":26152},"abstract_content":"i"},"$SIGNED":{"start":{"line":1125,"col":13,"offset":26155},"end":{"line":1125,"col":46,"offset":26188},"abstract_content":"me->->mp->->type==FILE_NAME 1 0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0caba5927972bd42cacf9c2d1f7251ef7c44c19cf19d7a2f16ebf7d15a84f9f7b5a4f393ddba1f29c0cd48d56e8f6d4784c12c370ef0e6fe6520cce481162bfe_0","lines":"\tsize_t i = me->mp->type == FILE_NAME ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1131,"col":7,"offset":26328},"end":{"line":1131,"col":53,"offset":26374},"extra":{"metavars":{"$FUN":{"start":{"line":1131,"col":7,"offset":26328},"end":{"line":1131,"col":14,"offset":26335},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1131,"col":15,"offset":26336},"end":{"line":1131,"col":25,"offset":26346},"abstract_content":"mset[i].me"},"$X":{"start":{"line":1131,"col":27,"offset":26348},"end":{"line":1131,"col":37,"offset":26358},"abstract_content":"sizeof*mp"},"$Y":{"start":{"line":1131,"col":41,"offset":26362},"end":{"line":1131,"col":52,"offset":26373},"abstract_content":"mset[i].max"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"12de3b27d7dce43c81a8c527662dd9a6b66e1cd2735a6b23583440b2db88cb347281e920283f430cbc51f9c0f3dc2f667532e69e8848e7f8d92de3aed0a747b5_0","lines":"\t\t    realloc(mset[i].me, sizeof(*mp) * mset[i].max))) ==","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1131,"col":7,"offset":26328},"end":{"line":1131,"col":53,"offset":26374},"extra":{"metavars":{"$FUN":{"start":{"line":1131,"col":7,"offset":26328},"end":{"line":1131,"col":14,"offset":26335},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2ec632409f7ce6b63d8d4231817a4b5e8852ead993d2c71e87a7d2621b5f328a1a3514b9d9ba0ee27cdfcaa6fe2e2b17a9734c7d2c1ee2686b4b0a8b6de671f8_0","lines":"\t\t    realloc(mset[i].me, sizeof(*mp) * mset[i].max))) ==","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1152,"col":9,"offset":26789},"end":{"line":1152,"col":19,"offset":26799},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1152,"col":9,"offset":26789},"end":{"line":1152,"col":15,"offset":26795},"abstract_content":"lineno"},"$SIGNED":{"start":{"line":1152,"col":18,"offset":26798},"end":{"line":1152,"col":19,"offset":26799},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"58f52252b2ccdab4bb1007fab0b63c70b08462d769b5bec313f4a3336837484569de470485bd41ecdfc261c171be9571f983893817a701660603b4fbae3e901d_0","lines":"\tsize_t lineno = 0, llen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1152,"col":21,"offset":26801},"end":{"line":1152,"col":29,"offset":26809},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1152,"col":21,"offset":26801},"end":{"line":1152,"col":25,"offset":26805},"abstract_content":"llen"},"$SIGNED":{"start":{"line":1152,"col":28,"offset":26808},"end":{"line":1152,"col":29,"offset":26809},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c318dd6e9b85424b09ef608b0e2c646c8b7d07c1e427bdbbbb75f817b9b54af90a34fd1343dc0c40099e6506b3d927bd4b756338b700755e706b67657471a89d_0","lines":"\tsize_t lineno = 0, llen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1157,"col":12,"offset":26881},"end":{"line":1157,"col":37,"offset":26906},"extra":{"metavars":{"$FUN":{"start":{"line":1157,"col":12,"offset":26881},"end":{"line":1157,"col":17,"offset":26886},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1588e8fd2d80b09b71ac03e48ba5239b7371c3be2ea3befb05b2b806b41c0a56f08cdd93eb9d8c82879456f32cd7f73c335f78b563fd395d1c06b89b9cdec3f6_0","lines":"\tFILE *f = fopen(ms->file = fn, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1184,"col":10,"offset":27511},"end":{"line":1184,"col":15,"offset":27516},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1184,"col":10,"offset":27511},"end":{"line":1184,"col":11,"offset":27512},"abstract_content":"i"},"$SIGNED":{"start":{"line":1184,"col":14,"offset":27515},"end":{"line":1184,"col":15,"offset":27516},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_11","lines":"\t\t\t\tfor (i = 0; bang[i].name != NULL; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1213,"col":12,"offset":28142},"end":{"line":1213,"col":48,"offset":28178},"extra":{"metavars":{"$VAR":{"start":{"line":1213,"col":12,"offset":28142},"end":{"line":1213,"col":48,"offset":28178},"abstract_content":"parse(ms&me line lineno action)"},"$VAL1":{"start":{"line":1214,"col":9,"offset":28190},"end":{"line":1214,"col":10,"offset":28191},"abstract_content":"0"},"$VAL2":{"start":{"line":1216,"col":9,"offset":28215},"end":{"line":1216,"col":10,"offset":28216},"abstract_content":"1"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a1187c51bb2e3b24dcffd1be2254068ab47d7bfa5db1887cb3de717edc28e69605fe68a04cc8499351fcf0d481504b2b2e9466431b47feaed92c576eef8c172c_0","lines":"\t\t\tswitch (parse(ms, &me, line, lineno, action)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1227,"col":2,"offset":28365},"end":{"line":1227,"col":13,"offset":28376},"extra":{"metavars":{"$PTR":{"start":{"line":1227,"col":7,"offset":28370},"end":{"line":1227,"col":11,"offset":28374},"abstract_content":"line"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf53444a69b9f01439e7e9e9117ef885f47e80999ff87b5ff7dc75cddca646615c6707bb215577d01a68c8eaa0352d0b357fc3c2c4670a86cdd86b0373f5afa3_0","lines":"\tfree(line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1261,"col":3,"offset":29223},"end":{"line":1270,"col":4,"offset":29588},"extra":{"metavars":{"$EXPR1":{"start":{"line":1261,"col":7,"offset":29227},"end":{"line":1261,"col":21,"offset":29241},"abstract_content":"me[i].mp->->flag"},"$EXPR2":{"start":{"line":1261,"col":24,"offset":29244},"end":{"line":1261,"col":31,"offset":29251},"abstract_content":"BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2630b0343907b1d64b5e95dde414d91626d1d0347c9e7ff1a1803f74d9becb3a7153c526fa1c3056b4f0ef01db2b0108a8873c942386218fede9241628e876c6_0","lines":"\t\tif (me[i].mp->flag & BINTEST) {\n\t\t\tchar *p = strstr(me[i].mp->desc, text);\n\t\t\tif (p && (p == me[i].mp->desc ||\n\t\t\t    isspace(CAST(unsigned char, p[-1]))) &&\n\t\t\t    (p + len - me[i].mp->desc == MAXstring\n\t\t\t    || (p[len] == '\\0' ||\n\t\t\t    isspace(CAST(unsigned char, p[len])))))\n\t\t\t\t(void)fprintf(stderr, \"*** Possible \"\n\t\t\t\t    \"binary test for text type\\n\");\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":34,"offset":30407},"end":{"line":1307,"col":46,"offset":30419},"extra":{"metavars":{"$X":{"start":{"line":1306,"col":9,"offset":30346},"end":{"line":1306,"col":20,"offset":30357},"abstract_content":"sizeof**ma"},"$Y":{"start":{"line":1306,"col":24,"offset":30361},"end":{"line":1306,"col":35,"offset":30372},"abstract_content":"mentrycount"},"$FUN":{"start":{"line":1307,"col":34,"offset":30407},"end":{"line":1307,"col":40,"offset":30413},"abstract_content":"malloc"},"$N":{"start":{"line":1307,"col":41,"offset":30414},"end":{"line":1307,"col":45,"offset":30418},"abstract_content":"slen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b1dc3a3c68dfe1b80f03c81ca94fb2aea70697ea5839ea805b546c84718f9d914b13bfc713b1c4747e10b2e03f27b924b19cc575ad94adac647f76443675ff54_0","lines":"\tif ((*ma = CAST(struct magic *, malloc(slen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":34,"offset":30407},"end":{"line":1307,"col":46,"offset":30419},"extra":{"metavars":{"$FUN":{"start":{"line":1307,"col":34,"offset":30407},"end":{"line":1307,"col":40,"offset":30413},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210edc5be4fb00df75ce79f66123fd42d00be6ed5f68d9490ecd3e46004771467feb1b6f14987a59f1e459fbde028a80252af45ccee9405d9c27c4f5022d85fa_2","lines":"\tif ((*ma = CAST(struct magic *, malloc(slen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1314,"col":9,"offset":30529},"end":{"line":1315,"col":39,"offset":30603},"extra":{"metavars":{"$FUN":{"start":{"line":1314,"col":9,"offset":30529},"end":{"line":1314,"col":15,"offset":30535},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4e6c5ab211fc096afd91681dd0aa6257f8deb6e7eaa4c385bf114f0bf9f0de3020dd2f53578b535bfdd1c44e9e65c938d041a85900d3f2d64ea7df83aa8e907a_0","lines":"\t\t(void)memcpy(*ma + mentrycount, me[i].mp,\n\t\t    me[i].cont_count * sizeof(**ma));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1329,"col":3,"offset":30817},"end":{"line":1329,"col":18,"offset":30832},"extra":{"metavars":{"$PTR":{"start":{"line":1329,"col":8,"offset":30822},"end":{"line":1329,"col":16,"offset":30830},"abstract_content":"me[i].mp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cee7a3653219ff915fd640402264397fbded874641e1418c84565998008e40f87cf85fd50dcceed4a85cb3828e656ec412b1b9e64f4639b8ecfa966f6d0d59be_0","lines":"\t\tfree(me[i].mp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1330,"col":2,"offset":30834},"end":{"line":1330,"col":11,"offset":30843},"extra":{"metavars":{"$PTR":{"start":{"line":1330,"col":7,"offset":30839},"end":{"line":1330,"col":9,"offset":30841},"abstract_content":"me"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"15c7c6f66ee0ebc33c3a23114a3e4930766cd8c1b3783a5e7b8271b5f54d0d9c1c3544afbc93bb8654d818962dc79577d27970851fdc1c30dd883668a1d09bcf_0","lines":"\tfree(me);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1338,"col":9,"offset":30981},"end":{"line":1338,"col":18,"offset":30990},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1338,"col":9,"offset":30981},"end":{"line":1338,"col":14,"offset":30986},"abstract_content":"files"},"$SIGNED":{"start":{"line":1338,"col":17,"offset":30989},"end":{"line":1338,"col":18,"offset":30990},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4158ae929b123afbfc6d89bbc43f4cee44529aa277934690fe7f84f39e1de3dca688e3d8e8f6de0f01ef126322eac5311d7b2cdde476fde3f5e20f6becdca6e3_0","lines":"\tsize_t files = 0, maxfiles = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1338,"col":20,"offset":30992},"end":{"line":1338,"col":32,"offset":31004},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1338,"col":20,"offset":30992},"end":{"line":1338,"col":28,"offset":31000},"abstract_content":"maxfiles"},"$SIGNED":{"start":{"line":1338,"col":31,"offset":31003},"end":{"line":1338,"col":32,"offset":31004},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8e4c7fcdb60686283b7868e7422cd34402a81a8ca3808f5373d5de26f47ce55988981dc8c5210a25dfe91529254749e219b1d2e93e68fc59f8a99b6d7caa1df0_0","lines":"\tsize_t files = 0, maxfiles = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1346,"col":2,"offset":31151},"end":{"line":1346,"col":31,"offset":31180},"extra":{"metavars":{"$TYPE":{"start":{"line":1342,"col":2,"offset":31078},"end":{"line":1342,"col":24,"offset":31100},"abstract_content":"struct magic_entry_set"},"$LEN":{"start":{"line":1342,"col":30,"offset":31106},"end":{"line":1342,"col":40,"offset":31116},"abstract_content":"MAGIC_SETS"},"$FUN":{"start":{"line":1346,"col":2,"offset":31151},"end":{"line":1346,"col":8,"offset":31157},"abstract_content":"memset"},"$BUF":{"start":{"line":1346,"col":9,"offset":31158},"end":{"line":1346,"col":13,"offset":31162},"abstract_content":"mset"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ae534ba1701a0b3a7f4cf46def05419aef67ac0564358f75c36d20dbf5f855c7ae518532f0bec2d7eb0d5888acebe1d35a3ad9dac88218692aec4acfb85e4585_0","lines":"\tmemset(mset, 0, sizeof(mset));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":38,"offset":31285},"end":{"line":1350,"col":61,"offset":31308},"extra":{"metavars":{"$FUN":{"start":{"line":1350,"col":38,"offset":31285},"end":{"line":1350,"col":44,"offset":31291},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"777b6cd95da6baa79f071a182aa65e124de7c8af0a2e19ff598c61639dd598c4d622b0e0126ff5877857561ec2713cb4b31486463620d9badd7d22b91c7eda39_2","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":38,"offset":31285},"end":{"line":1350,"col":61,"offset":31308},"extra":{"metavars":{"$CNT":{"start":{"line":1350,"col":45,"offset":31292},"end":{"line":1350,"col":46,"offset":31293},"abstract_content":"1"},"$LEN":{"start":{"line":1350,"col":48,"offset":31295},"end":{"line":1350,"col":59,"offset":31306},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1e89c82a9121400eb419743b8281a18a471ea290e058fc9d0ecb7ff9399d442d9dbb76cb56b7420d46d9cdc5979412070378c85eac65fc9a8cfb217bc7d128f3_0","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1362,"col":6,"offset":31559},"end":{"line":1362,"col":19,"offset":31572},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"53ed56e78506c7fe26a930c9cd7c64988cdf83e1d2190af68cf0f78ba01465040f0a28330004eb28054fba2b7e03aa6002b2913a13059cf82e6a48d9cd396dd9_0","lines":"\tif (stat(fn, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1362,"col":6,"offset":31559},"end":{"line":1362,"col":19,"offset":31572},"extra":{"metavars":{"$FUN":{"start":{"line":1362,"col":6,"offset":31559},"end":{"line":1362,"col":10,"offset":31563},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff01421f8a280e3426b9cb06e0348759ed5ad45d29d9e13a0a6c960b037c4da619511c64e3290a24b9aba9d9783c85556b46e5e14afe18e97d6a7035cb94c3c2_0","lines":"\tif (stat(fn, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1371,"col":8,"offset":31755},"end":{"line":1371,"col":46,"offset":31793},"extra":{"metavars":{"$FUN":{"start":{"line":1371,"col":8,"offset":31755},"end":{"line":1371,"col":16,"offset":31763},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8184adb07dac6ded0aa0d653d3a00e9eb125656221ebc570910d948493028d68fa17877e31c6e59c2076e005547f66384d3bca582cab901e360a241234ad5ba9_0","lines":"\t\t\tif (asprintf(&mfn, \"%s/%s\", fn, d->d_name) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1378,"col":8,"offset":31922},"end":{"line":1378,"col":22,"offset":31936},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"53ed56e78506c7fe26a930c9cd7c64988cdf83e1d2190af68cf0f78ba01465040f0a28330004eb28054fba2b7e03aa6002b2913a13059cf82e6a48d9cd396dd9_1","lines":"\t\t\tif (stat(mfn, &st) == -1 || !S_ISREG(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1378,"col":8,"offset":31922},"end":{"line":1378,"col":22,"offset":31936},"extra":{"metavars":{"$FUN":{"start":{"line":1378,"col":8,"offset":31922},"end":{"line":1378,"col":12,"offset":31926},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff01421f8a280e3426b9cb06e0348759ed5ad45d29d9e13a0a6c960b037c4da619511c64e3290a24b9aba9d9783c85556b46e5e14afe18e97d6a7035cb94c3c2_1","lines":"\t\t\tif (stat(mfn, &st) == -1 || !S_ISREG(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1379,"col":5,"offset":31974},"end":{"line":1379,"col":15,"offset":31984},"extra":{"metavars":{"$PTR":{"start":{"line":1379,"col":10,"offset":31979},"end":{"line":1379,"col":13,"offset":31982},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1894d12e31590633960c21e889f82321dd3ad2c02c3db127ead78a3d112610158cbc2270bf2f6ed2c3b9caca5558de8276f8f4a7ceef517d0a04d7392863fa26_2","lines":"\t\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1384,"col":5,"offset":32053},"end":{"line":1384,"col":34,"offset":32082},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1384,"col":5,"offset":32053},"end":{"line":1384,"col":13,"offset":32061},"abstract_content":"maxfiles"},"$SIGNED":{"start":{"line":1384,"col":28,"offset":32076},"end":{"line":1384,"col":29,"offset":32077},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4d0aa3f0247ab78cc96eeff712dfcfbaff9883911915cb1b2fc7628fd8c3dbafae98bb3d52d32be5c0dfcb3ab06fac93ef7514b7547bfba221013fd7145ca847_0","lines":"\t\t\t\tmaxfiles = (maxfiles + 1) * 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1387,"col":9,"offset":32165},"end":{"line":1387,"col":31,"offset":32187},"extra":{"metavars":{"$X":{"start":{"line":1385,"col":12,"offset":32095},"end":{"line":1385,"col":20,"offset":32103},"abstract_content":"maxfiles","propagated_value":{"svalue_start":{"line":1384,"col":17,"offset":32065},"svalue_end":{"line":1384,"col":34,"offset":32082},"svalue_abstract_content":"maxfiles+1*2"}},"$Y":{"start":{"line":1385,"col":23,"offset":32106},"end":{"line":1385,"col":38,"offset":32121},"abstract_content":"sizeof*filearr"},"$FUN":{"start":{"line":1387,"col":9,"offset":32165},"end":{"line":1387,"col":16,"offset":32172},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1387,"col":17,"offset":32173},"end":{"line":1387,"col":24,"offset":32180},"abstract_content":"filearr"},"$N":{"start":{"line":1387,"col":26,"offset":32182},"end":{"line":1387,"col":30,"offset":32186},"abstract_content":"mlen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7750c01b00e9164c4bac66d84b2defc8060c8d105c633e6f804eaef512d93bde6c2b63b52dfeb77278614f6e706e49aa05766f0422ac2bc4576813e2b1da2eec_0","lines":"\t\t\t\t    realloc(filearr, mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1387,"col":9,"offset":32165},"end":{"line":1387,"col":31,"offset":32187},"extra":{"metavars":{"$FUN":{"start":{"line":1387,"col":9,"offset":32165},"end":{"line":1387,"col":16,"offset":32172},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2ec632409f7ce6b63d8d4231817a4b5e8852ead993d2c71e87a7d2621b5f328a1a3514b9d9ba0ee27cdfcaa6fe2e2b17a9734c7d2c1ee2686b4b0a8b6de671f8_1","lines":"\t\t\t\t    realloc(filearr, mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1389,"col":6,"offset":32233},"end":{"line":1389,"col":16,"offset":32243},"extra":{"metavars":{"$PTR":{"start":{"line":1389,"col":11,"offset":32238},"end":{"line":1389,"col":14,"offset":32241},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1894d12e31590633960c21e889f82321dd3ad2c02c3db127ead78a3d112610158cbc2270bf2f6ed2c3b9caca5558de8276f8f4a7ceef517d0a04d7392863fa26_3","lines":"\t\t\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1402,"col":5,"offset":32507},"end":{"line":1402,"col":22,"offset":32524},"extra":{"metavars":{"$PTR":{"start":{"line":1402,"col":10,"offset":32512},"end":{"line":1402,"col":20,"offset":32522},"abstract_content":"filearr[i]"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04fff7711b903938d8c9e8a90772e5c4fd7ba3cfb9cf793e41ecb02c0ff67182e22adc818ac0941242e5b45065fab1bac1c95ffaf3cd20a40e0d04e9e2a3b0e1_0","lines":"\t\t\t\tfree(filearr[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1404,"col":4,"offset":32533},"end":{"line":1404,"col":18,"offset":32547},"extra":{"metavars":{"$PTR":{"start":{"line":1404,"col":9,"offset":32538},"end":{"line":1404,"col":16,"offset":32545},"abstract_content":"filearr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"76a281e9c8100458e129e50a2b5efe3401ed8ce8c1e3a0f68ec77388851f43663ffccdb63d3bb457899d92210db9f6fc38ce8324ac184db07dd859d5c8714a64_0","lines":"\t\t\tfree(filearr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1455,"col":2,"offset":33595},"end":{"line":1523,"col":3,"offset":35014},"extra":{"metavars":{"$EXPR1":{"start":{"line":1455,"col":8,"offset":33601},"end":{"line":1455,"col":15,"offset":33608},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1455,"col":18,"offset":33611},"end":{"line":1455,"col":26,"offset":33619},"abstract_content":"UNSIGNED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2445c8c78f3f995bc129bc3806faa53251c2b0f741fb3a57b3d50fa2d6bcb400eb4ac87038230e2282e3447d3ec5222570ea31e6683caf6cf4d96aac61488bc_0","lines":"\tif (!(m->flag & UNSIGNED)) {\n\t\tswitch(m->type) {\n\t\t/*\n\t\t * Do not remove the casts below.  They are\n\t\t * vital.  When later compared with the data,\n\t\t * the sign extension must have happened.\n\t\t */\n\t\tcase FILE_BYTE:\n\t\t\tv = CAST(signed char,  v);\n\t\t\tbreak;\n\t\tcase FILE_SHORT:\n\t\tcase FILE_BESHORT:\n\t\tcase FILE_LESHORT:\n\t\t\tv = CAST(short, v);\n\t\t\tbreak;\n\t\tcase FILE_DATE:\n\t\tcase FILE_BEDATE:\n\t\tcase FILE_LEDATE:\n\t\tcase FILE_MEDATE:\n\t\tcase FILE_LDATE:\n\t\tcase FILE_BELDATE:\n\t\tcase FILE_LELDATE:\n\t\tcase FILE_MELDATE:\n\t\tcase FILE_LONG:\n\t\tcase FILE_BELONG:\n\t\tcase FILE_LELONG:\n\t\tcase FILE_MELONG:\n\t\tcase FILE_FLOAT:\n\t\tcase FILE_BEFLOAT:\n\t\tcase FILE_LEFLOAT:\n\t\t\tv = CAST(int32_t, v);\n\t\t\tbreak;\n\t\tcase FILE_QUAD:\n\t\tcase FILE_BEQUAD:\n\t\tcase FILE_LEQUAD:\n\t\tcase FILE_QDATE:\n\t\tcase FILE_QLDATE:\n\t\tcase FILE_QWDATE:\n\t\tcase FILE_BEQDATE:\n\t\tcase FILE_BEQLDATE:\n\t\tcase FILE_BEQWDATE:\n\t\tcase FILE_LEQDATE:\n\t\tcase FILE_LEQLDATE:\n\t\tcase FILE_LEQWDATE:\n\t\tcase FILE_DOUBLE:\n\t\tcase FILE_BEDOUBLE:\n\t\tcase FILE_LEDOUBLE:\n\t\t\tv = CAST(int64_t, v);\n\t\t\tbreak;\n\t\tcase FILE_STRING:\n\t\tcase FILE_PSTRING:\n\t\tcase FILE_BESTRING16:\n\t\tcase FILE_LESTRING16:\n\t\tcase FILE_REGEX:\n\t\tcase FILE_SEARCH:\n\t\tcase FILE_DEFAULT:\n\t\tcase FILE_INDIRECT:\n\t\tcase FILE_NAME:\n\t\tcase FILE_USE:\n\t\tcase FILE_CLEAR:\n\t\tcase FILE_DER:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t    file_magwarn(ms, \"cannot happen: m->type=%d\\n\",\n\t\t\t\t    m->type);\n\t\t\treturn ~0U;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1518,"col":4,"offset":34891},"end":{"line":1520,"col":18,"offset":34992},"extra":{"metavars":{"$EXPR1":{"start":{"line":1518,"col":8,"offset":34895},"end":{"line":1518,"col":17,"offset":34904},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1518,"col":20,"offset":34907},"end":{"line":1518,"col":31,"offset":34918},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_1","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t    file_magwarn(ms, \"cannot happen: m->type=%d\\n\",\n\t\t\t\t    m->type);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1644,"col":10,"offset":37510},"end":{"line":1644,"col":14,"offset":37514},"extra":{"metavars":{"$VAR":{"start":{"line":1644,"col":10,"offset":37510},"end":{"line":1644,"col":14,"offset":37514},"abstract_content":"cond"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"932ce869fda575db98915b43f9180ed3f80c7215cbdcd43d14e3756f3a0afa5b4636cea788989757881259281dd834a6d72e7502b97f31870718d6c26b870f5d_0","lines":"\tswitch (cond) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1647,"col":4,"offset":37594},"end":{"line":1648,"col":44,"offset":37666},"extra":{"metavars":{"$EXPR1":{"start":{"line":1647,"col":8,"offset":37598},"end":{"line":1647,"col":17,"offset":37607},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1647,"col":20,"offset":37610},"end":{"line":1647,"col":31,"offset":37621},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_2","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `if'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1656,"col":4,"offset":37794},"end":{"line":1657,"col":46,"offset":37868},"extra":{"metavars":{"$EXPR1":{"start":{"line":1656,"col":8,"offset":37798},"end":{"line":1656,"col":17,"offset":37807},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1656,"col":20,"offset":37810},"end":{"line":1656,"col":31,"offset":37821},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_3","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `elif'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1665,"col":4,"offset":37998},"end":{"line":1666,"col":46,"offset":38072},"extra":{"metavars":{"$EXPR1":{"start":{"line":1665,"col":8,"offset":38002},"end":{"line":1665,"col":17,"offset":38011},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1665,"col":20,"offset":38014},"end":{"line":1665,"col":31,"offset":38025},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_4","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `else'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1693,"col":4,"offset":38544},"end":{"line":1695,"col":21,"offset":38640},"extra":{"metavars":{"$EXPR1":{"start":{"line":1693,"col":8,"offset":38548},"end":{"line":1693,"col":17,"offset":38557},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1693,"col":20,"offset":38560},"end":{"line":1693,"col":31,"offset":38571},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_5","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"indirect modifier `%c' \"\n\t\t\t\t\t\"invalid\", *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1733,"col":4,"offset":39317},"end":{"line":1734,"col":41,"offset":39402},"extra":{"metavars":{"$EXPR1":{"start":{"line":1733,"col":23,"offset":39336},"end":{"line":1733,"col":32,"offset":39345},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1733,"col":35,"offset":39348},"end":{"line":1733,"col":46,"offset":39359},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_6","lines":"\t\t\tif (have_range && (ms->flags & MAGIC_CHECK))\n\t\t\t\tfile_magwarn(ms, \"multiple ranges\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1803,"col":4,"offset":41058},"end":{"line":1805,"col":21,"offset":41152},"extra":{"metavars":{"$EXPR1":{"start":{"line":1803,"col":8,"offset":41062},"end":{"line":1803,"col":17,"offset":41071},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1803,"col":20,"offset":41074},"end":{"line":1803,"col":31,"offset":41085},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_7","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"string modifier `%c' \"\n\t\t\t\t\t\"invalid\", *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":35,"offset":42678},"end":{"line":1873,"col":26,"offset":42719},"extra":{"metavars":{"$FUN":{"start":{"line":1872,"col":35,"offset":42678},"end":{"line":1872,"col":42,"offset":42685},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1872,"col":43,"offset":42686},"end":{"line":1872,"col":49,"offset":42692},"abstract_content":"me->->mp"},"$X":{"start":{"line":1873,"col":8,"offset":42701},"end":{"line":1873,"col":18,"offset":42711},"abstract_content":"sizeof*nm"},"$Y":{"start":{"line":1873,"col":22,"offset":42715},"end":{"line":1873,"col":25,"offset":42718},"abstract_content":"cnt"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"05d3a90ffdc550aee796f95c7df33274e3654d3b4476e48e4bfe5b1a8f2ded2a5a5c48018f57532072356e2e5f596df306112fcf68ee42adce65035f24b05b29_0","lines":"\t\t\tif ((nm = CAST(struct magic *, realloc(me->mp,\n\t\t\t    sizeof(*nm) * cnt))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":35,"offset":42678},"end":{"line":1873,"col":26,"offset":42719},"extra":{"metavars":{"$FUN":{"start":{"line":1872,"col":35,"offset":42678},"end":{"line":1872,"col":42,"offset":42685},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2ec632409f7ce6b63d8d4231817a4b5e8852ead993d2c71e87a7d2621b5f328a1a3514b9d9ba0ee27cdfcaa6fe2e2b17a9734c7d2c1ee2686b4b0a8b6de671f8_2","lines":"\t\t\tif ((nm = CAST(struct magic *, realloc(me->mp,\n\t\t\t    sizeof(*nm) * cnt))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":33,"offset":43080},"end":{"line":1887,"col":44,"offset":43091},"extra":{"metavars":{"$X":{"start":{"line":1884,"col":29,"offset":42987},"end":{"line":1884,"col":38,"offset":42996},"abstract_content":"sizeof*m"},"$Y":{"start":{"line":1884,"col":42,"offset":43000},"end":{"line":1884,"col":53,"offset":43011},"abstract_content":"ALLOC_CHUNK"},"$FUN":{"start":{"line":1887,"col":33,"offset":43080},"end":{"line":1887,"col":39,"offset":43086},"abstract_content":"malloc"},"$N":{"start":{"line":1887,"col":40,"offset":43087},"end":{"line":1887,"col":43,"offset":43090},"abstract_content":"len"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a4446b7fa4cce1d26f89d9ffed058563d7e4d4d653fe41a5c0116a9a0f8ca78f904cf934c4c73de0f41ca46408771b0c1b16d872e3f5a8ab7442d3ac5246ba88_0","lines":"\t\tif ((m = CAST(struct magic *, malloc(len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":33,"offset":43080},"end":{"line":1887,"col":44,"offset":43091},"extra":{"metavars":{"$FUN":{"start":{"line":1887,"col":33,"offset":43080},"end":{"line":1887,"col":39,"offset":43086},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210edc5be4fb00df75ce79f66123fd42d00be6ed5f68d9490ecd3e46004771467feb1b6f14987a59f1e459fbde028a80252af45ccee9405d9c27c4f5022d85fa_3","lines":"\t\tif ((m = CAST(struct magic *, malloc(len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1907,"col":3,"offset":43564},"end":{"line":1908,"col":48,"offset":43633},"extra":{"metavars":{"$EXPR1":{"start":{"line":1907,"col":7,"offset":43568},"end":{"line":1907,"col":14,"offset":43575},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1907,"col":17,"offset":43578},"end":{"line":1907,"col":23,"offset":43584},"abstract_content":"OFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a9b9a6b475604d4d8f6fc737e8db582da5eeef3eda3cd8113b720a9647206420d02a23d42615a1b16365463a0e8b188f47a931ed2edf84a21e4e4be59f01c812_0","lines":"\t\tif (m->flag & OFFADD)\n\t\t\tm->flag = (m->flag & ~OFFADD) | INDIROFFADD;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1916,"col":2,"offset":43809},"end":{"line":1920,"col":3,"offset":43970},"extra":{"metavars":{"$EXPR1":{"start":{"line":1916,"col":29,"offset":43836},"end":{"line":1916,"col":36,"offset":43843},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1916,"col":40,"offset":43847},"end":{"line":1916,"col":60,"offset":43867},"abstract_content":"OFFADD|INDIROFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e6ee93383618a7fa7ae7969d9bdf8c54be27c90170e240a839146342aa05dca65c507d02954063e1313f6ff72cafc3c1064153183795bf8c7d1eb7deb03e022b_0","lines":"\tif (m->cont_level == 0 && (m->flag & (OFFADD | INDIROFFADD))) {\n\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"relative offset at level 0\");\n\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1917,"col":3,"offset":43875},"end":{"line":1918,"col":51,"offset":43954},"extra":{"metavars":{"$EXPR1":{"start":{"line":1917,"col":7,"offset":43879},"end":{"line":1917,"col":16,"offset":43888},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1917,"col":19,"offset":43891},"end":{"line":1917,"col":30,"offset":43902},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_8","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"relative offset at level 0\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1925,"col":3,"offset":44079},"end":{"line":1926,"col":47,"offset":44154},"extra":{"metavars":{"$EXPR1":{"start":{"line":1925,"col":7,"offset":44083},"end":{"line":1925,"col":16,"offset":44092},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1925,"col":19,"offset":44095},"end":{"line":1925,"col":30,"offset":44106},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_9","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"offset `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1932,"col":2,"offset":44189},"end":{"line":2028,"col":3,"offset":45978},"extra":{"metavars":{"$EXPR1":{"start":{"line":1932,"col":6,"offset":44193},"end":{"line":1932,"col":13,"offset":44200},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1932,"col":16,"offset":44203},"end":{"line":1932,"col":21,"offset":44208},"abstract_content":"INDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c70b035c27e1f5a4c304d0c185c92a7b3e7a46e0bd67bd4b94019820b5c520e8210a00a5030e0e8fc8a2506cb74e57a8b32efd3aa34d4c124964205e2698e2c3_0","lines":"\tif (m->flag & INDIR) {\n\t\tm->in_type = FILE_LONG;\n\t\tm->in_offset = 0;\n\t\tm->in_op = 0;\n\t\t/*\n\t\t * read [.,lbs][+-]nnnnn)\n\t\t */\n\t\tif (*l == '.' || *l == ',') {\n\t\t\tif (*l == ',')\n\t\t\t\tm->in_op |= FILE_OPSIGNED;\n\t\t\tl++;\n\t\t\tswitch (*l) {\n\t\t\tcase 'l':\n\t\t\t\tm->in_type = FILE_LELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tm->in_type = FILE_BELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\tm->in_type = FILE_MELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 's':\n\t\t\t\tm->in_type = FILE_LESHORT;\n\t\t\t\tbreak;\n\t\t\tcase 'H':\n\t\t\tcase 'S':\n\t\t\t\tm->in_type = FILE_BESHORT;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\tcase 'b':\n\t\t\tcase 'C':\n\t\t\tcase 'B':\n\t\t\t\tm->in_type = FILE_BYTE;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\t\tm->in_type = FILE_LEDOUBLE;\n\t\t\t\tbreak;\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\tm->in_type = FILE_BEDOUBLE;\n\t\t\t\tbreak;\n\t\t\tcase 'i':\n\t\t\t\tm->in_type = FILE_LEID3;\n\t\t\t\tbreak;\n\t\t\tcase 'I':\n\t\t\t\tm->in_type = FILE_BEID3;\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tm->in_type = FILE_LEQUAD;\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tm->in_type = FILE_BEQUAD;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"indirect offset type `%c' invalid\",\n\t\t\t\t\t    *l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\n\t\tif (*l == '~') {\n\t\t\tm->in_op |= FILE_OPINVERSE;\n\t\t\tl++;\n\t\t}\n\t\tif ((op = get_op(*l)) != -1) {\n\t\t\tm->in_op |= op;\n\t\t\tl++;\n\t\t}\n\t\tif (*l == '(') {\n\t\t\tm->in_op |= FILE_OPINDIRECT;\n\t\t\tl++;\n\t\t}\n\t\tif (isdigit(CAST(unsigned char, *l)) || *l == '-') {\n\t\t\tm->in_offset = CAST(int32_t, strtol(l, &t, 0));\n\t\t\tif (l == t) {\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl = t;\n\t\t}\n\t\tif (*l++ != ')' ||\n\t\t    ((m->in_op & FILE_OPINDIRECT) && *l++ != ')')) {\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");\n\t\t\treturn -1;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1990,"col":5,"offset":45202},"end":{"line":1993,"col":14,"offset":45312},"extra":{"metavars":{"$EXPR1":{"start":{"line":1990,"col":9,"offset":45206},"end":{"line":1990,"col":18,"offset":45215},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1990,"col":21,"offset":45218},"end":{"line":1990,"col":32,"offset":45229},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_10","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"indirect offset type `%c' invalid\",\n\t\t\t\t\t    *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2011,"col":3,"offset":45537},"end":{"line":2020,"col":4,"offset":45785},"extra":{"metavars":{"$EXPR1":{"start":{"line":2011,"col":44,"offset":45578},"end":{"line":2011,"col":45,"offset":45579},"abstract_content":"l","propagated_value":{"svalue_start":{"line":2011,"col":49,"offset":45583},"svalue_end":{"line":2011,"col":52,"offset":45586},"svalue_abstract_content":"'-'"}},"$EXPR2":{"start":{"line":2011,"col":49,"offset":45583},"end":{"line":2011,"col":52,"offset":45586},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8ecbfb1769718bca01b6210b5b437d4c4bdb5b6f8d5c88ca113ba65b7b800202ab7978c1d0aa5dc6658eaa1bc969833a04e8e78f4c4a297d0040965b520adbd8_0","lines":"\t\tif (isdigit(CAST(unsigned char, *l)) || *l == '-') {\n\t\t\tm->in_offset = CAST(int32_t, strtol(l, &t, 0));\n\t\t\tif (l == t) {\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl = t;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2014,"col":5,"offset":45662},"end":{"line":2016,"col":39,"offset":45751},"extra":{"metavars":{"$EXPR1":{"start":{"line":2014,"col":9,"offset":45666},"end":{"line":2014,"col":18,"offset":45675},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2014,"col":21,"offset":45678},"end":{"line":2014,"col":32,"offset":45689},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_11","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2021,"col":3,"offset":45788},"end":{"line":2027,"col":4,"offset":45975},"extra":{"metavars":{"$EXPR1":{"start":{"line":2022,"col":9,"offset":45815},"end":{"line":2022,"col":17,"offset":45823},"abstract_content":"m->->in_op"},"$EXPR2":{"start":{"line":2022,"col":20,"offset":45826},"end":{"line":2022,"col":35,"offset":45841},"abstract_content":"FILE_OPINDIRECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2a4735477ae41f59a46d9add6e4a848fd4516ee4dd2783888111d4f0ddb5f3df03b392fdb117854f819a4289cb9091180368c3b8aabb91212c2cdfd5589d0d39_0","lines":"\t\tif (*l++ != ')' ||\n\t\t    ((m->in_op & FILE_OPINDIRECT) && *l++ != ')')) {\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");\n\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2023,"col":4,"offset":45865},"end":{"line":2025,"col":43,"offset":45957},"extra":{"metavars":{"$EXPR1":{"start":{"line":2023,"col":8,"offset":45869},"end":{"line":2023,"col":17,"offset":45878},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2023,"col":20,"offset":45881},"end":{"line":2023,"col":31,"offset":45892},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_12","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2089,"col":3,"offset":47405},"end":{"line":2090,"col":45,"offset":47478},"extra":{"metavars":{"$EXPR1":{"start":{"line":2089,"col":7,"offset":47409},"end":{"line":2089,"col":16,"offset":47418},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2089,"col":19,"offset":47421},"end":{"line":2089,"col":30,"offset":47432},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_13","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"type `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2101,"col":8,"offset":47729},"end":{"line":2102,"col":53,"offset":47810},"extra":{"metavars":{"$EXPR1":{"start":{"line":2101,"col":12,"offset":47733},"end":{"line":2101,"col":21,"offset":47742},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2101,"col":24,"offset":47745},"end":{"line":2101,"col":35,"offset":47756},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_14","lines":"\t\telse if (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"'~' invalid for string types\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2112,"col":5,"offset":48005},"end":{"line":2115,"col":22,"offset":48117},"extra":{"metavars":{"$EXPR1":{"start":{"line":2112,"col":9,"offset":48009},"end":{"line":2112,"col":18,"offset":48018},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2112,"col":21,"offset":48021},"end":{"line":2112,"col":32,"offset":48032},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_15","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"invalid string/indirect op: \"\n\t\t\t\t\t    \"`%c'\", *t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2141,"col":4,"offset":48575},"end":{"line":2145,"col":5,"offset":48685},"extra":{"metavars":{"$EXPR1":{"start":{"line":2141,"col":8,"offset":48579},"end":{"line":2141,"col":17,"offset":48588},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2141,"col":20,"offset":48591},"end":{"line":2141,"col":31,"offset":48602},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_16","lines":"\t\t\tif (ms->flags & MAGIC_CHECK) {\n\t\t\t\tfile_magwarn(ms, \"%c= not supported\",\n\t\t\t\t    m->reln);\n\t\t\t\treturn -1;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2197,"col":7,"offset":49630},"end":{"line":2197,"col":12,"offset":49635},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2197,"col":7,"offset":49630},"end":{"line":2197,"col":8,"offset":49631},"abstract_content":"i"},"$SIGNED":{"start":{"line":2197,"col":11,"offset":49634},"end":{"line":2197,"col":12,"offset":49635},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_12","lines":"\tfor (i = 0; (m->desc[i++] = *l++) != '\\0' && i < sizeof(m->desc); )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2201,"col":3,"offset":49775},"end":{"line":2202,"col":60,"offset":49863},"extra":{"metavars":{"$EXPR1":{"start":{"line":2201,"col":7,"offset":49779},"end":{"line":2201,"col":16,"offset":49788},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2201,"col":19,"offset":49791},"end":{"line":2201,"col":30,"offset":49802},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_17","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"description `%s' truncated\", m->desc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2209,"col":9,"offset":49994},"end":{"line":2212,"col":3,"offset":50074},"extra":{"metavars":{"$EXPR1":{"start":{"line":2209,"col":13,"offset":49998},"end":{"line":2209,"col":22,"offset":50007},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2209,"col":25,"offset":50010},"end":{"line":2209,"col":36,"offset":50021},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_18","lines":"        if (ms->flags & MAGIC_CHECK) {\n\t\tif (check_format(ms, m) == -1)\n\t\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2293,"col":2,"offset":51936},"end":{"line":2293,"col":74,"offset":52008},"extra":{"metavars":{"$EXPR1":{"start":{"line":2293,"col":28,"offset":51962},"end":{"line":2293,"col":42,"offset":51976},"abstract_content":"me->->cont_count"},"$EXPR2":{"start":{"line":2293,"col":46,"offset":51980},"end":{"line":2293,"col":47,"offset":51981},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"280e8b49abbc59907792f9a402243957278a7c421dcd105a248422a6416fe3060ecbec3825b58b38ed791e1b7070b1c2cf29635b9764928eeb72332377edef18_0","lines":"\tstruct magic *m = &me->mp[me->cont_count == 0 ? 0 : me->cont_count - 1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2297,"col":3,"offset":52085},"end":{"line":2297,"col":31,"offset":52113},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2297,"col":3,"offset":52085},"end":{"line":2297,"col":6,"offset":52088},"abstract_content":"len"},"$SIGNED":{"start":{"line":2297,"col":9,"offset":52091},"end":{"line":2297,"col":11,"offset":52093},"abstract_content":"nt"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2df130357e3d2291c6451cd4c7957c51658a984d910fa745160fafab87703bb30044af7e45ef6a438b707b81357d6bae1ece6dbee4fff5120b61dd473606b3d3_0","lines":"\t\tlen = nt ? strlen(buf) : len;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2310,"col":7,"offset":52413},"end":{"line":2310,"col":12,"offset":52418},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2310,"col":7,"offset":52413},"end":{"line":2310,"col":8,"offset":52414},"abstract_content":"i"},"$SIGNED":{"start":{"line":2310,"col":11,"offset":52417},"end":{"line":2310,"col":12,"offset":52418},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e3747cada583b1d705117cce616f2aa0bfe09860dd18a2a56a784682565839d91f40abca7004335b3056c9e6b055d497e8b6bf2530aec6788f43737bc3ede307_13","lines":"\tfor (i = 0; *l && i < len && goodchar(*l, extra); buf[i++] = *l++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2316,"col":3,"offset":52547},"end":{"line":2318,"col":42,"offset":52664},"extra":{"metavars":{"$EXPR1":{"start":{"line":2316,"col":7,"offset":52551},"end":{"line":2316,"col":16,"offset":52560},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2316,"col":19,"offset":52563},"end":{"line":2316,"col":30,"offset":52574},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_19","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"%s type `%s' truncated %\"\n\t\t\t    SIZE_T_FORMAT \"u\", name, line, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2386,"col":10,"offset":54187},"end":{"line":2386,"col":28,"offset":54205},"extra":{"metavars":{"$VAR":{"start":{"line":2386,"col":10,"offset":54187},"end":{"line":2386,"col":28,"offset":54205},"abstract_content":"file_formats[type]"},"$VAL1":{"start":{"line":2387,"col":7,"offset":54215},"end":{"line":2387,"col":20,"offset":54228},"abstract_content":"FILE_FMT_QUAD"},"$VAL2":{"start":{"line":2390,"col":7,"offset":54266},"end":{"line":2390,"col":19,"offset":54278},"abstract_content":"FILE_FMT_NUM"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"193874da86f6dca07ca2e8ccd9ab254b362c65c4f87a30161c786d181dd8d156e08f46c888b0c5b66422fc2a541ca339f671d29ac8a534b7ea2e2a3cb333e470_0","lines":"\tswitch (file_formats[type]) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2386,"col":10,"offset":54187},"end":{"line":2386,"col":28,"offset":54205},"extra":{"metavars":{"$VAR":{"start":{"line":2386,"col":10,"offset":54187},"end":{"line":2386,"col":28,"offset":54205},"abstract_content":"file_formats[type]"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fb24e0de3eb298505a27c81933dceaefa028b27a8d7c512580a04c2cde52adce5b070a1e7bb2b1373ac99ca3d6c0d46a75bf82063a70084142941c3dc7881f7e_0","lines":"\tswitch (file_formats[type]) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2439,"col":11,"offset":55122},"end":{"line":2439,"col":17,"offset":55128},"extra":{"metavars":{"$VAR":{"start":{"line":2439,"col":11,"offset":55122},"end":{"line":2439,"col":17,"offset":55128},"abstract_content":"*ptr++"},"$VAL1":{"start":{"line":2442,"col":8,"offset":55246},"end":{"line":2442,"col":11,"offset":55249},"abstract_content":"'l'"},"$VAL2":{"start":{"line":2461,"col":8,"offset":55572},"end":{"line":2461,"col":11,"offset":55575},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2e877408eaa28d2bc50768cf97633c92ef4686e9e479e3cef03035d3df687d0511f741ecf42c0c01f5c775ff7430d02112be061da0200d2bfe4c42f81fb61a9c_0","lines":"\t\tswitch (*ptr++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2642,"col":3,"offset":58745},"end":{"line":2642,"col":50,"offset":58792},"extra":{"metavars":{"$EXPR1":{"start":{"line":2642,"col":26,"offset":58768},"end":{"line":2642,"col":32,"offset":58774},"abstract_content":"action"},"$EXPR2":{"start":{"line":2642,"col":36,"offset":58778},"end":{"line":2642,"col":48,"offset":58790},"abstract_content":"FILE_COMPILE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65cfa6a453e9b9757518afcc8c74aa78f8d176befda36c68b3d71f41701da7306b3b4829984b68751760179ab185301dd646291f5b6e9ec402ec589dab30b156_0","lines":"\t\t*p = getstr(ms, m, *p, action == FILE_COMPILE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2644,"col":4,"offset":58816},"end":{"line":2646,"col":21,"offset":58917},"extra":{"metavars":{"$EXPR1":{"start":{"line":2644,"col":8,"offset":58820},"end":{"line":2644,"col":17,"offset":58829},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2644,"col":20,"offset":58832},"end":{"line":2644,"col":31,"offset":58843},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_20","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"cannot get string from `%s'\",\n\t\t\t\t    m->value.s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2653,"col":5,"offset":59061},"end":{"line":2654,"col":33,"offset":59122},"extra":{"metavars":{"$EXPR1":{"start":{"line":2653,"col":9,"offset":59065},"end":{"line":2653,"col":18,"offset":59074},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2653,"col":21,"offset":59077},"end":{"line":2653,"col":32,"offset":59088},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"08ac45e765ec2cc10ac5ca2a14830a99306eff345a90cb33060b3fc2f2c3bd0c4c3a0107ad5d944bcb1e88ee1a81acb3e3dc2c0da566199653ee02e6875efdb4_21","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_regerror(&rx, rc, ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2676,"col":7,"offset":59447},"end":{"line":2676,"col":17,"offset":59457},"extra":{"metavars":{"$EXPR":{"start":{"line":2676,"col":7,"offset":59447},"end":{"line":2676,"col":12,"offset":59452},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":2670,"col":11,"offset":59335},"svalue_end":{"line":2670,"col":12,"offset":59336},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"17b0957ec8528f238053249e0f01427498a26815ab754f0bfecd80de07226b1ace91cc492be35471938e0688f8a1aee777361a137fbbaade6d030d4a93cba3c9_0","lines":"\t\tif (errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2684,"col":7,"offset":59595},"end":{"line":2684,"col":17,"offset":59605},"extra":{"metavars":{"$EXPR":{"start":{"line":2684,"col":7,"offset":59595},"end":{"line":2684,"col":12,"offset":59600},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":2682,"col":11,"offset":59554},"svalue_end":{"line":2682,"col":12,"offset":59555},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"17b0957ec8528f238053249e0f01427498a26815ab754f0bfecd80de07226b1ace91cc492be35471938e0688f8a1aee777361a137fbbaade6d030d4a93cba3c9_1","lines":"\t\tif (errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2694,"col":11,"offset":59835},"end":{"line":2694,"col":33,"offset":59857},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2694,"col":11,"offset":59835},"end":{"line":2694,"col":13,"offset":59837},"abstract_content":"ts"},"$SIGNED":{"start":{"line":2694,"col":25,"offset":59849},"end":{"line":2694,"col":32,"offset":59856},"abstract_content":"m->->type"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dcfdddcc19ff855b01d661fe50e92f6aafefdbbf1f277a465dda4cc928107038bf30afbe57a8fa016e74b813003d8f8d6cb333b5affd9304200a92f3475990ae_0","lines":"\t\t\tsize_t ts = typesize(m->type);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-sizeof","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2748,"col":17,"offset":61024},"end":{"line":2748,"col":34,"offset":61041},"extra":{"metavars":{"$PTR":{"start":{"line":2748,"col":24,"offset":61031},"end":{"line":2748,"col":34,"offset":61041},"abstract_content":"m->->value.s"}},"message":"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/467","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c551967cea11772c11a2e47eb9fd4f5179f568b9f2ae97fc091ff201de97926f3b597f27f6ceaa8df8f64d5568fe6e077662561ab7bdde323c1dc8ec224dcc09_0","lines":"\tsize_t  plen = sizeof(m->value.s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2762,"col":11,"offset":61311},"end":{"line":2762,"col":19,"offset":61319},"extra":{"metavars":{"$VAR":{"start":{"line":2762,"col":11,"offset":61311},"end":{"line":2762,"col":19,"offset":61319},"abstract_content":"c=*s++"},"$VAL2":{"start":{"line":2764,"col":9,"offset":61332},"end":{"line":2764,"col":13,"offset":61336},"abstract_content":"'\\0'"},"$VAL1":{"start":{"line":2770,"col":9,"offset":61428},"end":{"line":2770,"col":13,"offset":61432},"abstract_content":"'\\t'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3d02eb933a29647e4535e15c950ac20807eca7a9c5d607a4512e28294956570971dcdc3e8850d3babab1104bcc216aa2be52c60a68d3c7c2668be924bb4d17d7_0","lines":"\t\t\tswitch(c = *s++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2779,"col":6,"offset":61612},"end":{"line":2793,"col":24,"offset":62027},"extra":{"metavars":{"$EXPR1":{"start":{"line":2779,"col":18,"offset":61624},"end":{"line":2779,"col":22,"offset":61628},"abstract_content":"CAST"},"$EXPR2":{"start":{"line":2779,"col":43,"offset":61649},"end":{"line":2790,"col":7,"offset":61935},"abstract_content":"{{file_magwarn(ms\"no \"\"need to escape \"\"`%c'\"c)}}"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"239fbccc0a94b9a24693a063f784bca910b87538c7562f14f9b9e0defbd5945ded81b04aad018cf53df35f1a8dc3eceb7ed83efad55d0944b7a68f918e51ce7a_0","lines":"\t\t\t\t\tif (isprint(CAST(unsigned char, c))) {\n\t\t\t\t\t\t/* Allow escaping of\n\t\t\t\t\t\t * ``relations'' */\n\t\t\t\t\t\tif (strchr(\"<>&^=!\", c) == NULL\n\t\t\t\t\t\t    && (m->type != FILE_REGEX ||\n\t\t\t\t\t\t    strchr(\"[]().*?^$|{}\", c)\n\t\t\t\t\t\t    == NULL)) {\n\t\t\t\t\t\t\tfile_magwarn(ms, \"no \"\n\t\t\t\t\t\t\t    \"need to escape \"\n\t\t\t\t\t\t\t    \"`%c'\", c);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t\t    \"unknown escape sequence: \"\n\t\t\t\t\t\t    \"\\\\%03o\", c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":38,"offset":65487},"end":{"line":3011,"col":61,"offset":65510},"extra":{"metavars":{"$FUN":{"start":{"line":3011,"col":38,"offset":65487},"end":{"line":3011,"col":44,"offset":65493},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"777b6cd95da6baa79f071a182aa65e124de7c8af0a2e19ff598c61639dd598c4d622b0e0126ff5877857561ec2713cb4b31486463620d9badd7d22b91c7eda39_3","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":38,"offset":65487},"end":{"line":3011,"col":61,"offset":65510},"extra":{"metavars":{"$CNT":{"start":{"line":3011,"col":45,"offset":65494},"end":{"line":3011,"col":46,"offset":65495},"abstract_content":"1"},"$LEN":{"start":{"line":3011,"col":48,"offset":65497},"end":{"line":3011,"col":59,"offset":65508},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1e89c82a9121400eb419743b8281a18a471ea290e058fc9d0ecb7ff9399d442d9dbb76cb56b7420d46d9cdc5979412070378c85eac65fc9a8cfb217bc7d128f3_1","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":38,"offset":66005},"end":{"line":3039,"col":61,"offset":66028},"extra":{"metavars":{"$FUN":{"start":{"line":3039,"col":38,"offset":66005},"end":{"line":3039,"col":44,"offset":66011},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"777b6cd95da6baa79f071a182aa65e124de7c8af0a2e19ff598c61639dd598c4d622b0e0126ff5877857561ec2713cb4b31486463620d9badd7d22b91c7eda39_4","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":38,"offset":66005},"end":{"line":3039,"col":61,"offset":66028},"extra":{"metavars":{"$CNT":{"start":{"line":3039,"col":45,"offset":66012},"end":{"line":3039,"col":46,"offset":66013},"abstract_content":"1"},"$LEN":{"start":{"line":3039,"col":48,"offset":66015},"end":{"line":3039,"col":59,"offset":66026},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1e89c82a9121400eb419743b8281a18a471ea290e058fc9d0ecb7ff9399d442d9dbb76cb56b7420d46d9cdc5979412070378c85eac65fc9a8cfb217bc7d128f3_2","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3049,"col":2,"offset":66206},"end":{"line":3050,"col":14,"offset":66269},"extra":{"metavars":{"$EXPR1":{"start":{"line":3049,"col":25,"offset":66229},"end":{"line":3049,"col":33,"offset":66237},"abstract_content":"O_RDONLY"},"$EXPR2":{"start":{"line":3049,"col":34,"offset":66238},"end":{"line":3049,"col":42,"offset":66246},"abstract_content":"O_BINARY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f38cf2d9f34f637cc36bf6b909c8a9164f6c1e6e880ee9bd3e3823ac46236f6a0d968ce6d79b6a96f8fc8cdf0c20ad2bb361760c5226bc60911113e6769fe321_0","lines":"\tif ((fd = open(dbname, O_RDONLY|O_BINARY)) == -1)\n\t\tgoto error;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3049,"col":12,"offset":66216},"end":{"line":3049,"col":43,"offset":66247},"extra":{"metavars":{"$FUN":{"start":{"line":3049,"col":12,"offset":66216},"end":{"line":3049,"col":16,"offset":66220},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"384c888dd6618a06f8ad94e19b3cd357fd896fdb50e7672a845e60c6beed6fc5063591f133c3879f0fa06b00e5dd0b42a92449cef6d3d42fbd7bd48f855503f6_0","lines":"\tif ((fd = open(dbname, O_RDONLY|O_BINARY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3052,"col":6,"offset":66276},"end":{"line":3052,"col":20,"offset":66290},"extra":{"metavars":{"$FUN":{"start":{"line":3052,"col":6,"offset":66276},"end":{"line":3052,"col":11,"offset":66281},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6c5dcf1d67fd29713e16335a2098a94b67d8f695eb98bce094432c535c064fc93b98eb7dc74f07ac3fcbace1a2b1c36869a7a7a258d137eb2c66c08139079a11_0","lines":"\tif (fstat(fd, &st) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3065,"col":2,"offset":66612},"end":{"line":3069,"col":3,"offset":66815},"extra":{"metavars":{"$EXPR1":{"start":{"line":3065,"col":50,"offset":66660},"end":{"line":3065,"col":59,"offset":66669},"abstract_content":"PROT_READ"},"$EXPR2":{"start":{"line":3065,"col":60,"offset":66670},"end":{"line":3065,"col":70,"offset":66680},"abstract_content":"PROT_WRITE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e5487cef58a92a39684f9b7b2ec4ab1f37d82d9b5c2425457d15c9687edb775fff4740647d2c3c634979e1da0460da7b9fbcfbb7c3bf4e11921af853ea33cc2d_0","lines":"\tif ((map->p = mmap(0, CAST(size_t, st.st_size), PROT_READ|PROT_WRITE,\n\t    MAP_PRIVATE|MAP_FILE, fd, CAST(off_t, 0))) == MAP_FAILED) {\n\t\tfile_error(ms, errno, \"cannot map `%s'\", dbname);\n\t\tgoto error;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3072,"col":29,"offset":66880},"end":{"line":3072,"col":45,"offset":66896},"extra":{"metavars":{"$FUN":{"start":{"line":3072,"col":29,"offset":66880},"end":{"line":3072,"col":35,"offset":66886},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"210edc5be4fb00df75ce79f66123fd42d00be6ed5f68d9490ecd3e46004771467feb1b6f14987a59f1e459fbde028a80252af45ccee9405d9c27c4f5022d85fa_4","lines":"\tif ((map->p = CAST(void *, malloc(map->len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3076,"col":6,"offset":66960},"end":{"line":3076,"col":32,"offset":66986},"extra":{"metavars":{"$FUN":{"start":{"line":3076,"col":6,"offset":66960},"end":{"line":3076,"col":10,"offset":66964},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7a25eeed50363e5ed5116b0d3dff186660a444027b7e672f04650edc758a81d4d70d78d0a13bfd36de2739367cad6c765a3037370d4e31ecb0052feefe86b575_0","lines":"\tif (read(fd, map->p, map->len) != (ssize_t)map->len) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3077,"col":3,"offset":67013},"end":{"line":3077,"col":19,"offset":67029},"extra":{"metavars":{"$FUN":{"start":{"line":3077,"col":3,"offset":67013},"end":{"line":3077,"col":15,"offset":67025},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c5df4a00afdaa9966f0ff45098f5462b595884cce5a0293c552295ad30740b5c8a273d8229a3ded2a5e47d04942154378589449931eefca18fbb302a4d1c84f5_0","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3096,"col":2,"offset":67360},"end":{"line":3096,"col":15,"offset":67373},"extra":{"metavars":{"$PTR":{"start":{"line":3096,"col":7,"offset":67365},"end":{"line":3096,"col":13,"offset":67371},"abstract_content":"dbname","propagated_value":{"svalue_start":{"line":3045,"col":11,"offset":66148},"svalue_end":{"line":3045,"col":30,"offset":66167},"svalue_abstract_content":"mkdbname(ms fn 0)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4eb81dee9339d7537aae9cf105b92bf4f9ebf837b89d1f1909e07ae35b51027cccd4dbb114b4498dc32e6f8b4d7bf1d783f583481e8becef6344e8ebb3b46cae_0","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3103,"col":2,"offset":67454},"end":{"line":3103,"col":6,"offset":67458},"extra":{"metavars":{"$PTR":{"start":{"line":3096,"col":7,"offset":67365},"end":{"line":3096,"col":13,"offset":67371},"abstract_content":"dbname","propagated_value":{"svalue_start":{"line":3045,"col":11,"offset":66148},"svalue_end":{"line":3045,"col":30,"offset":66167},"svalue_abstract_content":"mkdbname(ms fn 0)"}},"$FREE":{"start":{"line":3103,"col":2,"offset":67454},"end":{"line":3103,"col":6,"offset":67458},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7281cdfee4aa9637ab1849be757fe66e264b2211dcfa78d2c946e851708f3eb4cdac675850d242636355c4ab6997b9aa3bfe3e39110460558913b1293b0a31b6_0","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3103,"col":2,"offset":67454},"end":{"line":3103,"col":15,"offset":67467},"extra":{"metavars":{"$PTR":{"start":{"line":3103,"col":7,"offset":67459},"end":{"line":3103,"col":13,"offset":67465},"abstract_content":"dbname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4eb81dee9339d7537aae9cf105b92bf4f9ebf837b89d1f1909e07ae35b51027cccd4dbb114b4498dc32e6f8b4d7bf1d783f583481e8becef6344e8ebb3b46cae_1","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3186,"col":2,"offset":69425},"end":{"line":3190,"col":3,"offset":69567},"extra":{"metavars":{"$EXPR1":{"start":{"line":3186,"col":25,"offset":69448},"end":{"line":3186,"col":33,"offset":69456},"abstract_content":"O_WRONLY"},"$EXPR2":{"start":{"line":3186,"col":34,"offset":69457},"end":{"line":3186,"col":41,"offset":69464},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9a35bb116b9fd1454b9dbce491869981bbdcf119ada08b879d14fc4a430c9a508e68b68456877dd963b67791f758aeb207dcba04215e2e916f627a946e945dff_0","lines":"\tif ((fd = open(dbname, O_WRONLY|O_CREAT|O_TRUNC|O_BINARY, 0644)) == -1)\n\t{\n\t\tfile_error(ms, errno, \"cannot open `%s'\", dbname);\n\t\tgoto out;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3186,"col":12,"offset":69435},"end":{"line":3186,"col":65,"offset":69488},"extra":{"metavars":{"$FUN":{"start":{"line":3186,"col":12,"offset":69435},"end":{"line":3186,"col":16,"offset":69439},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"384c888dd6618a06f8ad94e19b3cd357fd896fdb50e7672a845e60c6beed6fc5063591f133c3879f0fa06b00e5dd0b42a92449cef6d3d42fbd7bd48f855503f6_1","lines":"\tif ((fd = open(dbname, O_WRONLY|O_CREAT|O_TRUNC|O_BINARY, 0644)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3194,"col":2,"offset":69644},"end":{"line":3194,"col":36,"offset":69678},"extra":{"metavars":{"$FUN":{"start":{"line":3194,"col":2,"offset":69644},"end":{"line":3194,"col":8,"offset":69650},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4e6c5ab211fc096afd91681dd0aa6257f8deb6e7eaa4c385bf114f0bf9f0de3020dd2f53578b535bfdd1c44e9e65c938d041a85900d3f2d64ea7df83aa8e907a_1","lines":"\tmemcpy(hdr.h + 2, map->nmagic, nm);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3215,"col":2,"offset":70102},"end":{"line":3215,"col":15,"offset":70115},"extra":{"metavars":{"$PTR":{"start":{"line":3215,"col":7,"offset":70107},"end":{"line":3215,"col":13,"offset":70113},"abstract_content":"dbname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4eb81dee9339d7537aae9cf105b92bf4f9ebf837b89d1f1909e07ae35b51027cccd4dbb114b4498dc32e6f8b4d7bf1d783f583481e8becef6344e8ebb3b46cae_2","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3248,"col":2,"offset":70650},"end":{"line":3257,"col":3,"offset":70871},"extra":{"metavars":{"$EXPR1":{"start":{"line":3248,"col":6,"offset":70654},"end":{"line":3248,"col":15,"offset":70663},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":3248,"col":18,"offset":70666},"end":{"line":3248,"col":28,"offset":70676},"abstract_content":"MAGIC_MIME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"947d2892f772a70bdc73013ab834bc5bde6ffe6ecd1d11e7d8ac1ca1e16f6700e549351c1a3167288cb25ca6de4857fa3a82ce28ecb4fc5674462de5462264d9_0","lines":"\tif (ms->flags & MAGIC_MIME) {\n\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)\n\t\t    < 0)\n\t\t\treturn NULL;\n\t\tif (access(buf, R_OK) != -1) {\n\t\t\tms->flags &= MAGIC_MIME_TYPE;\n\t\t\treturn buf;\n\t\t}\n\t\tfree(buf);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3249,"col":7,"offset":70686},"end":{"line":3249,"col":64,"offset":70743},"extra":{"metavars":{"$FUN":{"start":{"line":3249,"col":7,"offset":70686},"end":{"line":3249,"col":15,"offset":70694},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8184adb07dac6ded0aa0d653d3a00e9eb125656221ebc570910d948493028d68fa17877e31c6e59c2076e005547f66384d3bca582cab901e360a241234ad5ba9_1","lines":"\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3249,"col":47,"offset":70726},"end":{"line":3249,"col":53,"offset":70732},"extra":{"metavars":{"$PTR1":{"start":{"line":3249,"col":47,"offset":70726},"end":{"line":3249,"col":48,"offset":70727},"abstract_content":"q"},"$PTR2":{"start":{"line":3249,"col":51,"offset":70730},"end":{"line":3249,"col":53,"offset":70732},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35ce0716df7a5bf2f6d6ad0b50f7aeb727f61b0ace1a040fe2aeeffbace345098a927e53149ca4c40521fcc17f6fcc2fc1147c6c1dc67451f41277b2748d38c3_0","lines":"\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3252,"col":7,"offset":70777},"end":{"line":3252,"col":24,"offset":70794},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"53ed56e78506c7fe26a930c9cd7c64988cdf83e1d2190af68cf0f78ba01465040f0a28330004eb28054fba2b7e03aa6002b2913a13059cf82e6a48d9cd396dd9_2","lines":"\t\tif (access(buf, R_OK) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3252,"col":7,"offset":70777},"end":{"line":3252,"col":24,"offset":70794},"extra":{"metavars":{"$FUN":{"start":{"line":3252,"col":7,"offset":70777},"end":{"line":3252,"col":13,"offset":70783},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0932a3990e07a126d52ccfdf443418e2a1a8eec69bdac89d3be33c229a53a46da5972cac6a8d29b1624564b3d2ef5fa4ba127ad694228868638ccab08c5314ad_0","lines":"\t\tif (access(buf, R_OK) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3256,"col":3,"offset":70858},"end":{"line":3256,"col":13,"offset":70868},"extra":{"metavars":{"$PTR":{"start":{"line":3256,"col":8,"offset":70863},"end":{"line":3256,"col":11,"offset":70866},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d1faa3b82fab9a7ce8eeb8a2e4ec1da7630b2db1ae5a448e0914728372577f0259f3037957dd1a2f395f28cdeb03bbe2d5b06e9d51d88a7534ad2760ee96f7d1_0","lines":"\t\tfree(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3258,"col":6,"offset":70877},"end":{"line":3258,"col":58,"offset":70929},"extra":{"metavars":{"$FUN":{"start":{"line":3258,"col":6,"offset":70877},"end":{"line":3258,"col":14,"offset":70885},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8184adb07dac6ded0aa0d653d3a00e9eb125656221ebc570910d948493028d68fa17877e31c6e59c2076e005547f66384d3bca582cab901e360a241234ad5ba9_2","lines":"\tif (asprintf(&buf, \"%.*s%s\", CAST(int, q - fn), fn, ext) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3258,"col":41,"offset":70912},"end":{"line":3258,"col":47,"offset":70918},"extra":{"metavars":{"$PTR1":{"start":{"line":3258,"col":41,"offset":70912},"end":{"line":3258,"col":42,"offset":70913},"abstract_content":"q"},"$PTR2":{"start":{"line":3258,"col":45,"offset":70916},"end":{"line":3258,"col":47,"offset":70918},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35ce0716df7a5bf2f6d6ad0b50f7aeb727f61b0ace1a040fe2aeeffbace345098a927e53149ca4c40521fcc17f6fcc2fc1147c6c1dc67451f41277b2748d38c3_1","lines":"\tif (asprintf(&buf, \"%.*s%s\", CAST(int, q - fn), fn, ext) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3379,"col":9,"offset":73006},"end":{"line":3379,"col":16,"offset":73013},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3379,"col":9,"offset":73006},"end":{"line":3379,"col":12,"offset":73009},"abstract_content":"len"},"$SIGNED":{"start":{"line":3379,"col":15,"offset":73012},"end":{"line":3379,"col":16,"offset":73013},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d881bfd3434a2945ca4dd9f7d6093bd4ba3a665acfd72b7485531000f6cb5d005494cfc0e56b5b1e87aa2bc31185cde44e4edf61bc71eb795435a975e186df47_0","lines":"\tsize_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3388,"col":3,"offset":73208},"end":{"line":3388,"col":12,"offset":73217},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3388,"col":3,"offset":73208},"end":{"line":3388,"col":5,"offset":73210},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3388,"col":10,"offset":73215},"end":{"line":3388,"col":11,"offset":73216},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e865612901b9707ae23c17d376c24769e23861799be5e8c3fa7a438cc5b3b66b3feb171d5c070d7eb0d4859bc55f02881210b5c60529cf0e569f2cd651d522ad_0","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3389,"col":3,"offset":73221},"end":{"line":3389,"col":12,"offset":73230},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3389,"col":3,"offset":73221},"end":{"line":3389,"col":5,"offset":73223},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3389,"col":10,"offset":73228},"end":{"line":3389,"col":11,"offset":73229},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44d02debd41b13e4ea5a00ab15355db152eef4f7d1fc778ee2e55d9ce5623bfd11e712e93fc03323c1c1b740c25ea1323b360f97f7bb7bfb6083999f6c473938_0","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3390,"col":3,"offset":73234},"end":{"line":3390,"col":23,"offset":73254},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3390,"col":3,"offset":73234},"end":{"line":3390,"col":6,"offset":73237},"abstract_content":"len"},"$SIGNED":{"start":{"line":3390,"col":16,"offset":73247},"end":{"line":3390,"col":17,"offset":73248},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b22e8e45495476dd49fa103bf74d3d8584a961cf7ba118348ff17da00a4fbc9b736369adde486e90859313af797dbd02de46d0597356e553f94264a47505d296_0","lines":"\t\tlen = (s1 << 8) | s0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3393,"col":3,"offset":73287},"end":{"line":3393,"col":12,"offset":73296},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3393,"col":3,"offset":73287},"end":{"line":3393,"col":5,"offset":73289},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3393,"col":10,"offset":73294},"end":{"line":3393,"col":11,"offset":73295},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e865612901b9707ae23c17d376c24769e23861799be5e8c3fa7a438cc5b3b66b3feb171d5c070d7eb0d4859bc55f02881210b5c60529cf0e569f2cd651d522ad_1","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3394,"col":3,"offset":73300},"end":{"line":3394,"col":12,"offset":73309},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3394,"col":3,"offset":73300},"end":{"line":3394,"col":5,"offset":73302},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3394,"col":10,"offset":73307},"end":{"line":3394,"col":11,"offset":73308},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44d02debd41b13e4ea5a00ab15355db152eef4f7d1fc778ee2e55d9ce5623bfd11e712e93fc03323c1c1b740c25ea1323b360f97f7bb7bfb6083999f6c473938_1","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3395,"col":3,"offset":73313},"end":{"line":3395,"col":23,"offset":73333},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3395,"col":3,"offset":73313},"end":{"line":3395,"col":6,"offset":73316},"abstract_content":"len"},"$SIGNED":{"start":{"line":3395,"col":16,"offset":73326},"end":{"line":3395,"col":17,"offset":73327},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b22e8e45495476dd49fa103bf74d3d8584a961cf7ba118348ff17da00a4fbc9b736369adde486e90859313af797dbd02de46d0597356e553f94264a47505d296_1","lines":"\t\tlen = (s0 << 8) | s1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3398,"col":3,"offset":73366},"end":{"line":3398,"col":12,"offset":73375},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3398,"col":3,"offset":73366},"end":{"line":3398,"col":5,"offset":73368},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3398,"col":10,"offset":73373},"end":{"line":3398,"col":11,"offset":73374},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e865612901b9707ae23c17d376c24769e23861799be5e8c3fa7a438cc5b3b66b3feb171d5c070d7eb0d4859bc55f02881210b5c60529cf0e569f2cd651d522ad_2","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3399,"col":3,"offset":73379},"end":{"line":3399,"col":12,"offset":73388},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3399,"col":3,"offset":73379},"end":{"line":3399,"col":5,"offset":73381},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3399,"col":10,"offset":73386},"end":{"line":3399,"col":11,"offset":73387},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44d02debd41b13e4ea5a00ab15355db152eef4f7d1fc778ee2e55d9ce5623bfd11e712e93fc03323c1c1b740c25ea1323b360f97f7bb7bfb6083999f6c473938_2","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3400,"col":3,"offset":73392},"end":{"line":3400,"col":12,"offset":73401},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3400,"col":3,"offset":73392},"end":{"line":3400,"col":5,"offset":73394},"abstract_content":"s2"},"$SIGNED":{"start":{"line":3400,"col":10,"offset":73399},"end":{"line":3400,"col":11,"offset":73400},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5c8161da2e40c21789e30c134c562413c00d235727bc6ef12ec86a675affcd09a193310a176355c21836113aa514ecc489e3be399443c6d0dbe9722be8eb4050_0","lines":"\t\ts2 = s[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3401,"col":3,"offset":73405},"end":{"line":3401,"col":12,"offset":73414},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3401,"col":3,"offset":73405},"end":{"line":3401,"col":5,"offset":73407},"abstract_content":"s3"},"$SIGNED":{"start":{"line":3401,"col":10,"offset":73412},"end":{"line":3401,"col":11,"offset":73413},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a0b0fa6f0d8f436dc8216ee343404d5335ff9efb97cbe518d54e86d264e5a5267573befd89e282d5ab1ee784de72b1039c5f2f9efce08d716e686345dc82a3f8_0","lines":"\t\ts3 = s[3];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3402,"col":3,"offset":73418},"end":{"line":3402,"col":49,"offset":73464},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3402,"col":3,"offset":73418},"end":{"line":3402,"col":6,"offset":73421},"abstract_content":"len"},"$SIGNED":{"start":{"line":3402,"col":16,"offset":73431},"end":{"line":3402,"col":18,"offset":73433},"abstract_content":"24"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"20326db2623d41764f1f819ce077bc4b1aea0289ab2ad68ffd1769d06b16bb3041befee65f4c1f650237fe07de1f794be660b23a05396019ac91f9f59bf10078_0","lines":"\t\tlen = (s3 << 24) | (s2 << 16) | (s1 << 8) | s0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3405,"col":3,"offset":73497},"end":{"line":3405,"col":12,"offset":73506},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3405,"col":3,"offset":73497},"end":{"line":3405,"col":5,"offset":73499},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3405,"col":10,"offset":73504},"end":{"line":3405,"col":11,"offset":73505},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e865612901b9707ae23c17d376c24769e23861799be5e8c3fa7a438cc5b3b66b3feb171d5c070d7eb0d4859bc55f02881210b5c60529cf0e569f2cd651d522ad_3","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3406,"col":3,"offset":73510},"end":{"line":3406,"col":12,"offset":73519},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3406,"col":3,"offset":73510},"end":{"line":3406,"col":5,"offset":73512},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3406,"col":10,"offset":73517},"end":{"line":3406,"col":11,"offset":73518},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"44d02debd41b13e4ea5a00ab15355db152eef4f7d1fc778ee2e55d9ce5623bfd11e712e93fc03323c1c1b740c25ea1323b360f97f7bb7bfb6083999f6c473938_3","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3407,"col":3,"offset":73523},"end":{"line":3407,"col":12,"offset":73532},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3407,"col":3,"offset":73523},"end":{"line":3407,"col":5,"offset":73525},"abstract_content":"s2"},"$SIGNED":{"start":{"line":3407,"col":10,"offset":73530},"end":{"line":3407,"col":11,"offset":73531},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5c8161da2e40c21789e30c134c562413c00d235727bc6ef12ec86a675affcd09a193310a176355c21836113aa514ecc489e3be399443c6d0dbe9722be8eb4050_1","lines":"\t\ts2 = s[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3408,"col":3,"offset":73536},"end":{"line":3408,"col":12,"offset":73545},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3408,"col":3,"offset":73536},"end":{"line":3408,"col":5,"offset":73538},"abstract_content":"s3"},"$SIGNED":{"start":{"line":3408,"col":10,"offset":73543},"end":{"line":3408,"col":11,"offset":73544},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a0b0fa6f0d8f436dc8216ee343404d5335ff9efb97cbe518d54e86d264e5a5267573befd89e282d5ab1ee784de72b1039c5f2f9efce08d716e686345dc82a3f8_1","lines":"\t\ts3 = s[3];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3409,"col":3,"offset":73549},"end":{"line":3409,"col":49,"offset":73595},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3409,"col":3,"offset":73549},"end":{"line":3409,"col":6,"offset":73552},"abstract_content":"len"},"$SIGNED":{"start":{"line":3409,"col":16,"offset":73562},"end":{"line":3409,"col":18,"offset":73564},"abstract_content":"24"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"20326db2623d41764f1f819ce077bc4b1aea0289ab2ad68ffd1769d06b16bb3041befee65f4c1f650237fe07de1f794be660b23a05396019ac91f9f59bf10078_1","lines":"\t\tlen = (s0 << 24) | (s1 << 16) | (s2 << 8) | s3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3415,"col":2,"offset":73649},"end":{"line":3416,"col":38,"offset":73737},"extra":{"metavars":{"$EXPR1":{"start":{"line":3415,"col":6,"offset":73653},"end":{"line":3415,"col":18,"offset":73665},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":3415,"col":21,"offset":73668},"end":{"line":3415,"col":51,"offset":73698},"abstract_content":"PSTRING_LENGTH_INCLUDES_ITSELF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"af438c7f3dcec21ed63301ba29534086fab8b7b430d1e04020ec06900ffeac9e39523aa5118d1ab2bfc991cfb78babf348c13349212df67332258346d4955e04_0","lines":"\tif (m->str_flags & PSTRING_LENGTH_INCLUDES_ITSELF)\n\t\tlen -= file_pstring_length_size(m);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":175,"col":26,"offset":5575},"end":{"line":175,"col":30,"offset":5579},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"0f1c4ae1ce60f51f6f1dc5a36c06e6658bbe15948b5e2bcb601f038aa3d583c5e314c1f7227cc6504fbb501805b4abfd643c4c1ea5ee6432527821f62b93745e_0","lines":"\tif ((progname = strrchr(argv[0], '/')) != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":178,"col":14,"offset":5632},"end":{"line":178,"col":18,"offset":5636},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"0f1c4ae1ce60f51f6f1dc5a36c06e6658bbe15948b5e2bcb601f038aa3d583c5e314c1f7227cc6504fbb501805b4abfd643c4c1ea5ee6432527821f62b93745e_1","lines":"\t\tprogname = argv[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":185,"col":12,"offset":5742},"end":{"line":185,"col":35,"offset":5765},"extra":{"metavars":{"$FUN":{"start":{"line":185,"col":12,"offset":5742},"end":{"line":185,"col":22,"offset":5752},"abstract_content":"magic_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35c56fbe9ff0047be83a4c3ee18b015ac36da3ab2b34bf3e50e134ab4379bfeee00e5e7161bd836a8057add772e701fba4a96b09c7ea1aba7e99844c992f3067_0","lines":"\tif ((ms = magic_open(MAGIC_CHECK)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":189,"col":26,"offset":5882},"end":{"line":189,"col":30,"offset":5886},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"0f1c4ae1ce60f51f6f1dc5a36c06e6658bbe15948b5e2bcb601f038aa3d583c5e314c1f7227cc6504fbb501805b4abfd643c4c1ea5ee6432527821f62b93745e_2","lines":"\tret = magic_compile(ms, argv[1]) == -1 ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":343,"col":9,"offset":10764},"end":{"line":380,"col":20,"offset":11675},"extra":{"metavars":{"$EXPR1":{"start":{"line":343,"col":21,"offset":10776},"end":{"line":343,"col":25,"offset":10780},"abstract_content":"CAST"},"$EXPR2":{"start":{"line":343,"col":49,"offset":10804},"end":{"line":376,"col":3,"offset":11610},"abstract_content":"{{FILE_INVALID}}"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e6c43246f344f691dcd97f5f13c08151b1abd4bb0e2a22a7079a4be99253d4a86138104c2c8cc697156558151edc35260181c080b7ce53bc5a1f9483e1af715c_0","lines":"\t} else if (isdigit(CAST(unsigned char, l[1]))) {\n\t\t/*\n\t\t * \"d{num}\" and \"u{num}\"; we only support {num} values\n\t\t * of 1, 2, 4, and 8 - the Single UNIX Specification\n\t\t * doesn't say anything about whether arbitrary\n\t\t * values should be supported, but both the Solaris 10\n\t\t * and OS X Mountain Lion versions of file passed the\n\t\t * Single UNIX Specification validation suite, and\n\t\t * neither of them support values bigger than 8 or\n\t\t * non-power-of-2 values.\n\t\t */\n\t\tif (isdigit(CAST(unsigned char, l[2]))) {\n\t\t\t/* Multi-digit, so > 9 */\n\t\t\treturn FILE_INVALID;\n\t\t}\n\t\tswitch (l[1]) {\n\t\tcase '1':\n\t\t\ttype = FILE_BYTE;\n\t\t\tbreak;\n\t\tcase '2':\n\t\t\ttype = FILE_SHORT;\n\t\t\tbreak;\n\t\tcase '4':\n\t\t\ttype = FILE_LONG;\n\t\t\tbreak;\n\t\tcase '8':\n\t\t\ttype = FILE_QUAD;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* XXX - what about 3, 5, 6, or 7? */\n\t\t\treturn FILE_INVALID;\n\t\t}\n\t\tl += 2;\n\t} else {\n\t\t/*\n\t\t * \"d\" or \"u\" by itself.\n\t\t */\n\t\ttype = FILE_LONG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":399,"col":3,"offset":11879},"end":{"line":399,"col":36,"offset":11912},"extra":{"metavars":{"$ASSERT":{"start":{"line":399,"col":3,"offset":11879},"end":{"line":399,"col":9,"offset":11885},"abstract_content":"assert"},"$A":{"start":{"line":399,"col":10,"offset":11886},"end":{"line":399,"col":17,"offset":11893},"abstract_content":"p->->type"},"$B":{"start":{"line":399,"col":20,"offset":11896},"end":{"line":399,"col":35,"offset":11911},"abstract_content":"FILE_NAMES_SIZE"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc5005761cc8ba35d236595933171fe67c8b1964c331d4d748c4aa9343933df0c45f5bcffeec90d7ec788773710650cf29cdff271cc7cccad05bd9b8ff2ecc82_0","lines":"\t\tassert(p->type < FILE_NAMES_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":412,"col":33,"offset":12180},"end":{"line":412,"col":52,"offset":12199},"extra":{"metavars":{"$FUN":{"start":{"line":412,"col":33,"offset":12180},"end":{"line":412,"col":39,"offset":12186},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8637ec9b9d80cdfec760dac86329e3fc7bb29ecd0cebfea6501610af6ecb144622d38b479ebf4fdcde223bb1917238ec3f7cfc6f1900231c76438b00e9b2129_0","lines":"\tif ((ml = CAST(struct mlist *, malloc(sizeof(*ml)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":457,"col":3,"offset":13098},"end":{"line":458,"col":58,"offset":13217},"extra":{"metavars":{"$EXPR1":{"start":{"line":457,"col":7,"offset":13102},"end":{"line":457,"col":16,"offset":13111},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":457,"col":19,"offset":13114},"end":{"line":457,"col":30,"offset":13125},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_0","lines":"\t\tif (ms->flags & MAGIC_CHECK && strcmp(\"/etc/magic\", fn) != 0)\n\t\t\tfile_magwarn(ms, \"using regular magic file `%s'\", fn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":464,"col":7,"offset":13302},"end":{"line":464,"col":12,"offset":13307},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":464,"col":7,"offset":13302},"end":{"line":464,"col":8,"offset":13303},"abstract_content":"i"},"$SIGNED":{"start":{"line":464,"col":11,"offset":13306},"end":{"line":464,"col":12,"offset":13307},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_0","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":472,"col":8,"offset":13468},"end":{"line":472,"col":13,"offset":13473},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":472,"col":8,"offset":13468},"end":{"line":472,"col":9,"offset":13469},"abstract_content":"i"},"$SIGNED":{"start":{"line":472,"col":12,"offset":13472},"end":{"line":472,"col":13,"offset":13473},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_1","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":473,"col":4,"offset":13501},"end":{"line":474,"col":10,"offset":13565},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"42305aebdc99f835046c35cc9846d1758dc62947fac734240f7e93ec0a1ffaf630211a5659baca4a7aead60d9ce06f327242d2716730e08f177144ffdd1e7e53_0","lines":"\t\t\tprintf(\"Set %\" SIZE_T_FORMAT \"u:\\nBinary patterns:\\n\",\n\t\t\t    i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":492,"col":7,"offset":13845},"end":{"line":492,"col":12,"offset":13850},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":492,"col":7,"offset":13845},"end":{"line":492,"col":8,"offset":13846},"abstract_content":"i"},"$SIGNED":{"start":{"line":492,"col":11,"offset":13849},"end":{"line":492,"col":12,"offset":13850},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_2","lines":"\tfor (i = 0; i < MAGIC_SETS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":494,"col":2,"offset":13902},"end":{"line":494,"col":19,"offset":13919},"extra":{"metavars":{"$PTR":{"start":{"line":494,"col":7,"offset":13907},"end":{"line":494,"col":17,"offset":13917},"abstract_content":"ms->->o.pbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"591bf9bfe70706121f14ccff7deaefcd78dbf709b0b64806a90acd6e66ddef640dc60fc61cf1773fb0ecabc7ae17a5581a7e6febe052505edd9c0976f2dfa863_0","lines":"\tfree(ms->o.pbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":495,"col":2,"offset":13921},"end":{"line":495,"col":18,"offset":13937},"extra":{"metavars":{"$PTR":{"start":{"line":495,"col":7,"offset":13926},"end":{"line":495,"col":16,"offset":13935},"abstract_content":"ms->->o.buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"586b0959bc49538eebb991d926729554f8ca9e33bd1c788554d19e3e31f01d559b243b1dd91239e2b4472fe4c721006a28c37ecebe1064cf0cbf887d7b02ffdd_0","lines":"\tfree(ms->o.buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":496,"col":2,"offset":13939},"end":{"line":496,"col":17,"offset":13954},"extra":{"metavars":{"$PTR":{"start":{"line":496,"col":7,"offset":13944},"end":{"line":496,"col":15,"offset":13952},"abstract_content":"ms->->c.li"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1e2d8cb55a9318f07a7a1d62082d88a86b0c803d2e1127b09e6c9ae91834a6b471e266a36ad39f23de0fe308574ecb2fb74e9143b23a1af353e7eb33d921abaa_0","lines":"\tfree(ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":497,"col":2,"offset":13956},"end":{"line":497,"col":11,"offset":13965},"extra":{"metavars":{"$PTR":{"start":{"line":497,"col":7,"offset":13961},"end":{"line":497,"col":9,"offset":13963},"abstract_content":"ms"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8c493dfd70a9b0be8956402f159250f5dc79ba73caa63e9b99f151f6e01350144bd7e8a78248d58774b4b6a8dff5cb2006ab405f06ab008bc45429a0d3fd1645_0","lines":"\tfree(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":37,"offset":14101},"end":{"line":507,"col":31,"offset":14156},"extra":{"metavars":{"$FUN":{"start":{"line":506,"col":37,"offset":14101},"end":{"line":506,"col":43,"offset":14107},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b48ac8412a01eb1828809002c14fa605ffdfa271cb5d2d320c377309473287703f16b4be9de9db1d19d0674f9f22a4f478999397d0c02ae8539394d100182a1_0","lines":"\tif ((ms = CAST(struct magic_set *, calloc(CAST(size_t, 1u),\n\t    sizeof(struct magic_set)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":516,"col":2,"offset":14292},"end":{"line":516,"col":43,"offset":14333},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":516,"col":2,"offset":14292},"end":{"line":516,"col":5,"offset":14295},"abstract_content":"len"},"$SIGNED":{"start":{"line":516,"col":21,"offset":14311},"end":{"line":516,"col":23,"offset":14313},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"977c3380bdbc019339c2e561a73e6623fb952d79e1056ad07dadcf5f1a98efa48325b3d7654f93ff25315b42d77e293b534e0b0fd68d40d5561b44b67ada220d_0","lines":"\tlen = (ms->c.len = 10) * sizeof(*ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":516,"col":9,"offset":14299},"end":{"line":516,"col":23,"offset":14313},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":516,"col":9,"offset":14299},"end":{"line":516,"col":18,"offset":14308},"abstract_content":"ms->->c.len"},"$SIGNED":{"start":{"line":516,"col":21,"offset":14311},"end":{"line":516,"col":23,"offset":14313},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1fcf7d31eeee65b392d7eafbb0cc14866ae97d3f910441dec00048f159f24b4c2e2b155624024c4ed1989314340548ba22cbb6bd55f9d81c050ef658993ae38b_0","lines":"\tlen = (ms->c.len = 10) * sizeof(*ms->c.li);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":44,"offset":14380},"end":{"line":518,"col":55,"offset":14391},"extra":{"metavars":{"$X":{"start":{"line":516,"col":9,"offset":14299},"end":{"line":516,"col":23,"offset":14313},"abstract_content":"ms->->c.len=10"},"$Y":{"start":{"line":516,"col":27,"offset":14317},"end":{"line":516,"col":43,"offset":14333},"abstract_content":"sizeof*ms->->c.li"},"$FUN":{"start":{"line":518,"col":44,"offset":14380},"end":{"line":518,"col":50,"offset":14386},"abstract_content":"malloc"},"$N":{"start":{"line":518,"col":51,"offset":14387},"end":{"line":518,"col":54,"offset":14390},"abstract_content":"len"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2aa04393a929540c3345335e4c37ce72d54a62049771c559b5409e991c743c8371283639431d3b6aa4d41e44c3572ce5821bc1ea7a744aa2264fd70a44ec7c7b_0","lines":"\tif ((ms->c.li = CAST(struct level_info *, malloc(len))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":44,"offset":14380},"end":{"line":518,"col":55,"offset":14391},"extra":{"metavars":{"$FUN":{"start":{"line":518,"col":44,"offset":14380},"end":{"line":518,"col":50,"offset":14386},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8637ec9b9d80cdfec760dac86329e3fc7bb29ecd0cebfea6501610af6ecb144622d38b479ebf4fdcde223bb1917238ec3f7cfc6f1900231c76438b00e9b2129_1","lines":"\tif ((ms->c.li = CAST(struct level_info *, malloc(len))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":523,"col":7,"offset":14462},"end":{"line":523,"col":12,"offset":14467},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":523,"col":7,"offset":14462},"end":{"line":523,"col":8,"offset":14463},"abstract_content":"i"},"$SIGNED":{"start":{"line":523,"col":11,"offset":14466},"end":{"line":523,"col":12,"offset":14467},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_3","lines":"\tfor (i = 0; i < MAGIC_SETS; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":536,"col":2,"offset":14823},"end":{"line":536,"col":11,"offset":14832},"extra":{"metavars":{"$PTR":{"start":{"line":536,"col":7,"offset":14828},"end":{"line":536,"col":9,"offset":14830},"abstract_content":"ms","propagated_value":{"svalue_start":{"line":506,"col":12,"offset":14076},"svalue_end":{"line":507,"col":32,"offset":14157},"svalue_abstract_content":"CAST(magic_set*calloc(CAST(1u)sizeof(struct magic_set)))"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8c493dfd70a9b0be8956402f159250f5dc79ba73caa63e9b99f151f6e01350144bd7e8a78248d58774b4b6a8dff5cb2006ab405f06ab008bc45429a0d3fd1645_1","lines":"\tfree(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":551,"col":8,"offset":15027},"end":{"line":551,"col":13,"offset":15032},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":551,"col":8,"offset":15027},"end":{"line":551,"col":9,"offset":15028},"abstract_content":"i"},"$SIGNED":{"start":{"line":551,"col":12,"offset":15031},"end":{"line":551,"col":13,"offset":15032},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_4","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":557,"col":4,"offset":15222},"end":{"line":557,"col":24,"offset":15242},"extra":{"metavars":{"$PTR":{"start":{"line":557,"col":9,"offset":15227},"end":{"line":557,"col":22,"offset":15240},"abstract_content":"map->->magic[i]"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"611cc837e4b51436f134f9fb86a14531a27e93229cddeb561289504961a3e9f214a07b5078f6ba200f0fd4284297fdaf1e28ba8640c05d706c0020b43a359872_0","lines":"\t\t\tfree(map->magic[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":559,"col":3,"offset":15249},"end":{"line":559,"col":16,"offset":15262},"extra":{"metavars":{"$PTR":{"start":{"line":559,"col":8,"offset":15254},"end":{"line":559,"col":14,"offset":15260},"abstract_content":"map->->p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9d8eb8e01a664077dc4c9056dbe707bc505b40eb8b029f29e6929336b527223a4eefedd6fecf266a650632c3f50c353b70dd4a0a2d1167fd0611f28032bb36f6_0","lines":"\t\tfree(map->p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":570,"col":2,"offset":15420},"end":{"line":570,"col":12,"offset":15430},"extra":{"metavars":{"$PTR":{"start":{"line":570,"col":7,"offset":15425},"end":{"line":570,"col":10,"offset":15428},"abstract_content":"map"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4b8a23807113b7f37bfbc2e2f0dc45690f03c99df26f9e779fc99390febb56f13aaacfa8a671ac558767299d72ef0b62b5c435372c213cb23a73669008cc5e1_0","lines":"\tfree(map);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":36,"offset":15534},"end":{"line":577,"col":61,"offset":15559},"extra":{"metavars":{"$FUN":{"start":{"line":577,"col":36,"offset":15534},"end":{"line":577,"col":42,"offset":15540},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b48ac8412a01eb1828809002c14fa605ffdfa271cb5d2d320c377309473287703f16b4be9de9db1d19d0674f9f22a4f478999397d0c02ae8539394d100182a1_1","lines":"\tif ((mlist = CAST(struct mlist *, calloc(1, sizeof(*mlist)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":36,"offset":15534},"end":{"line":577,"col":61,"offset":15559},"extra":{"metavars":{"$CNT":{"start":{"line":577,"col":43,"offset":15541},"end":{"line":577,"col":44,"offset":15542},"abstract_content":"1"},"$LEN":{"start":{"line":577,"col":46,"offset":15544},"end":{"line":577,"col":59,"offset":15557},"abstract_content":"sizeof*mlist"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3deb64091a17e47df883807ee5e143bcc1b29b37c6677742eaca6ed2d9468dd9595d34fe16bf35e20df8e4438db300f5fec519e8828fdc66aaf9311ebb60150e_0","lines":"\tif ((mlist = CAST(struct mlist *, calloc(1, sizeof(*mlist)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":589,"col":2,"offset":15763},"end":{"line":589,"col":11,"offset":15772},"extra":{"metavars":{"$PTR":{"start":{"line":589,"col":7,"offset":15768},"end":{"line":589,"col":9,"offset":15770},"abstract_content":"ml"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b4d15fec8b624f024b68b4fc16cab92e20488da5c80eeb07d755ea363ce928c518dfe753c147cf52ee039e46e62a07d6eed94b17d1198fe35d5e8f13172a784e_0","lines":"\tfree(ml);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":624,"col":7,"offset":16329},"end":{"line":624,"col":12,"offset":16334},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":624,"col":7,"offset":16329},"end":{"line":624,"col":8,"offset":16330},"abstract_content":"i"},"$SIGNED":{"start":{"line":624,"col":11,"offset":16333},"end":{"line":624,"col":12,"offset":16334},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_5","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":626,"col":23,"offset":16409},"end":{"line":626,"col":36,"offset":16422},"extra":{"metavars":{"$FUN":{"start":{"line":626,"col":23,"offset":16409},"end":{"line":626,"col":34,"offset":16420},"abstract_content":"mlist_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f794a0a7f7eb35dbd1d5eb8d5b9eab119d502867762fc508e8f959edea5d2201254b4fce0711d3e585fdc2729349765ebc10c401f9fef290273c6de6ae6db096_0","lines":"\t\tif ((ms->mlist[i] = mlist_alloc()) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":632,"col":7,"offset":16505},"end":{"line":632,"col":12,"offset":16510},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":632,"col":7,"offset":16505},"end":{"line":632,"col":8,"offset":16506},"abstract_content":"i"},"$SIGNED":{"start":{"line":632,"col":11,"offset":16509},"end":{"line":632,"col":12,"offset":16510},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_6","lines":"\tfor (i = 0; i < nbufs; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":637,"col":8,"offset":16618},"end":{"line":637,"col":13,"offset":16623},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":637,"col":8,"offset":16618},"end":{"line":637,"col":9,"offset":16619},"abstract_content":"j"},"$SIGNED":{"start":{"line":637,"col":12,"offset":16622},"end":{"line":637,"col":13,"offset":16623},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45017e943889fa18ab323d0bb3aaf2881cca4d5bdca54b4f07e4e4c4b3f31e3de448f3a939c4194d67f33f05dd0bd0a49c6861f9d21a2b0f5c92308fe754ffb8_0","lines":"\t\tfor (j = 0; j < MAGIC_SETS; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":647,"col":7,"offset":16780},"end":{"line":647,"col":12,"offset":16785},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":647,"col":7,"offset":16780},"end":{"line":647,"col":8,"offset":16781},"abstract_content":"i"},"$SIGNED":{"start":{"line":647,"col":11,"offset":16784},"end":{"line":647,"col":12,"offset":16785},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_7","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":675,"col":7,"offset":17277},"end":{"line":675,"col":12,"offset":17282},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":675,"col":7,"offset":17277},"end":{"line":675,"col":8,"offset":17278},"abstract_content":"i"},"$SIGNED":{"start":{"line":675,"col":11,"offset":17281},"end":{"line":675,"col":12,"offset":17282},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_8","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":677,"col":23,"offset":17357},"end":{"line":677,"col":36,"offset":17370},"extra":{"metavars":{"$FUN":{"start":{"line":677,"col":23,"offset":17357},"end":{"line":677,"col":34,"offset":17368},"abstract_content":"mlist_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f794a0a7f7eb35dbd1d5eb8d5b9eab119d502867762fc508e8f959edea5d2201254b4fce0711d3e585fdc2729349765ebc10c401f9fef290273c6de6ae6db096_1","lines":"\t\tif ((ms->mlist[i] = mlist_alloc()) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":683,"col":4,"offset":17509},"end":{"line":683,"col":14,"offset":17519},"extra":{"metavars":{"$PTR":{"start":{"line":683,"col":9,"offset":17514},"end":{"line":683,"col":12,"offset":17517},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cd8bbbfc4bebfa1ad085726ffee985f3cfbc8a0e7f6ffcfd090dd836ee0174b34006a11455497171dc25513048f1803cc98e0b686598849f9785a9fe12b533f_0","lines":"\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":700,"col":2,"offset":17734},"end":{"line":700,"col":12,"offset":17744},"extra":{"metavars":{"$PTR":{"start":{"line":700,"col":7,"offset":17739},"end":{"line":700,"col":10,"offset":17742},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cd8bbbfc4bebfa1ad085726ffee985f3cfbc8a0e7f6ffcfd090dd836ee0174b34006a11455497171dc25513048f1803cc98e0b686598849f9785a9fe12b533f_1","lines":"\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":703,"col":8,"offset":17772},"end":{"line":703,"col":13,"offset":17777},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":703,"col":8,"offset":17772},"end":{"line":703,"col":9,"offset":17773},"abstract_content":"i"},"$SIGNED":{"start":{"line":703,"col":12,"offset":17776},"end":{"line":703,"col":13,"offset":17777},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_9","lines":"\t\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":718,"col":7,"offset":18035},"end":{"line":718,"col":12,"offset":18040},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":718,"col":7,"offset":18035},"end":{"line":718,"col":8,"offset":18036},"abstract_content":"i"},"$SIGNED":{"start":{"line":718,"col":11,"offset":18039},"end":{"line":718,"col":12,"offset":18040},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_10","lines":"\tfor (i = 0; i < MAGIC_SETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":750,"col":9,"offset":18753},"end":{"line":750,"col":15,"offset":18759},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":750,"col":9,"offset":18753},"end":{"line":750,"col":11,"offset":18755},"abstract_content":"rv"},"$SIGNED":{"start":{"line":750,"col":14,"offset":18758},"end":{"line":750,"col":15,"offset":18759},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"61c06de5a0f8fae49446019f23f9b7db7e9019f2a0ee7ff1a97bd24ff21fda1afce36095842da41ba8ef37bd64cc7f7bdfde03f76436457c72c2a357dd71aa1f_0","lines":"\tsize_t rv = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":753,"col":11,"offset":18796},"end":{"line":753,"col":13,"offset":18798},"extra":{"metavars":{"$VAR":{"start":{"line":753,"col":11,"offset":18796},"end":{"line":753,"col":13,"offset":18798},"abstract_content":"*p"},"$VAL1":{"start":{"line":754,"col":8,"offset":18809},"end":{"line":754,"col":12,"offset":18813},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":766,"col":8,"offset":19015},"end":{"line":766,"col":11,"offset":19018},"abstract_content":"'['"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a362af56a058bc78c7537f4a873b4a9178450c4a616850da90d06ae0e0d69a671aeab1c371411f33b960adcc3e3fbaa831d158405e782962d493266c9bc3e620_0","lines":"\t\tswitch (*p) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1044,"col":10,"offset":24453},"end":{"line":1044,"col":17,"offset":24460},"extra":{"metavars":{"$VAR":{"start":{"line":1044,"col":10,"offset":24453},"end":{"line":1044,"col":17,"offset":24460},"abstract_content":"m->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"837e9cd2a733b3874a260fdc49a26841a82a23c7919fee6320d396dc43a5d7f2783186fa5fadce50f33a696a710b507d75e8d73a4d1b0087925e0b60e9074ebd_0","lines":"\tswitch (m->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1087,"col":3,"offset":25287},"end":{"line":1090,"col":28,"offset":25391},"extra":{"metavars":{"$EXPR1":{"start":{"line":1087,"col":7,"offset":25291},"end":{"line":1087,"col":24,"offset":25308},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1087,"col":27,"offset":25311},"end":{"line":1087,"col":42,"offset":25326},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a87437be50d12592606d552eaef26e71cb99110173fdba292a6da5c3f7464b76ea321fc5e72fceb664a2135ed92897c92fc561d0592d87267e90f950c39aeff5_0","lines":"\t\tif (mstart->str_flags & STRING_TEXTTEST)\n\t\t\tmstart->flag |= TEXTTEST;\n\t\telse\n\t\t\tmstart->flag |= BINTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1095,"col":3,"offset":25467},"end":{"line":1096,"col":28,"offset":25534},"extra":{"metavars":{"$EXPR1":{"start":{"line":1095,"col":7,"offset":25471},"end":{"line":1095,"col":24,"offset":25488},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1095,"col":27,"offset":25491},"end":{"line":1095,"col":41,"offset":25505},"abstract_content":"STRING_BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87a342761e1d59f41569ceb017adf42721f7950d79477b14f76a5dc2d2f42bb5217faa2419556b0c4e00f68e81b206205058a7de3d76e4eaa575bc817d9841e5_0","lines":"\t\tif (mstart->str_flags & STRING_BINTEST)\n\t\t\tmstart->flag |= BINTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1097,"col":3,"offset":25537},"end":{"line":1098,"col":29,"offset":25606},"extra":{"metavars":{"$EXPR1":{"start":{"line":1097,"col":7,"offset":25541},"end":{"line":1097,"col":24,"offset":25558},"abstract_content":"mstart->->str_flags"},"$EXPR2":{"start":{"line":1097,"col":27,"offset":25561},"end":{"line":1097,"col":42,"offset":25576},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a87437be50d12592606d552eaef26e71cb99110173fdba292a6da5c3f7464b76ea321fc5e72fceb664a2135ed92897c92fc561d0592d87267e90f950c39aeff5_1","lines":"\t\tif (mstart->str_flags & STRING_TEXTTEST)\n\t\t\tmstart->flag |= TEXTTEST;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1100,"col":3,"offset":25610},"end":{"line":1101,"col":10,"offset":25658},"extra":{"metavars":{"$EXPR1":{"start":{"line":1100,"col":7,"offset":25614},"end":{"line":1100,"col":19,"offset":25626},"abstract_content":"mstart->->flag"},"$EXPR2":{"start":{"line":1100,"col":23,"offset":25630},"end":{"line":1100,"col":39,"offset":25646},"abstract_content":"TEXTTEST|BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c032005142d7cfc1ed900656a858dfd3c995960b4a5c5bf004cbb8110843a275f11a5b0a1f827befa07a29d3dc88814a5ee9b7ba3bf7c7ee2a58024d9048b783_0","lines":"\t\tif (mstart->flag & (TEXTTEST|BINTEST))\n\t\t\tbreak;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1125,"col":2,"offset":26177},"end":{"line":1125,"col":47,"offset":26222},"extra":{"metavars":{"$EXPR1":{"start":{"line":1125,"col":13,"offset":26188},"end":{"line":1125,"col":25,"offset":26200},"abstract_content":"me->->mp->->type"},"$EXPR2":{"start":{"line":1125,"col":29,"offset":26204},"end":{"line":1125,"col":38,"offset":26213},"abstract_content":"FILE_NAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87b14d89e658c76a27dd0b88d742bc51a1377805c60d61958a45110fdf872ddefc6aa20f073506f40d80618c454f6ef81b6e3492d07bcd307dc4b056f6fddd64_0","lines":"\tsize_t i = me->mp->type == FILE_NAME ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1125,"col":9,"offset":26184},"end":{"line":1125,"col":46,"offset":26221},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1125,"col":9,"offset":26184},"end":{"line":1125,"col":10,"offset":26185},"abstract_content":"i"},"$SIGNED":{"start":{"line":1125,"col":13,"offset":26188},"end":{"line":1125,"col":46,"offset":26221},"abstract_content":"me->->mp->->type==FILE_NAME 1 0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e2cd468083a886a828d375b6f259f5550c67fcaa2e61eefc9a1b60f316c1f67c7441f3e9787470ce90b358a4814ae52e2573e7ae0c8ee05615decf5a86b0e7bb_0","lines":"\tsize_t i = me->mp->type == FILE_NAME ? 1 : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1131,"col":7,"offset":26361},"end":{"line":1131,"col":53,"offset":26407},"extra":{"metavars":{"$FUN":{"start":{"line":1131,"col":7,"offset":26361},"end":{"line":1131,"col":14,"offset":26368},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1131,"col":15,"offset":26369},"end":{"line":1131,"col":25,"offset":26379},"abstract_content":"mset[i].me"},"$X":{"start":{"line":1131,"col":27,"offset":26381},"end":{"line":1131,"col":37,"offset":26391},"abstract_content":"sizeof*mp"},"$Y":{"start":{"line":1131,"col":41,"offset":26395},"end":{"line":1131,"col":52,"offset":26406},"abstract_content":"mset[i].max"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0506d40c048787d68eca0fa4d17aa15b30c12100f218f7a01e10e8b3e4eaea95d68f8f5a887dda343cb6bbfa59a4d41afc4cfe74bbc26a9bba5caab1a074e882_0","lines":"\t\t    realloc(mset[i].me, sizeof(*mp) * mset[i].max))) ==","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1131,"col":7,"offset":26361},"end":{"line":1131,"col":53,"offset":26407},"extra":{"metavars":{"$FUN":{"start":{"line":1131,"col":7,"offset":26361},"end":{"line":1131,"col":14,"offset":26368},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"75b7068f90a888750ba03ca297ab12794cb1562599ad92021facfd7623d3d2c0e5f47a130cf0ef1f618a95dbf7400bb9ffd6c0507795596663df916c2d6168a7_0","lines":"\t\t    realloc(mset[i].me, sizeof(*mp) * mset[i].max))) ==","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1152,"col":9,"offset":26822},"end":{"line":1152,"col":19,"offset":26832},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1152,"col":9,"offset":26822},"end":{"line":1152,"col":15,"offset":26828},"abstract_content":"lineno"},"$SIGNED":{"start":{"line":1152,"col":18,"offset":26831},"end":{"line":1152,"col":19,"offset":26832},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b00bc06c35e6e2e1bc4676bb7d50c64e78f4f8ca2f2a77fd1d7a47d4f439c5919d859161237b23266628daf778dfc33eec3e8f1d574ac0d817697f41bcd4c3d6_0","lines":"\tsize_t lineno = 0, llen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1152,"col":21,"offset":26834},"end":{"line":1152,"col":29,"offset":26842},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1152,"col":21,"offset":26834},"end":{"line":1152,"col":25,"offset":26838},"abstract_content":"llen"},"$SIGNED":{"start":{"line":1152,"col":28,"offset":26841},"end":{"line":1152,"col":29,"offset":26842},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1c29a968712890b9e56ce05d5ef955da50da0bd6cf677aabb58dda62b087807db1c5261a551e902bbe0d808ff9a2c9b49f738600a02639fa9e04b9999a56ad18_0","lines":"\tsize_t lineno = 0, llen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1157,"col":12,"offset":26914},"end":{"line":1157,"col":37,"offset":26939},"extra":{"metavars":{"$FUN":{"start":{"line":1157,"col":12,"offset":26914},"end":{"line":1157,"col":17,"offset":26919},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a193524912731db92f74a34ddf4cb09d3a8cf3fd420f0ca453931804f882c0fccfedfb14b77aa54d31819d8c6ad64cb367be9b85cd7535a7ed75c36081283fe_0","lines":"\tFILE *f = fopen(ms->file = fn, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1184,"col":10,"offset":27544},"end":{"line":1184,"col":15,"offset":27549},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1184,"col":10,"offset":27544},"end":{"line":1184,"col":11,"offset":27545},"abstract_content":"i"},"$SIGNED":{"start":{"line":1184,"col":14,"offset":27548},"end":{"line":1184,"col":15,"offset":27549},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_11","lines":"\t\t\t\tfor (i = 0; bang[i].name != NULL; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1213,"col":12,"offset":28175},"end":{"line":1213,"col":48,"offset":28211},"extra":{"metavars":{"$VAR":{"start":{"line":1213,"col":12,"offset":28175},"end":{"line":1213,"col":48,"offset":28211},"abstract_content":"parse(ms&me line lineno action)"},"$VAL1":{"start":{"line":1214,"col":9,"offset":28223},"end":{"line":1214,"col":10,"offset":28224},"abstract_content":"0"},"$VAL2":{"start":{"line":1216,"col":9,"offset":28248},"end":{"line":1216,"col":10,"offset":28249},"abstract_content":"1"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"31db5e4d5cf390f300c6a7990c84dcaae511379605cf200790a050c909f2e159a9c66b78bb7ec87ad1d64dc90692363e742a4d4ceb027bcf99dd8dc801d0ceef_0","lines":"\t\t\tswitch (parse(ms, &me, line, lineno, action)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1227,"col":2,"offset":28398},"end":{"line":1227,"col":13,"offset":28409},"extra":{"metavars":{"$PTR":{"start":{"line":1227,"col":7,"offset":28403},"end":{"line":1227,"col":11,"offset":28407},"abstract_content":"line"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bdd59c8a0ad62ca49eba65454b069f13598377dc3c19e76554cd4da35987fc726dbae772b49990da7b4db07f509f75d75f8873df51e215a2f3dfc45a19255410_0","lines":"\tfree(line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1261,"col":3,"offset":29256},"end":{"line":1270,"col":4,"offset":29621},"extra":{"metavars":{"$EXPR1":{"start":{"line":1261,"col":7,"offset":29260},"end":{"line":1261,"col":21,"offset":29274},"abstract_content":"me[i].mp->->flag"},"$EXPR2":{"start":{"line":1261,"col":24,"offset":29277},"end":{"line":1261,"col":31,"offset":29284},"abstract_content":"BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"287582c9e12c1a34f5539950b680c28c1790fdb1fce7cd4141c38c46a2967d89b3019eed2b637f40973da21d3467a99ce2ab249aed2255dbca82c007551a2521_0","lines":"\t\tif (me[i].mp->flag & BINTEST) {\n\t\t\tchar *p = strstr(me[i].mp->desc, text);\n\t\t\tif (p && (p == me[i].mp->desc ||\n\t\t\t    isspace(CAST(unsigned char, p[-1]))) &&\n\t\t\t    (p + len - me[i].mp->desc == MAXstring\n\t\t\t    || (p[len] == '\\0' ||\n\t\t\t    isspace(CAST(unsigned char, p[len])))))\n\t\t\t\t(void)fprintf(stderr, \"*** Possible \"\n\t\t\t\t    \"binary test for text type\\n\");\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":34,"offset":30440},"end":{"line":1307,"col":46,"offset":30452},"extra":{"metavars":{"$X":{"start":{"line":1306,"col":9,"offset":30379},"end":{"line":1306,"col":20,"offset":30390},"abstract_content":"sizeof**ma"},"$Y":{"start":{"line":1306,"col":24,"offset":30394},"end":{"line":1306,"col":35,"offset":30405},"abstract_content":"mentrycount"},"$FUN":{"start":{"line":1307,"col":34,"offset":30440},"end":{"line":1307,"col":40,"offset":30446},"abstract_content":"malloc"},"$N":{"start":{"line":1307,"col":41,"offset":30447},"end":{"line":1307,"col":45,"offset":30451},"abstract_content":"slen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a8e2a9304bd5b83841591c7ef1d261664d5efb87eafbf76395a4dc4ac45c4949a6513ffedd94a10786c1d5cacd37848443fff92d85949bd7a95684fa2af9e1a5_0","lines":"\tif ((*ma = CAST(struct magic *, malloc(slen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":34,"offset":30440},"end":{"line":1307,"col":46,"offset":30452},"extra":{"metavars":{"$FUN":{"start":{"line":1307,"col":34,"offset":30440},"end":{"line":1307,"col":40,"offset":30446},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8637ec9b9d80cdfec760dac86329e3fc7bb29ecd0cebfea6501610af6ecb144622d38b479ebf4fdcde223bb1917238ec3f7cfc6f1900231c76438b00e9b2129_2","lines":"\tif ((*ma = CAST(struct magic *, malloc(slen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1314,"col":9,"offset":30562},"end":{"line":1315,"col":39,"offset":30636},"extra":{"metavars":{"$FUN":{"start":{"line":1314,"col":9,"offset":30562},"end":{"line":1314,"col":15,"offset":30568},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5c4616894247fb015b77b6ced5605bcc0bdd1c1c0b49380bee53df8736c3e5ec1abbef774dbb15dc05afc44c9c75cb22690532b55f9cfe91a975df5f89daed1d_0","lines":"\t\t(void)memcpy(*ma + mentrycount, me[i].mp,\n\t\t    me[i].cont_count * sizeof(**ma));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1329,"col":3,"offset":30850},"end":{"line":1329,"col":18,"offset":30865},"extra":{"metavars":{"$PTR":{"start":{"line":1329,"col":8,"offset":30855},"end":{"line":1329,"col":16,"offset":30863},"abstract_content":"me[i].mp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"086b9e77bc0032046374ac40b118c8dfe0c9bee4b517803777c60bb2100d4300bf495d285a33747eab11a809eea5fba51522358b7c3a31c2049189edaf71fdc7_0","lines":"\t\tfree(me[i].mp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1330,"col":2,"offset":30867},"end":{"line":1330,"col":11,"offset":30876},"extra":{"metavars":{"$PTR":{"start":{"line":1330,"col":7,"offset":30872},"end":{"line":1330,"col":9,"offset":30874},"abstract_content":"me"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"09e9cb739897890f33ba967f3ae50ba7e91f3cbda923bc659b4e55ab4e2ebdd92b8e4528ee7d49c80ecc913cfa03c38e2bcc743ae81ab0805c13d4b606244042_0","lines":"\tfree(me);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1338,"col":9,"offset":31014},"end":{"line":1338,"col":18,"offset":31023},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1338,"col":9,"offset":31014},"end":{"line":1338,"col":14,"offset":31019},"abstract_content":"files"},"$SIGNED":{"start":{"line":1338,"col":17,"offset":31022},"end":{"line":1338,"col":18,"offset":31023},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec6e8740dde31429f1862b55648c59190cbc7654818dc450c3b8fc520c935031603bef89af69033c0afc6cca53112cbb7af05c31cba79f847196bc18ff1aa26d_0","lines":"\tsize_t files = 0, maxfiles = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1338,"col":20,"offset":31025},"end":{"line":1338,"col":32,"offset":31037},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1338,"col":20,"offset":31025},"end":{"line":1338,"col":28,"offset":31033},"abstract_content":"maxfiles"},"$SIGNED":{"start":{"line":1338,"col":31,"offset":31036},"end":{"line":1338,"col":32,"offset":31037},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"56953ed359e68ca197ee82c8de71e31fe778b2ad4b6b9c3939a0299f5ba499248fef7c6980c9d0e7226530fea7351504134a530a4eeb141a942f3211e3de6bad_0","lines":"\tsize_t files = 0, maxfiles = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1346,"col":2,"offset":31184},"end":{"line":1346,"col":31,"offset":31213},"extra":{"metavars":{"$TYPE":{"start":{"line":1342,"col":2,"offset":31111},"end":{"line":1342,"col":24,"offset":31133},"abstract_content":"struct magic_entry_set"},"$LEN":{"start":{"line":1342,"col":30,"offset":31139},"end":{"line":1342,"col":40,"offset":31149},"abstract_content":"MAGIC_SETS"},"$FUN":{"start":{"line":1346,"col":2,"offset":31184},"end":{"line":1346,"col":8,"offset":31190},"abstract_content":"memset"},"$BUF":{"start":{"line":1346,"col":9,"offset":31191},"end":{"line":1346,"col":13,"offset":31195},"abstract_content":"mset"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"37203d0c44e6cad84a48af5d36b607d5d36abe5b7931847d2df7c1030d1c8ecaae9553c2421cc114410c2a6b3b72ab50992ce6c3954e2e9fca3c90d997e111c3_0","lines":"\tmemset(mset, 0, sizeof(mset));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":38,"offset":31318},"end":{"line":1350,"col":61,"offset":31341},"extra":{"metavars":{"$FUN":{"start":{"line":1350,"col":38,"offset":31318},"end":{"line":1350,"col":44,"offset":31324},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b48ac8412a01eb1828809002c14fa605ffdfa271cb5d2d320c377309473287703f16b4be9de9db1d19d0674f9f22a4f478999397d0c02ae8539394d100182a1_2","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":38,"offset":31318},"end":{"line":1350,"col":61,"offset":31341},"extra":{"metavars":{"$CNT":{"start":{"line":1350,"col":45,"offset":31325},"end":{"line":1350,"col":46,"offset":31326},"abstract_content":"1"},"$LEN":{"start":{"line":1350,"col":48,"offset":31328},"end":{"line":1350,"col":59,"offset":31339},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d213af7c01f06a101614d1ff0d6985bbbc4e01e5ae53042f2f251ff7d5d73489d03aa54eaeacc3796a5be82435d8223795a8bf4d55c64bf18af5b860b73ef2c3_0","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1362,"col":6,"offset":31592},"end":{"line":1362,"col":19,"offset":31605},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"12528bc4f88d147d1a612fbaab154c91e21c3faf1ad6fd6ca5415e678a24479539a6fddad1b998409e974f092fc7ad1ac78077d3117c9c908aad04a92a0581be_0","lines":"\tif (stat(fn, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1362,"col":6,"offset":31592},"end":{"line":1362,"col":19,"offset":31605},"extra":{"metavars":{"$FUN":{"start":{"line":1362,"col":6,"offset":31592},"end":{"line":1362,"col":10,"offset":31596},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"69c2fd1a74ea0747343b7bf2964e5c3bdefb1856dbc7a0de7718fa0c5610896a4c3c771ced4a17c3b2d5dbd6a335018df26edba6c410778399f3e5635f7fe6cb_0","lines":"\tif (stat(fn, &st) == 0 && S_ISDIR(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1371,"col":8,"offset":31788},"end":{"line":1371,"col":46,"offset":31826},"extra":{"metavars":{"$FUN":{"start":{"line":1371,"col":8,"offset":31788},"end":{"line":1371,"col":16,"offset":31796},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2fd8b0f8f094e11c7b22ddf8d905755a6455820ddeb8feec300a2adeb1c81ad338edce1c2dcfda7b223bf27f0e6fc73e6b584c57f75afca5ee79371db7dbd300_0","lines":"\t\t\tif (asprintf(&mfn, \"%s/%s\", fn, d->d_name) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1378,"col":8,"offset":31955},"end":{"line":1378,"col":22,"offset":31969},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"12528bc4f88d147d1a612fbaab154c91e21c3faf1ad6fd6ca5415e678a24479539a6fddad1b998409e974f092fc7ad1ac78077d3117c9c908aad04a92a0581be_1","lines":"\t\t\tif (stat(mfn, &st) == -1 || !S_ISREG(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1378,"col":8,"offset":31955},"end":{"line":1378,"col":22,"offset":31969},"extra":{"metavars":{"$FUN":{"start":{"line":1378,"col":8,"offset":31955},"end":{"line":1378,"col":12,"offset":31959},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"69c2fd1a74ea0747343b7bf2964e5c3bdefb1856dbc7a0de7718fa0c5610896a4c3c771ced4a17c3b2d5dbd6a335018df26edba6c410778399f3e5635f7fe6cb_1","lines":"\t\t\tif (stat(mfn, &st) == -1 || !S_ISREG(st.st_mode)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1379,"col":5,"offset":32007},"end":{"line":1379,"col":15,"offset":32017},"extra":{"metavars":{"$PTR":{"start":{"line":1379,"col":10,"offset":32012},"end":{"line":1379,"col":13,"offset":32015},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cd8bbbfc4bebfa1ad085726ffee985f3cfbc8a0e7f6ffcfd090dd836ee0174b34006a11455497171dc25513048f1803cc98e0b686598849f9785a9fe12b533f_2","lines":"\t\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1384,"col":5,"offset":32086},"end":{"line":1384,"col":34,"offset":32115},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1384,"col":5,"offset":32086},"end":{"line":1384,"col":13,"offset":32094},"abstract_content":"maxfiles"},"$SIGNED":{"start":{"line":1384,"col":28,"offset":32109},"end":{"line":1384,"col":29,"offset":32110},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0431271dfdeeed7bc778e5eada139aacaa14f7fe0e55b197b97da21eef69db30483ecf33ad307d4d3612597f41521fd0fb281469dca899943467b95ad6caccf9_0","lines":"\t\t\t\tmaxfiles = (maxfiles + 1) * 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1387,"col":9,"offset":32198},"end":{"line":1387,"col":31,"offset":32220},"extra":{"metavars":{"$X":{"start":{"line":1385,"col":12,"offset":32128},"end":{"line":1385,"col":20,"offset":32136},"abstract_content":"maxfiles","propagated_value":{"svalue_start":{"line":1384,"col":17,"offset":32098},"svalue_end":{"line":1384,"col":34,"offset":32115},"svalue_abstract_content":"maxfiles+1*2"}},"$Y":{"start":{"line":1385,"col":23,"offset":32139},"end":{"line":1385,"col":38,"offset":32154},"abstract_content":"sizeof*filearr"},"$FUN":{"start":{"line":1387,"col":9,"offset":32198},"end":{"line":1387,"col":16,"offset":32205},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1387,"col":17,"offset":32206},"end":{"line":1387,"col":24,"offset":32213},"abstract_content":"filearr"},"$N":{"start":{"line":1387,"col":26,"offset":32215},"end":{"line":1387,"col":30,"offset":32219},"abstract_content":"mlen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fdfbe94fb8bbe4536aca46f57e93400e41eba9f461932c1543bfacc3253c463eb21abe3796583c2be1d6e2e26e6ad191a48166fdd248a84f3fe9f1d5d50f4d7c_0","lines":"\t\t\t\t    realloc(filearr, mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1387,"col":9,"offset":32198},"end":{"line":1387,"col":31,"offset":32220},"extra":{"metavars":{"$FUN":{"start":{"line":1387,"col":9,"offset":32198},"end":{"line":1387,"col":16,"offset":32205},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"75b7068f90a888750ba03ca297ab12794cb1562599ad92021facfd7623d3d2c0e5f47a130cf0ef1f618a95dbf7400bb9ffd6c0507795596663df916c2d6168a7_1","lines":"\t\t\t\t    realloc(filearr, mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1389,"col":6,"offset":32266},"end":{"line":1389,"col":16,"offset":32276},"extra":{"metavars":{"$PTR":{"start":{"line":1389,"col":11,"offset":32271},"end":{"line":1389,"col":14,"offset":32274},"abstract_content":"mfn"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9cd8bbbfc4bebfa1ad085726ffee985f3cfbc8a0e7f6ffcfd090dd836ee0174b34006a11455497171dc25513048f1803cc98e0b686598849f9785a9fe12b533f_3","lines":"\t\t\t\t\tfree(mfn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1402,"col":5,"offset":32540},"end":{"line":1402,"col":22,"offset":32557},"extra":{"metavars":{"$PTR":{"start":{"line":1402,"col":10,"offset":32545},"end":{"line":1402,"col":20,"offset":32555},"abstract_content":"filearr[i]"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"379a1065b0328f5910384a3413f984914c8fe9196ac3ac86442d8a5362ec437b7609f701101f9e695a329618c1f58585ca5a5b77ff5ae207bbfa2fdbb796b5d1_0","lines":"\t\t\t\tfree(filearr[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1404,"col":4,"offset":32566},"end":{"line":1404,"col":18,"offset":32580},"extra":{"metavars":{"$PTR":{"start":{"line":1404,"col":9,"offset":32571},"end":{"line":1404,"col":16,"offset":32578},"abstract_content":"filearr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9b7fb195d61b1ae38f24e2409fbbdd8de1d3e22a584a7f2d10a568ada04f1fe266cf6588d33d4c425776d16a4226e517b070773dfa6f554c85101680ddc7e4db_0","lines":"\t\t\tfree(filearr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1455,"col":2,"offset":33628},"end":{"line":1523,"col":3,"offset":35047},"extra":{"metavars":{"$EXPR1":{"start":{"line":1455,"col":8,"offset":33634},"end":{"line":1455,"col":15,"offset":33641},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1455,"col":18,"offset":33644},"end":{"line":1455,"col":26,"offset":33652},"abstract_content":"UNSIGNED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7c5748802b4ccb3ba7d74c244e9b0e322243a73880cd11af56dd1503590b3dd6117efa1da9d093407a9214300e67be25595ce084a9478c7ee5bb37ea75a791f2_0","lines":"\tif (!(m->flag & UNSIGNED)) {\n\t\tswitch(m->type) {\n\t\t/*\n\t\t * Do not remove the casts below.  They are\n\t\t * vital.  When later compared with the data,\n\t\t * the sign extension must have happened.\n\t\t */\n\t\tcase FILE_BYTE:\n\t\t\tv = CAST(signed char,  v);\n\t\t\tbreak;\n\t\tcase FILE_SHORT:\n\t\tcase FILE_BESHORT:\n\t\tcase FILE_LESHORT:\n\t\t\tv = CAST(short, v);\n\t\t\tbreak;\n\t\tcase FILE_DATE:\n\t\tcase FILE_BEDATE:\n\t\tcase FILE_LEDATE:\n\t\tcase FILE_MEDATE:\n\t\tcase FILE_LDATE:\n\t\tcase FILE_BELDATE:\n\t\tcase FILE_LELDATE:\n\t\tcase FILE_MELDATE:\n\t\tcase FILE_LONG:\n\t\tcase FILE_BELONG:\n\t\tcase FILE_LELONG:\n\t\tcase FILE_MELONG:\n\t\tcase FILE_FLOAT:\n\t\tcase FILE_BEFLOAT:\n\t\tcase FILE_LEFLOAT:\n\t\t\tv = CAST(int32_t, v);\n\t\t\tbreak;\n\t\tcase FILE_QUAD:\n\t\tcase FILE_BEQUAD:\n\t\tcase FILE_LEQUAD:\n\t\tcase FILE_QDATE:\n\t\tcase FILE_QLDATE:\n\t\tcase FILE_QWDATE:\n\t\tcase FILE_BEQDATE:\n\t\tcase FILE_BEQLDATE:\n\t\tcase FILE_BEQWDATE:\n\t\tcase FILE_LEQDATE:\n\t\tcase FILE_LEQLDATE:\n\t\tcase FILE_LEQWDATE:\n\t\tcase FILE_DOUBLE:\n\t\tcase FILE_BEDOUBLE:\n\t\tcase FILE_LEDOUBLE:\n\t\t\tv = CAST(int64_t, v);\n\t\t\tbreak;\n\t\tcase FILE_STRING:\n\t\tcase FILE_PSTRING:\n\t\tcase FILE_BESTRING16:\n\t\tcase FILE_LESTRING16:\n\t\tcase FILE_REGEX:\n\t\tcase FILE_SEARCH:\n\t\tcase FILE_DEFAULT:\n\t\tcase FILE_INDIRECT:\n\t\tcase FILE_NAME:\n\t\tcase FILE_USE:\n\t\tcase FILE_CLEAR:\n\t\tcase FILE_DER:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t    file_magwarn(ms, \"cannot happen: m->type=%d\\n\",\n\t\t\t\t    m->type);\n\t\t\treturn ~0U;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1518,"col":4,"offset":34924},"end":{"line":1520,"col":18,"offset":35025},"extra":{"metavars":{"$EXPR1":{"start":{"line":1518,"col":8,"offset":34928},"end":{"line":1518,"col":17,"offset":34937},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1518,"col":20,"offset":34940},"end":{"line":1518,"col":31,"offset":34951},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_1","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t    file_magwarn(ms, \"cannot happen: m->type=%d\\n\",\n\t\t\t\t    m->type);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1644,"col":10,"offset":37543},"end":{"line":1644,"col":14,"offset":37547},"extra":{"metavars":{"$VAR":{"start":{"line":1644,"col":10,"offset":37543},"end":{"line":1644,"col":14,"offset":37547},"abstract_content":"cond"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7dc1811dc2741e7eb39dc61c7c488b064f42e3ba0f4b10adc2e1a2db516e824467d9f5b118e7c53d1a1648a099d2390cf306714ed10afd90c0d36f9879fc493_0","lines":"\tswitch (cond) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1647,"col":4,"offset":37627},"end":{"line":1648,"col":44,"offset":37699},"extra":{"metavars":{"$EXPR1":{"start":{"line":1647,"col":8,"offset":37631},"end":{"line":1647,"col":17,"offset":37640},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1647,"col":20,"offset":37643},"end":{"line":1647,"col":31,"offset":37654},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_2","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `if'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1656,"col":4,"offset":37827},"end":{"line":1657,"col":46,"offset":37901},"extra":{"metavars":{"$EXPR1":{"start":{"line":1656,"col":8,"offset":37831},"end":{"line":1656,"col":17,"offset":37840},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1656,"col":20,"offset":37843},"end":{"line":1656,"col":31,"offset":37854},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_3","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `elif'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1665,"col":4,"offset":38031},"end":{"line":1666,"col":46,"offset":38105},"extra":{"metavars":{"$EXPR1":{"start":{"line":1665,"col":8,"offset":38035},"end":{"line":1665,"col":17,"offset":38044},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1665,"col":20,"offset":38047},"end":{"line":1665,"col":31,"offset":38058},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_4","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"syntax error: `else'\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1693,"col":4,"offset":38577},"end":{"line":1695,"col":21,"offset":38673},"extra":{"metavars":{"$EXPR1":{"start":{"line":1693,"col":8,"offset":38581},"end":{"line":1693,"col":17,"offset":38590},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1693,"col":20,"offset":38593},"end":{"line":1693,"col":31,"offset":38604},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_5","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"indirect modifier `%c' \"\n\t\t\t\t\t\"invalid\", *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1733,"col":4,"offset":39350},"end":{"line":1734,"col":41,"offset":39435},"extra":{"metavars":{"$EXPR1":{"start":{"line":1733,"col":23,"offset":39369},"end":{"line":1733,"col":32,"offset":39378},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1733,"col":35,"offset":39381},"end":{"line":1733,"col":46,"offset":39392},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_6","lines":"\t\t\tif (have_range && (ms->flags & MAGIC_CHECK))\n\t\t\t\tfile_magwarn(ms, \"multiple ranges\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1803,"col":4,"offset":41091},"end":{"line":1805,"col":21,"offset":41185},"extra":{"metavars":{"$EXPR1":{"start":{"line":1803,"col":8,"offset":41095},"end":{"line":1803,"col":17,"offset":41104},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1803,"col":20,"offset":41107},"end":{"line":1803,"col":31,"offset":41118},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_7","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"string modifier `%c' \"\n\t\t\t\t\t\"invalid\", *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":35,"offset":42711},"end":{"line":1873,"col":26,"offset":42752},"extra":{"metavars":{"$FUN":{"start":{"line":1872,"col":35,"offset":42711},"end":{"line":1872,"col":42,"offset":42718},"abstract_content":"realloc"},"$ARG1":{"start":{"line":1872,"col":43,"offset":42719},"end":{"line":1872,"col":49,"offset":42725},"abstract_content":"me->->mp"},"$X":{"start":{"line":1873,"col":8,"offset":42734},"end":{"line":1873,"col":18,"offset":42744},"abstract_content":"sizeof*nm"},"$Y":{"start":{"line":1873,"col":22,"offset":42748},"end":{"line":1873,"col":25,"offset":42751},"abstract_content":"cnt"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"812952d996960618eb55995f7e53f11f89452b0278e8971d969615049422f00d2af4b3d24d936d9697a70ea0142a9dec96316e9eaaf10fe9cd67d6144c9ec959_0","lines":"\t\t\tif ((nm = CAST(struct magic *, realloc(me->mp,\n\t\t\t    sizeof(*nm) * cnt))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":35,"offset":42711},"end":{"line":1873,"col":26,"offset":42752},"extra":{"metavars":{"$FUN":{"start":{"line":1872,"col":35,"offset":42711},"end":{"line":1872,"col":42,"offset":42718},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"75b7068f90a888750ba03ca297ab12794cb1562599ad92021facfd7623d3d2c0e5f47a130cf0ef1f618a95dbf7400bb9ffd6c0507795596663df916c2d6168a7_2","lines":"\t\t\tif ((nm = CAST(struct magic *, realloc(me->mp,\n\t\t\t    sizeof(*nm) * cnt))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":33,"offset":43113},"end":{"line":1887,"col":44,"offset":43124},"extra":{"metavars":{"$X":{"start":{"line":1884,"col":29,"offset":43020},"end":{"line":1884,"col":38,"offset":43029},"abstract_content":"sizeof*m"},"$Y":{"start":{"line":1884,"col":42,"offset":43033},"end":{"line":1884,"col":53,"offset":43044},"abstract_content":"ALLOC_CHUNK"},"$FUN":{"start":{"line":1887,"col":33,"offset":43113},"end":{"line":1887,"col":39,"offset":43119},"abstract_content":"malloc"},"$N":{"start":{"line":1887,"col":40,"offset":43120},"end":{"line":1887,"col":43,"offset":43123},"abstract_content":"len"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6288072aed51f87a769806d9af3d87bba2c9ddfd16de180cb236cf513ed3f8b7b63653ed2c74a0108b9cb643e69f632939f83314da49e449b807382ca9a442f4_0","lines":"\t\tif ((m = CAST(struct magic *, malloc(len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":33,"offset":43113},"end":{"line":1887,"col":44,"offset":43124},"extra":{"metavars":{"$FUN":{"start":{"line":1887,"col":33,"offset":43113},"end":{"line":1887,"col":39,"offset":43119},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8637ec9b9d80cdfec760dac86329e3fc7bb29ecd0cebfea6501610af6ecb144622d38b479ebf4fdcde223bb1917238ec3f7cfc6f1900231c76438b00e9b2129_3","lines":"\t\tif ((m = CAST(struct magic *, malloc(len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1907,"col":3,"offset":43597},"end":{"line":1908,"col":48,"offset":43666},"extra":{"metavars":{"$EXPR1":{"start":{"line":1907,"col":7,"offset":43601},"end":{"line":1907,"col":14,"offset":43608},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1907,"col":17,"offset":43611},"end":{"line":1907,"col":23,"offset":43617},"abstract_content":"OFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5fb1c643b3e429189255d3091ca6cdd3a434f2937d2dbba797d5664882d4eaf01867baf277fde6d6b46b747930bdbd357b57554cb6e8076ccd49cc7e79707219_0","lines":"\t\tif (m->flag & OFFADD)\n\t\t\tm->flag = (m->flag & ~OFFADD) | INDIROFFADD;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1916,"col":2,"offset":43842},"end":{"line":1920,"col":3,"offset":44003},"extra":{"metavars":{"$EXPR1":{"start":{"line":1916,"col":29,"offset":43869},"end":{"line":1916,"col":36,"offset":43876},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1916,"col":40,"offset":43880},"end":{"line":1916,"col":60,"offset":43900},"abstract_content":"OFFADD|INDIROFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c77ed47ba8107b4e14562aee69836927a7ed01554f905b172f2c4f08cfcd0ef599d664888c20b9a8ae6cf403acce08578039b151720a9f9ab0475d421c4fdc8_0","lines":"\tif (m->cont_level == 0 && (m->flag & (OFFADD | INDIROFFADD))) {\n\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"relative offset at level 0\");\n\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1917,"col":3,"offset":43908},"end":{"line":1918,"col":51,"offset":43987},"extra":{"metavars":{"$EXPR1":{"start":{"line":1917,"col":7,"offset":43912},"end":{"line":1917,"col":16,"offset":43921},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1917,"col":19,"offset":43924},"end":{"line":1917,"col":30,"offset":43935},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_8","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"relative offset at level 0\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1925,"col":3,"offset":44112},"end":{"line":1926,"col":47,"offset":44187},"extra":{"metavars":{"$EXPR1":{"start":{"line":1925,"col":7,"offset":44116},"end":{"line":1925,"col":16,"offset":44125},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1925,"col":19,"offset":44128},"end":{"line":1925,"col":30,"offset":44139},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_9","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"offset `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1932,"col":2,"offset":44222},"end":{"line":2028,"col":3,"offset":46011},"extra":{"metavars":{"$EXPR1":{"start":{"line":1932,"col":6,"offset":44226},"end":{"line":1932,"col":13,"offset":44233},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1932,"col":16,"offset":44236},"end":{"line":1932,"col":21,"offset":44241},"abstract_content":"INDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e02d8430d20047b39d31a9228e34d5a9fe39a791712084ed7f1e27b42ad71b42d87178db628aa73db564dfbb9a8d2bba75a606a59c60008cebec15b3c15fc211_0","lines":"\tif (m->flag & INDIR) {\n\t\tm->in_type = FILE_LONG;\n\t\tm->in_offset = 0;\n\t\tm->in_op = 0;\n\t\t/*\n\t\t * read [.,lbs][+-]nnnnn)\n\t\t */\n\t\tif (*l == '.' || *l == ',') {\n\t\t\tif (*l == ',')\n\t\t\t\tm->in_op |= FILE_OPSIGNED;\n\t\t\tl++;\n\t\t\tswitch (*l) {\n\t\t\tcase 'l':\n\t\t\t\tm->in_type = FILE_LELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tm->in_type = FILE_BELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'm':\n\t\t\t\tm->in_type = FILE_MELONG;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 's':\n\t\t\t\tm->in_type = FILE_LESHORT;\n\t\t\t\tbreak;\n\t\t\tcase 'H':\n\t\t\tcase 'S':\n\t\t\t\tm->in_type = FILE_BESHORT;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\tcase 'b':\n\t\t\tcase 'C':\n\t\t\tcase 'B':\n\t\t\t\tm->in_type = FILE_BYTE;\n\t\t\t\tbreak;\n\t\t\tcase 'e':\n\t\t\tcase 'f':\n\t\t\tcase 'g':\n\t\t\t\tm->in_type = FILE_LEDOUBLE;\n\t\t\t\tbreak;\n\t\t\tcase 'E':\n\t\t\tcase 'F':\n\t\t\tcase 'G':\n\t\t\t\tm->in_type = FILE_BEDOUBLE;\n\t\t\t\tbreak;\n\t\t\tcase 'i':\n\t\t\t\tm->in_type = FILE_LEID3;\n\t\t\t\tbreak;\n\t\t\tcase 'I':\n\t\t\t\tm->in_type = FILE_BEID3;\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tm->in_type = FILE_LEQUAD;\n\t\t\t\tbreak;\n\t\t\tcase 'Q':\n\t\t\t\tm->in_type = FILE_BEQUAD;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"indirect offset type `%c' invalid\",\n\t\t\t\t\t    *l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl++;\n\t\t}\n\n\t\tif (*l == '~') {\n\t\t\tm->in_op |= FILE_OPINVERSE;\n\t\t\tl++;\n\t\t}\n\t\tif ((op = get_op(*l)) != -1) {\n\t\t\tm->in_op |= op;\n\t\t\tl++;\n\t\t}\n\t\tif (*l == '(') {\n\t\t\tm->in_op |= FILE_OPINDIRECT;\n\t\t\tl++;\n\t\t}\n\t\tif (isdigit(CAST(unsigned char, *l)) || *l == '-') {\n\t\t\tm->in_offset = CAST(int32_t, strtol(l, &t, 0));\n\t\t\tif (l == t) {\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl = t;\n\t\t}\n\t\tif (*l++ != ')' ||\n\t\t    ((m->in_op & FILE_OPINDIRECT) && *l++ != ')')) {\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");\n\t\t\treturn -1;\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1990,"col":5,"offset":45235},"end":{"line":1993,"col":14,"offset":45345},"extra":{"metavars":{"$EXPR1":{"start":{"line":1990,"col":9,"offset":45239},"end":{"line":1990,"col":18,"offset":45248},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1990,"col":21,"offset":45251},"end":{"line":1990,"col":32,"offset":45262},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_10","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"indirect offset type `%c' invalid\",\n\t\t\t\t\t    *l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2011,"col":3,"offset":45570},"end":{"line":2020,"col":4,"offset":45818},"extra":{"metavars":{"$EXPR1":{"start":{"line":2011,"col":44,"offset":45611},"end":{"line":2011,"col":45,"offset":45612},"abstract_content":"l","propagated_value":{"svalue_start":{"line":2011,"col":49,"offset":45616},"svalue_end":{"line":2011,"col":52,"offset":45619},"svalue_abstract_content":"'-'"}},"$EXPR2":{"start":{"line":2011,"col":49,"offset":45616},"end":{"line":2011,"col":52,"offset":45619},"abstract_content":"'-'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bf5c84d2845ee9278426c5ecf5b1059b1af052b4871aef26e30d08ebfd846e3b6c20baff7a9da2c3860c41633b9e5d87d630b299332bc3c0eb1282925301d135_0","lines":"\t\tif (isdigit(CAST(unsigned char, *l)) || *l == '-') {\n\t\t\tm->in_offset = CAST(int32_t, strtol(l, &t, 0));\n\t\t\tif (l == t) {\n\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tl = t;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2014,"col":5,"offset":45695},"end":{"line":2016,"col":39,"offset":45784},"extra":{"metavars":{"$EXPR1":{"start":{"line":2014,"col":9,"offset":45699},"end":{"line":2014,"col":18,"offset":45708},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2014,"col":21,"offset":45711},"end":{"line":2014,"col":32,"offset":45722},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_11","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"in_offset `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2021,"col":3,"offset":45821},"end":{"line":2027,"col":4,"offset":46008},"extra":{"metavars":{"$EXPR1":{"start":{"line":2022,"col":9,"offset":45848},"end":{"line":2022,"col":17,"offset":45856},"abstract_content":"m->->in_op"},"$EXPR2":{"start":{"line":2022,"col":20,"offset":45859},"end":{"line":2022,"col":35,"offset":45874},"abstract_content":"FILE_OPINDIRECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a859515852879c2d6bfb47307031689d8c03dc69718800b2bfaa1a06cbbc96f21c78773f80337a7eaf59a0d28f938a3266649f2ae9b81c8f76085e72b96fc753_0","lines":"\t\tif (*l++ != ')' ||\n\t\t    ((m->in_op & FILE_OPINDIRECT) && *l++ != ')')) {\n\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");\n\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2023,"col":4,"offset":45898},"end":{"line":2025,"col":43,"offset":45990},"extra":{"metavars":{"$EXPR1":{"start":{"line":2023,"col":8,"offset":45902},"end":{"line":2023,"col":17,"offset":45911},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2023,"col":20,"offset":45914},"end":{"line":2023,"col":31,"offset":45925},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_12","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms,\n\t\t\t\t    \"missing ')' in indirect offset\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2089,"col":3,"offset":47438},"end":{"line":2090,"col":45,"offset":47511},"extra":{"metavars":{"$EXPR1":{"start":{"line":2089,"col":7,"offset":47442},"end":{"line":2089,"col":16,"offset":47451},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2089,"col":19,"offset":47454},"end":{"line":2089,"col":30,"offset":47465},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_13","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"type `%s' invalid\", l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2101,"col":8,"offset":47762},"end":{"line":2102,"col":53,"offset":47843},"extra":{"metavars":{"$EXPR1":{"start":{"line":2101,"col":12,"offset":47766},"end":{"line":2101,"col":21,"offset":47775},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2101,"col":24,"offset":47778},"end":{"line":2101,"col":35,"offset":47789},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_14","lines":"\t\telse if (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"'~' invalid for string types\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2112,"col":5,"offset":48038},"end":{"line":2115,"col":22,"offset":48150},"extra":{"metavars":{"$EXPR1":{"start":{"line":2112,"col":9,"offset":48042},"end":{"line":2112,"col":18,"offset":48051},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2112,"col":21,"offset":48054},"end":{"line":2112,"col":32,"offset":48065},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_15","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t    \"invalid string/indirect op: \"\n\t\t\t\t\t    \"`%c'\", *t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2141,"col":4,"offset":48608},"end":{"line":2145,"col":5,"offset":48718},"extra":{"metavars":{"$EXPR1":{"start":{"line":2141,"col":8,"offset":48612},"end":{"line":2141,"col":17,"offset":48621},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2141,"col":20,"offset":48624},"end":{"line":2141,"col":31,"offset":48635},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_16","lines":"\t\t\tif (ms->flags & MAGIC_CHECK) {\n\t\t\t\tfile_magwarn(ms, \"%c= not supported\",\n\t\t\t\t    m->reln);\n\t\t\t\treturn -1;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2197,"col":7,"offset":49663},"end":{"line":2197,"col":12,"offset":49668},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2197,"col":7,"offset":49663},"end":{"line":2197,"col":8,"offset":49664},"abstract_content":"i"},"$SIGNED":{"start":{"line":2197,"col":11,"offset":49667},"end":{"line":2197,"col":12,"offset":49668},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_12","lines":"\tfor (i = 0; (m->desc[i++] = *l++) != '\\0' && i < sizeof(m->desc); )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2201,"col":3,"offset":49808},"end":{"line":2202,"col":60,"offset":49896},"extra":{"metavars":{"$EXPR1":{"start":{"line":2201,"col":7,"offset":49812},"end":{"line":2201,"col":16,"offset":49821},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2201,"col":19,"offset":49824},"end":{"line":2201,"col":30,"offset":49835},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_17","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"description `%s' truncated\", m->desc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2209,"col":9,"offset":50027},"end":{"line":2212,"col":3,"offset":50107},"extra":{"metavars":{"$EXPR1":{"start":{"line":2209,"col":13,"offset":50031},"end":{"line":2209,"col":22,"offset":50040},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2209,"col":25,"offset":50043},"end":{"line":2209,"col":36,"offset":50054},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_18","lines":"        if (ms->flags & MAGIC_CHECK) {\n\t\tif (check_format(ms, m) == -1)\n\t\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2293,"col":2,"offset":51969},"end":{"line":2293,"col":74,"offset":52041},"extra":{"metavars":{"$EXPR1":{"start":{"line":2293,"col":28,"offset":51995},"end":{"line":2293,"col":42,"offset":52009},"abstract_content":"me->->cont_count"},"$EXPR2":{"start":{"line":2293,"col":46,"offset":52013},"end":{"line":2293,"col":47,"offset":52014},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6b735366bcecad8400a7fbebee6247c26b30fc20866e9a473f0424e819c8c94cfe647be579dcf5a63067301a9e7df2a9defe1eec198a5922c7c334f049c44aa6_0","lines":"\tstruct magic *m = &me->mp[me->cont_count == 0 ? 0 : me->cont_count - 1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2297,"col":3,"offset":52118},"end":{"line":2297,"col":31,"offset":52146},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2297,"col":3,"offset":52118},"end":{"line":2297,"col":6,"offset":52121},"abstract_content":"len"},"$SIGNED":{"start":{"line":2297,"col":9,"offset":52124},"end":{"line":2297,"col":11,"offset":52126},"abstract_content":"nt"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0cf211fd1f499c968d39d1f1e5579e0cdb0c976223bfcd8e9aa318078e1407e38633f7317379c68986419a50b660357858f8d88bf8fcf862919cbacb6009aa7a_0","lines":"\t\tlen = nt ? strlen(buf) : len;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2310,"col":7,"offset":52446},"end":{"line":2310,"col":12,"offset":52451},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2310,"col":7,"offset":52446},"end":{"line":2310,"col":8,"offset":52447},"abstract_content":"i"},"$SIGNED":{"start":{"line":2310,"col":11,"offset":52450},"end":{"line":2310,"col":12,"offset":52451},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3c6995a4f62e426a8c03b04a8d5b4f229d911f97a90b90784f586912f685f48874ce1f29a3a9e0dc36439cbd6b56fc565871974ee21c28be40cf854608e8feac_13","lines":"\tfor (i = 0; *l && i < len && goodchar(*l, extra); buf[i++] = *l++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2316,"col":3,"offset":52580},"end":{"line":2318,"col":42,"offset":52697},"extra":{"metavars":{"$EXPR1":{"start":{"line":2316,"col":7,"offset":52584},"end":{"line":2316,"col":16,"offset":52593},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2316,"col":19,"offset":52596},"end":{"line":2316,"col":30,"offset":52607},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_19","lines":"\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\tfile_magwarn(ms, \"%s type `%s' truncated %\"\n\t\t\t    SIZE_T_FORMAT \"u\", name, line, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2386,"col":10,"offset":54220},"end":{"line":2386,"col":28,"offset":54238},"extra":{"metavars":{"$VAR":{"start":{"line":2386,"col":10,"offset":54220},"end":{"line":2386,"col":28,"offset":54238},"abstract_content":"file_formats[type]"},"$VAL1":{"start":{"line":2387,"col":7,"offset":54248},"end":{"line":2387,"col":20,"offset":54261},"abstract_content":"FILE_FMT_QUAD"},"$VAL2":{"start":{"line":2390,"col":7,"offset":54299},"end":{"line":2390,"col":19,"offset":54311},"abstract_content":"FILE_FMT_NUM"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d88c3a23f126dedecd0311dc6b5b0ce4e3ba423acdfc701b0c5d1609b659757a8d8e87af6c4876a650d71a216fc8fc4132aa6752a717b1fa35e49774d45b1c08_0","lines":"\tswitch (file_formats[type]) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2386,"col":10,"offset":54220},"end":{"line":2386,"col":28,"offset":54238},"extra":{"metavars":{"$VAR":{"start":{"line":2386,"col":10,"offset":54220},"end":{"line":2386,"col":28,"offset":54238},"abstract_content":"file_formats[type]"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f01147dd6c000f32e0bfdc33bded1976287ed0b9a222348be4ae1af7c6900a165d29f570e19d3b496001559ca4cec4837dce6d65402e8aa1ff673f7bce5c44d1_0","lines":"\tswitch (file_formats[type]) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2439,"col":11,"offset":55155},"end":{"line":2439,"col":17,"offset":55161},"extra":{"metavars":{"$VAR":{"start":{"line":2439,"col":11,"offset":55155},"end":{"line":2439,"col":17,"offset":55161},"abstract_content":"*ptr++"},"$VAL1":{"start":{"line":2442,"col":8,"offset":55279},"end":{"line":2442,"col":11,"offset":55282},"abstract_content":"'l'"},"$VAL2":{"start":{"line":2461,"col":8,"offset":55605},"end":{"line":2461,"col":11,"offset":55608},"abstract_content":"'h'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92db7839ed804ff56ec31731c6cc29ab80bc69c917645c31f73126b41a0f21d314293813c242e7a45f953591109a1cbee120013ad716f4829b738955942854d3_0","lines":"\t\tswitch (*ptr++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2642,"col":3,"offset":58778},"end":{"line":2642,"col":50,"offset":58825},"extra":{"metavars":{"$EXPR1":{"start":{"line":2642,"col":26,"offset":58801},"end":{"line":2642,"col":32,"offset":58807},"abstract_content":"action"},"$EXPR2":{"start":{"line":2642,"col":36,"offset":58811},"end":{"line":2642,"col":48,"offset":58823},"abstract_content":"FILE_COMPILE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5166288ab43dda9a6bde298cfccd8e8c286ed4e96de8619e19432229072854a3c059106f0b25904f57b0bd564f984fff440389b90c17fd94ed6ed152948bfb9d_0","lines":"\t\t*p = getstr(ms, m, *p, action == FILE_COMPILE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2644,"col":4,"offset":58849},"end":{"line":2646,"col":21,"offset":58950},"extra":{"metavars":{"$EXPR1":{"start":{"line":2644,"col":8,"offset":58853},"end":{"line":2644,"col":17,"offset":58862},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2644,"col":20,"offset":58865},"end":{"line":2644,"col":31,"offset":58876},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_20","lines":"\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\tfile_magwarn(ms, \"cannot get string from `%s'\",\n\t\t\t\t    m->value.s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2653,"col":5,"offset":59094},"end":{"line":2654,"col":33,"offset":59155},"extra":{"metavars":{"$EXPR1":{"start":{"line":2653,"col":9,"offset":59098},"end":{"line":2653,"col":18,"offset":59107},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2653,"col":21,"offset":59110},"end":{"line":2653,"col":32,"offset":59121},"abstract_content":"MAGIC_CHECK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"21b7319e2de6640a70ee73e4bdb44eb5a947c0c3dbb8167ddb1c52d5567fddce4f79eb1e347b3dd515f9f0c28d2d8fad5eca75cfc1b6f29ea1ef1069a6fc4a58_21","lines":"\t\t\t\tif (ms->flags & MAGIC_CHECK)\n\t\t\t\t\tfile_regerror(&rx, rc, ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2676,"col":7,"offset":59480},"end":{"line":2676,"col":17,"offset":59490},"extra":{"metavars":{"$EXPR":{"start":{"line":2676,"col":7,"offset":59480},"end":{"line":2676,"col":12,"offset":59485},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":2670,"col":11,"offset":59368},"svalue_end":{"line":2670,"col":12,"offset":59369},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2d75ab62771f1366783d1b0fcefab28725b8f4adbe30cd3cc6fb005abb47f19d8994c0b4050820f971be5d4fb18c14ca42eaf5632114080a824f50cdc0281f0_0","lines":"\t\tif (errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2684,"col":7,"offset":59628},"end":{"line":2684,"col":17,"offset":59638},"extra":{"metavars":{"$EXPR":{"start":{"line":2684,"col":7,"offset":59628},"end":{"line":2684,"col":12,"offset":59633},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":2682,"col":11,"offset":59587},"svalue_end":{"line":2682,"col":12,"offset":59588},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2d75ab62771f1366783d1b0fcefab28725b8f4adbe30cd3cc6fb005abb47f19d8994c0b4050820f971be5d4fb18c14ca42eaf5632114080a824f50cdc0281f0_1","lines":"\t\tif (errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2694,"col":11,"offset":59868},"end":{"line":2694,"col":33,"offset":59890},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2694,"col":11,"offset":59868},"end":{"line":2694,"col":13,"offset":59870},"abstract_content":"ts"},"$SIGNED":{"start":{"line":2694,"col":25,"offset":59882},"end":{"line":2694,"col":32,"offset":59889},"abstract_content":"m->->type"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8c4eebd895f2829501e742d4f61f0637ec50d677ea6e22dcc6cb4ad4636ff7acdd4c10ce65f2ef5343e68bc23672fa58d77c3f6af65b13b735a166648be99ebf_0","lines":"\t\t\tsize_t ts = typesize(m->type);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-sizeof","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2748,"col":17,"offset":61057},"end":{"line":2748,"col":34,"offset":61074},"extra":{"metavars":{"$PTR":{"start":{"line":2748,"col":24,"offset":61064},"end":{"line":2748,"col":34,"offset":61074},"abstract_content":"m->->value.s"}},"message":"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/467","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"125fb1a9ab70dd31c98720d2ab314bbf06a7ea0a43810a94dc230f4c920ccafb759a1ca75b01cd24bf15bcaac68f7051b38c93ac9c9cc6ceaa34359547940bac_0","lines":"\tsize_t  plen = sizeof(m->value.s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2762,"col":11,"offset":61344},"end":{"line":2762,"col":19,"offset":61352},"extra":{"metavars":{"$VAR":{"start":{"line":2762,"col":11,"offset":61344},"end":{"line":2762,"col":19,"offset":61352},"abstract_content":"c=*s++"},"$VAL2":{"start":{"line":2764,"col":9,"offset":61365},"end":{"line":2764,"col":13,"offset":61369},"abstract_content":"'\\0'"},"$VAL1":{"start":{"line":2770,"col":9,"offset":61461},"end":{"line":2770,"col":13,"offset":61465},"abstract_content":"'\\t'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dacab7868029832d574c75614f00421109608f9c9ed869229951e6e4a0408bb8d986d3c0e434564b523fde1f4bd6985216f24cae2bff2d4eaeb2eba03e96e7e8_0","lines":"\t\t\tswitch(c = *s++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2779,"col":6,"offset":61645},"end":{"line":2793,"col":24,"offset":62060},"extra":{"metavars":{"$EXPR1":{"start":{"line":2779,"col":18,"offset":61657},"end":{"line":2779,"col":22,"offset":61661},"abstract_content":"CAST"},"$EXPR2":{"start":{"line":2779,"col":43,"offset":61682},"end":{"line":2790,"col":7,"offset":61968},"abstract_content":"{{file_magwarn(ms\"no \"\"need to escape \"\"`%c'\"c)}}"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2d90a74f9806b036724a1d38383c984b27900fc74fa19d93c14032816a6a125472377e2b18fc6b150498d0717697fd65958ec012de5a782a486a827662948a43_0","lines":"\t\t\t\t\tif (isprint(CAST(unsigned char, c))) {\n\t\t\t\t\t\t/* Allow escaping of\n\t\t\t\t\t\t * ``relations'' */\n\t\t\t\t\t\tif (strchr(\"<>&^=!\", c) == NULL\n\t\t\t\t\t\t    && (m->type != FILE_REGEX ||\n\t\t\t\t\t\t    strchr(\"[]().*?^$|{}\", c)\n\t\t\t\t\t\t    == NULL)) {\n\t\t\t\t\t\t\tfile_magwarn(ms, \"no \"\n\t\t\t\t\t\t\t    \"need to escape \"\n\t\t\t\t\t\t\t    \"`%c'\", c);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfile_magwarn(ms,\n\t\t\t\t\t\t    \"unknown escape sequence: \"\n\t\t\t\t\t\t    \"\\\\%03o\", c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":38,"offset":65520},"end":{"line":3011,"col":61,"offset":65543},"extra":{"metavars":{"$FUN":{"start":{"line":3011,"col":38,"offset":65520},"end":{"line":3011,"col":44,"offset":65526},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b48ac8412a01eb1828809002c14fa605ffdfa271cb5d2d320c377309473287703f16b4be9de9db1d19d0674f9f22a4f478999397d0c02ae8539394d100182a1_3","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":38,"offset":65520},"end":{"line":3011,"col":61,"offset":65543},"extra":{"metavars":{"$CNT":{"start":{"line":3011,"col":45,"offset":65527},"end":{"line":3011,"col":46,"offset":65528},"abstract_content":"1"},"$LEN":{"start":{"line":3011,"col":48,"offset":65530},"end":{"line":3011,"col":59,"offset":65541},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d213af7c01f06a101614d1ff0d6985bbbc4e01e5ae53042f2f251ff7d5d73489d03aa54eaeacc3796a5be82435d8223795a8bf4d55c64bf18af5b860b73ef2c3_1","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":38,"offset":66038},"end":{"line":3039,"col":61,"offset":66061},"extra":{"metavars":{"$FUN":{"start":{"line":3039,"col":38,"offset":66038},"end":{"line":3039,"col":44,"offset":66044},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b48ac8412a01eb1828809002c14fa605ffdfa271cb5d2d320c377309473287703f16b4be9de9db1d19d0674f9f22a4f478999397d0c02ae8539394d100182a1_4","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":38,"offset":66038},"end":{"line":3039,"col":61,"offset":66061},"extra":{"metavars":{"$CNT":{"start":{"line":3039,"col":45,"offset":66045},"end":{"line":3039,"col":46,"offset":66046},"abstract_content":"1"},"$LEN":{"start":{"line":3039,"col":48,"offset":66048},"end":{"line":3039,"col":59,"offset":66059},"abstract_content":"sizeof*map"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d213af7c01f06a101614d1ff0d6985bbbc4e01e5ae53042f2f251ff7d5d73489d03aa54eaeacc3796a5be82435d8223795a8bf4d55c64bf18af5b860b73ef2c3_2","lines":"\tif ((map = CAST(struct magic_map *, calloc(1, sizeof(*map)))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3049,"col":2,"offset":66239},"end":{"line":3050,"col":14,"offset":66302},"extra":{"metavars":{"$EXPR1":{"start":{"line":3049,"col":25,"offset":66262},"end":{"line":3049,"col":33,"offset":66270},"abstract_content":"O_RDONLY"},"$EXPR2":{"start":{"line":3049,"col":34,"offset":66271},"end":{"line":3049,"col":42,"offset":66279},"abstract_content":"O_BINARY"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68e53363f623e73e9aef3476269c1d4fc5d7d8284a8d9abdbb50945b747b8ed4f2eda78389cd8648e7331d536356ac5f202596d67ddec50592f1fbdd3ccd7d17_0","lines":"\tif ((fd = open(dbname, O_RDONLY|O_BINARY)) == -1)\n\t\tgoto error;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3049,"col":12,"offset":66249},"end":{"line":3049,"col":43,"offset":66280},"extra":{"metavars":{"$FUN":{"start":{"line":3049,"col":12,"offset":66249},"end":{"line":3049,"col":16,"offset":66253},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8124d53f5adb0d1a4fa9b4eeac93179845d9de48b938888a7f6ef88884fab079924186be55dfc1917d4baa4cd585562bc78b7aa24ac202c8e177adc172a2f11c_0","lines":"\tif ((fd = open(dbname, O_RDONLY|O_BINARY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3052,"col":6,"offset":66309},"end":{"line":3052,"col":20,"offset":66323},"extra":{"metavars":{"$FUN":{"start":{"line":3052,"col":6,"offset":66309},"end":{"line":3052,"col":11,"offset":66314},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8d0c6a6d91c81b247c0345da4ac0d07168476feecaecb98001d3e7d09613b3ba24afb63dedee90c5825c913be7ce38b77dd4cc0824bafcfe27389a1384d59361_0","lines":"\tif (fstat(fd, &st) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3065,"col":2,"offset":66645},"end":{"line":3069,"col":3,"offset":66848},"extra":{"metavars":{"$EXPR1":{"start":{"line":3065,"col":50,"offset":66693},"end":{"line":3065,"col":59,"offset":66702},"abstract_content":"PROT_READ"},"$EXPR2":{"start":{"line":3065,"col":60,"offset":66703},"end":{"line":3065,"col":70,"offset":66713},"abstract_content":"PROT_WRITE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"735669c1264be6b3dbe59584040376742655dd90649d49601b87dea0cef3f268e2f0f91a0131de983d85c7521f297f4a59f5fdd4dbb3a2c4889c5fbae103120d_0","lines":"\tif ((map->p = mmap(0, CAST(size_t, st.st_size), PROT_READ|PROT_WRITE,\n\t    MAP_PRIVATE|MAP_FILE, fd, CAST(off_t, 0))) == MAP_FAILED) {\n\t\tfile_error(ms, errno, \"cannot map `%s'\", dbname);\n\t\tgoto error;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3072,"col":29,"offset":66913},"end":{"line":3072,"col":45,"offset":66929},"extra":{"metavars":{"$FUN":{"start":{"line":3072,"col":29,"offset":66913},"end":{"line":3072,"col":35,"offset":66919},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c8637ec9b9d80cdfec760dac86329e3fc7bb29ecd0cebfea6501610af6ecb144622d38b479ebf4fdcde223bb1917238ec3f7cfc6f1900231c76438b00e9b2129_4","lines":"\tif ((map->p = CAST(void *, malloc(map->len))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3076,"col":6,"offset":66993},"end":{"line":3076,"col":32,"offset":67019},"extra":{"metavars":{"$FUN":{"start":{"line":3076,"col":6,"offset":66993},"end":{"line":3076,"col":10,"offset":66997},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8bb1d3b08d251cf45cb76de8ff265fd286ef4eb490988a5b386b243b77e13117e2ea6d713eecd8b6f8ca71bafef84743ad938c2c1afe68340d4ad60af128e295_0","lines":"\tif (read(fd, map->p, map->len) != (ssize_t)map->len) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3077,"col":3,"offset":67046},"end":{"line":3077,"col":19,"offset":67062},"extra":{"metavars":{"$FUN":{"start":{"line":3077,"col":3,"offset":67046},"end":{"line":3077,"col":15,"offset":67058},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b3d9fbe60024a7b67dfde556db05f8666217028f6b541bda0d9850256d7cc0a3a3447d9b5d009659fac883d40e4b231781117c195b30c371c12ae0acf31d4937_0","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3096,"col":2,"offset":67393},"end":{"line":3096,"col":15,"offset":67406},"extra":{"metavars":{"$PTR":{"start":{"line":3096,"col":7,"offset":67398},"end":{"line":3096,"col":13,"offset":67404},"abstract_content":"dbname","propagated_value":{"svalue_start":{"line":3045,"col":11,"offset":66181},"svalue_end":{"line":3045,"col":30,"offset":66200},"svalue_abstract_content":"mkdbname(ms fn 0)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69d16691bec7f6830a4425053a359056527db68b29bb8a2e3ec13443d361a3286a8e64165730ab7957fb798d57be7c1ec0579ed74f60baf08981c25917b7a488_0","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3103,"col":2,"offset":67487},"end":{"line":3103,"col":6,"offset":67491},"extra":{"metavars":{"$PTR":{"start":{"line":3096,"col":7,"offset":67398},"end":{"line":3096,"col":13,"offset":67404},"abstract_content":"dbname","propagated_value":{"svalue_start":{"line":3045,"col":11,"offset":66181},"svalue_end":{"line":3045,"col":30,"offset":66200},"svalue_abstract_content":"mkdbname(ms fn 0)"}},"$FREE":{"start":{"line":3103,"col":2,"offset":67487},"end":{"line":3103,"col":6,"offset":67491},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75ee2932cfc7e30302f64c2b76c1fa1ebe6c4600bc3b039efade271b6d914ce4502c69fb6a1a515b58774b8f2d25036ec1e71cda0478bcb3308ccd8656a59148_0","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3103,"col":2,"offset":67487},"end":{"line":3103,"col":15,"offset":67500},"extra":{"metavars":{"$PTR":{"start":{"line":3103,"col":7,"offset":67492},"end":{"line":3103,"col":13,"offset":67498},"abstract_content":"dbname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69d16691bec7f6830a4425053a359056527db68b29bb8a2e3ec13443d361a3286a8e64165730ab7957fb798d57be7c1ec0579ed74f60baf08981c25917b7a488_1","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3186,"col":2,"offset":69458},"end":{"line":3190,"col":3,"offset":69600},"extra":{"metavars":{"$EXPR1":{"start":{"line":3186,"col":25,"offset":69481},"end":{"line":3186,"col":33,"offset":69489},"abstract_content":"O_WRONLY"},"$EXPR2":{"start":{"line":3186,"col":34,"offset":69490},"end":{"line":3186,"col":41,"offset":69497},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4476a5a5ae7cc77521b8bb1ef01c5567d48729bc92fb59a65aedec4dd5075ee3fe336534ae46c02c2c1a509b80023917234110cdb1b44201477d52e62975a20e_0","lines":"\tif ((fd = open(dbname, O_WRONLY|O_CREAT|O_TRUNC|O_BINARY, 0644)) == -1)\n\t{\n\t\tfile_error(ms, errno, \"cannot open `%s'\", dbname);\n\t\tgoto out;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3186,"col":12,"offset":69468},"end":{"line":3186,"col":65,"offset":69521},"extra":{"metavars":{"$FUN":{"start":{"line":3186,"col":12,"offset":69468},"end":{"line":3186,"col":16,"offset":69472},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8124d53f5adb0d1a4fa9b4eeac93179845d9de48b938888a7f6ef88884fab079924186be55dfc1917d4baa4cd585562bc78b7aa24ac202c8e177adc172a2f11c_1","lines":"\tif ((fd = open(dbname, O_WRONLY|O_CREAT|O_TRUNC|O_BINARY, 0644)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3194,"col":2,"offset":69677},"end":{"line":3194,"col":36,"offset":69711},"extra":{"metavars":{"$FUN":{"start":{"line":3194,"col":2,"offset":69677},"end":{"line":3194,"col":8,"offset":69683},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5c4616894247fb015b77b6ced5605bcc0bdd1c1c0b49380bee53df8736c3e5ec1abbef774dbb15dc05afc44c9c75cb22690532b55f9cfe91a975df5f89daed1d_1","lines":"\tmemcpy(hdr.h + 2, map->nmagic, nm);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3215,"col":2,"offset":70135},"end":{"line":3215,"col":15,"offset":70148},"extra":{"metavars":{"$PTR":{"start":{"line":3215,"col":7,"offset":70140},"end":{"line":3215,"col":13,"offset":70146},"abstract_content":"dbname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"69d16691bec7f6830a4425053a359056527db68b29bb8a2e3ec13443d361a3286a8e64165730ab7957fb798d57be7c1ec0579ed74f60baf08981c25917b7a488_2","lines":"\tfree(dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3248,"col":2,"offset":70683},"end":{"line":3257,"col":3,"offset":70904},"extra":{"metavars":{"$EXPR1":{"start":{"line":3248,"col":6,"offset":70687},"end":{"line":3248,"col":15,"offset":70696},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":3248,"col":18,"offset":70699},"end":{"line":3248,"col":28,"offset":70709},"abstract_content":"MAGIC_MIME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5cf9dd99532d709222cb5db4f8fc7b62dc331864257174d5c2d7593e727cdc0913dfd6027caabb6154e8bfe052a6e80150e24fcebfc2d15a6140d134d8a039db_0","lines":"\tif (ms->flags & MAGIC_MIME) {\n\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)\n\t\t    < 0)\n\t\t\treturn NULL;\n\t\tif (access(buf, R_OK) != -1) {\n\t\t\tms->flags &= MAGIC_MIME_TYPE;\n\t\t\treturn buf;\n\t\t}\n\t\tfree(buf);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3249,"col":7,"offset":70719},"end":{"line":3249,"col":64,"offset":70776},"extra":{"metavars":{"$FUN":{"start":{"line":3249,"col":7,"offset":70719},"end":{"line":3249,"col":15,"offset":70727},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2fd8b0f8f094e11c7b22ddf8d905755a6455820ddeb8feec300a2adeb1c81ad338edce1c2dcfda7b223bf27f0e6fc73e6b584c57f75afca5ee79371db7dbd300_1","lines":"\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3249,"col":47,"offset":70759},"end":{"line":3249,"col":53,"offset":70765},"extra":{"metavars":{"$PTR1":{"start":{"line":3249,"col":47,"offset":70759},"end":{"line":3249,"col":48,"offset":70760},"abstract_content":"q"},"$PTR2":{"start":{"line":3249,"col":51,"offset":70763},"end":{"line":3249,"col":53,"offset":70765},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0a077b03b12a226af59b9ef4aae4cc4e4d0308d6001e1bce8ca4d352b2aa88c6138b3ee9996b3bd54371ee35a6094422a2a4d040802178695fcfbcc4938ccfc_0","lines":"\t\tif (asprintf(&buf, \"%.*s.mime%s\", CAST(int, q - fn), fn, ext)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3252,"col":7,"offset":70810},"end":{"line":3252,"col":24,"offset":70827},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"12528bc4f88d147d1a612fbaab154c91e21c3faf1ad6fd6ca5415e678a24479539a6fddad1b998409e974f092fc7ad1ac78077d3117c9c908aad04a92a0581be_2","lines":"\t\tif (access(buf, R_OK) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3252,"col":7,"offset":70810},"end":{"line":3252,"col":24,"offset":70827},"extra":{"metavars":{"$FUN":{"start":{"line":3252,"col":7,"offset":70810},"end":{"line":3252,"col":13,"offset":70816},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c0a2d8178380fb651bab2e4b3493c451679dee70cfa2a528fe4e354059a2dd0f23fc66580b92462a6d6235039f7c09fa99a343b7d0223a3fbe64488b34ef6eed_0","lines":"\t\tif (access(buf, R_OK) != -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3256,"col":3,"offset":70891},"end":{"line":3256,"col":13,"offset":70901},"extra":{"metavars":{"$PTR":{"start":{"line":3256,"col":8,"offset":70896},"end":{"line":3256,"col":11,"offset":70899},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d27bc5758c5076225aa7705d13a7cf72e20bdceb42ca5628ddcba63e8bc433ad7c27cca2072fc8a8f9ad5d9d75995c59c67b1b75de0e3839a5cd12906ad736d5_0","lines":"\t\tfree(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3258,"col":6,"offset":70910},"end":{"line":3258,"col":58,"offset":70962},"extra":{"metavars":{"$FUN":{"start":{"line":3258,"col":6,"offset":70910},"end":{"line":3258,"col":14,"offset":70918},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2fd8b0f8f094e11c7b22ddf8d905755a6455820ddeb8feec300a2adeb1c81ad338edce1c2dcfda7b223bf27f0e6fc73e6b584c57f75afca5ee79371db7dbd300_2","lines":"\tif (asprintf(&buf, \"%.*s%s\", CAST(int, q - fn), fn, ext) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3258,"col":41,"offset":70945},"end":{"line":3258,"col":47,"offset":70951},"extra":{"metavars":{"$PTR1":{"start":{"line":3258,"col":41,"offset":70945},"end":{"line":3258,"col":42,"offset":70946},"abstract_content":"q"},"$PTR2":{"start":{"line":3258,"col":45,"offset":70949},"end":{"line":3258,"col":47,"offset":70951},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b0a077b03b12a226af59b9ef4aae4cc4e4d0308d6001e1bce8ca4d352b2aa88c6138b3ee9996b3bd54371ee35a6094422a2a4d040802178695fcfbcc4938ccfc_1","lines":"\tif (asprintf(&buf, \"%.*s%s\", CAST(int, q - fn), fn, ext) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3379,"col":9,"offset":73039},"end":{"line":3379,"col":16,"offset":73046},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3379,"col":9,"offset":73039},"end":{"line":3379,"col":12,"offset":73042},"abstract_content":"len"},"$SIGNED":{"start":{"line":3379,"col":15,"offset":73045},"end":{"line":3379,"col":16,"offset":73046},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9fa14be285c7e4aae4696bdaedcc45325cbf54fe74c7f50acb792a7e3cd47715617b3b4f9b46500747143f4d549f70ca9293f35e91a3ffc7b1c9318b326ab1bc_0","lines":"\tsize_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3388,"col":3,"offset":73241},"end":{"line":3388,"col":12,"offset":73250},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3388,"col":3,"offset":73241},"end":{"line":3388,"col":5,"offset":73243},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3388,"col":10,"offset":73248},"end":{"line":3388,"col":11,"offset":73249},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2a4787628740a71acdd94d51b14d02bcc9867796f8d7c637a2c63aba90b6a1f73ecc2f2be51af1b656e37837e2dfa11320df4ca71a6aa08cb38b80da136bb873_0","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3389,"col":3,"offset":73254},"end":{"line":3389,"col":12,"offset":73263},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3389,"col":3,"offset":73254},"end":{"line":3389,"col":5,"offset":73256},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3389,"col":10,"offset":73261},"end":{"line":3389,"col":11,"offset":73262},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63b04251a62250312eee08df213fd30becc1102b209f6001098c9d57ba1b7a79aa4877b645c71f1eb9eefa62ede83ad75c0581beb4adf3cdef7c19443ae60db3_0","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3390,"col":3,"offset":73267},"end":{"line":3390,"col":23,"offset":73287},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3390,"col":3,"offset":73267},"end":{"line":3390,"col":6,"offset":73270},"abstract_content":"len"},"$SIGNED":{"start":{"line":3390,"col":16,"offset":73280},"end":{"line":3390,"col":17,"offset":73281},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e8d8c373e2f630ca5aceb6b7b0a3117ad91c6341c6ad92a299a4479cc5269cac0f708e79dd6bb662c75cc150a472d4b69113546bc91f812ad05be9359a76cee3_0","lines":"\t\tlen = (s1 << 8) | s0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3393,"col":3,"offset":73320},"end":{"line":3393,"col":12,"offset":73329},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3393,"col":3,"offset":73320},"end":{"line":3393,"col":5,"offset":73322},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3393,"col":10,"offset":73327},"end":{"line":3393,"col":11,"offset":73328},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2a4787628740a71acdd94d51b14d02bcc9867796f8d7c637a2c63aba90b6a1f73ecc2f2be51af1b656e37837e2dfa11320df4ca71a6aa08cb38b80da136bb873_1","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3394,"col":3,"offset":73333},"end":{"line":3394,"col":12,"offset":73342},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3394,"col":3,"offset":73333},"end":{"line":3394,"col":5,"offset":73335},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3394,"col":10,"offset":73340},"end":{"line":3394,"col":11,"offset":73341},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63b04251a62250312eee08df213fd30becc1102b209f6001098c9d57ba1b7a79aa4877b645c71f1eb9eefa62ede83ad75c0581beb4adf3cdef7c19443ae60db3_1","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3395,"col":3,"offset":73346},"end":{"line":3395,"col":23,"offset":73366},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3395,"col":3,"offset":73346},"end":{"line":3395,"col":6,"offset":73349},"abstract_content":"len"},"$SIGNED":{"start":{"line":3395,"col":16,"offset":73359},"end":{"line":3395,"col":17,"offset":73360},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e8d8c373e2f630ca5aceb6b7b0a3117ad91c6341c6ad92a299a4479cc5269cac0f708e79dd6bb662c75cc150a472d4b69113546bc91f812ad05be9359a76cee3_1","lines":"\t\tlen = (s0 << 8) | s1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3398,"col":3,"offset":73399},"end":{"line":3398,"col":12,"offset":73408},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3398,"col":3,"offset":73399},"end":{"line":3398,"col":5,"offset":73401},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3398,"col":10,"offset":73406},"end":{"line":3398,"col":11,"offset":73407},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2a4787628740a71acdd94d51b14d02bcc9867796f8d7c637a2c63aba90b6a1f73ecc2f2be51af1b656e37837e2dfa11320df4ca71a6aa08cb38b80da136bb873_2","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3399,"col":3,"offset":73412},"end":{"line":3399,"col":12,"offset":73421},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3399,"col":3,"offset":73412},"end":{"line":3399,"col":5,"offset":73414},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3399,"col":10,"offset":73419},"end":{"line":3399,"col":11,"offset":73420},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63b04251a62250312eee08df213fd30becc1102b209f6001098c9d57ba1b7a79aa4877b645c71f1eb9eefa62ede83ad75c0581beb4adf3cdef7c19443ae60db3_2","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3400,"col":3,"offset":73425},"end":{"line":3400,"col":12,"offset":73434},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3400,"col":3,"offset":73425},"end":{"line":3400,"col":5,"offset":73427},"abstract_content":"s2"},"$SIGNED":{"start":{"line":3400,"col":10,"offset":73432},"end":{"line":3400,"col":11,"offset":73433},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"409a9ba84b3315a3eaf6197d28a6946318152f7267b25d7ba6355d4d9f5087a023427d52d85b3175b4b2620993c8b85c6be51b930f4815b98c3ebf52c7c343c4_0","lines":"\t\ts2 = s[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3401,"col":3,"offset":73438},"end":{"line":3401,"col":12,"offset":73447},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3401,"col":3,"offset":73438},"end":{"line":3401,"col":5,"offset":73440},"abstract_content":"s3"},"$SIGNED":{"start":{"line":3401,"col":10,"offset":73445},"end":{"line":3401,"col":11,"offset":73446},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"31fd2dfe77991700dd12406b040ecccbd7ac6d39ded2ed16c0bbe852dc85d671443d1d32cc3871ecf579c55a184a16b5a476ec52ff5e621f0178ce96e77d2735_0","lines":"\t\ts3 = s[3];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3402,"col":3,"offset":73451},"end":{"line":3402,"col":49,"offset":73497},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3402,"col":3,"offset":73451},"end":{"line":3402,"col":6,"offset":73454},"abstract_content":"len"},"$SIGNED":{"start":{"line":3402,"col":16,"offset":73464},"end":{"line":3402,"col":18,"offset":73466},"abstract_content":"24"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"752ff48d86bcae74ec9004637a2f4b97febe6a1b987ffa724fa2b826bd4c50b0a0f562cff81ad93fee8fa1c760b467434be291feef16597fe128646400b2976a_0","lines":"\t\tlen = (s3 << 24) | (s2 << 16) | (s1 << 8) | s0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3405,"col":3,"offset":73530},"end":{"line":3405,"col":12,"offset":73539},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3405,"col":3,"offset":73530},"end":{"line":3405,"col":5,"offset":73532},"abstract_content":"s0"},"$SIGNED":{"start":{"line":3405,"col":10,"offset":73537},"end":{"line":3405,"col":11,"offset":73538},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2a4787628740a71acdd94d51b14d02bcc9867796f8d7c637a2c63aba90b6a1f73ecc2f2be51af1b656e37837e2dfa11320df4ca71a6aa08cb38b80da136bb873_3","lines":"\t\ts0 = s[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3406,"col":3,"offset":73543},"end":{"line":3406,"col":12,"offset":73552},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3406,"col":3,"offset":73543},"end":{"line":3406,"col":5,"offset":73545},"abstract_content":"s1"},"$SIGNED":{"start":{"line":3406,"col":10,"offset":73550},"end":{"line":3406,"col":11,"offset":73551},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63b04251a62250312eee08df213fd30becc1102b209f6001098c9d57ba1b7a79aa4877b645c71f1eb9eefa62ede83ad75c0581beb4adf3cdef7c19443ae60db3_3","lines":"\t\ts1 = s[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3407,"col":3,"offset":73556},"end":{"line":3407,"col":12,"offset":73565},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3407,"col":3,"offset":73556},"end":{"line":3407,"col":5,"offset":73558},"abstract_content":"s2"},"$SIGNED":{"start":{"line":3407,"col":10,"offset":73563},"end":{"line":3407,"col":11,"offset":73564},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"409a9ba84b3315a3eaf6197d28a6946318152f7267b25d7ba6355d4d9f5087a023427d52d85b3175b4b2620993c8b85c6be51b930f4815b98c3ebf52c7c343c4_1","lines":"\t\ts2 = s[2];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3408,"col":3,"offset":73569},"end":{"line":3408,"col":12,"offset":73578},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3408,"col":3,"offset":73569},"end":{"line":3408,"col":5,"offset":73571},"abstract_content":"s3"},"$SIGNED":{"start":{"line":3408,"col":10,"offset":73576},"end":{"line":3408,"col":11,"offset":73577},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"31fd2dfe77991700dd12406b040ecccbd7ac6d39ded2ed16c0bbe852dc85d671443d1d32cc3871ecf579c55a184a16b5a476ec52ff5e621f0178ce96e77d2735_1","lines":"\t\ts3 = s[3];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3409,"col":3,"offset":73582},"end":{"line":3409,"col":49,"offset":73628},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":3409,"col":3,"offset":73582},"end":{"line":3409,"col":6,"offset":73585},"abstract_content":"len"},"$SIGNED":{"start":{"line":3409,"col":16,"offset":73595},"end":{"line":3409,"col":18,"offset":73597},"abstract_content":"24"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"752ff48d86bcae74ec9004637a2f4b97febe6a1b987ffa724fa2b826bd4c50b0a0f562cff81ad93fee8fa1c760b467434be291feef16597fe128646400b2976a_1","lines":"\t\tlen = (s0 << 24) | (s1 << 16) | (s2 << 8) | s3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3415,"col":2,"offset":73682},"end":{"line":3416,"col":38,"offset":73770},"extra":{"metavars":{"$EXPR1":{"start":{"line":3415,"col":6,"offset":73686},"end":{"line":3415,"col":18,"offset":73698},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":3415,"col":21,"offset":73701},"end":{"line":3415,"col":51,"offset":73731},"abstract_content":"PSTRING_LENGTH_INCLUDES_ITSELF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"83fdefddf4a1924a575b95e6d083c69ad493dc7a5b24082148566d6d67b1be40bf4eea2f81aab7bde310cb6591bc3c7247afb6b2a90d2e637b2889c6a8522492_0","lines":"\tif (m->str_flags & PSTRING_LENGTH_INCLUDES_ITSELF)\n\t\tlen -= file_pstring_length_size(m);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":55,"col":3,"offset":1503},"end":{"line":55,"col":24,"offset":1524},"extra":{"metavars":{"$RET":{"start":{"line":55,"col":3,"offset":1503},"end":{"line":55,"col":11,"offset":1511},"abstract_content":"filename"},"$FUN":{"start":{"line":55,"col":14,"offset":1514},"end":{"line":55,"col":20,"offset":1520},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8883d3f4d4a89308ff7c01c2ff74e6f82c5c479dbdda83ebce7dcaa3e6efcfae553bd27fb8e9986537e6c7bc086b5af159fcb9a25b336c1a00aeeef4f599b4b2_0","lines":"\t\tfilename = strdup(fn);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-mktemp-tmpnam-tempnam","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":56,"col":23,"offset":1548},"end":{"line":56,"col":43,"offset":1568},"extra":{"metavars":{},"message":"Creating and using insecure temporary files can leave application and system data vulnerable to attack.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/377","https://cwe.mitre.org/data/definitions/367"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"a54275ff221834e9dae40efc3a40f7304c1f64e760aff9609564a8d5da076fefcd84a08df8ed305c59e99bec9fe6600e9d4b4ea7096ac5892e3d47e9c0a059a6_0","lines":"\telse if ((filename = tempnam(\"./\", \"tmp\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":56,"col":23,"offset":1548},"end":{"line":56,"col":43,"offset":1568},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":23,"offset":1548},"end":{"line":56,"col":30,"offset":1555},"abstract_content":"tempnam"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf4f2614445806f1adc20c278a0c15659bef508f9452a4107af0a834f6bb19134647ee7de24e89c41c5fa4bf87ce8ee953a873cfbf940ac7ea4d40dc5d6dc0df_0","lines":"\telse if ((filename = tempnam(\"./\", \"tmp\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":61,"col":2,"offset":1707},"end":{"line":61,"col":46,"offset":1751},"extra":{"metavars":{"$1":{"start":{"line":1,"col":2,"offset":1},"end":{"line":1,"col":7,"offset":6},"abstract_content":"split"},"$FUN":{"start":{"line":61,"col":2,"offset":1707},"end":{"line":61,"col":12,"offset":1717},"abstract_content":"_splitpath"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a25880d9a6b1bbddb212046a41f6f9a363fcab4b9568ef953d71e3e162811ec9b1c581a585c9f6f7ee1dc05a0f71a4cc94c2000c6440c8bbe1c536255fbdd279_0","lines":"\t_splitpath(filename, drive, dir, fname, ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":62,"col":8,"offset":1760},"end":{"line":65,"col":30,"offset":1862},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"%s%s%s%s\""},"$BUF":{"start":{"line":62,"col":16,"offset":1768},"end":{"line":62,"col":20,"offset":1772},"abstract_content":"path"},"$FMT":{"start":{"line":62,"col":22,"offset":1774},"end":{"line":62,"col":32,"offset":1784},"abstract_content":"\"%s%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"e4c2976a1e9cbf29bfb2e61d01177e22c089641182baa981641ed1222739f1d37089d083e51df5d53fa7841da0be74621e4bad9a8cc900eb6b30c165031ee336_0","lines":"\t(void)sprintf(path, \"%s%s%s%s\", drive,\n\t\t(*dir == '\\0') ? \"./\" : dir,\n\t\tfname,\n\t\t(*ext == '\\0') ? \".\" : ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":62,"col":8,"offset":1760},"end":{"line":65,"col":30,"offset":1862},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":8,"offset":1760},"end":{"line":62,"col":15,"offset":1767},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff6e33cc542e3531ffa0102226dea31d506f8a7138a7d1f2ce4a92eebb70a03bc93572724ef7dd6e77f0d6c12d4e2aca29faee8a3ce9c623414a0074337c67f4_0","lines":"\t(void)sprintf(path, \"%s%s%s%s\", drive,\n\t\t(*dir == '\\0') ? \"./\" : dir,\n\t\tfname,\n\t\t(*ext == '\\0') ? \".\" : ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":62,"col":8,"offset":1760},"end":{"line":65,"col":30,"offset":1862},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"%s%s%s%s\""},"$TYPE":{"start":{"line":49,"col":2,"offset":1339},"end":{"line":49,"col":6,"offset":1343},"abstract_content":"char"},"$LEN":{"start":{"line":49,"col":23,"offset":1360},"end":{"line":49,"col":32,"offset":1369},"abstract_content":"_MAX_PATH"},"$FUN":{"start":{"line":62,"col":8,"offset":1760},"end":{"line":62,"col":15,"offset":1767},"abstract_content":"sprintf"},"$BUF":{"start":{"line":62,"col":16,"offset":1768},"end":{"line":62,"col":20,"offset":1772},"abstract_content":"path"},"$FMT":{"start":{"line":62,"col":22,"offset":1774},"end":{"line":62,"col":32,"offset":1784},"abstract_content":"\"%s%s%s%s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"002466a8d029874683c32611270849acf6eda61b3f83aec672d9f41954aa7a35e30f5a5614a1e7faec12793fa94463ca206c3cd0d7816598959ed819b5915217_0","lines":"\t(void)sprintf(path, \"%s%s%s%s\", drive,\n\t\t(*dir == '\\0') ? \"./\" : dir,\n\t\tfname,\n\t\t(*ext == '\\0') ? \".\" : ext);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":68,"col":13,"offset":1896},"end":{"line":68,"col":30,"offset":1913},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":13,"offset":1896},"end":{"line":68,"col":18,"offset":1901},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4949d5a7edf4e3998304fcae4eacc20b39909c7fbe28e1bd295f595db24627a003bf41e1294ab9e3fca9f281e5ab0e829f9dae7891783eb93e4ed5fda14eb4e1_0","lines":"\t\tif ((fp = fopen(path, \"wb\")) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":83,"col":3,"offset":2249},"end":{"line":83,"col":15,"offset":2261},"extra":{"metavars":{"$FUN":{"start":{"line":83,"col":3,"offset":2249},"end":{"line":83,"col":9,"offset":2255},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"44166241e7a5049676cc520023696cd218107cfd814b509ef7413c5d60b2c429a303bdc76ba9602189ecd6baeebe8b8f90692ba99fca7d02217746c14b406eaf_0","lines":"\t\tunlink(path);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":84,"col":3,"offset":2265},"end":{"line":84,"col":18,"offset":2280},"extra":{"metavars":{"$PTR":{"start":{"line":84,"col":8,"offset":2270},"end":{"line":84,"col":16,"offset":2278},"abstract_content":"filename"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4592522c95a3592fb1112db9ba14f127f874564d8457cbcdbb8268748aaa16834780207bb01d86f5dfd080fe458f8cac88bab1471c465235bf36dad5b0f27e91_0","lines":"\t\tfree(filename);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":108,"col":2,"offset":2750},"end":{"line":110,"col":14,"offset":2829},"extra":{"metavars":{"$EXPR1":{"start":{"line":108,"col":6,"offset":2754},"end":{"line":108,"col":10,"offset":2758},"abstract_content":"type"},"$EXPR2":{"start":{"line":108,"col":13,"offset":2761},"end":{"line":108,"col":26,"offset":2774},"abstract_content":"FAPPTYP_32BIT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc0722f8e31e5bb5886371ee88a78400e38c4effd7b153c9e456515fb89f3b272f84f6f0625a0222c83466ea402ffed942add259182ff15f4dc2a9414c84af28_0","lines":"\tif (type & FAPPTYP_32BIT)\n\t\tif (file_printf(ms, \"32-bit \") == -1)\n\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":111,"col":2,"offset":2831},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":111,"col":6,"offset":2835},"end":{"line":111,"col":10,"offset":2839},"abstract_content":"type"},"$EXPR2":{"start":{"line":111,"col":13,"offset":2842},"end":{"line":111,"col":28,"offset":2857},"abstract_content":"FAPPTYP_PHYSDRV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d00f5054bbf8cbdf866b3582583a18a9353233bd0aa87f79481ad08201a9e98ca975760fa958abc77510de903b6797ede41d4070cbd7a222c808d3b663ee1b1c_0","lines":"\tif (type & FAPPTYP_PHYSDRV) {\n\t\tif (file_printf(ms, \"physical device driver\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_VIRTDRV) {\n\t\tif (file_printf(ms, \"virtual device driver\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DLL) {\n\t\tif (type & FAPPTYP_PROTDLL)\n\t\t\tif (file_printf(ms, \"protected \") == -1)\n\t\t\t\treturn -1;\n\t\tif (file_printf(ms, \"DLL\") == -1)\n\t\t\treturn -1;\n\t} else if (type & (FAPPTYP_WINDOWSREAL | FAPPTYP_WINDOWSPROT)) {\n\t\tif (file_printf(ms, \"Windows executable\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DOS) {\n\t\t/*\n\t\t * The API routine is partially broken on filenames ending\n\t\t * \".com\".\n\t\t */\n\t\tif (stricmp(ext, \".com\") == 0)\n\t\t\tif (strncmp((const char *)buf, \"MZ\", 2))\n\t\t\t\treturn (0);\n\t\tif (file_printf(ms, \"DOS executable\") == -1)\n\t\t\treturn -1;\n\t\t/* ---------------------------------------- */\n\t\t/* Might learn more from the magic(4) entry */\n\t\tif (file_printf(ms, \", magic(4)-> \") == -1)\n\t\t\treturn -1;\n\t\treturn (0);\n\t\t/* ---------------------------------------- */\n\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":114,"col":9,"offset":2938},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":114,"col":13,"offset":2942},"end":{"line":114,"col":17,"offset":2946},"abstract_content":"type"},"$EXPR2":{"start":{"line":114,"col":20,"offset":2949},"end":{"line":114,"col":35,"offset":2964},"abstract_content":"FAPPTYP_VIRTDRV"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc21a217144b3d5bd7be7b77c0937db62843133df916d742094103b6cd000b1f7bb64400db2c143e35e07a65f01d4020e6d134ff5780f5e840dec5c763cd076b_0","lines":"\t} else if (type & FAPPTYP_VIRTDRV) {\n\t\tif (file_printf(ms, \"virtual device driver\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DLL) {\n\t\tif (type & FAPPTYP_PROTDLL)\n\t\t\tif (file_printf(ms, \"protected \") == -1)\n\t\t\t\treturn -1;\n\t\tif (file_printf(ms, \"DLL\") == -1)\n\t\t\treturn -1;\n\t} else if (type & (FAPPTYP_WINDOWSREAL | FAPPTYP_WINDOWSPROT)) {\n\t\tif (file_printf(ms, \"Windows executable\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DOS) {\n\t\t/*\n\t\t * The API routine is partially broken on filenames ending\n\t\t * \".com\".\n\t\t */\n\t\tif (stricmp(ext, \".com\") == 0)\n\t\t\tif (strncmp((const char *)buf, \"MZ\", 2))\n\t\t\t\treturn (0);\n\t\tif (file_printf(ms, \"DOS executable\") == -1)\n\t\t\treturn -1;\n\t\t/* ---------------------------------------- */\n\t\t/* Might learn more from the magic(4) entry */\n\t\tif (file_printf(ms, \", magic(4)-> \") == -1)\n\t\t\treturn -1;\n\t\treturn (0);\n\t\t/* ---------------------------------------- */\n\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":117,"col":9,"offset":3044},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":117,"col":13,"offset":3048},"end":{"line":117,"col":17,"offset":3052},"abstract_content":"type"},"$EXPR2":{"start":{"line":117,"col":20,"offset":3055},"end":{"line":117,"col":31,"offset":3066},"abstract_content":"FAPPTYP_DLL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"294f487c06c47051e02c6a3167b422f846233d1839c750cab581ce0a46cb37633be1eac2f50169897c9db53cd354e3c6e3bb6353472d3dac038a78ba5222f55c_0","lines":"\t} else if (type & FAPPTYP_DLL) {\n\t\tif (type & FAPPTYP_PROTDLL)\n\t\t\tif (file_printf(ms, \"protected \") == -1)\n\t\t\t\treturn -1;\n\t\tif (file_printf(ms, \"DLL\") == -1)\n\t\t\treturn -1;\n\t} else if (type & (FAPPTYP_WINDOWSREAL | FAPPTYP_WINDOWSPROT)) {\n\t\tif (file_printf(ms, \"Windows executable\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DOS) {\n\t\t/*\n\t\t * The API routine is partially broken on filenames ending\n\t\t * \".com\".\n\t\t */\n\t\tif (stricmp(ext, \".com\") == 0)\n\t\t\tif (strncmp((const char *)buf, \"MZ\", 2))\n\t\t\t\treturn (0);\n\t\tif (file_printf(ms, \"DOS executable\") == -1)\n\t\t\treturn -1;\n\t\t/* ---------------------------------------- */\n\t\t/* Might learn more from the magic(4) entry */\n\t\tif (file_printf(ms, \", magic(4)-> \") == -1)\n\t\t\treturn -1;\n\t\treturn (0);\n\t\t/* ---------------------------------------- */\n\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":118,"col":3,"offset":3072},"end":{"line":120,"col":15,"offset":3158},"extra":{"metavars":{"$EXPR1":{"start":{"line":118,"col":7,"offset":3076},"end":{"line":118,"col":11,"offset":3080},"abstract_content":"type"},"$EXPR2":{"start":{"line":118,"col":14,"offset":3083},"end":{"line":118,"col":29,"offset":3098},"abstract_content":"FAPPTYP_PROTDLL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2665eef4e09998c52cfd9b78394b1a797007d1358fdba7709ceaff7822f7d43af72c8f2af02c11a19f6474d0dc622127b6a3aae04d03682b9f1e565fa254a659_0","lines":"\t\tif (type & FAPPTYP_PROTDLL)\n\t\t\tif (file_printf(ms, \"protected \") == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":123,"col":9,"offset":3217},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":123,"col":13,"offset":3221},"end":{"line":123,"col":17,"offset":3225},"abstract_content":"type"},"$EXPR2":{"start":{"line":123,"col":21,"offset":3229},"end":{"line":123,"col":62,"offset":3270},"abstract_content":"FAPPTYP_WINDOWSREAL|FAPPTYP_WINDOWSPROT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"947c6817cd244480c9a458f0a042d3c6a46665a72925481a9d42097d971f115e8dcd1b87f45a2b59867697be4c966b013637bee92f0dd2491a73b6983b77e72d_0","lines":"\t} else if (type & (FAPPTYP_WINDOWSREAL | FAPPTYP_WINDOWSPROT)) {\n\t\tif (file_printf(ms, \"Windows executable\") == -1)\n\t\t\treturn -1;\n\t} else if (type & FAPPTYP_DOS) {\n\t\t/*\n\t\t * The API routine is partially broken on filenames ending\n\t\t * \".com\".\n\t\t */\n\t\tif (stricmp(ext, \".com\") == 0)\n\t\t\tif (strncmp((const char *)buf, \"MZ\", 2))\n\t\t\t\treturn (0);\n\t\tif (file_printf(ms, \"DOS executable\") == -1)\n\t\t\treturn -1;\n\t\t/* ---------------------------------------- */\n\t\t/* Might learn more from the magic(4) entry */\n\t\tif (file_printf(ms, \", magic(4)-> \") == -1)\n\t\t\treturn -1;\n\t\treturn (0);\n\t\t/* ---------------------------------------- */\n\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":126,"col":9,"offset":3348},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":126,"col":13,"offset":3352},"end":{"line":126,"col":17,"offset":3356},"abstract_content":"type"},"$EXPR2":{"start":{"line":126,"col":20,"offset":3359},"end":{"line":126,"col":31,"offset":3370},"abstract_content":"FAPPTYP_DOS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4e8c2e181e470db810c275c152819a0682e628055b928b8119a5c64b9aae56356282a34f735a25d9db527b56b64c0ceedb7fc60cd86adf7b8d58b2dc33a81d6c_0","lines":"\t} else if (type & FAPPTYP_DOS) {\n\t\t/*\n\t\t * The API routine is partially broken on filenames ending\n\t\t * \".com\".\n\t\t */\n\t\tif (stricmp(ext, \".com\") == 0)\n\t\t\tif (strncmp((const char *)buf, \"MZ\", 2))\n\t\t\t\treturn (0);\n\t\tif (file_printf(ms, \"DOS executable\") == -1)\n\t\t\treturn -1;\n\t\t/* ---------------------------------------- */\n\t\t/* Might learn more from the magic(4) entry */\n\t\tif (file_printf(ms, \", magic(4)-> \") == -1)\n\t\t\treturn -1;\n\t\treturn (0);\n\t\t/* ---------------------------------------- */\n\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":142,"col":9,"offset":3842},"end":{"line":149,"col":13,"offset":4106},"extra":{"metavars":{"$EXPR1":{"start":{"line":142,"col":13,"offset":3846},"end":{"line":142,"col":17,"offset":3850},"abstract_content":"type"},"$EXPR2":{"start":{"line":142,"col":20,"offset":3853},"end":{"line":142,"col":33,"offset":3866},"abstract_content":"FAPPTYP_BOUND"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9737dbd175d3391ec9018beb0edb6b66faa5ba60783afc6ad16d2e359b20621a0a03f956a444daf856fc963016f88891044b37e12ce50c6b6cc1eab028fb39cb_0","lines":"\t} else if (type & FAPPTYP_BOUND) {\n\t\tif (file_printf(ms, \"bound executable\") == -1)\n\t\t\treturn -1;\n\t} else if ((type & 7) == FAPPTYP_WINDOWAPI) {\n\t\tif (file_printf(ms, \"PM executable\") == -1)\n\t\t\treturn -1;\n\t} else if (file_printf(ms, \"OS/2 executable\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":151,"col":10,"offset":4117},"end":{"line":153,"col":21,"offset":4197},"extra":{"metavars":{"$VAR":{"start":{"line":151,"col":10,"offset":4117},"end":{"line":153,"col":21,"offset":4197},"abstract_content":"type&FAPPTYP_NOTWINDOWCOMPAT|FAPPTYP_WINDOWCOMPAT|FAPPTYP_WINDOWAPI"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6e5f6f0f5a6925344588fc960d4b08eff87c15f1bf43b0f03458e87e87e5afb0f788ecc5a0f83991a554996f9e4bf174690a500d190f6340d6c0acf4926d4938_0","lines":"\tswitch (type & (FAPPTYP_NOTWINDOWCOMPAT |\n\t\t\tFAPPTYP_WINDOWCOMPAT |\n\t\t\tFAPPTYP_WINDOWAPI)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":73,"col":9,"offset":2638},"end":{"line":73,"col":17,"offset":2646},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":73,"col":9,"offset":2638},"end":{"line":73,"col":13,"offset":2642},"abstract_content":"ulen"},"$SIGNED":{"start":{"line":73,"col":16,"offset":2645},"end":{"line":73,"col":17,"offset":2646},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e2308eddc2692fa608e2e21e77887817d3d78fe8171b76ec64407a4beb2b858db1fc8d20cc74b761026d7cc21f52f6345a4a9c52a8a5ab3d0f4052967fb1e65d_0","lines":"\tsize_t ulen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":87,"col":2,"offset":2989},"end":{"line":88,"col":13,"offset":3038},"extra":{"metavars":{"$EXPR1":{"start":{"line":87,"col":7,"offset":2994},"end":{"line":87,"col":14,"offset":3001},"abstract_content":"bb.flen"},"$EXPR2":{"start":{"line":87,"col":17,"offset":3004},"end":{"line":87,"col":18,"offset":3005},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5ac18d054e08cf876b461ded4051be317f3aa08d555c1f9089885f3e4e002591d34144d84a194062e9e9dab80ad39aca8ce963de3e0004bb172e1114651f3f02_0","lines":"\tif ((bb.flen & 1) && !(b->flen & 1))\n\t\tbb.flen++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":95,"col":3,"offset":3204},"end":{"line":96,"col":36,"offset":3281},"extra":{"metavars":{"$SIGNED":{"start":{"line":95,"col":3,"offset":3204},"end":{"line":95,"col":5,"offset":3206},"abstract_content":"rv"},"$UNSIGNED":{"start":{"line":96,"col":13,"offset":3258},"end":{"line":96,"col":17,"offset":3262},"abstract_content":"ulen","propagated_value":{"svalue_start":{"line":73,"col":16,"offset":2645},"svalue_end":{"line":73,"col":17,"offset":2646},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"09b4ac3c408cdcad5cbaec66acd9f83dc22cafc3b8b19d435542ec5957727a5dc8c3d78a1cae5564ca7f54ac2fa9c28da2f938aa9135076b00d2a31ddbaf8cab_0","lines":"\t\trv = file_ascmagic_with_encoding(ms, &bb,\n\t\t    ubuf, ulen, code, type, text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":98,"col":2,"offset":3285},"end":{"line":98,"col":13,"offset":3296},"extra":{"metavars":{"$PTR":{"start":{"line":98,"col":7,"offset":3290},"end":{"line":98,"col":11,"offset":3294},"abstract_content":"ubuf","propagated_value":{"svalue_start":{"line":72,"col":18,"offset":2624},"svalue_end":{"line":72,"col":22,"offset":2628},"svalue_abstract_content":"NULL"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0bf44be088d1c8c3649e2e6681f96a73d0757715857aecf49fe4a7d2c6a3b1bd44410c18277f0fd02f2ceff81f02b5dc57d16d668ddd7e07367c34199aeeabfb_0","lines":"\tfree(ubuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":130,"col":9,"offset":3960},"end":{"line":130,"col":41,"offset":3992},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":130,"col":9,"offset":3960},"end":{"line":130,"col":22,"offset":3973},"abstract_content":"last_line_end"},"$SIGNED":{"start":{"line":130,"col":38,"offset":3989},"end":{"line":130,"col":40,"offset":3991},"abstract_content":"-1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e257e6818ab67fd3df14059ea4ec7e2c2dbe67e5897f5bbb38e493175c012ebd6843a478be36b14150d5861da3a62eef464bd74737790d6d922c24e8c008361d_0","lines":"\tsize_t last_line_end = CAST(size_t, -1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":145,"col":3,"offset":4380},"end":{"line":145,"col":18,"offset":4395},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":145,"col":3,"offset":4380},"end":{"line":145,"col":7,"offset":4384},"abstract_content":"mlen"},"$SIGNED":{"start":{"line":145,"col":17,"offset":4394},"end":{"line":145,"col":18,"offset":4395},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0272da5b9474e17f1630e494e6b771bda27459f6874c41cfdd1365827f662eb2e0b7280636a7f731e4c33338416abfb679e9d8506c84e29077bc9f80f2de5bed_0","lines":"\t\tmlen = ulen * 6;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":41,"offset":4437},"end":{"line":146,"col":53,"offset":4449},"extra":{"metavars":{"$X":{"start":{"line":145,"col":10,"offset":4387},"end":{"line":145,"col":14,"offset":4391},"abstract_content":"ulen"},"$Y":{"start":{"line":145,"col":17,"offset":4394},"end":{"line":145,"col":18,"offset":4395},"abstract_content":"6"},"$FUN":{"start":{"line":146,"col":41,"offset":4437},"end":{"line":146,"col":47,"offset":4443},"abstract_content":"malloc"},"$N":{"start":{"line":146,"col":48,"offset":4444},"end":{"line":146,"col":52,"offset":4448},"abstract_content":"mlen","propagated_value":{"svalue_start":{"line":145,"col":10,"offset":4387},"svalue_end":{"line":145,"col":18,"offset":4395},"svalue_abstract_content":"ulen*6"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dc7d2460e4e94a0cd5f594cf8c02a6d6828fd01e02605e24cea5a169b8e543012664d8748596efe94a6650a4e330bb214508cdc4e0991d5b16dd8e07539c1b6a_0","lines":"\t\tif ((utf8_buf = CAST(unsigned char *, malloc(mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":41,"offset":4437},"end":{"line":146,"col":53,"offset":4449},"extra":{"metavars":{"$FUN":{"start":{"line":146,"col":41,"offset":4437},"end":{"line":146,"col":47,"offset":4443},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a338db2cd733d7d50b6b0994feceda2d383cdf405c53434269aa3f83374c2f663524a1a8c601f535fc1ab40bfb1967f6412f24622bd704c76165599d9e32d562_0","lines":"\t\tif ((utf8_buf = CAST(unsigned char *, malloc(mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":154,"col":20,"offset":4657},"end":{"line":154,"col":39,"offset":4676},"extra":{"metavars":{"$TYPE":{"start":{"line":111,"col":2,"offset":3597},"end":{"line":111,"col":15,"offset":3610},"abstract_content":"unsigned char"},"$EXPR2":{"start":{"line":111,"col":28,"offset":3623},"end":{"line":111,"col":32,"offset":3627},"abstract_content":"NULL"},"$PTR1":{"start":{"line":154,"col":20,"offset":4657},"end":{"line":154,"col":28,"offset":4665},"abstract_content":"utf8_end","propagated_value":{"svalue_start":{"line":150,"col":19,"offset":4524},"svalue_end":{"line":150,"col":58,"offset":4563},"svalue_abstract_content":"encode_utf8(utf8_buf mlen ubuf ulen)"}},"$PTR2":{"start":{"line":154,"col":31,"offset":4668},"end":{"line":154,"col":39,"offset":4676},"abstract_content":"utf8_buf","propagated_value":{"svalue_start":{"line":146,"col":19,"offset":4415},"svalue_end":{"line":146,"col":54,"offset":4450},"svalue_abstract_content":"CAST(unsigned*malloc(mlen))"}}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c2469dee9e7b1844a68b22680cee1780f02af282fa31cf5c920cfada366f7b10f185bf53bc534b53ad427d7171b7d85ce5952ef3ef02fbdb329841c63386f189_0","lines":"\t\t    CAST(size_t, utf8_end - utf8_buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":162,"col":3,"offset":4822},"end":{"line":165,"col":4,"offset":4916},"extra":{"metavars":{"$EXPR1":{"start":{"line":162,"col":8,"offset":4827},"end":{"line":162,"col":17,"offset":4836},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":162,"col":21,"offset":4840},"end":{"line":162,"col":48,"offset":4867},"abstract_content":"MAGIC_APPLE|MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b2efab47e403b5fa87c95b0374c820845a5197740e881a0e99bc93b9cb33ba9ff0aba12e50bd529be90a10b999aebefcfbbf527671e12d7659537f8c27b4de5_0","lines":"\t\tif ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION))) {\n\t\t\trv = rv == -1 ? 0 : 1;\n\t\t\tgoto done;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":167,"col":2,"offset":4921},"end":{"line":168,"col":12,"offset":4981},"extra":{"metavars":{"$EXPR1":{"start":{"line":167,"col":7,"offset":4926},"end":{"line":167,"col":16,"offset":4935},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":167,"col":20,"offset":4939},"end":{"line":167,"col":47,"offset":4966},"abstract_content":"MAGIC_APPLE|MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1b2efab47e403b5fa87c95b0374c820845a5197740e881a0e99bc93b9cb33ba9ff0aba12e50bd529be90a10b999aebefcfbbf527671e12d7659537f8c27b4de5_1","lines":"\tif ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION)))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":171,"col":7,"offset":5046},"end":{"line":171,"col":12,"offset":5051},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":171,"col":7,"offset":5046},"end":{"line":171,"col":8,"offset":5047},"abstract_content":"i"},"$SIGNED":{"start":{"line":171,"col":11,"offset":5050},"end":{"line":171,"col":12,"offset":5051},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ef571f102578104cc7d3487fb8fd5a283a9b6f4a34be2b69ff2aff8d02ab73f77c27ba690334719793b83de0d331b207c01f088d8cf7b24f7757c49e14d3c11a_0","lines":"\tfor (i = 0; i < ulen; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":181,"col":3,"offset":5203},"end":{"line":181,"col":29,"offset":5229},"extra":{"metavars":{"$SIGNED":{"start":{"line":181,"col":3,"offset":5203},"end":{"line":181,"col":10,"offset":5210},"abstract_content":"seen_cr"},"$UNSIGNED":{"start":{"line":181,"col":19,"offset":5219},"end":{"line":181,"col":20,"offset":5220},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"694fe11483cfb000b07ee291788b83c7f0ad0fda91f7cfe0b58893aaf0b51056f4f9b14bdd144c8cf27af827367599ca2d40a3351bc9ba1a399f215fda5ebe3a_0","lines":"\t\tseen_cr = (ubuf[i] == '\\r');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":181,"col":3,"offset":5203},"end":{"line":181,"col":31,"offset":5231},"extra":{"metavars":{"$EXPR1":{"start":{"line":181,"col":14,"offset":5214},"end":{"line":181,"col":21,"offset":5221},"abstract_content":"ubuf[i]"},"$EXPR2":{"start":{"line":181,"col":25,"offset":5225},"end":{"line":181,"col":29,"offset":5229},"abstract_content":"'\\r'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"51cbfe57736cc88eaf0c1086a3a5d0b3c7d3a126abbf7425638ba3176c21533a3db4b4af73cc871ca86cb5cbd11c9d7530673ca147ca74c75f4626ae7f443a9c_0","lines":"\t\tseen_cr = (ubuf[i] == '\\r');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":329,"col":2,"offset":8446},"end":{"line":329,"col":17,"offset":8461},"extra":{"metavars":{"$PTR":{"start":{"line":329,"col":7,"offset":8451},"end":{"line":329,"col":15,"offset":8459},"abstract_content":"utf8_buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f3cbd2b40f60027110f99aba048c071d69b570ace14a964ca5645245b8f554627804d9fd9f43a62d1acd516ab4494ee561aa86d56520d3bddb00102d490b4202_0","lines":"\tfree(utf8_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":344,"col":7,"offset":8766},"end":{"line":344,"col":12,"offset":8771},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":344,"col":7,"offset":8766},"end":{"line":344,"col":8,"offset":8767},"abstract_content":"i"},"$SIGNED":{"start":{"line":344,"col":11,"offset":8770},"end":{"line":344,"col":12,"offset":8771},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ef571f102578104cc7d3487fb8fd5a283a9b6f4a34be2b69ff2aff8d02ab73f77c27ba690334719793b83de0d331b207c01f088d8cf7b24f7757c49e14d3c11a_1","lines":"\tfor (i = 0; i < ulen; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/asctime_r.c","start":{"line":17,"col":2,"offset":380},"end":{"line":17,"col":20,"offset":398},"extra":{"metavars":{"$FUN":{"start":{"line":17,"col":2,"offset":380},"end":{"line":17,"col":8,"offset":386},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78bb293b8039ad2d6460baaad860865778a01a5ba630cd4a6e329cae39f7a92bf2ccf18f264393854363935121791e67e27a775445a121f3b235e0a302dd2f21_0","lines":"\tmemcpy(dst, p, 26);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/asctime_r.c","start":{"line":17,"col":2,"offset":380},"end":{"line":17,"col":20,"offset":398},"extra":{"metavars":{"$DST":{"start":{"line":17,"col":9,"offset":387},"end":{"line":17,"col":12,"offset":390},"abstract_content":"dst"},"$SRC":{"start":{"line":17,"col":14,"offset":392},"end":{"line":17,"col":15,"offset":393},"abstract_content":"p","propagated_value":{"svalue_start":{"line":14,"col":12,"offset":336},"svalue_end":{"line":14,"col":22,"offset":346},"svalue_abstract_content":"asctime(t)"}},"$LEN":{"start":{"line":17,"col":17,"offset":395},"end":{"line":17,"col":19,"offset":397},"abstract_content":"26"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a8ac56da9761f42a83f6a725d2f92cfcd74b3fb0f5fe49bf4ad84411c4de606726a7d4222bfb55ab9f6ad88da77b3854d57cbb07117195aee78cd4d4e5112d02_0","lines":"\tmemcpy(dst, p, 26);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/asprintf.c","start":{"line":41,"col":12,"offset":1746},"end":{"line":41,"col":38,"offset":1772},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b1af36f47dc3485003b49483b615464bf3ca1d2fd0abc5105f08d9df2c64e770e350733976ee341bd67a2951820783aba09760a6738c9c5d8aa2840c44d5343_0","lines":"  retval = vasprintf(ptr, fmt, vargs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/asprintf.c","start":{"line":41,"col":12,"offset":1746},"end":{"line":41,"col":38,"offset":1772},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":12,"offset":1746},"end":{"line":41,"col":21,"offset":1755},"abstract_content":"vasprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"000c131cdd68407a83e2cac2914fa106e6af8375a12f2caa68ae86e3cd3b40d8b596187ddc4964947a6144a3656467b20c377453c783a372c65cfba12fa3bee7_0","lines":"  retval = vasprintf(ptr, fmt, vargs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":45,"col":3,"offset":1780},"end":{"line":45,"col":36,"offset":1813},"extra":{"metavars":{"$FUN":{"start":{"line":45,"col":3,"offset":1780},"end":{"line":45,"col":9,"offset":1786},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fdd804f04ecf445bd63855c54488689c837ba6db686faf6b39164f9dffb3b590154ee8091e5a38a92ad0914ccc265e8d2d2216a07fad78cee28f8e7060a2c0a8_0","lines":"\t\tmemcpy(&b->st, st, sizeof(b->st));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":46,"col":26,"offset":1840},"end":{"line":46,"col":46,"offset":1860},"extra":{"metavars":{"$FUN":{"start":{"line":46,"col":26,"offset":1840},"end":{"line":46,"col":31,"offset":1845},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e23829157cadffadf1f2d2ac4163f304e44a07be0ae316bb6c52e87fd41ee6c54d0be9a0ddf8b228e578eeb91a1bc8750b61b821cc626672de71b5fd07787966_0","lines":"\telse if (b->fd == -1 || fstat(b->fd, &b->st) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":58,"col":2,"offset":2023},"end":{"line":58,"col":16,"offset":2037},"extra":{"metavars":{"$PTR":{"start":{"line":58,"col":7,"offset":2028},"end":{"line":58,"col":14,"offset":2035},"abstract_content":"b->->ebuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e37248954eb4ef495a1fa8996024602a30b44452b5c5f675ecf26e3b5e2912b80ae5f5c8b233fc186c98ff37792eaedec06d4372cf4f74768ac9e75de106656a_0","lines":"\tfree(b->ebuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":74,"col":17,"offset":2355},"end":{"line":74,"col":32,"offset":2370},"extra":{"metavars":{"$FUN":{"start":{"line":74,"col":17,"offset":2355},"end":{"line":74,"col":23,"offset":2361},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e58c1dd52b834d049d8b1ec1cc9b7d5a95d4a6bdcd758f615990dd690907ad9b5b2ac3b4b059482bc658672d342a0f395c97e6b7ff893e85f7474f7b4298356a_0","lines":"\tif ((b->ebuf = malloc(b->elen)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":78,"col":6,"offset":2435},"end":{"line":78,"col":45,"offset":2474},"extra":{"metavars":{"$FUN":{"start":{"line":78,"col":6,"offset":2435},"end":{"line":78,"col":11,"offset":2440},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a43c413fe1450a404910bcf4dfcf3aa62690bc89216661caf520cfb09eecf1ab49cc9debc8401c15f654534c456fdb3dfce2214a1a8539e7e7f25a57f48aa217_0","lines":"\tif (pread(b->fd, b->ebuf, b->elen, b->eoff) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/buffer.c","start":{"line":79,"col":3,"offset":2486},"end":{"line":79,"col":17,"offset":2500},"extra":{"metavars":{"$PTR":{"start":{"line":79,"col":8,"offset":2491},"end":{"line":79,"col":15,"offset":2498},"abstract_content":"b->->ebuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e37248954eb4ef495a1fa8996024602a30b44452b5c5f675ecf26e3b5e2912b80ae5f5c8b233fc186c98ff37792eaedec06d4372cf4f74768ac9e75de106656a_1","lines":"\t\tfree(b->ebuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":100,"col":9,"offset":3302},"end":{"line":100,"col":18,"offset":3311},"extra":{"metavars":{"$FUN":{"start":{"line":100,"col":9,"offset":3302},"end":{"line":100,"col":15,"offset":3308},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3221859634d4d6e6fe8dc283383df3bb31cb8ce6a4e1f3eddeefafe37fbc48dbd75baf8d466ba1d28b01e2ee2b1cee9c2e7337908d07a4fa0f21293ac86ac73e_0","lines":"\treturn malloc(n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":110,"col":9,"offset":3569},"end":{"line":110,"col":22,"offset":3582},"extra":{"metavars":{"$FUN":{"start":{"line":110,"col":9,"offset":3569},"end":{"line":110,"col":16,"offset":3576},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"afa1032baf144a43d494071c1b671c51e62d663b4090788260d550a4146017efde7fd03d91d18c176b27308a82efcc964bfdff27b47d125e9856efd170a4e9fe_0","lines":"\treturn realloc(p, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":120,"col":9,"offset":3863},"end":{"line":120,"col":21,"offset":3875},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":9,"offset":3863},"end":{"line":120,"col":15,"offset":3869},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2724db20df221ce42422070c50eeffe2df7a63091c474fe0319b0081a2c079e0c0057990adadd52baf23de62cf60ba907e256c370b7ea5c7c4d7a64cf6428ff6_0","lines":"\treturn calloc(n, u);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":181,"col":8,"offset":4856},"end":{"line":181,"col":60,"offset":4908},"extra":{"metavars":{"$FUN":{"start":{"line":181,"col":8,"offset":4856},"end":{"line":181,"col":14,"offset":4862},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_0","lines":"\t(void)memcpy(&rv, p + offs * sizeof(uint32_t), sizeof(rv));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":233,"col":7,"offset":6305},"end":{"line":233,"col":12,"offset":6310},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":233,"col":7,"offset":6305},"end":{"line":233,"col":8,"offset":6306},"abstract_content":"i"},"$SIGNED":{"start":{"line":233,"col":11,"offset":6309},"end":{"line":233,"col":12,"offset":6310},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_0","lines":"\tfor (i = 0; i < __arraycount(h->h_master_sat); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":243,"col":9,"offset":6508},"end":{"line":243,"col":16,"offset":6515},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":243,"col":9,"offset":6508},"end":{"line":243,"col":12,"offset":6511},"abstract_content":"len"},"$SIGNED":{"start":{"line":243,"col":15,"offset":6514},"end":{"line":243,"col":16,"offset":6515},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fc855f92da6dfa97632b493a0f6558e4e7c84bae533dc59142e20284cce74a34f2c09dab11570ce2fb08e16178e64f9600fa18661194a26d802805282607592f_0","lines":"\tsize_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":261,"col":7,"offset":7098},"end":{"line":261,"col":12,"offset":7103},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":261,"col":7,"offset":7098},"end":{"line":261,"col":8,"offset":7099},"abstract_content":"i"},"$SIGNED":{"start":{"line":261,"col":11,"offset":7102},"end":{"line":261,"col":12,"offset":7103},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_1","lines":"\tfor (i = 0; i < __arraycount(h->h_master_sat); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":293,"col":9,"offset":8069},"end":{"line":293,"col":16,"offset":8076},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":293,"col":9,"offset":8069},"end":{"line":293,"col":12,"offset":8072},"abstract_content":"len"},"$SIGNED":{"start":{"line":293,"col":15,"offset":8075},"end":{"line":293,"col":16,"offset":8076},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fc855f92da6dfa97632b493a0f6558e4e7c84bae533dc59142e20284cce74a34f2c09dab11570ce2fb08e16178e64f9600fa18661194a26d802805282607592f_1","lines":"\tsize_t len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":317,"col":2,"offset":8575},"end":{"line":317,"col":21,"offset":8594},"extra":{"metavars":{"$PTR":{"start":{"line":317,"col":7,"offset":8580},"end":{"line":317,"col":19,"offset":8592},"abstract_content":"scn->->sst_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"971819033c14edd9b3a050125c85e8ed5610f3eb5decad4e2ca96e8d865df71ff2102930e7b9fa56dd84daf6188c7a0b6d852026db6e096a77f42559f9a5d4b8_0","lines":"\tfree(scn->sst_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":339,"col":29,"offset":9192},"end":{"line":339,"col":34,"offset":9197},"extra":{"metavars":{"$TYPE":{"start":{"line":335,"col":8,"offset":9008},"end":{"line":335,"col":12,"offset":9012},"abstract_content":"char"},"$EXPR1":{"start":{"line":335,"col":18,"offset":9018},"end":{"line":335,"col":51,"offset":9051},"abstract_content":"RCAST(const*sst->->sst_tab)"},"$EXPR2":{"start":{"line":336,"col":18,"offset":9070},"end":{"line":336,"col":47,"offset":9099},"abstract_content":"RCAST(const*p)+tail"},"$PTR2":{"start":{"line":339,"col":29,"offset":9192},"end":{"line":339,"col":30,"offset":9193},"abstract_content":"e","propagated_value":{"svalue_start":{"line":336,"col":18,"offset":9070},"svalue_end":{"line":336,"col":47,"offset":9099},"svalue_abstract_content":"RCAST(const*p)+tail"}},"$PTR1":{"start":{"line":339,"col":33,"offset":9196},"end":{"line":339,"col":34,"offset":9197},"abstract_content":"b"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5bec46b4704638f6e4f608d70b8e55b167ca55fd3ac1acebe452528eb9166102a7a7e6824e0ec1c2f42c93e2ff750b5b964a4e17353770acc0012f6103f0ebae_0","lines":"\tif (e >= b && CAST(size_t, e - b) <= ss * sst->sst_len)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":343,"col":49,"offset":9398},"end":{"line":343,"col":54,"offset":9403},"extra":{"metavars":{"$TYPE":{"start":{"line":335,"col":8,"offset":9008},"end":{"line":335,"col":12,"offset":9012},"abstract_content":"char"},"$EXPR1":{"start":{"line":335,"col":18,"offset":9018},"end":{"line":335,"col":51,"offset":9051},"abstract_content":"RCAST(const*sst->->sst_tab)"},"$EXPR2":{"start":{"line":336,"col":18,"offset":9070},"end":{"line":336,"col":47,"offset":9099},"abstract_content":"RCAST(const*p)+tail"},"$PTR2":{"start":{"line":343,"col":49,"offset":9398},"end":{"line":343,"col":50,"offset":9399},"abstract_content":"e"},"$PTR1":{"start":{"line":343,"col":53,"offset":9402},"end":{"line":343,"col":54,"offset":9403},"abstract_content":"b"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5bec46b4704638f6e4f608d70b8e55b167ca55fd3ac1acebe452528eb9166102a7a7e6824e0ec1c2f42c93e2ff750b5b964a4e17353770acc0012f6103f0ebae_1","lines":"\t    SIZE_T_FORMAT \"u]\\n\", line, b, e, (size_t)(e - b),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":352,"col":9,"offset":9574},"end":{"line":352,"col":38,"offset":9603},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":352,"col":9,"offset":9574},"end":{"line":352,"col":12,"offset":9577},"abstract_content":"siz"},"$SIGNED":{"start":{"line":352,"col":28,"offset":9593},"end":{"line":352,"col":31,"offset":9596},"abstract_content":"off"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9950bef6d54264aa4705835df0ffe8aa0cf7be932c0902fd27a6ff66bac8f7e8f47331dc89a70e88d448a24980922378eb6c501b6ce0064063a4c044bf16e4_0","lines":"\tsize_t siz = CAST(size_t, off + len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":358,"col":9,"offset":9726},"end":{"line":358,"col":44,"offset":9761},"extra":{"metavars":{"$FUN":{"start":{"line":358,"col":9,"offset":9726},"end":{"line":358,"col":15,"offset":9732},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_1","lines":"\t\t(void)memcpy(buf, &info->i_buf[off], len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":365,"col":6,"offset":9837},"end":{"line":365,"col":38,"offset":9869},"extra":{"metavars":{"$FUN":{"start":{"line":365,"col":6,"offset":9837},"end":{"line":365,"col":11,"offset":9842},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1d60eea8007be07e7655a67413abdcf9400a09f44da3aa0e0b9285279c84bb0c71eaef82fb63135d8494e34e90648e061ac4a51132a2af05114233c11257f6a1_0","lines":"\tif (pread(info->i_fd, buf, len, off) != CAST(ssize_t, len))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":379,"col":8,"offset":10059},"end":{"line":379,"col":43,"offset":10094},"extra":{"metavars":{"$FUN":{"start":{"line":379,"col":8,"offset":10059},"end":{"line":379,"col":14,"offset":10065},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_2","lines":"\t(void)memcpy(cdf_bo.s, \"\\01\\02\\03\\04\", 4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":379,"col":8,"offset":10059},"end":{"line":379,"col":43,"offset":10094},"extra":{"metavars":{"$DST":{"start":{"line":379,"col":15,"offset":10066},"end":{"line":379,"col":23,"offset":10074},"abstract_content":"cdf_bo.s"},"$SRC":{"start":{"line":379,"col":25,"offset":10076},"end":{"line":379,"col":39,"offset":10090},"abstract_content":"\"\\01\\02\\03\\04\""},"$LEN":{"start":{"line":379,"col":41,"offset":10092},"end":{"line":379,"col":42,"offset":10093},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"72d47232caa53df074e30ecdbbc06630ee2e50604505e06f3baaefba00e776eb3f33373e134b9d5e15976d307d3d6276c853ec5cf52e32db0dfaa4c034bf3b52_0","lines":"\t(void)memcpy(cdf_bo.s, \"\\01\\02\\03\\04\", 4);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":380,"col":6,"offset":10101},"end":{"line":380,"col":54,"offset":10149},"extra":{"metavars":{"$FUN":{"start":{"line":380,"col":6,"offset":10101},"end":{"line":380,"col":14,"offset":10109},"abstract_content":"cdf_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"919a36d6daa97bb06b8b0896627b4853bf310a9d325f0ab4ecf8bea4160891beaca9fceea7bd1ed7baa5ea319f2aa60ce582b21dba3f024a8b3843987fb960be_0","lines":"\tif (cdf_read(info, CAST(off_t, 0), buf, sizeof(buf)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":419,"col":9,"offset":10980},"end":{"line":419,"col":73,"offset":11044},"extra":{"metavars":{"$FUN":{"start":{"line":419,"col":9,"offset":10980},"end":{"line":419,"col":17,"offset":10988},"abstract_content":"cdf_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"919a36d6daa97bb06b8b0896627b4853bf310a9d325f0ab4ecf8bea4160891beaca9fceea7bd1ed7baa5ea319f2aa60ce582b21dba3f024a8b3843987fb960be_1","lines":"\treturn cdf_read(info, CAST(off_t, pos), RCAST(char *, buf) + offs, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":440,"col":8,"offset":11550},"end":{"line":441,"col":51,"offset":11634},"extra":{"metavars":{"$FUN":{"start":{"line":440,"col":8,"offset":11550},"end":{"line":440,"col":14,"offset":11556},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_3","lines":"\t(void)memcpy(RCAST(char *, buf) + offs,\n\t    RCAST(const char *, sst->sst_tab) + pos, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":457,"col":9,"offset":11890},"end":{"line":457,"col":44,"offset":11925},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":457,"col":9,"offset":11890},"end":{"line":457,"col":19,"offset":11900},"abstract_content":"nsatpersec"},"$SIGNED":{"start":{"line":457,"col":43,"offset":11924},"end":{"line":457,"col":44,"offset":11925},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d037861b0722477182bf3d035a6637097d1f362a418ea701460d23bd2b26ede1bf66ad69caedac117499c3be24a1c6f11ad9b783fd3f6dfc6f76d0f884695382_0","lines":"\tsize_t nsatpersec = (ss / sizeof(mid)) - 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":459,"col":7,"offset":11934},"end":{"line":459,"col":12,"offset":11939},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":459,"col":7,"offset":11934},"end":{"line":459,"col":8,"offset":11935},"abstract_content":"i"},"$SIGNED":{"start":{"line":459,"col":11,"offset":11938},"end":{"line":459,"col":12,"offset":11939},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_2","lines":"\tfor (i = 0; i < __arraycount(h->h_master_sat); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":480,"col":7,"offset":12625},"end":{"line":480,"col":12,"offset":12630},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":480,"col":7,"offset":12625},"end":{"line":480,"col":8,"offset":12626},"abstract_content":"i"},"$SIGNED":{"start":{"line":480,"col":11,"offset":12629},"end":{"line":480,"col":12,"offset":12630},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_3","lines":"\tfor (i = 0; i < __arraycount(h->h_master_sat); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":494,"col":7,"offset":13025},"end":{"line":494,"col":12,"offset":13030},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":494,"col":7,"offset":13025},"end":{"line":494,"col":8,"offset":13026},"abstract_content":"j"},"$SIGNED":{"start":{"line":494,"col":11,"offset":13029},"end":{"line":494,"col":12,"offset":13030},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_0","lines":"\tfor (j = 0; j < h->h_num_sectors_in_master_sat; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":506,"col":8,"offset":13350},"end":{"line":506,"col":13,"offset":13355},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":506,"col":8,"offset":13350},"end":{"line":506,"col":9,"offset":13351},"abstract_content":"k"},"$SIGNED":{"start":{"line":506,"col":12,"offset":13354},"end":{"line":506,"col":13,"offset":13355},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"438054a19e1aabde3d37ef2ae1f0cb46f2944b34fadab6356433a66cd650d4f1f6c12082631e266818ff60e1d04e6521c4c1d32b513cfc81955248fcc9a019cb_0","lines":"\t\tfor (k = 0; k < nsatpersec; k++, i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":527,"col":2,"offset":13886},"end":{"line":527,"col":12,"offset":13896},"extra":{"metavars":{"$PTR":{"start":{"line":527,"col":7,"offset":13891},"end":{"line":527,"col":10,"offset":13894},"abstract_content":"msa"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6719ef196cb7cbc6ddb99d400cae35fd69c43d9c1fbd9048a5b778d47e1decbb04e10cddb2c396eb013b8b9289753598afe37db59c4cc5c4cd9919a64ae11c3d_0","lines":"\tfree(msa);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":532,"col":2,"offset":13938},"end":{"line":532,"col":6,"offset":13942},"extra":{"metavars":{"$PTR":{"start":{"line":527,"col":7,"offset":13891},"end":{"line":527,"col":10,"offset":13894},"abstract_content":"msa"},"$FREE":{"start":{"line":532,"col":2,"offset":13938},"end":{"line":532,"col":6,"offset":13942},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"dad2d0a5f9ab9125dd26975cb9a35f11c7e25f10f5c7b7c44cc23839f3ac2fc19d2c5166dcc1f2bf128a346b302437a449506610ec9b11588879cbab0f07e86b_0","lines":"\tfree(msa);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":532,"col":2,"offset":13938},"end":{"line":532,"col":12,"offset":13948},"extra":{"metavars":{"$PTR":{"start":{"line":532,"col":7,"offset":13943},"end":{"line":532,"col":10,"offset":13946},"abstract_content":"msa"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6719ef196cb7cbc6ddb99d400cae35fd69c43d9c1fbd9048a5b778d47e1decbb04e10cddb2c396eb013b8b9289753598afe37db59c4cc5c4cd9919a64ae11c3d_1","lines":"\tfree(msa);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":534,"col":2,"offset":13956},"end":{"line":534,"col":21,"offset":13975},"extra":{"metavars":{"$PTR":{"start":{"line":534,"col":7,"offset":13961},"end":{"line":534,"col":19,"offset":13973},"abstract_content":"sat->->sat_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ffe98208d930a2f2a5bfd3b9adb22c820716bf9a8156f249cbaa4a1a07fa7889b6fe65f8c1ff0d47917b6d8d0004866f24b8c6c32ccc79f897fd13e9e1981d92_0","lines":"\tfree(sat->sat_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":539,"col":1,"offset":13998},"end":{"line":539,"col":16,"offset":14013},"extra":{"metavars":{"$FUN":{"start":{"line":539,"col":1,"offset":13998},"end":{"line":539,"col":16,"offset":14013},"abstract_content":"cdf_count_chain"},"$SIGNED":{"start":{"line":549,"col":10,"offset":14293},"end":{"line":549,"col":11,"offset":14294},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"35eccc64ba9da2d7b83542170444d517f6add7966114f9dc015f30f35d27c5174d149461961938e79cfc5c004ed82bcbe08efe6ec6e4542b4753908c8f6aac10_0","lines":"cdf_count_chain(const cdf_sat_t *sat, cdf_secid_t sid, size_t size)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":552,"col":7,"offset":14306},"end":{"line":552,"col":16,"offset":14315},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":552,"col":7,"offset":14306},"end":{"line":552,"col":8,"offset":14307},"abstract_content":"j"},"$SIGNED":{"start":{"line":552,"col":11,"offset":14310},"end":{"line":552,"col":12,"offset":14311},"abstract_content":"i","propagated_value":{"svalue_start":{"line":552,"col":15,"offset":14314},"svalue_end":{"line":552,"col":16,"offset":14315},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_0","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":552,"col":11,"offset":14310},"end":{"line":552,"col":16,"offset":14315},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":552,"col":11,"offset":14310},"end":{"line":552,"col":12,"offset":14311},"abstract_content":"i","propagated_value":{"svalue_start":{"line":552,"col":15,"offset":14314},"svalue_end":{"line":552,"col":16,"offset":14315},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":552,"col":15,"offset":14314},"end":{"line":552,"col":16,"offset":14315},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_4","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":597,"col":7,"offset":15348},"end":{"line":597,"col":16,"offset":15357},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":597,"col":7,"offset":15348},"end":{"line":597,"col":8,"offset":15349},"abstract_content":"j"},"$SIGNED":{"start":{"line":597,"col":11,"offset":15352},"end":{"line":597,"col":12,"offset":15353},"abstract_content":"i","propagated_value":{"svalue_start":{"line":597,"col":15,"offset":15356},"svalue_end":{"line":597,"col":16,"offset":15357},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_1","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":597,"col":11,"offset":15352},"end":{"line":597,"col":16,"offset":15357},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":597,"col":11,"offset":15352},"end":{"line":597,"col":12,"offset":15353},"abstract_content":"i","propagated_value":{"svalue_start":{"line":597,"col":15,"offset":15356},"svalue_end":{"line":597,"col":16,"offset":15357},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":597,"col":15,"offset":15356},"end":{"line":597,"col":16,"offset":15357},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_5","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":643,"col":7,"offset":16542},"end":{"line":643,"col":16,"offset":16551},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":643,"col":7,"offset":16542},"end":{"line":643,"col":8,"offset":16543},"abstract_content":"j"},"$SIGNED":{"start":{"line":643,"col":11,"offset":16546},"end":{"line":643,"col":12,"offset":16547},"abstract_content":"i","propagated_value":{"svalue_start":{"line":643,"col":15,"offset":16550},"svalue_end":{"line":643,"col":16,"offset":16551},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_2","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":643,"col":11,"offset":16546},"end":{"line":643,"col":16,"offset":16551},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":643,"col":11,"offset":16546},"end":{"line":643,"col":12,"offset":16547},"abstract_content":"i","propagated_value":{"svalue_start":{"line":643,"col":15,"offset":16550},"svalue_end":{"line":643,"col":16,"offset":16551},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":643,"col":15,"offset":16550},"end":{"line":643,"col":16,"offset":16551},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_6","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":702,"col":3,"offset":18109},"end":{"line":702,"col":22,"offset":18128},"extra":{"metavars":{"$PTR":{"start":{"line":702,"col":8,"offset":18114},"end":{"line":702,"col":20,"offset":18126},"abstract_content":"dir->->dir_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6847f9c993ca978f22c0d986deb8032dc6a37a8a79d1274325dc7faa3422b2fd9e7663d9dac3e47d39f18b1bfee41131648b88340ed11ad4c174353002bcdb14_0","lines":"\t\tfree(dir->dir_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":706,"col":7,"offset":18152},"end":{"line":706,"col":16,"offset":18161},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":706,"col":7,"offset":18152},"end":{"line":706,"col":8,"offset":18153},"abstract_content":"j"},"$SIGNED":{"start":{"line":706,"col":11,"offset":18156},"end":{"line":706,"col":12,"offset":18157},"abstract_content":"i","propagated_value":{"svalue_start":{"line":706,"col":15,"offset":18160},"svalue_end":{"line":706,"col":16,"offset":18161},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_3","lines":"\tfor (j = i = 0; i < ns; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":706,"col":11,"offset":18156},"end":{"line":706,"col":16,"offset":18161},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":706,"col":11,"offset":18156},"end":{"line":706,"col":12,"offset":18157},"abstract_content":"i","propagated_value":{"svalue_start":{"line":706,"col":15,"offset":18160},"svalue_end":{"line":706,"col":16,"offset":18161},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":706,"col":15,"offset":18160},"end":{"line":706,"col":16,"offset":18161},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_7","lines":"\tfor (j = i = 0; i < ns; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":716,"col":8,"offset":18418},"end":{"line":716,"col":13,"offset":18423},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":716,"col":8,"offset":18418},"end":{"line":716,"col":9,"offset":18419},"abstract_content":"j"},"$SIGNED":{"start":{"line":716,"col":12,"offset":18422},"end":{"line":716,"col":13,"offset":18423},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_1","lines":"\t\tfor (j = 0; j < nd; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":723,"col":8,"offset":18607},"end":{"line":723,"col":13,"offset":18612},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":723,"col":8,"offset":18607},"end":{"line":723,"col":9,"offset":18608},"abstract_content":"i"},"$SIGNED":{"start":{"line":723,"col":12,"offset":18611},"end":{"line":723,"col":13,"offset":18612},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_8","lines":"\t\tfor (i = 0; i < dir->dir_len; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":725,"col":2,"offset":18673},"end":{"line":725,"col":12,"offset":18683},"extra":{"metavars":{"$PTR":{"start":{"line":725,"col":7,"offset":18678},"end":{"line":725,"col":10,"offset":18681},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c42ad140a927c6e207d7a7f8cccc4b6475710e706bfe0e70ecc1178a07c88358062bb55fe334ad6e62d58c0cfc9bcc5a5c9b133ae243df4550a0fd70f470291_0","lines":"\tfree(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":728,"col":2,"offset":18701},"end":{"line":728,"col":21,"offset":18720},"extra":{"metavars":{"$PTR":{"start":{"line":728,"col":7,"offset":18706},"end":{"line":728,"col":19,"offset":18718},"abstract_content":"dir->->dir_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6847f9c993ca978f22c0d986deb8032dc6a37a8a79d1274325dc7faa3422b2fd9e7663d9dac3e47d39f18b1bfee41131648b88340ed11ad4c174353002bcdb14_1","lines":"\tfree(dir->dir_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-double-free","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":729,"col":2,"offset":18722},"end":{"line":729,"col":6,"offset":18726},"extra":{"metavars":{"$PTR":{"start":{"line":725,"col":7,"offset":18678},"end":{"line":725,"col":10,"offset":18681},"abstract_content":"buf"},"$FREE":{"start":{"line":729,"col":2,"offset":18722},"end":{"line":729,"col":6,"offset":18726},"abstract_content":"free"}},"message":"The software calls free() twice on the same memory address, potentially  leading to memory corruption. This corruption can cause the program to  crash or cause two later calls to malloc() to return the same pointer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/415","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"835ad2fc68f9946aab2f9419e18cb17e4cbcdbe4b246693fa0a05f2128dc77a70fdc183939d897f6e8b4efa84f08f11167cd0e78db727abe23e672551ea99e08_0","lines":"\tfree(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":729,"col":2,"offset":18722},"end":{"line":729,"col":12,"offset":18732},"extra":{"metavars":{"$PTR":{"start":{"line":729,"col":7,"offset":18727},"end":{"line":729,"col":10,"offset":18730},"abstract_content":"buf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c42ad140a927c6e207d7a7f8cccc4b6475710e706bfe0e70ecc1178a07c88358062bb55fe334ad6e62d58c0cfc9bcc5a5c9b133ae243df4550a0fd70f470291_1","lines":"\tfree(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":752,"col":7,"offset":19219},"end":{"line":752,"col":16,"offset":19228},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":752,"col":7,"offset":19219},"end":{"line":752,"col":8,"offset":19220},"abstract_content":"j"},"$SIGNED":{"start":{"line":752,"col":11,"offset":19223},"end":{"line":752,"col":12,"offset":19224},"abstract_content":"i","propagated_value":{"svalue_start":{"line":752,"col":15,"offset":19227},"svalue_end":{"line":752,"col":16,"offset":19228},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_4","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":752,"col":11,"offset":19223},"end":{"line":752,"col":16,"offset":19228},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":752,"col":11,"offset":19223},"end":{"line":752,"col":12,"offset":19224},"abstract_content":"i","propagated_value":{"svalue_start":{"line":752,"col":15,"offset":19227},"svalue_end":{"line":752,"col":16,"offset":19228},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":752,"col":15,"offset":19227},"end":{"line":752,"col":16,"offset":19228},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_9","lines":"\tfor (j = i = 0; sid >= 0; i++, j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":774,"col":2,"offset":19788},"end":{"line":774,"col":22,"offset":19808},"extra":{"metavars":{"$PTR":{"start":{"line":774,"col":7,"offset":19793},"end":{"line":774,"col":20,"offset":19806},"abstract_content":"ssat->->sat_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bab8673c52c22a188563fb34d3c13fac3cee0adb898d2012653f35d97eb65ecee9628dcbfa0b2de78c1237135b9e78149b468254a9937b4c47b7699fa3907165_0","lines":"\tfree(ssat->sat_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":787,"col":7,"offset":20060},"end":{"line":787,"col":12,"offset":20065},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":787,"col":7,"offset":20060},"end":{"line":787,"col":8,"offset":20061},"abstract_content":"i"},"$SIGNED":{"start":{"line":787,"col":11,"offset":20064},"end":{"line":787,"col":12,"offset":20065},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_10","lines":"\tfor (i = 0; i < dir->dir_len; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":861,"col":12,"offset":22045},"end":{"line":861,"col":39,"offset":22072},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":861,"col":12,"offset":22045},"end":{"line":861,"col":20,"offset":22053},"abstract_content":"name_len"},"$SIGNED":{"start":{"line":861,"col":38,"offset":22071},"end":{"line":861,"col":39,"offset":22072},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f55c52d2c1573effa1452ede40e8bc305e509707824b8b56d32fb42cdd5fd91595e7a32300328edf620a6396515bffa13712a0d0d0caeff2bc279b25a14ad56_0","lines":"\tsize_t i, name_len = strlen(name) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":889,"col":9,"offset":22751},"end":{"line":889,"col":28,"offset":22770},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":889,"col":9,"offset":22751},"end":{"line":889,"col":13,"offset":22755},"abstract_content":"tail"},"$SIGNED":{"start":{"line":889,"col":22,"offset":22764},"end":{"line":889,"col":23,"offset":22765},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8b0a8da26026d972ab9c2a81de365e0343211a8b7b81dc62b63dab01a81f0072e7f34aab73deb4d612b272c304d297d1ae78fa4fc5bf34690e5b720927a10a8f_0","lines":"\tsize_t tail = (i << 1) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":936,"col":2,"offset":23798},"end":{"line":936,"col":14,"offset":23810},"extra":{"metavars":{"$PTR":{"start":{"line":936,"col":7,"offset":23803},"end":{"line":936,"col":12,"offset":23808},"abstract_content":"*info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"332d362738b66eb0e60de0e3e34bd93a0af43042d95366fd63113522f81c9ffa6559569ce2eb31d91df9498043c2b7ed9e1d742b4e26f102647f71acaa15be14_0","lines":"\tfree(*info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":946,"col":2,"offset":23959},"end":{"line":947,"col":12,"offset":24001},"extra":{"metavars":{"$EXPR1":{"start":{"line":946,"col":6,"offset":23963},"end":{"line":946,"col":18,"offset":23975},"abstract_content":"inp->->pi_type"},"$EXPR2":{"start":{"line":946,"col":21,"offset":23978},"end":{"line":946,"col":31,"offset":23988},"abstract_content":"CDF_VECTOR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2bc2b1a36f0a10cca23563fc8c4cb3a39662a27cc93039f4051e2854daedcad4e2346241685f67b6c674aacd562f2aacee02ee2e1c149e9f0fe813a368f510d7_0","lines":"\tif (inp->pi_type & CDF_VECTOR)\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":952,"col":8,"offset":24095},"end":{"line":952,"col":36,"offset":24123},"extra":{"metavars":{"$FUN":{"start":{"line":952,"col":8,"offset":24095},"end":{"line":952,"col":14,"offset":24101},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_4","lines":"\t(void)memcpy(&inp->pi_val, p, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1012,"col":7,"offset":25618},"end":{"line":1012,"col":12,"offset":25623},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1012,"col":7,"offset":25618},"end":{"line":1012,"col":8,"offset":25619},"abstract_content":"i"},"$SIGNED":{"start":{"line":1012,"col":11,"offset":25622},"end":{"line":1012,"col":12,"offset":25623},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_11","lines":"\tfor (i = 0; i < sh.sh_properties; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1016,"col":23,"offset":25796},"end":{"line":1016,"col":28,"offset":25801},"extra":{"metavars":{"$TYPE":{"start":{"line":976,"col":8,"offset":24578},"end":{"line":976,"col":15,"offset":24585},"abstract_content":"uint8_t"},"$PTR1":{"start":{"line":1016,"col":23,"offset":25796},"end":{"line":1016,"col":24,"offset":25797},"abstract_content":"e"},"$PTR2":{"start":{"line":1016,"col":27,"offset":25800},"end":{"line":1016,"col":28,"offset":25801},"abstract_content":"q","propagated_value":{"svalue_start":{"line":1013,"col":12,"offset":25665},"svalue_end":{"line":1013,"col":54,"offset":25707},"svalue_abstract_content":"cdf_get_property_info_pos(sst h p e i)"}}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5997412c9428fef32aa92f09a2260de11b11a6d9b7c1d27c26da86f3d62909263f9e4a2a59762465d66d00c85ae28a8cd1a81c90da4e00318ebb1e42b1416118_0","lines":"\t\tleft = CAST(size_t, e - q);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1023,"col":40,"offset":26041},"end":{"line":1023,"col":45,"offset":26046},"extra":{"metavars":{"$TYPE":{"start":{"line":976,"col":8,"offset":24578},"end":{"line":976,"col":15,"offset":24585},"abstract_content":"uint8_t"},"$PTR1":{"start":{"line":1023,"col":40,"offset":26041},"end":{"line":1023,"col":41,"offset":26042},"abstract_content":"q"},"$PTR2":{"start":{"line":1023,"col":44,"offset":26045},"end":{"line":1023,"col":45,"offset":26046},"abstract_content":"p"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c3524d6dedefd07fabaeba76f07c45c7f94fc8ffc1c71df515c2b6dabeb0ce7c631bdfe1324a315af3678b19a65acf3769faedc408e6b3f18304a75edd1cfd8a_0","lines":"\t\t    i, inp[i].pi_id, inp[i].pi_type, q - p, offs));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1024,"col":3,"offset":26058},"end":{"line":1039,"col":4,"offset":26455},"extra":{"metavars":{"$EXPR1":{"start":{"line":1024,"col":7,"offset":26062},"end":{"line":1024,"col":21,"offset":26076},"abstract_content":"inp[i].pi_type"},"$EXPR2":{"start":{"line":1024,"col":24,"offset":26079},"end":{"line":1024,"col":34,"offset":26089},"abstract_content":"CDF_VECTOR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7cc338462b8a84e52fe04d44b112b4b5ed385212bcf99f22472d9c982d32408edbfd416bed2a1b26e3ab974c008ae99ce4b83a1c9bdcabb081691060fb31612c_0","lines":"\t\tif (inp[i].pi_type & CDF_VECTOR) {\n\t\t\tif (left < sizeof(uint32_t) * 2) {\n\t\t\t\tDPRINTF((\"missing CDF_VECTOR length\\n\"));\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t\tnelements = CDF_GETUINT32(q, 1);\n\t\t\tif (nelements > CDF_ELEMENT_LIMIT || nelements == 0) {\n\t\t\t\tDPRINTF((\"CDF_VECTOR with nelements == %\"\n\t\t\t\t    SIZE_T_FORMAT \"u\\n\", nelements));\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t\tslen = 2;\n\t\t} else {\n\t\t\tnelements = 1;\n\t\t\tslen = 1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1029,"col":4,"offset":26199},"end":{"line":1029,"col":35,"offset":26230},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1029,"col":4,"offset":26199},"end":{"line":1029,"col":13,"offset":26208},"abstract_content":"nelements"},"$SIGNED":{"start":{"line":1029,"col":33,"offset":26228},"end":{"line":1029,"col":34,"offset":26229},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ecdc6edd04ab779f1c2d4929ce4fb086a32cca1239472af0a6a7c2389c474b96f869f6d8284e0a9f6b360218b88d50a656ca88983ea7b1a6ce507d4f44da3b8b_0","lines":"\t\t\tnelements = CDF_GETUINT32(q, 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1035,"col":4,"offset":26400},"end":{"line":1035,"col":12,"offset":26408},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1035,"col":4,"offset":26400},"end":{"line":1035,"col":8,"offset":26404},"abstract_content":"slen"},"$SIGNED":{"start":{"line":1035,"col":11,"offset":26407},"end":{"line":1035,"col":12,"offset":26408},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec6cd734ff406afd8db346951e3c9b34bff72724a9ca872947b8f2a5074596df2257c7ce13367cfd21a1da28dff4d49c560b97e6c57bb0062bf863c7eefd2618_0","lines":"\t\t\tslen = 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1037,"col":4,"offset":26424},"end":{"line":1037,"col":17,"offset":26437},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1037,"col":4,"offset":26424},"end":{"line":1037,"col":13,"offset":26433},"abstract_content":"nelements"},"$SIGNED":{"start":{"line":1037,"col":16,"offset":26436},"end":{"line":1037,"col":17,"offset":26437},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ecdc6edd04ab779f1c2d4929ce4fb086a32cca1239472af0a6a7c2389c474b96f869f6d8284e0a9f6b360218b88d50a656ca88983ea7b1a6ce507d4f44da3b8b_1","lines":"\t\t\tnelements = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1038,"col":4,"offset":26442},"end":{"line":1038,"col":12,"offset":26450},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1038,"col":4,"offset":26442},"end":{"line":1038,"col":8,"offset":26446},"abstract_content":"slen"},"$SIGNED":{"start":{"line":1038,"col":11,"offset":26449},"end":{"line":1038,"col":12,"offset":26450},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8e3f16e8aabe1d21e33cc8fc0919e51b9c9026e01f9502926f5d5d7bca5b03f2a0876dec8df63e3eaab5092c42cbc3d899a5f5d73c38f73772dd3839814f1387_0","lines":"\t\t\tslen = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1040,"col":3,"offset":26458},"end":{"line":1040,"col":31,"offset":26486},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1040,"col":3,"offset":26458},"end":{"line":1040,"col":5,"offset":26460},"abstract_content":"o4"},"$SIGNED":{"start":{"line":1040,"col":8,"offset":26463},"end":{"line":1040,"col":12,"offset":26467},"abstract_content":"slen"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1e863ebc5a637a127eed62fa7c6792fe1003b2af313124df842c3c6b08104c7c9f9828900af1b6ab5b04730dc49aeb13990b69d90e25af1069a1c94433475f74_0","lines":"\t\to4 = slen * sizeof(uint32_t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1041,"col":3,"offset":26490},"end":{"line":1042,"col":17,"offset":26563},"extra":{"metavars":{"$EXPR1":{"start":{"line":1041,"col":7,"offset":26494},"end":{"line":1041,"col":21,"offset":26508},"abstract_content":"inp[i].pi_type"},"$EXPR2":{"start":{"line":1041,"col":25,"offset":26512},"end":{"line":1041,"col":57,"offset":26544},"abstract_content":"CDF_ARRAY|CDF_BYREF|CDF_RESERVED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"977f29f95c364a451a2396d98058a158e39891ddef70afb1916166beb83596d2c90f928fe3f7089330a2c2818a91286aef6c918184544ba2a7c93ff0992d20b3_0","lines":"\t\tif (inp[i].pi_type & (CDF_ARRAY|CDF_BYREF|CDF_RESERVED))\n\t\t\tgoto unknown;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1074,"col":9,"offset":27332},"end":{"line":1074,"col":14,"offset":27337},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1074,"col":9,"offset":27332},"end":{"line":1074,"col":10,"offset":27333},"abstract_content":"j"},"$SIGNED":{"start":{"line":1074,"col":13,"offset":27336},"end":{"line":1074,"col":14,"offset":27337},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_2","lines":"\t\t\tfor (j = 0; j < nelements && i < sh.sh_properties;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1096,"col":5,"offset":27866},"end":{"line":1097,"col":10,"offset":27886},"extra":{"metavars":{"$EXPR1":{"start":{"line":1096,"col":9,"offset":27870},"end":{"line":1096,"col":10,"offset":27871},"abstract_content":"l","propagated_value":{"svalue_start":{"line":1082,"col":9,"offset":27479},"svalue_end":{"line":1082,"col":31,"offset":27501},"svalue_abstract_content":"CDF_GETUINT32(q slen)"}},"$EXPR2":{"start":{"line":1096,"col":13,"offset":27874},"end":{"line":1096,"col":14,"offset":27875},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"776b88dd341235896bc47a0ddaf95bd5ca8170b472b3a86985e5338cdb324972d17a7550ace56cc45fe136c9af5172e6df6dc4706f72076bea5d64eb40f4c3db_0","lines":"\t\t\t\tif (l & 1)\n\t\t\t\t\tl++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1105,"col":4,"offset":27990},"end":{"line":1106,"col":18,"offset":28040},"extra":{"metavars":{"$EXPR1":{"start":{"line":1105,"col":8,"offset":27994},"end":{"line":1105,"col":22,"offset":28008},"abstract_content":"inp[i].pi_type"},"$EXPR2":{"start":{"line":1105,"col":25,"offset":28011},"end":{"line":1105,"col":35,"offset":28021},"abstract_content":"CDF_VECTOR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7cc338462b8a84e52fe04d44b112b4b5ed385212bcf99f22472d9c982d32408edbfd416bed2a1b26e3ab974c008ae99ce4b83a1c9bdcabb081691060fb31612c_1","lines":"\t\t\tif (inp[i].pi_type & CDF_VECTOR)\n\t\t\t\tgoto unknown;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1118,"col":2,"offset":28234},"end":{"line":1118,"col":14,"offset":28246},"extra":{"metavars":{"$PTR":{"start":{"line":1118,"col":7,"offset":28239},"end":{"line":1118,"col":12,"offset":28244},"abstract_content":"*info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"332d362738b66eb0e60de0e3e34bd93a0af43042d95366fd63113522f81c9ffa6559569ce2eb31d91df9498043c2b7ed9e1d742b4e26f102647f71acaa15be14_1","lines":"\tfree(*info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1148,"col":2,"offset":29199},"end":{"line":1148,"col":14,"offset":29211},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1148,"col":2,"offset":29199},"end":{"line":1148,"col":10,"offset":29207},"abstract_content":"maxcount"},"$SIGNED":{"start":{"line":1148,"col":13,"offset":29210},"end":{"line":1148,"col":14,"offset":29211},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"783f09b52a72a976d40854b383c88f2f32d6ac2ff4201c586b79cc0e567faf0704762c263f0c152f5a9ce87920a9f5c45b59ee22df717ece2de0250c0cfc1b71_0","lines":"\tmaxcount = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1177,"col":7,"offset":29901},"end":{"line":1177,"col":13,"offset":29907},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1177,"col":7,"offset":29901},"end":{"line":1177,"col":9,"offset":29903},"abstract_content":"nr"},"$SIGNED":{"start":{"line":1177,"col":12,"offset":29906},"end":{"line":1177,"col":13,"offset":29907},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"461f479cdcf00d51c77b5ed4601d73fdac51a0bf001ade7433a6c7859f3f51b990333d4cf13854cc532c768e3d21ac7cc6c2aed615801c8f3db4594abdb018d5_0","lines":"\tfor (nr = 0;; nr++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1178,"col":3,"offset":29920},"end":{"line":1178,"col":37,"offset":29954},"extra":{"metavars":{"$FUN":{"start":{"line":1178,"col":3,"offset":29920},"end":{"line":1178,"col":9,"offset":29926},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9fb2ab1beaa124829a8ffe3a85b1fc6c55d02ff4db18abd9a2d5b084c4cae8066d4be7e20e29f30559efc77b6e9bf9037d1eef058f944e858df341560baf2923_5","lines":"\t\tmemcpy(&reclen, b, sizeof(reclen));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1196,"col":7,"offset":30316},"end":{"line":1196,"col":16,"offset":30325},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1196,"col":7,"offset":30316},"end":{"line":1196,"col":8,"offset":30317},"abstract_content":"j"},"$SIGNED":{"start":{"line":1196,"col":11,"offset":30320},"end":{"line":1196,"col":12,"offset":30321},"abstract_content":"i","propagated_value":{"svalue_start":{"line":1196,"col":15,"offset":30324},"svalue_end":{"line":1196,"col":16,"offset":30325},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a2388f68a78ea8ba2a0ad6d7fd7accbb97d5cb74a56d9edc7f43e8be2c3dda0e3c430cdf55f649951f5e676b9addf67993f0fa6df361f5fd532b5702fc6569f_5","lines":"\tfor (j = i = 0; i < nr; b += reclen) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1196,"col":11,"offset":30320},"end":{"line":1196,"col":16,"offset":30325},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1196,"col":11,"offset":30320},"end":{"line":1196,"col":12,"offset":30321},"abstract_content":"i","propagated_value":{"svalue_start":{"line":1196,"col":15,"offset":30324},"svalue_end":{"line":1196,"col":16,"offset":30325},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":1196,"col":15,"offset":30324},"end":{"line":1196,"col":16,"offset":30325},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_12","lines":"\tfor (j = i = 0; i < nr; b += reclen) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-return","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1200,"col":3,"offset":30407},"end":{"line":1200,"col":24,"offset":30428},"extra":{"metavars":{"$FUN":{"start":{"line":1200,"col":3,"offset":30407},"end":{"line":1200,"col":24,"offset":30428},"abstract_content":"extract_catalog_field"},"$TYPE":{"start":{"line":1200,"col":3,"offset":30407},"end":{"line":1218,"col":14,"offset":30921},"abstract_content":"extract_catalog_field nb eb"},"$ARG":{"start":{"line":1200,"col":25,"offset":30429},"end":{"line":1200,"col":33,"offset":30437},"abstract_content":"uint16_t"}},"message":"A non-void function does not have a return statement. Hence, its return value can be considered undefined.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/393","https://cwe.mitre.org/data/definitions/394"],"confidence":"LOW"},"severity":"INFO","fingerprint":"943ce580447d544d9d2614c5daab42cec3ad801982a39ef1e24dbf31760af99e03524c8cba405b5bce83ebb4952fc3a7cc658f1070df501e087980fda228f5af_0","lines":"\t\textract_catalog_field(uint16_t, ce_namlen, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1223,"col":8,"offset":30970},"end":{"line":1223,"col":13,"offset":30975},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1223,"col":8,"offset":30970},"end":{"line":1223,"col":9,"offset":30971},"abstract_content":"k"},"$SIGNED":{"start":{"line":1223,"col":12,"offset":30974},"end":{"line":1223,"col":13,"offset":30975},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"438054a19e1aabde3d37ef2ae1f0cb46f2944b34fadab6356433a66cd650d4f1f6c12082631e266818ff60e1d04e6521c4c1d32b513cfc81955248fcc9a019cb_1","lines":"\t\tfor (k = 0; k < cep->ce_namlen; k++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1236,"col":9,"offset":31226},"end":{"line":1240,"col":20,"offset":31488},"extra":{"metavars":{"$FUN":{"start":{"line":1236,"col":9,"offset":31226},"end":{"line":1236,"col":17,"offset":31234},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_0","lines":"\treturn snprintf(buf, buflen, \"%.8x-%.4x-%.4x-%.2x%.2x-\"\n\t    \"%.2x%.2x%.2x%.2x%.2x%.2x\", id->cl_dword, id->cl_word[0],\n\t    id->cl_word[1], id->cl_two[0], id->cl_two[1], id->cl_six[0],\n\t    id->cl_six[1], id->cl_six[2], id->cl_six[3], id->cl_six[4],\n\t    id->cl_six[5]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1274,"col":7,"offset":32604},"end":{"line":1274,"col":12,"offset":32609},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1274,"col":7,"offset":32604},"end":{"line":1274,"col":8,"offset":32605},"abstract_content":"i"},"$SIGNED":{"start":{"line":1274,"col":11,"offset":32608},"end":{"line":1274,"col":12,"offset":32609},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_13","lines":"\tfor (i = 0; i < __arraycount(vn); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1276,"col":11,"offset":32668},"end":{"line":1276,"col":47,"offset":32704},"extra":{"metavars":{"$FUN":{"start":{"line":1276,"col":11,"offset":32668},"end":{"line":1276,"col":19,"offset":32676},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_1","lines":"\t\t\treturn snprintf(buf, bufsiz, \"%s\", vn[i].n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1277,"col":9,"offset":32714},"end":{"line":1277,"col":40,"offset":32745},"extra":{"metavars":{"$FUN":{"start":{"line":1277,"col":9,"offset":32714},"end":{"line":1277,"col":17,"offset":32722},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_2","lines":"\treturn snprintf(buf, bufsiz, \"%#x\", p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1296,"col":3,"offset":33049},"end":{"line":1296,"col":57,"offset":33103},"extra":{"metavars":{"$RET":{"start":{"line":1296,"col":3,"offset":33049},"end":{"line":1296,"col":6,"offset":33052},"abstract_content":"len","propagated_value":{"svalue_start":{"line":1283,"col":12,"offset":32836},"svalue_end":{"line":1283,"col":13,"offset":32837},"svalue_abstract_content":"0"}}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"246cf435b4e0aa55c0afbda5aee417f63992ed85d65b433aebaa54755185bbb08ba8f759e770b7837e80221901e1da3f685b3463858e5c571c0997f1d720b46f_0","lines":"\t\tlen += snprintf(buf + len, bufsiz - len, \"%dd+\", days);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1296,"col":10,"offset":33056},"end":{"line":1296,"col":57,"offset":33103},"extra":{"metavars":{"$FUN":{"start":{"line":1296,"col":10,"offset":33056},"end":{"line":1296,"col":18,"offset":33064},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_3","lines":"\t\tlen += snprintf(buf + len, bufsiz - len, \"%dd+\", days);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1302,"col":3,"offset":33183},"end":{"line":1302,"col":59,"offset":33239},"extra":{"metavars":{"$RET":{"start":{"line":1302,"col":3,"offset":33183},"end":{"line":1302,"col":6,"offset":33186},"abstract_content":"len"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"246cf435b4e0aa55c0afbda5aee417f63992ed85d65b433aebaa54755185bbb08ba8f759e770b7837e80221901e1da3f685b3463858e5c571c0997f1d720b46f_1","lines":"\t\tlen += snprintf(buf + len, bufsiz - len, \"%.2d:\", hours);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1302,"col":10,"offset":33190},"end":{"line":1302,"col":59,"offset":33239},"extra":{"metavars":{"$FUN":{"start":{"line":1302,"col":10,"offset":33190},"end":{"line":1302,"col":18,"offset":33198},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_4","lines":"\t\tlen += snprintf(buf + len, bufsiz - len, \"%.2d:\", hours);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1307,"col":2,"offset":33296},"end":{"line":1307,"col":57,"offset":33351},"extra":{"metavars":{"$RET":{"start":{"line":1307,"col":2,"offset":33296},"end":{"line":1307,"col":5,"offset":33299},"abstract_content":"len"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"246cf435b4e0aa55c0afbda5aee417f63992ed85d65b433aebaa54755185bbb08ba8f759e770b7837e80221901e1da3f685b3463858e5c571c0997f1d720b46f_2","lines":"\tlen += snprintf(buf + len, bufsiz - len, \"%.2d:\", mins);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1307,"col":9,"offset":33303},"end":{"line":1307,"col":57,"offset":33351},"extra":{"metavars":{"$FUN":{"start":{"line":1307,"col":9,"offset":33303},"end":{"line":1307,"col":17,"offset":33311},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_5","lines":"\tlen += snprintf(buf + len, bufsiz - len, \"%.2d:\", mins);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1311,"col":2,"offset":33403},"end":{"line":1311,"col":56,"offset":33457},"extra":{"metavars":{"$RET":{"start":{"line":1311,"col":2,"offset":33403},"end":{"line":1311,"col":5,"offset":33406},"abstract_content":"len"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"246cf435b4e0aa55c0afbda5aee417f63992ed85d65b433aebaa54755185bbb08ba8f759e770b7837e80221901e1da3f685b3463858e5c571c0997f1d720b46f_3","lines":"\tlen += snprintf(buf + len, bufsiz - len, \"%.2d\", secs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1311,"col":9,"offset":33410},"end":{"line":1311,"col":56,"offset":33457},"extra":{"metavars":{"$FUN":{"start":{"line":1311,"col":9,"offset":33410},"end":{"line":1311,"col":17,"offset":33418},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bd284cc396cc01ea9c1ea9eb81dd637a31e7ba2f80ae6d3aa3c9b942da8a7cd18a78d82f6a93c010e91e2868bebd2c939663ce1f4cfa3cffbdeed97f026ae214_6","lines":"\tlen += snprintf(buf + len, bufsiz - len, \"%.2d\", secs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1319,"col":7,"offset":33555},"end":{"line":1319,"col":12,"offset":33560},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1319,"col":7,"offset":33555},"end":{"line":1319,"col":8,"offset":33556},"abstract_content":"i"},"$SIGNED":{"start":{"line":1319,"col":11,"offset":33559},"end":{"line":1319,"col":12,"offset":33560},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_14","lines":"\tfor (i = 0; i < len && p[i]; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1346,"col":7,"offset":34327},"end":{"line":1346,"col":12,"offset":34332},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1346,"col":7,"offset":34327},"end":{"line":1346,"col":8,"offset":34328},"abstract_content":"i"},"$SIGNED":{"start":{"line":1346,"col":11,"offset":34331},"end":{"line":1346,"col":12,"offset":34332},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_15","lines":"\tfor (i = 0; i < __arraycount(h->h_master_sat); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1349,"col":9,"offset":34438},"end":{"line":1350,"col":43,"offset":34537},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_0","lines":"\t\t(void)fprintf(stderr, \"%35.35s[%.3\" SIZE_T_FORMAT \"u] = %d\\n\",\n\t\t    \"master_sat\", i, h->h_master_sat[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1359,"col":7,"offset":34673},"end":{"line":1359,"col":12,"offset":34678},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1359,"col":7,"offset":34673},"end":{"line":1359,"col":8,"offset":34674},"abstract_content":"i"},"$SIGNED":{"start":{"line":1359,"col":11,"offset":34677},"end":{"line":1359,"col":12,"offset":34678},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_16","lines":"\tfor (i = 0; i < sat->sat_len; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1360,"col":9,"offset":34713},"end":{"line":1361,"col":45,"offset":34805},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_1","lines":"\t\t(void)fprintf(stderr, \"%s[%\" SIZE_T_FORMAT \"u]:\\n%.6\"\n\t\t    SIZE_T_FORMAT \"u: \", prefix, i, i * s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1362,"col":8,"offset":34814},"end":{"line":1362,"col":13,"offset":34819},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1362,"col":8,"offset":34814},"end":{"line":1362,"col":9,"offset":34815},"abstract_content":"j"},"$SIGNED":{"start":{"line":1362,"col":12,"offset":34818},"end":{"line":1362,"col":13,"offset":34819},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_3","lines":"\t\tfor (j = 0; j < s; j++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1366,"col":11,"offset":34949},"end":{"line":1367,"col":30,"offset":35016},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_2","lines":"\t\t\t\t(void)fprintf(stderr, \"\\n%.6\" SIZE_T_FORMAT\n\t\t\t\t    \"u: \", i * s + j + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1381,"col":7,"offset":35205},"end":{"line":1381,"col":12,"offset":35210},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1381,"col":7,"offset":35205},"end":{"line":1381,"col":8,"offset":35206},"abstract_content":"i"},"$SIGNED":{"start":{"line":1381,"col":11,"offset":35209},"end":{"line":1381,"col":12,"offset":35210},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_17","lines":"\tfor (i = 0, j = 0; i < len; i++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1381,"col":14,"offset":35212},"end":{"line":1381,"col":19,"offset":35217},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1381,"col":14,"offset":35212},"end":{"line":1381,"col":15,"offset":35213},"abstract_content":"j"},"$SIGNED":{"start":{"line":1381,"col":18,"offset":35216},"end":{"line":1381,"col":19,"offset":35217},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_4","lines":"\tfor (i = 0, j = 0; i < len; i++, p++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1385,"col":4,"offset":35336},"end":{"line":1385,"col":9,"offset":35341},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1385,"col":4,"offset":35336},"end":{"line":1385,"col":5,"offset":35337},"abstract_content":"j"},"$SIGNED":{"start":{"line":1385,"col":8,"offset":35340},"end":{"line":1385,"col":9,"offset":35341},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_5","lines":"\t\t\tj = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1387,"col":10,"offset":35372},"end":{"line":1388,"col":20,"offset":35438},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_3","lines":"\t\t\t(void)fprintf(stderr, \"%s\\n%.4\" SIZE_T_FORMAT \"x: \",\n\t\t\t    abuf, i + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1415,"col":7,"offset":36008},"end":{"line":1415,"col":12,"offset":36013},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1415,"col":7,"offset":36008},"end":{"line":1415,"col":8,"offset":36009},"abstract_content":"i"},"$SIGNED":{"start":{"line":1415,"col":11,"offset":36012},"end":{"line":1415,"col":12,"offset":36013},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_18","lines":"\tfor (i = 0; i < dir->dir_len; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1418,"col":8,"offset":36087},"end":{"line":1418,"col":13,"offset":36092},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1418,"col":8,"offset":36087},"end":{"line":1418,"col":9,"offset":36088},"abstract_content":"j"},"$SIGNED":{"start":{"line":1418,"col":12,"offset":36091},"end":{"line":1418,"col":13,"offset":36092},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_6","lines":"\t\tfor (j = 0; j < sizeof(name); j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1420,"col":9,"offset":36169},"end":{"line":1421,"col":15,"offset":36238},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_4","lines":"\t\t(void)fprintf(stderr, \"Directory %\" SIZE_T_FORMAT \"u: %s\\n\",\n\t\t    i, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1452,"col":4,"offset":37451},"end":{"line":1452,"col":22,"offset":37469},"extra":{"metavars":{"$PTR":{"start":{"line":1452,"col":9,"offset":37456},"end":{"line":1452,"col":20,"offset":37467},"abstract_content":"scn.sst_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2dc1fd1a31169b768775f91a40017a66505a506d4f4989982c20994dda425df27bdea09c8d250a8686351c3dffd718d894075c064d5f4bcbe23859713c358e1d_0","lines":"\t\t\tfree(scn.sst_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1469,"col":7,"offset":37667},"end":{"line":1469,"col":12,"offset":37672},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1469,"col":7,"offset":37667},"end":{"line":1469,"col":8,"offset":37668},"abstract_content":"i"},"$SIGNED":{"start":{"line":1469,"col":11,"offset":37671},"end":{"line":1469,"col":12,"offset":37672},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_19","lines":"\tfor (i = 0; i < count; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1471,"col":9,"offset":37760},"end":{"line":1471,"col":61,"offset":37812},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7ad498a0cf24d697b4a4d8daea9a8584d0910f7371cf4f4569fa9a0fd03a27d64b3316ba0827447b3f60c56e220074287eb1a03656c7fa82be3e96a7378818a1_5","lines":"\t\t(void)fprintf(stderr, \"%\" SIZE_T_FORMAT \"u) %s: \", i, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1503,"col":9,"offset":38632},"end":{"line":1503,"col":14,"offset":38637},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1503,"col":9,"offset":38632},"end":{"line":1503,"col":10,"offset":38633},"abstract_content":"j"},"$SIGNED":{"start":{"line":1503,"col":13,"offset":38636},"end":{"line":1503,"col":14,"offset":38637},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ff0038f0f17ba50070d1bf220bf4920f435e12f35f5c6ff7b105fcd3ddb9ea0d78d793eb4da846c6ce521cb95a7572b72f08fb96c60d4147ac756410d26ed598_7","lines":"\t\t\tfor (j = 0; j < info[i].pi_str.s_len - 1; j++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1550,"col":2,"offset":39967},"end":{"line":1550,"col":13,"offset":39978},"extra":{"metavars":{"$PTR":{"start":{"line":1550,"col":7,"offset":39972},"end":{"line":1550,"col":11,"offset":39976},"abstract_content":"info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"53de730d034c8e39ac511b61f26af1cb83b0ac415f99de7185cc10b247b3426174bdc6ba92341f4fbf491b3b0a2d82af4bf0654dac57d94a2ddef364214fdcb0_0","lines":"\tfree(info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1565,"col":7,"offset":40245},"end":{"line":1565,"col":12,"offset":40250},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1565,"col":7,"offset":40245},"end":{"line":1565,"col":8,"offset":40246},"abstract_content":"i"},"$SIGNED":{"start":{"line":1565,"col":11,"offset":40249},"end":{"line":1565,"col":12,"offset":40250},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af5b828e2b6a2b9307004d900d0a97dcb7af4e3cc866834e8a2fd75b3a54fde81e7ab060a3db13180918d0f64180f9a9ba7ecd84d442042addca28c00aa213f0_20","lines":"\tfor (i = 0; i < cat->cat_num; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1571,"col":2,"offset":40465},"end":{"line":1571,"col":12,"offset":40475},"extra":{"metavars":{"$PTR":{"start":{"line":1571,"col":7,"offset":40470},"end":{"line":1571,"col":10,"offset":40473},"abstract_content":"cat"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1dee866fb56f006faad5c9ca6dbb4a8cf485b4b421477252881ce6bfba9ddb8afb9a351f7a13d8cd3397507d0cae3b897bc41d7765e4175dd5bd81aa7d03be82_0","lines":"\tfree(cat);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1599,"col":20,"offset":40938},"end":{"line":1599,"col":43,"offset":40961},"extra":{"metavars":{"$FUN":{"start":{"line":1599,"col":20,"offset":40938},"end":{"line":1599,"col":24,"offset":40942},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"81924c653d68ddccb4ba9f65e11acbaebec04c47ecb5f055364c591fce13da4efd3152410429b2e4bc098546a8b22ea5f7b2df5a00f2ce59c84da658dff932d3_0","lines":"\t\tif ((info.i_fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1599,"col":25,"offset":40943},"end":{"line":1599,"col":29,"offset":40947},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d95448f38e658c797d0157c0aa90da97163b92393f231a978251a972dd217fbd5c66f74b082331dde670d3b8503623891b7ed8f26aad4982dbf590964a6a2c60_0","lines":"\t\tif ((info.i_fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1600,"col":42,"offset":41011},"end":{"line":1600,"col":46,"offset":41015},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d95448f38e658c797d0157c0aa90da97163b92393f231a978251a972dd217fbd5c66f74b082331dde670d3b8503623891b7ed8f26aad4982dbf590964a6a2c60_1","lines":"\t\t\terr(EXIT_FAILURE, \"Cannot open `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":71,"col":7,"offset":2088},"end":{"line":71,"col":12,"offset":2093},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":71,"col":7,"offset":2088},"end":{"line":71,"col":8,"offset":2089},"abstract_content":"m"},"$SIGNED":{"start":{"line":71,"col":11,"offset":2092},"end":{"line":71,"col":12,"offset":2093},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"42e96c55b654151ee8f23e2cfa8ab58e1171bd87066824e622d972b54e11d0fd7a9649862e97c35a3b5ee014de0bde0ba019c7d8b011b4cab0e8f689b73ca6a5_0","lines":"\tfor (m = 0; m < __arraycount(mdays); m++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":72,"col":3,"offset":2129},"end":{"line":72,"col":49,"offset":2175},"extra":{"metavars":{"$EXPR1":{"start":{"line":72,"col":25,"offset":2151},"end":{"line":72,"col":26,"offset":2152},"abstract_content":"m"},"$EXPR2":{"start":{"line":72,"col":30,"offset":2156},"end":{"line":72,"col":31,"offset":2157},"abstract_content":"1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"451cdf634ed31d2664516257cfd8f45fe80be0cb18d71527d89571a5fede3d01066c96ef35c0f79e7e38a1bff7a3fbec7126cd8413cf34d2f09865a7a6734922_0","lines":"\t\tint sub = mdays[m] + (m == 1 && isleap(year));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":72,"col":7,"offset":2133},"end":{"line":72,"col":47,"offset":2173},"extra":{"metavars":{"$SIGNED":{"start":{"line":72,"col":7,"offset":2133},"end":{"line":72,"col":10,"offset":2136},"abstract_content":"sub"},"$UNSIGNED":{"start":{"line":72,"col":19,"offset":2145},"end":{"line":72,"col":20,"offset":2146},"abstract_content":"m"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7a70aeac394e95db1ec67d6737339c060d7e776a9ff55466207048081d47a26c6f55f842600d0cbc0a90df44863780095611908cfbb5b4f17b142e4eacbdd99c_0","lines":"\t\tint sub = mdays[m] + (m == 1 && isleap(year));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":88,"col":7,"offset":2351},"end":{"line":88,"col":12,"offset":2356},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":88,"col":7,"offset":2351},"end":{"line":88,"col":8,"offset":2352},"abstract_content":"m"},"$SIGNED":{"start":{"line":88,"col":11,"offset":2355},"end":{"line":88,"col":12,"offset":2356},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"42e96c55b654151ee8f23e2cfa8ab58e1171bd87066824e622d972b54e11d0fd7a9649862e97c35a3b5ee014de0bde0ba019c7d8b011b4cab0e8f689b73ca6a5_1","lines":"\tfor (m = 0; m < __arraycount(mdays); m++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":174,"col":8,"offset":3962},"end":{"line":175,"col":28,"offset":4045},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":8,"offset":3962},"end":{"line":174,"col":16,"offset":3970},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d51b9ab9db36814887f06a0c8d507a0e3f8690b7618b9538041ffa0f5861afb2d359f54f165d2f807703de499dcf6cbe982585ab27a4580f942ff45334443763_0","lines":"\t(void)snprintf(buf, 26, \"*Bad* %#16.16\" INT64_T_FORMAT \"x\\n\",\n\t    CAST(long long, *sec));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","start":{"line":174,"col":8,"offset":3962},"end":{"line":175,"col":28,"offset":4045},"extra":{"metavars":{"$BUF":{"start":{"line":174,"col":17,"offset":3971},"end":{"line":174,"col":20,"offset":3974},"abstract_content":"buf"},"$LEN":{"start":{"line":174,"col":22,"offset":3976},"end":{"line":174,"col":24,"offset":3978},"abstract_content":"26"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4222ac0204059a820ab9cbc709a7d4c9717cd9cb3cd49e571d966bbd0525b7b18e5a60e3eada4ce47111a3b96f5e13be139807402560c0f84147744ca0e54920_0","lines":"\t(void)snprintf(buf, 26, \"*Bad* %#16.16\" INT64_T_FORMAT \"x\\n\",\n\t    CAST(long long, *sec));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":106,"col":17,"offset":3325},"end":{"line":106,"col":22,"offset":3330},"extra":{"metavars":{"$NARROW":{"start":{"line":106,"col":17,"offset":3325},"end":{"line":106,"col":18,"offset":3326},"abstract_content":"x"},"$LARGE":{"start":{"line":106,"col":21,"offset":3329},"end":{"line":106,"col":22,"offset":3330},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1fb80313291781859f97b908d0671fba4c97a3743001981a2551f213187c49d48ae76ebfd869555df21e234e644cfcfd2c31fea6ce1257ee82c8b77ee87bc80c_0","lines":"\tunsigned short x = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":112,"col":3,"offset":3496},"end":{"line":112,"col":28,"offset":3521},"extra":{"metavars":{"$NARROW":{"start":{"line":112,"col":3,"offset":3496},"end":{"line":112,"col":4,"offset":3497},"abstract_content":"x"},"$LARGE":{"start":{"line":112,"col":11,"offset":3504},"end":{"line":112,"col":12,"offset":3505},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7ba2ad7edc8c7f74476a8196e1320ae21ef150192c703f1ac48ba5e3c31052538270fb449fdab06b5cea25b9f66b5a1ee198591dc383a9bcdde313f621a537a6_0","lines":"\t\tx = buf[0] | (buf[1] << 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":114,"col":3,"offset":3532},"end":{"line":114,"col":28,"offset":3557},"extra":{"metavars":{"$NARROW":{"start":{"line":114,"col":3,"offset":3532},"end":{"line":114,"col":4,"offset":3533},"abstract_content":"x"},"$LARGE":{"start":{"line":114,"col":11,"offset":3540},"end":{"line":114,"col":12,"offset":3541},"abstract_content":"1"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1fb80313291781859f97b908d0671fba4c97a3743001981a2551f213187c49d48ae76ebfd869555df21e234e644cfcfd2c31fea6ce1257ee82c8b77ee87bc80c_1","lines":"\t\tx = buf[1] | (buf[0] << 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":260,"col":7,"offset":7412},"end":{"line":260,"col":12,"offset":7417},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":260,"col":7,"offset":7412},"end":{"line":260,"col":8,"offset":7413},"abstract_content":"i"},"$SIGNED":{"start":{"line":260,"col":11,"offset":7416},"end":{"line":260,"col":12,"offset":7417},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa95ffe8d289775bed7c410b6f0e634ddc72c059f9d70b0191594fba7b0032f0b8a4fb2c094222fe674a962e54eb9a8e7e51361e8369e476a985cdb67688a282_0","lines":"\tfor (i = 0; i < ncompr; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":285,"col":3,"offset":8066},"end":{"line":285,"col":64,"offset":8127},"extra":{"metavars":{"$SIGNED":{"start":{"line":285,"col":3,"offset":8066},"end":{"line":285,"col":6,"offset":8069},"abstract_content":"urv"},"$UNSIGNED":{"start":{"line":285,"col":42,"offset":8105},"end":{"line":285,"col":43,"offset":8106},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"66d49550c167493ad04b5ee875ce32ea921e16f20379d8d2475d54f28b14a200eb381dcc56a081ca23b989e5e2259ee4215dc7c266ec7a892c41d7b5f5472a8d_0","lines":"\t\turv = uncompressbuf(fd, ms->bytes_max, i, buf, &newbuf, &nsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":293,"col":5,"offset":8329},"end":{"line":293,"col":52,"offset":8376},"extra":{"metavars":{"$SIGNED":{"start":{"line":293,"col":5,"offset":8329},"end":{"line":293,"col":8,"offset":8332},"abstract_content":"prv"},"$UNSIGNED":{"start":{"line":293,"col":42,"offset":8366},"end":{"line":293,"col":43,"offset":8367},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2f8e8e2d8690aee057ed931c8e59542a09e5ab337cefc1ffa922e14cc4c5e013919967878425f37f8eed0c2a1b8c81f5b7348a04f6ec0b65e64ec78d42cd31ed_0","lines":"\t\t\t\tprv = format_decompression_error(ms, i, newbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":295,"col":5,"offset":8390},"end":{"line":295,"col":55,"offset":8440},"extra":{"metavars":{"$SIGNED":{"start":{"line":295,"col":5,"offset":8390},"end":{"line":295,"col":8,"offset":8393},"abstract_content":"prv"},"$UNSIGNED":{"start":{"line":295,"col":51,"offset":8436},"end":{"line":295,"col":54,"offset":8439},"abstract_content":"nsz","propagated_value":{"svalue_start":{"line":284,"col":9,"offset":8056},"svalue_end":{"line":284,"col":15,"offset":8062},"svalue_abstract_content":"nbytes"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"945f406256728cd5e31e6e76cb7d642616503e8a5b5e4a358085c007780984d6426991d62797174ab5a51e2113b0eab25437fa5bdf3b4398a56b58126df2a461_0","lines":"\t\t\t\tprv = file_buffer(ms, -1, NULL, name, newbuf, nsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":319,"col":6,"offset":9094},"end":{"line":319,"col":17,"offset":9105},"extra":{"metavars":{"$PTR":{"start":{"line":319,"col":11,"offset":9099},"end":{"line":319,"col":15,"offset":9103},"abstract_content":"rbuf","propagated_value":{"svalue_start":{"line":317,"col":16,"offset":9008},"svalue_end":{"line":317,"col":39,"offset":9031},"svalue_abstract_content":"file_pop_buffer(ms pb)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c7dc39e41db08ba865ec3d861472a31bbc10d42011399d76cc6cd961eaedcbef8d3050f95f4720ff11dbc7ad9b71bad97e5a2207d89ffa6384de70a392b18f95_0","lines":"\t\t\t\t\tfree(rbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":322,"col":5,"offset":9133},"end":{"line":322,"col":16,"offset":9144},"extra":{"metavars":{"$PTR":{"start":{"line":322,"col":10,"offset":9138},"end":{"line":322,"col":14,"offset":9142},"abstract_content":"rbuf","propagated_value":{"svalue_start":{"line":317,"col":16,"offset":9008},"svalue_end":{"line":317,"col":39,"offset":9031},"svalue_abstract_content":"file_pop_buffer(ms pb)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c7dc39e41db08ba865ec3d861472a31bbc10d42011399d76cc6cd961eaedcbef8d3050f95f4720ff11dbc7ad9b71bad97e5a2207d89ffa6384de70a392b18f95_1","lines":"\t\t\t\tfree(rbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":343,"col":2,"offset":9460},"end":{"line":343,"col":15,"offset":9473},"extra":{"metavars":{"$PTR":{"start":{"line":343,"col":7,"offset":9465},"end":{"line":343,"col":13,"offset":9471},"abstract_content":"newbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"43722ef5aadadd5393ad54b11f32caae076424509df43fa56146cddda6d3b3141fc64bbaa15444644f6582f50e2fce66365aa1bc4b2d4f3f895fe35011f54006_0","lines":"\tfree(newbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":390,"col":53,"offset":10226},"end":{"line":390,"col":59,"offset":10232},"extra":{"metavars":{"$EXPR":{"start":{"line":390,"col":53,"offset":10226},"end":{"line":390,"col":54,"offset":10227},"abstract_content":"t","propagated_value":{"svalue_start":{"line":382,"col":10,"offset":10089},"svalue_end":{"line":382,"col":11,"offset":10090},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dd5f1418752fbefe8e35d922c32cd4ed2d6b538c03711f042870c90b8b538d863f3a4e5ae2b08f7e044e319cb6ae54219c264864253a87c70856d0c6d5cb3048_0","lines":"\tif (canbepipe && (ioctl(fd, FIONREAD, &t) == -1 || t == 0)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":419,"col":3,"offset":10817},"end":{"line":419,"col":8,"offset":10822},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":419,"col":3,"offset":10817},"end":{"line":419,"col":4,"offset":10818},"abstract_content":"n"},"$SIGNED":{"start":{"line":419,"col":7,"offset":10821},"end":{"line":419,"col":8,"offset":10822},"abstract_content":"t"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"957b32ccd9fe24d40f9df99da1855739672e9b8e3f80c444760c75dc82c3f1278c65b11abb861e38cf09cb0eacd9bcb8563986bd291a6769047acb6295cbed08_0","lines":"\t\tn = t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":426,"col":17,"offset":10874},"end":{"line":426,"col":33,"offset":10890},"extra":{"metavars":{"$FUN":{"start":{"line":426,"col":17,"offset":10874},"end":{"line":426,"col":21,"offset":10878},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7094bd73728634e8675af62771c8fa81c6e1bf9c4d47a8c531d991c1b4363f0d781a8f5489e43f0a91c5167452e32dfcaab979f1af357b977d55b9b8b5355ead_0","lines":"\t\tswitch ((rv = read(fd, buf, n))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":450,"col":8,"offset":11250},"end":{"line":450,"col":52,"offset":11294},"extra":{"metavars":{"$FUN":{"start":{"line":450,"col":8,"offset":11250},"end":{"line":450,"col":15,"offset":11257},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fbda93ca8a902324ce32ee4dc1d8cafe8bd09b81394ed163424572a067197ddd46b47fce6639c57eb9b668029893c90a44298abc44e6848b9fe424e31d75242c_0","lines":"\t(void)strlcpy(buf, \"/tmp/file.XXXXXX\", sizeof buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-mktemp-tmpnam-tempnam","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":453,"col":15,"offset":11334},"end":{"line":453,"col":26,"offset":11345},"extra":{"metavars":{},"message":"Creating and using insecure temporary files can leave application and system data vulnerable to attack.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/377","https://cwe.mitre.org/data/definitions/367"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"64e35da49d02e990e60abdb4782f372e86dd822f9f0a15493c00911f4fcb451bb7ac16dcf63f516f4f5310008b57ffe480a64d7c7a8a3ff71fac345fc60368b1_0","lines":"\t\tchar *ptr = mktemp(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":453,"col":15,"offset":11334},"end":{"line":453,"col":26,"offset":11345},"extra":{"metavars":{"$FUN":{"start":{"line":453,"col":15,"offset":11334},"end":{"line":453,"col":21,"offset":11340},"abstract_content":"mktemp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"547f6d2e961cb2e52b89651139119da83f28d51d654e9b4f89010812309de30cec55a618b81cb496608812667b72fba068c04478fc7ee5621890512fc302c218_0","lines":"\t\tchar *ptr = mktemp(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":454,"col":9,"offset":11355},"end":{"line":454,"col":55,"offset":11401},"extra":{"metavars":{"$FUN":{"start":{"line":454,"col":9,"offset":11355},"end":{"line":454,"col":13,"offset":11359},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a462a8c55c0182e436b640f172041cefcfb12b8649fa39a05a2fc22028b324677e2e786838270ff72285e589a1076a3787c8f60a8a97b1e65c224238b76198c1_0","lines":"\t\ttfd = open(ptr, O_RDWR|O_TRUNC|O_EXCL|O_CREAT, 0600);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":456,"col":9,"offset":11424},"end":{"line":456,"col":20,"offset":11435},"extra":{"metavars":{"$FUN":{"start":{"line":456,"col":9,"offset":11424},"end":{"line":456,"col":15,"offset":11430},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1dbc66747f838ad45fafb2cab096a31fbbf55b10b382301750ba221d22ba721f23540db3621de36a75c7735de78b9a63cad389d276098c57af69d0e860686137_0","lines":"\t\t(void)unlink(ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":463,"col":9,"offset":11504},"end":{"line":463,"col":21,"offset":11516},"extra":{"metavars":{"$FUN":{"start":{"line":463,"col":9,"offset":11504},"end":{"line":463,"col":16,"offset":11511},"abstract_content":"mkstemp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dd1c73a537523a4f51fd9e71f2da042b9d700eb8043f91ad86a26974bdc3c18517d0bad2ffafaa21d57db2917f6bbcfeec6860a0b1f866245b54ec90009afa05_0","lines":"\t\ttfd = mkstemp(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":466,"col":9,"offset":11559},"end":{"line":466,"col":20,"offset":11570},"extra":{"metavars":{"$FUN":{"start":{"line":466,"col":9,"offset":11559},"end":{"line":466,"col":15,"offset":11565},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1dbc66747f838ad45fafb2cab096a31fbbf55b10b382301750ba221d22ba721f23540db3621de36a75c7735de78b9a63cad389d276098c57af69d0e860686137_1","lines":"\t\t(void)unlink(buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":479,"col":15,"offset":11800},"end":{"line":479,"col":45,"offset":11830},"extra":{"metavars":{"$FUN":{"start":{"line":479,"col":15,"offset":11800},"end":{"line":479,"col":20,"offset":11805},"abstract_content":"sread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78e6b2cea0a059a3a8b75768c7924ee041cef64ef503b11d9b6d42d35f95ae23d696db0741c799e23b8a98e5b6187e4b2562bf083a8d5e6e7ead0cc94955042e_0","lines":"\t\twhile ((r = sread(fd, buf, sizeof(buf), 1)) > 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":525,"col":9,"offset":12816},"end":{"line":525,"col":24,"offset":12831},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":525,"col":9,"offset":12816},"end":{"line":525,"col":19,"offset":12826},"abstract_content":"data_start"},"$SIGNED":{"start":{"line":525,"col":22,"offset":12829},"end":{"line":525,"col":24,"offset":12831},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec6c0c51cdd53b53f29d3c662f0892682b7133d02472b609c87c8dcf217e6244518f22953cf7616c1a9603e8a99e94505e9a76abcf8f3826300987add40da805_0","lines":"\tsize_t data_start = 10;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":527,"col":2,"offset":12835},"end":{"line":531,"col":3,"offset":12963},"extra":{"metavars":{"$EXPR1":{"start":{"line":527,"col":6,"offset":12839},"end":{"line":527,"col":9,"offset":12842},"abstract_content":"flg","propagated_value":{"svalue_start":{"line":524,"col":22,"offset":12800},"svalue_end":{"line":524,"col":28,"offset":12806},"svalue_abstract_content":"old[3]"}},"$EXPR2":{"start":{"line":527,"col":12,"offset":12845},"end":{"line":527,"col":18,"offset":12851},"abstract_content":"FEXTRA"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"58c20e8810f7d4eda47876f2b498ff807dc6a064163bfc41732ced8ae81e59db244dbba7860cdaab6ce5cbdfeacd1d9f1d9ccb50481cb63d74443972cdb5cab5_0","lines":"\tif (flg & FEXTRA) {\n\t\tif (data_start + 1 >= *n)\n\t\t\tgoto err;\n\t\tdata_start += 2 + old[data_start] + old[data_start + 1] * 256;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":532,"col":2,"offset":12965},"end":{"line":536,"col":3,"offset":13063},"extra":{"metavars":{"$EXPR1":{"start":{"line":532,"col":6,"offset":12969},"end":{"line":532,"col":9,"offset":12972},"abstract_content":"flg","propagated_value":{"svalue_start":{"line":524,"col":22,"offset":12800},"svalue_end":{"line":524,"col":28,"offset":12806},"svalue_abstract_content":"old[3]"}},"$EXPR2":{"start":{"line":532,"col":12,"offset":12975},"end":{"line":532,"col":17,"offset":12980},"abstract_content":"FNAME"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"844224711fd85678ccc7aa50d0af44aab8d99389f44d0fa76f8dcabedc219478355b96b3c81a04c18f618e558f10d89148914e67906f8f5163609eade57c490f_0","lines":"\tif (flg & FNAME) {\n\t\twhile(data_start < *n && old[data_start])\n\t\t\tdata_start++;\n\t\tdata_start++;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":537,"col":2,"offset":13065},"end":{"line":541,"col":3,"offset":13166},"extra":{"metavars":{"$EXPR1":{"start":{"line":537,"col":6,"offset":13069},"end":{"line":537,"col":9,"offset":13072},"abstract_content":"flg"},"$EXPR2":{"start":{"line":537,"col":12,"offset":13075},"end":{"line":537,"col":20,"offset":13083},"abstract_content":"FCOMMENT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2a8b2c5b464de6b2bb44a058847269b83adbbe24ce908acd9ba6450568726e45755f9daaa5ee52f2f830718ed3b35bb53b424332cf70387954e45cfc412bb379_0","lines":"\tif (flg & FCOMMENT) {\n\t\twhile(data_start < *n && old[data_start])\n\t\t\tdata_start++;\n\t\tdata_start++;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":542,"col":2,"offset":13168},"end":{"line":543,"col":19,"offset":13203},"extra":{"metavars":{"$EXPR1":{"start":{"line":542,"col":6,"offset":13172},"end":{"line":542,"col":9,"offset":13175},"abstract_content":"flg"},"$EXPR2":{"start":{"line":542,"col":12,"offset":13178},"end":{"line":542,"col":17,"offset":13183},"abstract_content":"FHCRC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3fd670b5e7ebc044fdefd6fe77c11ad39dfb2373c55db98253fa92bb4ce80ca36aac36b6902b2ec023df5c30f77af576cd8d68e7d79e4bb16e88ba7f403f754e_0","lines":"\tif (flg & FHCRC)\n\t\tdata_start += 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":38,"offset":13569},"end":{"line":562,"col":59,"offset":13590},"extra":{"metavars":{"$FUN":{"start":{"line":562,"col":38,"offset":13569},"end":{"line":562,"col":44,"offset":13575},"abstract_content":"malloc"},"$X":{"start":{"line":562,"col":45,"offset":13576},"end":{"line":562,"col":54,"offset":13585},"abstract_content":"bytes_max"},"$Y":{"start":{"line":562,"col":57,"offset":13588},"end":{"line":562,"col":58,"offset":13589},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e98e579532e40a506752769eaff7d0dc95b10dc933b30323c9ecc4c00cec8221397fbf7bd99bc08372d071e1ff5c1a6350d7db1179457d98aedab292d77abc7_0","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":38,"offset":13569},"end":{"line":562,"col":59,"offset":13590},"extra":{"metavars":{"$FUN":{"start":{"line":562,"col":38,"offset":13569},"end":{"line":562,"col":44,"offset":13575},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fd798d5d1f651de9827fb0f7ef066acfc0c2ac59256f7fc5b4f91e9f2a31635a150421a5f5a280f72208c8028dd2ed403ffd9fed7c483f5dc29be904b577bd8_0","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":592,"col":2,"offset":14242},"end":{"line":592,"col":71,"offset":14311},"extra":{"metavars":{"$FUN":{"start":{"line":592,"col":2,"offset":14242},"end":{"line":592,"col":9,"offset":14249},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fbda93ca8a902324ce32ee4dc1d8cafe8bd09b81394ed163424572a067197ddd46b47fce6639c57eb9b668029893c90a44298abc44e6848b9fe424e31d75242c_1","lines":"\tstrlcpy(RCAST(char *, *newch), z.msg ? z.msg : zError(rc), bytes_max);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":38,"offset":14671},"end":{"line":611,"col":59,"offset":14692},"extra":{"metavars":{"$FUN":{"start":{"line":611,"col":38,"offset":14671},"end":{"line":611,"col":44,"offset":14677},"abstract_content":"malloc"},"$X":{"start":{"line":611,"col":45,"offset":14678},"end":{"line":611,"col":54,"offset":14687},"abstract_content":"bytes_max"},"$Y":{"start":{"line":611,"col":57,"offset":14690},"end":{"line":611,"col":58,"offset":14691},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e98e579532e40a506752769eaff7d0dc95b10dc933b30323c9ecc4c00cec8221397fbf7bd99bc08372d071e1ff5c1a6350d7db1179457d98aedab292d77abc7_1","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":38,"offset":14671},"end":{"line":611,"col":59,"offset":14692},"extra":{"metavars":{"$FUN":{"start":{"line":611,"col":38,"offset":14671},"end":{"line":611,"col":44,"offset":14677},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fd798d5d1f651de9827fb0f7ef066acfc0c2ac59256f7fc5b4f91e9f2a31635a150421a5f5a280f72208c8028dd2ed403ffd9fed7c483f5dc29be904b577bd8_1","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":635,"col":2,"offset":15299},"end":{"line":635,"col":67,"offset":15364},"extra":{"metavars":{"$FUN":{"start":{"line":635,"col":2,"offset":15299},"end":{"line":635,"col":10,"offset":15307},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e53f14e1d63401218d429d2195f24318ae7952d8ffd126d6fb5219296a2672732f9a7610a3f1eb838649f841a8107e6d3e5bc5930760791ce5533401f499665f_0","lines":"\tsnprintf(RCAST(char *, *newch), bytes_max, \"bunzip error %d\", rc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":38,"offset":15734},"end":{"line":654,"col":59,"offset":15755},"extra":{"metavars":{"$FUN":{"start":{"line":654,"col":38,"offset":15734},"end":{"line":654,"col":44,"offset":15740},"abstract_content":"malloc"},"$X":{"start":{"line":654,"col":45,"offset":15741},"end":{"line":654,"col":54,"offset":15750},"abstract_content":"bytes_max"},"$Y":{"start":{"line":654,"col":57,"offset":15753},"end":{"line":654,"col":58,"offset":15754},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e98e579532e40a506752769eaff7d0dc95b10dc933b30323c9ecc4c00cec8221397fbf7bd99bc08372d071e1ff5c1a6350d7db1179457d98aedab292d77abc7_2","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":38,"offset":15734},"end":{"line":654,"col":59,"offset":15755},"extra":{"metavars":{"$FUN":{"start":{"line":654,"col":38,"offset":15734},"end":{"line":654,"col":44,"offset":15740},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fd798d5d1f651de9827fb0f7ef066acfc0c2ac59256f7fc5b4f91e9f2a31635a150421a5f5a280f72208c8028dd2ed403ffd9fed7c483f5dc29be904b577bd8_2","lines":"\tif ((*newch = CAST(unsigned char *, malloc(bytes_max + 1))) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":675,"col":2,"offset":16232},"end":{"line":675,"col":65,"offset":16295},"extra":{"metavars":{"$FUN":{"start":{"line":675,"col":2,"offset":16232},"end":{"line":675,"col":10,"offset":16240},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e53f14e1d63401218d429d2195f24318ae7952d8ffd126d6fb5219296a2672732f9a7610a3f1eb838649f841a8107e6d3e5bc5930760791ce5533401f499665f_1","lines":"\tsnprintf(RCAST(char *, *newch), bytes_max, \"unxz error %d\", rc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":690,"col":7,"offset":16502},"end":{"line":690,"col":31,"offset":16526},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"20d08ddad997ace36c1aaa469534a77f16955190d30a455ee107b53f7fd480284ce4c8c53a35acf0a3c7eecf00dfbfab86e23e4c5aa622ee664ecf54ce255cd8_0","lines":"\trv = vasprintf(&msg, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":690,"col":7,"offset":16502},"end":{"line":690,"col":31,"offset":16526},"extra":{"metavars":{"$FUN":{"start":{"line":690,"col":7,"offset":16502},"end":{"line":690,"col":16,"offset":16511},"abstract_content":"vasprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b54ce81bfce8b5de6ae091d685f3333381cd77689a9f5acb2c40716ff370c7a0b6f360e5d3c01752426b707850ebef4f97cfefcd36219be37746ad13c3da602f_0","lines":"\trv = vasprintf(&msg, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":715,"col":7,"offset":16835},"end":{"line":715,"col":12,"offset":16840},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":715,"col":7,"offset":16835},"end":{"line":715,"col":8,"offset":16836},"abstract_content":"i"},"$SIGNED":{"start":{"line":715,"col":11,"offset":16839},"end":{"line":715,"col":12,"offset":16840},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa95ffe8d289775bed7c410b6f0e634ddc72c059f9d70b0191594fba7b0032f0b8a4fb2c094222fe674a962e54eb9a8e7e51361e8369e476a985cdb67688a282_1","lines":"\tfor (i = 0; i < 2; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":740,"col":8,"offset":17239},"end":{"line":740,"col":14,"offset":17245},"extra":{"metavars":{"$FUN":{"start":{"line":740,"col":8,"offset":17239},"end":{"line":740,"col":12,"offset":17243},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1ec286c9f4e0e258c1f966804a15fcbf31ca2952441dd5e7066a5f15ce5247ce1aa29efd173aafd0269acb2d70c354b0f1bdaf7bd8747975e2221fbf959788ef_0","lines":"\tpid = fork();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":842,"col":7,"offset":19214},"end":{"line":842,"col":12,"offset":19219},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":842,"col":7,"offset":19214},"end":{"line":842,"col":8,"offset":19215},"abstract_content":"i"},"$SIGNED":{"start":{"line":842,"col":11,"offset":19218},"end":{"line":842,"col":12,"offset":19219},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa95ffe8d289775bed7c410b6f0e634ddc72c059f9d70b0191594fba7b0032f0b8a4fb2c094222fe674a962e54eb9a8e7e51361e8369e476a985cdb67688a282_2","lines":"\tfor (i = 0; i < __arraycount(fdp); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":845,"col":19,"offset":19298},"end":{"line":845,"col":42,"offset":19321},"extra":{"metavars":{"$FUN":{"start":{"line":845,"col":19,"offset":19298},"end":{"line":845,"col":23,"offset":19302},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63cad6321d0093481bdcc0d6d4d4559c0b56a4783c191af217e569d8d766ef02d3663e804d7da74781ab2eda810433b653a80b923cf7f856a2f8e4297388b731_0","lines":"\tif ((fd == -1 && pipe(fdp[STDIN_FILENO]) == -1) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":846,"col":6,"offset":19337},"end":{"line":846,"col":30,"offset":19361},"extra":{"metavars":{"$FUN":{"start":{"line":846,"col":6,"offset":19337},"end":{"line":846,"col":10,"offset":19341},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63cad6321d0093481bdcc0d6d4d4559c0b56a4783c191af217e569d8d766ef02d3663e804d7da74781ab2eda810433b653a80b923cf7f856a2f8e4297388b731_1","lines":"\t    pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":846,"col":40,"offset":19371},"end":{"line":846,"col":64,"offset":19395},"extra":{"metavars":{"$FUN":{"start":{"line":846,"col":40,"offset":19371},"end":{"line":846,"col":44,"offset":19375},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63cad6321d0093481bdcc0d6d4d4559c0b56a4783c191af217e569d8d766ef02d3663e804d7da74781ab2eda810433b653a80b923cf7f856a2f8e4297388b731_2","lines":"\t    pipe(fdp[STDOUT_FILENO]) == -1 || pipe(fdp[STDERR_FILENO]) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":856,"col":8,"offset":19667},"end":{"line":856,"col":15,"offset":19674},"extra":{"metavars":{"$FUN":{"start":{"line":856,"col":8,"offset":19667},"end":{"line":856,"col":13,"offset":19672},"abstract_content":"vfork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7877b3b6630561b73c21aee43fac287defda93c01af9eaa6fef700b8e879504e465403f8f27cf48d794516ce0473e13a5f7a41bf09bef7a0bdf833c14e11d394_0","lines":"\tpid = vfork();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":888,"col":9,"offset":20661},"end":{"line":889,"col":65,"offset":20755},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"v"},"$2":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"p"},"$FUN":{"start":{"line":888,"col":9,"offset":20661},"end":{"line":888,"col":15,"offset":20667},"abstract_content":"execvp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cd4b501377789e2c80517c275998032f8b3b2e8c304206627cb9f456eb6e3370b496ab702c9ff87fe679af951940c604fc2671b7d8e6864b706533c6025aaa34_0","lines":"\t\t(void)execvp(compr[method].argv[0],\n\t\t    RCAST(char *const *, RCAST(intptr_t, compr[method].argv)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":896,"col":7,"offset":20983},"end":{"line":896,"col":12,"offset":20988},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":896,"col":7,"offset":20983},"end":{"line":896,"col":8,"offset":20984},"abstract_content":"i"},"$SIGNED":{"start":{"line":896,"col":11,"offset":20987},"end":{"line":896,"col":12,"offset":20988},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dbdbc5974b8aa7aefc620c6ae9ce2d4f2540d390ccab217f4174fbf78690560f7832d6de23ea2d40b75f3c103cdcdb3db1de55c977123a7841111c342868ca53_0","lines":"\tfor (i = 1; i < __arraycount(fdp); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":33,"offset":21280},"end":{"line":905,"col":54,"offset":21301},"extra":{"metavars":{"$FUN":{"start":{"line":905,"col":33,"offset":21280},"end":{"line":905,"col":39,"offset":21286},"abstract_content":"malloc"},"$X":{"start":{"line":905,"col":40,"offset":21287},"end":{"line":905,"col":49,"offset":21296},"abstract_content":"bytes_max"},"$Y":{"start":{"line":905,"col":52,"offset":21299},"end":{"line":905,"col":53,"offset":21300},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e98e579532e40a506752769eaff7d0dc95b10dc933b30323c9ecc4c00cec8221397fbf7bd99bc08372d071e1ff5c1a6350d7db1179457d98aedab292d77abc7_3","lines":"\t*newch = CAST(unsigned char *, malloc(bytes_max + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":33,"offset":21280},"end":{"line":905,"col":54,"offset":21301},"extra":{"metavars":{"$FUN":{"start":{"line":905,"col":33,"offset":21280},"end":{"line":905,"col":39,"offset":21286},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8fd798d5d1f651de9827fb0f7ef066acfc0c2ac59256f7fc5b4f91e9f2a31635a150421a5f5a280f72208c8028dd2ed403ffd9fed7c483f5dc29be904b577bd8_3","lines":"\t*newch = CAST(unsigned char *, malloc(bytes_max + 1));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":912,"col":6,"offset":21429},"end":{"line":912,"col":56,"offset":21479},"extra":{"metavars":{"$FUN":{"start":{"line":912,"col":6,"offset":21429},"end":{"line":912,"col":11,"offset":21434},"abstract_content":"sread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78e6b2cea0a059a3a8b75768c7924ee041cef64ef503b11d9b6d42d35f95ae23d696db0741c799e23b8a98e5b6187e4b2562bf083a8d5e6e7ead0cc94955042e_1","lines":"\tr = sread(fdp[STDOUT_FILENO][0], *newch, bytes_max, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":919,"col":12,"offset":21651},"end":{"line":919,"col":62,"offset":21701},"extra":{"metavars":{"$FUN":{"start":{"line":919,"col":12,"offset":21651},"end":{"line":919,"col":17,"offset":21656},"abstract_content":"sread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78e6b2cea0a059a3a8b75768c7924ee041cef64ef503b11d9b6d42d35f95ae23d696db0741c799e23b8a98e5b6187e4b2562bf083a8d5e6e7ead0cc94955042e_2","lines":"\t\t    (r = sread(fdp[STDERR_FILENO][0], *newch, bytes_max, 0)) > 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":924,"col":3,"offset":21762},"end":{"line":924,"col":16,"offset":21775},"extra":{"metavars":{"$PTR":{"start":{"line":924,"col":8,"offset":21767},"end":{"line":924,"col":14,"offset":21773},"abstract_content":"*newch"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0ef1198531bbb9d76a9bda17c3ef6d9ec471af9626f035344593a5af12216217524a5915924f926848f78d4137a0cf9e2f747339349ff0a2ffe1accc6144cfb1_0","lines":"\t\tfree(*newch);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":944,"col":3,"offset":22178},"end":{"line":944,"col":16,"offset":22191},"extra":{"metavars":{"$PTR":{"start":{"line":944,"col":8,"offset":22183},"end":{"line":944,"col":14,"offset":22189},"abstract_content":"*newch"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0ef1198531bbb9d76a9bda17c3ef6d9ec471af9626f035344593a5af12216217524a5915924f926848f78d4137a0cf9e2f747339349ff0a2ffe1accc6144cfb1_1","lines":"\t\tfree(*newch);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/ctime_r.c","start":{"line":17,"col":2,"offset":367},"end":{"line":17,"col":20,"offset":385},"extra":{"metavars":{"$FUN":{"start":{"line":17,"col":2,"offset":367},"end":{"line":17,"col":8,"offset":373},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6a351351c8ccc46b5cab9ab300f6ac77b445829762493729a5e5b30575336b199dc09e093336487d6aa06dccc4238e3a2568949bda2e80676633309790b1ab51_0","lines":"\tmemcpy(dst, p, 26);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/ctime_r.c","start":{"line":17,"col":2,"offset":367},"end":{"line":17,"col":20,"offset":385},"extra":{"metavars":{"$DST":{"start":{"line":17,"col":9,"offset":374},"end":{"line":17,"col":12,"offset":377},"abstract_content":"dst"},"$SRC":{"start":{"line":17,"col":14,"offset":379},"end":{"line":17,"col":15,"offset":380},"abstract_content":"p","propagated_value":{"svalue_start":{"line":14,"col":12,"offset":325},"svalue_end":{"line":14,"col":20,"offset":333},"svalue_abstract_content":"ctime(t)"}},"$LEN":{"start":{"line":17,"col":17,"offset":382},"end":{"line":17,"col":19,"offset":384},"abstract_content":"26"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"758a10effcd6e0c847f1dcef8edd3c9087ca60deb4750fa1b40cb2ac58896b00fa428bd87c670e4b22f7ea117363496055bc29f5e705aced0cdeec0065ad1bd4_0","lines":"\tmemcpy(dst, p, 26);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":186,"col":2,"offset":4971},"end":{"line":186,"col":42,"offset":5011},"extra":{"metavars":{"$EXPR1":{"start":{"line":186,"col":23,"offset":4992},"end":{"line":186,"col":35,"offset":5004},"abstract_content":"c[*p]&0x80"},"$EXPR2":{"start":{"line":186,"col":40,"offset":5009},"end":{"line":186,"col":41,"offset":5010},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"32a6f50a737d75f5b3d9cf780d9d61c503e21e40dc7b0d8bb2df8ca6388d76bd6ce03a03592a8aeb75de0986221403455dc3209e6617f1b095c572754118c5a0_0","lines":"\tis_onebyte_result = (c[*p] & 0x80) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":198,"col":2,"offset":5220},"end":{"line":198,"col":9,"offset":5227},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":198,"col":2,"offset":5220},"end":{"line":198,"col":5,"offset":5223},"abstract_content":"len"},"$SIGNED":{"start":{"line":198,"col":8,"offset":5226},"end":{"line":198,"col":9,"offset":5227},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"82d1664be3816968fd6fcb66f09ad8e3e1744f65577187af2020c0974a0b890abce19a79c92c4887dd25406e7e743e95da99a9ef9c39490cb422e57a2fbbec45_0","lines":"\tlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":200,"col":3,"offset":5261},"end":{"line":200,"col":31,"offset":5289},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":200,"col":3,"offset":5261},"end":{"line":200,"col":6,"offset":5264},"abstract_content":"len"},"$SIGNED":{"start":{"line":200,"col":17,"offset":5275},"end":{"line":200,"col":18,"offset":5276},"abstract_content":"8"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"34556d4f3dda6bb9cf0b18a98ea8ce1d8c1cce01da5d7dbae4299d7aef8ae5f3ee0a022fa8d1e06cbfa0b0d02a7f29c41d05f316bc23ebb3303afaee41eb6f59_0","lines":"\t\tlen = (len << 8) | c[(*p)++];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":211,"col":3,"offset":5481},"end":{"line":211,"col":35,"offset":5513},"extra":{"metavars":{"$FUN":{"start":{"line":211,"col":3,"offset":5481},"end":{"line":211,"col":10,"offset":5488},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55da05dc91700e835eee75bbae0bdf837c5cfa01e42e67cd546b5cbd8418a81263cee6dcca1ee7b14c047a492c19059efb93bf771a9b98d83871a755b42319be_0","lines":"\t\tstrlcpy(buf, der__tag[tag], len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":213,"col":3,"offset":5523},"end":{"line":213,"col":33,"offset":5553},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":3,"offset":5523},"end":{"line":213,"col":11,"offset":5531},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c0fbe447e7157a611f076c147f6ae3fc251c5600af0d6e8c3f6477919505645b77e9772b2452349d2890b60f274b651a8339e7eaaf0198e317db70e6f646a2d4_0","lines":"\t\tsnprintf(buf, len, \"%#x\", tag);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":227,"col":10,"offset":5856},"end":{"line":227,"col":66,"offset":5912},"extra":{"metavars":{"$FUN":{"start":{"line":227,"col":10,"offset":5856},"end":{"line":227,"col":18,"offset":5864},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c0fbe447e7157a611f076c147f6ae3fc251c5600af0d6e8c3f6477919505645b77e9772b2452349d2890b60f274b651a8339e7eaaf0198e317db70e6f646a2d4_1","lines":"\t\treturn snprintf(buf, blen, \"%.*s\", len, RCAST(const char *, q));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":235,"col":4,"offset":6021},"end":{"line":235,"col":45,"offset":6062},"extra":{"metavars":{"$FUN":{"start":{"line":235,"col":4,"offset":6021},"end":{"line":235,"col":12,"offset":6029},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c0fbe447e7157a611f076c147f6ae3fc251c5600af0d6e8c3f6477919505645b77e9772b2452349d2890b60f274b651a8339e7eaaf0198e317db70e6f646a2d4_2","lines":"\t\t\tsnprintf(buf + z, blen - z, \"%.2x\", d[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":244,"col":9,"offset":6226},"end":{"line":244,"col":17,"offset":6234},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":244,"col":9,"offset":6226},"end":{"line":244,"col":13,"offset":6230},"abstract_content":"offs"},"$SIGNED":{"start":{"line":244,"col":16,"offset":6233},"end":{"line":244,"col":17,"offset":6234},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eee8a69a7381e5d409edff4c334d5b8496cdcb1e3fe4d342e0ff7923ccbdf45a6c97675899820ca6d785d682d4a5e802d765f700f738d82c21479464246c9b6b_0","lines":"\tsize_t offs = 0, len = ms->search.s_len ? ms->search.s_len : nbytes;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":279,"col":9,"offset":7235},"end":{"line":279,"col":17,"offset":7243},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":279,"col":9,"offset":7235},"end":{"line":279,"col":13,"offset":7239},"abstract_content":"offs"},"$SIGNED":{"start":{"line":279,"col":16,"offset":7242},"end":{"line":279,"col":17,"offset":7243},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"eee8a69a7381e5d409edff4c334d5b8496cdcb1e3fe4d342e0ff7923ccbdf45a6c97675899820ca6d785d682d4a5e802d765f700f738d82c21479464246c9b6b_1","lines":"\tsize_t offs = 0, len = ms->search.s_len;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":293,"col":3,"offset":7514},"end":{"line":294,"col":14,"offset":7586},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":29,"offset":28},"abstract_content":"\"%s: tag %p got=%s exp=%s\\n\""},"$ARG1":{"start":{"line":293,"col":11,"offset":7522},"end":{"line":293,"col":17,"offset":7528},"abstract_content":"stderr"},"$FMT":{"start":{"line":293,"col":19,"offset":7530},"end":{"line":293,"col":47,"offset":7558},"abstract_content":"\"%s: tag %p got=%s exp=%s\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cd4a1f150f039a8cecc0c38ae3853070d411bc86db287eba89470088c60014fdf18439eaf20b5c6423e9c0e5125b365615fd0aeb76cc1b531f486ec9c6df8b2c_0","lines":"\t\tfprintf(stderr, \"%s: tag %p got=%s exp=%s\\n\", __func__, b,\n\t\t    buf, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":313,"col":3,"offset":7819},"end":{"line":313,"col":11,"offset":7827},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":313,"col":3,"offset":7819},"end":{"line":313,"col":7,"offset":7823},"abstract_content":"slen"},"$SIGNED":{"start":{"line":313,"col":10,"offset":7826},"end":{"line":313,"col":11,"offset":7827},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"224807ba4a098c9a3e67ed1934f34a9e2f61753882806bb91fa08163fba0425322c077744b536eef82e380d571d01f0e3595b2ec5dde111ce189b9abda257f5a_0","lines":"\t\tslen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":315,"col":4,"offset":7837},"end":{"line":315,"col":31,"offset":7864},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":315,"col":4,"offset":7837},"end":{"line":315,"col":8,"offset":7841},"abstract_content":"slen"},"$SIGNED":{"start":{"line":315,"col":11,"offset":7844},"end":{"line":315,"col":15,"offset":7848},"abstract_content":"slen","propagated_value":{"svalue_start":{"line":313,"col":10,"offset":7826},"svalue_end":{"line":313,"col":11,"offset":7827},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9b1dcb73ac414f0a912d59f802b6c7989fca1bf6e575b2779552904df87675872a956f42663a35459af1e12ec6e92ce50421fdb4860b93a9cef4378e4629edbf_0","lines":"\t\t\tslen = slen * 10 + *s - '0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":318,"col":4,"offset":7953},"end":{"line":319,"col":29,"offset":8033},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"937c12f7e63760de5e47fb9eddaa4764f8a90b066724b203850bc3e5f203182ed243e57cf4c37627f9967bbb42bd3e3a48ba42f8a90a9ea466cf7d9905e55aa5_0","lines":"\t\t\tfprintf(stderr, \"%s: len %\" SIZE_T_FORMAT \"u %u\\n\",\n\t\t\t    __func__, slen, tlen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":332,"col":2,"offset":8379},"end":{"line":332,"col":54,"offset":8431},"extra":{"metavars":{"$FUN":{"start":{"line":332,"col":2,"offset":8379},"end":{"line":332,"col":9,"offset":8386},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55da05dc91700e835eee75bbae0bdf837c5cfa01e42e67cd546b5cbd8418a81263cee6dcca1ee7b14c047a492c19059efb93bf771a9b98d83871a755b42319be_1","lines":"\tstrlcpy(ms->ms_value.s, buf, sizeof(ms->ms_value.s));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-sizeof","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":332,"col":31,"offset":8408},"end":{"line":332,"col":52,"offset":8429},"extra":{"metavars":{"$PTR":{"start":{"line":332,"col":38,"offset":8415},"end":{"line":332,"col":52,"offset":8429},"abstract_content":"ms->->ms_value.s"}},"message":"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/467","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a439151f778c1cf7de9065500d917168cb81818455a2f81237793559427352904db3d4300f4c8b1e380b571d5dc70f8256c7bab62797c02a5196bec3c27c4c93_0","lines":"\tstrlcpy(ms->ms_value.s, buf, sizeof(ms->ms_value.s));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":370,"col":32,"offset":9137},"end":{"line":370,"col":38,"offset":9143},"extra":{"metavars":{"$TYPE":{"start":{"line":359,"col":8,"offset":8867},"end":{"line":359,"col":15,"offset":8874},"abstract_content":"uint8_t"},"$EXPR2":{"start":{"line":359,"col":21,"offset":8880},"end":{"line":359,"col":22,"offset":8881},"abstract_content":"v"},"$EXPR1":{"start":{"line":359,"col":30,"offset":8889},"end":{"line":359,"col":35,"offset":8894},"abstract_content":"p+l"},"$PTR1":{"start":{"line":370,"col":32,"offset":9137},"end":{"line":370,"col":34,"offset":9139},"abstract_content":"ep"},"$PTR2":{"start":{"line":370,"col":37,"offset":9142},"end":{"line":370,"col":38,"offset":9143},"abstract_content":"p"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ffb152079427aed293ed9b3d74844d18597c072d726a4245931f2cb3656af19bd23f8c8e94a5f359554edc5fa9c7b0f5866da8e3dbff57788ce3c60a2f14b33a_0","lines":"\t\tuint32_t tag = gettag(p, &x, ep - p + x);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":373,"col":35,"offset":9213},"end":{"line":373,"col":41,"offset":9219},"extra":{"metavars":{"$TYPE":{"start":{"line":359,"col":8,"offset":8867},"end":{"line":359,"col":15,"offset":8874},"abstract_content":"uint8_t"},"$EXPR2":{"start":{"line":359,"col":21,"offset":8880},"end":{"line":359,"col":22,"offset":8881},"abstract_content":"v"},"$EXPR1":{"start":{"line":359,"col":30,"offset":8889},"end":{"line":359,"col":35,"offset":8894},"abstract_content":"p+l"},"$PTR1":{"start":{"line":373,"col":35,"offset":9213},"end":{"line":373,"col":37,"offset":9215},"abstract_content":"ep"},"$PTR2":{"start":{"line":373,"col":40,"offset":9218},"end":{"line":373,"col":41,"offset":9219},"abstract_content":"p"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ffb152079427aed293ed9b3d74844d18597c072d726a4245931f2cb3656af19bd23f8c8e94a5f359554edc5fa9c7b0f5866da8e3dbff57788ce3c60a2f14b33a_1","lines":"\t\tuint32_t len = getlength(p, &x, ep - p + x);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":375,"col":3,"offset":9229},"end":{"line":378,"col":43,"offset":9407},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"937c12f7e63760de5e47fb9eddaa4764f8a90b066724b203850bc3e5f203182ed243e57cf4c37627f9967bbb42bd3e3a48ba42f8a90a9ea466cf7d9905e55aa5_1","lines":"\t\tprintf(\"%\" SIZE_T_FORMAT \"u %\" SIZE_T_FORMAT \"u-%\"\n\t\t    SIZE_T_FORMAT \"u %c,%c,%s,%u:\", level, ox, x,\n\t\t    der_class[c], der_type[t],\n\t\t    der_tag(buf, sizeof(buf), tag), len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":397,"col":12,"offset":9688},"end":{"line":397,"col":35,"offset":9711},"extra":{"metavars":{"$FUN":{"start":{"line":397,"col":12,"offset":9688},"end":{"line":397,"col":16,"offset":9692},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"687f8aaeb5d9a490e5006597ecb6b3e2ad98574bc8d3e9e74c9f2a9d0dffaa0d6982674ec5642bcb053dcfb7891af99f158fee3621a574a5322d26d8938b631c_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":397,"col":17,"offset":9693},"end":{"line":397,"col":21,"offset":9697},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a007ec7757b8d690fae1a20ae5f3c884aa9d29cbe846c57afff75fad4802df20ac7b9ef07d660be953273eeec8700f8180063ce0c725fb835796a158e92a447b_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":398,"col":34,"offset":9753},"end":{"line":398,"col":38,"offset":9757},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a007ec7757b8d690fae1a20ae5f3c884aa9d29cbe846c57afff75fad4802df20ac7b9ef07d660be953273eeec8700f8180063ce0c725fb835796a158e92a447b_1","lines":"\t\terr(EXIT_FAILURE, \"open `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":399,"col":6,"offset":9768},"end":{"line":399,"col":20,"offset":9782},"extra":{"metavars":{"$FUN":{"start":{"line":399,"col":6,"offset":9768},"end":{"line":399,"col":11,"offset":9773},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7b2502ed5c8a955dee751f9c95c31178dcfeeaab0b4cfa2ca7068b3cc058ae2552a28d653cbc233ae977b0fd8890047f15be849f4289ff72e11df1ecea7bae7a_0","lines":"\tif (fstat(fd, &st) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":400,"col":34,"offset":9823},"end":{"line":400,"col":38,"offset":9827},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a007ec7757b8d690fae1a20ae5f3c884aa9d29cbe846c57afff75fad4802df20ac7b9ef07d660be953273eeec8700f8180063ce0c725fb835796a158e92a447b_2","lines":"\t\terr(EXIT_FAILURE, \"stat `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":403,"col":34,"offset":9959},"end":{"line":403,"col":38,"offset":9963},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a007ec7757b8d690fae1a20ae5f3c884aa9d29cbe846c57afff75fad4802df20ac7b9ef07d660be953273eeec8700f8180063ce0c725fb835796a158e92a447b_3","lines":"\t\terr(EXIT_FAILURE, \"mmap `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/file-5.38/src/dprintf.c","start":{"line":48,"col":2,"offset":1894},"end":{"line":48,"col":44,"offset":1936},"extra":{"metavars":{"$RET":{"start":{"line":48,"col":2,"offset":1894},"end":{"line":48,"col":5,"offset":1897},"abstract_content":"len"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ec20ff619047d1e099bccea8ae2398b5a9502114e57930a066bcda2d914235e80b91ea47ef6003ba961f76253e53e004657321a9cdc0317e6fec269b4ad2996_0","lines":"\tlen = vsnprintf(buf, sizeof(buf), fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/dprintf.c","start":{"line":48,"col":8,"offset":1900},"end":{"line":48,"col":44,"offset":1936},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"974d9d9024003cd2fa7c0ff77c64eefed911287a4c38bc903d5aa49b760b12f09e4c7fc5248c0a39daf0b2ef51c58f7590ecf49e83ab9d1ee1adbac92ae87881_0","lines":"\tlen = vsnprintf(buf, sizeof(buf), fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/dprintf.c","start":{"line":48,"col":8,"offset":1900},"end":{"line":48,"col":44,"offset":1936},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":8,"offset":1900},"end":{"line":48,"col":17,"offset":1909},"abstract_content":"vsnprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ec94fff51f37796bcff9efc3607d9e6220fe08d5ab644d7bb7c6bd1d97672b2f88d21d5d27cfe586d109022ee8daaecdf8cf49421165e764eb3e2c8f4a2bbfe_0","lines":"\tlen = vsnprintf(buf, sizeof(buf), fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/dprintf.c","start":{"line":48,"col":8,"offset":1900},"end":{"line":48,"col":44,"offset":1936},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"fmt"},"$TYPE":{"start":{"line":44,"col":2,"offset":1846},"end":{"line":44,"col":6,"offset":1850},"abstract_content":"char"},"$LEN":{"start":{"line":44,"col":11,"offset":1855},"end":{"line":44,"col":15,"offset":1859},"abstract_content":"1024"},"$FUN":{"start":{"line":48,"col":8,"offset":1900},"end":{"line":48,"col":17,"offset":1909},"abstract_content":"vsnprintf"},"$BUF":{"start":{"line":48,"col":18,"offset":1910},"end":{"line":48,"col":21,"offset":1913},"abstract_content":"buf"},"$N":{"start":{"line":48,"col":23,"offset":1915},"end":{"line":48,"col":33,"offset":1925},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":48,"col":36,"offset":1928},"end":{"line":48,"col":39,"offset":1931},"abstract_content":"fmt"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"615e5832bff6784a0780fbbeb014691372671ed33fe16cddabdba7269a9e6e88180d15025e2aa7cd38f386837e9bfa9ebd67c315ab4fb7eab2da3a74c2f82bad_0","lines":"\tlen = vsnprintf(buf, sizeof(buf), fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":31,"col":8,"offset":1487},"end":{"line":31,"col":43,"offset":1522},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":8,"offset":1487},"end":{"line":31,"col":14,"offset":1493},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b07f4feedd0ef069fcc713c0e3344daa47934df998518d733a33122324937f3a88de944522581c1fb17e4cca73a0dd76f8c7f29053fd0626e1b7593588e6ad8e_0","lines":"\t(void)memcpy(&elfhdr, buf, sizeof elfhdr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":58,"col":7,"offset":2359},"end":{"line":61,"col":40,"offset":2546},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":7,"offset":2359},"end":{"line":58,"col":17,"offset":2369},"abstract_content":"dophn_exec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"171e9dd352f2f678ebc9313d3289ddb0817b8c399b68a311887ab40f8ca086fa0e2b343ae65b4dcbcad07b4604f40f9ed908dff4d2c77a3339d20f02b6649f3b_0","lines":"\t\tif (dophn_exec(ms, clazz, swap, fd,\n\t\t    CAST(off_t, elf_getu(swap, elfhdr.e_phoff)), phnum,\n\t\t    CAST(size_t, elf_getu16(swap, elfhdr.e_phentsize)),\n\t\t    fsize, shnum, &flags, &notecount) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":90,"col":2,"offset":3366},"end":{"line":90,"col":41,"offset":3405},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":90,"col":2,"offset":3366},"end":{"line":90,"col":6,"offset":3370},"abstract_content":"mlen"},"$SIGNED":{"start":{"line":90,"col":19,"offset":3383},"end":{"line":90,"col":20,"offset":3384},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"580208b7d5289da58336be25673dae9111e9e17ba4e43f2c5bd25b22af59a94b9a9b9bb97f26c42477831546f61cc55ced1a87136287fd677107b00a1d7620c0_0","lines":"\tmlen = (nbytes + 1) * sizeof((*ubuf)[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":31,"offset":3438},"end":{"line":91,"col":60,"offset":3467},"extra":{"metavars":{"$X":{"start":{"line":90,"col":10,"offset":3374},"end":{"line":90,"col":20,"offset":3384},"abstract_content":"nbytes+1"},"$Y":{"start":{"line":90,"col":24,"offset":3388},"end":{"line":90,"col":41,"offset":3405},"abstract_content":"sizeof*ubuf[0]"},"$FUN":{"start":{"line":91,"col":31,"offset":3438},"end":{"line":91,"col":37,"offset":3444},"abstract_content":"calloc"},"$ARG1":{"start":{"line":91,"col":38,"offset":3445},"end":{"line":91,"col":53,"offset":3460},"abstract_content":"CAST(1)"},"$N":{"start":{"line":91,"col":55,"offset":3462},"end":{"line":91,"col":59,"offset":3466},"abstract_content":"mlen"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4002eb3243ce93a08418c09285f97675bcd51e966f356a4473b615007adb1ccee33ea9b320296da4923b4fc6918af45c8b1b092e22ef3fbde798a014addabe14_0","lines":"\tif ((*ubuf = CAST(unichar *, calloc(CAST(size_t, 1), mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":31,"offset":3438},"end":{"line":91,"col":60,"offset":3467},"extra":{"metavars":{"$FUN":{"start":{"line":91,"col":31,"offset":3438},"end":{"line":91,"col":37,"offset":3444},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"faef55204779d60842edcb46985405cc5874d4703845ba47012af446e358012f223c6bdd0500862e46900fb685a46f5d8de1cca28b587db6fd9723a178ddf8ba_0","lines":"\tif ((*ubuf = CAST(unichar *, calloc(CAST(size_t, 1), mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":95,"col":2,"offset":3522},"end":{"line":95,"col":38,"offset":3558},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":95,"col":2,"offset":3522},"end":{"line":95,"col":6,"offset":3526},"abstract_content":"mlen"},"$SIGNED":{"start":{"line":95,"col":19,"offset":3539},"end":{"line":95,"col":20,"offset":3540},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"580208b7d5289da58336be25673dae9111e9e17ba4e43f2c5bd25b22af59a94b9a9b9bb97f26c42477831546f61cc55ced1a87136287fd677107b00a1d7620c0_1","lines":"\tmlen = (nbytes + 1) * sizeof(nbuf[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":97,"col":6,"offset":3601},"end":{"line":97,"col":35,"offset":3630},"extra":{"metavars":{"$X":{"start":{"line":90,"col":10,"offset":3374},"end":{"line":90,"col":20,"offset":3384},"abstract_content":"nbytes+1"},"$Y":{"start":{"line":90,"col":24,"offset":3388},"end":{"line":90,"col":41,"offset":3405},"abstract_content":"sizeof*ubuf[0]"},"$FUN":{"start":{"line":97,"col":6,"offset":3601},"end":{"line":97,"col":12,"offset":3607},"abstract_content":"calloc"},"$ARG1":{"start":{"line":97,"col":13,"offset":3608},"end":{"line":97,"col":28,"offset":3623},"abstract_content":"CAST(1)"},"$N":{"start":{"line":97,"col":30,"offset":3625},"end":{"line":97,"col":34,"offset":3629},"abstract_content":"mlen","propagated_value":{"svalue_start":{"line":95,"col":10,"offset":3530},"svalue_end":{"line":95,"col":38,"offset":3558},"svalue_abstract_content":"nbytes+1*sizeof nbuf[0]"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4002eb3243ce93a08418c09285f97675bcd51e966f356a4473b615007adb1ccee33ea9b320296da4923b4fc6918af45c8b1b092e22ef3fbde798a014addabe14_1","lines":"\t    calloc(CAST(size_t, 1), mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":97,"col":6,"offset":3601},"end":{"line":97,"col":35,"offset":3630},"extra":{"metavars":{"$FUN":{"start":{"line":97,"col":6,"offset":3601},"end":{"line":97,"col":12,"offset":3607},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"faef55204779d60842edcb46985405cc5874d4703845ba47012af446e358012f223c6bdd0500862e46900fb685a46f5d8de1cca28b587db6fd9723a178ddf8ba_1","lines":"\t    calloc(CAST(size_t, 1), mlen))) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":120,"col":14,"offset":4357},"end":{"line":120,"col":62,"offset":4405},"extra":{"metavars":{"$SIGNED":{"start":{"line":120,"col":14,"offset":4357},"end":{"line":120,"col":22,"offset":4365},"abstract_content":"ucs_type"},"$UNSIGNED":{"start":{"line":120,"col":42,"offset":4385},"end":{"line":120,"col":48,"offset":4391},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"da22ff40ff23156bd7749915802dc9a2281cf2d3a6ae1772105ebbaf1a5accfac6a263f944386135f46547a8dd2b011c325932c7fc4933b666ce6d4c2975f0b6_0","lines":"\t} else if ((ucs_type = looks_ucs32(buf, nbytes, *ubuf, ulen)) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":129,"col":14,"offset":4656},"end":{"line":129,"col":62,"offset":4704},"extra":{"metavars":{"$SIGNED":{"start":{"line":129,"col":14,"offset":4656},"end":{"line":129,"col":22,"offset":4664},"abstract_content":"ucs_type"},"$UNSIGNED":{"start":{"line":129,"col":42,"offset":4684},"end":{"line":129,"col":48,"offset":4690},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"da22ff40ff23156bd7749915802dc9a2281cf2d3a6ae1772105ebbaf1a5accfac6a263f944386135f46547a8dd2b011c325932c7fc4933b666ce6d4c2975f0b6_1","lines":"\t} else if ((ucs_type = looks_ucs16(buf, nbytes, *ubuf, ulen)) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":166,"col":2,"offset":5781},"end":{"line":166,"col":13,"offset":5792},"extra":{"metavars":{"$PTR":{"start":{"line":166,"col":7,"offset":5786},"end":{"line":166,"col":11,"offset":5790},"abstract_content":"nbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b216223065cca2a2615e3bc25c5f8da6e81e4718b9c905f5d366a6d444e52cbad26533cc048479c81f2b5e319a00fa2a942720f0f06669d36ce5dc56b457bcf6_0","lines":"\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":168,"col":3,"offset":5818},"end":{"line":168,"col":17,"offset":5832},"extra":{"metavars":{"$PTR":{"start":{"line":168,"col":8,"offset":5823},"end":{"line":168,"col":15,"offset":5830},"abstract_content":"udefbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6f6e2c2d085d5760536b75a36737eee4374e1dfd16c14c9dc20601de701cc34afce344ed5f8f9d67a213558f24c4e445f09e7370c666c96dc75e61cd2b7fc984_0","lines":"\t\tfree(udefbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":260,"col":7,"offset":10235},"end":{"line":260,"col":12,"offset":10240},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":260,"col":7,"offset":10235},"end":{"line":260,"col":8,"offset":10236},"abstract_content":"i"},"$SIGNED":{"start":{"line":260,"col":11,"offset":10239},"end":{"line":260,"col":12,"offset":10240},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99ec84f50034caf2c8cef426643c879ec9cb42c50b75ebeac63f2306b68ffc6efa22c867b459d225fc6fb7249adc233ebe28e2688af113ab15b0cee8d6cca17b_0","lines":"\tfor (i = 0; i < nbytes; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":261,"col":7,"offset":10267},"end":{"line":261,"col":29,"offset":10289},"extra":{"metavars":{"$SIGNED":{"start":{"line":261,"col":7,"offset":10267},"end":{"line":261,"col":8,"offset":10268},"abstract_content":"t"},"$UNSIGNED":{"start":{"line":261,"col":26,"offset":10286},"end":{"line":261,"col":27,"offset":10287},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85f2117e5d5c4714f101d047049ae34a618d0c56d7d6bb8801db22b9d9dcb9ff11c85d7539804f739e4e556eb6efe127e5770d98e51428a9a274276dff0d063c_0","lines":"\t\tint t = text_chars[buf[i]];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":279,"col":7,"offset":10494},"end":{"line":279,"col":12,"offset":10499},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":279,"col":7,"offset":10494},"end":{"line":279,"col":8,"offset":10495},"abstract_content":"i"},"$SIGNED":{"start":{"line":279,"col":11,"offset":10498},"end":{"line":279,"col":12,"offset":10499},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99ec84f50034caf2c8cef426643c879ec9cb42c50b75ebeac63f2306b68ffc6efa22c867b459d225fc6fb7249adc233ebe28e2688af113ab15b0cee8d6cca17b_1","lines":"\tfor (i = 0; i < nbytes; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":280,"col":7,"offset":10526},"end":{"line":280,"col":29,"offset":10548},"extra":{"metavars":{"$SIGNED":{"start":{"line":280,"col":7,"offset":10526},"end":{"line":280,"col":8,"offset":10527},"abstract_content":"t"},"$UNSIGNED":{"start":{"line":280,"col":26,"offset":10545},"end":{"line":280,"col":27,"offset":10546},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85f2117e5d5c4714f101d047049ae34a618d0c56d7d6bb8801db22b9d9dcb9ff11c85d7539804f739e4e556eb6efe127e5770d98e51428a9a274276dff0d063c_1","lines":"\t\tint t = text_chars[buf[i]];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":299,"col":7,"offset":10769},"end":{"line":299,"col":12,"offset":10774},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":299,"col":7,"offset":10769},"end":{"line":299,"col":8,"offset":10770},"abstract_content":"i"},"$SIGNED":{"start":{"line":299,"col":11,"offset":10773},"end":{"line":299,"col":12,"offset":10774},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99ec84f50034caf2c8cef426643c879ec9cb42c50b75ebeac63f2306b68ffc6efa22c867b459d225fc6fb7249adc233ebe28e2688af113ab15b0cee8d6cca17b_2","lines":"\tfor (i = 0; i < nbytes; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":300,"col":7,"offset":10801},"end":{"line":300,"col":29,"offset":10823},"extra":{"metavars":{"$SIGNED":{"start":{"line":300,"col":7,"offset":10801},"end":{"line":300,"col":8,"offset":10802},"abstract_content":"t"},"$UNSIGNED":{"start":{"line":300,"col":26,"offset":10820},"end":{"line":300,"col":27,"offset":10821},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"85f2117e5d5c4714f101d047049ae34a618d0c56d7d6bb8801db22b9d9dcb9ff11c85d7539804f739e4e556eb6efe127e5770d98e51428a9a274276dff0d063c_2","lines":"\t\tint t = text_chars[buf[i]];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":333,"col":7,"offset":11448},"end":{"line":333,"col":12,"offset":11453},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":333,"col":7,"offset":11448},"end":{"line":333,"col":8,"offset":11449},"abstract_content":"i"},"$SIGNED":{"start":{"line":333,"col":11,"offset":11452},"end":{"line":333,"col":12,"offset":11453},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99ec84f50034caf2c8cef426643c879ec9cb42c50b75ebeac63f2306b68ffc6efa22c867b459d225fc6fb7249adc233ebe28e2688af113ab15b0cee8d6cca17b_3","lines":"\tfor (i = 0; i < nbytes; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":441,"col":7,"offset":13739},"end":{"line":441,"col":12,"offset":13744},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":441,"col":7,"offset":13739},"end":{"line":441,"col":8,"offset":13740},"abstract_content":"i"},"$SIGNED":{"start":{"line":441,"col":11,"offset":13743},"end":{"line":441,"col":12,"offset":13744},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"13670e1eee859f208c95a19d5db3ad0e01dc34396b7d2652b40298c0ffbcbab696a56095ccf2507edf329a221c8c609101f5a165e707c2fee910203ad73a9036_0","lines":"\tfor (i = 2; i + 1 < nbytes; i += 2) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":480,"col":7,"offset":14502},"end":{"line":480,"col":12,"offset":14507},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":480,"col":7,"offset":14502},"end":{"line":480,"col":8,"offset":14503},"abstract_content":"i"},"$SIGNED":{"start":{"line":480,"col":11,"offset":14506},"end":{"line":480,"col":12,"offset":14507},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"859e6e9fc53ed7151b6e3c490871b6efd56fb55d9edd03dda7d34b32640a8d27b8f7cf9a64d89a10ba20671619424096540308c6da561966f45e7bc8d3db7fc1_0","lines":"\tfor (i = 4; i + 3 < nbytes; i += 4) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":592,"col":7,"offset":19527},"end":{"line":592,"col":12,"offset":19532},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":592,"col":7,"offset":19527},"end":{"line":592,"col":8,"offset":19528},"abstract_content":"i"},"$SIGNED":{"start":{"line":592,"col":11,"offset":19531},"end":{"line":592,"col":12,"offset":19532},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"99ec84f50034caf2c8cef426643c879ec9cb42c50b75ebeac63f2306b68ffc6efa22c867b459d225fc6fb7249adc233ebe28e2688af113ab15b0cee8d6cca17b_4","lines":"\tfor (i = 0; i < nbytes; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":74,"col":2,"offset":2515},"end":{"line":86,"col":3,"offset":2826},"extra":{"metavars":{"$EXPR1":{"start":{"line":74,"col":7,"offset":2520},"end":{"line":74,"col":11,"offset":2524},"abstract_content":"mime"},"$EXPR2":{"start":{"line":74,"col":14,"offset":2527},"end":{"line":74,"col":29,"offset":2542},"abstract_content":"MAGIC_MIME_TYPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a1b11bdc1e4472ec5eae5e1acef1f68f4fd4620e8ca3d735e9f6738f20672992fb4d66062fe760d748cdfad6ac89f7d374ca74993e037237050a4a34756042c_0","lines":"\tif ((mime & MAGIC_MIME_TYPE) &&\n\t    file_printf(ms, \"inode/symlink\")\n\t    == -1)\n\t\treturn -1;\n\telse if (!mime) {\n\t\tif (ms->flags & MAGIC_ERROR) {\n\t\t\tfile_error(ms, err,\n\t\t\t\t   \"broken symbolic link to %s\", buf);\n\t\t\treturn -1;\n\t\t}\n\t\tif (file_printf(ms, \"broken symbolic link to %s\", buf) == -1)\n\t\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":79,"col":3,"offset":2631},"end":{"line":83,"col":4,"offset":2745},"extra":{"metavars":{"$EXPR1":{"start":{"line":79,"col":7,"offset":2635},"end":{"line":79,"col":16,"offset":2644},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":79,"col":19,"offset":2647},"end":{"line":79,"col":30,"offset":2658},"abstract_content":"MAGIC_ERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"891df25b5bc627ca16b1830a03f51f00e6cd1817119fffc4a37d415694610cf9f5a570a12f3f5a140d04c1d20c2c084b3d525d78280e2c9014ac727455316218_0","lines":"\t\tif (ms->flags & MAGIC_ERROR) {\n\t\t\tfile_error(ms, err,\n\t\t\t\t   \"broken symbolic link to %s\", buf);\n\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":93,"col":2,"offset":2923},"end":{"line":99,"col":3,"offset":3112},"extra":{"metavars":{"$EXPR1":{"start":{"line":93,"col":7,"offset":2928},"end":{"line":93,"col":11,"offset":2932},"abstract_content":"mime"},"$EXPR2":{"start":{"line":93,"col":14,"offset":2935},"end":{"line":93,"col":29,"offset":2950},"abstract_content":"MAGIC_MIME_TYPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a1b11bdc1e4472ec5eae5e1acef1f68f4fd4620e8ca3d735e9f6738f20672992fb4d66062fe760d748cdfad6ac89f7d374ca74993e037237050a4a34756042c_1","lines":"\tif ((mime & MAGIC_MIME_TYPE)) {\n\t\tif (file_printf(ms, \"inode/%s\", str) == -1)\n\t\t\treturn -1;\n\t\tif ((mime & MAGIC_MIME_ENCODING) && file_printf(ms,\n\t\t    \"; charset=\") == -1)\n\t\t\treturn -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":96,"col":3,"offset":3017},"end":{"line":98,"col":14,"offset":3109},"extra":{"metavars":{"$EXPR1":{"start":{"line":96,"col":8,"offset":3022},"end":{"line":96,"col":12,"offset":3026},"abstract_content":"mime"},"$EXPR2":{"start":{"line":96,"col":15,"offset":3029},"end":{"line":96,"col":34,"offset":3048},"abstract_content":"MAGIC_MIME_ENCODING"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6747b315744c659e819982196e7b42ed0d2a50102f634c6ece91c8de0ed412d16909840182d939236942cd36982a3f7a4f0c86eeab0b79ece6a0e2e6641d9997_0","lines":"\t\tif ((mime & MAGIC_MIME_ENCODING) && file_printf(ms,\n\t\t    \"; charset=\") == -1)\n\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":100,"col":2,"offset":3114},"end":{"line":101,"col":13,"offset":3195},"extra":{"metavars":{"$EXPR1":{"start":{"line":100,"col":7,"offset":3119},"end":{"line":100,"col":11,"offset":3123},"abstract_content":"mime"},"$EXPR2":{"start":{"line":100,"col":14,"offset":3126},"end":{"line":100,"col":33,"offset":3145},"abstract_content":"MAGIC_MIME_ENCODING"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6747b315744c659e819982196e7b42ed0d2a50102f634c6ece91c8de0ed412d16909840182d939236942cd36982a3f7a4f0c86eeab0b79ece6a0e2e6641d9997_1","lines":"\tif ((mime & MAGIC_MIME_ENCODING) && file_printf(ms, \"binary\") == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":127,"col":9,"offset":3762},"end":{"line":127,"col":22,"offset":3775},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7eeca3ae6a754e3fbc717c4be100403083b5c60ae1fc0e837faae73007392957f5cad4c2be8e68492ac2a8837b103db177fe07ed7043fb985d20053b1c967d06_0","lines":"\t\tret = lstat(fn, sb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":127,"col":9,"offset":3762},"end":{"line":127,"col":22,"offset":3775},"extra":{"metavars":{"$FUN":{"start":{"line":127,"col":9,"offset":3762},"end":{"line":127,"col":14,"offset":3767},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"17b76b02f5971b21e9630900d46eae5326598f12b8be078059106121556bafbcd380330c9f06297f255802a79b766c1782c2563d7932e4f2364bc8ffb78d4eaa_0","lines":"\t\tret = lstat(fn, sb);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":130,"col":8,"offset":3797},"end":{"line":130,"col":20,"offset":3809},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7eeca3ae6a754e3fbc717c4be100403083b5c60ae1fc0e837faae73007392957f5cad4c2be8e68492ac2a8837b103db177fe07ed7043fb985d20053b1c967d06_1","lines":"\tret = stat(fn, sb);\t/* don't merge into if; see \"ret =\" above */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":130,"col":8,"offset":3797},"end":{"line":130,"col":20,"offset":3809},"extra":{"metavars":{"$FUN":{"start":{"line":130,"col":8,"offset":3797},"end":{"line":130,"col":12,"offset":3801},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7a1f777aa22498e531fc49695b2aea8fc845f4cdaea7f2425aaf5c67f8a1157accba11541efef81332621df49091aad1658a5bb25473a7772042d8a374a0942_0","lines":"\tret = stat(fn, sb);\t/* don't merge into if; see \"ret =\" above */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":146,"col":12,"offset":4234},"end":{"line":146,"col":30,"offset":4252},"extra":{"metavars":{"$VAR":{"start":{"line":146,"col":12,"offset":4234},"end":{"line":146,"col":30,"offset":4252},"abstract_content":"GetFileType(hFile)"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2c570c42964c5e841cffbe34ea2b7fd0b689f9ad22d160762aa2e5eab06a82a372bb7cb5f99e694f56bbd1b94398bb1ea63df762ea465510fc589e8a5878d71_0","lines":"\t\t\tswitch (GetFileType(hFile)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":162,"col":3,"offset":4497},"end":{"line":165,"col":4,"offset":4595},"extra":{"metavars":{"$EXPR1":{"start":{"line":162,"col":7,"offset":4501},"end":{"line":162,"col":16,"offset":4510},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":162,"col":19,"offset":4513},"end":{"line":162,"col":30,"offset":4524},"abstract_content":"MAGIC_ERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"891df25b5bc627ca16b1830a03f51f00e6cd1817119fffc4a37d415694610cf9f5a570a12f3f5a140d04c1d20c2c084b3d525d78280e2c9014ac727455316218_1","lines":"\t\tif (ms->flags & MAGIC_ERROR) {\n\t\t\tfile_error(ms, errno, \"cannot stat `%s'\", fn);\n\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":175,"col":3,"offset":4759},"end":{"line":177,"col":15,"offset":4849},"extra":{"metavars":{"$EXPR1":{"start":{"line":175,"col":7,"offset":4763},"end":{"line":175,"col":18,"offset":4774},"abstract_content":"sb->->st_mode"},"$EXPR2":{"start":{"line":175,"col":21,"offset":4777},"end":{"line":175,"col":28,"offset":4784},"abstract_content":"S_ISUID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"79357c29f527b03f139ec1134b16cb74fe4e468148de027363e094d1c6323938f424ff580e1c58834932c6fa1173214d3da28e4606a50805e4887374991a085b_0","lines":"\t\tif (sb->st_mode & S_ISUID)\n\t\t\tif (file_printf(ms, \"%ssetuid\", COMMA) == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":180,"col":3,"offset":4874},"end":{"line":182,"col":15,"offset":4964},"extra":{"metavars":{"$EXPR1":{"start":{"line":180,"col":7,"offset":4878},"end":{"line":180,"col":18,"offset":4889},"abstract_content":"sb->->st_mode"},"$EXPR2":{"start":{"line":180,"col":21,"offset":4892},"end":{"line":180,"col":28,"offset":4899},"abstract_content":"S_ISGID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"78b77b07d7332c211f0af9518d479cf529517735f256a4f286987cc40f207bc62c052aaf8a6a8b47212d6a1b12ce16224b1d81b458c8d3b8c711f744c4662332_0","lines":"\t\tif (sb->st_mode & S_ISGID)\n\t\t\tif (file_printf(ms, \"%ssetgid\", COMMA) == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":185,"col":3,"offset":4989},"end":{"line":187,"col":15,"offset":5079},"extra":{"metavars":{"$EXPR1":{"start":{"line":185,"col":7,"offset":4993},"end":{"line":185,"col":18,"offset":5004},"abstract_content":"sb->->st_mode"},"$EXPR2":{"start":{"line":185,"col":21,"offset":5007},"end":{"line":185,"col":28,"offset":5014},"abstract_content":"S_ISVTX"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57b54890ea19b2d048f45df0fb4b612223a11586b0ca69983449cfb6619f2ebf3f541dd8e4bc2de713979b9ffa74c05e6d78c3987d97760a602e980f738c63c3_0","lines":"\t\tif (sb->st_mode & S_ISVTX)\n\t\t\tif (file_printf(ms, \"%ssticky\", COMMA) == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":295,"col":14,"offset":7664},"end":{"line":295,"col":41,"offset":7691},"extra":{"metavars":{"$FUN":{"start":{"line":295,"col":14,"offset":7664},"end":{"line":295,"col":22,"offset":7672},"abstract_content":"readlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1195a7c4ddaa68f49e0c8783ed1d2b24d4d221f4ad5eba59fe4c53826a6ec4746dfa442f91cd937d814a690920104d560aeccfbc5db780bdf5d89e25418b4964_0","lines":"\t\tif ((nch = readlink(fn, buf, BUFSIZ-1)) <= 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":296,"col":4,"offset":7704},"end":{"line":300,"col":5,"offset":7822},"extra":{"metavars":{"$EXPR1":{"start":{"line":296,"col":8,"offset":7708},"end":{"line":296,"col":17,"offset":7717},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":296,"col":20,"offset":7720},"end":{"line":296,"col":31,"offset":7731},"abstract_content":"MAGIC_ERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"891df25b5bc627ca16b1830a03f51f00e6cd1817119fffc4a37d415694610cf9f5a570a12f3f5a140d04c1d20c2c084b3d525d78280e2c9014ac727455316218_2","lines":"\t\t\tif (ms->flags & MAGIC_ERROR) {\n\t\t\t    file_error(ms, errno, \"unreadable symlink `%s'\",\n\t\t\t\tfn);\n\t\t\t    return -1;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":320,"col":7,"offset":8360},"end":{"line":320,"col":26,"offset":8379},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7eeca3ae6a754e3fbc717c4be100403083b5c60ae1fc0e837faae73007392957f5cad4c2be8e68492ac2a8837b103db177fe07ed7043fb985d20053b1c967d06_2","lines":"\t\tif (stat(fn, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":320,"col":7,"offset":8360},"end":{"line":320,"col":26,"offset":8379},"extra":{"metavars":{"$FUN":{"start":{"line":320,"col":7,"offset":8360},"end":{"line":320,"col":11,"offset":8364},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7a1f777aa22498e531fc49695b2aea8fc845f4cdaea7f2425aaf5c67f8a1157accba11541efef81332621df49091aad1658a5bb25473a7772042d8a374a0942_1","lines":"\t\tif (stat(fn, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":321,"col":11,"offset":8395},"end":{"line":321,"col":35,"offset":8419},"extra":{"metavars":{"$FUN":{"start":{"line":321,"col":11,"offset":8395},"end":{"line":321,"col":19,"offset":8403},"abstract_content":"bad_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72729051ab7ef28370d2e60ed33d5b296caf2ca4e1c2e8971f9275d96604984babccd9eac1f0b3f59f7c7a716bdb3471b7ae85357d4a9ebed516d5e9f5443bd2_0","lines":"\t\t\treturn bad_link(ms, errno, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":324,"col":8,"offset":8455},"end":{"line":324,"col":28,"offset":8475},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7eeca3ae6a754e3fbc717c4be100403083b5c60ae1fc0e837faae73007392957f5cad4c2be8e68492ac2a8837b103db177fe07ed7043fb985d20053b1c967d06_3","lines":"\t\t\tif (stat(buf, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":324,"col":8,"offset":8455},"end":{"line":324,"col":28,"offset":8475},"extra":{"metavars":{"$FUN":{"start":{"line":324,"col":8,"offset":8455},"end":{"line":324,"col":12,"offset":8459},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7a1f777aa22498e531fc49695b2aea8fc845f4cdaea7f2425aaf5c67f8a1157accba11541efef81332621df49091aad1658a5bb25473a7772042d8a374a0942_2","lines":"\t\t\tif (stat(buf, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":325,"col":12,"offset":8492},"end":{"line":325,"col":36,"offset":8516},"extra":{"metavars":{"$FUN":{"start":{"line":325,"col":12,"offset":8492},"end":{"line":325,"col":20,"offset":8500},"abstract_content":"bad_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72729051ab7ef28370d2e60ed33d5b296caf2ca4e1c2e8971f9275d96604984babccd9eac1f0b3f59f7c7a716bdb3471b7ae85357d4a9ebed516d5e9f5443bd2_1","lines":"\t\t\t\treturn bad_link(ms, errno, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":333,"col":9,"offset":8688},"end":{"line":333,"col":17,"offset":8696},"extra":{"metavars":{"$PTR1":{"start":{"line":333,"col":9,"offset":8688},"end":{"line":333,"col":12,"offset":8691},"abstract_content":"tmp","propagated_value":{"svalue_start":{"line":330,"col":15,"offset":8589},"svalue_end":{"line":330,"col":32,"offset":8606},"svalue_abstract_content":"strrchr(fn'/')"}},"$PTR2":{"start":{"line":333,"col":15,"offset":8694},"end":{"line":333,"col":17,"offset":8696},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f7db2a3d9c71b3fa3bca977f2816df0cac3c3febe9ee852828c5bfd4f3b73fb3c699d10308cd1d0a4e2d274bdb1b8a04fe1d655be37c619f146d15b69e64ea9_0","lines":"\t\t\t\tif (tmp - fn + 1 > BUFSIZ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":334,"col":6,"offset":8718},"end":{"line":338,"col":7,"offset":8835},"extra":{"metavars":{"$EXPR1":{"start":{"line":334,"col":10,"offset":8722},"end":{"line":334,"col":19,"offset":8731},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":334,"col":22,"offset":8734},"end":{"line":334,"col":33,"offset":8745},"abstract_content":"MAGIC_ERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"891df25b5bc627ca16b1830a03f51f00e6cd1817119fffc4a37d415694610cf9f5a570a12f3f5a140d04c1d20c2c084b3d525d78280e2c9014ac727455316218_3","lines":"\t\t\t\t\tif (ms->flags & MAGIC_ERROR) {\n\t\t\t\t\t\tfile_error(ms, 0,\n\t\t\t\t\t\t    \"path too long: `%s'\", buf);\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":351,"col":11,"offset":9127},"end":{"line":351,"col":41,"offset":9157},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":11,"offset":9127},"end":{"line":351,"col":18,"offset":9134},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"caa56725a0d3af4251e5768800f793f7a7dacc5e439650050a89f55d42a56aef36c6652f6d109a42db4d6d5fe0cf722bd1378d3314c987b908166b91ee53c0ca_0","lines":"\t\t\t\t(void)strlcpy(buf2, fn, sizeof buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":351,"col":11,"offset":9127},"end":{"line":351,"col":41,"offset":9157},"extra":{"metavars":{"$TYPE":{"start":{"line":328,"col":4,"offset":8546},"end":{"line":328,"col":8,"offset":8550},"abstract_content":"char"},"$LEN":{"start":{"line":328,"col":14,"offset":8556},"end":{"line":328,"col":29,"offset":8571},"abstract_content":"BUFSIZ+BUFSIZ+4"},"$FUN":{"start":{"line":351,"col":11,"offset":9127},"end":{"line":351,"col":18,"offset":9134},"abstract_content":"strlcpy"},"$BUF":{"start":{"line":351,"col":19,"offset":9135},"end":{"line":351,"col":23,"offset":9139},"abstract_content":"buf2"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"b9dba8108f57115db0017e5efb9916eab8920669a75326cb6ff0afcd255c1803e0ccbacca7344e45fb085e28472cb0cdb6e1e4c5f4a34bc6347f1d12031113b5_0","lines":"\t\t\t\t(void)strlcpy(buf2, fn, sizeof buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":352,"col":10,"offset":9168},"end":{"line":352,"col":18,"offset":9176},"extra":{"metavars":{"$PTR1":{"start":{"line":352,"col":10,"offset":9168},"end":{"line":352,"col":13,"offset":9171},"abstract_content":"tmp","propagated_value":{"svalue_start":{"line":330,"col":15,"offset":8589},"svalue_end":{"line":330,"col":32,"offset":8606},"svalue_abstract_content":"strrchr(fn'/')"}},"$PTR2":{"start":{"line":352,"col":16,"offset":9174},"end":{"line":352,"col":18,"offset":9176},"abstract_content":"fn"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6f7db2a3d9c71b3fa3bca977f2816df0cac3c3febe9ee852828c5bfd4f3b73fb3c699d10308cd1d0a4e2d274bdb1b8a04fe1d655be37c619f146d15b69e64ea9_1","lines":"\t\t\t\tbuf2[tmp - fn + 1] = '\\0';","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":354,"col":11,"offset":9226},"end":{"line":354,"col":42,"offset":9257},"extra":{"metavars":{"$FUN":{"start":{"line":354,"col":11,"offset":9226},"end":{"line":354,"col":18,"offset":9233},"abstract_content":"strlcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d72f9f3b15b11857023d164608e3e13b25ac50ce36a145d3bb2e65f44e55157086c3c4616c40591218cf07e3a337e8fae504e3c2139dbe41c8e456841f34d63_0","lines":"\t\t\t\t(void)strlcat(buf2, buf, sizeof buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":354,"col":11,"offset":9226},"end":{"line":354,"col":42,"offset":9257},"extra":{"metavars":{"$TYPE":{"start":{"line":328,"col":4,"offset":8546},"end":{"line":328,"col":8,"offset":8550},"abstract_content":"char"},"$LEN":{"start":{"line":328,"col":14,"offset":8556},"end":{"line":328,"col":29,"offset":8571},"abstract_content":"BUFSIZ+BUFSIZ+4"},"$FUN":{"start":{"line":354,"col":11,"offset":9226},"end":{"line":354,"col":18,"offset":9233},"abstract_content":"strlcat"},"$BUF":{"start":{"line":354,"col":19,"offset":9234},"end":{"line":354,"col":23,"offset":9238},"abstract_content":"buf2"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"85cdd0b5c4d0aa5dd01ea89aa32b6a2aba80c51fa66e421b1e40f204a42dfdc7276b72315d7bd7d68b44162a60b61f46be73ecd08fd6e65ac7a8b0b7bc69ba3f_0","lines":"\t\t\t\t(void)strlcat(buf2, buf, sizeof buf2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":357,"col":8,"offset":9287},"end":{"line":357,"col":28,"offset":9307},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"7eeca3ae6a754e3fbc717c4be100403083b5c60ae1fc0e837faae73007392957f5cad4c2be8e68492ac2a8837b103db177fe07ed7043fb985d20053b1c967d06_4","lines":"\t\t\tif (stat(tmp, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":357,"col":8,"offset":9287},"end":{"line":357,"col":28,"offset":9307},"extra":{"metavars":{"$FUN":{"start":{"line":357,"col":8,"offset":9287},"end":{"line":357,"col":12,"offset":9291},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c7a1f777aa22498e531fc49695b2aea8fc845f4cdaea7f2425aaf5c67f8a1157accba11541efef81332621df49091aad1658a5bb25473a7772042d8a374a0942_3","lines":"\t\t\tif (stat(tmp, &tstatbuf) < 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":358,"col":12,"offset":9324},"end":{"line":358,"col":36,"offset":9348},"extra":{"metavars":{"$FUN":{"start":{"line":358,"col":12,"offset":9324},"end":{"line":358,"col":20,"offset":9332},"abstract_content":"bad_link"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72729051ab7ef28370d2e60ed33d5b296caf2ca4e1c2e8971f9275d96604984babccd9eac1f0b3f59f7c7a716bdb3471b7ae85357d4a9ebed516d5e9f5443bd2_2","lines":"\t\t\t\treturn bad_link(ms, errno, buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":48,"col":15,"offset":1865},"end":{"line":48,"col":30,"offset":1880},"extra":{"metavars":{"$FUN":{"start":{"line":48,"col":15,"offset":1865},"end":{"line":48,"col":21,"offset":1871},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a688de2e08b2b00fb286c7a3ec567fe12c74615b49070c81692b711e1c5a10b4528733751ca0e8c095caac012a2d2aaca4d39008cf4c08ac7500baa6425662e7_0","lines":"\t\tif ((*buf = malloc(*bufsiz)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":53,"col":11,"offset":1964},"end":{"line":53,"col":20,"offset":1973},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":53,"col":11,"offset":1964},"end":{"line":53,"col":16,"offset":1969},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d42be4314b43fb9016cc8aade4bb06b206fa927001687ed38f6982db92e9c1c1bdff8fafe9a3eb09c8fbe8fde7a12919322147fe718e79f44c0569a02d3dad79_0","lines":"\t\tint c = fgetc(fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":71,"col":11,"offset":2269},"end":{"line":71,"col":32,"offset":2290},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":71,"col":11,"offset":2269},"end":{"line":71,"col":18,"offset":2276},"abstract_content":"nbufsiz"},"$SIGNED":{"start":{"line":71,"col":31,"offset":2289},"end":{"line":71,"col":32,"offset":2290},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"32810d7365bbb7807a31fc63cadb859669a034b1a13b9195da7bddee6ccfe6c8d31cb10a76477755e13b55f55df752b9e0f3cd484898474874047f2b010dbd03_0","lines":"\t\t\tsize_t nbufsiz = *bufsiz * 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":73,"col":16,"offset":2334},"end":{"line":73,"col":38,"offset":2356},"extra":{"metavars":{"$X":{"start":{"line":71,"col":21,"offset":2279},"end":{"line":71,"col":28,"offset":2286},"abstract_content":"*bufsiz"},"$Y":{"start":{"line":71,"col":31,"offset":2289},"end":{"line":71,"col":32,"offset":2290},"abstract_content":"2"},"$FUN":{"start":{"line":73,"col":16,"offset":2334},"end":{"line":73,"col":23,"offset":2341},"abstract_content":"realloc"},"$ARG1":{"start":{"line":73,"col":24,"offset":2342},"end":{"line":73,"col":28,"offset":2346},"abstract_content":"*buf"},"$N":{"start":{"line":73,"col":30,"offset":2348},"end":{"line":73,"col":37,"offset":2355},"abstract_content":"nbufsiz"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bcbe1cbd7eebaa01f535433a0dd115e999a440a22d3ca64d815481bb38622a5877e71c8f9d96c45f1f4c6b9ea15e879a718b9f6f04fad06cf56f77be9b378303_0","lines":"\t\t\tif ((nbuf = realloc(*buf, nbufsiz)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":73,"col":16,"offset":2334},"end":{"line":73,"col":38,"offset":2356},"extra":{"metavars":{"$FUN":{"start":{"line":73,"col":16,"offset":2334},"end":{"line":73,"col":23,"offset":2341},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2bd501b3e2ff61af41c5f40b2ef04fab992bfcf8722d3004cf06a2a3c75603f7a79bbf56e87f3545d9fce6398db5efe13eb501d378c6973fb15c23c12b1feaaa_0","lines":"\t\t\tif ((nbuf = realloc(*buf, nbufsiz)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":97,"col":9,"offset":2676},"end":{"line":97,"col":14,"offset":2681},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":97,"col":9,"offset":2676},"end":{"line":97,"col":10,"offset":2677},"abstract_content":"n"},"$SIGNED":{"start":{"line":97,"col":13,"offset":2680},"end":{"line":97,"col":14,"offset":2681},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"549bdecca2d77f94855772901d810c45c2952904a27c7f4948020b4a8c5efe8562433de8e8e6b416ba87122ce8beb9c399988028ad3d9791b9fcf4708e027d98_0","lines":"\tsize_t n = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":100,"col":9,"offset":2738},"end":{"line":100,"col":49,"offset":2778},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"190deb3518f845a92e2908829c93c7e7f065497b615a5d54dc90c5aed819136067a790894cf6e615667ff2e7e35a977f9da0f8254a48518890e62898c2fc8ad1_0","lines":"\t\t(void)printf(\"%\" SIZE_T_FORMAT \"d %s\", len, p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":101,"col":2,"offset":2781},"end":{"line":101,"col":10,"offset":2789},"extra":{"metavars":{"$PTR":{"start":{"line":101,"col":7,"offset":2786},"end":{"line":101,"col":8,"offset":2787},"abstract_content":"p"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4bfc2419e62ddd0d25f62d4b3b55cac483be249a56fe5b05893b61da65c61101e400ffdf36d85550bad0b95fcc5aa47c81f06d5da3af228de970d0bcd27abed_0","lines":"\tfree(p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":221,"col":3,"offset":6264},"end":{"line":252,"col":4,"offset":6993},"extra":{"metavars":{"$EXPR1":{"start":{"line":221,"col":10,"offset":6271},"end":{"line":221,"col":15,"offset":6276},"abstract_content":"place"},"$EXPR2":{"start":{"line":221,"col":18,"offset":6279},"end":{"line":221,"col":31,"offset":6292},"abstract_content":"nargv[optind]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e6c17afd31fd27e251fbd434dd6e26dad3e3686c5746cc1f2a92560fa59b4bd4ad84416628dde968af1eb39050b93667f48ec9033716d949d9295da2c7320b52_0","lines":"\t\tif ((*(place = nargv[optind]) != '-')\n\t\t    || (place[1] == '\\0')) {    /* found non-option */\n\t\t\tplace = EMSG;\n\t\t\tif (IN_ORDER) {\n\t\t\t\t/*\n\t\t\t\t * GNU extension:\n\t\t\t\t * return non-option as argument to option 1\n\t\t\t\t */\n\t\t\t\toptarg = nargv[optind++];\n\t\t\t\treturn INORDER;\n\t\t\t}\n\t\t\tif (!PERMUTE) {\n\t\t\t\t/*\n\t\t\t\t * if no permutation wanted, stop parsing\n\t\t\t\t * at first non-option\n\t\t\t\t */\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t/* do permutation */\n\t\t\tif (nonopt_start == -1)\n\t\t\t\tnonopt_start = optind;\n\t\t\telse if (nonopt_end != -1) {\n\t\t\t\tpermute_args(nonopt_start, nonopt_end,\n\t\t\t\t    optind, nargv);\n\t\t\t\tnonopt_start = optind -\n\t\t\t\t    (nonopt_end - nonopt_start);\n\t\t\t\tnonopt_end = -1;\n\t\t\t}\n\t\t\toptind++;\n\t\t\t/* process next argument */\n\t\t\tgoto start;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":266,"col":4,"offset":7358},"end":{"line":266,"col":30,"offset":7384},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_0","lines":"\t\t\twarnx(illoptchar, optchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":278,"col":5,"offset":7663},"end":{"line":278,"col":31,"offset":7689},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_1","lines":"\t\t\t\twarnx(recargchar, optchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":301,"col":6,"offset":8290},"end":{"line":301,"col":32,"offset":8316},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_2","lines":"\t\t\t\t\twarnx(recargchar, optchar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":403,"col":23,"offset":10506},"end":{"line":403,"col":47,"offset":10530},"extra":{"metavars":{"$TYPE":{"start":{"line":377,"col":3,"offset":9855},"end":{"line":377,"col":7,"offset":9859},"abstract_content":"char"},"$PTR1":{"start":{"line":403,"col":23,"offset":10506},"end":{"line":403,"col":32,"offset":10515},"abstract_content":"has_equal"},"$PTR2":{"start":{"line":403,"col":35,"offset":10518},"end":{"line":403,"col":47,"offset":10530},"abstract_content":"current_argv"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"876f147e83ec8f6c79eccce90aa0b33e03253fa027374a50a045e51b5e3684b96a7d32e0b951fb40960ce17eb314440996f265913721a95540a41ab045fcc944_0","lines":"\t\t\tcurrent_argv_len = has_equal - current_argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":429,"col":5,"offset":11123},"end":{"line":430,"col":23,"offset":11181},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_3","lines":"\t\t\t\twarnx(ambig, (int)current_argv_len,\n\t\t\t\t     current_argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":438,"col":6,"offset":11367},"end":{"line":439,"col":24,"offset":11426},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_4","lines":"\t\t\t\t\twarnx(noarg, (int)current_argv_len,\n\t\t\t\t\t     current_argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":470,"col":6,"offset":12198},"end":{"line":470,"col":39,"offset":12231},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_5","lines":"\t\t\t\t\twarnx(recargstring, current_argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","start":{"line":484,"col":5,"offset":12512},"end":{"line":484,"col":38,"offset":12545},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"7b60f877f847d4745af75068fc90bb41db09a0c0d75df22e035d1823717fe3ebb1c658a9caafd12fd3b8ab23ec542adbadf50ec51a894bdac568d79323d341e3_6","lines":"\t\t\t\twarnx(illoptstring, current_argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/gmtime_r.c","start":{"line":17,"col":2,"offset":391},"end":{"line":17,"col":30,"offset":419},"extra":{"metavars":{"$FUN":{"start":{"line":17,"col":2,"offset":391},"end":{"line":17,"col":8,"offset":397},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f841d2dd1651b9e5ae011eba281ce38beaa933c2ba02a42b2c7a7a056f5f195d523820605f5e3fd66821cfa70e28de51f5502aee267b23ffa4f98a6a128816b5_0","lines":"\tmemcpy(tm, tmp, sizeof(*tm));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":47,"col":27,"offset":1712},"end":{"line":47,"col":51,"offset":1736},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"0322aa6ce73477ba493726113dd35c1d37eba9715f14e2b842e82bc5551c25e4d1ef964e1ea481f274b39dacc38ae63b98cd334203b0a0c10f2b73d870f18307_0","lines":"#define DPRINTF(fmt, ...) printf(fmt, __VA_ARGS__)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":94,"col":9,"offset":2553},"end":{"line":94,"col":15,"offset":2559},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":94,"col":9,"offset":2553},"end":{"line":94,"col":11,"offset":2555},"abstract_content":"nf"},"$SIGNED":{"start":{"line":94,"col":14,"offset":2558},"end":{"line":94,"col":15,"offset":2559},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"84ddb5349f5f2a9226e4faee581b709e64f0c9092a133bad218e5314d11c5cd4521dfb3f1674ffb4afa5d224acd21f8fa03ecf19a886d3ae91cb18c2c7d3fd5b_0","lines":"\tsize_t nf = 0, tf = 0, nl = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":94,"col":17,"offset":2561},"end":{"line":94,"col":23,"offset":2567},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":94,"col":17,"offset":2561},"end":{"line":94,"col":19,"offset":2563},"abstract_content":"tf"},"$SIGNED":{"start":{"line":94,"col":22,"offset":2566},"end":{"line":94,"col":23,"offset":2567},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7a7d153789af7d7af650295c33850eeda31ddfd7a9d70b27ebcbe42c4165b5e7bf90754ddfc4a522d1cb04bdaf87882597c745020fc0ad8fc3aef7b4c1bcceac_0","lines":"\tsize_t nf = 0, tf = 0, nl = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":94,"col":25,"offset":2569},"end":{"line":94,"col":31,"offset":2575},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":94,"col":25,"offset":2569},"end":{"line":94,"col":27,"offset":2571},"abstract_content":"nl"},"$SIGNED":{"start":{"line":94,"col":30,"offset":2574},"end":{"line":94,"col":31,"offset":2575},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6c44d169c4ed9d222fe50830644de14fb894b81040f2862e2d3f6ae64f7f50fa921dbee3599ed3e78d995c53b7e1aa4d0d743a918bddcf0dbfb386302478e767_0","lines":"\tsize_t nf = 0, tf = 0, nl = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":123,"col":4,"offset":3133},"end":{"line":123,"col":10,"offset":3139},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":123,"col":4,"offset":3133},"end":{"line":123,"col":6,"offset":3135},"abstract_content":"nf"},"$SIGNED":{"start":{"line":123,"col":9,"offset":3138},"end":{"line":123,"col":10,"offset":3139},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"84ddb5349f5f2a9226e4faee581b709e64f0c9092a133bad218e5314d11c5cd4521dfb3f1674ffb4afa5d224acd21f8fa03ecf19a886d3ae91cb18c2c7d3fd5b_1","lines":"\t\t\tnf = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":143,"col":2,"offset":3472},"end":{"line":144,"col":12,"offset":3537},"extra":{"metavars":{"$EXPR1":{"start":{"line":143,"col":20,"offset":3490},"end":{"line":143,"col":31,"offset":3501},"abstract_content":"MAGIC_APPLE"},"$EXPR2":{"start":{"line":143,"col":32,"offset":3502},"end":{"line":143,"col":47,"offset":3517},"abstract_content":"MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92de168afb3c7d2c7a67eef40e6e6d1ecab8ee27256a54c47835e8caa23c2f7e09bfc85086d37ae9dac42891ca6bad24c160c9bc419525c0d879472991ee14fc_0","lines":"\tif ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION)) != 0)\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":182,"col":12,"offset":4047},"end":{"line":182,"col":35,"offset":4070},"extra":{"metavars":{"$FUN":{"start":{"line":182,"col":12,"offset":4047},"end":{"line":182,"col":16,"offset":4051},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"10165e16f3b8c6036b1ade91a79ef16a4acd78f29b42ea4bb4e970305ee29c5ce956aeae9d02aeaf3d324999aad6590f2afd5c58074e14ca544f73989604a9ac_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":182,"col":17,"offset":4052},"end":{"line":182,"col":21,"offset":4056},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"aa646d3f0d63b8e82dc7c417c634b672504182933e2064080fbdf27aee73e5b26c9a88e12052dfd4bbc7fac794846273510b58c169c3d06dff50da586bfda71f_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":183,"col":40,"offset":4118},"end":{"line":183,"col":44,"offset":4122},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"aa646d3f0d63b8e82dc7c417c634b672504182933e2064080fbdf27aee73e5b26c9a88e12052dfd4bbc7fac794846273510b58c169c3d06dff50da586bfda71f_1","lines":"\t\terr(EXIT_FAILURE, \"Can't open `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":185,"col":6,"offset":4134},"end":{"line":185,"col":20,"offset":4148},"extra":{"metavars":{"$FUN":{"start":{"line":185,"col":6,"offset":4134},"end":{"line":185,"col":11,"offset":4139},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1bd8aa23377a815491a22dd4af3eb47d4850a1e0bf40b94a1f4d59ea4c3bac6295a9114e70d6b4efcff4d59d291b6ec485c22c0779c51b7532fc5cef3b4c51ed_0","lines":"\tif (fstat(fd, &st) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":186,"col":40,"offset":4195},"end":{"line":186,"col":44,"offset":4199},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"aa646d3f0d63b8e82dc7c417c634b672504182933e2064080fbdf27aee73e5b26c9a88e12052dfd4bbc7fac794846273510b58c169c3d06dff50da586bfda71f_2","lines":"\t\terr(EXIT_FAILURE, \"Can't stat `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":188,"col":11,"offset":4216},"end":{"line":188,"col":29,"offset":4234},"extra":{"metavars":{"$FUN":{"start":{"line":188,"col":11,"offset":4216},"end":{"line":188,"col":17,"offset":4222},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f9b39089d0dddd6bb77b8a4489b6f5983f0e33537c55ac1c3fbbf16b6e002a6a4cd59e720df86cbbdee0cdfc8b01e2496816bff088543e42402608cc0d00d97_0","lines":"\tif ((p = malloc(st.st_size)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_csv.c","start":{"line":191,"col":6,"offset":4327},"end":{"line":191,"col":29,"offset":4350},"extra":{"metavars":{"$FUN":{"start":{"line":191,"col":6,"offset":4327},"end":{"line":191,"col":10,"offset":4331},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"63362fa6a085b3d5ec4df5bcce5405d2eca8b2593df60ba83231aa99a7fcfb5d0b36442f2258eb61669c8189c3440239f311aa68a061385137fe1209d4403b61_0","lines":"\tif (read(fd, p, st.st_size) != st.st_size)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":150,"col":10,"offset":3548},"end":{"line":150,"col":15,"offset":3553},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":150,"col":10,"offset":3548},"end":{"line":150,"col":11,"offset":3549},"abstract_content":"i"},"$SIGNED":{"start":{"line":150,"col":14,"offset":3552},"end":{"line":150,"col":15,"offset":3553},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e267089e72adb681628a1514400a77b42b51d67869999141673d1f7fdf32ae8192200b47dfab2c0ef016d67afe3cc3d457cf6f2b8a242c224ee7e9408576888f_0","lines":"\t\t\t\tfor (i = 0; i < 4; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":183,"col":11,"offset":4138},"end":{"line":183,"col":14,"offset":4141},"extra":{"metavars":{"$VAR":{"start":{"line":183,"col":11,"offset":4138},"end":{"line":183,"col":14,"offset":4141},"abstract_content":"*uc"},"$VAL1":{"start":{"line":184,"col":8,"offset":4152},"end":{"line":184,"col":11,"offset":4155},"abstract_content":"','"},"$VAL2":{"start":{"line":188,"col":8,"offset":4197},"end":{"line":188,"col":11,"offset":4200},"abstract_content":"']'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5a2cfa59064f8d6ff3eb90254f6c33584dd900a0a7584607d68b28547f4aee26989c0fca0e855ac1ac250e977f8cceccd0d8bf8b41aa52dcae9a0ffecacf30eb_0","lines":"\t\tswitch (*uc) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":235,"col":11,"offset":5094},"end":{"line":235,"col":16,"offset":5099},"extra":{"metavars":{"$VAR":{"start":{"line":235,"col":11,"offset":5094},"end":{"line":235,"col":16,"offset":5099},"abstract_content":"*uc++"},"$VAL1":{"start":{"line":236,"col":8,"offset":5110},"end":{"line":236,"col":11,"offset":5113},"abstract_content":"','"},"$VAL2":{"start":{"line":238,"col":8,"offset":5135},"end":{"line":238,"col":11,"offset":5138},"abstract_content":"'}'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6d490002023b125a023013aff9ba2eaa2ea3e35dca1dd73d7d6536b834a639a7830b3ce7246e991aaa8d8dae99988bc6360a04df96a8d1c959015bb9181a236b_0","lines":"\t\tswitch (*uc++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":349,"col":3,"offset":7021},"end":{"line":349,"col":46,"offset":7064},"extra":{"metavars":{"$SIGNED":{"start":{"line":349,"col":3,"offset":7021},"end":{"line":349,"col":5,"offset":7023},"abstract_content":"rv"},"$UNSIGNED":{"start":{"line":349,"col":38,"offset":7056},"end":{"line":349,"col":41,"offset":7059},"abstract_content":"lvl"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"60a5eb6f7dc0239ff00f4964e42366e17654b9c1f7d4a16c0234d72d8281b30d66fb12853610f37ff990c24a01f902812b2b01ff388412362c29ce56fdfa68e5_0","lines":"\t\trv = json_parse_array(&uc, ue, st, lvl + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":353,"col":3,"offset":7116},"end":{"line":353,"col":47,"offset":7160},"extra":{"metavars":{"$SIGNED":{"start":{"line":353,"col":3,"offset":7116},"end":{"line":353,"col":5,"offset":7118},"abstract_content":"rv"},"$UNSIGNED":{"start":{"line":353,"col":39,"offset":7152},"end":{"line":353,"col":42,"offset":7155},"abstract_content":"lvl"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"60a5eb6f7dc0239ff00f4964e42366e17654b9c1f7d4a16c0234d72d8281b30d66fb12853610f37ff990c24a01f902812b2b01ff388412362c29ce56fdfa68e5_1","lines":"\t\trv = json_parse_object(&uc, ue, st, lvl + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":395,"col":2,"offset":8006},"end":{"line":396,"col":12,"offset":8071},"extra":{"metavars":{"$EXPR1":{"start":{"line":395,"col":20,"offset":8024},"end":{"line":395,"col":31,"offset":8035},"abstract_content":"MAGIC_APPLE"},"$EXPR2":{"start":{"line":395,"col":32,"offset":8036},"end":{"line":395,"col":47,"offset":8051},"abstract_content":"MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"891d8e89f2bd34f04963cde9d0dd373240aabf72b30386ebfcd48180a9e633ff659708c90aa4ed154962549ebeade98b73c09806bc6f479ee1f5baf2d9c8430e_0","lines":"\tif ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION)) != 0)\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":398,"col":2,"offset":8074},"end":{"line":398,"col":27,"offset":8099},"extra":{"metavars":{"$TYPE":{"start":{"line":391,"col":2,"offset":7946},"end":{"line":391,"col":8,"offset":7952},"abstract_content":"size_t"},"$LEN":{"start":{"line":391,"col":12,"offset":7956},"end":{"line":391,"col":20,"offset":7964},"abstract_content":"JSON_MAX"},"$FUN":{"start":{"line":398,"col":2,"offset":8074},"end":{"line":398,"col":8,"offset":8080},"abstract_content":"memset"},"$BUF":{"start":{"line":398,"col":9,"offset":8081},"end":{"line":398,"col":11,"offset":8083},"abstract_content":"st"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76b3942568dca665c011f635823a364c9860808f6c01155e5b53d6d37f2386829a9c3fa80b85f34f9d29e980f8b7c674e21c2b3ffc44772aa2221d89740c0f2c_0","lines":"\tmemset(st, 0, sizeof(st));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":445,"col":12,"offset":9061},"end":{"line":445,"col":35,"offset":9084},"extra":{"metavars":{"$FUN":{"start":{"line":445,"col":12,"offset":9061},"end":{"line":445,"col":16,"offset":9065},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f619b4a442f162a59c0ada027c6b939f34403fd9c04804fb1bd6d7202aff3391bb62d5318da43fe014a7a566af9589f9a45864b6690f1efd8ed5f86577c4cbcc_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":445,"col":17,"offset":9066},"end":{"line":445,"col":21,"offset":9070},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"271cde2c002359fb6ce0addeb07748df748e33b548a349a92c91ce877059361cf55317b7d39811da7fcbf6b5792b369187c6bf30abd45b8a7dbaf3ff62adc414_0","lines":"\tif ((fd = open(argv[1], O_RDONLY)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":446,"col":40,"offset":9132},"end":{"line":446,"col":44,"offset":9136},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"271cde2c002359fb6ce0addeb07748df748e33b548a349a92c91ce877059361cf55317b7d39811da7fcbf6b5792b369187c6bf30abd45b8a7dbaf3ff62adc414_1","lines":"\t\terr(EXIT_FAILURE, \"Can't open `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":448,"col":6,"offset":9148},"end":{"line":448,"col":20,"offset":9162},"extra":{"metavars":{"$FUN":{"start":{"line":448,"col":6,"offset":9148},"end":{"line":448,"col":11,"offset":9153},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2e8171dbd1b117139192cefdb2b9f50bba18516d84670f30fb392d8910ed64cf3215fd8d30f8e2ecaeb04d0f418d2faf2e06987110a8dca27d74802843b213e6_0","lines":"\tif (fstat(fd, &st) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":449,"col":40,"offset":9209},"end":{"line":449,"col":44,"offset":9213},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"271cde2c002359fb6ce0addeb07748df748e33b548a349a92c91ce877059361cf55317b7d39811da7fcbf6b5792b369187c6bf30abd45b8a7dbaf3ff62adc414_2","lines":"\t\terr(EXIT_FAILURE, \"Can't stat `%s'\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":451,"col":11,"offset":9230},"end":{"line":451,"col":29,"offset":9248},"extra":{"metavars":{"$FUN":{"start":{"line":451,"col":11,"offset":9230},"end":{"line":451,"col":17,"offset":9236},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"91ae1b206b6ebae1b30a4f2a560f96fca48d637ef824d1ace6d8b20df0e29d611b454f63c3d012563c40f76ffe5a74331de2d9ed2a31957729c77fa97e96cd21_0","lines":"\tif ((p = malloc(st.st_size)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":454,"col":6,"offset":9341},"end":{"line":454,"col":29,"offset":9364},"extra":{"metavars":{"$FUN":{"start":{"line":454,"col":6,"offset":9341},"end":{"line":454,"col":10,"offset":9345},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f515a40c22b5fcc13ed5192a98b4c47a3e380411ae35fd2a229a5de37a3690263d5a4923cd592733a055d32369a99849077f6b1a7266fd63d6578387b0369a60_0","lines":"\tif (read(fd, p, st.st_size) != st.st_size)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/is_json.c","start":{"line":457,"col":2,"offset":9454},"end":{"line":457,"col":33,"offset":9485},"extra":{"metavars":{"$TYPE":{"start":{"line":443,"col":2,"offset":9025},"end":{"line":443,"col":8,"offset":9031},"abstract_content":"size_t"},"$LEN":{"start":{"line":443,"col":15,"offset":9038},"end":{"line":443,"col":23,"offset":9046},"abstract_content":"JSON_MAX"},"$FUN":{"start":{"line":457,"col":2,"offset":9454},"end":{"line":457,"col":8,"offset":9460},"abstract_content":"memset"},"$BUF":{"start":{"line":457,"col":9,"offset":9461},"end":{"line":457,"col":14,"offset":9466},"abstract_content":"stats"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"145303045da148046e4432447fa29faeebf626ea05a91636053efc56626bbca5ba3555ce5750553541a43f8eb7e89663148fcc63c1407f68e96d6c0aaa1f30ec_0","lines":"\tmemset(stats, 0, sizeof(stats));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":74,"col":2,"offset":2777},"end":{"line":75,"col":12,"offset":2842},"extra":{"metavars":{"$EXPR1":{"start":{"line":74,"col":20,"offset":2795},"end":{"line":74,"col":31,"offset":2806},"abstract_content":"MAGIC_APPLE"},"$EXPR2":{"start":{"line":74,"col":32,"offset":2807},"end":{"line":74,"col":47,"offset":2822},"abstract_content":"MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0314c4d4ceb51a4d91e018a7ab8290d240e99acd82f74647ecd142a159c4fbdb71f59c46597c0782919c5812f9ffee690a88a4db06e8433d264a06319322d9c0_0","lines":"\tif ((ms->flags & (MAGIC_APPLE|MAGIC_EXTENSION)) != 0)\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":77,"col":2,"offset":2845},"end":{"line":77,"col":27,"offset":2870},"extra":{"metavars":{"$SIGNED":{"start":{"line":77,"col":2,"offset":2845},"end":{"line":77,"col":5,"offset":2848},"abstract_content":"tar"},"$UNSIGNED":{"start":{"line":77,"col":20,"offset":2863},"end":{"line":77,"col":26,"offset":2869},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2a9f290b2ac9d1cf8aec4db1d5d3127163d75324f585f75f43b2457348984823177c36830cb72583711b721d62a4951a2f258e9ca5dc7f3def9979ba640ff2a_0","lines":"\ttar = is_tar(buf, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":119,"col":7,"offset":3743},"end":{"line":119,"col":12,"offset":3748},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":119,"col":7,"offset":3743},"end":{"line":119,"col":8,"offset":3744},"abstract_content":"i"},"$SIGNED":{"start":{"line":119,"col":11,"offset":3747},"end":{"line":119,"col":12,"offset":3748},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f0a676890a821b7fb2f8036780be80cb400fab243ebaec475c73683c15ffe68e6d2ec16448bc325b1a9def5cd65a6a7f57f564ee761cd2c846b46c8a8506457c_0","lines":"\tfor (i = 0; i < sizeof(header->header.chksum); i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/localtime_r.c","start":{"line":17,"col":2,"offset":403},"end":{"line":17,"col":30,"offset":431},"extra":{"metavars":{"$FUN":{"start":{"line":17,"col":2,"offset":403},"end":{"line":17,"col":8,"offset":409},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24c120f48773f2fa9eb94b4351ff394d9ea079c191b9fd3a408fb31414d53d429c64a7be6bd2fb317b457eefa87fe9f1c843aa9a2bcb235e2a75d5b2d331b4e1_0","lines":"\tmemcpy(tm, tmp, sizeof(*tm));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/pread.c","start":{"line":16,"col":12,"offset":318},"end":{"line":16,"col":30,"offset":336},"extra":{"metavars":{"$FUN":{"start":{"line":16,"col":12,"offset":318},"end":{"line":16,"col":16,"offset":322},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"abdc10677cbdbd430ef6c800707195f62b5b2d8b961fe5fdd8c49910807a5e53b63c416532e8df435b5da946a75ee8cc69972ad53089c2ec189593fedfed746b_0","lines":"\tif ((rv = read(fd, buf, len)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":58,"col":2,"offset":2065},"end":{"line":69,"col":3,"offset":2477},"extra":{"metavars":{"$EXPR1":{"start":{"line":58,"col":6,"offset":2069},"end":{"line":58,"col":13,"offset":2076},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":58,"col":16,"offset":2079},"end":{"line":58,"col":21,"offset":2084},"abstract_content":"INDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a36622ceb1c8be9192eab5af473518da0a826ecb1e12925100d4f919b4f8d78e68ac745c069cff378e24fc2554f0d253935116959dc06e7997413b3b10df5b34_0","lines":"\tif (m->flag & INDIR) {\n\t\t(void) fprintf(stderr, \"(%s,\",\n\t\t    /* Note: type is unsigned */\n\t\t    (m->in_type < file_nnames) ? file_names[m->in_type] :\n\t\t    \"*bad in_type*\");\n\t\tif (m->in_op & FILE_OPINVERSE)\n\t\t\t(void) fputc('~', stderr);\n\t\t(void) fprintf(stderr, \"%c%u),\",\n\t\t    (CAST(size_t, m->in_op & FILE_OPS_MASK) <\n\t\t    __arraycount(optyp)) ?\n\t\t    optyp[m->in_op & FILE_OPS_MASK] : '?', m->in_offset);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":63,"col":3,"offset":2242},"end":{"line":64,"col":30,"offset":2302},"extra":{"metavars":{"$EXPR1":{"start":{"line":63,"col":7,"offset":2246},"end":{"line":63,"col":15,"offset":2254},"abstract_content":"m->->in_op"},"$EXPR2":{"start":{"line":63,"col":18,"offset":2257},"end":{"line":63,"col":32,"offset":2271},"abstract_content":"FILE_OPINVERSE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f64fe3a89dbadc9ea78ea1abe3f7522f69f95d0915ed5d0035eff5c75655ef6845403df32e4ef247364f152d1164e8d868c34b1e66d99e7c56c98f62945145c7_0","lines":"\t\tif (m->in_op & FILE_OPINVERSE)\n\t\t\t(void) fputc('~', stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":73,"col":2,"offset":2646},"end":{"line":74,"col":29,"offset":2707},"extra":{"metavars":{"$EXPR1":{"start":{"line":73,"col":6,"offset":2650},"end":{"line":73,"col":16,"offset":2660},"abstract_content":"m->->mask_op"},"$EXPR2":{"start":{"line":73,"col":19,"offset":2663},"end":{"line":73,"col":33,"offset":2677},"abstract_content":"FILE_OPINVERSE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c597f226efdd854ccb97d3bafd0d8e7367ff4264a7020f50a14ac0cb2ec36adc1850028f91835f8bce101b1a840f55ac049e8516a341e704d946db269c089360_0","lines":"\tif (m->mask_op & FILE_OPINVERSE)\n\t\t(void) fputc('~', stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":79,"col":4,"offset":2791},"end":{"line":80,"col":51,"offset":2887},"extra":{"metavars":{"$EXPR1":{"start":{"line":79,"col":8,"offset":2795},"end":{"line":79,"col":20,"offset":2807},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":79,"col":23,"offset":2810},"end":{"line":79,"col":48,"offset":2835},"abstract_content":"STRING_COMPACT_WHITESPACE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"99602e5cac152a9fb04e44f7204371779f132ebe5e26080f4475dc118b3fe05b0c40ab08897542d5161af9955dde37d8964189e89d220d4d79fd3c374ab643b8_0","lines":"\t\t\tif (m->str_flags & STRING_COMPACT_WHITESPACE)\n\t\t\t\t(void) fputc(CHAR_COMPACT_WHITESPACE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":81,"col":4,"offset":2891},"end":{"line":83,"col":17,"offset":3013},"extra":{"metavars":{"$EXPR1":{"start":{"line":81,"col":8,"offset":2895},"end":{"line":81,"col":20,"offset":2907},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":81,"col":23,"offset":2910},"end":{"line":81,"col":57,"offset":2944},"abstract_content":"STRING_COMPACT_OPTIONAL_WHITESPACE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f72d4a3a737d25111f6aa0bae75b97cd06622868a986b6e308dccba8d2a3e9e87dda5f92365e1da5ca576b0f515d0c8d2c1928d025ab5877331f1200ccdfc5a6_0","lines":"\t\t\tif (m->str_flags & STRING_COMPACT_OPTIONAL_WHITESPACE)\n\t\t\t\t(void) fputc(CHAR_COMPACT_OPTIONAL_WHITESPACE,\n\t\t\t\t    stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":84,"col":4,"offset":3017},"end":{"line":85,"col":49,"offset":3109},"extra":{"metavars":{"$EXPR1":{"start":{"line":84,"col":8,"offset":3021},"end":{"line":84,"col":20,"offset":3033},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":84,"col":23,"offset":3036},"end":{"line":84,"col":46,"offset":3059},"abstract_content":"STRING_IGNORE_LOWERCASE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9eeaed93271e26d08c455fa723083de36b2ae8eb295c2fc382f9ab3aadd9efb98b804df2dffde3818edf92a02e4ff82b6ee601707f7c958773e60f457c2ec38b_0","lines":"\t\t\tif (m->str_flags & STRING_IGNORE_LOWERCASE)\n\t\t\t\t(void) fputc(CHAR_IGNORE_LOWERCASE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":86,"col":4,"offset":3113},"end":{"line":87,"col":49,"offset":3205},"extra":{"metavars":{"$EXPR1":{"start":{"line":86,"col":8,"offset":3117},"end":{"line":86,"col":20,"offset":3129},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":86,"col":23,"offset":3132},"end":{"line":86,"col":46,"offset":3155},"abstract_content":"STRING_IGNORE_UPPERCASE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"22ec049cd32a1a2103c895adc66d50786647a0cc5b209df969f567e6f4a3134dd68f64ea347c075d37e8a18b1b2023f901fb3059c25b2673e098ffab7d691e86_0","lines":"\t\t\tif (m->str_flags & STRING_IGNORE_UPPERCASE)\n\t\t\t\t(void) fputc(CHAR_IGNORE_UPPERCASE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":88,"col":4,"offset":3209},"end":{"line":89,"col":51,"offset":3298},"extra":{"metavars":{"$EXPR1":{"start":{"line":88,"col":8,"offset":3213},"end":{"line":88,"col":20,"offset":3225},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":88,"col":23,"offset":3228},"end":{"line":88,"col":41,"offset":3246},"abstract_content":"REGEX_OFFSET_START"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"655ca47ac84566bf26e92ea604d6c69170c0bc440ca60f012443c2d2aba0b6a69b83b0de2298cbb2319628341a8238adac6fa2041702c84742622394ce6af0d8_0","lines":"\t\t\tif (m->str_flags & REGEX_OFFSET_START)\n\t\t\t\t(void) fputc(CHAR_REGEX_OFFSET_START, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":90,"col":4,"offset":3302},"end":{"line":91,"col":41,"offset":3378},"extra":{"metavars":{"$EXPR1":{"start":{"line":90,"col":8,"offset":3306},"end":{"line":90,"col":20,"offset":3318},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":90,"col":23,"offset":3321},"end":{"line":90,"col":38,"offset":3336},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dc1ef5e8b00711345d120800c3080cb4e291bf127e341afc3ccae8f2cfe25e159ca71adaea9ef84ec3d03fc85be283b1e455c8016b908ce92fd2e6b96da64784_0","lines":"\t\t\tif (m->str_flags & STRING_TEXTTEST)\n\t\t\t\t(void) fputc(CHAR_TEXTTEST, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":92,"col":4,"offset":3382},"end":{"line":93,"col":40,"offset":3456},"extra":{"metavars":{"$EXPR1":{"start":{"line":92,"col":8,"offset":3386},"end":{"line":92,"col":20,"offset":3398},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":92,"col":23,"offset":3401},"end":{"line":92,"col":37,"offset":3415},"abstract_content":"STRING_BINTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"37c30d46a81d237c1a88b82791095daf1a55bfa0b12ba0c61dc28966872a1bec753541a31130060cc8fab0327fbbeecae0b4e67b78a1bd4b660b7a0a56208c45_0","lines":"\t\t\tif (m->str_flags & STRING_BINTEST)\n\t\t\t\t(void) fputc(CHAR_BINTEST, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":94,"col":4,"offset":3460},"end":{"line":95,"col":45,"offset":3537},"extra":{"metavars":{"$EXPR1":{"start":{"line":94,"col":8,"offset":3464},"end":{"line":94,"col":20,"offset":3476},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":94,"col":23,"offset":3479},"end":{"line":94,"col":35,"offset":3491},"abstract_content":"PSTRING_1_BE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9c6494e27972571762b2d20722951aa369daabf33753846cf5792b60d378b16505ca94302e5ed7785cb8b664353416b38a973cf54383ddd0f4b37f0de0422273_0","lines":"\t\t\tif (m->str_flags & PSTRING_1_BE)\n\t\t\t\t(void) fputc(CHAR_PSTRING_1_BE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":96,"col":4,"offset":3541},"end":{"line":97,"col":45,"offset":3618},"extra":{"metavars":{"$EXPR1":{"start":{"line":96,"col":8,"offset":3545},"end":{"line":96,"col":20,"offset":3557},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":96,"col":23,"offset":3560},"end":{"line":96,"col":35,"offset":3572},"abstract_content":"PSTRING_2_BE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"06b5528aa7318e6c33faad4b6bf6562da2d9c8edef6acd340530dc83140ba4b3367507460ffdbb267a6058add482b1be2c5a1bdcb8cdb65a7fd66b146e42f5b8_0","lines":"\t\t\tif (m->str_flags & PSTRING_2_BE)\n\t\t\t\t(void) fputc(CHAR_PSTRING_2_BE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":98,"col":4,"offset":3622},"end":{"line":99,"col":45,"offset":3699},"extra":{"metavars":{"$EXPR1":{"start":{"line":98,"col":8,"offset":3626},"end":{"line":98,"col":20,"offset":3638},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":98,"col":23,"offset":3641},"end":{"line":98,"col":35,"offset":3653},"abstract_content":"PSTRING_2_LE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"201cf3c1fc49c64b1516416d18411fd8df906ae9b0ed45b2a5ee52d21ec3e38935901fa64e86803a1b20705cd0870a6b8a57d692cfb2c51239e43dec3cfb288a_0","lines":"\t\t\tif (m->str_flags & PSTRING_2_LE)\n\t\t\t\t(void) fputc(CHAR_PSTRING_2_LE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":100,"col":4,"offset":3703},"end":{"line":101,"col":45,"offset":3780},"extra":{"metavars":{"$EXPR1":{"start":{"line":100,"col":8,"offset":3707},"end":{"line":100,"col":20,"offset":3719},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":100,"col":23,"offset":3722},"end":{"line":100,"col":35,"offset":3734},"abstract_content":"PSTRING_4_BE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"100874d2e73ab6876382d850824046d976c276b310039d4d9e4437afa176bc2baa2cee2d7c5d040885ab1e36a6ce83d0e5ffeebf156b58ab7905f0352d7e667a_0","lines":"\t\t\tif (m->str_flags & PSTRING_4_BE)\n\t\t\t\t(void) fputc(CHAR_PSTRING_4_BE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":102,"col":4,"offset":3784},"end":{"line":103,"col":45,"offset":3861},"extra":{"metavars":{"$EXPR1":{"start":{"line":102,"col":8,"offset":3788},"end":{"line":102,"col":20,"offset":3800},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":102,"col":23,"offset":3803},"end":{"line":102,"col":35,"offset":3815},"abstract_content":"PSTRING_4_LE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77d702558ace613a3f8ff7192ec1be32fbb334c4cdb07a58f40c2d1dfedeeccfccff1e78104503cac2396ed8dc55b6daa1fa75997d12c750fa45f7fa1c851482_0","lines":"\t\t\tif (m->str_flags & PSTRING_4_LE)\n\t\t\t\t(void) fputc(CHAR_PSTRING_4_LE, stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":104,"col":4,"offset":3865},"end":{"line":107,"col":17,"offset":3995},"extra":{"metavars":{"$EXPR1":{"start":{"line":104,"col":8,"offset":3869},"end":{"line":104,"col":20,"offset":3881},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":104,"col":23,"offset":3884},"end":{"line":104,"col":53,"offset":3914},"abstract_content":"PSTRING_LENGTH_INCLUDES_ITSELF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ede6b38e54067ae97f38e130a7d26bc7032714822fec5406a594e8e1718bab9659e6efbd6420a0bc1341cd8fb5b7b3cc0197ecc386ceca30e533a6215031d4f6_0","lines":"\t\t\tif (m->str_flags & PSTRING_LENGTH_INCLUDES_ITSELF)\n\t\t\t\t(void) fputc(\n\t\t\t\t    CHAR_PSTRING_LENGTH_INCLUDES_ITSELF,\n\t\t\t\t    stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":113,"col":3,"offset":4081},"end":{"line":117,"col":30,"offset":4251},"extra":{"metavars":{"$EXPR1":{"start":{"line":113,"col":20,"offset":4098},"end":{"line":113,"col":30,"offset":4108},"abstract_content":"m->->mask_op"},"$EXPR2":{"start":{"line":113,"col":33,"offset":4111},"end":{"line":113,"col":46,"offset":4124},"abstract_content":"FILE_OPS_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a483a671c3c429ea0de9147a6371ff8509b0e14baafa4f4697049e969c5bccc1b5c81bcc3136c0e32f33d3e7ef7a678e319e2127147fc0b396356167ac6079c2_0","lines":"\t\tif (CAST(size_t, m->mask_op & FILE_OPS_MASK) <\n\t\t    __arraycount(optyp))\n\t\t\t(void) fputc(optyp[m->mask_op & FILE_OPS_MASK], stderr);\n\t\telse\n\t\t\t(void) fputc('?', stderr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":142,"col":11,"offset":4752},"end":{"line":143,"col":36,"offset":4827},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce9546efd2b8704f0fa62b069cf9674678aaa1a0a4c7e1868abdf8ca3b83091a651d15d859b091c7cea3c25abf9d891832d9919f316c549f8e2ad28b1a829436_0","lines":"\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT \"d\",\n\t\t\t    CAST(long long, m->value.q));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":227,"col":9,"offset":6737},"end":{"line":227,"col":32,"offset":6760},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"ce9546efd2b8704f0fa62b069cf9674678aaa1a0a4c7e1868abdf8ca3b83091a651d15d859b091c7cea3c25abf9d891832d9919f316c549f8e2ad28b1a829436_1","lines":"\t(void) vfprintf(stderr, f, va);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":239,"col":2,"offset":6924},"end":{"line":247,"col":3,"offset":7168},"extra":{"metavars":{"$EXPR1":{"start":{"line":239,"col":6,"offset":6928},"end":{"line":239,"col":11,"offset":6933},"abstract_content":"flags"},"$EXPR2":{"start":{"line":239,"col":14,"offset":6936},"end":{"line":239,"col":28,"offset":6950},"abstract_content":"FILE_T_WINDOWS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a527f39028540141111ab640b022e177621a3dc6678284cf4d96d6792f01b3bfe4f1f69a9b2b71fbd9edbc245188a1c3e84f3fefe21d1dea80b17118f1d04996_0","lines":"\tif (flags & FILE_T_WINDOWS) {\n\t\tstruct timespec ts;\n\t\tcdf_timestamp_to_timespec(&ts, CAST(cdf_timestamp_t, v));\n\t\tt = ts.tv_sec;\n\t} else {\n\t\t// XXX: perhaps detect and print something if overflow\n\t\t// on 32 bit time_t?\n\t\tt = CAST(time_t, v);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":249,"col":2,"offset":7171},"end":{"line":253,"col":3,"offset":7268},"extra":{"metavars":{"$EXPR1":{"start":{"line":249,"col":6,"offset":7175},"end":{"line":249,"col":11,"offset":7180},"abstract_content":"flags"},"$EXPR2":{"start":{"line":249,"col":14,"offset":7183},"end":{"line":249,"col":26,"offset":7195},"abstract_content":"FILE_T_LOCAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc27aa30ae44bd95a5858f0d52bf2ab7facfbd1b23f0087f9b9408e395c51a83f32a453c2f91f5203c6c88a2f1af47e3996c4446a9534ebb68bcffad1a5a1355_0","lines":"\tif (flags & FILE_T_LOCAL) {\n\t\ttm = localtime_r(&t, &tmz);\n\t} else {\n\t\ttm = gmtime_r(&t, &tmz);\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":263,"col":9,"offset":7410},"end":{"line":263,"col":38,"offset":7439},"extra":{"metavars":{"$FUN":{"start":{"line":263,"col":9,"offset":7410},"end":{"line":263,"col":15,"offset":7416},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c36e02d8e954d1cc773f43f2cc17fc01b60ee7711d116f1a6285f85309c7239117f8f361d14320aa8313de0873dbd1fa91fac97cac186a862336c5f46de5382_0","lines":"\treturn strcpy(buf, \"*Invalid time*\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":43,"offset":11529},"extra":{"metavars":{"$FUN":{"start":{"line":373,"col":7,"offset":11493},"end":{"line":373,"col":12,"offset":11498},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_0","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":20,"offset":11586},"extra":{"metavars":{"$FUN":{"start":{"line":375,"col":4,"offset":11570},"end":{"line":375,"col":16,"offset":11582},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_0","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":50,"offset":11964},"extra":{"metavars":{"$FUN":{"start":{"line":393,"col":18,"offset":11932},"end":{"line":393,"col":23,"offset":11937},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_1","lines":"\t\tif ((bufsize = pread(fd, nbuf, len, xph_offset)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":20,"offset":11994},"extra":{"metavars":{"$FUN":{"start":{"line":394,"col":4,"offset":11978},"end":{"line":394,"col":16,"offset":11990},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_1","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":13,"offset":12026},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":397,"col":3,"offset":12016},"end":{"line":397,"col":9,"offset":12022},"abstract_content":"offset"},"$SIGNED":{"start":{"line":397,"col":12,"offset":12025},"end":{"line":397,"col":13,"offset":12026},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7128488e476dc7d1852540d987823710d0d4f5f1238518cd9c62a0c9e064fdd26f8626768becc78ec6a4e8d14d485af8310749d3f3d58ea83fbf6ae8deb83121_0","lines":"\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":401,"col":4,"offset":12095},"end":{"line":403,"col":22,"offset":12226},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":401,"col":4,"offset":12095},"end":{"line":401,"col":10,"offset":12101},"abstract_content":"offset"},"$SIGNED":{"start":{"line":402,"col":8,"offset":12159},"end":{"line":402,"col":13,"offset":12164},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2da8cc4fb17cf5721b4030246c785db5a5ed91a55256e5e8a3fb313ebdae5e10a2b54c1f7e34f27836dfdde76b54392bb55df7277dad86309daa8a63c330b5aa_0","lines":"\t\t\toffset = donote(ms, nbuf, offset, CAST(size_t, bufsize),\n\t\t\t    clazz, swap, 4, flags, notecount, fd, ph_off,\n\t\t\t    ph_num, fsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":32,"offset":12412},"extra":{"metavars":{"$FUN":{"start":{"line":417,"col":2,"offset":12382},"end":{"line":417,"col":8,"offset":12388},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_0","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":32,"offset":13555},"extra":{"metavars":{"$FUN":{"start":{"line":464,"col":2,"offset":13525},"end":{"line":464,"col":8,"offset":13531},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_1","lines":"\tmemcpy(&desc, v, sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":535,"col":1,"offset":15342},"end":{"line":543,"col":20,"offset":15711},"extra":{"metavars":{"$EXPR1":{"start":{"line":541,"col":6,"offset":15562},"end":{"line":541,"col":12,"offset":15568},"abstract_content":"namesz"},"$EXPR2":{"start":{"line":541,"col":16,"offset":15572},"end":{"line":541,"col":17,"offset":15573},"abstract_content":"4"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70293b5f8eec8fa11e36c789d0d69a2b5c7af959de97ddf12b3f9565a1abe69410f4d22ed8211cb3727b617ea2849260cd4e6947f8166b44d31ff11347910572_0","lines":"private int\n/*ARGSUSED*/\ndo_bid_note(struct magic_set *ms, unsigned char *nbuf, uint32_t type,\n    int swap __attribute__((__unused__)), uint32_t namesz, uint32_t descsz,\n    size_t noff, size_t doff, int *flags)\n{\n\tif (namesz == 4 && strcmp(RCAST(char *, &nbuf[noff]), \"GNU\") == 0 &&\n\t    type == NT_GNU_BUILD_ID && (descsz >= 4 && descsz <= 20)) {\n\t\tuint8_t desc[20];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":36,"offset":16098},"extra":{"metavars":{"$FUN":{"start":{"line":563,"col":3,"offset":16065},"end":{"line":563,"col":9,"offset":16071},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_2","lines":"\t\tmemcpy(desc, &nbuf[doff], descsz);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_3","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":42,"offset":17098},"extra":{"metavars":{"$TYPE":{"start":{"line":597,"col":3,"offset":17039},"end":{"line":597,"col":11,"offset":17047},"abstract_content":"uint32_t"},"$LEN":{"start":{"line":597,"col":17,"offset":17053},"end":{"line":597,"col":18,"offset":17054},"abstract_content":"4"},"$FUN":{"start":{"line":598,"col":3,"offset":17059},"end":{"line":598,"col":9,"offset":17065},"abstract_content":"memcpy"},"$BUF":{"start":{"line":598,"col":10,"offset":17066},"end":{"line":598,"col":14,"offset":17070},"abstract_content":"desc"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"22f86d1f4e0d34bd3b6b7d58e5b5ed8e0a077994ca539adc31971c44abad3f0602bbd4665612db763d5ea811412bc0e1a2bca4083390296da5ae82e4064379bf_0","lines":"\t\tmemcpy(desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":43,"offset":18877},"extra":{"metavars":{"$FUN":{"start":{"line":668,"col":3,"offset":18837},"end":{"line":668,"col":9,"offset":18843},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_4","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":43,"offset":19638},"extra":{"metavars":{"$FUN":{"start":{"line":700,"col":3,"offset":19598},"end":{"line":700,"col":9,"offset":19604},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_5","lines":"\t\tmemcpy(&desc, &nbuf[doff], sizeof(desc));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":13,"offset":19749},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":706,"col":8,"offset":19744},"end":{"line":706,"col":9,"offset":19745},"abstract_content":"i"},"$SIGNED":{"start":{"line":706,"col":12,"offset":19748},"end":{"line":706,"col":13,"offset":19749},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8ac2b70a527a48b622ca19d226e0d92bc4f4af12015bc2d70fa43ce0641154144513b6f33823eb1e1138ec572850af27c3361540e8294021b09e88407bda81f9_0","lines":"\t\tfor (i = 0; i < __arraycount(pax); i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":53,"offset":21564},"extra":{"metavars":{"$FUN":{"start":{"line":769,"col":4,"offset":21515},"end":{"line":769,"col":10,"offset":21521},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_6","lines":"\t\t\tmemcpy(&pi, nbuf + doff, MIN(descsz, sizeof(pi)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":790,"col":3,"offset":22188},"end":{"line":808,"col":4,"offset":22689},"extra":{"metavars":{"$EXPR1":{"start":{"line":790,"col":30,"offset":22215},"end":{"line":790,"col":36,"offset":22221},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":790,"col":39,"offset":22224},"end":{"line":790,"col":52,"offset":22237},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"244fc5763d9ec61c45f0da4c457a06b07b956c91b90c95ebabcd96aa8dd5ad0ba75f67a38c10078968fc5f7d8af40fd93367c8cc62be9ab9f0cd4869b69bc7bd_0","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t argoff, pidoff;\n\n\t\t\tif (clazz == ELFCLASS32)\n\t\t\t\targoff = 4 + 4 + 17;\n\t\t\telse\n\t\t\t\targoff = 4 + 4 + 8 + 17;\n\t\t\tif (file_printf(ms, \", from '%.80s'\", nbuf + doff +\n\t\t\t    argoff) == -1)\n\t\t\t\treturn -1;\n\t\t\tpidoff = argoff + 81 + 2;\n\t\t\tif (doff + pidoff + 4 <= size) {\n\t\t\t\tif (file_printf(ms, \", pid=%u\",\n\t\t\t\t    elf_getu32(swap, *RCAST(uint32_t *, (nbuf +\n\t\t\t\t    doff + pidoff)))) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":24,"offset":22319},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":794,"col":5,"offset":22300},"end":{"line":794,"col":11,"offset":22306},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":794,"col":14,"offset":22309},"end":{"line":794,"col":15,"offset":22310},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f16f0d475b59dcd073df693ff5d8ae8159c9fdf91ba83fbf48e45e411becc876522ae90c46d32813883e991e945ec8fbb810a8524720418a4a7c6fa328d02ccc_0","lines":"\t\t\t\targoff = 4 + 4 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":28,"offset":22356},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":796,"col":5,"offset":22333},"end":{"line":796,"col":11,"offset":22339},"abstract_content":"argoff"},"$SIGNED":{"start":{"line":796,"col":14,"offset":22342},"end":{"line":796,"col":15,"offset":22343},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f16f0d475b59dcd073df693ff5d8ae8159c9fdf91ba83fbf48e45e411becc876522ae90c46d32813883e991e945ec8fbb810a8524720418a4a7c6fa328d02ccc_1","lines":"\t\t\t\targoff = 4 + 4 + 8 + 17;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":28,"offset":22477},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":800,"col":4,"offset":22453},"end":{"line":800,"col":10,"offset":22459},"abstract_content":"pidoff"},"$SIGNED":{"start":{"line":800,"col":13,"offset":22462},"end":{"line":800,"col":19,"offset":22468},"abstract_content":"argoff"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"58ec5af83660f006a8791edd3cd803d2cf06c3b5dbe033f7148596b27e63e7f7dac99633bac6837284c543caa8ef682bc21583eaaae94642486f53549308351e_0","lines":"\t\t\tpidoff = argoff + 81 + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":812,"col":3,"offset":22719},"end":{"line":913,"col":4,"offset":25077},"extra":{"metavars":{"$EXPR1":{"start":{"line":812,"col":30,"offset":22746},"end":{"line":812,"col":36,"offset":22752},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":812,"col":39,"offset":22755},"end":{"line":812,"col":52,"offset":22768},"abstract_content":"FLAGS_IS_CORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"244fc5763d9ec61c45f0da4c457a06b07b956c91b90c95ebabcd96aa8dd5ad0ba75f67a38c10078968fc5f7d8af40fd93367c8cc62be9ab9f0cd4869b69bc7bd_1","lines":"\t\tif (type == NT_PRPSINFO && *flags & FLAGS_IS_CORE) {\n\t\t\tsize_t i, j;\n\t\t\tunsigned char c;\n\t\t\t/*\n\t\t\t * Extract the program name.  We assume\n\t\t\t * it to be 16 characters (that's what it\n\t\t\t * is in SunOS 5.x and Linux).\n\t\t\t *\n\t\t\t * Unfortunately, it's at a different offset\n\t\t\t * in various OSes, so try multiple offsets.\n\t\t\t * If the characters aren't all printable,\n\t\t\t * reject it.\n\t\t\t */\n\t\t\tfor (i = 0; i < NOFFSETS; i++) {\n\t\t\t\tunsigned char *cname, *cp;\n\t\t\t\tsize_t reloffset = prpsoffsets(i);\n\t\t\t\tsize_t noffset = doff + reloffset;\n\t\t\t\tsize_t k;\n\t\t\t\tfor (j = 0; j < 16; j++, noffset++,\n\t\t\t\t    reloffset++) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the buffer; if\n\t\t\t\t\t * we are, just give up.\n\t\t\t\t\t */\n\t\t\t\t\tif (noffset >= size)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Make sure we're not past\n\t\t\t\t\t * the end of the contents;\n\t\t\t\t\t * if we are, this obviously\n\t\t\t\t\t * isn't the right offset.\n\t\t\t\t\t */\n\t\t\t\t\tif (reloffset >= descsz)\n\t\t\t\t\t\tgoto tryanother;\n\n\t\t\t\t\tc = nbuf[noffset];\n\t\t\t\t\tif (c == '\\0') {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A '\\0' at the\n\t\t\t\t\t\t * beginning is\n\t\t\t\t\t\t * obviously wrong.\n\t\t\t\t\t\t * Any other '\\0'\n\t\t\t\t\t\t * means we're done.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (j == 0)\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t * A nonprintable\n\t\t\t\t\t\t * character is also\n\t\t\t\t\t\t * wrong.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (!isprint(c) || isquote(c))\n\t\t\t\t\t\t\tgoto tryanother;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t * Well, that worked.\n\t\t\t\t */\n\n\t\t\t\t/*\n\t\t\t\t * Try next offsets, in case this match is\n\t\t\t\t * in the middle of a string.\n\t\t\t\t */\n\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {\n\t\t\t\t\tsize_t no;\n\t\t\t\t\tint adjust = 1;\n\t\t\t\t\tif (prpsoffsets(k) >= prpsoffsets(i))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tfor (no = doff + prpsoffsets(k);\n\t\t\t\t\t     no < doff + prpsoffsets(i); no++)\n\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);\n\t\t\t\t\tif (adjust)\n\t\t\t\t\t\ti = k;\n\t\t\t\t}\n\n\t\t\t\tcname = CAST(unsigned char *,\n\t\t\t\t    &nbuf[doff + prpsoffsets(i)]);\n\t\t\t\tfor (cp = cname; cp < nbuf + size && *cp\n\t\t\t\t    && isprint(*cp); cp++)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t * Linux apparently appends a space at the end\n\t\t\t\t * of the command line: remove it.\n\t\t\t\t */\n\t\t\t\twhile (cp > cname && isspace(cp[-1]))\n\t\t\t\t\tcp--;\n\t\t\t\tif (file_printf(ms, \", from '%.*s'\",\n\t\t\t\t    CAST(int, cp - cname), cname) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\t*flags |= FLAGS_DID_CORE;\n\t\t\t\treturn 1;\n\n\t\t\ttryanother:\n\t\t\t\t;\n\t\t\t}\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":14,"offset":23121},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":825,"col":9,"offset":23116},"end":{"line":825,"col":10,"offset":23117},"abstract_content":"i"},"$SIGNED":{"start":{"line":825,"col":13,"offset":23120},"end":{"line":825,"col":14,"offset":23121},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8ac2b70a527a48b622ca19d226e0d92bc4f4af12015bc2d70fa43ce0641154144513b6f33823eb1e1138ec572850af27c3361540e8294021b09e88407bda81f9_1","lines":"\t\t\tfor (i = 0; i < NOFFSETS; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":15,"offset":23281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":830,"col":10,"offset":23276},"end":{"line":830,"col":11,"offset":23277},"abstract_content":"j"},"$SIGNED":{"start":{"line":830,"col":14,"offset":23280},"end":{"line":830,"col":15,"offset":23281},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f5a4b699906cf7140d17f72288b8c3cdaaff37546e7a56161a409281ccf08d02a1e88c1503e99386d74141f7146537e943f6260bb4220a2c7464d362dfa5c657_0","lines":"\t\t\t\tfor (j = 0; j < 16; j++, noffset++,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":19,"offset":24281},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":880,"col":10,"offset":24272},"end":{"line":880,"col":11,"offset":24273},"abstract_content":"k"},"$SIGNED":{"start":{"line":880,"col":18,"offset":24280},"end":{"line":880,"col":19,"offset":24281},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"97455eedaaf0170f16c46a10af3a7ee47473ea23a251e177fd8d147d946a1863912e5c6abc0c9e13b3b530a06a19bb3c026add213b2ad2b513e9b76382aaa062_0","lines":"\t\t\t\tfor (k = i + 1 ; k < NOFFSETS; k++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":887,"col":7,"offset":24489},"end":{"line":888,"col":36,"offset":24540},"extra":{"metavars":{"$SIGNED":{"start":{"line":887,"col":7,"offset":24489},"end":{"line":887,"col":13,"offset":24495},"abstract_content":"adjust"},"$UNSIGNED":{"start":{"line":888,"col":32,"offset":24536},"end":{"line":888,"col":34,"offset":24538},"abstract_content":"no"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"95f841a500304302df73b6a5d8b75cfb924d4ef48ca1e2040f45796f975d630ed72cb3e610931754890d848bbfd0f2432b1e70c43b59106644a40082341c6447_0","lines":"\t\t\t\t\t\tadjust = adjust\n\t\t\t\t\t\t         && isprint(nbuf[no]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":29,"offset":24970},"extra":{"metavars":{"$TYPE":{"start":{"line":826,"col":5,"offset":23148},"end":{"line":826,"col":18,"offset":23161},"abstract_content":"unsigned char"},"$PTR1":{"start":{"line":905,"col":19,"offset":24960},"end":{"line":905,"col":21,"offset":24962},"abstract_content":"cp"},"$PTR2":{"start":{"line":905,"col":24,"offset":24965},"end":{"line":905,"col":29,"offset":24970},"abstract_content":"cname"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"629246a74574d7b25eae00e27fccb5fba44c4d822e200e141cf767e217f86e87e5fe84f8955ce0eef731d21216772e7eaaddd8ab9e8891c5aeb751c8d299c886_0","lines":"\t\t\t\t    CAST(int, cp - cname), cname) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":43,"offset":25492},"extra":{"metavars":{"$FUN":{"start":{"line":932,"col":7,"offset":25456},"end":{"line":932,"col":12,"offset":25461},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_2","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":20,"offset":25549},"extra":{"metavars":{"$FUN":{"start":{"line":934,"col":4,"offset":25533},"end":{"line":934,"col":16,"offset":25545},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_2","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":60,"offset":26236},"extra":{"metavars":{"$FUN":{"start":{"line":964,"col":16,"offset":26192},"end":{"line":964,"col":21,"offset":26197},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_3","lines":"\t    (buflen = pread(fd, buf, CAST(size_t, buflen), offset)) <= 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":19,"offset":26264},"extra":{"metavars":{"$FUN":{"start":{"line":965,"col":3,"offset":26248},"end":{"line":965,"col":15,"offset":26260},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_3","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":19,"offset":26574},"extra":{"metavars":{"$PTR1":{"start":{"line":978,"col":9,"offset":26564},"end":{"line":978,"col":13,"offset":26568},"abstract_content":"bptr"},"$PTR2":{"start":{"line":978,"col":16,"offset":26571},"end":{"line":978,"col":19,"offset":26574},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e0297a41b37b163f2aad51eb3ccd09d807661c76901f5bc32cee0da9a95d773b6df5ba9024ab0428079894199a6d70c00b4cb080e873cbc0dfa9f374025c360e_0","lines":"\treturn bptr - buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":999,"col":2,"offset":27097},"end":{"line":1001,"col":12,"offset":27206},"extra":{"metavars":{"$EXPR1":{"start":{"line":999,"col":17,"offset":27112},"end":{"line":999,"col":30,"offset":27125},"abstract_content":"FLAGS_IS_CORE"},"$EXPR2":{"start":{"line":999,"col":31,"offset":27126},"end":{"line":999,"col":51,"offset":27146},"abstract_content":"FLAGS_DID_CORE_STYLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8b4ff553ec2340f3e357434059fbbb2383459d881a3ba82084443a3f93d18343fa9a9dd9ac1c91ce7576905869312444c9a9f754c8817357e584fe36687448cd_0","lines":"\tif ((*flags & (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE)) !=\n\t    (FLAGS_IS_CORE|FLAGS_DID_CORE_STYLE))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":10,"offset":27562},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1024,"col":2,"offset":27554},"end":{"line":1024,"col":6,"offset":27558},"abstract_content":"nval"},"$SIGNED":{"start":{"line":1024,"col":9,"offset":27561},"end":{"line":1024,"col":10,"offset":27562},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4cf70d28e343ebe6c12a960c06902bbd0e32e317a18f0bf7d83cd5d4eb34770867a9a28a2d6c96cf359b93553d46e7277a8f878741023d78fec1c0a4d0a17e12_0","lines":"\tnval = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":54,"offset":27680},"extra":{"metavars":{"$FUN":{"start":{"line":1026,"col":3,"offset":27629},"end":{"line":1026,"col":9,"offset":27635},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_7","lines":"\t\tmemcpy(xauxv_addr, &nbuf[doff + off], xauxv_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":45,"offset":29169},"extra":{"metavars":{"$FUN":{"start":{"line":1105,"col":2,"offset":29126},"end":{"line":1105,"col":8,"offset":29132},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_8","lines":"\tmemcpy(xdh_addr, &dbuf[offset], xdh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1110,"col":3,"offset":29235},"end":{"line":1113,"col":22,"offset":29308},"extra":{"metavars":{"$EXPR1":{"start":{"line":1110,"col":7,"offset":29239},"end":{"line":1110,"col":14,"offset":29246},"abstract_content":"xdh_val"},"$EXPR2":{"start":{"line":1110,"col":17,"offset":29249},"end":{"line":1110,"col":25,"offset":29257},"abstract_content":"DF_1_PIE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1710f0d98f40e8d41c522419be58eec222957f63006f459d5d25e99547c64b387f35d7720c7d4489b66e4cf817404e2ffbc511bc181cbd938a7bb96f75bf8f31_0","lines":"\t\tif (xdh_val & DF_1_PIE)\n\t\t\tms->mode |= 0111;\n\t\telse\n\t\t\tms->mode &= ~0111;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":45,"offset":29991},"extra":{"metavars":{"$FUN":{"start":{"line":1147,"col":2,"offset":29948},"end":{"line":1147,"col":8,"offset":29954},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_9","lines":"\tmemcpy(xnh_addr, &nbuf[offset], xnh_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1160,"col":2,"offset":30192},"end":{"line":1165,"col":3,"offset":30343},"extra":{"metavars":{"$EXPR1":{"start":{"line":1160,"col":6,"offset":30196},"end":{"line":1160,"col":12,"offset":30202},"abstract_content":"namesz","propagated_value":{"svalue_start":{"line":1150,"col":11,"offset":30027},"svalue_end":{"line":1150,"col":21,"offset":30037},"svalue_abstract_content":"xnh_namesz"}},"$EXPR2":{"start":{"line":1160,"col":15,"offset":30205},"end":{"line":1160,"col":25,"offset":30215},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba5021ce5399b35adbe8762d62b2623ef8fdda19fd3960eb2fc96552398a3adc79edbd0f7d2017f5f295982f0be7a93fb05cd08aa00b75a737cd3d97c302a9d5_0","lines":"\tif (namesz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note name size %#lx\",\n\t\t    CAST(unsigned long, namesz)) == -1)\n\t\t\treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1167,"col":2,"offset":30346},"end":{"line":1172,"col":3,"offset":30508},"extra":{"metavars":{"$EXPR1":{"start":{"line":1167,"col":6,"offset":30350},"end":{"line":1167,"col":12,"offset":30356},"abstract_content":"descsz","propagated_value":{"svalue_start":{"line":1151,"col":11,"offset":30049},"svalue_end":{"line":1151,"col":21,"offset":30059},"svalue_abstract_content":"xnh_descsz"}},"$EXPR2":{"start":{"line":1167,"col":15,"offset":30359},"end":{"line":1167,"col":25,"offset":30369},"abstract_content":"0x80000000"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5aea5ddd6dbe41978e75cd866983d8c69cca46e69de4a72ba28af2cbe2172c3bcddc6ddc6a38a41f481628564b40ca60a029fc0afeb14ddec2f3fde1af1c7662_0","lines":"\tif (descsz & 0x80000000) {\n\t\tif (file_printf(ms, \", bad note description size %#lx\",\n\t\t    CAST(unsigned long, descsz)) == -1)\n\t\t    \treturn -1;\n\t    return 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1245,"col":4,"offset":32155},"end":{"line":1246,"col":19,"offset":32212},"extra":{"metavars":{"$EXPR1":{"start":{"line":1245,"col":8,"offset":32159},"end":{"line":1245,"col":14,"offset":32165},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1245,"col":17,"offset":32168},"end":{"line":1245,"col":41,"offset":32192},"abstract_content":"FLAGS_DID_NETBSD_UNKNOWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"07fe43b10e86a8c151d92e824a7f1fc81272e51ea42917fea4ab84c6b4b459b2c8425667216d8c3ddee833c4d8233bd1a671043223f1b8537aaf73e414282115_0","lines":"\t\t\tif (*flags & FLAGS_DID_NETBSD_UNKNOWN)\n\t\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1253,"col":3,"offset":32349},"end":{"line":1254,"col":18,"offset":32385},"extra":{"metavars":{"$EXPR1":{"start":{"line":1253,"col":7,"offset":32353},"end":{"line":1253,"col":13,"offset":32359},"abstract_content":"*flags"},"$EXPR2":{"start":{"line":1253,"col":16,"offset":32362},"end":{"line":1253,"col":20,"offset":32366},"abstract_content":"flag"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0268429f6cec065f134b6852f360825c5e0b41ea602c47bd61808d509005d3eb98b3dc0e7f8564578420793f62255c0d473345dd677365a2b0c0b33e91058e8b_0","lines":"\t\tif (*flags & flag)\n\t\t\treturn offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":20,"offset":34187},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1323,"col":9,"offset":34176},"end":{"line":1323,"col":16,"offset":34183},"abstract_content":"nbadcap"},"$SIGNED":{"start":{"line":1323,"col":19,"offset":34186},"end":{"line":1323,"col":20,"offset":34187},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"01430df09ab13c231940cc747cc5c9ebee07a716750886297d0c66e0ebf5cdbf18214f443617b85349c8b215b0fd50667583b6224e73d77b33df9958861b3be1_0","lines":"\tsize_t nbadcap = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":73,"offset":34754},"extra":{"metavars":{"$FUN":{"start":{"line":1343,"col":6,"offset":34687},"end":{"line":1343,"col":11,"offset":34692},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_4","lines":"\tif (pread(fd, xsh_addr, xsh_sizeof, CAST(off_t, (off + size * strtab)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1360,"col":19,"offset":35159},"end":{"line":1361,"col":27,"offset":35219},"extra":{"metavars":{"$FUN":{"start":{"line":1360,"col":19,"offset":35159},"end":{"line":1360,"col":24,"offset":35164},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_5","lines":"\t\tif ((namesize = pread(fd, name, sizeof(name) - 1,\n\t\t    name_off + xsh_name)) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1362,"col":4,"offset":35233},"end":{"line":1362,"col":20,"offset":35249},"extra":{"metavars":{"$FUN":{"start":{"line":1362,"col":4,"offset":35233},"end":{"line":1362,"col":16,"offset":35245},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_4","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1371,"col":7,"offset":35387},"end":{"line":1371,"col":43,"offset":35423},"extra":{"metavars":{"$FUN":{"start":{"line":1371,"col":7,"offset":35387},"end":{"line":1371,"col":12,"offset":35392},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_6","lines":"\t\tif (pread(fd, xsh_addr, xsh_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1373,"col":4,"offset":35464},"end":{"line":1373,"col":20,"offset":35480},"extra":{"metavars":{"$FUN":{"start":{"line":1373,"col":4,"offset":35464},"end":{"line":1373,"col":16,"offset":35476},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_5","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1396,"col":11,"offset":35846},"end":{"line":1396,"col":19,"offset":35854},"extra":{"metavars":{"$VAR":{"start":{"line":1396,"col":11,"offset":35846},"end":{"line":1396,"col":19,"offset":35854},"abstract_content":"xsh_type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7e9008f1040fc7e169fcf637159a03dbf70088d2bed1e82d810006a2177251478b294d47a67fb83c2e11f63eff3f177960c10ccc868e423cd1138e80e44772bf_0","lines":"\t\tswitch (xsh_type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1410,"col":16,"offset":36279},"end":{"line":1410,"col":32,"offset":36295},"extra":{"metavars":{"$FUN":{"start":{"line":1410,"col":16,"offset":36279},"end":{"line":1410,"col":22,"offset":36285},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dee2dacc973eb44454821643757f7bd1811e7ac76da654b4724856660137dfcd5a2043a4d99360ca64a65fd22bf6a998bf588693ada0f0090ba86a0a8078f041_0","lines":"\t\t\tif ((nbuf = malloc(xsh_size)) == NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1415,"col":8,"offset":36408},"end":{"line":1415,"col":45,"offset":36445},"extra":{"metavars":{"$FUN":{"start":{"line":1415,"col":8,"offset":36408},"end":{"line":1415,"col":13,"offset":36413},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_7","lines":"\t\t\tif (pread(fd, nbuf, xsh_size, xsh_offset) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1417,"col":5,"offset":36486},"end":{"line":1417,"col":21,"offset":36502},"extra":{"metavars":{"$FUN":{"start":{"line":1417,"col":5,"offset":36486},"end":{"line":1417,"col":17,"offset":36498},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_6","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1418,"col":5,"offset":36508},"end":{"line":1418,"col":16,"offset":36519},"extra":{"metavars":{"$PTR":{"start":{"line":1418,"col":10,"offset":36513},"end":{"line":1418,"col":14,"offset":36517},"abstract_content":"nbuf","propagated_value":{"svalue_start":{"line":1410,"col":16,"offset":36279},"svalue_end":{"line":1410,"col":32,"offset":36295},"svalue_abstract_content":"malloc(xsh_size)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5abfa4209265dbbc41dac84686f49ca1cd28b4bfbf025d4c6f5de7672e60e43af2c1a6cc7c8378487ffffd6ee223bab36a46525394a9859d40714659302288fb_0","lines":"\t\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1432,"col":4,"offset":36780},"end":{"line":1432,"col":15,"offset":36791},"extra":{"metavars":{"$PTR":{"start":{"line":1432,"col":9,"offset":36785},"end":{"line":1432,"col":13,"offset":36789},"abstract_content":"nbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5abfa4209265dbbc41dac84686f49ca1cd28b4bfbf025d4c6f5de7672e60e43af2c1a6cc7c8378487ffffd6ee223bab36a46525394a9859d40714659302288fb_1","lines":"\t\t\tfree(nbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1462,"col":9,"offset":37341},"end":{"line":1462,"col":50,"offset":37382},"extra":{"metavars":{"$FUN":{"start":{"line":1462,"col":9,"offset":37341},"end":{"line":1462,"col":13,"offset":37345},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"52f16d0f4e5f5c12f6f663e53ececcbed59ac987492a849a849a80787b0650c9e2cbfeba27dc91f742dcb7745cc092d925d7b3ba3806c7f0e94f48f307ad8c26_0","lines":"\t\t\t\tif (read(fd, cbuf, CAST(size_t, xcap_sizeof)) !=","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1464,"col":6,"offset":37429},"end":{"line":1464,"col":22,"offset":37445},"extra":{"metavars":{"$FUN":{"start":{"line":1464,"col":6,"offset":37429},"end":{"line":1464,"col":18,"offset":37441},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_7","lines":"\t\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1471,"col":6,"offset":37563},"end":{"line":1471,"col":34,"offset":37591},"extra":{"metavars":{"$FUN":{"start":{"line":1471,"col":6,"offset":37563},"end":{"line":1471,"col":12,"offset":37569},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_10","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1483,"col":6,"offset":37840},"end":{"line":1483,"col":34,"offset":37868},"extra":{"metavars":{"$FUN":{"start":{"line":1483,"col":6,"offset":37840},"end":{"line":1483,"col":12,"offset":37846},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_11","lines":"\t\t\t\t\tmemcpy(&len, p, sizeof(len));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1497,"col":5,"offset":38117},"end":{"line":1497,"col":41,"offset":38153},"extra":{"metavars":{"$FUN":{"start":{"line":1497,"col":5,"offset":38117},"end":{"line":1497,"col":11,"offset":38123},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c9c65e77b4d2d40774abc4c27e4f73ab9f7d4849fc6578144c2910aacec82548319547480fa81679e2ff13e300f47f9182782d7a39ed8f169d99635edcde4ce_12","lines":"\t\t\t\tmemcpy(xcap_addr, cbuf, xcap_sizeof);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1555,"col":5,"offset":39270},"end":{"line":1560,"col":6,"offset":39415},"extra":{"metavars":{"$EXPR1":{"start":{"line":1555,"col":9,"offset":39274},"end":{"line":1555,"col":16,"offset":39281},"abstract_content":"cap_hw1"},"$EXPR2":{"start":{"line":1555,"col":19,"offset":39284},"end":{"line":1555,"col":31,"offset":39296},"abstract_content":"cdp->->cd_mask"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"25fdd32a5c428103728d4b2082c548fdea78ecd2cdc60e450cac7d6d73bb9c2dea7c1f1c43ae4d545328e7e19290f19dc0aba78a3ec519c6c22147681e5364df_0","lines":"\t\t\t\tif (cap_hw1 & cdp->cd_mask) {\n\t\t\t\t\tif (file_printf(ms,\n\t\t\t\t\t    \" %s\", cdp->cd_name) == -1)\n\t\t\t\t\t\treturn -1;\n\t\t\t\t\tcap_hw1 &= ~cdp->cd_mask;\n\t\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1577,"col":3,"offset":39784},"end":{"line":1583,"col":4,"offset":39977},"extra":{"metavars":{"$EXPR1":{"start":{"line":1577,"col":7,"offset":39788},"end":{"line":1577,"col":14,"offset":39795},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1577,"col":17,"offset":39798},"end":{"line":1577,"col":32,"offset":39813},"abstract_content":"SF1_SUNW_FPUSED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65597c766274887ca3e1d2425b3c94ae143fcd9e1261d3b636b920b825848110cf6acd6396fc7cc456f93e116ea91219b26a1b0b04074e472ff04aa038aa9fb4_0","lines":"\t\tif (cap_sf1 & SF1_SUNW_FPUSED) {\n\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1578,"col":4,"offset":39820},"end":{"line":1582,"col":15,"offset":39973},"extra":{"metavars":{"$EXPR1":{"start":{"line":1579,"col":9,"offset":39848},"end":{"line":1579,"col":16,"offset":39855},"abstract_content":"cap_sf1"},"$EXPR2":{"start":{"line":1579,"col":19,"offset":39858},"end":{"line":1579,"col":34,"offset":39873},"abstract_content":"SF1_SUNW_FPKNWN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bc19f086c3d78343a83d8b99c6e4826547338f0d37df20b1588f31795ea7680b4b8e2da8620de71863521d2d015626b1ccf008c45d7036e24f0756e6ea3fcc1d_0","lines":"\t\t\tif (file_printf(ms,\n\t\t\t    (cap_sf1 & SF1_SUNW_FPKNWN)\n\t\t\t    ? \", uses frame pointer\"\n\t\t\t    : \", not known to use frame pointer\") == -1)\n\t\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1628,"col":7,"offset":41039},"end":{"line":1628,"col":43,"offset":41075},"extra":{"metavars":{"$FUN":{"start":{"line":1628,"col":7,"offset":41039},"end":{"line":1628,"col":12,"offset":41044},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_8","lines":"\t\tif (pread(fd, xph_addr, xph_sizeof, off) <","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1630,"col":4,"offset":41116},"end":{"line":1630,"col":20,"offset":41132},"extra":{"metavars":{"$FUN":{"start":{"line":1630,"col":4,"offset":41116},"end":{"line":1630,"col":16,"offset":41128},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_8","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1636,"col":3,"offset":41185},"end":{"line":1636,"col":12,"offset":41194},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1636,"col":3,"offset":41185},"end":{"line":1636,"col":8,"offset":41190},"abstract_content":"align"},"$SIGNED":{"start":{"line":1636,"col":11,"offset":41193},"end":{"line":1636,"col":12,"offset":41194},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"56209e22e4b0180ab81ef1103aeecbe902878b55a8971b41e6aae2e9c9d258a8fb76e021c17ef65a9e42999b68f1db9fcf36f15e8f6fb1b21d37fa3b954ced19_0","lines":"\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1647,"col":4,"offset":41431},"end":{"line":1654,"col":5,"offset":41643},"extra":{"metavars":{"$EXPR1":{"start":{"line":1647,"col":10,"offset":41437},"end":{"line":1647,"col":15,"offset":41442},"abstract_content":"align","propagated_value":{"svalue_start":{"line":1647,"col":18,"offset":41445},"svalue_end":{"line":1647,"col":27,"offset":41454},"svalue_abstract_content":"xph_align"}},"$EXPR2":{"start":{"line":1647,"col":18,"offset":41445},"end":{"line":1647,"col":27,"offset":41454},"abstract_content":"xph_align"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8e6b5f2a847545730e2175e256e19093f91d4bb8db197f41940d98539d9904f365b2acde7afde3807c1b4c8804633ca694f07d21eeb909501257f898171e3ad6_0","lines":"\t\t\tif (((align = xph_align) & 0x80000000UL) != 0 ||\n\t\t\t    align < 4) {\n\t\t\t\tif (file_printf(ms,\n\t\t\t\t    \", invalid note alignment %#lx\",\n\t\t\t\t    CAST(unsigned long, align)) == -1)\n\t\t\t\t\treturn -1;\n\t\t\t\talign = 4;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1653,"col":5,"offset":41628},"end":{"line":1653,"col":14,"offset":41637},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1653,"col":5,"offset":41628},"end":{"line":1653,"col":10,"offset":41633},"abstract_content":"align"},"$SIGNED":{"start":{"line":1653,"col":13,"offset":41636},"end":{"line":1653,"col":14,"offset":41637},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"56209e22e4b0180ab81ef1103aeecbe902878b55a8971b41e6aae2e9c9d258a8fb76e021c17ef65a9e42999b68f1db9fcf36f15e8f6fb1b21d37fa3b954ced19_1","lines":"\t\t\t\talign = 4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1671,"col":14,"offset":41947},"end":{"line":1671,"col":46,"offset":41979},"extra":{"metavars":{"$FUN":{"start":{"line":1671,"col":14,"offset":41947},"end":{"line":1671,"col":19,"offset":41952},"abstract_content":"pread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3492273dca696c30c21bd3495a67c32f71ec6f0e3caa99cceece18b3de5bd64050fedaa1b4cd577b626edf970e36320b8ad4a1bcf421814f4d21fb749f0f2712_9","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1671,"col":14,"offset":41947},"end":{"line":1671,"col":46,"offset":41979},"extra":{"metavars":{"$TYPE":{"start":{"line":1608,"col":2,"offset":40639},"end":{"line":1608,"col":15,"offset":40652},"abstract_content":"unsigned char"},"$LEN":{"start":{"line":1608,"col":21,"offset":40658},"end":{"line":1608,"col":27,"offset":40664},"abstract_content":"BUFSIZ"},"$FUN":{"start":{"line":1671,"col":14,"offset":41947},"end":{"line":1671,"col":19,"offset":41952},"abstract_content":"pread"},"$ARG1":{"start":{"line":1671,"col":20,"offset":41953},"end":{"line":1671,"col":22,"offset":41955},"abstract_content":"fd"},"$BUF":{"start":{"line":1671,"col":24,"offset":41957},"end":{"line":1671,"col":28,"offset":41961},"abstract_content":"nbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"31bbdf438e99d2f452e9daa36a9353a8a1f30f953a81724cdc535619068889e54d99ea6754272a3fcd5f401fe233b6b7e25ec4b99a223aabaee2f498fae1bdf2_0","lines":"\t\t\tbufsize = pread(fd, nbuf, len, xph_offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1673,"col":5,"offset":42009},"end":{"line":1673,"col":21,"offset":42025},"extra":{"metavars":{"$FUN":{"start":{"line":1673,"col":5,"offset":42009},"end":{"line":1673,"col":17,"offset":42021},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_9","lines":"\t\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1677,"col":4,"offset":42059},"end":{"line":1677,"col":11,"offset":42066},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1677,"col":4,"offset":42059},"end":{"line":1677,"col":7,"offset":42062},"abstract_content":"len"},"$SIGNED":{"start":{"line":1677,"col":10,"offset":42065},"end":{"line":1677,"col":11,"offset":42066},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"98a224560ba602dbbc58ba44dd1edbf0e9ce327c17569baa14e24e5c9e2b8fd37a3e04ad0391aea42f8e9a2a656389ff03908b64acf3fd2e4922be4e533892b9_0","lines":"\t\t\tlen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1682,"col":4,"offset":42158},"end":{"line":1682,"col":14,"offset":42168},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1682,"col":4,"offset":42158},"end":{"line":1682,"col":10,"offset":42164},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1682,"col":13,"offset":42167},"end":{"line":1682,"col":14,"offset":42168},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7128488e476dc7d1852540d987823710d0d4f5f1238518cd9c62a0c9e064fdd26f8626768becc78ec6a4e8d14d485af8310749d3f3d58ea83fbf6ae8deb83121_1","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1688,"col":5,"offset":42310},"end":{"line":1689,"col":44,"offset":42390},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1688,"col":5,"offset":42310},"end":{"line":1688,"col":11,"offset":42316},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1689,"col":32,"offset":42378},"end":{"line":1689,"col":37,"offset":42383},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2da8cc4fb17cf5721b4030246c785db5a5ed91a55256e5e8a3fb313ebdae5e10a2b54c1f7e34f27836dfdde76b54392bb55df7277dad86309daa8a63c330b5aa_1","lines":"\t\t\t\toffset = dodynamic(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1700,"col":5,"offset":42581},"end":{"line":1700,"col":47,"offset":42623},"extra":{"metavars":{"$FUN":{"start":{"line":1700,"col":5,"offset":42581},"end":{"line":1700,"col":12,"offset":42588},"abstract_content":"strlcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5cd0172d3c3793e770b8fb80ff9bad119070efc0fb5073109b30b884f4714d6ce0605d06cdacd5f7343957f4e23ac30e4af6bd766d504cd4cfd7000dc44684d7_0","lines":"\t\t\t\tstrlcpy(interp, \"*empty*\", sizeof(interp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1707,"col":4,"offset":42749},"end":{"line":1707,"col":14,"offset":42759},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1707,"col":4,"offset":42749},"end":{"line":1707,"col":10,"offset":42755},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1707,"col":13,"offset":42758},"end":{"line":1707,"col":14,"offset":42759},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7128488e476dc7d1852540d987823710d0d4f5f1238518cd9c62a0c9e064fdd26f8626768becc78ec6a4e8d14d485af8310749d3f3d58ea83fbf6ae8deb83121_2","lines":"\t\t\toffset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1711,"col":5,"offset":42832},"end":{"line":1713,"col":39,"offset":42955},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1711,"col":5,"offset":42832},"end":{"line":1711,"col":11,"offset":42838},"abstract_content":"offset"},"$SIGNED":{"start":{"line":1712,"col":32,"offset":42897},"end":{"line":1712,"col":37,"offset":42902},"abstract_content":"clazz"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2da8cc4fb17cf5721b4030246c785db5a5ed91a55256e5e8a3fb313ebdae5e10a2b54c1f7e34f27836dfdde76b54392bb55df7277dad86309daa8a63c330b5aa_2","lines":"\t\t\t\toffset = donote(ms, nbuf, offset,\n\t\t\t\t    CAST(size_t, bufsize), clazz, swap, align,\n\t\t\t\t    flags, notecount, fd, 0, 0, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1754,"col":2,"offset":43692},"end":{"line":1755,"col":12,"offset":43761},"extra":{"metavars":{"$EXPR1":{"start":{"line":1754,"col":6,"offset":43696},"end":{"line":1754,"col":15,"offset":43705},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1754,"col":19,"offset":43709},"end":{"line":1754,"col":57,"offset":43747},"abstract_content":"MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70f4334b411ee540dd18f1195f3bc2a7b455cf39cca1dd5b9ea0171ff4e726ba5a5e027733449d81c3c16f177d3eb73984aca6217161bfa387af19ead30de873_0","lines":"\tif (ms->flags & (MAGIC_MIME|MAGIC_APPLE|MAGIC_EXTENSION))\n\t\treturn 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1774,"col":3,"offset":44424},"end":{"line":1774,"col":43,"offset":44464},"extra":{"metavars":{"$SIGNED":{"start":{"line":1774,"col":3,"offset":44424},"end":{"line":1774,"col":5,"offset":44426},"abstract_content":"fd"},"$UNSIGNED":{"start":{"line":1774,"col":36,"offset":44457},"end":{"line":1774,"col":42,"offset":44463},"abstract_content":"nbytes"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9474f324e18a5eca46ea24ef519ac837e5048af5f744212b25800f35aacc69df4ecfae8907475e57eb094053e7ffd9f8e038a92a25e2e125f44d7bf805e4b4a9_0","lines":"\t\tfd = file_pipe2file(ms, fd, buf, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1777,"col":3,"offset":44486},"end":{"line":1777,"col":19,"offset":44502},"extra":{"metavars":{"$FUN":{"start":{"line":1777,"col":3,"offset":44486},"end":{"line":1777,"col":15,"offset":44498},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_10","lines":"\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1788,"col":7,"offset":44698},"end":{"line":1788,"col":21,"offset":44712},"extra":{"metavars":{"$FUN":{"start":{"line":1788,"col":7,"offset":44698},"end":{"line":1788,"col":12,"offset":44703},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"67e9292a6d79661494a7cf01a197a11cc23482e922ecd78076070be685fe21c59f08d08b4b6e07fe15e9b0058893e23c9b9da9dacfa004a901a2c6891ddf2799_0","lines":"\t\tif (fstat(fd, &st) == -1) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1789,"col":4,"offset":44725},"end":{"line":1789,"col":20,"offset":44741},"extra":{"metavars":{"$FUN":{"start":{"line":1789,"col":4,"offset":44725},"end":{"line":1789,"col":16,"offset":44737},"abstract_content":"file_badread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e91de37a516919c24a6eb2e4b0391b3f93e84cecdf3ebaa4c242d058122d216e4f0c43da40e446f254a72f54e4e1aea2b90bf2655c75f34f2b61781689fe6feb_11","lines":"\t\t\tfile_badread(ms);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":201,"col":15,"offset":7612},"end":{"line":201,"col":29,"offset":7626},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":201,"col":15,"offset":7612},"end":{"line":201,"col":25,"offset":7622},"abstract_content":"cont_level"},"$SIGNED":{"start":{"line":201,"col":28,"offset":7625},"end":{"line":201,"col":29,"offset":7626},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3a4f4cc68558c471170f0455ddd34589a9e36fa3d386e808af001f1866cec8ca97ea27beed534a6282cee86923c0698492e0902232b0e685329127a654f0a116_0","lines":"\tunsigned int cont_level = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":206,"col":2,"offset":7789},"end":{"line":206,"col":46,"offset":7833},"extra":{"metavars":{"$EXPR1":{"start":{"line":206,"col":15,"offset":7802},"end":{"line":206,"col":39,"offset":7826},"abstract_content":"ms->->flags&MAGIC_NODESC"},"$EXPR2":{"start":{"line":206,"col":44,"offset":7831},"end":{"line":206,"col":45,"offset":7832},"abstract_content":"0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65a92706f47e573b62b8985470d0f042f7283ae1a1597c1e0d12af6c8cb1afa8953db3d61cbd4eae32aaedd5588786ee5a407fd5acf91b664567676e45922934_0","lines":"\tint print = (ms->flags & MAGIC_NODESC) == 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":225,"col":3,"offset":8240},"end":{"line":237,"col":4,"offset":8666},"extra":{"metavars":{"$EXPR1":{"start":{"line":226,"col":14,"offset":8280},"end":{"line":226,"col":28,"offset":8294},"abstract_content":"STRING_BINTEST"},"$EXPR2":{"start":{"line":226,"col":31,"offset":8297},"end":{"line":226,"col":46,"offset":8312},"abstract_content":"STRING_TEXTTEST"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1c4ce44b61faf7c3eef671f457debdb05bd02bce177a4f77a85acb518ccbc3aae0b8ece2b4a94daa090bd1c76f56769e24eb70e3b6563fce11687fb5e17861aa_0","lines":"\t\tif ((IS_STRING(m->type) &&\n#define FLT (STRING_BINTEST | STRING_TEXTTEST)\n\t\t     ((text && (m->str_flags & FLT) == STRING_BINTEST) ||\n\t\t      (!text && (m->str_flags & FLT) == STRING_TEXTTEST))) ||\n\t\t    (m->flag & mode) != mode) {\nflush:\n\t\t\t/* Skip sub-tests */\n\t\t\twhile (magindex < nmagic - 1 &&\n\t\t\t    magic[magindex + 1].cont_level != 0)\n\t\t\t\tmagindex++;\n\t\t\tcont_level = 0;\n\t\t\tcontinue; /* Skip to next top-level test*/\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":235,"col":4,"offset":8601},"end":{"line":235,"col":18,"offset":8615},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":235,"col":4,"offset":8601},"end":{"line":235,"col":14,"offset":8611},"abstract_content":"cont_level"},"$SIGNED":{"start":{"line":235,"col":17,"offset":8614},"end":{"line":235,"col":18,"offset":8615},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3a4f4cc68558c471170f0455ddd34589a9e36fa3d386e808af001f1866cec8ca97ea27beed534a6282cee86923c0698492e0902232b0e685329127a654f0a116_1","lines":"\t\t\tcont_level = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":333,"col":4,"offset":10617},"end":{"line":336,"col":5,"offset":10701},"extra":{"metavars":{"$EXPR1":{"start":{"line":333,"col":8,"offset":10621},"end":{"line":333,"col":15,"offset":10628},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":333,"col":18,"offset":10631},"end":{"line":333,"col":24,"offset":10637},"abstract_content":"OFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"96e1de39ac259cfa1527b72d901ee328020a958ff19ee53a4652e5c5758481fd214edf78e5f69575424356e37cf4fb6409df6084c0b889a735ca2bada5a4d488_0","lines":"\t\t\tif (m->flag & OFFADD) {\n\t\t\t\tms->offset +=\n\t\t\t\t    ms->c.li[cont_level - 1].off;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":366,"col":12,"offset":11335},"end":{"line":366,"col":41,"offset":11364},"extra":{"metavars":{"$VAR":{"start":{"line":366,"col":12,"offset":11335},"end":{"line":366,"col":41,"offset":11364},"abstract_content":"flush 1 magiccheck(ms m)"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9db7c93ee600d87d09d023788b05df69193b44d6a03ab5d53544f63ad212a968180f8f5c9d3fb21ebf8ba229f6e2db0cdc155c734e5919149e750dbed90ea702_0","lines":"\t\t\tswitch (flush ? 1 : magiccheck(ms, m)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":458,"col":3,"offset":13373},"end":{"line":458,"col":17,"offset":13387},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":458,"col":3,"offset":13373},"end":{"line":458,"col":13,"offset":13383},"abstract_content":"cont_level"},"$SIGNED":{"start":{"line":458,"col":16,"offset":13386},"end":{"line":458,"col":17,"offset":13387},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3a4f4cc68558c471170f0455ddd34589a9e36fa3d386e808af001f1866cec8ca97ea27beed534a6282cee86923c0698492e0902232b0e685329127a654f0a116_2","lines":"\t\tcont_level = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":476,"col":8,"offset":13735},"end":{"line":476,"col":39,"offset":13766},"extra":{"metavars":{"$FUN":{"start":{"line":476,"col":8,"offset":13735},"end":{"line":476,"col":20,"offset":13747},"abstract_content":"file_regexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e5d1630e2bc3da3238a1f501b753cda69c728e318f94944644cb29550cdfdc1554e5f3fed61f0969fc5c1aaca0dfb4d2494f1014179cad7415960985e6a5832e_0","lines":"\t\trc = file_regexec(&rx, fmt, 0, 0, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":495,"col":7,"offset":14056},"end":{"line":495,"col":14,"offset":14063},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":495,"col":7,"offset":14056},"end":{"line":495,"col":10,"offset":14059},"abstract_content":"len"},"$SIGNED":{"start":{"line":495,"col":13,"offset":14062},"end":{"line":495,"col":14,"offset":14063},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5a350fa0d63b2da9fc5845442557889174a7bef075211ad861196e6c0677c5405fea39186f7902f256400320ad46bf26691ccff60e20ca0828700248f48d10a3_0","lines":"\tfor (len = 0; len < n && str[len]; len++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":497,"col":14,"offset":14118},"end":{"line":497,"col":29,"offset":14133},"extra":{"metavars":{"$FUN":{"start":{"line":497,"col":14,"offset":14118},"end":{"line":497,"col":20,"offset":14124},"abstract_content":"malloc"},"$X":{"start":{"line":497,"col":21,"offset":14125},"end":{"line":497,"col":24,"offset":14128},"abstract_content":"len"},"$Y":{"start":{"line":497,"col":27,"offset":14131},"end":{"line":497,"col":28,"offset":14132},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5172cc27ad78a3b16b5b47022e80d41afc5ac41a18ac0374e82da5997b3d03f8d3aa4760ebe64a4447abf4f56e8c5ebab36ab14f1e11454aeb95d1ae1f7f777a_0","lines":"\tif ((copy = malloc(len + 1)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":497,"col":14,"offset":14118},"end":{"line":497,"col":29,"offset":14133},"extra":{"metavars":{"$FUN":{"start":{"line":497,"col":14,"offset":14118},"end":{"line":497,"col":20,"offset":14124},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e477016910dbd397f73de9ea8d2a2b39451a48f6802aba44af4359b1e777c827e2ceab3507310b154dd5064ec7c78c1e409b383797db6b7aa93f0435ad18a4fe_0","lines":"\tif ((copy = malloc(len + 1)) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":499,"col":8,"offset":14166},"end":{"line":499,"col":30,"offset":14188},"extra":{"metavars":{"$FUN":{"start":{"line":499,"col":8,"offset":14166},"end":{"line":499,"col":14,"offset":14172},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_0","lines":"\t(void)memcpy(copy, str, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":512,"col":20,"offset":14468},"end":{"line":512,"col":30,"offset":14478},"extra":{"metavars":{"$TYPE":{"start":{"line":508,"col":8,"offset":14344},"end":{"line":508,"col":12,"offset":14348},"abstract_content":"char"},"$PTR2":{"start":{"line":512,"col":20,"offset":14468},"end":{"line":512,"col":23,"offset":14471},"abstract_content":"ptr","propagated_value":{"svalue_start":{"line":511,"col":26,"offset":14417},"svalue_end":{"line":511,"col":44,"offset":14435},"svalue_abstract_content":"strstr(sptr\"${\")"}},"$PTR1":{"start":{"line":512,"col":26,"offset":14474},"end":{"line":512,"col":30,"offset":14478},"abstract_content":"sptr"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"803a85a64b076aedab9b1acd7943fa1637f9cdd328fe353bde13acec151644f15edcd922492f7d3437ec484bbd668282754f07d408ff75bfdd0192922bf6c4c7_0","lines":"\t\tl = CAST(size_t, ptr - sptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":515,"col":3,"offset":14513},"end":{"line":515,"col":23,"offset":14533},"extra":{"metavars":{"$FUN":{"start":{"line":515,"col":3,"offset":14513},"end":{"line":515,"col":9,"offset":14519},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_1","lines":"\t\tmemcpy(buf, sptr, l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":531,"col":4,"offset":14837},"end":{"line":537,"col":5,"offset":14934},"extra":{"metavars":{"$EXPR1":{"start":{"line":531,"col":8,"offset":14841},"end":{"line":531,"col":16,"offset":14849},"abstract_content":"ms->->mode"},"$EXPR2":{"start":{"line":531,"col":19,"offset":14852},"end":{"line":531,"col":23,"offset":14856},"abstract_content":"0111"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"daade14f81e9a60c668f73dfa35a1ca43c325941a9d65b11fea00c98af030524af11f0df8cfa8b2c3dbef2a857614c96f3d4d52ed656ea9d7fef79064e9e4af0_0","lines":"\t\t\tif (ms->mode & 0111) {\n\t\t\t\tptr = t;\n\t\t\t\tl = et - t;\n\t\t\t} else {\n\t\t\t\tptr = e;\n\t\t\t\tl = ee - e;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":533,"col":9,"offset":14881},"end":{"line":533,"col":15,"offset":14887},"extra":{"metavars":{"$PTR1":{"start":{"line":533,"col":9,"offset":14881},"end":{"line":533,"col":11,"offset":14883},"abstract_content":"et"},"$PTR2":{"start":{"line":533,"col":14,"offset":14886},"end":{"line":533,"col":15,"offset":14887},"abstract_content":"t"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"38289cb0873676e78a2df48e2e5e3d9d68f49d82a97a8072ca6f0f86a915b1850f507aec205a4af9e42bbfd63d42b554ebb3cd2e7f1bf67a9f331e7b6952a25c_0","lines":"\t\t\t\tl = et - t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":536,"col":9,"offset":14922},"end":{"line":536,"col":15,"offset":14928},"extra":{"metavars":{"$PTR1":{"start":{"line":536,"col":9,"offset":14922},"end":{"line":536,"col":11,"offset":14924},"abstract_content":"ee"},"$PTR2":{"start":{"line":536,"col":14,"offset":14927},"end":{"line":536,"col":15,"offset":14928},"abstract_content":"e"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4d2c8f7dd2b0bb66d5285f09cd9ae5fd47cc47a0998fe0b0b38f23bee37a0d24b00a1150c32465d5cfcbe212c24afa3ee6170d82e270b7664e169db6f2a33e09_0","lines":"\t\t\t\tl = ee - e;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":544,"col":3,"offset":15006},"end":{"line":544,"col":22,"offset":15025},"extra":{"metavars":{"$FUN":{"start":{"line":544,"col":3,"offset":15006},"end":{"line":544,"col":9,"offset":15012},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_2","lines":"\t\tmemcpy(buf, ptr, l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":554,"col":2,"offset":15121},"end":{"line":554,"col":22,"offset":15141},"extra":{"metavars":{"$FUN":{"start":{"line":554,"col":2,"offset":15121},"end":{"line":554,"col":8,"offset":15127},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_3","lines":"\tmemcpy(buf, sptr, l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":583,"col":10,"offset":15661},"end":{"line":584,"col":31,"offset":15724},"extra":{"metavars":{"$FUN":{"start":{"line":583,"col":10,"offset":15661},"end":{"line":583,"col":18,"offset":15669},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_0","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%d\",\n\t\t\t    CAST(unsigned char, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":605,"col":10,"offset":16161},"end":{"line":606,"col":32,"offset":16225},"extra":{"metavars":{"$FUN":{"start":{"line":605,"col":10,"offset":16161},"end":{"line":605,"col":18,"offset":16169},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_1","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%u\",\n\t\t\t    CAST(unsigned short, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":628,"col":10,"offset":16682},"end":{"line":629,"col":26,"offset":16740},"extra":{"metavars":{"$FUN":{"start":{"line":628,"col":10,"offset":16682},"end":{"line":628,"col":18,"offset":16690},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_2","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%u\",\n\t\t\t    CAST(uint32_t, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":650,"col":10,"offset":17158},"end":{"line":651,"col":36,"offset":17244},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_0","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%\" INT64_T_FORMAT \"u\",\n\t\t\t    CAST(unsigned long long, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":650,"col":10,"offset":17158},"end":{"line":651,"col":36,"offset":17244},"extra":{"metavars":{"$FUN":{"start":{"line":650,"col":10,"offset":17158},"end":{"line":650,"col":18,"offset":17166},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_3","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%\" INT64_T_FORMAT \"u\",\n\t\t\t    CAST(unsigned long long, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":650,"col":10,"offset":17158},"end":{"line":651,"col":36,"offset":17244},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":15,"offset":14},"abstract_content":"INT64_T_FORMAT"},"$TYPE":{"start":{"line":567,"col":3,"offset":15292},"end":{"line":567,"col":7,"offset":15296},"abstract_content":"char"},"$LEN":{"start":{"line":567,"col":12,"offset":15301},"end":{"line":567,"col":15,"offset":15304},"abstract_content":"128"},"$FUN":{"start":{"line":650,"col":10,"offset":17158},"end":{"line":650,"col":18,"offset":17166},"abstract_content":"snprintf"},"$BUF":{"start":{"line":650,"col":19,"offset":17167},"end":{"line":650,"col":22,"offset":17170},"abstract_content":"buf"},"$N":{"start":{"line":650,"col":24,"offset":17172},"end":{"line":650,"col":34,"offset":17182},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":650,"col":41,"offset":17189},"end":{"line":650,"col":59,"offset":17207},"abstract_content":"INT64_T_FORMAT\"u\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"0a62ab0d547ca5e92f15b1a05c6afef44363e9895a12831dfa345af5273316d2f8b87e4e4d6727cc0753c79c06f0f75246577c927ebbcdd708f695862af87a7b_0","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%\" INT64_T_FORMAT \"u\",\n\t\t\t    CAST(unsigned long long, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":684,"col":4,"offset":18015},"end":{"line":695,"col":5,"offset":18268},"extra":{"metavars":{"$EXPR1":{"start":{"line":684,"col":8,"offset":18019},"end":{"line":684,"col":20,"offset":18031},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":684,"col":23,"offset":18034},"end":{"line":684,"col":34,"offset":18045},"abstract_content":"STRING_TRIM"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a7ffe41845845c5abdb0fa2c487a27d6cf108ce808274af14654fe36a916c56663df6de50e9ff08f468b961909adb0162a2e272880c3a6b3eab2cc0f8b824d2_0","lines":"\t\t\tif (m->str_flags & STRING_TRIM) {\n\t\t\t\tchar *last;\n\t\t\t\twhile (isspace(CAST(unsigned char, *str)))\n\t\t\t\t\tstr++;\n\t\t\t\tlast = str;\n\t\t\t\twhile (*last)\n\t\t\t\t\tlast++;\n\t\t\t\t--last;\n\t\t\t\twhile (isspace(CAST(unsigned char, *last)))\n\t\t\t\t\tlast--;\n\t\t\t\t*++last = '\\0';\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":762,"col":10,"offset":19735},"end":{"line":762,"col":46,"offset":19771},"extra":{"metavars":{"$FUN":{"start":{"line":762,"col":10,"offset":19735},"end":{"line":762,"col":18,"offset":19743},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_4","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%g\", vf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":782,"col":10,"offset":20142},"end":{"line":782,"col":46,"offset":20178},"extra":{"metavars":{"$FUN":{"start":{"line":782,"col":10,"offset":20142},"end":{"line":782,"col":18,"offset":20150},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5da10b38e6ab4d4d4dcfdd553feea055fef85d3ce7e6e893cd69826ca45de71cf59bc94f39f1538319bf5ba6a03e747e6b21c9c3cbbd6abc4f69e9e584a8a237_5","lines":"\t\t\t(void)snprintf(buf, sizeof(buf), \"%g\", vd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":812,"col":3,"offset":20773},"end":{"line":815,"col":46,"offset":20892},"extra":{"metavars":{"$EXPR1":{"start":{"line":812,"col":8,"offset":20778},"end":{"line":812,"col":20,"offset":20790},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":812,"col":23,"offset":20793},"end":{"line":812,"col":41,"offset":20811},"abstract_content":"REGEX_OFFSET_START"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a7ee74564902f4e4af767372066f6fc75cfdb78b4a173affaede05b3e0868e3ab0d063f20d61f18f50d31de2a6cb0aa2b3642487141350ad49a4942c323035a1_0","lines":"\t\tif ((m->str_flags & REGEX_OFFSET_START))\n\t\t\tt = ms->search.offset;\n\t\telse\n\t\t\tt = ms->search.offset + ms->search.rm_len;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1298,"col":9,"offset":30764},"end":{"line":1298,"col":71,"offset":30826},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_1","lines":"\t(void) fprintf(stderr, \"mget/%\" SIZE_T_FORMAT \"u @%d: \", len, offset);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1313,"col":11,"offset":31227},"end":{"line":1313,"col":15,"offset":31231},"extra":{"metavars":{"$VAR":{"start":{"line":1313,"col":11,"offset":31227},"end":{"line":1313,"col":15,"offset":31231},"abstract_content":"type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c1dd88fd4c98d8990b3a7f94affefe2493df46763d2814a1e47ac3c92bfb2f9fb5dfd80c5c77acb443384c465aab3e6356647f88e33f8fea9b9fc67b5a086620_0","lines":"\t\tswitch (type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1337,"col":4,"offset":31791},"end":{"line":1343,"col":5,"offset":31947},"extra":{"metavars":{"$EXPR1":{"start":{"line":1337,"col":8,"offset":31795},"end":{"line":1337,"col":20,"offset":31807},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":1337,"col":23,"offset":31810},"end":{"line":1337,"col":39,"offset":31826},"abstract_content":"REGEX_LINE_COUNT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c7ba7bbbc783cd58545be797db7b26f46587b463930c372bebe04d0860f03f9a2ff6cddaf9eb6d5cb149a17aed49a37842abb8cb3639304be0af7cae898a52b_0","lines":"\t\t\tif (m->str_flags & REGEX_LINE_COUNT) {\n\t\t\t\tlinecnt = m->str_range;\n\t\t\t\tbytecnt = linecnt * 80;\n\t\t\t} else {\n\t\t\t\tlinecnt = 0;\n\t\t\t\tbytecnt = m->str_range;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1339,"col":5,"offset":31862},"end":{"line":1339,"col":27,"offset":31884},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1339,"col":5,"offset":31862},"end":{"line":1339,"col":12,"offset":31869},"abstract_content":"bytecnt"},"$SIGNED":{"start":{"line":1339,"col":25,"offset":31882},"end":{"line":1339,"col":27,"offset":31884},"abstract_content":"80"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ecb840b5bb3f34074ad43056fbced823c0b0e2133c9cddff344fb2f438389ed7821bc2156bd1e10324acd50b396f31a8d56e62fe0f38eb2b0b95387493a6c1d1_0","lines":"\t\t\t\tbytecnt = linecnt * 80;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1341,"col":5,"offset":31902},"end":{"line":1341,"col":16,"offset":31913},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1341,"col":5,"offset":31902},"end":{"line":1341,"col":12,"offset":31909},"abstract_content":"linecnt"},"$SIGNED":{"start":{"line":1341,"col":15,"offset":31912},"end":{"line":1341,"col":16,"offset":31913},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5c8781295ed5f32371f2f68e18804e0a9e9d4cf4c49ecb9535d5ede0f1bef2aef0ec12956a6f8f448ae81dd7baa2e5d8ac193a5bd6371dfc86c4dc43da72e588_0","lines":"\t\t\t\tlinecnt = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1355,"col":40,"offset":32358},"end":{"line":1355,"col":47,"offset":32365},"extra":{"metavars":{"$PTR1":{"start":{"line":1355,"col":40,"offset":32358},"end":{"line":1355,"col":43,"offset":32361},"abstract_content":"end"},"$PTR2":{"start":{"line":1355,"col":46,"offset":32364},"end":{"line":1355,"col":47,"offset":32365},"abstract_content":"b"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f532b0d2302b5e3b66984597657d8c195dabd94bdb13a87cd59d59f5b6df6837384f869e93e170d8633f732febc40808ab49a8e6e88506d1f5916ff3ecac13ba_0","lines":"\t\t\t\t memchr(c = b, '\\n', CAST(size_t, (end - b)))))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1357,"col":36,"offset":32441},"end":{"line":1357,"col":43,"offset":32448},"extra":{"metavars":{"$PTR1":{"start":{"line":1357,"col":36,"offset":32441},"end":{"line":1357,"col":39,"offset":32444},"abstract_content":"end"},"$PTR2":{"start":{"line":1357,"col":42,"offset":32447},"end":{"line":1357,"col":43,"offset":32448},"abstract_content":"c"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3a146e48327532ff6039f1685ebe39c72b05ae01815cce03d233b4ddd9787b8326047fcc2544043f4389d9b2c038764e36d66472533512476a7dba402492e7a2_0","lines":"\t\t\t\t memchr(c, '\\r', CAST(size_t, (end - c))))));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1369,"col":23,"offset":32685},"end":{"line":1369,"col":33,"offset":32695},"extra":{"metavars":{"$TYPE":{"start":{"line":1326,"col":10,"offset":31534},"end":{"line":1326,"col":14,"offset":31538},"abstract_content":"char"},"$PTR1":{"start":{"line":1369,"col":23,"offset":32685},"end":{"line":1369,"col":27,"offset":32689},"abstract_content":"last"},"$PTR2":{"start":{"line":1369,"col":30,"offset":32692},"end":{"line":1369,"col":33,"offset":32695},"abstract_content":"buf"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9cbcdf5ae54bb50928e86a3915c8d95cfcfe474711881610a99f20e16798832788e2f179292827adabdd60a223015cae6eeefa00f62490222aa48a3cb8d23cf_0","lines":"\t\t\tms->search.s_len = last - buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1419,"col":8,"offset":33737},"end":{"line":1419,"col":37,"offset":33766},"extra":{"metavars":{"$FUN":{"start":{"line":1419,"col":8,"offset":33737},"end":{"line":1419,"col":14,"offset":33743},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_4","lines":"\t(void)memcpy(p, s + offset, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1436,"col":11,"offset":34106},"end":{"line":1436,"col":35,"offset":34130},"extra":{"metavars":{"$VAR":{"start":{"line":1436,"col":11,"offset":34106},"end":{"line":1436,"col":35,"offset":34130},"abstract_content":"m->->in_op&FILE_OPS_MASK"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e6b6d352f6469dc580140e465b5b99161066dd884f429e532e6c51669bfee15a78e5c9e97cc35c0b277b58a394804defa592e8decbb449c740b793dd1c2ad6d7_0","lines":"\t\tswitch (m->in_op & FILE_OPS_MASK) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1464,"col":2,"offset":34591},"end":{"line":1465,"col":20,"offset":34641},"extra":{"metavars":{"$EXPR1":{"start":{"line":1464,"col":6,"offset":34595},"end":{"line":1464,"col":14,"offset":34603},"abstract_content":"m->->in_op"},"$EXPR2":{"start":{"line":1464,"col":17,"offset":34606},"end":{"line":1464,"col":31,"offset":34620},"abstract_content":"FILE_OPINVERSE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ce4db88be25a2a063ae846793abc3be1630ea0d8d3cbeb91fe0af8938ecb085a588d9d9822fdfefc3d0a327c749bef055a307e567ec3f04dda53ec392ac72830_0","lines":"\tif (m->in_op & FILE_OPINVERSE)\n\t\toffset = ~offset;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1476,"col":4,"offset":34873},"end":{"line":1477,"col":17,"offset":34925},"extra":{"metavars":{"$EXPR1":{"start":{"line":1476,"col":8,"offset":34877},"end":{"line":1476,"col":15,"offset":34884},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1476,"col":19,"offset":34888},"end":{"line":1476,"col":37,"offset":34906},"abstract_content":"OFFADD|INDIROFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"919bd7947223e76ea3167d93e6b72edaef06784d39f3d65f8ca27de255371102760df514a594db506dd721037d7dbdc35d1115b061a6b660eeef3fe54f9e33e2_0","lines":"\t\t\tif (m->flag & (OFFADD|INDIROFFADD))\n\t\t\t\tgoto normal;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1508,"col":3,"offset":35694},"end":{"line":1511,"col":29,"offset":35879},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_2","lines":"\t\tfprintf(stderr, \"bb=[%p,%\" SIZE_T_FORMAT \"u], %d [b=%p,%\"\n\t\t    SIZE_T_FORMAT \"u], [o=%#x, c=%d]\\n\",\n\t\t    bb->fbuf, bb->flen, ms->offset, b->fbuf, b->flen,\n\t\t    m->offset, cont_level);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1546,"col":2,"offset":36672},"end":{"line":1548,"col":13,"offset":36797},"extra":{"metavars":{"$EXPR1":{"start":{"line":1546,"col":28,"offset":36698},"end":{"line":1546,"col":35,"offset":36705},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1546,"col":38,"offset":36708},"end":{"line":1546,"col":43,"offset":36713},"abstract_content":"INDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c67d6313d5cebda14ecee4304f05f930c8c93b07e15b818b8edcb538a7d1855b540e029fa9884ee234369e16605ff92959db747b8f641f2e6a61d7b70e4ed8b_0","lines":"\tif (mcopy(ms, p, m->type, m->flag & INDIR, s,\n\t    CAST(uint32_t, offset + o), CAST(uint32_t, nbytes), m) == -1)\n\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1551,"col":3,"offset":36840},"end":{"line":1555,"col":33,"offset":37053},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_3","lines":"\t\tfprintf(stderr, \"mget(type=%d, flag=%#x, offset=%u, o=%\"\n\t\t    SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT\n\t\t    \"u, il=%hu, nc=%hu)\\n\",\n\t\t    m->type, m->flag, offset, o, nbytes,\n\t\t    *indir_count, *name_count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1563,"col":2,"offset":37187},"end":{"line":1713,"col":3,"offset":41038},"extra":{"metavars":{"$EXPR1":{"start":{"line":1563,"col":6,"offset":37191},"end":{"line":1563,"col":13,"offset":37198},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1563,"col":16,"offset":37201},"end":{"line":1563,"col":21,"offset":37206},"abstract_content":"INDIR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2c67d6313d5cebda14ecee4304f05f930c8c93b07e15b818b8edcb538a7d1855b540e029fa9884ee234369e16605ff92959db747b8f641f2e6a61d7b70e4ed8b_1","lines":"\tif (m->flag & INDIR) {\n\t\tintmax_t off = m->in_offset;\n\t\tconst int sgn = m->in_op & FILE_OPSIGNED;\n\t\tif (m->in_op & FILE_OPINDIRECT) {\n\t\t\tconst union VALUETYPE *q = CAST(const union VALUETYPE *,\n\t\t\t    RCAST(const void *, s + offset + off));\n\t\t\tswitch (cvt_flip(m->in_type, flip)) {\n\t\t\tcase FILE_BYTE:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 1))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,8,q->b);\n\t\t\t\tbreak;\n\t\t\tcase FILE_SHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,q->h);\n\t\t\t\tbreak;\n\t\t\tcase FILE_BESHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,BE16(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LESHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,LE16(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,q->l);\n\t\t\t\tbreak;\n\t\t\tcase FILE_BELONG:\n\t\t\tcase FILE_BEID3:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,BE32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LEID3:\n\t\t\tcase FILE_LELONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,LE32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_MELONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,ME32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_BEQUAD:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 8))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,64,BE64(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LEQUAD:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 8))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,64,LE64(q));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tabort();\n\t\t\t}\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\tfprintf(stderr, \"indirect offs=%jd\\n\", off);\n\t\t}\n\t\tswitch (in_type = cvt_flip(m->in_type, flip)) {\n\t\tcase FILE_BYTE:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 1))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,8,p->b), off);\n\t\t\tbreak;\n\t\tcase FILE_BESHORT:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 2))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,16,BE16(p)), off);\n\t\t\tbreak;\n\t\tcase FILE_LESHORT:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 2))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,16,LE16(p)), off);\n\t\t\tbreak;\n\t\tcase FILE_SHORT:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 2))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,16,p->h), off);\n\t\t\tbreak;\n\t\tcase FILE_BELONG:\n\t\tcase FILE_BEID3:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 4))\n\t\t\t\treturn 0;\n\t\t\tlhs = BE32(p);\n\t\t\tif (in_type == FILE_BEID3)\n\t\t\t\tlhs = cvt_id3(ms, CAST(uint32_t, lhs));\n\t\t\toffset = do_ops(m, SEXT(sgn,32,lhs), off);\n\t\t\tbreak;\n\t\tcase FILE_LELONG:\n\t\tcase FILE_LEID3:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 4))\n\t\t\t\treturn 0;\n\t\t\tlhs = LE32(p);\n\t\t\tif (in_type == FILE_LEID3)\n\t\t\t\tlhs = cvt_id3(ms, CAST(uint32_t, lhs));\n\t\t\toffset = do_ops(m, SEXT(sgn,32,lhs), off);\n\t\t\tbreak;\n\t\tcase FILE_MELONG:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 4))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,32,ME32(p)), off);\n\t\t\tbreak;\n\t\tcase FILE_LONG:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 4))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,32,p->l), off);\n\t\t\tbreak;\n\t\tcase FILE_LEQUAD:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 8))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,64,LE64(p)), off);\n\t\t\tbreak;\n\t\tcase FILE_BEQUAD:\n\t\t\tif (OFFSET_OOB(nbytes, offset, 8))\n\t\t\t\treturn 0;\n\t\t\toffset = do_ops(m, SEXT(sgn,64,BE64(p)), off);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tabort();\n\t\t}\n\n\t\tif (m->flag & INDIROFFADD) {\n\t\t\toffset += ms->c.li[cont_level-1].off;\n\t\t\tif (offset == 0) {\n\t\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t    \"indirect *zero* offset\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\tfprintf(stderr, \"indirect +offs=%u\\n\", offset);\n\t\t}\n\t\tif (mcopy(ms, p, m->type, 0, s, offset, nbytes, m) == -1)\n\t\t\treturn -1;\n\t\tms->offset = offset;\n\n\t\tif ((ms->flags & MAGIC_DEBUG) != 0) {\n\t\t\tmdebug(offset, RCAST(char *, RCAST(void *, p)),\n\t\t\t    sizeof(union VALUETYPE));\n#ifndef COMPILE_ONLY\n\t\t\tfile_mdump(m);\n#endif\n\t\t}\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1566,"col":3,"offset":37287},"end":{"line":1627,"col":4,"offset":38857},"extra":{"metavars":{"$EXPR1":{"start":{"line":1566,"col":7,"offset":37291},"end":{"line":1566,"col":15,"offset":37299},"abstract_content":"m->->in_op"},"$EXPR2":{"start":{"line":1566,"col":18,"offset":37302},"end":{"line":1566,"col":33,"offset":37317},"abstract_content":"FILE_OPINDIRECT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cab0c7d38f884bed9fd8cd5e22cc4a6865f51a1dd18a84918d02bd2af8a1bf4497c9ab050952c474a9e1c8463a3b4b6f7e4eb48111246ce8556bf7f5689b722b_0","lines":"\t\tif (m->in_op & FILE_OPINDIRECT) {\n\t\t\tconst union VALUETYPE *q = CAST(const union VALUETYPE *,\n\t\t\t    RCAST(const void *, s + offset + off));\n\t\t\tswitch (cvt_flip(m->in_type, flip)) {\n\t\t\tcase FILE_BYTE:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 1))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,8,q->b);\n\t\t\t\tbreak;\n\t\t\tcase FILE_SHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,q->h);\n\t\t\t\tbreak;\n\t\t\tcase FILE_BESHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,BE16(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LESHORT:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 2))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,16,LE16(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,q->l);\n\t\t\t\tbreak;\n\t\t\tcase FILE_BELONG:\n\t\t\tcase FILE_BEID3:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,BE32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LEID3:\n\t\t\tcase FILE_LELONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,LE32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_MELONG:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 4))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,32,ME32(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_BEQUAD:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 8))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,64,BE64(q));\n\t\t\t\tbreak;\n\t\t\tcase FILE_LEQUAD:\n\t\t\t\tif (OFFSET_OOB(nbytes, offset + off, 8))\n\t\t\t\t\treturn 0;\n\t\t\t\toff = SEXT(sgn,64,LE64(q));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tabort();\n\t\t\t}\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\tfprintf(stderr, \"indirect offs=%jd\\n\", off);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1691,"col":3,"offset":40459},"end":{"line":1701,"col":4,"offset":40763},"extra":{"metavars":{"$EXPR1":{"start":{"line":1691,"col":7,"offset":40463},"end":{"line":1691,"col":14,"offset":40470},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1691,"col":17,"offset":40473},"end":{"line":1691,"col":28,"offset":40484},"abstract_content":"INDIROFFADD"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"05fcc6b0e46390ee888fb87ce491413aaa7b23a251a0d1344e3c52c17320424d43da12f303058a7e556531238f1cf4b4906c96183ee0b6fbb7c64c1b2c0ecbca_0","lines":"\t\tif (m->flag & INDIROFFADD) {\n\t\t\toffset += ms->c.li[cont_level-1].off;\n\t\t\tif (offset == 0) {\n\t\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t    \"indirect *zero* offset\\n\");\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\tfprintf(stderr, \"indirect +offs=%u\\n\", offset);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1716,"col":10,"offset":41103},"end":{"line":1716,"col":17,"offset":41110},"extra":{"metavars":{"$VAR":{"start":{"line":1716,"col":10,"offset":41103},"end":{"line":1716,"col":17,"offset":41110},"abstract_content":"m->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"008a1ec088959223b69a0dcb96aa0fca060709e145b163f49879fae3917ff38577815b508bfc9ca38a5588052478eeb5c9e88fabd0de97b041db1dbc136264b0_0","lines":"\tswitch (m->type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1768,"col":3,"offset":41987},"end":{"line":1769,"col":32,"offset":42056},"extra":{"metavars":{"$EXPR1":{"start":{"line":1768,"col":7,"offset":41991},"end":{"line":1768,"col":19,"offset":42003},"abstract_content":"m->->str_flags"},"$EXPR2":{"start":{"line":1768,"col":22,"offset":42006},"end":{"line":1768,"col":39,"offset":42023},"abstract_content":"INDIRECT_RELATIVE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57d8c1b818b72dc8b643e2ef922ff1c32b02941ed85dbfffa305479ee8089b0930b2adcbc395789e9686f8d71299cb1f9a392d0fbfeaf62c648b96aa250c763c_0","lines":"\t\tif (m->str_flags & INDIRECT_RELATIVE)\n\t\t\toffset += CAST(uint32_t, o);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1790,"col":3,"offset":42482},"end":{"line":1791,"col":14,"offset":42548},"extra":{"metavars":{"$EXPR1":{"start":{"line":1790,"col":23,"offset":42502},"end":{"line":1790,"col":38,"offset":42517},"abstract_content":"ms->->event_flags"},"$EXPR2":{"start":{"line":1790,"col":41,"offset":42520},"end":{"line":1790,"col":54,"offset":42533},"abstract_content":"EVENT_HAD_ERR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c0ada50905834692f7c7d21963381b87aced9b5047e977b7a2142eb65eb6740e9e8b858dbeb2643d6849932008434433696753947b795e3c72709247244cbcb6_0","lines":"\t\tif (rbuf == NULL && ms->event_flags & EVENT_HAD_ERR)\n\t\t\treturn -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1797,"col":5,"offset":42678},"end":{"line":1797,"col":16,"offset":42689},"extra":{"metavars":{"$PTR":{"start":{"line":1797,"col":10,"offset":42683},"end":{"line":1797,"col":14,"offset":42687},"abstract_content":"rbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635451871400e612fbbc25c2e540311d92e9ac50173006c21cb7508f25469741d1659a30414735c1813ef1ba476f183ff6a4fae376f59e688a115740faffdaf4_0","lines":"\t\t\t\tfree(rbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1801,"col":5,"offset":42758},"end":{"line":1801,"col":16,"offset":42769},"extra":{"metavars":{"$PTR":{"start":{"line":1801,"col":10,"offset":42763},"end":{"line":1801,"col":14,"offset":42767},"abstract_content":"rbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635451871400e612fbbc25c2e540311d92e9ac50173006c21cb7508f25469741d1659a30414735c1813ef1ba476f183ff6a4fae376f59e688a115740faffdaf4_1","lines":"\t\t\t\tfree(rbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1805,"col":3,"offset":42796},"end":{"line":1805,"col":14,"offset":42807},"extra":{"metavars":{"$PTR":{"start":{"line":1805,"col":8,"offset":42801},"end":{"line":1805,"col":12,"offset":42805},"abstract_content":"rbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635451871400e612fbbc25c2e540311d92e9ac50173006c21cb7508f25469741d1659a30414735c1813ef1ba476f183ff6a4fae376f59e688a115740faffdaf4_2","lines":"\t\tfree(rbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1822,"col":3,"offset":43124},"end":{"line":1823,"col":24,"offset":43170},"extra":{"metavars":{"$EXPR1":{"start":{"line":1822,"col":7,"offset":43128},"end":{"line":1822,"col":14,"offset":43135},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":1822,"col":17,"offset":43138},"end":{"line":1822,"col":24,"offset":43145},"abstract_content":"NOSPACE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b478d07b72768f802008ec7740fc6d9c3b5e56249206ab9ebba74da5671b1dd67c06b9f91fc8c4a04c15881ccfb81bc79903e33fc526627bddc85e122ee5fb2e_0","lines":"\t\tif (m->flag & NOSPACE)\n\t\t\t*need_separator = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1824,"col":3,"offset":43173},"end":{"line":1826,"col":65,"offset":43337},"extra":{"metavars":{"$SIGNED":{"start":{"line":1824,"col":3,"offset":43173},"end":{"line":1824,"col":5,"offset":43175},"abstract_content":"rv"},"$UNSIGNED":{"start":{"line":1824,"col":51,"offset":43221},"end":{"line":1824,"col":52,"offset":43222},"abstract_content":"o"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"157bd6b8cde456c3199578409676896a9f85abee394590d6d15d0a8fa8da1e9888fe5c8daf240200cc9d67101c3a5a43bf90527b5c815f6f1fe823713077bff2_0","lines":"\t\trv = match(ms, ml.magic, ml.nmagic, b, offset + o,\n\t\t    mode, text, flip, indir_count, name_count,\n\t\t    printed_something, need_separator, returnval, found_match);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1833,"col":3,"offset":43447},"end":{"line":1834,"col":13,"offset":43489},"extra":{"metavars":{"$EXPR1":{"start":{"line":1833,"col":7,"offset":43451},"end":{"line":1833,"col":16,"offset":43460},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":1833,"col":19,"offset":43463},"end":{"line":1833,"col":31,"offset":43475},"abstract_content":"MAGIC_NODESC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b58181a7200d954cd5b6ae331073dfc013b85700ad3da3b5cfd7f7c95c51e0e40db81bfb0771670a7611c2b799eaadcbb3fe4d41e10ea99f14543d77d82c308f_0","lines":"\t\tif (ms->flags & MAGIC_NODESC)\n\t\t\treturn 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1879,"col":4,"offset":44498},"end":{"line":1911,"col":5,"offset":45185},"extra":{"metavars":{"$EXPR1":{"start":{"line":1879,"col":9,"offset":44503},"end":{"line":1879,"col":14,"offset":44508},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1879,"col":17,"offset":44511},"end":{"line":1879,"col":40,"offset":44534},"abstract_content":"STRING_IGNORE_LOWERCASE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6a8b4864e018f1b8a772f5a32156f00ae9e4e5cd0dc4f05a516273387cada0d9adaa6797fb37522f3ae9b7d19e8fb009bf5c25812141cb8004a5e6e4cc7a5ed6_0","lines":"\t\t\tif ((flags & STRING_IGNORE_LOWERCASE) &&\n\t\t\t    islower(*a)) {\n\t\t\t\tif ((v = tolower(*b++) - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if ((flags & STRING_IGNORE_UPPERCASE) &&\n\t\t\t    isupper(*a)) {\n\t\t\t\tif ((v = toupper(*b++) - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if ((flags & STRING_COMPACT_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\tif (isspace(*b++)) {\n\t\t\t\t\tif (!isspace(*a))\n\t\t\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((flags & STRING_COMPACT_OPTIONAL_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\tb++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ((v = *b++ - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1884,"col":9,"offset":44630},"end":{"line":1911,"col":5,"offset":45185},"extra":{"metavars":{"$EXPR1":{"start":{"line":1884,"col":14,"offset":44635},"end":{"line":1884,"col":19,"offset":44640},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1884,"col":22,"offset":44643},"end":{"line":1884,"col":45,"offset":44666},"abstract_content":"STRING_IGNORE_UPPERCASE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4de283e3e95bc32bed6110b586f3f309bae4b92b5182d547c913300af24c5a14cca2d4e45d7126954f31e309672350f1710dd37c04c3b08aff1e57636bf3367_0","lines":"\t\t\telse if ((flags & STRING_IGNORE_UPPERCASE) &&\n\t\t\t    isupper(*a)) {\n\t\t\t\tif ((v = toupper(*b++) - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse if ((flags & STRING_COMPACT_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\tif (isspace(*b++)) {\n\t\t\t\t\tif (!isspace(*a))\n\t\t\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((flags & STRING_COMPACT_OPTIONAL_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\tb++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ((v = *b++ - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1889,"col":9,"offset":44762},"end":{"line":1911,"col":5,"offset":45185},"extra":{"metavars":{"$EXPR1":{"start":{"line":1889,"col":14,"offset":44767},"end":{"line":1889,"col":19,"offset":44772},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1889,"col":22,"offset":44775},"end":{"line":1889,"col":47,"offset":44800},"abstract_content":"STRING_COMPACT_WHITESPACE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d7fad4f12727e79232e6f130890d8f5efb0d9d53c4ad09f02f50386390f148e156c0a91254a0e13459ba1caa99c3d8121a16c4846b446bef5ae3cd615ee2da93_0","lines":"\t\t\telse if ((flags & STRING_COMPACT_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\tif (isspace(*b++)) {\n\t\t\t\t\tif (!isspace(*a))\n\t\t\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\t\t\tb++;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tv = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ((flags & STRING_COMPACT_OPTIONAL_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\tb++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ((v = *b++ - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1902,"col":9,"offset":44992},"end":{"line":1911,"col":5,"offset":45185},"extra":{"metavars":{"$EXPR1":{"start":{"line":1902,"col":14,"offset":44997},"end":{"line":1902,"col":19,"offset":45002},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1902,"col":22,"offset":45005},"end":{"line":1902,"col":56,"offset":45039},"abstract_content":"STRING_COMPACT_OPTIONAL_WHITESPACE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"da2044a361d8512fc1972edfc8d3cc9dc916790932b0aecc3693d07ab43170a60bac48dae8b88ff025ff028ef1b6a3ae90e376e7906f9585f355af9629b20bc4_0","lines":"\t\t\telse if ((flags & STRING_COMPACT_OPTIONAL_WHITESPACE) &&\n\t\t\t    isspace(*a)) {\n\t\t\t\ta++;\n\t\t\t\twhile (b < eb && isspace(*b))\n\t\t\t\t\tb++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ((v = *b++ - *a++) != '\\0')\n\t\t\t\t\tbreak;\n\t\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1995,"col":4,"offset":46560},"end":{"line":1995,"col":23,"offset":46579},"extra":{"metavars":{"$EXPR1":{"start":{"line":1995,"col":14,"offset":46570},"end":{"line":1995,"col":16,"offset":46572},"abstract_content":"fv"},"$EXPR2":{"start":{"line":1995,"col":20,"offset":46576},"end":{"line":1995,"col":22,"offset":46578},"abstract_content":"fl"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"abbde1bc46313833f27ba064a5e95154c6331571fa690087f7d691425dd5c9b92f688fe06079dc19077f6719d284b8b63bdfffd3c43a852bd76a968379547959_0","lines":"\t\t\tmatched = fv == fl;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2028,"col":4,"offset":47032},"end":{"line":2028,"col":23,"offset":47051},"extra":{"metavars":{"$EXPR1":{"start":{"line":2028,"col":14,"offset":47042},"end":{"line":2028,"col":16,"offset":47044},"abstract_content":"dv"},"$EXPR2":{"start":{"line":2028,"col":20,"offset":47048},"end":{"line":2028,"col":22,"offset":47050},"abstract_content":"dl"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2e1115f713d697ee60f1b8ca15a4ec5bd9cb2e7992c2583e0ff9b3af014b3f6782cb4ad12500c6332a7fde19ccf588cfc4c4b2a8e0b5b7bb854aeffacc67c081_0","lines":"\t\t\tmatched = dv == dl;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2092,"col":8,"offset":48287},"end":{"line":2092,"col":15,"offset":48294},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2092,"col":8,"offset":48287},"end":{"line":2092,"col":11,"offset":48290},"abstract_content":"idx"},"$SIGNED":{"start":{"line":2092,"col":14,"offset":48293},"end":{"line":2092,"col":15,"offset":48294},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cbb6d0862fb51e036e4c6a09758d862615a6b5a1067a4e07aa60569085495ba7fedceddeebc0adb5310d68b84634cc47464ba0abb13a8805e99c587d7d60ddb3_0","lines":"\t\tfor (idx = 0; m->str_range == 0 || idx < m->str_range; idx++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2126,"col":28,"offset":49078},"end":{"line":2126,"col":40,"offset":49090},"extra":{"metavars":{"$FUN":{"start":{"line":2126,"col":28,"offset":49078},"end":{"line":2126,"col":34,"offset":49084},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e477016910dbd397f73de9ea8d2a2b39451a48f6802aba44af4359b1e777c827e2ceab3507310b154dd5064ec7c78c1e409b383797db6b7aa93f0435ad18a4fe_1","lines":"\t\t\t    copy = CAST(char *, malloc(slen));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2134,"col":8,"offset":49268},"end":{"line":2134,"col":40,"offset":49300},"extra":{"metavars":{"$FUN":{"start":{"line":2134,"col":8,"offset":49268},"end":{"line":2134,"col":14,"offset":49274},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"784cf0d884083068300795f169b5885705beff94b574505874dcae867d04e6f28e9a5643248db8eb60e63d41a5e95d0710571521d93cad795f81794b2409f9e7_5","lines":"\t\t\t    memcpy(copy, ms->search.s, slen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2141,"col":9,"offset":49432},"end":{"line":2142,"col":22,"offset":49500},"extra":{"metavars":{"$FUN":{"start":{"line":2141,"col":9,"offset":49432},"end":{"line":2141,"col":21,"offset":49444},"abstract_content":"file_regexec"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e5d1630e2bc3da3238a1f501b753cda69c728e318f94944644cb29550cdfdc1554e5f3fed61f0969fc5c1aaca0dfb4d2494f1014179cad7415960985e6a5832e_1","lines":"\t\t\trc = file_regexec(&rx, RCAST(const char *, search),\n\t\t\t    1, &pmatch, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2143,"col":4,"offset":49505},"end":{"line":2143,"col":15,"offset":49516},"extra":{"metavars":{"$PTR":{"start":{"line":2143,"col":9,"offset":49510},"end":{"line":2143,"col":13,"offset":49514},"abstract_content":"copy"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"37a37a6c0f87e34738be2fa99912db42f3224aab9e53b521d47019e80fe6bf9bc8230a098855e7888cc94cd235dfa4bdacf14ccebecbb21b034a73b0d5cadace_0","lines":"\t\t\tfree(copy);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2192,"col":11,"offset":50439},"end":{"line":2193,"col":56,"offset":50529},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_4","lines":"\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t    \"u == *any* = 1\\n\", CAST(unsigned long long, v));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2200,"col":11,"offset":50635},"end":{"line":2203,"col":45,"offset":50793},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_5","lines":"\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT \"u != %\"\n\t\t\t    INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t    CAST(unsigned long long, v),\n\t\t\t    CAST(unsigned long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2207,"col":3,"offset":50818},"end":{"line":2207,"col":20,"offset":50835},"extra":{"metavars":{"$EXPR1":{"start":{"line":2207,"col":13,"offset":50828},"end":{"line":2207,"col":14,"offset":50829},"abstract_content":"v","propagated_value":{"svalue_start":{"line":2187,"col":6,"offset":50332},"svalue_end":{"line":2187,"col":31,"offset":50357},"svalue_abstract_content":"file_signextend(ms m v)"}},"$EXPR2":{"start":{"line":2207,"col":18,"offset":50833},"end":{"line":2207,"col":19,"offset":50834},"abstract_content":"l"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3fc46cefc2e98a78eb3c50f805b795a92d8668c212cee5067589a70e839eff1b669472346c4cdf8aa4032c1583a6af14dd463299c466574fcbd93dd0715a8800_0","lines":"\t\tmatched = v == l;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2209,"col":11,"offset":50884},"end":{"line":2212,"col":45,"offset":51042},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_6","lines":"\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT \"u == %\"\n\t\t\t    INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t    CAST(unsigned long long, v),\n\t\t\t    CAST(unsigned long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2216,"col":3,"offset":51067},"end":{"line":2231,"col":4,"offset":51585},"extra":{"metavars":{"$EXPR1":{"start":{"line":2216,"col":7,"offset":51071},"end":{"line":2216,"col":14,"offset":51078},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":2216,"col":17,"offset":51081},"end":{"line":2216,"col":25,"offset":51089},"abstract_content":"UNSIGNED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9e2259aa9c20cd6e3964e51cb473add7923f3c03ccb1d8d4ee9a1ad2499a664b6e7ce29ced5c3a1a82ce208c65ba41fd428fdbf55bcb370903cf4584478c93d0_0","lines":"\t\tif (m->flag & UNSIGNED) {\n\t\t\tmatched = v > l;\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"u > %\" INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t\t    CAST(unsigned long long, v),\n\t\t\t\t    CAST(unsigned long long, l), matched);\n\t\t}\n\t\telse {\n\t\t\tmatched = CAST(int64_t, v) > CAST(int64_t, l);\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"d > %\" INT64_T_FORMAT \"d = %d\\n\",\n\t\t\t\t    CAST(long long, v),\n\t\t\t\t    CAST(long long, l), matched);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2219,"col":12,"offset":51163},"end":{"line":2222,"col":46,"offset":51323},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_7","lines":"\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"u > %\" INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t\t    CAST(unsigned long long, v),\n\t\t\t\t    CAST(unsigned long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2227,"col":12,"offset":51438},"end":{"line":2230,"col":37,"offset":51580},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_8","lines":"\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"d > %\" INT64_T_FORMAT \"d = %d\\n\",\n\t\t\t\t    CAST(long long, v),\n\t\t\t\t    CAST(long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2235,"col":3,"offset":51609},"end":{"line":2250,"col":4,"offset":52129},"extra":{"metavars":{"$EXPR1":{"start":{"line":2235,"col":7,"offset":51613},"end":{"line":2235,"col":14,"offset":51620},"abstract_content":"m->->flag"},"$EXPR2":{"start":{"line":2235,"col":17,"offset":51623},"end":{"line":2235,"col":25,"offset":51631},"abstract_content":"UNSIGNED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9e2259aa9c20cd6e3964e51cb473add7923f3c03ccb1d8d4ee9a1ad2499a664b6e7ce29ced5c3a1a82ce208c65ba41fd428fdbf55bcb370903cf4584478c93d0_1","lines":"\t\tif (m->flag & UNSIGNED) {\n\t\t\tmatched = v < l;\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"u < %\" INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t\t    CAST(unsigned long long, v),\n\t\t\t\t    CAST(unsigned long long, l), matched);\n\t\t}\n\t\telse {\n\t\t\tmatched = CAST(int64_t, v) < CAST(int64_t, l);\n\t\t\tif ((ms->flags & MAGIC_DEBUG) != 0)\n\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"d < %\" INT64_T_FORMAT \"d = %d\\n\",\n\t\t\t\t     CAST(long long, v),\n\t\t\t\t     CAST(long long, l), matched);\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2238,"col":12,"offset":51705},"end":{"line":2241,"col":46,"offset":51865},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_9","lines":"\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"u < %\" INT64_T_FORMAT \"u = %d\\n\",\n\t\t\t\t    CAST(unsigned long long, v),\n\t\t\t\t    CAST(unsigned long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2246,"col":12,"offset":51980},"end":{"line":2249,"col":38,"offset":52124},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_10","lines":"\t\t\t\t(void) fprintf(stderr, \"%\" INT64_T_FORMAT\n\t\t\t\t    \"d < %\" INT64_T_FORMAT \"d = %d\\n\",\n\t\t\t\t     CAST(long long, v),\n\t\t\t\t     CAST(long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2254,"col":3,"offset":52153},"end":{"line":2254,"col":26,"offset":52176},"extra":{"metavars":{"$EXPR1":{"start":{"line":2254,"col":14,"offset":52164},"end":{"line":2254,"col":19,"offset":52169},"abstract_content":"v&l"},"$EXPR2":{"start":{"line":2254,"col":24,"offset":52174},"end":{"line":2254,"col":25,"offset":52175},"abstract_content":"l"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dbfd8110263eac3d369f0df3344290ac4d8d6bf5e2a0c79323d05201084a2586c4efe7bf0de08a8704a5206e442cfb06f9da85fc16fa14b1da58033b9da6986d_0","lines":"\t\tmatched = (v & l) == l;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2256,"col":11,"offset":52225},"end":{"line":2261,"col":16,"offset":52453},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_11","lines":"\t\t\t(void) fprintf(stderr, \"((%\" INT64_T_FORMAT \"x & %\"\n\t\t\t    INT64_T_FORMAT \"x) == %\" INT64_T_FORMAT\n\t\t\t    \"x) = %d\\n\", CAST(unsigned long long, v),\n\t\t\t    CAST(unsigned long long, l),\n\t\t\t    CAST(unsigned long long, l),\n\t\t\t    matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2267,"col":11,"offset":52550},"end":{"line":2271,"col":45,"offset":52771},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"14cb66ea2c6e485d9a524952f6e94d29b01bed9b3b7eb492b56ecb671375790a51ea80690df903a083d2c3e500cdae5b322c3ff918ad3cefaf8a4df0df278d97_12","lines":"\t\t\t(void) fprintf(stderr, \"((%\" INT64_T_FORMAT \"x & %\"\n\t\t\t    INT64_T_FORMAT \"x) != %\" INT64_T_FORMAT\n\t\t\t    \"x) = %d\\n\", CAST(unsigned long long, v),\n\t\t\t    CAST(unsigned long long, l),\n\t\t\t    CAST(unsigned long long, l), matched);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2286,"col":2,"offset":52993},"end":{"line":2292,"col":3,"offset":53168},"extra":{"metavars":{"$EXPR1":{"start":{"line":2286,"col":7,"offset":52998},"end":{"line":2286,"col":16,"offset":53007},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2286,"col":19,"offset":53010},"end":{"line":2286,"col":30,"offset":53021},"abstract_content":"MAGIC_APPLE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"395fe2406b92fbbfb9d6aba6dfda85339238a7715baf81f61137ebbe7dc73f0652556199b38a3c82ca329977c4c0ded181c37490360e99df3de99962f4ce00ed_0","lines":"\tif ((ms->flags & MAGIC_APPLE) && m->apple[0]) {\n\t\tif (print_sep(ms, firstline) == -1)\n\t\t\treturn -1;\n\t\tif (file_printf(ms, \"%.8s\", m->apple) == -1)\n\t\t\treturn -1;\n\t\treturn 1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2293,"col":2,"offset":53170},"end":{"line":2299,"col":3,"offset":53343},"extra":{"metavars":{"$EXPR1":{"start":{"line":2293,"col":7,"offset":53175},"end":{"line":2293,"col":16,"offset":53184},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2293,"col":19,"offset":53187},"end":{"line":2293,"col":34,"offset":53202},"abstract_content":"MAGIC_EXTENSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"40323998a3825e35b79e3797a3353ed5d3bde9dd296d4fabb1bc05cdf8bd932b094d3f57906cdecaa6e39757d63a1a571dec91e919d3b4a1efbfef1d59fd36e5_0","lines":"\tif ((ms->flags & MAGIC_EXTENSION) && m->ext[0]) {\n\t\tif (print_sep(ms, firstline) == -1)\n\t\t\treturn -1;\n\t\tif (file_printf(ms, \"%s\", m->ext) == -1)\n\t\t\treturn -1;\n\t\treturn 1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2300,"col":2,"offset":53345},"end":{"line":2312,"col":3,"offset":53650},"extra":{"metavars":{"$EXPR1":{"start":{"line":2300,"col":7,"offset":53350},"end":{"line":2300,"col":16,"offset":53359},"abstract_content":"ms->->flags"},"$EXPR2":{"start":{"line":2300,"col":19,"offset":53362},"end":{"line":2300,"col":34,"offset":53377},"abstract_content":"MAGIC_MIME_TYPE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"772d7c0c2df118771714e2e9e99f6cbd13c7c918b0eca84b34b6c1d01d34f8d3bc944d3b561ad3d239e87dfac9a50e8c09aac9cd6608638e02ad3dfa626339ff_0","lines":"\tif ((ms->flags & MAGIC_MIME_TYPE) && m->mimetype[0]) {\n\t\tchar buf[1024];\n\t\tconst char *p;\n\t\tif (print_sep(ms, firstline) == -1)\n\t\t\treturn -1;\n\t\tif (varexpand(ms, buf, sizeof(buf), m->mimetype) == -1)\n\t\t\tp = m->mimetype;\n\t\telse\n\t\t\tp = buf;\n\t\tif (file_printf(ms, \"%s\", p) == -1)\n\t\t\treturn -1;\n\t\treturn 1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/strlcat.c","start":{"line":43,"col":9,"offset":1535},"end":{"line":43,"col":16,"offset":1542},"extra":{"metavars":{"$PTR1":{"start":{"line":43,"col":9,"offset":1535},"end":{"line":43,"col":10,"offset":1536},"abstract_content":"d"},"$PTR2":{"start":{"line":43,"col":13,"offset":1539},"end":{"line":43,"col":16,"offset":1542},"abstract_content":"dst"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa52d5fc5917c988a4f28aa22a4010f3671038eee3373e8bcafa3552670a9f7fe21a62b507f7534f8c9e72fd96f3aceedb5ce4f2df9b4f0dfd13a90357385096_0","lines":"\tdlen = d - dst;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/strlcat.c","start":{"line":57,"col":17,"offset":1706},"end":{"line":57,"col":24,"offset":1713},"extra":{"metavars":{"$PTR1":{"start":{"line":57,"col":17,"offset":1706},"end":{"line":57,"col":18,"offset":1707},"abstract_content":"s"},"$PTR2":{"start":{"line":57,"col":21,"offset":1710},"end":{"line":57,"col":24,"offset":1713},"abstract_content":"src"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ee1e4186fdc4deb85d03f96734da155a636e5490bcbd117cff109059483a90e1c4fc5539271f535438efa655d4bcc043ae750cac5af65bfcae43fc9f6e8d2f93_0","lines":"\treturn(dlen + (s - src));\t/* count does not include NUL */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/file-5.38/src/strlcpy.c","start":{"line":53,"col":9,"offset":1592},"end":{"line":53,"col":16,"offset":1599},"extra":{"metavars":{"$PTR1":{"start":{"line":53,"col":9,"offset":1592},"end":{"line":53,"col":10,"offset":1593},"abstract_content":"s"},"$PTR2":{"start":{"line":53,"col":13,"offset":1596},"end":{"line":53,"col":16,"offset":1599},"abstract_content":"src"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1f551b365833bd73b945b231a2b6a028d8b00745d063fe26084bb090c626d79872d3c4d48133a87a391b3e63f268df58993ee1becff8c06f67c1fa6e09de4fef_0","lines":"\treturn(s - src - 1);\t/* count does not include NUL */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":157,"col":19,"offset":6834},"end":{"line":157,"col":57,"offset":6872},"extra":{"metavars":{"$FUN":{"start":{"line":157,"col":19,"offset":6834},"end":{"line":157,"col":26,"offset":6841},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43843c3d2154cd6e47a2f9963fd3687b9f074d6504470d4baf99a244cf91f12c8631a26191a9b76bb5d4e2b0bfe319262e0d265ffc300dfdaea70a077624362f_0","lines":"    ptr = (char *)realloc((void *)(s->buffer_base), len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":188,"col":3,"offset":7587},"end":{"line":188,"col":45,"offset":7629},"extra":{"metavars":{"$FUN":{"start":{"line":188,"col":3,"offset":7587},"end":{"line":188,"col":9,"offset":7593},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d8ce09b61e4fb64b648f7388fcdc31e0591ca4b97640a29599a3a7772e29df8ae0d14cfb3b8d8be2ac01dc53b3c684a3bdd8837bc9807a8b1212e0e005906554_0","lines":"  memcpy(s->dest_string, s->src_string, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":212,"col":18,"offset":8075},"end":{"line":212,"col":63,"offset":8120},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"8be759c52211b14fcaef4e952a9af39d29027de6d6ffcbf6e591c45e06af0b3c5df69d78c78ae612638aa97043e2b47576589e11563da9192da1ff4f566eebb5_0","lines":"  vsprintf_len = vsprintf(s->dest_string, format_string, varg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":212,"col":18,"offset":8075},"end":{"line":212,"col":63,"offset":8120},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":14,"offset":13},"abstract_content":"format_string"},"$BUF":{"start":{"line":212,"col":27,"offset":8084},"end":{"line":212,"col":41,"offset":8098},"abstract_content":"s->->dest_string"},"$FMT":{"start":{"line":212,"col":43,"offset":8100},"end":{"line":212,"col":56,"offset":8113},"abstract_content":"format_string"}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"98ab1cba767c322cfdf25647c126fdead5fe2a0d0f87a1f9d2b36ad118bfedd0ee6828ecaec42d1151318703bc28218f6088fa738be9f54b62ea2c85e209d4b9_0","lines":"  vsprintf_len = vsprintf(s->dest_string, format_string, varg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":212,"col":18,"offset":8075},"end":{"line":212,"col":63,"offset":8120},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":18,"offset":8075},"end":{"line":212,"col":26,"offset":8083},"abstract_content":"vsprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b42e54e41492d6751ce02d5dc1b44d097c3bc535fb9d5ac3b44c5e11b7471059170a0ff39b30a85dea38e897873ef4ad60a3eb5260064393ed24f9613206eddb_0","lines":"  vsprintf_len = vsprintf(s->dest_string, format_string, varg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":250,"col":3,"offset":9124},"end":{"line":250,"col":17,"offset":9138},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":250,"col":3,"offset":9124},"end":{"line":250,"col":13,"offset":9134},"abstract_content":"string_len"},"$SIGNED":{"start":{"line":250,"col":16,"offset":9137},"end":{"line":250,"col":17,"offset":9138},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7d625b3a2fa7639e5508a858fb0753695a1861ee784843dcd5f05cd42ddc73ba79682aed841da9d7c131a7afed85dbbdbac76db6bbbceeea81f06b0b4c5fe6a8_0","lines":"  string_len = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":255,"col":5,"offset":9280},"end":{"line":255,"col":31,"offset":9306},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":255,"col":5,"offset":9280},"end":{"line":255,"col":15,"offset":9290},"abstract_content":"string_len"},"$SIGNED":{"start":{"line":255,"col":26,"offset":9301},"end":{"line":255,"col":31,"offset":9306},"abstract_content":"width"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8e40c916efff96ac414baf8e1778c7e4b6fe18cd1f40e87462c503e8884ef5f143a0d30c9eff164ffdd4309c6201aa0ed34352be2b23b580d9710d86025c1474_0","lines":"    string_len = (size_t)width;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":438,"col":5,"offset":14373},"end":{"line":438,"col":37,"offset":14405},"extra":{"metavars":{"$FUN":{"start":{"line":438,"col":5,"offset":14373},"end":{"line":438,"col":12,"offset":14380},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b8ab31563835ed4109bbef45330850397b453447f1164253df7277301d7c0f3734ddba018a6da57b6a917f1d0d364a660bb436d9bbc23b8b6e8a95cfbc9936f_0","lines":"    sprintf(format_ptr, \"%i\", width);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":445,"col":5,"offset":14515},"end":{"line":445,"col":36,"offset":14546},"extra":{"metavars":{"$FUN":{"start":{"line":445,"col":5,"offset":14515},"end":{"line":445,"col":12,"offset":14522},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6b8ab31563835ed4109bbef45330850397b453447f1164253df7277301d7c0f3734ddba018a6da57b6a917f1d0d364a660bb436d9bbc23b8b6e8a95cfbc9936f_1","lines":"    sprintf(format_ptr, \"%i\", prec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":470,"col":11,"offset":15106},"end":{"line":470,"col":15,"offset":15110},"extra":{"metavars":{"$VAR":{"start":{"line":470,"col":11,"offset":15106},"end":{"line":470,"col":15,"offset":15110},"abstract_content":"type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"59f6217393c08b064d6120f275ccfac72aa58a40e4c4d44c6af0ecd9f73c9b473a88d5ddae432ae2a12477b7dcb46af44205738fd7acfdf0703653df556ed5a6_0","lines":"  switch (type) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":613,"col":28,"offset":18880},"end":{"line":613,"col":75,"offset":18927},"extra":{"metavars":{"$FUN":{"start":{"line":613,"col":28,"offset":18880},"end":{"line":613,"col":35,"offset":18887},"abstract_content":"realloc"},"$ARG1":{"start":{"line":613,"col":36,"offset":18888},"end":{"line":613,"col":59,"offset":18911},"abstract_content":"(void*s->->buffer_base"},"$X":{"start":{"line":613,"col":62,"offset":18914},"end":{"line":613,"col":70,"offset":18922},"abstract_content":"save_len"},"$Y":{"start":{"line":613,"col":73,"offset":18925},"end":{"line":613,"col":74,"offset":18926},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f5e9cc1ce2a000b6c1d7901d914e2317e8d654f2628825b5b7955a5eb037edec4df9cbf38602ab6209fbcc4aeb855160d8eab89f62d30d398a6c4c1671e14348_0","lines":"  s->buffer_base = (char *)realloc((void *)(s->buffer_base), save_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":613,"col":28,"offset":18880},"end":{"line":613,"col":75,"offset":18927},"extra":{"metavars":{"$FUN":{"start":{"line":613,"col":28,"offset":18880},"end":{"line":613,"col":35,"offset":18887},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"43843c3d2154cd6e47a2f9963fd3687b9f074d6504470d4baf99a244cf91f12c8631a26191a9b76bb5d4e2b0bfe319262e0d265ffc300dfdaea70a077624362f_1","lines":"  s->buffer_base = (char *)realloc((void *)(s->buffer_base), save_len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/file-5.38/src/vasprintf.c","start":{"line":638,"col":3,"offset":19393},"end":{"line":638,"col":48,"offset":19438},"extra":{"metavars":{"$FUN":{"start":{"line":638,"col":3,"offset":19393},"end":{"line":638,"col":9,"offset":19399},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d8ce09b61e4fb64b648f7388fcdc31e0591ca4b97640a29599a3a7772e29df8ae0d14cfb3b8d8be2ac01dc53b3c684a3bdd8837bc9807a8b1212e0e005906554_1","lines":"  memcpy (&s.vargs, &vargs, sizeof (s.va_args));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","message":"Timeout when running SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc on /home/capstone/Desktop/root/file-5.38/src/apprentice.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c"},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-use-after-free","message":"Timeout when running SEAM.semgrep-rules.c.raptor-use-after-free on /home/capstone/Desktop/root/file-5.38/src/apprentice.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":109,"col":9,"offset":0},"end":{"line":109,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":110,"col":9,"offset":0},"end":{"line":110,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":111,"col":15,"offset":0},"end":{"line":111,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":113,"col":9,"offset":0},"end":{"line":113,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":116,"col":9,"offset":0},"end":{"line":116,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":117,"col":9,"offset":0},"end":{"line":117,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":118,"col":9,"offset":0},"end":{"line":118,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":119,"col":9,"offset":0},"end":{"line":119,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":120,"col":9,"offset":0},"end":{"line":120,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":122,"col":9,"offset":0},"end":{"line":122,"col":21,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":123,"col":9,"offset":0},"end":{"line":123,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":126,"col":9,"offset":0},"end":{"line":126,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":127,"col":9,"offset":0},"end":{"line":127,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":128,"col":9,"offset":0},"end":{"line":128,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":129,"col":9,"offset":0},"end":{"line":129,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":130,"col":9,"offset":0},"end":{"line":130,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":132,"col":9,"offset":0},"end":{"line":132,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":133,"col":9,"offset":0},"end":{"line":133,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":134,"col":9,"offset":0},"end":{"line":134,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":135,"col":9,"offset":0},"end":{"line":135,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":137,"col":9,"offset":0},"end":{"line":137,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":138,"col":9,"offset":0},"end":{"line":138,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":139,"col":9,"offset":0},"end":{"line":139,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":140,"col":9,"offset":0},"end":{"line":140,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":141,"col":9,"offset":0},"end":{"line":141,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":142,"col":9,"offset":0},"end":{"line":142,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":146,"col":9,"offset":0},"end":{"line":146,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":148,"col":15,"offset":0},"end":{"line":148,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":154,"col":3,"offset":0},"end":{"line":155,"col":30,"offset":40}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":212,"col":1,"offset":0},"end":{"line":212,"col":15,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":212,"col":20,"offset":0},"end":{"line":213,"col":9,"offset":24}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":213,"col":22,"offset":0},"end":{"line":213,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":279,"col":9,"offset":0},"end":{"line":279,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":294,"col":9,"offset":0},"end":{"line":294,"col":14,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":303,"col":9,"offset":0},"end":{"line":303,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":308,"col":40,"offset":0},"end":{"line":312,"col":20,"offset":76}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":343,"col":2,"offset":0},"end":{"line":343,"col":8,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":343,"col":47,"offset":0},"end":{"line":343,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":354,"col":3,"offset":0},"end":{"line":358,"col":16,"offset":114}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":359,"col":3,"offset":0},"end":{"line":373,"col":10,"offset":232}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":373,"col":23,"offset":0},"end":{"line":373,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":375,"col":3,"offset":0},"end":{"line":375,"col":10,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":382,"col":2,"offset":0},"end":{"line":382,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":386,"col":1,"offset":0},"end":{"line":388,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":406,"col":9,"offset":0},"end":{"line":406,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":412,"col":24,"offset":0},"end":{"line":412,"col":29,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":412,"col":31,"offset":0},"end":{"line":412,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":429,"col":9,"offset":0},"end":{"line":429,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":441,"col":21,"offset":0},"end":{"line":441,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":454,"col":37,"offset":0},"end":{"line":454,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":473,"col":11,"offset":0},"end":{"line":473,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":486,"col":11,"offset":0},"end":{"line":486,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":500,"col":11,"offset":0},"end":{"line":500,"col":27,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":17,"offset":0},"end":{"line":506,"col":23,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":35,"offset":0},"end":{"line":506,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":49,"offset":0},"end":{"line":506,"col":56,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":23,"offset":0},"end":{"line":518,"col":29,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":42,"offset":0},"end":{"line":518,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":540,"col":9,"offset":0},"end":{"line":540,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":554,"col":13,"offset":0},"end":{"line":554,"col":20,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":554,"col":32,"offset":0},"end":{"line":554,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":555,"col":13,"offset":0},"end":{"line":555,"col":20,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":555,"col":32,"offset":0},"end":{"line":555,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":573,"col":9,"offset":0},"end":{"line":573,"col":21,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":27,"offset":0},"end":{"line":577,"col":32,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":34,"offset":0},"end":{"line":577,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":584,"col":9,"offset":0},"end":{"line":584,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":588,"col":25,"offset":0},"end":{"line":588,"col":31,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":588,"col":43,"offset":0},"end":{"line":588,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":592,"col":9,"offset":0},"end":{"line":592,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":609,"col":11,"offset":0},"end":{"line":609,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":656,"col":11,"offset":0},"end":{"line":656,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":746,"col":9,"offset":0},"end":{"line":746,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":786,"col":9,"offset":0},"end":{"line":786,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":834,"col":15,"offset":0},"end":{"line":834,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":841,"col":9,"offset":0},"end":{"line":841,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":889,"col":18,"offset":0},"end":{"line":889,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":988,"col":9,"offset":0},"end":{"line":988,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":991,"col":38,"offset":0},"end":{"line":991,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":991,"col":64,"offset":0},"end":{"line":991,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":992,"col":38,"offset":0},"end":{"line":992,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":992,"col":64,"offset":0},"end":{"line":992,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1006,"col":9,"offset":0},"end":{"line":1006,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1032,"col":27,"offset":0},"end":{"line":1032,"col":40,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1041,"col":9,"offset":0},"end":{"line":1041,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1104,"col":41,"offset":0},"end":{"line":1104,"col":48,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1121,"col":9,"offset":0},"end":{"line":1121,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1130,"col":18,"offset":0},"end":{"line":1130,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1130,"col":38,"offset":0},"end":{"line":1130,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1148,"col":9,"offset":0},"end":{"line":1148,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1185,"col":15,"offset":0},"end":{"line":1185,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1235,"col":9,"offset":0},"end":{"line":1235,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":30,"offset":0},"end":{"line":1238,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":43,"offset":0},"end":{"line":1238,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":57,"offset":0},"end":{"line":1238,"col":61,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":70,"offset":0},"end":{"line":1238,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1242,"col":9,"offset":0},"end":{"line":1242,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1264,"col":30,"offset":0},"end":{"line":1264,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1267,"col":30,"offset":0},"end":{"line":1267,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1275,"col":9,"offset":0},"end":{"line":1275,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1296,"col":9,"offset":0},"end":{"line":1296,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":25,"offset":0},"end":{"line":1307,"col":30,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":32,"offset":0},"end":{"line":1307,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1322,"col":9,"offset":0},"end":{"line":1322,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1333,"col":9,"offset":0},"end":{"line":1333,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":18,"offset":0},"end":{"line":1350,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":36,"offset":0},"end":{"line":1350,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1386,"col":25,"offset":0},"end":{"line":1386,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1386,"col":32,"offset":0},"end":{"line":1386,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1452,"col":11,"offset":0},"end":{"line":1452,"col":19,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1463,"col":20,"offset":0},"end":{"line":1463,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1485,"col":13,"offset":0},"end":{"line":1485,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1502,"col":13,"offset":0},"end":{"line":1502,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1527,"col":9,"offset":0},"end":{"line":1527,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1586,"col":9,"offset":0},"end":{"line":1586,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1612,"col":9,"offset":0},"end":{"line":1612,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1629,"col":29,"offset":0},"end":{"line":1629,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1638,"col":9,"offset":0},"end":{"line":1638,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1682,"col":9,"offset":0},"end":{"line":1682,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1687,"col":32,"offset":0},"end":{"line":1687,"col":36,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1703,"col":9,"offset":0},"end":{"line":1703,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1713,"col":13,"offset":0},"end":{"line":1713,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1720,"col":9,"offset":0},"end":{"line":1720,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1727,"col":32,"offset":0},"end":{"line":1727,"col":36,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1736,"col":24,"offset":0},"end":{"line":1736,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1809,"col":45,"offset":0},"end":{"line":1809,"col":49,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1824,"col":9,"offset":0},"end":{"line":1824,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1864,"col":15,"offset":0},"end":{"line":1864,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1864,"col":43,"offset":0},"end":{"line":1864,"col":51,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":26,"offset":0},"end":{"line":1872,"col":31,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":33,"offset":0},"end":{"line":1872,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1878,"col":25,"offset":0},"end":{"line":1878,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":24,"offset":0},"end":{"line":1887,"col":29,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":31,"offset":0},"end":{"line":1887,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1898,"col":19,"offset":0},"end":{"line":1898,"col":28,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1923,"col":19,"offset":0},"end":{"line":1923,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2011,"col":14,"offset":0},"end":{"line":2011,"col":42,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2011,"col":47,"offset":0},"end":{"line":2011,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2012,"col":24,"offset":0},"end":{"line":2012,"col":32,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2076,"col":34,"offset":0},"end":{"line":2076,"col":38,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2166,"col":22,"offset":0},"end":{"line":2166,"col":59,"offset":37}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2167,"col":43,"offset":0},"end":{"line":2167,"col":45,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2226,"col":9,"offset":0},"end":{"line":2226,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2264,"col":36,"offset":0},"end":{"line":2264,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2268,"col":19,"offset":0},"end":{"line":2268,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2281,"col":9,"offset":0},"end":{"line":2281,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2287,"col":9,"offset":0},"end":{"line":2287,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2294,"col":18,"offset":0},"end":{"line":2294,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2294,"col":42,"offset":0},"end":{"line":2294,"col":49,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2299,"col":43,"offset":0},"end":{"line":2299,"col":47,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2318,"col":8,"offset":0},"end":{"line":2318,"col":21,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2320,"col":30,"offset":0},"end":{"line":2320,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2338,"col":9,"offset":0},"end":{"line":2338,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2351,"col":9,"offset":0},"end":{"line":2351,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2365,"col":9,"offset":0},"end":{"line":2365,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2375,"col":9,"offset":0},"end":{"line":2375,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2421,"col":9,"offset":0},"end":{"line":2426,"col":25,"offset":198}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2540,"col":17,"offset":0},"end":{"line":2540,"col":45,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2541,"col":7,"offset":0},"end":{"line":2541,"col":9,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2544,"col":18,"offset":0},"end":{"line":2544,"col":47,"offset":29}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2545,"col":8,"offset":0},"end":{"line":2545,"col":10,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2546,"col":3,"offset":0},"end":{"line":2548,"col":9,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2570,"col":9,"offset":0},"end":{"line":2570,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2626,"col":9,"offset":0},"end":{"line":2626,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2689,"col":14,"offset":0},"end":{"line":2689,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2698,"col":19,"offset":0},"end":{"line":2698,"col":26,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2703,"col":39,"offset":0},"end":{"line":2703,"col":43,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2706,"col":17,"offset":0},"end":{"line":2706,"col":25,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2709,"col":14,"offset":0},"end":{"line":2709,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2712,"col":14,"offset":0},"end":{"line":2712,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2715,"col":14,"offset":0},"end":{"line":2715,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2743,"col":15,"offset":0},"end":{"line":2743,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2755,"col":38,"offset":0},"end":{"line":2756,"col":9,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2779,"col":41,"offset":0},"end":{"line":2779,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2782,"col":7,"offset":0},"end":{"line":2785,"col":20,"offset":126}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2788,"col":22,"offset":0},"end":{"line":2788,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2817,"col":17,"offset":0},"end":{"line":2817,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2869,"col":17,"offset":0},"end":{"line":2869,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2885,"col":17,"offset":0},"end":{"line":2885,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2889,"col":5,"offset":0},"end":{"line":2889,"col":10,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2889,"col":16,"offset":0},"end":{"line":2889,"col":21,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2894,"col":28,"offset":0},"end":{"line":2894,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2896,"col":30,"offset":0},"end":{"line":2896,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2902,"col":9,"offset":0},"end":{"line":2902,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2905,"col":29,"offset":0},"end":{"line":2905,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2907,"col":2,"offset":0},"end":{"line":2907,"col":38,"offset":36}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2920,"col":11,"offset":0},"end":{"line":2920,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2980,"col":9,"offset":0},"end":{"line":2980,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3006,"col":9,"offset":0},"end":{"line":3006,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":18,"offset":0},"end":{"line":3011,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":36,"offset":0},"end":{"line":3011,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3029,"col":9,"offset":0},"end":{"line":3029,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":18,"offset":0},"end":{"line":3039,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":36,"offset":0},"end":{"line":3039,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3062,"col":18,"offset":0},"end":{"line":3062,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3065,"col":29,"offset":0},"end":{"line":3065,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3072,"col":21,"offset":0},"end":{"line":3072,"col":28,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3086,"col":14,"offset":0},"end":{"line":3086,"col":20,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3086,"col":32,"offset":0},"end":{"line":3086,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3090,"col":28,"offset":0},"end":{"line":3090,"col":35,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3107,"col":9,"offset":0},"end":{"line":3107,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3115,"col":13,"offset":0},"end":{"line":3115,"col":24,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3134,"col":17,"offset":0},"end":{"line":3134,"col":26,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3136,"col":38,"offset":0},"end":{"line":3136,"col":51,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3141,"col":30,"offset":0},"end":{"line":3141,"col":35,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3141,"col":37,"offset":0},"end":{"line":3141,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3166,"col":9,"offset":0},"end":{"line":3166,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3196,"col":43,"offset":0},"end":{"line":3196,"col":51,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3203,"col":45,"offset":0},"end":{"line":3203,"col":53,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3219,"col":15,"offset":0},"end":{"line":3219,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3223,"col":9,"offset":0},"end":{"line":3223,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3249,"col":42,"offset":0},"end":{"line":3249,"col":46,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3258,"col":36,"offset":0},"end":{"line":3258,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3270,"col":9,"offset":0},"end":{"line":3270,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3281,"col":9,"offset":0},"end":{"line":3281,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":20,"offset":0},"end":{"line":3285,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":46,"offset":0},"end":{"line":3285,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":50,"offset":0},"end":{"line":3285,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":20,"offset":0},"end":{"line":3286,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":46,"offset":0},"end":{"line":3286,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":50,"offset":0},"end":{"line":3286,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3295,"col":9,"offset":0},"end":{"line":3295,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":20,"offset":0},"end":{"line":3299,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":46,"offset":0},"end":{"line":3299,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":50,"offset":0},"end":{"line":3299,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":20,"offset":0},"end":{"line":3300,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":46,"offset":0},"end":{"line":3300,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":50,"offset":0},"end":{"line":3300,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3311,"col":9,"offset":0},"end":{"line":3311,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":20,"offset":0},"end":{"line":3315,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":46,"offset":0},"end":{"line":3315,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":50,"offset":0},"end":{"line":3315,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":20,"offset":0},"end":{"line":3316,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":46,"offset":0},"end":{"line":3316,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":50,"offset":0},"end":{"line":3316,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3342,"col":9,"offset":0},"end":{"line":3342,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3346,"col":25,"offset":0},"end":{"line":3346,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3347,"col":28,"offset":0},"end":{"line":3347,"col":37,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3348,"col":25,"offset":0},"end":{"line":3348,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3359,"col":11,"offset":0},"end":{"line":3359,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3376,"col":11,"offset":0},"end":{"line":3376,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3380,"col":39,"offset":0},"end":{"line":3380,"col":52,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3380,"col":54,"offset":0},"end":{"line":3380,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3421,"col":11,"offset":0},"end":{"line":3421,"col":14,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/apprentice.c:109:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":109,"col":9,"offset":0},"end":{"line":109,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":110,"col":9,"offset":0},"end":{"line":110,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":111,"col":15,"offset":0},"end":{"line":111,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":113,"col":9,"offset":0},"end":{"line":113,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":116,"col":9,"offset":0},"end":{"line":116,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":117,"col":9,"offset":0},"end":{"line":117,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":118,"col":9,"offset":0},"end":{"line":118,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":119,"col":9,"offset":0},"end":{"line":119,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":120,"col":9,"offset":0},"end":{"line":120,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":122,"col":9,"offset":0},"end":{"line":122,"col":21,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":123,"col":9,"offset":0},"end":{"line":123,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":126,"col":9,"offset":0},"end":{"line":126,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":127,"col":9,"offset":0},"end":{"line":127,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":128,"col":9,"offset":0},"end":{"line":128,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":129,"col":9,"offset":0},"end":{"line":129,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":130,"col":9,"offset":0},"end":{"line":130,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":132,"col":9,"offset":0},"end":{"line":132,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":133,"col":9,"offset":0},"end":{"line":133,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":134,"col":9,"offset":0},"end":{"line":134,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":135,"col":9,"offset":0},"end":{"line":135,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":137,"col":9,"offset":0},"end":{"line":137,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":138,"col":9,"offset":0},"end":{"line":138,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":139,"col":9,"offset":0},"end":{"line":139,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":140,"col":9,"offset":0},"end":{"line":140,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":141,"col":9,"offset":0},"end":{"line":141,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":142,"col":9,"offset":0},"end":{"line":142,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":146,"col":9,"offset":0},"end":{"line":146,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":148,"col":15,"offset":0},"end":{"line":148,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":154,"col":3,"offset":0},"end":{"line":155,"col":30,"offset":40}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":212,"col":1,"offset":0},"end":{"line":212,"col":15,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":212,"col":20,"offset":0},"end":{"line":213,"col":9,"offset":24}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":213,"col":22,"offset":0},"end":{"line":213,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":279,"col":9,"offset":0},"end":{"line":279,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":294,"col":9,"offset":0},"end":{"line":294,"col":14,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":303,"col":9,"offset":0},"end":{"line":303,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":308,"col":40,"offset":0},"end":{"line":312,"col":20,"offset":76}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":343,"col":2,"offset":0},"end":{"line":343,"col":8,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":343,"col":47,"offset":0},"end":{"line":343,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":354,"col":3,"offset":0},"end":{"line":358,"col":16,"offset":114}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":359,"col":3,"offset":0},"end":{"line":373,"col":10,"offset":232}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":373,"col":23,"offset":0},"end":{"line":373,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":375,"col":3,"offset":0},"end":{"line":375,"col":10,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":382,"col":2,"offset":0},"end":{"line":382,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":386,"col":1,"offset":0},"end":{"line":388,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":406,"col":9,"offset":0},"end":{"line":406,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":412,"col":24,"offset":0},"end":{"line":412,"col":29,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":412,"col":31,"offset":0},"end":{"line":412,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":429,"col":9,"offset":0},"end":{"line":429,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":441,"col":21,"offset":0},"end":{"line":441,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":454,"col":37,"offset":0},"end":{"line":454,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":473,"col":11,"offset":0},"end":{"line":473,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":486,"col":11,"offset":0},"end":{"line":486,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":500,"col":11,"offset":0},"end":{"line":500,"col":27,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":17,"offset":0},"end":{"line":506,"col":23,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":35,"offset":0},"end":{"line":506,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":506,"col":49,"offset":0},"end":{"line":506,"col":56,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":23,"offset":0},"end":{"line":518,"col":29,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":518,"col":42,"offset":0},"end":{"line":518,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":540,"col":9,"offset":0},"end":{"line":540,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":554,"col":13,"offset":0},"end":{"line":554,"col":20,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":554,"col":32,"offset":0},"end":{"line":554,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":555,"col":13,"offset":0},"end":{"line":555,"col":20,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":555,"col":32,"offset":0},"end":{"line":555,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":573,"col":9,"offset":0},"end":{"line":573,"col":21,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":27,"offset":0},"end":{"line":577,"col":32,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":577,"col":34,"offset":0},"end":{"line":577,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":584,"col":9,"offset":0},"end":{"line":584,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":588,"col":25,"offset":0},"end":{"line":588,"col":31,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":588,"col":43,"offset":0},"end":{"line":588,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":592,"col":9,"offset":0},"end":{"line":592,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":609,"col":11,"offset":0},"end":{"line":609,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":656,"col":11,"offset":0},"end":{"line":656,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":746,"col":9,"offset":0},"end":{"line":746,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":786,"col":9,"offset":0},"end":{"line":786,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":834,"col":15,"offset":0},"end":{"line":834,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":841,"col":9,"offset":0},"end":{"line":841,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":889,"col":18,"offset":0},"end":{"line":889,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":988,"col":9,"offset":0},"end":{"line":988,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":991,"col":38,"offset":0},"end":{"line":991,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":991,"col":64,"offset":0},"end":{"line":991,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":992,"col":38,"offset":0},"end":{"line":992,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":992,"col":64,"offset":0},"end":{"line":992,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1006,"col":9,"offset":0},"end":{"line":1006,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1032,"col":27,"offset":0},"end":{"line":1032,"col":40,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1041,"col":9,"offset":0},"end":{"line":1041,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1104,"col":41,"offset":0},"end":{"line":1104,"col":48,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1121,"col":9,"offset":0},"end":{"line":1121,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1130,"col":18,"offset":0},"end":{"line":1130,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1130,"col":38,"offset":0},"end":{"line":1130,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1148,"col":9,"offset":0},"end":{"line":1148,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1185,"col":15,"offset":0},"end":{"line":1185,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1235,"col":9,"offset":0},"end":{"line":1235,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":30,"offset":0},"end":{"line":1238,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":43,"offset":0},"end":{"line":1238,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":57,"offset":0},"end":{"line":1238,"col":61,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1238,"col":70,"offset":0},"end":{"line":1238,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1242,"col":9,"offset":0},"end":{"line":1242,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1264,"col":30,"offset":0},"end":{"line":1264,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1267,"col":30,"offset":0},"end":{"line":1267,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1275,"col":9,"offset":0},"end":{"line":1275,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1296,"col":9,"offset":0},"end":{"line":1296,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":25,"offset":0},"end":{"line":1307,"col":30,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1307,"col":32,"offset":0},"end":{"line":1307,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1322,"col":9,"offset":0},"end":{"line":1322,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1333,"col":9,"offset":0},"end":{"line":1333,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":18,"offset":0},"end":{"line":1350,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1350,"col":36,"offset":0},"end":{"line":1350,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1386,"col":25,"offset":0},"end":{"line":1386,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1386,"col":32,"offset":0},"end":{"line":1386,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1452,"col":11,"offset":0},"end":{"line":1452,"col":19,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1463,"col":20,"offset":0},"end":{"line":1463,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1485,"col":13,"offset":0},"end":{"line":1485,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1502,"col":13,"offset":0},"end":{"line":1502,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1527,"col":9,"offset":0},"end":{"line":1527,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1586,"col":9,"offset":0},"end":{"line":1586,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1612,"col":9,"offset":0},"end":{"line":1612,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1629,"col":29,"offset":0},"end":{"line":1629,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1638,"col":9,"offset":0},"end":{"line":1638,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1682,"col":9,"offset":0},"end":{"line":1682,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1687,"col":32,"offset":0},"end":{"line":1687,"col":36,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1703,"col":9,"offset":0},"end":{"line":1703,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1713,"col":13,"offset":0},"end":{"line":1713,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1720,"col":9,"offset":0},"end":{"line":1720,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1727,"col":32,"offset":0},"end":{"line":1727,"col":36,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1736,"col":24,"offset":0},"end":{"line":1736,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1809,"col":45,"offset":0},"end":{"line":1809,"col":49,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1824,"col":9,"offset":0},"end":{"line":1824,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1864,"col":15,"offset":0},"end":{"line":1864,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1864,"col":43,"offset":0},"end":{"line":1864,"col":51,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":26,"offset":0},"end":{"line":1872,"col":31,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1872,"col":33,"offset":0},"end":{"line":1872,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1878,"col":25,"offset":0},"end":{"line":1878,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":24,"offset":0},"end":{"line":1887,"col":29,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1887,"col":31,"offset":0},"end":{"line":1887,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1898,"col":19,"offset":0},"end":{"line":1898,"col":28,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":1923,"col":19,"offset":0},"end":{"line":1923,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2011,"col":14,"offset":0},"end":{"line":2011,"col":42,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2011,"col":47,"offset":0},"end":{"line":2011,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2012,"col":24,"offset":0},"end":{"line":2012,"col":32,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2076,"col":34,"offset":0},"end":{"line":2076,"col":38,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2166,"col":22,"offset":0},"end":{"line":2166,"col":59,"offset":37}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2167,"col":43,"offset":0},"end":{"line":2167,"col":45,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2226,"col":9,"offset":0},"end":{"line":2226,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2264,"col":36,"offset":0},"end":{"line":2264,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2268,"col":19,"offset":0},"end":{"line":2268,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2281,"col":9,"offset":0},"end":{"line":2281,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2287,"col":9,"offset":0},"end":{"line":2287,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2294,"col":18,"offset":0},"end":{"line":2294,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2294,"col":42,"offset":0},"end":{"line":2294,"col":49,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2299,"col":43,"offset":0},"end":{"line":2299,"col":47,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2318,"col":8,"offset":0},"end":{"line":2318,"col":21,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2320,"col":30,"offset":0},"end":{"line":2320,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2338,"col":9,"offset":0},"end":{"line":2338,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2351,"col":9,"offset":0},"end":{"line":2351,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2365,"col":9,"offset":0},"end":{"line":2365,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2375,"col":9,"offset":0},"end":{"line":2375,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2421,"col":9,"offset":0},"end":{"line":2426,"col":25,"offset":198}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2540,"col":17,"offset":0},"end":{"line":2540,"col":45,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2541,"col":7,"offset":0},"end":{"line":2541,"col":9,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2544,"col":18,"offset":0},"end":{"line":2544,"col":47,"offset":29}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2545,"col":8,"offset":0},"end":{"line":2545,"col":10,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2546,"col":3,"offset":0},"end":{"line":2548,"col":9,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2570,"col":9,"offset":0},"end":{"line":2570,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2626,"col":9,"offset":0},"end":{"line":2626,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2689,"col":14,"offset":0},"end":{"line":2689,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2698,"col":19,"offset":0},"end":{"line":2698,"col":26,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2703,"col":39,"offset":0},"end":{"line":2703,"col":43,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2706,"col":17,"offset":0},"end":{"line":2706,"col":25,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2709,"col":14,"offset":0},"end":{"line":2709,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2712,"col":14,"offset":0},"end":{"line":2712,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2715,"col":14,"offset":0},"end":{"line":2715,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2743,"col":15,"offset":0},"end":{"line":2743,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2755,"col":38,"offset":0},"end":{"line":2756,"col":9,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2779,"col":41,"offset":0},"end":{"line":2779,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2782,"col":7,"offset":0},"end":{"line":2785,"col":20,"offset":126}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2788,"col":22,"offset":0},"end":{"line":2788,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2817,"col":17,"offset":0},"end":{"line":2817,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2869,"col":17,"offset":0},"end":{"line":2869,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2885,"col":17,"offset":0},"end":{"line":2885,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2889,"col":5,"offset":0},"end":{"line":2889,"col":10,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2889,"col":16,"offset":0},"end":{"line":2889,"col":21,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2894,"col":28,"offset":0},"end":{"line":2894,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2896,"col":30,"offset":0},"end":{"line":2896,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2902,"col":9,"offset":0},"end":{"line":2902,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2905,"col":29,"offset":0},"end":{"line":2905,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2907,"col":2,"offset":0},"end":{"line":2907,"col":38,"offset":36}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2920,"col":11,"offset":0},"end":{"line":2920,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":2980,"col":9,"offset":0},"end":{"line":2980,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3006,"col":9,"offset":0},"end":{"line":3006,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":18,"offset":0},"end":{"line":3011,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3011,"col":36,"offset":0},"end":{"line":3011,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3029,"col":9,"offset":0},"end":{"line":3029,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":18,"offset":0},"end":{"line":3039,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3039,"col":36,"offset":0},"end":{"line":3039,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3062,"col":18,"offset":0},"end":{"line":3062,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3065,"col":29,"offset":0},"end":{"line":3065,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3072,"col":21,"offset":0},"end":{"line":3072,"col":28,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3086,"col":14,"offset":0},"end":{"line":3086,"col":20,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3086,"col":32,"offset":0},"end":{"line":3086,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3090,"col":28,"offset":0},"end":{"line":3090,"col":35,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3107,"col":9,"offset":0},"end":{"line":3107,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3115,"col":13,"offset":0},"end":{"line":3115,"col":24,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3134,"col":17,"offset":0},"end":{"line":3134,"col":26,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3136,"col":38,"offset":0},"end":{"line":3136,"col":51,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3141,"col":30,"offset":0},"end":{"line":3141,"col":35,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3141,"col":37,"offset":0},"end":{"line":3141,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3166,"col":9,"offset":0},"end":{"line":3166,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3196,"col":43,"offset":0},"end":{"line":3196,"col":51,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3203,"col":45,"offset":0},"end":{"line":3203,"col":53,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3219,"col":15,"offset":0},"end":{"line":3219,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3223,"col":9,"offset":0},"end":{"line":3223,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3249,"col":42,"offset":0},"end":{"line":3249,"col":46,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3258,"col":36,"offset":0},"end":{"line":3258,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3270,"col":9,"offset":0},"end":{"line":3270,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3281,"col":9,"offset":0},"end":{"line":3281,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":20,"offset":0},"end":{"line":3285,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":46,"offset":0},"end":{"line":3285,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3285,"col":50,"offset":0},"end":{"line":3285,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":20,"offset":0},"end":{"line":3286,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":46,"offset":0},"end":{"line":3286,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3286,"col":50,"offset":0},"end":{"line":3286,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3295,"col":9,"offset":0},"end":{"line":3295,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":20,"offset":0},"end":{"line":3299,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":46,"offset":0},"end":{"line":3299,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3299,"col":50,"offset":0},"end":{"line":3299,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":20,"offset":0},"end":{"line":3300,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":46,"offset":0},"end":{"line":3300,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3300,"col":50,"offset":0},"end":{"line":3300,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3311,"col":9,"offset":0},"end":{"line":3311,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":20,"offset":0},"end":{"line":3315,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":46,"offset":0},"end":{"line":3315,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3315,"col":50,"offset":0},"end":{"line":3315,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":20,"offset":0},"end":{"line":3316,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":46,"offset":0},"end":{"line":3316,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3316,"col":50,"offset":0},"end":{"line":3316,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3342,"col":9,"offset":0},"end":{"line":3342,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3346,"col":25,"offset":0},"end":{"line":3346,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3347,"col":28,"offset":0},"end":{"line":3347,"col":37,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3348,"col":25,"offset":0},"end":{"line":3348,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3359,"col":11,"offset":0},"end":{"line":3359,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3376,"col":11,"offset":0},"end":{"line":3376,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3380,"col":39,"offset":0},"end":{"line":3380,"col":52,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3380,"col":54,"offset":0},"end":{"line":3380,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apprentice.c","start":{"line":3421,"col":11,"offset":0},"end":{"line":3421,"col":14,"offset":3}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","message":"Timeout when running SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc on /home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c"},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-use-after-free","message":"Timeout when running SEAM.semgrep-rules.c.raptor-use-after-free on /home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":109,"col":9,"offset":0},"end":{"line":109,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":110,"col":9,"offset":0},"end":{"line":110,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":111,"col":15,"offset":0},"end":{"line":111,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":113,"col":9,"offset":0},"end":{"line":113,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":116,"col":9,"offset":0},"end":{"line":116,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":117,"col":9,"offset":0},"end":{"line":117,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":118,"col":9,"offset":0},"end":{"line":118,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":119,"col":9,"offset":0},"end":{"line":119,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":120,"col":9,"offset":0},"end":{"line":120,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":122,"col":9,"offset":0},"end":{"line":122,"col":21,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":123,"col":9,"offset":0},"end":{"line":123,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":126,"col":9,"offset":0},"end":{"line":126,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":127,"col":9,"offset":0},"end":{"line":127,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":128,"col":9,"offset":0},"end":{"line":128,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":129,"col":9,"offset":0},"end":{"line":129,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":130,"col":9,"offset":0},"end":{"line":130,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":132,"col":9,"offset":0},"end":{"line":132,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":133,"col":9,"offset":0},"end":{"line":133,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":134,"col":9,"offset":0},"end":{"line":134,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":135,"col":9,"offset":0},"end":{"line":135,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":137,"col":9,"offset":0},"end":{"line":137,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":138,"col":9,"offset":0},"end":{"line":138,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":139,"col":9,"offset":0},"end":{"line":139,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":140,"col":9,"offset":0},"end":{"line":140,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":141,"col":9,"offset":0},"end":{"line":141,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":142,"col":9,"offset":0},"end":{"line":142,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":146,"col":9,"offset":0},"end":{"line":146,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":148,"col":15,"offset":0},"end":{"line":148,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":154,"col":3,"offset":0},"end":{"line":155,"col":30,"offset":40}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":212,"col":1,"offset":0},"end":{"line":212,"col":15,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":212,"col":20,"offset":0},"end":{"line":213,"col":9,"offset":24}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":213,"col":22,"offset":0},"end":{"line":213,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":279,"col":9,"offset":0},"end":{"line":279,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":294,"col":9,"offset":0},"end":{"line":294,"col":14,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":303,"col":9,"offset":0},"end":{"line":303,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":308,"col":40,"offset":0},"end":{"line":312,"col":20,"offset":76}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":343,"col":2,"offset":0},"end":{"line":343,"col":8,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":343,"col":47,"offset":0},"end":{"line":343,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":354,"col":3,"offset":0},"end":{"line":358,"col":16,"offset":114}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":359,"col":3,"offset":0},"end":{"line":373,"col":10,"offset":232}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":373,"col":23,"offset":0},"end":{"line":373,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":375,"col":3,"offset":0},"end":{"line":375,"col":10,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":382,"col":2,"offset":0},"end":{"line":382,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":386,"col":1,"offset":0},"end":{"line":388,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":406,"col":9,"offset":0},"end":{"line":406,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":412,"col":24,"offset":0},"end":{"line":412,"col":29,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":412,"col":31,"offset":0},"end":{"line":412,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":429,"col":9,"offset":0},"end":{"line":429,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":441,"col":21,"offset":0},"end":{"line":441,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":25,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":454,"col":37,"offset":0},"end":{"line":454,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":473,"col":11,"offset":0},"end":{"line":473,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":486,"col":11,"offset":0},"end":{"line":486,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":500,"col":11,"offset":0},"end":{"line":500,"col":27,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":17,"offset":0},"end":{"line":506,"col":23,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":35,"offset":0},"end":{"line":506,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":49,"offset":0},"end":{"line":506,"col":56,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":23,"offset":0},"end":{"line":518,"col":29,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":42,"offset":0},"end":{"line":518,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":540,"col":9,"offset":0},"end":{"line":540,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":554,"col":13,"offset":0},"end":{"line":554,"col":20,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":554,"col":32,"offset":0},"end":{"line":554,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":555,"col":13,"offset":0},"end":{"line":555,"col":20,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":555,"col":32,"offset":0},"end":{"line":555,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":573,"col":9,"offset":0},"end":{"line":573,"col":21,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":27,"offset":0},"end":{"line":577,"col":32,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":34,"offset":0},"end":{"line":577,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":584,"col":9,"offset":0},"end":{"line":584,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":588,"col":25,"offset":0},"end":{"line":588,"col":31,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":588,"col":43,"offset":0},"end":{"line":588,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":592,"col":9,"offset":0},"end":{"line":592,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":609,"col":11,"offset":0},"end":{"line":609,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":656,"col":11,"offset":0},"end":{"line":656,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":746,"col":9,"offset":0},"end":{"line":746,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":786,"col":9,"offset":0},"end":{"line":786,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":834,"col":15,"offset":0},"end":{"line":834,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":841,"col":9,"offset":0},"end":{"line":841,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":889,"col":18,"offset":0},"end":{"line":889,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":988,"col":9,"offset":0},"end":{"line":988,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":991,"col":38,"offset":0},"end":{"line":991,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":991,"col":64,"offset":0},"end":{"line":991,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":992,"col":38,"offset":0},"end":{"line":992,"col":50,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":992,"col":64,"offset":0},"end":{"line":992,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1006,"col":9,"offset":0},"end":{"line":1006,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1032,"col":27,"offset":0},"end":{"line":1032,"col":40,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1041,"col":9,"offset":0},"end":{"line":1041,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1104,"col":41,"offset":0},"end":{"line":1104,"col":48,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1121,"col":9,"offset":0},"end":{"line":1121,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1130,"col":18,"offset":0},"end":{"line":1130,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1130,"col":38,"offset":0},"end":{"line":1130,"col":39,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1148,"col":9,"offset":0},"end":{"line":1148,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1185,"col":15,"offset":0},"end":{"line":1185,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1235,"col":9,"offset":0},"end":{"line":1235,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":30,"offset":0},"end":{"line":1238,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":43,"offset":0},"end":{"line":1238,"col":44,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":57,"offset":0},"end":{"line":1238,"col":61,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":70,"offset":0},"end":{"line":1238,"col":71,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1242,"col":9,"offset":0},"end":{"line":1242,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1264,"col":30,"offset":0},"end":{"line":1264,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1267,"col":30,"offset":0},"end":{"line":1267,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1275,"col":9,"offset":0},"end":{"line":1275,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1296,"col":9,"offset":0},"end":{"line":1296,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":25,"offset":0},"end":{"line":1307,"col":30,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":32,"offset":0},"end":{"line":1307,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1322,"col":9,"offset":0},"end":{"line":1322,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1333,"col":9,"offset":0},"end":{"line":1333,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":18,"offset":0},"end":{"line":1350,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":36,"offset":0},"end":{"line":1350,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1386,"col":25,"offset":0},"end":{"line":1386,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1386,"col":32,"offset":0},"end":{"line":1386,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1452,"col":11,"offset":0},"end":{"line":1452,"col":19,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1463,"col":20,"offset":0},"end":{"line":1463,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1485,"col":13,"offset":0},"end":{"line":1485,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1502,"col":13,"offset":0},"end":{"line":1502,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1527,"col":9,"offset":0},"end":{"line":1527,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1586,"col":9,"offset":0},"end":{"line":1586,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1612,"col":9,"offset":0},"end":{"line":1612,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1629,"col":29,"offset":0},"end":{"line":1629,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1638,"col":9,"offset":0},"end":{"line":1638,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1682,"col":9,"offset":0},"end":{"line":1682,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1687,"col":32,"offset":0},"end":{"line":1687,"col":36,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1703,"col":9,"offset":0},"end":{"line":1703,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1713,"col":13,"offset":0},"end":{"line":1713,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1720,"col":9,"offset":0},"end":{"line":1720,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1727,"col":32,"offset":0},"end":{"line":1727,"col":36,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1736,"col":24,"offset":0},"end":{"line":1736,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1809,"col":45,"offset":0},"end":{"line":1809,"col":49,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1824,"col":9,"offset":0},"end":{"line":1824,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1864,"col":15,"offset":0},"end":{"line":1864,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1864,"col":43,"offset":0},"end":{"line":1864,"col":51,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":26,"offset":0},"end":{"line":1872,"col":31,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":33,"offset":0},"end":{"line":1872,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1878,"col":25,"offset":0},"end":{"line":1878,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":24,"offset":0},"end":{"line":1887,"col":29,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":31,"offset":0},"end":{"line":1887,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1898,"col":19,"offset":0},"end":{"line":1898,"col":28,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1923,"col":19,"offset":0},"end":{"line":1923,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2011,"col":14,"offset":0},"end":{"line":2011,"col":42,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2011,"col":47,"offset":0},"end":{"line":2011,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2012,"col":24,"offset":0},"end":{"line":2012,"col":32,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2076,"col":34,"offset":0},"end":{"line":2076,"col":38,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2166,"col":22,"offset":0},"end":{"line":2166,"col":59,"offset":37}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2167,"col":43,"offset":0},"end":{"line":2167,"col":45,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2226,"col":9,"offset":0},"end":{"line":2226,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2264,"col":36,"offset":0},"end":{"line":2264,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2268,"col":19,"offset":0},"end":{"line":2268,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2281,"col":9,"offset":0},"end":{"line":2281,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2287,"col":9,"offset":0},"end":{"line":2287,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2294,"col":18,"offset":0},"end":{"line":2294,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2294,"col":42,"offset":0},"end":{"line":2294,"col":49,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2299,"col":43,"offset":0},"end":{"line":2299,"col":47,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2318,"col":8,"offset":0},"end":{"line":2318,"col":21,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2320,"col":30,"offset":0},"end":{"line":2320,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2338,"col":9,"offset":0},"end":{"line":2338,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2351,"col":9,"offset":0},"end":{"line":2351,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2365,"col":9,"offset":0},"end":{"line":2365,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2375,"col":9,"offset":0},"end":{"line":2375,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2421,"col":9,"offset":0},"end":{"line":2426,"col":25,"offset":198}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2540,"col":17,"offset":0},"end":{"line":2540,"col":45,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2541,"col":7,"offset":0},"end":{"line":2541,"col":9,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2544,"col":18,"offset":0},"end":{"line":2544,"col":47,"offset":29}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2545,"col":8,"offset":0},"end":{"line":2545,"col":10,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2546,"col":3,"offset":0},"end":{"line":2548,"col":9,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2570,"col":9,"offset":0},"end":{"line":2570,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2626,"col":9,"offset":0},"end":{"line":2626,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2689,"col":14,"offset":0},"end":{"line":2689,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2698,"col":19,"offset":0},"end":{"line":2698,"col":26,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2703,"col":39,"offset":0},"end":{"line":2703,"col":43,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2706,"col":17,"offset":0},"end":{"line":2706,"col":25,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2709,"col":14,"offset":0},"end":{"line":2709,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2712,"col":14,"offset":0},"end":{"line":2712,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2715,"col":14,"offset":0},"end":{"line":2715,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2743,"col":15,"offset":0},"end":{"line":2743,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2755,"col":38,"offset":0},"end":{"line":2756,"col":9,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2779,"col":41,"offset":0},"end":{"line":2779,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2782,"col":7,"offset":0},"end":{"line":2785,"col":20,"offset":126}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2788,"col":22,"offset":0},"end":{"line":2788,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2817,"col":17,"offset":0},"end":{"line":2817,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2869,"col":17,"offset":0},"end":{"line":2869,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2885,"col":17,"offset":0},"end":{"line":2885,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2889,"col":5,"offset":0},"end":{"line":2889,"col":10,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2889,"col":16,"offset":0},"end":{"line":2889,"col":21,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2894,"col":28,"offset":0},"end":{"line":2894,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2896,"col":30,"offset":0},"end":{"line":2896,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2902,"col":9,"offset":0},"end":{"line":2902,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2905,"col":29,"offset":0},"end":{"line":2905,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2907,"col":2,"offset":0},"end":{"line":2907,"col":38,"offset":36}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2920,"col":11,"offset":0},"end":{"line":2920,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2980,"col":9,"offset":0},"end":{"line":2980,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3006,"col":9,"offset":0},"end":{"line":3006,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":18,"offset":0},"end":{"line":3011,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":36,"offset":0},"end":{"line":3011,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3029,"col":9,"offset":0},"end":{"line":3029,"col":25,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":18,"offset":0},"end":{"line":3039,"col":24,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":36,"offset":0},"end":{"line":3039,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3062,"col":18,"offset":0},"end":{"line":3062,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3065,"col":29,"offset":0},"end":{"line":3065,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3072,"col":21,"offset":0},"end":{"line":3072,"col":28,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3086,"col":14,"offset":0},"end":{"line":3086,"col":20,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3086,"col":32,"offset":0},"end":{"line":3086,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3090,"col":28,"offset":0},"end":{"line":3090,"col":35,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3107,"col":9,"offset":0},"end":{"line":3107,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3115,"col":13,"offset":0},"end":{"line":3115,"col":24,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3134,"col":17,"offset":0},"end":{"line":3134,"col":26,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3136,"col":38,"offset":0},"end":{"line":3136,"col":51,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3141,"col":30,"offset":0},"end":{"line":3141,"col":35,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3141,"col":37,"offset":0},"end":{"line":3141,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3166,"col":9,"offset":0},"end":{"line":3166,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3196,"col":43,"offset":0},"end":{"line":3196,"col":51,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3203,"col":45,"offset":0},"end":{"line":3203,"col":53,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3219,"col":15,"offset":0},"end":{"line":3219,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3223,"col":9,"offset":0},"end":{"line":3223,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3249,"col":42,"offset":0},"end":{"line":3249,"col":46,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3258,"col":36,"offset":0},"end":{"line":3258,"col":40,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3270,"col":9,"offset":0},"end":{"line":3270,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3281,"col":9,"offset":0},"end":{"line":3281,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":20,"offset":0},"end":{"line":3285,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":46,"offset":0},"end":{"line":3285,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":50,"offset":0},"end":{"line":3285,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":20,"offset":0},"end":{"line":3286,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":46,"offset":0},"end":{"line":3286,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":50,"offset":0},"end":{"line":3286,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3295,"col":9,"offset":0},"end":{"line":3295,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":20,"offset":0},"end":{"line":3299,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":46,"offset":0},"end":{"line":3299,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":50,"offset":0},"end":{"line":3299,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":20,"offset":0},"end":{"line":3300,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":46,"offset":0},"end":{"line":3300,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":50,"offset":0},"end":{"line":3300,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3311,"col":9,"offset":0},"end":{"line":3311,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":20,"offset":0},"end":{"line":3315,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":46,"offset":0},"end":{"line":3315,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":50,"offset":0},"end":{"line":3315,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":20,"offset":0},"end":{"line":3316,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":46,"offset":0},"end":{"line":3316,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":50,"offset":0},"end":{"line":3316,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3342,"col":9,"offset":0},"end":{"line":3342,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3346,"col":25,"offset":0},"end":{"line":3346,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3347,"col":28,"offset":0},"end":{"line":3347,"col":37,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3348,"col":25,"offset":0},"end":{"line":3348,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3359,"col":11,"offset":0},"end":{"line":3359,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3376,"col":11,"offset":0},"end":{"line":3376,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3380,"col":39,"offset":0},"end":{"line":3380,"col":52,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3380,"col":54,"offset":0},"end":{"line":3380,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3421,"col":11,"offset":0},"end":{"line":3421,"col":14,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c:109:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":109,"col":9,"offset":0},"end":{"line":109,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":110,"col":9,"offset":0},"end":{"line":110,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":111,"col":15,"offset":0},"end":{"line":111,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":113,"col":9,"offset":0},"end":{"line":113,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":116,"col":9,"offset":0},"end":{"line":116,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":117,"col":9,"offset":0},"end":{"line":117,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":118,"col":9,"offset":0},"end":{"line":118,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":119,"col":9,"offset":0},"end":{"line":119,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":120,"col":9,"offset":0},"end":{"line":120,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":122,"col":9,"offset":0},"end":{"line":122,"col":21,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":123,"col":9,"offset":0},"end":{"line":123,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":124,"col":9,"offset":0},"end":{"line":124,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":125,"col":9,"offset":0},"end":{"line":125,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":126,"col":9,"offset":0},"end":{"line":126,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":127,"col":9,"offset":0},"end":{"line":127,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":128,"col":9,"offset":0},"end":{"line":128,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":129,"col":9,"offset":0},"end":{"line":129,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":130,"col":9,"offset":0},"end":{"line":130,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":132,"col":9,"offset":0},"end":{"line":132,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":133,"col":9,"offset":0},"end":{"line":133,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":134,"col":9,"offset":0},"end":{"line":134,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":135,"col":9,"offset":0},"end":{"line":135,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":137,"col":9,"offset":0},"end":{"line":137,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":138,"col":9,"offset":0},"end":{"line":138,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":139,"col":9,"offset":0},"end":{"line":139,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":140,"col":9,"offset":0},"end":{"line":140,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":141,"col":9,"offset":0},"end":{"line":141,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":142,"col":9,"offset":0},"end":{"line":142,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":146,"col":9,"offset":0},"end":{"line":146,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":148,"col":15,"offset":0},"end":{"line":148,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":154,"col":3,"offset":0},"end":{"line":155,"col":30,"offset":40}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":160,"col":1,"offset":0},"end":{"line":160,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":162,"col":1,"offset":0},"end":{"line":162,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":212,"col":1,"offset":0},"end":{"line":212,"col":15,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":212,"col":20,"offset":0},"end":{"line":213,"col":9,"offset":24}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":213,"col":22,"offset":0},"end":{"line":213,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":279,"col":9,"offset":0},"end":{"line":279,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":294,"col":9,"offset":0},"end":{"line":294,"col":14,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":303,"col":9,"offset":0},"end":{"line":303,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":308,"col":40,"offset":0},"end":{"line":312,"col":20,"offset":76}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":343,"col":2,"offset":0},"end":{"line":343,"col":8,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":343,"col":47,"offset":0},"end":{"line":343,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":354,"col":3,"offset":0},"end":{"line":358,"col":16,"offset":114}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":359,"col":3,"offset":0},"end":{"line":373,"col":10,"offset":232}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":373,"col":23,"offset":0},"end":{"line":373,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":375,"col":3,"offset":0},"end":{"line":375,"col":10,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":382,"col":2,"offset":0},"end":{"line":382,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":386,"col":1,"offset":0},"end":{"line":388,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":406,"col":9,"offset":0},"end":{"line":406,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":412,"col":24,"offset":0},"end":{"line":412,"col":29,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":412,"col":31,"offset":0},"end":{"line":412,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":429,"col":9,"offset":0},"end":{"line":429,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":441,"col":21,"offset":0},"end":{"line":441,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":454,"col":19,"offset":0},"end":{"line":454,"col":25,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":454,"col":37,"offset":0},"end":{"line":454,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":473,"col":11,"offset":0},"end":{"line":473,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":486,"col":11,"offset":0},"end":{"line":486,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":500,"col":11,"offset":0},"end":{"line":500,"col":27,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":17,"offset":0},"end":{"line":506,"col":23,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":35,"offset":0},"end":{"line":506,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":506,"col":49,"offset":0},"end":{"line":506,"col":56,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":23,"offset":0},"end":{"line":518,"col":29,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":518,"col":42,"offset":0},"end":{"line":518,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":540,"col":9,"offset":0},"end":{"line":540,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":554,"col":13,"offset":0},"end":{"line":554,"col":20,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":554,"col":32,"offset":0},"end":{"line":554,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":555,"col":13,"offset":0},"end":{"line":555,"col":20,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":555,"col":32,"offset":0},"end":{"line":555,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":573,"col":9,"offset":0},"end":{"line":573,"col":21,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":27,"offset":0},"end":{"line":577,"col":32,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":577,"col":34,"offset":0},"end":{"line":577,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":584,"col":9,"offset":0},"end":{"line":584,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":588,"col":25,"offset":0},"end":{"line":588,"col":31,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":588,"col":43,"offset":0},"end":{"line":588,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":592,"col":9,"offset":0},"end":{"line":592,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":609,"col":11,"offset":0},"end":{"line":609,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":656,"col":11,"offset":0},"end":{"line":656,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":746,"col":9,"offset":0},"end":{"line":746,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":786,"col":9,"offset":0},"end":{"line":786,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":834,"col":15,"offset":0},"end":{"line":834,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":841,"col":9,"offset":0},"end":{"line":841,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":889,"col":18,"offset":0},"end":{"line":889,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":988,"col":9,"offset":0},"end":{"line":988,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":991,"col":38,"offset":0},"end":{"line":991,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":991,"col":64,"offset":0},"end":{"line":991,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":992,"col":38,"offset":0},"end":{"line":992,"col":50,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":992,"col":64,"offset":0},"end":{"line":992,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1006,"col":9,"offset":0},"end":{"line":1006,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1032,"col":27,"offset":0},"end":{"line":1032,"col":40,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1041,"col":9,"offset":0},"end":{"line":1041,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1104,"col":41,"offset":0},"end":{"line":1104,"col":48,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1121,"col":9,"offset":0},"end":{"line":1121,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1130,"col":18,"offset":0},"end":{"line":1130,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1130,"col":38,"offset":0},"end":{"line":1130,"col":39,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1148,"col":9,"offset":0},"end":{"line":1148,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1185,"col":15,"offset":0},"end":{"line":1185,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1235,"col":9,"offset":0},"end":{"line":1235,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":30,"offset":0},"end":{"line":1238,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":43,"offset":0},"end":{"line":1238,"col":44,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":57,"offset":0},"end":{"line":1238,"col":61,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1238,"col":70,"offset":0},"end":{"line":1238,"col":71,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1242,"col":9,"offset":0},"end":{"line":1242,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1264,"col":30,"offset":0},"end":{"line":1264,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1267,"col":30,"offset":0},"end":{"line":1267,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1275,"col":9,"offset":0},"end":{"line":1275,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1296,"col":9,"offset":0},"end":{"line":1296,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":25,"offset":0},"end":{"line":1307,"col":30,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1307,"col":32,"offset":0},"end":{"line":1307,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1322,"col":9,"offset":0},"end":{"line":1322,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1333,"col":9,"offset":0},"end":{"line":1333,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":18,"offset":0},"end":{"line":1350,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1350,"col":36,"offset":0},"end":{"line":1350,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1386,"col":25,"offset":0},"end":{"line":1386,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1386,"col":32,"offset":0},"end":{"line":1386,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1452,"col":11,"offset":0},"end":{"line":1452,"col":19,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1463,"col":20,"offset":0},"end":{"line":1463,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1485,"col":13,"offset":0},"end":{"line":1485,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1502,"col":13,"offset":0},"end":{"line":1502,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1527,"col":9,"offset":0},"end":{"line":1527,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1586,"col":9,"offset":0},"end":{"line":1586,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1612,"col":9,"offset":0},"end":{"line":1612,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1629,"col":29,"offset":0},"end":{"line":1629,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1638,"col":9,"offset":0},"end":{"line":1638,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1682,"col":9,"offset":0},"end":{"line":1682,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1687,"col":32,"offset":0},"end":{"line":1687,"col":36,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1703,"col":9,"offset":0},"end":{"line":1703,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1713,"col":13,"offset":0},"end":{"line":1713,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1720,"col":9,"offset":0},"end":{"line":1720,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1727,"col":32,"offset":0},"end":{"line":1727,"col":36,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1736,"col":24,"offset":0},"end":{"line":1736,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1809,"col":45,"offset":0},"end":{"line":1809,"col":49,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1824,"col":9,"offset":0},"end":{"line":1824,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1864,"col":15,"offset":0},"end":{"line":1864,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1864,"col":43,"offset":0},"end":{"line":1864,"col":51,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":26,"offset":0},"end":{"line":1872,"col":31,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1872,"col":33,"offset":0},"end":{"line":1872,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1878,"col":25,"offset":0},"end":{"line":1878,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":24,"offset":0},"end":{"line":1887,"col":29,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1887,"col":31,"offset":0},"end":{"line":1887,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1898,"col":19,"offset":0},"end":{"line":1898,"col":28,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":1923,"col":19,"offset":0},"end":{"line":1923,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2011,"col":14,"offset":0},"end":{"line":2011,"col":42,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2011,"col":47,"offset":0},"end":{"line":2011,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2012,"col":24,"offset":0},"end":{"line":2012,"col":32,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2076,"col":34,"offset":0},"end":{"line":2076,"col":38,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2166,"col":22,"offset":0},"end":{"line":2166,"col":59,"offset":37}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2167,"col":43,"offset":0},"end":{"line":2167,"col":45,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2226,"col":9,"offset":0},"end":{"line":2226,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2264,"col":36,"offset":0},"end":{"line":2264,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2268,"col":19,"offset":0},"end":{"line":2268,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2281,"col":9,"offset":0},"end":{"line":2281,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2287,"col":9,"offset":0},"end":{"line":2287,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2294,"col":18,"offset":0},"end":{"line":2294,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2294,"col":42,"offset":0},"end":{"line":2294,"col":49,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2299,"col":43,"offset":0},"end":{"line":2299,"col":47,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2318,"col":8,"offset":0},"end":{"line":2318,"col":21,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2320,"col":30,"offset":0},"end":{"line":2320,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2338,"col":9,"offset":0},"end":{"line":2338,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2351,"col":9,"offset":0},"end":{"line":2351,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2365,"col":9,"offset":0},"end":{"line":2365,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2375,"col":9,"offset":0},"end":{"line":2375,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2421,"col":9,"offset":0},"end":{"line":2426,"col":25,"offset":198}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2540,"col":17,"offset":0},"end":{"line":2540,"col":45,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2541,"col":7,"offset":0},"end":{"line":2541,"col":9,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2544,"col":18,"offset":0},"end":{"line":2544,"col":47,"offset":29}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2545,"col":8,"offset":0},"end":{"line":2545,"col":10,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2546,"col":3,"offset":0},"end":{"line":2548,"col":9,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2570,"col":9,"offset":0},"end":{"line":2570,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2626,"col":9,"offset":0},"end":{"line":2626,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2689,"col":14,"offset":0},"end":{"line":2689,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2698,"col":19,"offset":0},"end":{"line":2698,"col":26,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2703,"col":39,"offset":0},"end":{"line":2703,"col":43,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2706,"col":17,"offset":0},"end":{"line":2706,"col":25,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2709,"col":14,"offset":0},"end":{"line":2709,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2712,"col":14,"offset":0},"end":{"line":2712,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2715,"col":14,"offset":0},"end":{"line":2715,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2743,"col":15,"offset":0},"end":{"line":2743,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2755,"col":38,"offset":0},"end":{"line":2756,"col":9,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2779,"col":41,"offset":0},"end":{"line":2779,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2782,"col":7,"offset":0},"end":{"line":2785,"col":20,"offset":126}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2788,"col":22,"offset":0},"end":{"line":2788,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2817,"col":17,"offset":0},"end":{"line":2817,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2869,"col":17,"offset":0},"end":{"line":2869,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2885,"col":17,"offset":0},"end":{"line":2885,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2889,"col":5,"offset":0},"end":{"line":2889,"col":10,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2889,"col":16,"offset":0},"end":{"line":2889,"col":21,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2894,"col":28,"offset":0},"end":{"line":2894,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2896,"col":30,"offset":0},"end":{"line":2896,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2902,"col":9,"offset":0},"end":{"line":2902,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2905,"col":29,"offset":0},"end":{"line":2905,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2907,"col":2,"offset":0},"end":{"line":2907,"col":38,"offset":36}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2920,"col":11,"offset":0},"end":{"line":2920,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":2980,"col":9,"offset":0},"end":{"line":2980,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3006,"col":9,"offset":0},"end":{"line":3006,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":18,"offset":0},"end":{"line":3011,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3011,"col":36,"offset":0},"end":{"line":3011,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3029,"col":9,"offset":0},"end":{"line":3029,"col":25,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":18,"offset":0},"end":{"line":3039,"col":24,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3039,"col":36,"offset":0},"end":{"line":3039,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3062,"col":18,"offset":0},"end":{"line":3062,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3065,"col":29,"offset":0},"end":{"line":3065,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3072,"col":21,"offset":0},"end":{"line":3072,"col":28,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3086,"col":14,"offset":0},"end":{"line":3086,"col":20,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3086,"col":32,"offset":0},"end":{"line":3086,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3090,"col":28,"offset":0},"end":{"line":3090,"col":35,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3107,"col":9,"offset":0},"end":{"line":3107,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3115,"col":13,"offset":0},"end":{"line":3115,"col":24,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3134,"col":17,"offset":0},"end":{"line":3134,"col":26,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3136,"col":38,"offset":0},"end":{"line":3136,"col":51,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3141,"col":30,"offset":0},"end":{"line":3141,"col":35,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3141,"col":37,"offset":0},"end":{"line":3141,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3166,"col":9,"offset":0},"end":{"line":3166,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3196,"col":43,"offset":0},"end":{"line":3196,"col":51,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3203,"col":45,"offset":0},"end":{"line":3203,"col":53,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3219,"col":15,"offset":0},"end":{"line":3219,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3223,"col":9,"offset":0},"end":{"line":3223,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3249,"col":42,"offset":0},"end":{"line":3249,"col":46,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3258,"col":36,"offset":0},"end":{"line":3258,"col":40,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3270,"col":9,"offset":0},"end":{"line":3270,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3281,"col":9,"offset":0},"end":{"line":3281,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":20,"offset":0},"end":{"line":3285,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":46,"offset":0},"end":{"line":3285,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3285,"col":50,"offset":0},"end":{"line":3285,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":20,"offset":0},"end":{"line":3286,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":46,"offset":0},"end":{"line":3286,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3286,"col":50,"offset":0},"end":{"line":3286,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3295,"col":9,"offset":0},"end":{"line":3295,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":20,"offset":0},"end":{"line":3299,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":46,"offset":0},"end":{"line":3299,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3299,"col":50,"offset":0},"end":{"line":3299,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":20,"offset":0},"end":{"line":3300,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":46,"offset":0},"end":{"line":3300,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3300,"col":50,"offset":0},"end":{"line":3300,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3311,"col":9,"offset":0},"end":{"line":3311,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":20,"offset":0},"end":{"line":3315,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":46,"offset":0},"end":{"line":3315,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3315,"col":50,"offset":0},"end":{"line":3315,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":20,"offset":0},"end":{"line":3316,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":46,"offset":0},"end":{"line":3316,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3316,"col":50,"offset":0},"end":{"line":3316,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3342,"col":9,"offset":0},"end":{"line":3342,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3346,"col":25,"offset":0},"end":{"line":3346,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3347,"col":28,"offset":0},"end":{"line":3347,"col":37,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3348,"col":25,"offset":0},"end":{"line":3348,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3359,"col":11,"offset":0},"end":{"line":3359,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3376,"col":11,"offset":0},"end":{"line":3376,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3380,"col":39,"offset":0},"end":{"line":3380,"col":52,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3380,"col":54,"offset":0},"end":{"line":3380,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","start":{"line":3421,"col":11,"offset":0},"end":{"line":3421,"col":14,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":40,"col":8,"offset":0},"end":{"line":40,"col":15,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":83,"col":8,"offset":0},"end":{"line":83,"col":15,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":100,"col":16,"offset":0},"end":{"line":100,"col":19,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/getline.c:40:\n `ssize_t` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/getline.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":40,"col":8,"offset":0},"end":{"line":40,"col":15,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":83,"col":8,"offset":0},"end":{"line":83,"col":15,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/getline.c","start":{"line":100,"col":16,"offset":0},"end":{"line":100,"col":19,"offset":3}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-use-after-free","message":"Timeout when running SEAM.semgrep-rules.c.raptor-use-after-free on /home/capstone/Desktop/root/file-5.38/src/softmagic.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":46,"col":9,"offset":0},"end":{"line":46,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":49,"col":9,"offset":0},"end":{"line":49,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":55,"col":9,"offset":0},"end":{"line":55,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":56,"col":9,"offset":0},"end":{"line":56,"col":16,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":57,"col":9,"offset":0},"end":{"line":57,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":62,"col":9,"offset":0},"end":{"line":62,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":63,"col":9,"offset":0},"end":{"line":63,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":64,"col":9,"offset":0},"end":{"line":64,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":65,"col":9,"offset":0},"end":{"line":65,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":66,"col":9,"offset":0},"end":{"line":66,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":68,"col":9,"offset":0},"end":{"line":68,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":116,"col":11,"offset":0},"end":{"line":116,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":146,"col":1,"offset":0},"end":{"line":146,"col":21,"offset":20}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":158,"col":7,"offset":0},"end":{"line":158,"col":14,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":193,"col":9,"offset":0},"end":{"line":193,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":226,"col":1,"offset":0},"end":{"line":226,"col":8,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":244,"col":37,"offset":0},"end":{"line":244,"col":50,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":244,"col":52,"offset":0},"end":{"line":244,"col":53,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":345,"col":38,"offset":0},"end":{"line":345,"col":51,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":345,"col":53,"offset":0},"end":{"line":345,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":463,"col":9,"offset":0},"end":{"line":463,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":512,"col":12,"offset":0},"end":{"line":512,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":560,"col":9,"offset":0},"end":{"line":560,"col":16,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":578,"col":35,"offset":0},"end":{"line":578,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":584,"col":22,"offset":0},"end":{"line":584,"col":26,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":590,"col":22,"offset":0},"end":{"line":590,"col":26,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":600,"col":35,"offset":0},"end":{"line":600,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":606,"col":22,"offset":0},"end":{"line":606,"col":27,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":612,"col":22,"offset":0},"end":{"line":612,"col":27,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":623,"col":35,"offset":0},"end":{"line":623,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":629,"col":13,"offset":0},"end":{"line":629,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":635,"col":13,"offset":0},"end":{"line":635,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":650,"col":37,"offset":0},"end":{"line":650,"col":40,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":651,"col":22,"offset":0},"end":{"line":651,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":656,"col":36,"offset":0},"end":{"line":656,"col":39,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":657,"col":22,"offset":0},"end":{"line":657,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":686,"col":19,"offset":0},"end":{"line":686,"col":47,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":687,"col":9,"offset":0},"end":{"line":687,"col":11,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":692,"col":19,"offset":0},"end":{"line":692,"col":48,"offset":29}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":693,"col":10,"offset":0},"end":{"line":693,"col":12,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":799,"col":28,"offset":0},"end":{"line":799,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":799,"col":34,"offset":0},"end":{"line":799,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":842,"col":14,"offset":0},"end":{"line":842,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":845,"col":9,"offset":0},"end":{"line":845,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":854,"col":19,"offset":0},"end":{"line":854,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":860,"col":19,"offset":0},"end":{"line":860,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":867,"col":19,"offset":0},"end":{"line":867,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":873,"col":19,"offset":0},"end":{"line":873,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":887,"col":21,"offset":0},"end":{"line":887,"col":22,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":889,"col":15,"offset":0},"end":{"line":889,"col":24,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":898,"col":19,"offset":0},"end":{"line":898,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":905,"col":19,"offset":0},"end":{"line":905,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":911,"col":19,"offset":0},"end":{"line":911,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":917,"col":19,"offset":0},"end":{"line":917,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":923,"col":19,"offset":0},"end":{"line":923,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":929,"col":19,"offset":0},"end":{"line":929,"col":20,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":934,"col":13,"offset":0},"end":{"line":934,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":936,"col":20,"offset":0},"end":{"line":936,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":942,"col":13,"offset":0},"end":{"line":942,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":944,"col":20,"offset":0},"end":{"line":944,"col":21,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":956,"col":24,"offset":0},"end":{"line":956,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":960,"col":10,"offset":0},"end":{"line":960,"col":23,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":973,"col":11,"offset":0},"end":{"line":973,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":975,"col":45,"offset":0},"end":{"line":975,"col":58,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":984,"col":9,"offset":0},"end":{"line":984,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":996,"col":9,"offset":0},"end":{"line":996,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1081,"col":9,"offset":0},"end":{"line":1081,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1084,"col":2,"offset":0},"end":{"line":1084,"col":20,"offset":18}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1088,"col":9,"offset":0},"end":{"line":1088,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1091,"col":2,"offset":0},"end":{"line":1091,"col":21,"offset":19}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1095,"col":9,"offset":0},"end":{"line":1095,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1098,"col":2,"offset":0},"end":{"line":1098,"col":21,"offset":19}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1102,"col":9,"offset":0},"end":{"line":1102,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1105,"col":2,"offset":0},"end":{"line":1105,"col":21,"offset":19}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1128,"col":9,"offset":0},"end":{"line":1128,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1131,"col":2,"offset":0},"end":{"line":1131,"col":19,"offset":17}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1135,"col":9,"offset":0},"end":{"line":1135,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1138,"col":2,"offset":0},"end":{"line":1138,"col":20,"offset":18}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1147,"col":9,"offset":0},"end":{"line":1147,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1210,"col":15,"offset":0},"end":{"line":1210,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1218,"col":15,"offset":0},"end":{"line":1218,"col":24,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1230,"col":15,"offset":0},"end":{"line":1230,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1238,"col":15,"offset":0},"end":{"line":1238,"col":24,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1245,"col":15,"offset":0},"end":{"line":1245,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1295,"col":9,"offset":0},"end":{"line":1295,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1298,"col":25,"offset":0},"end":{"line":1298,"col":33,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1304,"col":9,"offset":0},"end":{"line":1304,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1317,"col":19,"offset":0},"end":{"line":1317,"col":28,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1318,"col":31,"offset":0},"end":{"line":1318,"col":35,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1318,"col":37,"offset":0},"end":{"line":1318,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1350,"col":22,"offset":0},"end":{"line":1350,"col":26,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1350,"col":28,"offset":0},"end":{"line":1350,"col":29,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1351,"col":29,"offset":0},"end":{"line":1351,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1351,"col":35,"offset":0},"end":{"line":1351,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1354,"col":26,"offset":0},"end":{"line":1354,"col":30,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1354,"col":32,"offset":0},"end":{"line":1354,"col":33,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1355,"col":37,"offset":0},"end":{"line":1355,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1356,"col":28,"offset":0},"end":{"line":1356,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1356,"col":34,"offset":0},"end":{"line":1356,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1357,"col":33,"offset":0},"end":{"line":1357,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1426,"col":22,"offset":0},"end":{"line":1426,"col":29,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1426,"col":36,"offset":0},"end":{"line":1426,"col":43,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1431,"col":9,"offset":0},"end":{"line":1431,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1467,"col":14,"offset":0},"end":{"line":1467,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1470,"col":9,"offset":0},"end":{"line":1470,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1488,"col":42,"offset":0},"end":{"line":1488,"col":55,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1492,"col":12,"offset":0},"end":{"line":1492,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1495,"col":35,"offset":0},"end":{"line":1495,"col":43,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1508,"col":19,"offset":0},"end":{"line":1508,"col":29,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1516,"col":9,"offset":0},"end":{"line":1516,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1547,"col":11,"offset":0},"end":{"line":1547,"col":20,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1547,"col":39,"offset":0},"end":{"line":1547,"col":48,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1552,"col":7,"offset":0},"end":{"line":1552,"col":20,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1556,"col":3,"offset":0},"end":{"line":1557,"col":31,"offset":78}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1567,"col":36,"offset":0},"end":{"line":1567,"col":47,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1567,"col":59,"offset":0},"end":{"line":1567,"col":60,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1568,"col":20,"offset":0},"end":{"line":1568,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1568,"col":26,"offset":0},"end":{"line":1568,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1655,"col":28,"offset":0},"end":{"line":1655,"col":37,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1664,"col":28,"offset":0},"end":{"line":1664,"col":37,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1707,"col":4,"offset":0},"end":{"line":1708,"col":32,"offset":79}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1769,"col":19,"offset":0},"end":{"line":1769,"col":28,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1849,"col":9,"offset":0},"end":{"line":1849,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1858,"col":39,"offset":0},"end":{"line":1858,"col":52,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1858,"col":54,"offset":0},"end":{"line":1858,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1859,"col":39,"offset":0},"end":{"line":1859,"col":52,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1859,"col":54,"offset":0},"end":{"line":1859,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1917,"col":9,"offset":0},"end":{"line":1917,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1929,"col":9,"offset":0},"end":{"line":1929,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2054,"col":43,"offset":0},"end":{"line":2054,"col":50,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2061,"col":45,"offset":0},"end":{"line":2061,"col":52,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2081,"col":23,"offset":0},"end":{"line":2081,"col":27,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2081,"col":29,"offset":0},"end":{"line":2081,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2120,"col":13,"offset":0},"end":{"line":2120,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2126,"col":20,"offset":0},"end":{"line":2126,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2130,"col":28,"offset":0},"end":{"line":2130,"col":41,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2138,"col":23,"offset":0},"end":{"line":2138,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2141,"col":39,"offset":0},"end":{"line":2141,"col":43,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2141,"col":45,"offset":0},"end":{"line":2141,"col":46,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2146,"col":26,"offset":0},"end":{"line":2146,"col":30,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2147,"col":31,"offset":0},"end":{"line":2147,"col":38,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2148,"col":30,"offset":0},"end":{"line":2148,"col":37,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2159,"col":14,"offset":0},"end":{"line":2159,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2164,"col":17,"offset":0},"end":{"line":2164,"col":26,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2192,"col":27,"offset":0},"end":{"line":2192,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2193,"col":42,"offset":0},"end":{"line":2193,"col":51,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2200,"col":27,"offset":0},"end":{"line":2200,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2202,"col":22,"offset":0},"end":{"line":2202,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2203,"col":22,"offset":0},"end":{"line":2203,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2209,"col":27,"offset":0},"end":{"line":2209,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2211,"col":22,"offset":0},"end":{"line":2211,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2212,"col":22,"offset":0},"end":{"line":2212,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2219,"col":28,"offset":0},"end":{"line":2219,"col":31,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2221,"col":23,"offset":0},"end":{"line":2221,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2222,"col":23,"offset":0},"end":{"line":2222,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2225,"col":19,"offset":0},"end":{"line":2225,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2225,"col":38,"offset":0},"end":{"line":2225,"col":46,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2227,"col":28,"offset":0},"end":{"line":2227,"col":31,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2229,"col":19,"offset":0},"end":{"line":2229,"col":23,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2230,"col":19,"offset":0},"end":{"line":2230,"col":23,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2238,"col":28,"offset":0},"end":{"line":2238,"col":31,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2240,"col":23,"offset":0},"end":{"line":2240,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2241,"col":23,"offset":0},"end":{"line":2241,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2244,"col":19,"offset":0},"end":{"line":2244,"col":27,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2244,"col":38,"offset":0},"end":{"line":2244,"col":46,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2246,"col":28,"offset":0},"end":{"line":2246,"col":31,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2248,"col":20,"offset":0},"end":{"line":2248,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2249,"col":20,"offset":0},"end":{"line":2249,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2256,"col":27,"offset":0},"end":{"line":2256,"col":32,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2258,"col":35,"offset":0},"end":{"line":2258,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2259,"col":22,"offset":0},"end":{"line":2259,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2260,"col":22,"offset":0},"end":{"line":2260,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2267,"col":27,"offset":0},"end":{"line":2267,"col":32,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2269,"col":35,"offset":0},"end":{"line":2269,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2270,"col":22,"offset":0},"end":{"line":2270,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2271,"col":22,"offset":0},"end":{"line":2271,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2283,"col":9,"offset":0},"end":{"line":2283,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2316,"col":9,"offset":0},"end":{"line":2316,"col":12,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/softmagic.c:46:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":46,"col":9,"offset":0},"end":{"line":46,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":49,"col":9,"offset":0},"end":{"line":49,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":55,"col":9,"offset":0},"end":{"line":55,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":56,"col":9,"offset":0},"end":{"line":56,"col":16,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":57,"col":9,"offset":0},"end":{"line":57,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":62,"col":9,"offset":0},"end":{"line":62,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":63,"col":9,"offset":0},"end":{"line":63,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":64,"col":9,"offset":0},"end":{"line":64,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":65,"col":9,"offset":0},"end":{"line":65,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":66,"col":9,"offset":0},"end":{"line":66,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":68,"col":9,"offset":0},"end":{"line":68,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":116,"col":11,"offset":0},"end":{"line":116,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":146,"col":1,"offset":0},"end":{"line":146,"col":21,"offset":20}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":158,"col":7,"offset":0},"end":{"line":158,"col":14,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":193,"col":9,"offset":0},"end":{"line":193,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":226,"col":1,"offset":0},"end":{"line":226,"col":8,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":244,"col":37,"offset":0},"end":{"line":244,"col":50,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":244,"col":52,"offset":0},"end":{"line":244,"col":53,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":345,"col":38,"offset":0},"end":{"line":345,"col":51,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":345,"col":53,"offset":0},"end":{"line":345,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":463,"col":9,"offset":0},"end":{"line":463,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":512,"col":12,"offset":0},"end":{"line":512,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":560,"col":9,"offset":0},"end":{"line":560,"col":16,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":578,"col":35,"offset":0},"end":{"line":578,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":584,"col":22,"offset":0},"end":{"line":584,"col":26,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":590,"col":22,"offset":0},"end":{"line":590,"col":26,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":600,"col":35,"offset":0},"end":{"line":600,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":606,"col":22,"offset":0},"end":{"line":606,"col":27,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":612,"col":22,"offset":0},"end":{"line":612,"col":27,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":623,"col":35,"offset":0},"end":{"line":623,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":629,"col":13,"offset":0},"end":{"line":629,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":635,"col":13,"offset":0},"end":{"line":635,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":650,"col":37,"offset":0},"end":{"line":650,"col":40,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":651,"col":22,"offset":0},"end":{"line":651,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":656,"col":36,"offset":0},"end":{"line":656,"col":39,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":657,"col":22,"offset":0},"end":{"line":657,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":686,"col":19,"offset":0},"end":{"line":686,"col":47,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":687,"col":9,"offset":0},"end":{"line":687,"col":11,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":692,"col":19,"offset":0},"end":{"line":692,"col":48,"offset":29}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":693,"col":10,"offset":0},"end":{"line":693,"col":12,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":799,"col":28,"offset":0},"end":{"line":799,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":799,"col":34,"offset":0},"end":{"line":799,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":842,"col":14,"offset":0},"end":{"line":842,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":845,"col":9,"offset":0},"end":{"line":845,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":854,"col":19,"offset":0},"end":{"line":854,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":860,"col":19,"offset":0},"end":{"line":860,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":867,"col":19,"offset":0},"end":{"line":867,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":873,"col":19,"offset":0},"end":{"line":873,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":887,"col":21,"offset":0},"end":{"line":887,"col":22,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":889,"col":15,"offset":0},"end":{"line":889,"col":24,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":898,"col":19,"offset":0},"end":{"line":898,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":905,"col":19,"offset":0},"end":{"line":905,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":911,"col":19,"offset":0},"end":{"line":911,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":917,"col":19,"offset":0},"end":{"line":917,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":923,"col":19,"offset":0},"end":{"line":923,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":929,"col":19,"offset":0},"end":{"line":929,"col":20,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":934,"col":13,"offset":0},"end":{"line":934,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":936,"col":20,"offset":0},"end":{"line":936,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":942,"col":13,"offset":0},"end":{"line":942,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":944,"col":20,"offset":0},"end":{"line":944,"col":21,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":956,"col":24,"offset":0},"end":{"line":956,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":960,"col":10,"offset":0},"end":{"line":960,"col":23,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":973,"col":11,"offset":0},"end":{"line":973,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":975,"col":45,"offset":0},"end":{"line":975,"col":58,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":984,"col":9,"offset":0},"end":{"line":984,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":996,"col":9,"offset":0},"end":{"line":996,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1081,"col":9,"offset":0},"end":{"line":1081,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1084,"col":2,"offset":0},"end":{"line":1084,"col":20,"offset":18}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1088,"col":9,"offset":0},"end":{"line":1088,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1091,"col":2,"offset":0},"end":{"line":1091,"col":21,"offset":19}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1095,"col":9,"offset":0},"end":{"line":1095,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1098,"col":2,"offset":0},"end":{"line":1098,"col":21,"offset":19}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1102,"col":9,"offset":0},"end":{"line":1102,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1105,"col":2,"offset":0},"end":{"line":1105,"col":21,"offset":19}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1128,"col":9,"offset":0},"end":{"line":1128,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1131,"col":2,"offset":0},"end":{"line":1131,"col":19,"offset":17}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1135,"col":9,"offset":0},"end":{"line":1135,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1138,"col":2,"offset":0},"end":{"line":1138,"col":20,"offset":18}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1147,"col":9,"offset":0},"end":{"line":1147,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1210,"col":15,"offset":0},"end":{"line":1210,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1218,"col":15,"offset":0},"end":{"line":1218,"col":24,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1230,"col":15,"offset":0},"end":{"line":1230,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1238,"col":15,"offset":0},"end":{"line":1238,"col":24,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1245,"col":15,"offset":0},"end":{"line":1245,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1295,"col":9,"offset":0},"end":{"line":1295,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1298,"col":25,"offset":0},"end":{"line":1298,"col":33,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1304,"col":9,"offset":0},"end":{"line":1304,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1317,"col":19,"offset":0},"end":{"line":1317,"col":28,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1318,"col":31,"offset":0},"end":{"line":1318,"col":35,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1318,"col":37,"offset":0},"end":{"line":1318,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1350,"col":22,"offset":0},"end":{"line":1350,"col":26,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1350,"col":28,"offset":0},"end":{"line":1350,"col":29,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1351,"col":29,"offset":0},"end":{"line":1351,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1351,"col":35,"offset":0},"end":{"line":1351,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1354,"col":26,"offset":0},"end":{"line":1354,"col":30,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1354,"col":32,"offset":0},"end":{"line":1354,"col":33,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1355,"col":37,"offset":0},"end":{"line":1355,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1356,"col":28,"offset":0},"end":{"line":1356,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1356,"col":34,"offset":0},"end":{"line":1356,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1357,"col":33,"offset":0},"end":{"line":1357,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1426,"col":22,"offset":0},"end":{"line":1426,"col":29,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1426,"col":36,"offset":0},"end":{"line":1426,"col":43,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1431,"col":9,"offset":0},"end":{"line":1431,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1467,"col":14,"offset":0},"end":{"line":1467,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1470,"col":9,"offset":0},"end":{"line":1470,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1488,"col":42,"offset":0},"end":{"line":1488,"col":55,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1492,"col":12,"offset":0},"end":{"line":1492,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1495,"col":35,"offset":0},"end":{"line":1495,"col":43,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1508,"col":19,"offset":0},"end":{"line":1508,"col":29,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1516,"col":9,"offset":0},"end":{"line":1516,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1547,"col":11,"offset":0},"end":{"line":1547,"col":20,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1547,"col":39,"offset":0},"end":{"line":1547,"col":48,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1552,"col":7,"offset":0},"end":{"line":1552,"col":20,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1556,"col":3,"offset":0},"end":{"line":1557,"col":31,"offset":78}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1567,"col":36,"offset":0},"end":{"line":1567,"col":47,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1567,"col":59,"offset":0},"end":{"line":1567,"col":60,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1568,"col":20,"offset":0},"end":{"line":1568,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1568,"col":26,"offset":0},"end":{"line":1568,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1655,"col":28,"offset":0},"end":{"line":1655,"col":37,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1664,"col":28,"offset":0},"end":{"line":1664,"col":37,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1707,"col":4,"offset":0},"end":{"line":1708,"col":32,"offset":79}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1769,"col":19,"offset":0},"end":{"line":1769,"col":28,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1849,"col":9,"offset":0},"end":{"line":1849,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1858,"col":39,"offset":0},"end":{"line":1858,"col":52,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1858,"col":54,"offset":0},"end":{"line":1858,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1859,"col":39,"offset":0},"end":{"line":1859,"col":52,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1859,"col":54,"offset":0},"end":{"line":1859,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1917,"col":9,"offset":0},"end":{"line":1917,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":1929,"col":9,"offset":0},"end":{"line":1929,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2054,"col":43,"offset":0},"end":{"line":2054,"col":50,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2061,"col":45,"offset":0},"end":{"line":2061,"col":52,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2081,"col":23,"offset":0},"end":{"line":2081,"col":27,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2081,"col":29,"offset":0},"end":{"line":2081,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2120,"col":13,"offset":0},"end":{"line":2120,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2126,"col":20,"offset":0},"end":{"line":2126,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2130,"col":28,"offset":0},"end":{"line":2130,"col":41,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2138,"col":23,"offset":0},"end":{"line":2138,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2141,"col":39,"offset":0},"end":{"line":2141,"col":43,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2141,"col":45,"offset":0},"end":{"line":2141,"col":46,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2146,"col":26,"offset":0},"end":{"line":2146,"col":30,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2147,"col":31,"offset":0},"end":{"line":2147,"col":38,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2148,"col":30,"offset":0},"end":{"line":2148,"col":37,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2159,"col":14,"offset":0},"end":{"line":2159,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2164,"col":17,"offset":0},"end":{"line":2164,"col":26,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2192,"col":27,"offset":0},"end":{"line":2192,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2193,"col":42,"offset":0},"end":{"line":2193,"col":51,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2200,"col":27,"offset":0},"end":{"line":2200,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2202,"col":22,"offset":0},"end":{"line":2202,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2203,"col":22,"offset":0},"end":{"line":2203,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2209,"col":27,"offset":0},"end":{"line":2209,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2211,"col":22,"offset":0},"end":{"line":2211,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2212,"col":22,"offset":0},"end":{"line":2212,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2219,"col":28,"offset":0},"end":{"line":2219,"col":31,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2221,"col":23,"offset":0},"end":{"line":2221,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2222,"col":23,"offset":0},"end":{"line":2222,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2225,"col":19,"offset":0},"end":{"line":2225,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2225,"col":38,"offset":0},"end":{"line":2225,"col":46,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2227,"col":28,"offset":0},"end":{"line":2227,"col":31,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2229,"col":19,"offset":0},"end":{"line":2229,"col":23,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2230,"col":19,"offset":0},"end":{"line":2230,"col":23,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2238,"col":28,"offset":0},"end":{"line":2238,"col":31,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2240,"col":23,"offset":0},"end":{"line":2240,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2241,"col":23,"offset":0},"end":{"line":2241,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2244,"col":19,"offset":0},"end":{"line":2244,"col":27,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2244,"col":38,"offset":0},"end":{"line":2244,"col":46,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2246,"col":28,"offset":0},"end":{"line":2246,"col":31,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2248,"col":20,"offset":0},"end":{"line":2248,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2249,"col":20,"offset":0},"end":{"line":2249,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2256,"col":27,"offset":0},"end":{"line":2256,"col":32,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2258,"col":35,"offset":0},"end":{"line":2258,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2259,"col":22,"offset":0},"end":{"line":2259,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2260,"col":22,"offset":0},"end":{"line":2260,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2267,"col":27,"offset":0},"end":{"line":2267,"col":32,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2269,"col":35,"offset":0},"end":{"line":2269,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2270,"col":22,"offset":0},"end":{"line":2270,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2271,"col":22,"offset":0},"end":{"line":2271,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2283,"col":9,"offset":0},"end":{"line":2283,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/softmagic.c","start":{"line":2316,"col":9,"offset":0},"end":{"line":2316,"col":12,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":44,"col":11,"offset":0},"end":{"line":44,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":95,"col":2,"offset":0},"end":{"line":95,"col":6,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/apptype.c:44:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":44,"col":11,"offset":0},"end":{"line":44,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/apptype.c","start":{"line":95,"col":2,"offset":0},"end":{"line":95,"col":6,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":62,"col":11,"offset":0},"end":{"line":62,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":65,"col":40,"offset":0},"end":{"line":65,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":65,"col":55,"offset":0},"end":{"line":65,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":98,"col":9,"offset":0},"end":{"line":98,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":101,"col":37,"offset":0},"end":{"line":101,"col":48,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":101,"col":57,"offset":0},"end":{"line":101,"col":58,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":102,"col":18,"offset":0},"end":{"line":102,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":102,"col":24,"offset":0},"end":{"line":102,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":151,"col":37,"offset":0},"end":{"line":151,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":151,"col":45,"offset":0},"end":{"line":152,"col":10,"offset":31}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":162,"col":51,"offset":0},"end":{"line":162,"col":55,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":166,"col":1,"offset":0},"end":{"line":166,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/is_tar.c:53:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":62,"col":11,"offset":0},"end":{"line":62,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":65,"col":40,"offset":0},"end":{"line":65,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":65,"col":55,"offset":0},"end":{"line":65,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":98,"col":9,"offset":0},"end":{"line":98,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":101,"col":37,"offset":0},"end":{"line":101,"col":48,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":101,"col":57,"offset":0},"end":{"line":101,"col":58,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":102,"col":18,"offset":0},"end":{"line":102,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":102,"col":24,"offset":0},"end":{"line":102,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":143,"col":9,"offset":0},"end":{"line":143,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":151,"col":37,"offset":0},"end":{"line":151,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":151,"col":45,"offset":0},"end":{"line":152,"col":10,"offset":31}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":162,"col":51,"offset":0},"end":{"line":162,"col":55,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/is_tar.c","start":{"line":166,"col":1,"offset":0},"end":{"line":166,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":49,"col":11,"offset":0},"end":{"line":49,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":66,"col":8,"offset":0},"end":{"line":66,"col":31,"offset":23}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":68,"col":58,"offset":0},"end":{"line":68,"col":59,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":113,"col":12,"offset":0},"end":{"line":113,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":121,"col":22,"offset":0},"end":{"line":121,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":142,"col":27,"offset":0},"end":{"line":142,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":143,"col":18,"offset":0},"end":{"line":143,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":152,"col":13,"offset":0},"end":{"line":152,"col":20,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":214,"col":11,"offset":0},"end":{"line":214,"col":15,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":224,"col":21,"offset":0},"end":{"line":224,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":232,"col":17,"offset":0},"end":{"line":232,"col":21,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/print.c:49:\n `void` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/print.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":49,"col":11,"offset":0},"end":{"line":49,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":66,"col":8,"offset":0},"end":{"line":66,"col":31,"offset":23}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":68,"col":58,"offset":0},"end":{"line":68,"col":59,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":113,"col":12,"offset":0},"end":{"line":113,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":121,"col":22,"offset":0},"end":{"line":121,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":142,"col":27,"offset":0},"end":{"line":142,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":143,"col":18,"offset":0},"end":{"line":143,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":152,"col":13,"offset":0},"end":{"line":152,"col":20,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":214,"col":11,"offset":0},"end":{"line":214,"col":15,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":224,"col":21,"offset":0},"end":{"line":224,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/print.c","start":{"line":232,"col":17,"offset":0},"end":{"line":232,"col":21,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":204,"col":14,"offset":0},"end":{"line":204,"col":23,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":221,"col":32,"offset":0},"end":{"line":221,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":221,"col":41,"offset":0},"end":{"line":221,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":227,"col":55,"offset":0},"end":{"line":227,"col":59,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":227,"col":61,"offset":0},"end":{"line":227,"col":62,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":243,"col":33,"offset":0},"end":{"line":243,"col":40,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":243,"col":42,"offset":0},"end":{"line":243,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":248,"col":11,"offset":0},"end":{"line":248,"col":22,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":254,"col":11,"offset":0},"end":{"line":254,"col":22,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":261,"col":25,"offset":0},"end":{"line":261,"col":38,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":267,"col":42,"offset":0},"end":{"line":267,"col":46,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":271,"col":14,"offset":0},"end":{"line":271,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":277,"col":33,"offset":0},"end":{"line":277,"col":40,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":277,"col":42,"offset":0},"end":{"line":277,"col":43,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":310,"col":30,"offset":0},"end":{"line":310,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":316,"col":38,"offset":0},"end":{"line":316,"col":41,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":318,"col":20,"offset":0},"end":{"line":318,"col":31,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":325,"col":31,"offset":0},"end":{"line":325,"col":44,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":375,"col":10,"offset":0},"end":{"line":375,"col":13,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/der.c:204:\n `uint32_t,` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/der.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":204,"col":14,"offset":0},"end":{"line":204,"col":23,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":221,"col":32,"offset":0},"end":{"line":221,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":221,"col":41,"offset":0},"end":{"line":221,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":227,"col":55,"offset":0},"end":{"line":227,"col":59,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":227,"col":61,"offset":0},"end":{"line":227,"col":62,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":243,"col":33,"offset":0},"end":{"line":243,"col":40,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":243,"col":42,"offset":0},"end":{"line":243,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":248,"col":11,"offset":0},"end":{"line":248,"col":22,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":254,"col":11,"offset":0},"end":{"line":254,"col":22,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":261,"col":25,"offset":0},"end":{"line":261,"col":38,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":267,"col":42,"offset":0},"end":{"line":267,"col":46,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":271,"col":14,"offset":0},"end":{"line":271,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":277,"col":33,"offset":0},"end":{"line":277,"col":40,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":277,"col":42,"offset":0},"end":{"line":277,"col":43,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":310,"col":30,"offset":0},"end":{"line":310,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":316,"col":38,"offset":0},"end":{"line":316,"col":41,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":318,"col":20,"offset":0},"end":{"line":318,"col":31,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":325,"col":31,"offset":0},"end":{"line":325,"col":44,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/der.c","start":{"line":375,"col":10,"offset":0},"end":{"line":375,"col":13,"offset":3}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/file-5.38/src/cdf.h:1:\n Common.Impossible","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1651,"col":23,"offset":0},"end":{"line":1651,"col":27,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/readelf.c:45:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1651,"col":23,"offset":0},"end":{"line":1651,"col":27,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":45,"col":12,"offset":0},"end":{"line":45,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":60,"col":12,"offset":0},"end":{"line":60,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":70,"col":12,"offset":0},"end":{"line":70,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":72,"col":12,"offset":0},"end":{"line":72,"col":16,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/elfclass.h:45:\n `size_t,` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":45,"col":12,"offset":0},"end":{"line":45,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":60,"col":12,"offset":0},"end":{"line":60,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":70,"col":12,"offset":0},"end":{"line":70,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/elfclass.h","start":{"line":72,"col":12,"offset":0},"end":{"line":72,"col":16,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":53,"col":18,"offset":0},"end":{"line":53,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":69,"col":11,"offset":0},"end":{"line":69,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":82,"col":33,"offset":0},"end":{"line":82,"col":46,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":82,"col":48,"offset":0},"end":{"line":82,"col":49,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":103,"col":11,"offset":0},"end":{"line":103,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":109,"col":40,"offset":0},"end":{"line":109,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":109,"col":55,"offset":0},"end":{"line":109,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":130,"col":30,"offset":0},"end":{"line":130,"col":37,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":33,"offset":0},"end":{"line":146,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":39,"offset":0},"end":{"line":146,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":154,"col":12,"offset":0},"end":{"line":154,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":338,"col":18,"offset":0},"end":{"line":338,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":348,"col":27,"offset":0},"end":{"line":348,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":352,"col":27,"offset":0},"end":{"line":352,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":353,"col":27,"offset":0},"end":{"line":353,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":357,"col":27,"offset":0},"end":{"line":357,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":358,"col":27,"offset":0},"end":{"line":358,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":359,"col":27,"offset":0},"end":{"line":359,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":363,"col":27,"offset":0},"end":{"line":363,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":364,"col":27,"offset":0},"end":{"line":364,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":365,"col":27,"offset":0},"end":{"line":365,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":366,"col":27,"offset":0},"end":{"line":366,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":370,"col":27,"offset":0},"end":{"line":370,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":371,"col":27,"offset":0},"end":{"line":371,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":372,"col":27,"offset":0},"end":{"line":372,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":373,"col":27,"offset":0},"end":{"line":373,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":374,"col":27,"offset":0},"end":{"line":374,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":378,"col":27,"offset":0},"end":{"line":378,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":379,"col":27,"offset":0},"end":{"line":379,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":380,"col":27,"offset":0},"end":{"line":380,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":381,"col":27,"offset":0},"end":{"line":381,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":382,"col":27,"offset":0},"end":{"line":382,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":383,"col":27,"offset":0},"end":{"line":383,"col":31,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/ascmagic.c:53:\n `char` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":53,"col":18,"offset":0},"end":{"line":53,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":69,"col":11,"offset":0},"end":{"line":69,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":82,"col":33,"offset":0},"end":{"line":82,"col":46,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":82,"col":48,"offset":0},"end":{"line":82,"col":49,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":103,"col":11,"offset":0},"end":{"line":103,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":109,"col":40,"offset":0},"end":{"line":109,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":109,"col":55,"offset":0},"end":{"line":109,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":130,"col":30,"offset":0},"end":{"line":130,"col":37,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":33,"offset":0},"end":{"line":146,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":146,"col":39,"offset":0},"end":{"line":146,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":154,"col":12,"offset":0},"end":{"line":154,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":338,"col":18,"offset":0},"end":{"line":338,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":348,"col":27,"offset":0},"end":{"line":348,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":352,"col":27,"offset":0},"end":{"line":352,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":353,"col":27,"offset":0},"end":{"line":353,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":357,"col":27,"offset":0},"end":{"line":357,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":358,"col":27,"offset":0},"end":{"line":358,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":359,"col":27,"offset":0},"end":{"line":359,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":363,"col":27,"offset":0},"end":{"line":363,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":364,"col":27,"offset":0},"end":{"line":364,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":365,"col":27,"offset":0},"end":{"line":365,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":366,"col":27,"offset":0},"end":{"line":366,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":370,"col":27,"offset":0},"end":{"line":370,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":371,"col":27,"offset":0},"end":{"line":371,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":372,"col":27,"offset":0},"end":{"line":372,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":373,"col":27,"offset":0},"end":{"line":373,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":374,"col":27,"offset":0},"end":{"line":374,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":378,"col":27,"offset":0},"end":{"line":378,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":379,"col":27,"offset":0},"end":{"line":379,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":380,"col":27,"offset":0},"end":{"line":380,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":381,"col":27,"offset":0},"end":{"line":381,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":382,"col":27,"offset":0},"end":{"line":382,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","start":{"line":383,"col":27,"offset":0},"end":{"line":383,"col":31,"offset":4}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/file-5.38/src/readcdf.c:1:\n Failure: should not be empty by precondition","path":"/home/capstone/Desktop/root/file-5.38/src/readcdf.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1650,"col":23,"offset":0},"end":{"line":1650,"col":27,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c:45:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1650,"col":23,"offset":0},"end":{"line":1650,"col":27,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","start":{"line":62,"col":1,"offset":0},"end":{"line":63,"col":48,"offset":58}},{"path":"/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","start":{"line":106,"col":12,"offset":0},"end":{"line":106,"col":13,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/fmtcheck.c:62:\n `static EFT\nget_next_format_from_precision(const char **pf)` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","start":{"line":62,"col":1,"offset":0},"end":{"line":63,"col":48,"offset":58}},{"file":"/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","start":{"line":106,"col":12,"offset":0},"end":{"line":106,"col":13,"offset":1}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/magic.c:1:\n `/*\n * Copyright (c) Christos Zoulas 2003.\n * All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice immediately at the beginning of the file, without modification,\n *    this list of conditions, and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR\n * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\n#ifdef WIN32\n#include <windows.h>\n#include <shlwapi.h>\n#endif\n\n#include \"file.h\"\n\n#ifndef\tlint\nFILE_RCSID(\"@(#)$File: magic.c,v 1.111 2019/05/07 02:27:11 christos Exp $\")\n#endif\t/* lint */\n\n#include \"magic.h\"\n\n#include <stdlib.h>\n#include <unistd.h>\n#include <string.h>\n#ifdef QUICK\n#include <sys/mman.h>\n#endif\n#include <limits.h>\t/* for PIPE_BUF */\n\n#if defined(HAVE_UTIMES)\n# include <sys/time.h>\n#elif defined(HAVE_UTIME)\n# if defined(HAVE_SYS_UTIME_H)\n#  include <sys/utime.h>\n# elif defined(HAVE_UTIME_H)\n#  include <utime.h>\n# endif\n#endif\n\n#ifdef HAVE_UNISTD_H\n#include <unistd.h>\t/* for read() */\n#endif\n\n#ifndef PIPE_BUF\n/* Get the PIPE_BUF from pathconf */\n#ifdef _PC_PIPE_BUF\n#define PIPE_BUF pathconf(\".\", _PC_PIPE_BUF)\n#else\n#define PIPE_BUF 512\n#endif\n#endif\n\nprivate void close_and_restore(const struct magic_set *, const char *, int,\n    const struct stat *);\nprivate int unreadable_info(struct magic_set *, mode_t, const char *);\nprivate const char* get_default_magic(void);\n#ifndef COMPILE_ONLY\nprivate const char *file_or_fd(struct magic_set *, const char *, int);\n#endif\n\n#ifndef\tSTDIN_FILENO\n#define\tSTDIN_FILENO\t0\n#endif\n\n#ifdef WIN32\n/* HINSTANCE of this shared library. Needed for get_default_magic() */\nstatic HINSTANCE _w32_dll_instance = NULL;\n\nstatic void\n_w32_append_path(char **hmagicpath, const char *fmt, ...)\n{\n\tchar *tmppath;\n        char *newpath;\n\tva_list ap;\n\n\tva_start(ap, fmt);\n\tif (vasprintf(&tmppath, fmt, ap) < 0) {\n\t\tva_end(ap);\n\t\treturn;\n\t}\n\tva_end(ap);\n\n\tif (access(tmppath, R_OK) == -1)\n\t\tgoto out;\n\n\tif (*hmagicpath == NULL) {\n\t\t*hmagicpath = tmppath;\n\t\treturn;\n\t}\n\n\tif (asprintf(&newpath, \"%s%c%s\", *hmagicpath, PATHSEP, tmppath) < 0)\n\t\tgoto out;\n\n\tfree(*hmagicpath);\n\tfree(tmppath);\n\t*hmagicpath = newpath;\n\treturn;\nout:\n\tfree(tmppath);\n}\n\nstatic void\n_w32_get_magic_relative_to(char **hmagicpath, HINSTANCE module)\n{\n\tstatic const char *trypaths[] = {\n\t\t\"%s/share/misc/magic.mgc\",\n\t\t\"%s/magic.mgc\",\n\t};\n\tLPSTR dllpath;\n\tsize_t sp;\n\n\tdllpath = calloc(MAX_PATH + 1, sizeof(*dllpath));\n\n\tif (!GetModuleFileNameA(module, dllpath, MAX_PATH))\n\t\tgoto out;\n\n\tPathRemoveFileSpecA(dllpath);\n\n\tif (module) {\n\t\tchar exepath[MAX_PATH];\n\t\tGetModuleFileNameA(NULL, exepath, MAX_PATH);\n\t\tPathRemoveFileSpecA(exepath);\n\t\tif (stricmp(exepath, dllpath) == 0)\n\t\t\tgoto out;\n\t}\n\n\tsp = strlen(dllpath);\n\tif (sp > 3 && stricmp(&dllpath[sp - 3], \"bin\") == 0) {\n\t\t_w32_append_path(hmagicpath,\n\t\t    \"%s/../share/misc/magic.mgc\", dllpath);\n\t\tgoto out;\n\t}\n\n\tfor (sp = 0; sp < __arraycount(trypaths); sp++)\n\t\t_w32_append_path(hmagicpath, trypaths[sp], dllpath);\nout:\n\tfree(dllpath);\n}\n\n/* Placate GCC by offering a sacrificial previous prototype */\nBOOL WINAPI DllMain(HINSTANCE, DWORD, LPVOID);\n\nBOOL WINAPI\nDllMain(HINSTANCE hinstDLL, DWORD fdwReason,\n    LPVOID lpvReserved __attribute__((__unused__)))\n{\n\tif (fdwReason == DLL_PROCESS_ATTACH)\n\t\t_w32_dll_instance = hinstDLL;\n\treturn 1;\n}\n#endif\n\nprivate const char *\nget_default_magic(void)\n{\n\tstatic const char hmagic[] = \"/.magic/magic.mgc\";\n\tstatic char *default_magic;\n\tchar *home, *hmagicpath;\n\n#ifndef WIN32\n\tstruct stat st;\n\n\tif (default_magic) {\n\t\tfree(default_magic);\n\t\tdefault_magic = NULL;\n\t}\n\tif ((home = getenv(\"HOME\")) == NULL)\n\t\treturn MAGIC;\n\n\tif (asprintf(&hmagicpath, \"%s/.magic.mgc\", home) < 0)\n\t\treturn MAGIC;\n\tif (stat(hmagicpath, &st) == -1) {\n\t\tfree(hmagicpath);\n\t\tif (asprintf(&hmagicpath, \"%s/.magic\", home) < 0)\n\t\t\treturn MAGIC;\n\t\tif (stat(hmagicpath, &st) == -1)\n\t\t\tgoto out;\n\t\tif (S_ISDIR(st.st_mode)) {\n\t\t\tfree(hmagicpath);\n\t\t\tif (asprintf(&hmagicpath, \"%s/%s\", home, hmagic) < 0)\n\t\t\t\treturn MAGIC;\n\t\t\tif (access(hmagicpath, R_OK) == -1)\n\t\t\t\tgoto out;\n\t\t}\n\t}\n\n\tif (asprintf(&default_magic, \"%s:%s\", hmagicpath, MAGIC) < 0)\n\t\tgoto out;\n\tfree(hmagicpath);\n\treturn default_magic;\nout:\n\tdefault_magic = NULL;\n\tfree(hmagicpath);\n\treturn MAGIC;\n#else\n\thmagicpath = NULL;\n\n\tif (default_magic) {\n\t\tfree(default_magic);\n\t\tdefault_magic = NULL;\n\t}\n\n\t/* First, try to get a magic file from user-application data */\n\tif ((home = getenv(\"LOCALAPPDATA\")) != NULL)\n\t\t_w32_append_path(&hmagicpath, \"%s%s\", home, hmagic);\n\n\t/* Second, try to get a magic file from the user profile data */\n\tif ((home = getenv(\"USERPROFILE\")) != NULL)\n\t\t_w32_append_path(&hmagicpath,\n\t\t    \"%s/Local Settings/Application Data%s\", home, hmagic);\n\n\t/* Third, try to get a magic file from Common Files */\n\tif ((home = getenv(\"COMMONPROGRAMFILES\")) != NULL)\n\t\t_w32_append_path(&hmagicpath, \"%s%s\", home, hmagic);\n\n\t/* Fourth, try to get magic file relative to exe location */\n        _w32_get_magic_relative_to(&hmagicpath, NULL);\n\n\t/* Fifth, try to get magic file relative to dll location */\n        _w32_get_magic_relative_to(&hmagicpath, _w32_dll_instance);\n\n\t/* Avoid MAGIC constant - it likely points to a file within MSys tree */\n\tdefault_magic = hmagicpath;\n\treturn default_magic;\n#endif\n}\n\npublic const char *\nmagic_getpath(const char *magicfile, int action)\n{\n\tif (magicfile != NULL)\n\t\treturn magicfile;\n\n\tmagicfile = getenv(\"MAGIC\");\n\tif (magicfile != NULL)\n\t\treturn magicfile;\n\n\treturn action == FILE_LOAD ? get_default_magic() : MAGIC;\n}\n\npublic struct magic_set *\nmagic_open(int flags)\n{\n\treturn file_ms_alloc(flags);\n}\n\nprivate int\nunreadable_info(struct magic_set *ms, mode_t md, const char *file)\n{\n\tif (file) {\n\t\t/* We cannot open it, but we were able to stat it. */\n\t\tif (access(file, W_OK) == 0)\n\t\t\tif (file_printf(ms, \"writable, \") == -1)\n\t\t\t\treturn -1;\n\t\tif (access(file, X_OK) == 0)\n\t\t\tif (file_printf(ms, \"executable, \") == -1)\n\t\t\t\treturn -1;\n\t}\n\tif (S_ISREG(md))\n\t\tif (file_printf(ms, \"regular file, \") == -1)\n\t\t\treturn -1;\n\tif (file_printf(ms, \"no read permission\") == -1)\n\t\treturn -1;\n\treturn 0;\n}\n\npublic void\nmagic_close(struct magic_set *ms)\n{\n\tif (ms == NULL)\n\t\treturn;\n\tfile_ms_free(ms);\n}\n\n/*\n * load a magic file\n */\npublic int\nmagic_load(struct magic_set *ms, const char *magicfile)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\treturn file_apprentice(ms, magicfile, FILE_LOAD);\n}\n\n#ifndef COMPILE_ONLY\n/*\n * Install a set of compiled magic buffers.\n */\npublic int\nmagic_load_buffers(struct magic_set *ms, void **bufs, size_t *sizes,\n    size_t nbufs)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\treturn buffer_apprentice(ms, RCAST(struct magic **, bufs),\n\t    sizes, nbufs);\n}\n#endif\n\npublic int\nmagic_compile(struct magic_set *ms, const char *magicfile)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\treturn file_apprentice(ms, magicfile, FILE_COMPILE);\n}\n\npublic int\nmagic_check(struct magic_set *ms, const char *magicfile)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\treturn file_apprentice(ms, magicfile, FILE_CHECK);\n}\n\npublic int\nmagic_list(struct magic_set *ms, const char *magicfile)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\treturn file_apprentice(ms, magicfile, FILE_LIST);\n}\n\nprivate void\nclose_and_restore(const struct magic_set *ms, const char *name, int fd,\n    const struct stat *sb)\n{\n\tif (fd == STDIN_FILENO || name == NULL)\n\t\treturn;\n\t(void) close(fd);\n\n\tif ((ms->flags & MAGIC_PRESERVE_ATIME) != 0) {\n\t\t/*\n\t\t * Try to restore access, modification times if read it.\n\t\t * This is really *bad* because it will modify the status\n\t\t * time of the file... And of course this will affect\n\t\t * backup programs\n\t\t */\n#ifdef HAVE_UTIMES\n\t\tstruct timeval  utsbuf[2];\n\t\t(void)memset(utsbuf, 0, sizeof(utsbuf));\n\t\tutsbuf[0].tv_sec = sb->st_atime;\n\t\tutsbuf[1].tv_sec = sb->st_mtime;\n\n\t\t(void) utimes(name, utsbuf); /* don't care if loses */\n#elif defined(HAVE_UTIME_H) || defined(HAVE_SYS_UTIME_H)\n\t\tstruct utimbuf  utbuf;\n\n\t\t(void)memset(&utbuf, 0, sizeof(utbuf));\n\t\tutbuf.actime = sb->st_atime;\n\t\tutbuf.modtime = sb->st_mtime;\n\t\t(void) utime(name, &utbuf); /* don't care if loses */\n#endif\n\t}\n}\n\n#ifndef COMPILE_ONLY\n\n/*\n * find type of descriptor\n */\npublic const char *\nmagic_descriptor(struct magic_set *ms, int fd)\n{\n\tif (ms == NULL)\n\t\treturn NULL;\n\treturn file_or_fd(ms, NULL, fd);\n}\n\n/*\n * find type of named file\n */\npublic const char *\nmagic_file(struct magic_set *ms, const char *inname)\n{\n\tif (ms == NULL)\n\t\treturn NULL;\n\treturn file_or_fd(ms, inname, STDIN_FILENO);\n}\n\nprivate const char *\nfile_or_fd(struct magic_set *ms, const char *inname, int fd)\n{\n\tint\trv = -1;\n\tunsigned char *buf;\n\tstruct stat\tsb;\n\tssize_t nbytes = 0;\t/* number of bytes read from a datafile */\n\tint\tispipe = 0;\n\tint\tokstat = 0;\n\toff_t\tpos = CAST(off_t, -1);\n\n\tif (file_reset(ms, 1) == -1)\n\t\tgoto out;\n\n\t/*\n\t * one extra for terminating '\\0', and\n\t * some overlapping space for matches near EOF\n\t */\n#define SLOP (1 + sizeof(union VALUETYPE))\n\tif ((buf = CAST(unsigned char *, malloc(ms->bytes_max + SLOP))) == NULL)\n\t\treturn NULL;\n\n\tswitch (file_fsmagic(ms, inname, &sb)) {\n\tcase -1:\t\t/* error */\n\t\tgoto done;\n\tcase 0:\t\t\t/* nothing found */\n\t\tbreak;\n\tdefault:\t\t/* matched it and printed type */\n\t\trv = 0;\n\t\tgoto done;\n\t}\n\n#ifdef WIN32\n\t/* Place stdin in binary mode, so EOF (Ctrl+Z) doesn't stop early. */\n\tif (fd == STDIN_FILENO)\n\t\t_setmode(STDIN_FILENO, O_BINARY);\n#endif\n\tif (inname != NULL) {\n\t\tint flags = O_RDONLY|O_BINARY|O_NONBLOCK;\n\t\terrno = 0;\n\t\tif ((fd = open(inname, flags)) < 0) {\n\t\t\tokstat = stat(inname, &sb) == 0;\n\t\t\tif (okstat && S_ISFIFO(sb.st_mode))\n\t\t\t\tispipe = 1;\n#ifdef WIN32\n\t\t\t/*\n\t\t\t * Can't stat, can't open.  It may have been opened in\n\t\t\t * fsmagic, so if the user doesn't have read permission,\n\t\t\t * allow it to say so; otherwise an error was probably\n\t\t\t * displayed in fsmagic.\n\t\t\t */\n\t\t\tif (!okstat && errno == EACCES) {\n\t\t\t\tsb.st_mode = S_IFBLK;\n\t\t\t\tokstat = 1;\n\t\t\t}\n#endif\n\t\t\tif (okstat &&\n\t\t\t    unreadable_info(ms, sb.st_mode, inname) == -1)\n\t\t\t\tgoto done;\n\t\t\trv = 0;\n\t\t\tgoto done;\n\t\t}\n\t}\n\n\tif (fd != -1) {\n\t\tif (!okstat)\n\t\t\tokstat = fstat(fd, &sb) == 0;\n\t\tif (okstat && S_ISFIFO(sb.st_mode))\n\t\t\tispipe = 1;\n\t\tif (inname == NULL)\n\t\t\tpos = lseek(fd, CAST(off_t, 0), SEEK_CUR);\n\t}\n\n\t/*\n\t * try looking at the first ms->bytes_max bytes\n\t */\n\tif (ispipe) {\n\t\tif (fd != -1) {\n\t\t\tssize_t r = 0;\n\n\t\t\twhile ((r = sread(fd, RCAST(void *, &buf[nbytes]),\n\t\t\t    CAST(size_t, ms->bytes_max - nbytes), 1)) > 0) {\n\t\t\t\tnbytes += r;\n\t\t\t\tif (r < PIPE_BUF) break;\n\t\t\t}\n\t\t}\n\n\t\tif (nbytes == 0 && inname) {\n\t\t\t/* We can not read it, but we were able to stat it. */\n\t\t\tif (unreadable_info(ms, sb.st_mode, inname) == -1)\n\t\t\t\tgoto done;\n\t\t\trv = 0;\n\t\t\tgoto done;\n\t\t}\n\n\t} else if (fd != -1) {\n\t\t/* Windows refuses to read from a big console buffer. */\n\t\tsize_t howmany =\n#if defined(WIN32)\n\t\t    _isatty(fd) ? 8 * 1024 :\n#endif\n\t\t    ms->bytes_max;\n\t\tif ((nbytes = read(fd, RCAST(void *, buf), howmany)) == -1) {\n\t\t\tif (inname == NULL && fd != STDIN_FILENO)\n\t\t\t\tfile_error(ms, errno, \"cannot read fd %d\", fd);\n\t\t\telse\n\t\t\t\tfile_error(ms, errno, \"cannot read `%s'\",\n\t\t\t\t    inname == NULL ? \"/dev/stdin\" : inname);\n\t\t\tgoto done;\n\t\t}\n\t}\n\n\t(void)memset(buf + nbytes, 0, SLOP); /* NUL terminate */\n\tif (file_buffer(ms, fd, okstat ? &sb : NULL, inname, buf, CAST(size_t, nbytes)) == -1)\n\t\tgoto done;\n\trv = 0;\ndone:\n\tfree(buf);\n\tif (fd != -1) {\n\t\tif (pos != CAST(off_t, -1))\n\t\t\t(void)lseek(fd, pos, SEEK_SET);\n\t\tclose_and_restore(ms, inname, fd, &sb);\n\t}\nout:\n\treturn rv == 0 ? file_getbuffer(ms) : NULL;\n}\n\n\npublic const char *\nmagic_buffer(struct magic_set *ms, const void *buf, size_t nb)\n{\n\tif (ms == NULL)\n\t\treturn NULL;\n\tif (file_reset(ms, 1) == -1)\n\t\treturn NULL;\n\t/*\n\t * The main work is done here!\n\t * We have the file name and/or the data buffer to be identified.\n\t */\n\tif (file_buffer(ms, -1, NULL, NULL, buf, nb) == -1) {\n\t\treturn NULL;\n\t}\n\treturn file_getbuffer(ms);\n}\n#endif\n\npublic const char *\nmagic_error(struct magic_set *ms)\n{\n\tif (ms == NULL)\n\t\treturn \"Magic database is not open\";\n\treturn (ms->event_flags & EVENT_HAD_ERR) ? ms->o.buf : NULL;\n}\n\npublic int\nmagic_errno(struct magic_set *ms)\n{\n\tif (ms == NULL)\n\t\treturn EINVAL;\n\treturn (ms->event_flags & EVENT_HAD_ERR) ? ms->error : 0;\n}\n\npublic int\nmagic_getflags(struct magic_set *ms)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\n\treturn ms->flags;\n}\n\npublic int\nmagic_setflags(struct magic_set *ms, int flags)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n#if !defined(HAVE_UTIME) && !defined(HAVE_UTIMES)\n\tif (flags & MAGIC_PRESERVE_ATIME)\n\t\treturn -1;\n#endif\n\tms->flags = flags;\n\treturn 0;\n}\n\npublic int\nmagic_version(void)\n{\n\treturn MAGIC_VERSION;\n}\n\npublic int\nmagic_setparam(struct magic_set *ms, int param, const void *val)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\tswitch (param) {\n\tcase MAGIC_PARAM_INDIR_MAX:\n\t\tms->indir_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_NAME_MAX:\n\t\tms->name_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_PHNUM_MAX:\n\t\tms->elf_phnum_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_SHNUM_MAX:\n\t\tms->elf_shnum_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_NOTES_MAX:\n\t\tms->elf_notes_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_REGEX_MAX:\n\t\tms->regex_max = CAST(uint16_t, *CAST(const size_t *, val));\n\t\treturn 0;\n\tcase MAGIC_PARAM_BYTES_MAX:\n\t\tms->bytes_max = *CAST(const size_t *, val);\n\t\treturn 0;\n\tdefault:\n\t\terrno = EINVAL;\n\t\treturn -1;\n\t}\n}\n\npublic int\nmagic_getparam(struct magic_set *ms, int param, void *val)\n{\n\tif (ms == NULL)\n\t\treturn -1;\n\tswitch (param) {\n\tcase MAGIC_PARAM_INDIR_MAX:\n\t\t*CAST(size_t *, val) = ms->indir_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_NAME_MAX:\n\t\t*CAST(size_t *, val) = ms->name_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_PHNUM_MAX:\n\t\t*CAST(size_t *, val) = ms->elf_phnum_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_SHNUM_MAX:\n\t\t*CAST(size_t *, val) = ms->elf_shnum_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_ELF_NOTES_MAX:\n\t\t*CAST(size_t *, val) = ms->elf_notes_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_REGEX_MAX:\n\t\t*CAST(size_t *, val) = ms->regex_max;\n\t\treturn 0;\n\tcase MAGIC_PARAM_BYTES_MAX:\n\t\t*CAST(size_t *, val) = ms->bytes_max;\n\t\treturn 0;\n\tdefault:\n\t\terrno = EINVAL;\n\t\treturn -1;\n\t}\n}\n` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/magic.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1651,"col":23,"offset":0},"end":{"line":1651,"col":27,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c:45:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":45,"col":9,"offset":0},"end":{"line":45,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":48,"col":9,"offset":0},"end":{"line":48,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":59,"col":9,"offset":0},"end":{"line":59,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":60,"col":9,"offset":0},"end":{"line":60,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":61,"col":9,"offset":0},"end":{"line":61,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":67,"col":9,"offset":0},"end":{"line":67,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":75,"col":9,"offset":0},"end":{"line":75,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":94,"col":9,"offset":0},"end":{"line":94,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":115,"col":9,"offset":0},"end":{"line":115,"col":17,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":255,"col":1,"offset":0},"end":{"line":255,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":259,"col":1,"offset":0},"end":{"line":259,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":270,"col":3,"offset":0},"end":{"line":271,"col":2,"offset":18}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":273,"col":1,"offset":0},"end":{"line":273,"col":40,"offset":39}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":277,"col":1,"offset":0},"end":{"line":277,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":285,"col":4,"offset":0},"end":{"line":286,"col":2,"offset":26}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":326,"col":15,"offset":0},"end":{"line":326,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":346,"col":9,"offset":0},"end":{"line":346,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":374,"col":12,"offset":0},"end":{"line":374,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":399,"col":23,"offset":0},"end":{"line":399,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":401,"col":43,"offset":0},"end":{"line":401,"col":50,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":535,"col":9,"offset":0},"end":{"line":535,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":538,"col":52,"offset":0},"end":{"line":538,"col":58,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":538,"col":69,"offset":0},"end":{"line":538,"col":75,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":12,"offset":0},"end":{"line":539,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":25,"offset":0},"end":{"line":539,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":31,"offset":0},"end":{"line":539,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":539,"col":41,"offset":0},"end":{"line":539,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":541,"col":34,"offset":0},"end":{"line":541,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":542,"col":64,"offset":0},"end":{"line":543,"col":15,"offset":16}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":568,"col":2,"offset":0},"end":{"line":568,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":569,"col":34,"offset":0},"end":{"line":569,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":572,"col":12,"offset":0},"end":{"line":572,"col":16,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":572,"col":32,"offset":0},"end":{"line":572,"col":39,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":577,"col":1,"offset":0},"end":{"line":579,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":584,"col":33,"offset":0},"end":{"line":584,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":584,"col":39,"offset":0},"end":{"line":584,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":678,"col":9,"offset":0},"end":{"line":678,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":683,"col":33,"offset":0},"end":{"line":683,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":683,"col":39,"offset":0},"end":{"line":683,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":707,"col":20,"offset":0},"end":{"line":707,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":718,"col":9,"offset":0},"end":{"line":718,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":724,"col":33,"offset":0},"end":{"line":724,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":724,"col":39,"offset":0},"end":{"line":724,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":774,"col":14,"offset":0},"end":{"line":774,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":775,"col":30,"offset":0},"end":{"line":775,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":779,"col":30,"offset":0},"end":{"line":779,"col":39,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":803,"col":42,"offset":0},"end":{"line":803,"col":44,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":893,"col":27,"offset":0},"end":{"line":893,"col":31,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":893,"col":33,"offset":0},"end":{"line":893,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":905,"col":14,"offset":0},"end":{"line":905,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":920,"col":9,"offset":0},"end":{"line":920,"col":14,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":933,"col":12,"offset":0},"end":{"line":933,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":950,"col":9,"offset":0},"end":{"line":950,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":964,"col":36,"offset":0},"end":{"line":964,"col":43,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":973,"col":50,"offset":0},"end":{"line":973,"col":54,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":983,"col":1,"offset":0},"end":{"line":988,"col":28,"offset":276}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":988,"col":56,"offset":0},"end":{"line":988,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":9,"offset":0},"end":{"line":989,"col":11,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":13,"offset":0},"end":{"line":989,"col":18,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":27,"offset":0},"end":{"line":989,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":989,"col":45,"offset":0},"end":{"line":992,"col":18,"offset":41}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1080,"col":13,"offset":0},"end":{"line":1080,"col":17,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1088,"col":1,"offset":0},"end":{"line":1090,"col":8,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1096,"col":38,"offset":0},"end":{"line":1096,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1096,"col":44,"offset":0},"end":{"line":1096,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1122,"col":9,"offset":0},"end":{"line":1122,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1131,"col":38,"offset":0},"end":{"line":1131,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1131,"col":44,"offset":0},"end":{"line":1131,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1162,"col":21,"offset":0},"end":{"line":1162,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1169,"col":21,"offset":0},"end":{"line":1169,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1224,"col":34,"offset":0},"end":{"line":1224,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1255,"col":21,"offset":0},"end":{"line":1255,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1255,"col":27,"offset":0},"end":{"line":1255,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1256,"col":16,"offset":0},"end":{"line":1256,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1315,"col":9,"offset":0},"end":{"line":1315,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1344,"col":13,"offset":0},"end":{"line":1344,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1372,"col":12,"offset":0},"end":{"line":1372,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1401,"col":33,"offset":0},"end":{"line":1401,"col":48,"offset":15}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1416,"col":13,"offset":0},"end":{"line":1416,"col":21,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1426,"col":34,"offset":0},"end":{"line":1426,"col":41,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1462,"col":29,"offset":0},"end":{"line":1462,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1463,"col":14,"offset":0},"end":{"line":1463,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1512,"col":24,"offset":0},"end":{"line":1512,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1513,"col":24,"offset":0},"end":{"line":1513,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1566,"col":9,"offset":0},"end":{"line":1566,"col":23,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1567,"col":23,"offset":0},"end":{"line":1567,"col":32,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1571,"col":34,"offset":0},"end":{"line":1571,"col":48,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1572,"col":22,"offset":0},"end":{"line":1572,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1588,"col":8,"offset":0},"end":{"line":1588,"col":22,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1589,"col":22,"offset":0},"end":{"line":1589,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1600,"col":9,"offset":0},"end":{"line":1600,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1629,"col":12,"offset":0},"end":{"line":1629,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1651,"col":23,"offset":0},"end":{"line":1651,"col":27,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1686,"col":24,"offset":0},"end":{"line":1686,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1689,"col":14,"offset":0},"end":{"line":1689,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1698,"col":5,"offset":0},"end":{"line":1698,"col":48,"offset":43}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1709,"col":24,"offset":0},"end":{"line":1709,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1712,"col":14,"offset":0},"end":{"line":1712,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1734,"col":11,"offset":0},"end":{"line":1734,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1738,"col":40,"offset":0},"end":{"line":1738,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","start":{"line":1738,"col":55,"offset":0},"end":{"line":1738,"col":56,"offset":1}}]},{"code":2,"level":"warn","type":"Timeout","rule_id":"SEAM.semgrep-rules.c.raptor-use-after-free","message":"Timeout when running SEAM.semgrep-rules.c.raptor-use-after-free on /home/capstone/Desktop/root/file-5.38/src/cdf.c:\n ","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":81,"col":17,"offset":0},"end":{"line":83,"col":24,"offset":100}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":94,"col":1,"offset":0},"end":{"line":96,"col":16,"offset":86}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":96,"col":44,"offset":0},"end":{"line":96,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":96,"col":54,"offset":0},"end":{"line":96,"col":55,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":98,"col":11,"offset":0},"end":{"line":98,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":104,"col":1,"offset":0},"end":{"line":106,"col":16,"offset":87}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":106,"col":44,"offset":0},"end":{"line":106,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":106,"col":62,"offset":0},"end":{"line":106,"col":64,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":108,"col":11,"offset":0},"end":{"line":108,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":111,"col":1,"offset":0},"end":{"line":111,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":114,"col":1,"offset":0},"end":{"line":116,"col":16,"offset":86}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":116,"col":44,"offset":0},"end":{"line":116,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":116,"col":63,"offset":0},"end":{"line":116,"col":65,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":118,"col":11,"offset":0},"end":{"line":118,"col":17,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":121,"col":1,"offset":0},"end":{"line":121,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":20,"offset":0},"end":{"line":130,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":46,"offset":0},"end":{"line":130,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":50,"offset":0},"end":{"line":130,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":20,"offset":0},"end":{"line":131,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":46,"offset":0},"end":{"line":131,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":50,"offset":0},"end":{"line":131,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":20,"offset":0},"end":{"line":144,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":46,"offset":0},"end":{"line":144,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":50,"offset":0},"end":{"line":144,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":20,"offset":0},"end":{"line":145,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":46,"offset":0},"end":{"line":145,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":50,"offset":0},"end":{"line":145,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":20,"offset":0},"end":{"line":160,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":46,"offset":0},"end":{"line":160,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":50,"offset":0},"end":{"line":160,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":20,"offset":0},"end":{"line":161,"col":30,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":46,"offset":0},"end":{"line":161,"col":47,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":50,"offset":0},"end":{"line":161,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":226,"col":21,"offset":0},"end":{"line":226,"col":30,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":230,"col":21,"offset":0},"end":{"line":230,"col":30,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":235,"col":22,"offset":0},"end":{"line":235,"col":31,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":269,"col":35,"offset":0},"end":{"line":269,"col":44,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":270,"col":36,"offset":0},"end":{"line":270,"col":45,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":271,"col":32,"offset":0},"end":{"line":271,"col":41,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":275,"col":32,"offset":0},"end":{"line":275,"col":41,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":276,"col":33,"offset":0},"end":{"line":276,"col":42,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":278,"col":11,"offset":0},"end":{"line":278,"col":20,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":335,"col":30,"offset":0},"end":{"line":335,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":335,"col":36,"offset":0},"end":{"line":335,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":336,"col":30,"offset":0},"end":{"line":336,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":336,"col":36,"offset":0},"end":{"line":336,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":339,"col":21,"offset":0},"end":{"line":339,"col":28,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":341,"col":47,"offset":0},"end":{"line":341,"col":60,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":352,"col":20,"offset":0},"end":{"line":352,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":359,"col":15,"offset":0},"end":{"line":359,"col":23,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":365,"col":47,"offset":0},"end":{"line":365,"col":55,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":368,"col":14,"offset":0},"end":{"line":368,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":385,"col":12,"offset":0},"end":{"line":385,"col":26,"offset":14}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":419,"col":48,"offset":0},"end":{"line":419,"col":55,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":435,"col":35,"offset":0},"end":{"line":435,"col":48,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":28,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":441,"col":18,"offset":0},"end":{"line":441,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":441,"col":24,"offset":0},"end":{"line":441,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":468,"col":7,"offset":0},"end":{"line":468,"col":20,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":474,"col":11,"offset":0},"end":{"line":474,"col":24,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":476,"col":40,"offset":0},"end":{"line":476,"col":41,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":484,"col":35,"offset":0},"end":{"line":484,"col":43,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":490,"col":31,"offset":0},"end":{"line":490,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":502,"col":12,"offset":0},"end":{"line":502,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":507,"col":25,"offset":0},"end":{"line":507,"col":34,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":512,"col":5,"offset":0},"end":{"line":512,"col":18,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":517,"col":21,"offset":0},"end":{"line":517,"col":29,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":523,"col":24,"offset":0},"end":{"line":523,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":562,"col":24,"offset":0},"end":{"line":562,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":573,"col":14,"offset":0},"end":{"line":573,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":590,"col":27,"offset":0},"end":{"line":590,"col":34,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":609,"col":21,"offset":0},"end":{"line":609,"col":29,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":617,"col":24,"offset":0},"end":{"line":617,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":636,"col":27,"offset":0},"end":{"line":636,"col":34,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":655,"col":20,"offset":0},"end":{"line":655,"col":28,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":659,"col":24,"offset":0},"end":{"line":659,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":690,"col":17,"offset":0},"end":{"line":690,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":696,"col":39,"offset":0},"end":{"line":696,"col":40,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":701,"col":18,"offset":0},"end":{"line":701,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":712,"col":12,"offset":0},"end":{"line":712,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":720,"col":24,"offset":0},"end":{"line":720,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":745,"col":28,"offset":0},"end":{"line":745,"col":35,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":748,"col":36,"offset":0},"end":{"line":748,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":764,"col":12,"offset":0},"end":{"line":764,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":768,"col":24,"offset":0},"end":{"line":768,"col":33,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":818,"col":25,"offset":0},"end":{"line":818,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":869,"col":15,"offset":0},"end":{"line":869,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":20,"offset":0},"end":{"line":882,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":26,"offset":0},"end":{"line":882,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":39,"offset":0},"end":{"line":882,"col":46,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":48,"offset":0},"end":{"line":882,"col":49,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":17,"offset":0},"end":{"line":901,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":26,"offset":0},"end":{"line":901,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":50,"offset":0},"end":{"line":901,"col":54,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":56,"offset":0},"end":{"line":901,"col":57,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":923,"col":40,"offset":0},"end":{"line":923,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":927,"col":34,"offset":0},"end":{"line":927,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":11,"offset":0},"end":{"line":949,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":30,"offset":0},"end":{"line":949,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":36,"offset":0},"end":{"line":949,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":54,"offset":0},"end":{"line":949,"col":58,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":60,"offset":0},"end":{"line":949,"col":61,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":984,"col":13,"offset":0},"end":{"line":984,"col":18,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":984,"col":41,"offset":0},"end":{"line":984,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1007,"col":17,"offset":0},"end":{"line":1007,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1007,"col":26,"offset":0},"end":{"line":1007,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1008,"col":17,"offset":0},"end":{"line":1008,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1008,"col":26,"offset":0},"end":{"line":1008,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1016,"col":15,"offset":0},"end":{"line":1016,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1022,"col":12,"offset":0},"end":{"line":1022,"col":15,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1032,"col":9,"offset":0},"end":{"line":1032,"col":22,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1088,"col":38,"offset":0},"end":{"line":1088,"col":42,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1088,"col":44,"offset":0},"end":{"line":1088,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1089,"col":20,"offset":0},"end":{"line":1089,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1089,"col":26,"offset":0},"end":{"line":1089,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1091,"col":14,"offset":0},"end":{"line":1091,"col":19,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1132,"col":11,"offset":0},"end":{"line":1132,"col":16,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1132,"col":44,"offset":0},"end":{"line":1132,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":11,"offset":0},"end":{"line":1134,"col":16,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":44,"offset":0},"end":{"line":1134,"col":45,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":58,"offset":0},"end":{"line":1134,"col":62,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":64,"offset":0},"end":{"line":1134,"col":65,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1135,"col":18,"offset":0},"end":{"line":1135,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1135,"col":24,"offset":0},"end":{"line":1135,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1170,"col":29,"offset":0},"end":{"line":1170,"col":33,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1170,"col":35,"offset":0},"end":{"line":1170,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1189,"col":29,"offset":0},"end":{"line":1189,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1195,"col":17,"offset":0},"end":{"line":1195,"col":21,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1195,"col":23,"offset":0},"end":{"line":1195,"col":24,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1200,"col":46,"offset":0},"end":{"line":1200,"col":49,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1201,"col":43,"offset":0},"end":{"line":1201,"col":46,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1202,"col":49,"offset":0},"end":{"line":1202,"col":52,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1203,"col":26,"offset":0},"end":{"line":1205,"col":5,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1205,"col":20,"offset":0},"end":{"line":1206,"col":7,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1206,"col":22,"offset":0},"end":{"line":1210,"col":6,"offset":25}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1210,"col":50,"offset":0},"end":{"line":1211,"col":16,"offset":17}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1211,"col":21,"offset":0},"end":{"line":1212,"col":5,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1213,"col":4,"offset":0},"end":{"line":1213,"col":7,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1213,"col":25,"offset":0},"end":{"line":1215,"col":29,"offset":31}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":50,"offset":0},"end":{"line":1215,"col":51,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":53,"offset":0},"end":{"line":1215,"col":57,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":60,"offset":0},"end":{"line":1216,"col":25,"offset":26}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":7,"offset":0},"end":{"line":1217,"col":8,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":11,"offset":0},"end":{"line":1217,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":29,"offset":0},"end":{"line":1218,"col":5,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1218,"col":10,"offset":0},"end":{"line":1218,"col":11,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1287,"col":14,"offset":0},"end":{"line":1287,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1289,"col":14,"offset":0},"end":{"line":1289,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1291,"col":15,"offset":0},"end":{"line":1291,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1293,"col":14,"offset":0},"end":{"line":1293,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1297,"col":12,"offset":0},"end":{"line":1297,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1303,"col":12,"offset":0},"end":{"line":1303,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1308,"col":11,"offset":0},"end":{"line":1308,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1320,"col":17,"offset":0},"end":{"line":1320,"col":22,"offset":5}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1349,"col":25,"offset":0},"end":{"line":1349,"col":38,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1360,"col":25,"offset":0},"end":{"line":1360,"col":31,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1366,"col":27,"offset":0},"end":{"line":1366,"col":34,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1387,"col":26,"offset":0},"end":{"line":1387,"col":35,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1420,"col":25,"offset":0},"end":{"line":1420,"col":38,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1471,"col":25,"offset":0},"end":{"line":1471,"col":28,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/cdf.c:81:\n `(x)\t(/*CONSTCOND*/sizeof(x) == 2 ? \\\n\t\t\t    CDF_TOLE2(CAST(uint16_t, x)) : \\\n\t\t\t(/*CONSTCOND*/sizeof` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":81,"col":17,"offset":0},"end":{"line":83,"col":24,"offset":100}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":94,"col":1,"offset":0},"end":{"line":96,"col":16,"offset":86}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":96,"col":44,"offset":0},"end":{"line":96,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":96,"col":54,"offset":0},"end":{"line":96,"col":55,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":98,"col":11,"offset":0},"end":{"line":98,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":104,"col":1,"offset":0},"end":{"line":106,"col":16,"offset":87}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":106,"col":44,"offset":0},"end":{"line":106,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":106,"col":62,"offset":0},"end":{"line":106,"col":64,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":108,"col":11,"offset":0},"end":{"line":108,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":111,"col":1,"offset":0},"end":{"line":111,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":114,"col":1,"offset":0},"end":{"line":116,"col":16,"offset":86}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":116,"col":44,"offset":0},"end":{"line":116,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":116,"col":63,"offset":0},"end":{"line":116,"col":65,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":118,"col":11,"offset":0},"end":{"line":118,"col":17,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":121,"col":1,"offset":0},"end":{"line":121,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":20,"offset":0},"end":{"line":130,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":46,"offset":0},"end":{"line":130,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":130,"col":50,"offset":0},"end":{"line":130,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":20,"offset":0},"end":{"line":131,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":46,"offset":0},"end":{"line":131,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":131,"col":50,"offset":0},"end":{"line":131,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":20,"offset":0},"end":{"line":144,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":46,"offset":0},"end":{"line":144,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":144,"col":50,"offset":0},"end":{"line":144,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":20,"offset":0},"end":{"line":145,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":46,"offset":0},"end":{"line":145,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":145,"col":50,"offset":0},"end":{"line":145,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":20,"offset":0},"end":{"line":160,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":46,"offset":0},"end":{"line":160,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":160,"col":50,"offset":0},"end":{"line":160,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":20,"offset":0},"end":{"line":161,"col":30,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":46,"offset":0},"end":{"line":161,"col":47,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":161,"col":50,"offset":0},"end":{"line":161,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":226,"col":21,"offset":0},"end":{"line":226,"col":30,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":230,"col":21,"offset":0},"end":{"line":230,"col":30,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":235,"col":22,"offset":0},"end":{"line":235,"col":31,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":269,"col":35,"offset":0},"end":{"line":269,"col":44,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":270,"col":36,"offset":0},"end":{"line":270,"col":45,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":271,"col":32,"offset":0},"end":{"line":271,"col":41,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":275,"col":32,"offset":0},"end":{"line":275,"col":41,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":276,"col":33,"offset":0},"end":{"line":276,"col":42,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":278,"col":11,"offset":0},"end":{"line":278,"col":20,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":335,"col":30,"offset":0},"end":{"line":335,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":335,"col":36,"offset":0},"end":{"line":335,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":336,"col":30,"offset":0},"end":{"line":336,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":336,"col":36,"offset":0},"end":{"line":336,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":339,"col":21,"offset":0},"end":{"line":339,"col":28,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":341,"col":47,"offset":0},"end":{"line":341,"col":60,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":352,"col":20,"offset":0},"end":{"line":352,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":359,"col":15,"offset":0},"end":{"line":359,"col":23,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":365,"col":47,"offset":0},"end":{"line":365,"col":55,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":368,"col":14,"offset":0},"end":{"line":368,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":385,"col":12,"offset":0},"end":{"line":385,"col":26,"offset":14}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":419,"col":48,"offset":0},"end":{"line":419,"col":55,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":435,"col":35,"offset":0},"end":{"line":435,"col":48,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":440,"col":21,"offset":0},"end":{"line":440,"col":28,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":441,"col":18,"offset":0},"end":{"line":441,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":441,"col":24,"offset":0},"end":{"line":441,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":468,"col":7,"offset":0},"end":{"line":468,"col":20,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":474,"col":11,"offset":0},"end":{"line":474,"col":24,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":476,"col":40,"offset":0},"end":{"line":476,"col":41,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":484,"col":35,"offset":0},"end":{"line":484,"col":43,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":490,"col":31,"offset":0},"end":{"line":490,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":502,"col":12,"offset":0},"end":{"line":502,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":507,"col":25,"offset":0},"end":{"line":507,"col":34,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":512,"col":5,"offset":0},"end":{"line":512,"col":18,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":517,"col":21,"offset":0},"end":{"line":517,"col":29,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":523,"col":24,"offset":0},"end":{"line":523,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":562,"col":24,"offset":0},"end":{"line":562,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":573,"col":14,"offset":0},"end":{"line":573,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":590,"col":27,"offset":0},"end":{"line":590,"col":34,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":609,"col":21,"offset":0},"end":{"line":609,"col":29,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":617,"col":24,"offset":0},"end":{"line":617,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":636,"col":27,"offset":0},"end":{"line":636,"col":34,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":655,"col":20,"offset":0},"end":{"line":655,"col":28,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":659,"col":24,"offset":0},"end":{"line":659,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":690,"col":17,"offset":0},"end":{"line":690,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":696,"col":39,"offset":0},"end":{"line":696,"col":40,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":701,"col":18,"offset":0},"end":{"line":701,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":712,"col":12,"offset":0},"end":{"line":712,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":720,"col":24,"offset":0},"end":{"line":720,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":745,"col":28,"offset":0},"end":{"line":745,"col":35,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":748,"col":36,"offset":0},"end":{"line":748,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":764,"col":12,"offset":0},"end":{"line":764,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":768,"col":24,"offset":0},"end":{"line":768,"col":33,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":818,"col":25,"offset":0},"end":{"line":818,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":869,"col":15,"offset":0},"end":{"line":869,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":20,"offset":0},"end":{"line":882,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":26,"offset":0},"end":{"line":882,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":39,"offset":0},"end":{"line":882,"col":46,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":882,"col":48,"offset":0},"end":{"line":882,"col":49,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":17,"offset":0},"end":{"line":901,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":26,"offset":0},"end":{"line":901,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":50,"offset":0},"end":{"line":901,"col":54,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":901,"col":56,"offset":0},"end":{"line":901,"col":57,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":923,"col":40,"offset":0},"end":{"line":923,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":927,"col":34,"offset":0},"end":{"line":927,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":11,"offset":0},"end":{"line":949,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":30,"offset":0},"end":{"line":949,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":36,"offset":0},"end":{"line":949,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":54,"offset":0},"end":{"line":949,"col":58,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":949,"col":60,"offset":0},"end":{"line":949,"col":61,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":984,"col":13,"offset":0},"end":{"line":984,"col":18,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":984,"col":41,"offset":0},"end":{"line":984,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1007,"col":17,"offset":0},"end":{"line":1007,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1007,"col":26,"offset":0},"end":{"line":1007,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1008,"col":17,"offset":0},"end":{"line":1008,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1008,"col":26,"offset":0},"end":{"line":1008,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1016,"col":15,"offset":0},"end":{"line":1016,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1022,"col":12,"offset":0},"end":{"line":1022,"col":15,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1032,"col":9,"offset":0},"end":{"line":1032,"col":22,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1088,"col":38,"offset":0},"end":{"line":1088,"col":42,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1088,"col":44,"offset":0},"end":{"line":1088,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1089,"col":20,"offset":0},"end":{"line":1089,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1089,"col":26,"offset":0},"end":{"line":1089,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1091,"col":14,"offset":0},"end":{"line":1091,"col":19,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1132,"col":11,"offset":0},"end":{"line":1132,"col":16,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1132,"col":44,"offset":0},"end":{"line":1132,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":11,"offset":0},"end":{"line":1134,"col":16,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":44,"offset":0},"end":{"line":1134,"col":45,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":58,"offset":0},"end":{"line":1134,"col":62,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1134,"col":64,"offset":0},"end":{"line":1134,"col":65,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1135,"col":18,"offset":0},"end":{"line":1135,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1135,"col":24,"offset":0},"end":{"line":1135,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1170,"col":29,"offset":0},"end":{"line":1170,"col":33,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1170,"col":35,"offset":0},"end":{"line":1170,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1189,"col":29,"offset":0},"end":{"line":1189,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1195,"col":17,"offset":0},"end":{"line":1195,"col":21,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1195,"col":23,"offset":0},"end":{"line":1195,"col":24,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1200,"col":46,"offset":0},"end":{"line":1200,"col":49,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1201,"col":43,"offset":0},"end":{"line":1201,"col":46,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1202,"col":49,"offset":0},"end":{"line":1202,"col":52,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1203,"col":26,"offset":0},"end":{"line":1205,"col":5,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1205,"col":20,"offset":0},"end":{"line":1206,"col":7,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1206,"col":22,"offset":0},"end":{"line":1210,"col":6,"offset":25}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1210,"col":50,"offset":0},"end":{"line":1211,"col":16,"offset":17}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1211,"col":21,"offset":0},"end":{"line":1212,"col":5,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1213,"col":4,"offset":0},"end":{"line":1213,"col":7,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1213,"col":25,"offset":0},"end":{"line":1215,"col":29,"offset":31}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":50,"offset":0},"end":{"line":1215,"col":51,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":53,"offset":0},"end":{"line":1215,"col":57,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1215,"col":60,"offset":0},"end":{"line":1216,"col":25,"offset":26}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":7,"offset":0},"end":{"line":1217,"col":8,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":11,"offset":0},"end":{"line":1217,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1217,"col":29,"offset":0},"end":{"line":1218,"col":5,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1218,"col":10,"offset":0},"end":{"line":1218,"col":11,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1287,"col":14,"offset":0},"end":{"line":1287,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1289,"col":14,"offset":0},"end":{"line":1289,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1291,"col":15,"offset":0},"end":{"line":1291,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1293,"col":14,"offset":0},"end":{"line":1293,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1297,"col":12,"offset":0},"end":{"line":1297,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1303,"col":12,"offset":0},"end":{"line":1303,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1308,"col":11,"offset":0},"end":{"line":1308,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1320,"col":17,"offset":0},"end":{"line":1320,"col":22,"offset":5}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1349,"col":25,"offset":0},"end":{"line":1349,"col":38,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1360,"col":25,"offset":0},"end":{"line":1360,"col":31,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1366,"col":27,"offset":0},"end":{"line":1366,"col":34,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1387,"col":26,"offset":0},"end":{"line":1387,"col":35,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1420,"col":25,"offset":0},"end":{"line":1420,"col":38,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/cdf.c","start":{"line":1471,"col":25,"offset":0},"end":{"line":1471,"col":28,"offset":3}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":70,"col":9,"offset":0},"end":{"line":70,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":90,"col":9,"offset":0},"end":{"line":90,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":105,"col":11,"offset":0},"end":{"line":105,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/fsmagic.c:70:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":70,"col":9,"offset":0},"end":{"line":70,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":90,"col":9,"offset":0},"end":{"line":90,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":105,"col":11,"offset":0},"end":{"line":105,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","start":{"line":129,"col":1,"offset":0},"end":{"line":129,"col":7,"offset":6}}]},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/file-5.38/src/funcs.c:1:\n Failure: unallowed declarator as RHS to scope resolution","path":"/home/capstone/Desktop/root/file-5.38/src/funcs.c"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/file-5.38/src/file.c:1:\n Failure: should not be empty by precondition","path":"/home/capstone/Desktop/root/file-5.38/src/file.c"},{"code":2,"level":"warn","type":"Other syntax error","message":"Other syntax error at line /home/capstone/Desktop/root/file-5.38/src/file.h:1:\n Failure: unallowed declarator as RHS to scope resolution","path":"/home/capstone/Desktop/root/file-5.38/src/file.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":46,"col":9,"offset":0},"end":{"line":46,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":47,"col":9,"offset":0},"end":{"line":47,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":49,"col":9,"offset":0},"end":{"line":49,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":51,"col":9,"offset":0},"end":{"line":51,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":68,"col":11,"offset":0},"end":{"line":68,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":72,"col":40,"offset":0},"end":{"line":72,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":72,"col":55,"offset":0},"end":{"line":72,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":29,"offset":0},"end":{"line":91,"col":30,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":43,"offset":0},"end":{"line":91,"col":50,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":96,"col":28,"offset":0},"end":{"line":96,"col":32,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":96,"col":34,"offset":0},"end":{"line":96,"col":35,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":97,"col":18,"offset":0},"end":{"line":97,"col":25,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":104,"col":13,"offset":0},"end":{"line":104,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":108,"col":13,"offset":0},"end":{"line":108,"col":22,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":113,"col":12,"offset":0},"end":{"line":113,"col":24,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":117,"col":12,"offset":0},"end":{"line":117,"col":20,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":128,"col":12,"offset":0},"end":{"line":128,"col":21,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":137,"col":12,"offset":0},"end":{"line":137,"col":21,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":139,"col":12,"offset":0},"end":{"line":139,"col":22,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":143,"col":12,"offset":0},"end":{"line":143,"col":24,"offset":12}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":150,"col":13,"offset":0},"end":{"line":150,"col":23,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":154,"col":38,"offset":0},"end":{"line":154,"col":51,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":230,"col":9,"offset":0},"end":{"line":230,"col":13,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":252,"col":9,"offset":0},"end":{"line":252,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":272,"col":9,"offset":0},"end":{"line":272,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":291,"col":9,"offset":0},"end":{"line":291,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":322,"col":11,"offset":0},"end":{"line":322,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":393,"col":9,"offset":0},"end":{"line":393,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":403,"col":9,"offset":0},"end":{"line":403,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":422,"col":9,"offset":0},"end":{"line":422,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":454,"col":23,"offset":0},"end":{"line":454,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":461,"col":9,"offset":0},"end":{"line":461,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":497,"col":23,"offset":0},"end":{"line":497,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":530,"col":18,"offset":0},"end":{"line":530,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":564,"col":18,"offset":0},"end":{"line":564,"col":22,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":587,"col":9,"offset":0},"end":{"line":587,"col":13,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/encoding.c:46:\n `int` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":46,"col":9,"offset":0},"end":{"line":46,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":47,"col":9,"offset":0},"end":{"line":47,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":49,"col":9,"offset":0},"end":{"line":49,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":50,"col":9,"offset":0},"end":{"line":50,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":51,"col":9,"offset":0},"end":{"line":51,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":52,"col":9,"offset":0},"end":{"line":52,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":53,"col":9,"offset":0},"end":{"line":53,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":54,"col":9,"offset":0},"end":{"line":54,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":68,"col":11,"offset":0},"end":{"line":68,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":72,"col":40,"offset":0},"end":{"line":72,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":72,"col":55,"offset":0},"end":{"line":72,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":29,"offset":0},"end":{"line":91,"col":30,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":91,"col":43,"offset":0},"end":{"line":91,"col":50,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":96,"col":28,"offset":0},"end":{"line":96,"col":32,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":96,"col":34,"offset":0},"end":{"line":96,"col":35,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":97,"col":18,"offset":0},"end":{"line":97,"col":25,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":104,"col":13,"offset":0},"end":{"line":104,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":108,"col":13,"offset":0},"end":{"line":108,"col":22,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":113,"col":12,"offset":0},"end":{"line":113,"col":24,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":117,"col":12,"offset":0},"end":{"line":117,"col":20,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":128,"col":12,"offset":0},"end":{"line":128,"col":21,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":137,"col":12,"offset":0},"end":{"line":137,"col":21,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":139,"col":12,"offset":0},"end":{"line":139,"col":22,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":143,"col":12,"offset":0},"end":{"line":143,"col":24,"offset":12}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":150,"col":13,"offset":0},"end":{"line":150,"col":23,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":154,"col":38,"offset":0},"end":{"line":154,"col":51,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":230,"col":9,"offset":0},"end":{"line":230,"col":13,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":252,"col":9,"offset":0},"end":{"line":252,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":272,"col":9,"offset":0},"end":{"line":272,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":291,"col":9,"offset":0},"end":{"line":291,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":322,"col":11,"offset":0},"end":{"line":322,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":393,"col":9,"offset":0},"end":{"line":393,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":403,"col":9,"offset":0},"end":{"line":403,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":422,"col":9,"offset":0},"end":{"line":422,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":454,"col":23,"offset":0},"end":{"line":454,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":461,"col":9,"offset":0},"end":{"line":461,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":497,"col":23,"offset":0},"end":{"line":497,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":530,"col":18,"offset":0},"end":{"line":530,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":564,"col":18,"offset":0},"end":{"line":564,"col":22,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/encoding.c","start":{"line":587,"col":9,"offset":0},"end":{"line":587,"col":13,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":81,"col":1,"offset":0},"end":{"line":87,"col":25,"offset":167}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":35,"offset":0},"end":{"line":107,"col":39,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":41,"offset":0},"end":{"line":107,"col":42,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":48,"offset":0},"end":{"line":107,"col":55,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":168,"col":3,"offset":0},"end":{"line":168,"col":14,"offset":11}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":174,"col":35,"offset":0},"end":{"line":174,"col":36,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":2,"offset":0},"end":{"line":191,"col":3,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":16,"offset":0},"end":{"line":191,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":22,"offset":0},"end":{"line":191,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":53,"offset":0},"end":{"line":191,"col":54,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":192,"col":1,"offset":0},"end":{"line":192,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":16,"offset":0},"end":{"line":193,"col":20,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":22,"offset":0},"end":{"line":193,"col":23,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":55,"offset":0},"end":{"line":195,"col":2,"offset":25}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":201,"col":9,"offset":0},"end":{"line":201,"col":16,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":203,"col":9,"offset":0},"end":{"line":203,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":204,"col":9,"offset":0},"end":{"line":204,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":207,"col":9,"offset":0},"end":{"line":207,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":209,"col":9,"offset":0},"end":{"line":209,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":213,"col":9,"offset":0},"end":{"line":213,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":217,"col":9,"offset":0},"end":{"line":217,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":223,"col":15,"offset":0},"end":{"line":223,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":225,"col":9,"offset":0},"end":{"line":225,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":242,"col":11,"offset":0},"end":{"line":242,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":252,"col":40,"offset":0},"end":{"line":252,"col":53,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":252,"col":55,"offset":0},"end":{"line":252,"col":56,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":262,"col":14,"offset":0},"end":{"line":262,"col":41,"offset":27}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":262,"col":49,"offset":0},"end":{"line":262,"col":51,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":265,"col":7,"offset":0},"end":{"line":279,"col":40,"offset":401}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":286,"col":39,"offset":0},"end":{"line":286,"col":52,"offset":13}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":352,"col":9,"offset":0},"end":{"line":352,"col":16,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":366,"col":21,"offset":0},"end":{"line":366,"col":25,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":366,"col":27,"offset":0},"end":{"line":366,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":377,"col":11,"offset":0},"end":{"line":377,"col":18,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":378,"col":77,"offset":0},"end":{"line":378,"col":78,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":418,"col":20,"offset":0},"end":{"line":418,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":435,"col":15,"offset":0},"end":{"line":435,"col":22,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":435,"col":29,"offset":0},"end":{"line":435,"col":36,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":442,"col":11,"offset":0},"end":{"line":442,"col":14,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":476,"col":44,"offset":0},"end":{"line":476,"col":52,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":480,"col":30,"offset":0},"end":{"line":480,"col":37,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":520,"col":9,"offset":0},"end":{"line":520,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":555,"col":9,"offset":0},"end":{"line":555,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":30,"offset":0},"end":{"line":562,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":36,"offset":0},"end":{"line":562,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":565,"col":27,"offset":0},"end":{"line":565,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":566,"col":20,"offset":0},"end":{"line":566,"col":29,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":568,"col":30,"offset":0},"end":{"line":568,"col":33,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":582,"col":12,"offset":0},"end":{"line":582,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":592,"col":16,"offset":0},"end":{"line":592,"col":23,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":593,"col":20,"offset":0},"end":{"line":593,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":599,"col":9,"offset":0},"end":{"line":599,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":30,"offset":0},"end":{"line":611,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":36,"offset":0},"end":{"line":611,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":21,"offset":0},"end":{"line":614,"col":28,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":41,"offset":0},"end":{"line":614,"col":45,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":47,"offset":0},"end":{"line":614,"col":48,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":615,"col":21,"offset":0},"end":{"line":615,"col":30,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":616,"col":22,"offset":0},"end":{"line":616,"col":29,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":617,"col":31,"offset":0},"end":{"line":617,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":625,"col":12,"offset":0},"end":{"line":625,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":635,"col":17,"offset":0},"end":{"line":635,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":636,"col":20,"offset":0},"end":{"line":636,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":642,"col":9,"offset":0},"end":{"line":642,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":30,"offset":0},"end":{"line":654,"col":34,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":36,"offset":0},"end":{"line":654,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":657,"col":27,"offset":0},"end":{"line":657,"col":34,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":657,"col":36,"offset":0},"end":{"line":657,"col":37,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":658,"col":21,"offset":0},"end":{"line":658,"col":30,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":659,"col":22,"offset":0},"end":{"line":659,"col":32,"offset":10}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":660,"col":31,"offset":0},"end":{"line":660,"col":34,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":666,"col":12,"offset":0},"end":{"line":666,"col":19,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":675,"col":17,"offset":0},"end":{"line":675,"col":24,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":676,"col":20,"offset":0},"end":{"line":676,"col":27,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":697,"col":24,"offset":0},"end":{"line":697,"col":28,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":697,"col":30,"offset":0},"end":{"line":697,"col":31,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":747,"col":34,"offset":0},"end":{"line":747,"col":42,"offset":8}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":764,"col":14,"offset":0},"end":{"line":764,"col":21,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":765,"col":16,"offset":0},"end":{"line":765,"col":44,"offset":28}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":766,"col":6,"offset":0},"end":{"line":766,"col":8,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":768,"col":23,"offset":0},"end":{"line":768,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":770,"col":23,"offset":0},"end":{"line":770,"col":30,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":772,"col":24,"offset":0},"end":{"line":772,"col":31,"offset":7}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":774,"col":17,"offset":0},"end":{"line":774,"col":43,"offset":26}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":775,"col":5,"offset":0},"end":{"line":775,"col":7,"offset":2}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":777,"col":3,"offset":0},"end":{"line":777,"col":40,"offset":37}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":785,"col":15,"offset":0},"end":{"line":785,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":808,"col":9,"offset":0},"end":{"line":808,"col":12,"offset":3}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":13,"offset":0},"end":{"line":889,"col":17,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":26,"offset":0},"end":{"line":889,"col":27,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":34,"offset":0},"end":{"line":889,"col":43,"offset":9}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":25,"offset":0},"end":{"line":905,"col":29,"offset":4}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":31,"offset":0},"end":{"line":905,"col":32,"offset":1}},{"path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":963,"col":29,"offset":0},"end":{"line":963,"col":42,"offset":13}}]],"message":"Syntax error at line /home/capstone/Desktop/root/file-5.38/src/compress.c:81:\n `#define DPRINTF(...)\tdo { \\\n\tif (tty == -1) \\\n\t\ttty = open(\"/dev/tty\", O_RDWR); \\\n\tif (tty == -1) \\\n\t\tabort(); \\\n\tdprintf(tty, __VA_ARGS__); \\\n} while (/*CONSTCOND*/0)` was unexpected","path":"/home/capstone/Desktop/root/file-5.38/src/compress.c","spans":[{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":81,"col":1,"offset":0},"end":{"line":87,"col":25,"offset":167}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":35,"offset":0},"end":{"line":107,"col":39,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":41,"offset":0},"end":{"line":107,"col":42,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":107,"col":48,"offset":0},"end":{"line":107,"col":55,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":168,"col":3,"offset":0},"end":{"line":168,"col":14,"offset":11}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":174,"col":35,"offset":0},"end":{"line":174,"col":36,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":2,"offset":0},"end":{"line":191,"col":3,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":16,"offset":0},"end":{"line":191,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":22,"offset":0},"end":{"line":191,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":191,"col":53,"offset":0},"end":{"line":191,"col":54,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":192,"col":1,"offset":0},"end":{"line":192,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":16,"offset":0},"end":{"line":193,"col":20,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":22,"offset":0},"end":{"line":193,"col":23,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":193,"col":55,"offset":0},"end":{"line":195,"col":2,"offset":25}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":201,"col":9,"offset":0},"end":{"line":201,"col":16,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":203,"col":9,"offset":0},"end":{"line":203,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":204,"col":9,"offset":0},"end":{"line":204,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":207,"col":9,"offset":0},"end":{"line":207,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":209,"col":9,"offset":0},"end":{"line":209,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":213,"col":9,"offset":0},"end":{"line":213,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":217,"col":9,"offset":0},"end":{"line":217,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":223,"col":15,"offset":0},"end":{"line":223,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":225,"col":9,"offset":0},"end":{"line":225,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":242,"col":11,"offset":0},"end":{"line":242,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":252,"col":40,"offset":0},"end":{"line":252,"col":53,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":252,"col":55,"offset":0},"end":{"line":252,"col":56,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":262,"col":14,"offset":0},"end":{"line":262,"col":41,"offset":27}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":262,"col":49,"offset":0},"end":{"line":262,"col":51,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":265,"col":7,"offset":0},"end":{"line":279,"col":40,"offset":401}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":286,"col":39,"offset":0},"end":{"line":286,"col":52,"offset":13}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":352,"col":9,"offset":0},"end":{"line":352,"col":16,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":366,"col":21,"offset":0},"end":{"line":366,"col":25,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":366,"col":27,"offset":0},"end":{"line":366,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":377,"col":11,"offset":0},"end":{"line":377,"col":18,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":378,"col":77,"offset":0},"end":{"line":378,"col":78,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":418,"col":20,"offset":0},"end":{"line":418,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":435,"col":15,"offset":0},"end":{"line":435,"col":22,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":435,"col":29,"offset":0},"end":{"line":435,"col":36,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":442,"col":11,"offset":0},"end":{"line":442,"col":14,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":476,"col":44,"offset":0},"end":{"line":476,"col":52,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":480,"col":30,"offset":0},"end":{"line":480,"col":37,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":520,"col":9,"offset":0},"end":{"line":520,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":555,"col":9,"offset":0},"end":{"line":555,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":30,"offset":0},"end":{"line":562,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":562,"col":36,"offset":0},"end":{"line":562,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":565,"col":27,"offset":0},"end":{"line":565,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":566,"col":20,"offset":0},"end":{"line":566,"col":29,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":568,"col":30,"offset":0},"end":{"line":568,"col":33,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":582,"col":12,"offset":0},"end":{"line":582,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":592,"col":16,"offset":0},"end":{"line":592,"col":23,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":593,"col":20,"offset":0},"end":{"line":593,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":599,"col":9,"offset":0},"end":{"line":599,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":30,"offset":0},"end":{"line":611,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":611,"col":36,"offset":0},"end":{"line":611,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":21,"offset":0},"end":{"line":614,"col":28,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":41,"offset":0},"end":{"line":614,"col":45,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":614,"col":47,"offset":0},"end":{"line":614,"col":48,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":615,"col":21,"offset":0},"end":{"line":615,"col":30,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":616,"col":22,"offset":0},"end":{"line":616,"col":29,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":617,"col":31,"offset":0},"end":{"line":617,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":625,"col":12,"offset":0},"end":{"line":625,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":635,"col":17,"offset":0},"end":{"line":635,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":636,"col":20,"offset":0},"end":{"line":636,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":642,"col":9,"offset":0},"end":{"line":642,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":30,"offset":0},"end":{"line":654,"col":34,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":654,"col":36,"offset":0},"end":{"line":654,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":657,"col":27,"offset":0},"end":{"line":657,"col":34,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":657,"col":36,"offset":0},"end":{"line":657,"col":37,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":658,"col":21,"offset":0},"end":{"line":658,"col":30,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":659,"col":22,"offset":0},"end":{"line":659,"col":32,"offset":10}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":660,"col":31,"offset":0},"end":{"line":660,"col":34,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":666,"col":12,"offset":0},"end":{"line":666,"col":19,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":675,"col":17,"offset":0},"end":{"line":675,"col":24,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":676,"col":20,"offset":0},"end":{"line":676,"col":27,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":697,"col":24,"offset":0},"end":{"line":697,"col":28,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":697,"col":30,"offset":0},"end":{"line":697,"col":31,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":747,"col":34,"offset":0},"end":{"line":747,"col":42,"offset":8}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":764,"col":14,"offset":0},"end":{"line":764,"col":21,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":765,"col":16,"offset":0},"end":{"line":765,"col":44,"offset":28}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":766,"col":6,"offset":0},"end":{"line":766,"col":8,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":768,"col":23,"offset":0},"end":{"line":768,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":770,"col":23,"offset":0},"end":{"line":770,"col":30,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":772,"col":24,"offset":0},"end":{"line":772,"col":31,"offset":7}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":774,"col":17,"offset":0},"end":{"line":774,"col":43,"offset":26}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":775,"col":5,"offset":0},"end":{"line":775,"col":7,"offset":2}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":777,"col":3,"offset":0},"end":{"line":777,"col":40,"offset":37}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":785,"col":15,"offset":0},"end":{"line":785,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":808,"col":9,"offset":0},"end":{"line":808,"col":12,"offset":3}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":13,"offset":0},"end":{"line":889,"col":17,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":26,"offset":0},"end":{"line":889,"col":27,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":889,"col":34,"offset":0},"end":{"line":889,"col":43,"offset":9}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":25,"offset":0},"end":{"line":905,"col":29,"offset":4}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":905,"col":31,"offset":0},"end":{"line":905,"col":32,"offset":1}},{"file":"/home/capstone/Desktop/root/file-5.38/src/compress.c","start":{"line":963,"col":29,"offset":0},"end":{"line":963,"col":42,"offset":13}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.FILE5_38-1-gd955cefc.-td-is-for-ptrdiff-t-not-for-off-t.patch/src/readelf.c","/home/capstone/Desktop/root/file-5.38/.pc/cherry-pick.revert.FILE5_37-59-g24c9c086.revert-pr-93-iaeiaeiaeiae-do-as-the-comment-says-and-count-as-dynamically-linked.patch/src/readelf.c","/home/capstone/Desktop/root/file-5.38/.pc/local.mention-posixly-correct-dependent-behaviour-in-usage-message.patch/src/file_opts.h","/home/capstone/Desktop/root/file-5.38/.pc/local.support-local-definitions-in-etc-magic.patch/src/apprentice.c","/home/capstone/Desktop/root/file-5.38/config.h","/home/capstone/Desktop/root/file-5.38/src/apprentice.c","/home/capstone/Desktop/root/file-5.38/src/apptype.c","/home/capstone/Desktop/root/file-5.38/src/ascmagic.c","/home/capstone/Desktop/root/file-5.38/src/asctime_r.c","/home/capstone/Desktop/root/file-5.38/src/asprintf.c","/home/capstone/Desktop/root/file-5.38/src/buffer.c","/home/capstone/Desktop/root/file-5.38/src/cdf.c","/home/capstone/Desktop/root/file-5.38/src/cdf.h","/home/capstone/Desktop/root/file-5.38/src/cdf_time.c","/home/capstone/Desktop/root/file-5.38/src/compress.c","/home/capstone/Desktop/root/file-5.38/src/ctime_r.c","/home/capstone/Desktop/root/file-5.38/src/der.c","/home/capstone/Desktop/root/file-5.38/src/der.h","/home/capstone/Desktop/root/file-5.38/src/dprintf.c","/home/capstone/Desktop/root/file-5.38/src/elfclass.h","/home/capstone/Desktop/root/file-5.38/src/encoding.c","/home/capstone/Desktop/root/file-5.38/src/file.c","/home/capstone/Desktop/root/file-5.38/src/file.h","/home/capstone/Desktop/root/file-5.38/src/file_opts.h","/home/capstone/Desktop/root/file-5.38/src/fmtcheck.c","/home/capstone/Desktop/root/file-5.38/src/fsmagic.c","/home/capstone/Desktop/root/file-5.38/src/funcs.c","/home/capstone/Desktop/root/file-5.38/src/getline.c","/home/capstone/Desktop/root/file-5.38/src/getopt_long.c","/home/capstone/Desktop/root/file-5.38/src/gmtime_r.c","/home/capstone/Desktop/root/file-5.38/src/is_csv.c","/home/capstone/Desktop/root/file-5.38/src/is_json.c","/home/capstone/Desktop/root/file-5.38/src/is_tar.c","/home/capstone/Desktop/root/file-5.38/src/localtime_r.c","/home/capstone/Desktop/root/file-5.38/src/magic.c","/home/capstone/Desktop/root/file-5.38/src/magic.h","/home/capstone/Desktop/root/file-5.38/src/mygetopt.h","/home/capstone/Desktop/root/file-5.38/src/pread.c","/home/capstone/Desktop/root/file-5.38/src/print.c","/home/capstone/Desktop/root/file-5.38/src/readcdf.c","/home/capstone/Desktop/root/file-5.38/src/readelf.c","/home/capstone/Desktop/root/file-5.38/src/readelf.h","/home/capstone/Desktop/root/file-5.38/src/seccomp.c","/home/capstone/Desktop/root/file-5.38/src/softmagic.c","/home/capstone/Desktop/root/file-5.38/src/strcasestr.c","/home/capstone/Desktop/root/file-5.38/src/strlcat.c","/home/capstone/Desktop/root/file-5.38/src/strlcpy.c","/home/capstone/Desktop/root/file-5.38/src/tar.h","/home/capstone/Desktop/root/file-5.38/src/vasprintf.c"]},"interfile_languages_used":[],"skipped_rules":[]}