{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c","start":{"line":33,"col":5,"offset":1074},"end":{"line":33,"col":34,"offset":1103},"extra":{"metavars":{"$PTR":{"start":{"line":33,"col":11,"offset":1080},"end":{"line":33,"col":32,"offset":1101},"abstract_content":"dbm->->_dbm_memory.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2502e6f971c1017aa1ae0c434dbffdcf8945be38dd676371954098b5305e503d3550169f9a0aafe82524605c26746f4a803e3812b2903774166dd5259e6adf81_0","lines":"    free (dbm->_dbm_memory.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c","start":{"line":35,"col":5,"offset":1135},"end":{"line":35,"col":32,"offset":1162},"extra":{"metavars":{"$PTR":{"start":{"line":35,"col":11,"offset":1141},"end":{"line":35,"col":30,"offset":1160},"abstract_content":"dbm->->_dbm_fetch_val"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"46cfcb3b29cfec076c07e515253c871524a05097925c1fce40c9acd499ef47b1133601db3537de99a1272563805d113e303a738771ce79ef99c2b6b859f900f4_0","lines":"    free (dbm->_dbm_fetch_val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c","start":{"line":36,"col":3,"offset":1165},"end":{"line":36,"col":14,"offset":1176},"extra":{"metavars":{"$PTR":{"start":{"line":36,"col":9,"offset":1171},"end":{"line":36,"col":12,"offset":1174},"abstract_content":"dbm"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"90e0d5f52916ec9b347510bbe424fbe8070f83a3c088233488b94ad3b411f0c1c9964df61ce64c482ad7dc761d4bf49e539f59c02542cdff0993cc954d976bc9_0","lines":"  free (dbm);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmfetch.c","start":{"line":38,"col":5,"offset":1381},"end":{"line":38,"col":32,"offset":1408},"extra":{"metavars":{"$PTR":{"start":{"line":38,"col":11,"offset":1387},"end":{"line":38,"col":30,"offset":1406},"abstract_content":"dbm->->_dbm_fetch_val"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c5e775b4b5c57cb6df18dc3f5581eeafbe0a55cab0051890f758a2deefde8775c979e6cfb07a295611aba610c58bd8539a601d9404711e89dbea254ea390048e_0","lines":"    free (dbm->_dbm_fetch_val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbminit.c","start":{"line":43,"col":16,"offset":1744},"end":{"line":43,"col":45,"offset":1773},"extra":{"metavars":{"$FUN":{"start":{"line":43,"col":16,"offset":1744},"end":{"line":43,"col":24,"offset":1752},"abstract_content":"dbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b7d5e8ac3b3a13807c0760d818824caaa46a8606767bf4df4d91f51c0a4752b5b4dc33fb1b74e2e97b93ba37e4cde2dd467d456c16950c15fa36372045f19960_0","lines":"  _gdbm_file = dbm_open (file, O_RDWR, 0644);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbminit.c","start":{"line":47,"col":20,"offset":1884},"end":{"line":47,"col":51,"offset":1915},"extra":{"metavars":{"$FUN":{"start":{"line":47,"col":20,"offset":1884},"end":{"line":47,"col":28,"offset":1892},"abstract_content":"dbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b7d5e8ac3b3a13807c0760d818824caaa46a8606767bf4df4d91f51c0a4752b5b4dc33fb1b74e2e97b93ba37e4cde2dd467d456c16950c15fa36372045f19960_1","lines":"      _gdbm_file = dbm_open (file, O_RDONLY, 0644);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":66,"col":3,"offset":1799},"end":{"line":67,"col":35,"offset":1885},"extra":{"metavars":{"$EXPR1":{"start":{"line":66,"col":16,"offset":1812},"end":{"line":66,"col":36,"offset":1832},"abstract_content":"mode&GDBM_OPENMASK"},"$EXPR2":{"start":{"line":66,"col":41,"offset":1837},"end":{"line":66,"col":52,"offset":1848},"abstract_content":"GDBM_READER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65f6741aceeadeeced7c3036086ff95ead7c84326e87b832248bc8e2e26fc8eff39c60ff6405e6e837e424549276e6a8e6be9a1ffd416d518a37eff214dbd0ef_0","lines":"  int flags = (mode & GDBM_OPENMASK) == GDBM_READER ?\n                O_RDONLY : O_RDWR;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":69,"col":3,"offset":1889},"end":{"line":70,"col":24,"offset":1937},"extra":{"metavars":{"$EXPR1":{"start":{"line":69,"col":7,"offset":1893},"end":{"line":69,"col":11,"offset":1897},"abstract_content":"mode"},"$EXPR2":{"start":{"line":69,"col":14,"offset":1900},"end":{"line":69,"col":26,"offset":1912},"abstract_content":"GDBM_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dbc284f0c0c1bfa468ec512ad5bcf365d3d46d5a6627cc0f269c3a57de82d81bb213d72f3a204da9a0818691fc4c5baff32f8d4351930315df7023e75403b91e_0","lines":"  if (mode & GDBM_CLOEXEC)\n    flags |= O_CLOEXEC;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":72,"col":7,"offset":1951},"end":{"line":72,"col":28,"offset":1972},"extra":{"metavars":{"$FUN":{"start":{"line":72,"col":7,"offset":1951},"end":{"line":72,"col":12,"offset":1956},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"08ebf9b3b5ccc4a8b3d7fddec537c1d307f1755fc0edcf7c264f9fc783d3066d9c65de719e2ff2f35d0fc8573ffed99712a6784e2d9c2ad69dbb50f094bc1a2d_0","lines":"  if (fstat (pagfd, &pagst))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":79,"col":7,"offset":2174},"end":{"line":79,"col":28,"offset":2195},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"ddc0d6661b1490f63136fad25a634fba46f26b2792ad30dd73b3b9066a12327521a6a227a445d10ffb15d5a3cb88ce94eac03ae30ebc08beb334ed3bc51cc240_0","lines":"  if (stat (file_name, &st) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":79,"col":7,"offset":2174},"end":{"line":79,"col":28,"offset":2195},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":7,"offset":2174},"end":{"line":79,"col":11,"offset":2178},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a5596a67b40645a2b1ac3e4e52f18bbd40e527a6c1370b81a8785b5ae4b1a8b21109070973c36ad257913eceab3ab0a3b438c035e7d6d1825161e5a9e97b493e_0","lines":"  if (stat (file_name, &st) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":85,"col":12,"offset":2320},"end":{"line":85,"col":30,"offset":2338},"extra":{"metavars":{"$FUN":{"start":{"line":85,"col":12,"offset":2320},"end":{"line":85,"col":18,"offset":2326},"abstract_content":"unlink"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"67f25975b6553556394a90a860bed9fb6f009256b10f7e3982a4246082c4231f97ba1718c1a240f79e556f61f5a1a7c4d52da87b8130b3616698f946ff95a55f_0","lines":"\t      if (unlink (file_name))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":103,"col":12,"offset":2698},"end":{"line":140,"col":3,"offset":3539},"extra":{"metavars":{"$COND":{"start":{"line":103,"col":16,"offset":2702},"end":{"line":103,"col":31,"offset":2717},"abstract_content":"st.st_size==0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c452105901a934de0ccd91853ea493de7639a5bdbf83ce1bcdc7908902cad43c3e5440682d725a2eee0b00955f2f4888943f0f8876ff400f7b0626fff165bad4_0","lines":"      else if (st.st_size == 0)\n\t/* ok */;\n      else if (st.st_size != DEF_DIR_SIZE)\n\t{\n\t  gdbm_set_errno (NULL, GDBM_BAD_MAGIC_NUMBER, FALSE);\n\t  return -1;\n\t}\n      else\n\t{\n\t  fd = open (file_name, flags);\n\t  if (fd == -1)\n\t    {\n\t      gdbm_set_errno (NULL, GDBM_FILE_OPEN_ERROR, FALSE);\n\t      return fd;\n\t    }\n\t  \n\t  if (read (fd, dirbuf, sizeof (dirbuf)) != sizeof (dirbuf))\n\t    {\n\t      gdbm_set_errno (NULL, GDBM_FILE_OPEN_ERROR, FALSE);\n\t      close (fd);\n\t      return -1;\n\t    } \n\t  \n\t  if (getint (dirbuf) == GDBM_DIR_MAGIC)\n\t    {\n\t      int v[3];\n\t      \n\t      v[0] = getint (dirbuf + 4);\n\t      v[1] = getint (dirbuf + 8);\n\t      v[2] = getint (dirbuf + 12);\n\t      \n\t      if (gdbm_version_cmp (v, gdbm_version_number) <= 0)\n\t\treturn fd;\n\t    }\n\t  close (fd);\n\t  gdbm_set_errno (NULL, GDBM_BAD_MAGIC_NUMBER, FALSE);\n\t  return -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":112,"col":9,"offset":2871},"end":{"line":112,"col":32,"offset":2894},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":9,"offset":2871},"end":{"line":112,"col":13,"offset":2875},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"484e0d22fff34bf43a69488719a5edd26f2d7214dc1e9d2131ea18d9deaae33e44a1d1a7b0cc65b97d123b1905802bc4b6c4b76be93ae396d34fb54fd98ad49b_0","lines":"\t  fd = open (file_name, flags);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":119,"col":8,"offset":3015},"end":{"line":119,"col":42,"offset":3049},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":8,"offset":3015},"end":{"line":119,"col":12,"offset":3019},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eaf53ad1dfeb4e93e22876ba0e558101d389a991cc0a2aee7f742a1e3a9535af748ff6ca565b2ac66347617cc97b0d8f4ce1aa7c5f707ebb9d76520388aa5ce2_0","lines":"\t  if (read (fd, dirbuf, sizeof (dirbuf)) != sizeof (dirbuf))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":144,"col":8,"offset":3597},"end":{"line":144,"col":63,"offset":3652},"extra":{"metavars":{"$FUN":{"start":{"line":144,"col":8,"offset":3597},"end":{"line":144,"col":12,"offset":3601},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"484e0d22fff34bf43a69488719a5edd26f2d7214dc1e9d2131ea18d9deaae33e44a1d1a7b0cc65b97d123b1905802bc4b6c4b76be93ae396d34fb54fd98ad49b_1","lines":"  fd = open (file_name, flags | O_CREAT, pagst.st_mode & 0777);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":166,"col":21,"offset":4142},"end":{"line":166,"col":61,"offset":4182},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":21,"offset":4142},"end":{"line":166,"col":27,"offset":4148},"abstract_content":"malloc"},"$X":{"start":{"line":166,"col":29,"offset":4150},"end":{"line":166,"col":42,"offset":4163},"abstract_content":"strlen(base)"},"$Y":{"start":{"line":166,"col":45,"offset":4166},"end":{"line":166,"col":59,"offset":4180},"abstract_content":"sizeof DIRSUF"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"63c2652e9b981b166f1779591bca70a5f79e0f110ca5ec56ba24e01639db981c3cb31a9dcc3fae0f489d1ba1aea293f35c859fe6db9cb104d1fc323d5054150b_0","lines":"  char *file_name = malloc (strlen (base) + sizeof (DIRSUF));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":166,"col":21,"offset":4142},"end":{"line":166,"col":61,"offset":4182},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":21,"offset":4142},"end":{"line":166,"col":27,"offset":4148},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bc004a58529d11ce76374547c5275b2fed58ab6080b7cbdddb4c7dd90a38f552f27f3c149743337d241b1fbbbdf2dd22348c2c0348bbad5b64440c873bef3740_0","lines":"  char *file_name = malloc (strlen (base) + sizeof (DIRSUF));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":174,"col":29,"offset":4327},"end":{"line":174,"col":70,"offset":4368},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"db6eb41e2059c3a69fce7ff25d5a3405f85df9ae9c5ae8744d631a04da91a856b6d8a0e9b36adad74a43de46148760e46d7f79ab6728c8df43c5bad78fb266dd_0","lines":"  fd = ndbm_open_dir_file0 (strcat (strcpy (file_name, base), DIRSUF),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":174,"col":29,"offset":4327},"end":{"line":174,"col":70,"offset":4368},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":29,"offset":4327},"end":{"line":174,"col":35,"offset":4333},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1711a1954bf2fef8809dfec8baaa62f0242fb91039d4b52127cb5a446f42de79f014c385cb33951be50ef7840b30eeac4fb927eedf3b8e2b886e6cae53555514_0","lines":"  fd = ndbm_open_dir_file0 (strcat (strcpy (file_name, base), DIRSUF),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":174,"col":37,"offset":4335},"end":{"line":174,"col":61,"offset":4359},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"db6eb41e2059c3a69fce7ff25d5a3405f85df9ae9c5ae8744d631a04da91a856b6d8a0e9b36adad74a43de46148760e46d7f79ab6728c8df43c5bad78fb266dd_1","lines":"  fd = ndbm_open_dir_file0 (strcat (strcpy (file_name, base), DIRSUF),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":174,"col":37,"offset":4335},"end":{"line":174,"col":61,"offset":4359},"extra":{"metavars":{"$FUN":{"start":{"line":174,"col":37,"offset":4335},"end":{"line":174,"col":43,"offset":4341},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"220481ffd582d203598b6aa1603467d3d19c2ffb962120ff57eaaeb56ef2a2b82c078a7a611d025231b7ae52ef7b2b6249c5261741388d963b9ee63c26798019_0","lines":"  fd = ndbm_open_dir_file0 (strcat (strcpy (file_name, base), DIRSUF),","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":212,"col":23,"offset":6040},"end":{"line":212,"col":49,"offset":6066},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":23,"offset":6040},"end":{"line":212,"col":29,"offset":6046},"abstract_content":"malloc"},"$X":{"start":{"line":212,"col":31,"offset":6048},"end":{"line":212,"col":44,"offset":6061},"abstract_content":"strlen(file)"},"$Y":{"start":{"line":212,"col":47,"offset":6064},"end":{"line":212,"col":48,"offset":6065},"abstract_content":"5"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a1199bb79e50b64bc235acff125960fffad0b03639679c097a40b4620a340494cdac9d5f161feb02c4f973507c2e420aa1da6a4ce3c5fd5dd3684a71c6687c1f_0","lines":"  pag_file = (char *) malloc (strlen (file) + 5);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":212,"col":23,"offset":6040},"end":{"line":212,"col":49,"offset":6066},"extra":{"metavars":{"$FUN":{"start":{"line":212,"col":23,"offset":6040},"end":{"line":212,"col":29,"offset":6046},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bc004a58529d11ce76374547c5275b2fed58ab6080b7cbdddb4c7dd90a38f552f27f3c149743337d241b1fbbbdf2dd22348c2c0348bbad5b64440c873bef3740_1","lines":"  pag_file = (char *) malloc (strlen (file) + 5);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":219,"col":3,"offset":6200},"end":{"line":219,"col":26,"offset":6223},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"db6eb41e2059c3a69fce7ff25d5a3405f85df9ae9c5ae8744d631a04da91a856b6d8a0e9b36adad74a43de46148760e46d7f79ab6728c8df43c5bad78fb266dd_2","lines":"  strcpy (pag_file, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":219,"col":3,"offset":6200},"end":{"line":219,"col":26,"offset":6223},"extra":{"metavars":{"$FUN":{"start":{"line":219,"col":3,"offset":6200},"end":{"line":219,"col":9,"offset":6206},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"220481ffd582d203598b6aa1603467d3d19c2ffb962120ff57eaaeb56ef2a2b82c078a7a611d025231b7ae52ef7b2b6249c5261741388d963b9ee63c26798019_1","lines":"  strcpy (pag_file, file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":220,"col":3,"offset":6227},"end":{"line":220,"col":28,"offset":6252},"extra":{"metavars":{"$FUN":{"start":{"line":220,"col":3,"offset":6227},"end":{"line":220,"col":9,"offset":6233},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1711a1954bf2fef8809dfec8baaa62f0242fb91039d4b52127cb5a446f42de79f014c385cb33951be50ef7840b30eeac4fb927eedf3b8e2b886e6cae53555514_1","lines":"  strcat (pag_file, \".pag\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":230,"col":8,"offset":6476},"end":{"line":242,"col":6,"offset":6696},"extra":{"metavars":{"$EXPR1":{"start":{"line":230,"col":18,"offset":6486},"end":{"line":230,"col":24,"offset":6492},"abstract_content":"O_RDWR"},"$EXPR2":{"start":{"line":230,"col":27,"offset":6495},"end":{"line":230,"col":34,"offset":6502},"abstract_content":"O_CREAT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3205be634957763098d93f72ba8ceaaa46a95468a9b36819ac6aebf56418e0557107009ca6dd3f792dddd5bb7f47c21d3c779204612c583a366338df4712609e_0","lines":"  else if (f == (O_RDWR | O_CREAT))\n    {\n      open_flags = GDBM_WRCREAT;\n    }\n  else if ((f & O_TRUNC) == O_TRUNC)\n    {\n      open_flags = GDBM_NEWDB;\n    }\n  else\n    {\n      open_flags = GDBM_WRITER;\n      mode = 0;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":244,"col":3,"offset":6700},"end":{"line":245,"col":32,"offset":6754},"extra":{"metavars":{"$EXPR1":{"start":{"line":244,"col":7,"offset":6704},"end":{"line":244,"col":12,"offset":6709},"abstract_content":"flags"},"$EXPR2":{"start":{"line":244,"col":15,"offset":6712},"end":{"line":244,"col":24,"offset":6721},"abstract_content":"O_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f4a5e0bd8af50da5bc70d3c728ebcd46f6df3e0beb0f93e557fe3659d0de8b6070ef494ce5f5bb14cbd30361b1c1f9f0a62c7f684d3783fd74b6cb44fc3cdda_0","lines":"  if (flags & O_CLOEXEC)\n    open_flags |= GDBM_CLOEXEC;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":249,"col":9,"offset":6796},"end":{"line":249,"col":34,"offset":6821},"extra":{"metavars":{"$FUN":{"start":{"line":249,"col":9,"offset":6796},"end":{"line":249,"col":15,"offset":6802},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"10f07925b0fb1ae00cf96eac8cfe7998faaacfee463628cd83a05799a7e75567f83fe112c1eb6d3ccefaa4301b3c9df87f4aa78ad8f64fd7c42c59bca04f2493_0","lines":"  dbm = calloc (1, sizeof (*dbm));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":249,"col":9,"offset":6796},"end":{"line":249,"col":34,"offset":6821},"extra":{"metavars":{"$CNT":{"start":{"line":249,"col":17,"offset":6804},"end":{"line":249,"col":18,"offset":6805},"abstract_content":"1"},"$LEN":{"start":{"line":249,"col":20,"offset":6807},"end":{"line":249,"col":32,"offset":6819},"abstract_content":"sizeof*dbm"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c39d93c05e1c69e3e7dfc65d0d7736d67d346ebb65a677e23b91222053d23579f933b9a1cebdd518d3f2a943798f1ac13aec1b13172753d7e27a4632cc52ff0f_0","lines":"  dbm = calloc (1, sizeof (*dbm));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","start":{"line":257,"col":15,"offset":6991},"end":{"line":257,"col":62,"offset":7038},"extra":{"metavars":{"$FUN":{"start":{"line":257,"col":15,"offset":6991},"end":{"line":257,"col":24,"offset":7000},"abstract_content":"gdbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c64b7bf18523ed9b5270c63cec29ffcffe447df4ee6f261d1577276f06fe794340e10491f7529cd5652bb8810c7d84cda20569cd470948490840cb233cba960_0","lines":"  dbm->file = gdbm_open (pag_file, 0, open_flags, mode, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c","start":{"line":39,"col":5,"offset":1349},"end":{"line":39,"col":34,"offset":1378},"extra":{"metavars":{"$PTR":{"start":{"line":39,"col":11,"offset":1355},"end":{"line":39,"col":32,"offset":1376},"abstract_content":"dbm->->_dbm_memory.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a49b104b6e23be7600216faedb45f4e60610a7cc903a32892d9a6551208ce75316b3bc8f280a4ca818fc5d116e469481d4578b5f75efd291ae2425648cff2d7_0","lines":"    free (dbm->_dbm_memory.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c","start":{"line":62,"col":5,"offset":1944},"end":{"line":62,"col":34,"offset":1973},"extra":{"metavars":{"$PTR":{"start":{"line":62,"col":11,"offset":1950},"end":{"line":62,"col":32,"offset":1971},"abstract_content":"dbm->->_dbm_memory.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1a49b104b6e23be7600216faedb45f4e60610a7cc903a32892d9a6551208ce75316b3bc8f280a4ca818fc5d116e469481d4578b5f75efd291ae2425648cff2d7_1","lines":"    free (dbm->_dbm_memory.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":39,"col":10,"offset":1600},"end":{"line":39,"col":44,"offset":1634},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":39,"col":10,"offset":1600},"end":{"line":39,"col":14,"offset":1604},"abstract_content":"olen"},"$SIGNED":{"start":{"line":39,"col":17,"offset":1607},"end":{"line":39,"col":18,"offset":1608},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b40e0e2078fb447b78fb3f65353b4699dcce20bbddbe30ca152bd2ef8ff4fd620f5a33eb271fb1633c35d22b5a7eae5947ff73aaa2219ee70791db2db7c9574b_0","lines":"  size_t olen = 4 * (input_len + 2) / 3 + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":44,"col":13,"offset":1704},"end":{"line":44,"col":36,"offset":1727},"extra":{"metavars":{"$X":{"start":{"line":39,"col":17,"offset":1607},"end":{"line":39,"col":40,"offset":1630},"abstract_content":"4*input_len+2/3"},"$Y":{"start":{"line":39,"col":43,"offset":1633},"end":{"line":39,"col":44,"offset":1634},"abstract_content":"1"},"$FUN":{"start":{"line":44,"col":13,"offset":1704},"end":{"line":44,"col":20,"offset":1711},"abstract_content":"realloc"},"$ARG1":{"start":{"line":44,"col":22,"offset":1713},"end":{"line":44,"col":29,"offset":1720},"abstract_content":"*output"},"$N":{"start":{"line":44,"col":31,"offset":1722},"end":{"line":44,"col":35,"offset":1726},"abstract_content":"olen","propagated_value":{"svalue_start":{"line":39,"col":17,"offset":1607},"svalue_end":{"line":39,"col":44,"offset":1634},"svalue_abstract_content":"4*input_len+2/3+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f2694921faf61157000c9cc5084eae2b44d61351e3f5887dcdbbe16f587c63d2a7e517488525e0d4450d8c272f05de9e8bf0a5e4e925d605829a92dcfc710784_0","lines":"      out = realloc (*output, olen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":44,"col":13,"offset":1704},"end":{"line":44,"col":36,"offset":1727},"extra":{"metavars":{"$FUN":{"start":{"line":44,"col":13,"offset":1704},"end":{"line":44,"col":20,"offset":1711},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dff32ac5086f97ae88218cae3ba3bad9e55cc26c53daf18bd6c6d6e6a38b0d3c4967d9f2b15389cf27128bf443a2995e9574e8df2e3a05bb63a3c829ee2910c5_0","lines":"      out = realloc (*output, olen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":84,"col":7,"offset":2668},"end":{"line":84,"col":23,"offset":2684},"extra":{"metavars":{"$SIGNED":{"start":{"line":84,"col":7,"offset":2668},"end":{"line":84,"col":11,"offset":2672},"abstract_content":"olen"},"$UNSIGNED":{"start":{"line":84,"col":14,"offset":2675},"end":{"line":84,"col":23,"offset":2684},"abstract_content":"input_len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f1792264dbe2ba3a3a48b21e2f169569f0fb6c74ac953738e3d09954625f6e9775aebcdec91e3b8c9986799f8a10e4729edc8172268f6bdb0c07608a89bb8a66_0","lines":"  int olen = input_len;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":86,"col":10,"offset":2717},"end":{"line":86,"col":17,"offset":2724},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":86,"col":10,"offset":2717},"end":{"line":86,"col":13,"offset":2720},"abstract_content":"ins"},"$SIGNED":{"start":{"line":86,"col":16,"offset":2723},"end":{"line":86,"col":17,"offset":2724},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0befe00f0321b0819bf5b80ac6397af2aa023a80331b394255244a90c5dc226f66ff62facd8cdc82a93397f15c093e7779a0693647f86d2b95ea065169c911af_0","lines":"  size_t ins = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":90,"col":13,"offset":2774},"end":{"line":90,"col":36,"offset":2797},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":13,"offset":2774},"end":{"line":90,"col":20,"offset":2781},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dff32ac5086f97ae88218cae3ba3bad9e55cc26c53daf18bd6c6d6e6a38b0d3c4967d9f2b15389cf27128bf443a2995e9574e8df2e3a05bb63a3c829ee2910c5_1","lines":"      out = realloc (*output, olen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","start":{"line":90,"col":13,"offset":2774},"end":{"line":90,"col":36,"offset":2797},"extra":{"metavars":{"$PTR":{"start":{"line":90,"col":22,"offset":2783},"end":{"line":90,"col":29,"offset":2790},"abstract_content":"*output"},"$LEN":{"start":{"line":90,"col":31,"offset":2792},"end":{"line":90,"col":35,"offset":2796},"abstract_content":"olen","propagated_value":{"svalue_start":{"line":84,"col":14,"offset":2675},"svalue_end":{"line":84,"col":23,"offset":2684},"svalue_abstract_content":"input_len"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b94f44c159b088e26ac9f92e59e495ecd2e51881ece25d435b0cdb8d6728311d7fcafb22e16bcd8370bc5820da3f6734463942e9070d3d096e8000386fe91bfb_0","lines":"      out = realloc (*output, olen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":124,"col":7,"offset":4019},"end":{"line":124,"col":51,"offset":4063},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":124,"col":7,"offset":4019},"end":{"line":124,"col":10,"offset":4022},"abstract_content":"lru"},"$SIGNED":{"start":{"line":124,"col":31,"offset":4043},"end":{"line":124,"col":32,"offset":4044},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"040cb05c68122606f63f73f1f402cd18f660375089652b3bf2796b85f09f0e11d0b470bf7fbc91d797a8f9b8e097119c7164769056dba278f171d7c09be1ba81_0","lines":"      lru = (dbf->last_read + 1) % dbf->cache_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":133,"col":7,"offset":4279},"end":{"line":134,"col":33,"offset":4372},"extra":{"metavars":{"$SIGNED":{"start":{"line":133,"col":7,"offset":4279},"end":{"line":133,"col":9,"offset":4281},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":133,"col":52,"offset":4324},"end":{"line":133,"col":55,"offset":4327},"abstract_content":"lru"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a766cb270b877753c97ee35549006975d66868be398cea6cd7fcb92bff1269cb00c109f222973bf71e7e9de66af865c1ad48748b6b6d04a3a36b7bb5bd673e1b_0","lines":"      rc = _gdbm_full_read (dbf, dbf->bucket_cache[lru].ca_bucket,\n\t\t\t    dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":133,"col":12,"offset":4284},"end":{"line":134,"col":33,"offset":4372},"extra":{"metavars":{"$FUN":{"start":{"line":133,"col":12,"offset":4284},"end":{"line":133,"col":27,"offset":4299},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19bb4488e51f703ff5db01276e38a07a04f7b1d090ed3b9d31c22b6b99bf702de76aaa95f354c9708ed7affebe9f7beef67554816916eb53b79495ac92c466f0_0","lines":"      rc = _gdbm_full_read (dbf, dbf->bucket_cache[lru].ca_bucket,\n\t\t\t    dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":178,"col":7,"offset":5557},"end":{"line":178,"col":41,"offset":5591},"extra":{"metavars":{"$FUN":{"start":{"line":178,"col":7,"offset":5557},"end":{"line":178,"col":13,"offset":5563},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"90890c57a2c2ba2dd3c375118b71131c6906edd44b766dd635b5f9356346dc335e0bed6fce88961ba5884da130052d4f17e6ed13cdc96a047a30de7e2003832f_0","lines":"      memcpy (bucket, dbf->bucket, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":187,"col":4,"offset":5741},"end":{"line":187,"col":57,"offset":5794},"extra":{"metavars":{"$FUN":{"start":{"line":187,"col":4,"offset":5741},"end":{"line":187,"col":10,"offset":5747},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"90890c57a2c2ba2dd3c375118b71131c6906edd44b766dd635b5f9356346dc335e0bed6fce88961ba5884da130052d4f17e6ed13cdc96a047a30de7e2003832f_1","lines":"\t  memcpy (bucket, dbf->bucket_cache[i].ca_bucket, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":199,"col":7,"offset":6008},"end":{"line":199,"col":42,"offset":6043},"extra":{"metavars":{"$FUN":{"start":{"line":199,"col":7,"offset":6008},"end":{"line":199,"col":22,"offset":6023},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"19bb4488e51f703ff5db01276e38a07a04f7b1d090ed3b9d31c22b6b99bf702de76aaa95f354c9708ed7affebe9f7beef67554816916eb53b79495ac92c466f0_1","lines":"  if (_gdbm_full_read (dbf, bucket, size))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":284,"col":15,"offset":9008},"end":{"line":284,"col":58,"offset":9051},"extra":{"metavars":{"$FUN":{"start":{"line":284,"col":15,"offset":9008},"end":{"line":284,"col":26,"offset":9019},"abstract_content":"_gdbm_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"974563884f5915ea251ee3777b21881a55053b43f5ff174bd9cc4a8d1dc10ac70a1ea83b6db2ed33179d79c5d60c2a30dda068697b36d1809db1760d73a69b80_0","lines":"      adr_0 = _gdbm_alloc (dbf, dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":288,"col":15,"offset":9150},"end":{"line":288,"col":58,"offset":9193},"extra":{"metavars":{"$FUN":{"start":{"line":288,"col":15,"offset":9150},"end":{"line":288,"col":26,"offset":9161},"abstract_content":"_gdbm_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"974563884f5915ea251ee3777b21881a55053b43f5ff174bd9cc4a8d1dc10ac70a1ea83b6db2ed33179d79c5d60c2a30dda068697b36d1809db1760d73a69b80_1","lines":"      adr_1 = _gdbm_alloc (dbf, dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":303,"col":15,"offset":9638},"end":{"line":303,"col":42,"offset":9665},"extra":{"metavars":{"$FUN":{"start":{"line":303,"col":15,"offset":9638},"end":{"line":303,"col":26,"offset":9649},"abstract_content":"_gdbm_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"974563884f5915ea251ee3777b21881a55053b43f5ff174bd9cc4a8d1dc10ac70a1ea83b6db2ed33179d79c5d60c2a30dda068697b36d1809db1760d73a69b80_2","lines":"\t  dir_adr  = _gdbm_alloc (dbf, dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":306,"col":14,"offset":9717},"end":{"line":306,"col":31,"offset":9734},"extra":{"metavars":{"$X":{"start":{"line":302,"col":15,"offset":9597},"end":{"line":302,"col":36,"offset":9618},"abstract_content":"dbf->->header->->dir_size"},"$Y":{"start":{"line":302,"col":39,"offset":9621},"end":{"line":302,"col":40,"offset":9622},"abstract_content":"2"},"$FUN":{"start":{"line":306,"col":14,"offset":9717},"end":{"line":306,"col":20,"offset":9723},"abstract_content":"malloc"},"$N":{"start":{"line":306,"col":22,"offset":9725},"end":{"line":306,"col":30,"offset":9733},"abstract_content":"dir_size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e622f96cb8ee6fba99cb0fdcb78bc28154f1e26c02806a556562492bb956577473695c883cde6c287183a56a5c4b6a5d0a71df7bc5bfd15b74ea4f86d2b9e8cc_0","lines":"\t  new_dir = malloc (dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":306,"col":14,"offset":9717},"end":{"line":306,"col":31,"offset":9734},"extra":{"metavars":{"$FUN":{"start":{"line":306,"col":14,"offset":9717},"end":{"line":306,"col":20,"offset":9723},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d9606cb7221de49325032c29517a11e02c0bc93ebd5e93fb56ebe5997d4423ffbabfdedd092e493074b0c25a1c36f74e1820424bd3f3d17f6b42f1ad824ae381_0","lines":"\t  new_dir = malloc (dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":306,"col":14,"offset":9717},"end":{"line":306,"col":31,"offset":9734},"extra":{"metavars":{"$LEN":{"start":{"line":306,"col":22,"offset":9725},"end":{"line":306,"col":30,"offset":9733},"abstract_content":"dir_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e2da90920faf86fda8d571a35b80805d52f5d0c5f9c49a3e95b3a885aa29f64b4aadd470aa123a5445a6c886145166eeb2b49947742c0b83084731b4098204d_0","lines":"\t  new_dir = malloc (dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":331,"col":4,"offset":10382},"end":{"line":331,"col":20,"offset":10398},"extra":{"metavars":{"$PTR":{"start":{"line":331,"col":10,"offset":10388},"end":{"line":331,"col":18,"offset":10396},"abstract_content":"dbf->->dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"95008c6fde224f42d071ea7198e57bace2ab9cbdd04cb81b7070cd0f8217e4af7073e82d34a15a747ab175d06181bdb70b7d598ded72f2bf54b013149f6e8395_0","lines":"\t  free (dbf->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","start":{"line":349,"col":4,"offset":11038},"end":{"line":349,"col":46,"offset":11080},"extra":{"metavars":{"$FUN":{"start":{"line":349,"col":4,"offset":11038},"end":{"line":349,"col":15,"offset":11049},"abstract_content":"_gdbm_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"974563884f5915ea251ee3777b21881a55053b43f5ff174bd9cc4a8d1dc10ac70a1ea83b6db2ed33179d79c5d60c2a30dda068697b36d1809db1760d73a69b80_3","lines":"\t= _gdbm_alloc (dbf, dbf->header->block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c","start":{"line":61,"col":7,"offset":1630},"end":{"line":65,"col":3,"offset":1774},"extra":{"metavars":{"$EXPR1":{"start":{"line":61,"col":11,"offset":1634},"end":{"line":61,"col":27,"offset":1650},"abstract_content":"gdbm_debug_flags"},"$EXPR2":{"start":{"line":61,"col":30,"offset":1653},"end":{"line":61,"col":58,"offset":1681},"abstract_content":"gdbm_debug_token_tab[i].flag"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5f3533490140af7456048a1c0288489781ef9d75d0a89b2a794aabbdb5788ad0cecb6a2a54f2c47ec61233c29962a60fb68a2bb335f75811f62f1b0c475b093d_0","lines":"      if (gdbm_debug_flags & gdbm_debug_token_tab[i].flag)\n\t{\n\t  if (f (d, gdbm_debug_token_tab[i].flag, gdbm_debug_token_tab[i].name))\n\t    break;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c","start":{"line":72,"col":1,"offset":1818},"end":{"line":72,"col":14,"offset":1831},"extra":{"metavars":{"$FUN":{"start":{"line":72,"col":1,"offset":1818},"end":{"line":72,"col":14,"offset":1831},"abstract_content":"datbuf_format"},"$UNSIGNED":{"start":{"line":110,"col":10,"offset":2428},"end":{"line":110,"col":11,"offset":2429},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"35df8f2deff65a01e61b63941a3257a12100fb73ac909a24ea9b2cd6084f4377b06da9bf4c64a2ba0084fe88be7ba482bd0e3d8c8ef7c9d236ce52f3a47c1a82_0","lines":"datbuf_format (char vbuf[DATBUFSIZE], const char *buf, size_t size)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c","start":{"line":77,"col":10,"offset":1947},"end":{"line":77,"col":15,"offset":1952},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":77,"col":10,"offset":1947},"end":{"line":77,"col":11,"offset":1948},"abstract_content":"j"},"$SIGNED":{"start":{"line":77,"col":14,"offset":1951},"end":{"line":77,"col":15,"offset":1952},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8f8680c3c70a6e902681953d20053eeadf7e38b763a603d0bc623a2012410f42e86a378dcb94dee428ec212f86a91cf94f2da6bb813ef713b86e2193ec422517_0","lines":"  size_t j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c","start":{"line":128,"col":3,"offset":2719},"end":{"line":128,"col":10,"offset":2726},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":128,"col":3,"offset":2719},"end":{"line":128,"col":6,"offset":2722},"abstract_content":"off"},"$SIGNED":{"start":{"line":128,"col":9,"offset":2725},"end":{"line":128,"col":10,"offset":2726},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"35aa2cc12a45676869fbf9d458ea0d2000eee5136675e538f6b209b2ec54af8f635dcaed5e78dfdb24509dd1c186dea2e6d3982bef2002b86b61716100cf29d9_0","lines":"  off = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/err.c","start":{"line":28,"col":3,"offset":993},"end":{"line":28,"col":29,"offset":1019},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"326d43b6a4b7c7f16101925cd5ac1adf6ad735853ba847e01db65ac263b125730f4eb44a80f254447aed6bf554a8d43f0ef822958da4e73b733d9faeae581cf4_0","lines":"  vfprintf (stderr, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":183,"col":13,"offset":5925},"end":{"line":183,"col":36,"offset":5948},"extra":{"metavars":{"$X":{"start":{"line":179,"col":25,"offset":5793},"end":{"line":179,"col":76,"offset":5844},"abstract_content":"dbf->->header->->avail.size*sizeof avail_elem>>1"},"$Y":{"start":{"line":180,"col":6,"offset":5851},"end":{"line":180,"col":25,"offset":5870},"abstract_content":"sizeof avail_block"},"$FUN":{"start":{"line":183,"col":13,"offset":5925},"end":{"line":183,"col":19,"offset":5931},"abstract_content":"malloc"},"$N":{"start":{"line":183,"col":21,"offset":5933},"end":{"line":183,"col":35,"offset":5947},"abstract_content":"new_el.av_size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"71c41412929938df4e744beff2e75fd862a4453abaed25775987469c7fc66a27616a33ecadea5004851be6f83739bf44ec01cd1d8b35c7b58d07dae32329c776_0","lines":"  new_blk = malloc (new_el.av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":183,"col":13,"offset":5925},"end":{"line":183,"col":36,"offset":5948},"extra":{"metavars":{"$FUN":{"start":{"line":183,"col":13,"offset":5925},"end":{"line":183,"col":19,"offset":5931},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9989ec560f1fe4647bc310dcc1900ca29db077591b07aeb9f788af633bffe61c178393e3a2c3efc792887119e11fecf091931e5c3d94cdf37d1ae1ce147ff32d_0","lines":"  new_blk = malloc (new_el.av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":201,"col":8,"offset":6376},"end":{"line":201,"col":54,"offset":6422},"extra":{"metavars":{"$FUN":{"start":{"line":201,"col":8,"offset":6376},"end":{"line":201,"col":23,"offset":6391},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"813ac1eb14c1e779acb2fdb804cb5c6f24ede6a3ea009ffd44a3f3d44ee66b89ded6f8646de278ad66430882f90cdf93a2bdc8e7e62ed87794d875d48dd9160b_0","lines":"  rc = _gdbm_full_read (dbf, new_blk, new_el.av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":293,"col":10,"offset":8733},"end":{"line":293,"col":29,"offset":8752},"extra":{"metavars":{"$X":{"start":{"line":282,"col":16,"offset":8359},"end":{"line":282,"col":67,"offset":8410},"abstract_content":"dbf->->header->->avail.size*sizeof avail_elem>>1"},"$Y":{"start":{"line":283,"col":15,"offset":8426},"end":{"line":283,"col":34,"offset":8445},"abstract_content":"sizeof avail_block"},"$FUN":{"start":{"line":293,"col":10,"offset":8733},"end":{"line":293,"col":16,"offset":8739},"abstract_content":"calloc"},"$ARG1":{"start":{"line":293,"col":18,"offset":8741},"end":{"line":293,"col":19,"offset":8742},"abstract_content":"1"},"$N":{"start":{"line":293,"col":21,"offset":8744},"end":{"line":293,"col":28,"offset":8751},"abstract_content":"av_size"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"849409a33f4993c30e129c3be5bc41c4fa50ba07017a2efd587f5c52409b07b52f90cbdf3303aadabebce54bc1ad413f62c1d4e06756611200385500de561367_0","lines":"  temp = calloc (1, av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":293,"col":10,"offset":8733},"end":{"line":293,"col":29,"offset":8752},"extra":{"metavars":{"$FUN":{"start":{"line":293,"col":10,"offset":8733},"end":{"line":293,"col":16,"offset":8739},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a5b77ada82d5c91d62787fb16f9939cf8db634faec3bc0e00a32e678c21efed3f169ef4000fcb90ecca659051b68ef1c56215c485b14e35173860deb17d7f99a_0","lines":"  temp = calloc (1, av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":293,"col":10,"offset":8733},"end":{"line":293,"col":29,"offset":8752},"extra":{"metavars":{"$CNT":{"start":{"line":293,"col":18,"offset":8741},"end":{"line":293,"col":19,"offset":8742},"abstract_content":"1"},"$LEN":{"start":{"line":293,"col":21,"offset":8744},"end":{"line":293,"col":28,"offset":8751},"abstract_content":"av_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"15bd9da7ee42ced04867263e9eaaa857a63a555b165d238e78cadb3df4f32f7d3173e780e6e10c70830983588383d6ed4ca7c11756117082c9b039d8950308c2_0","lines":"  temp = calloc (1, av_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","start":{"line":384,"col":3,"offset":11000},"end":{"line":385,"col":44,"offset":11084},"extra":{"metavars":{"$FUN":{"start":{"line":384,"col":3,"offset":11000},"end":{"line":384,"col":10,"offset":11007},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35aaf61ed77ef41e780cc8aacf0591f989726e6afff870d48189aceb0eece3b467ee3d091475e9993ece68f01f47600a76b8c046c29d6964cd4f9ce6fcdfc899_0","lines":"  memmove (av_table + dst, av_table + src,\n\t   (*av_count - src) * sizeof av_table[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":66,"col":3,"offset":2191},"end":{"line":66,"col":31,"offset":2219},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":66,"col":3,"offset":2191},"end":{"line":66,"col":8,"offset":2196},"abstract_content":"dsize"},"$SIGNED":{"start":{"line":66,"col":11,"offset":2199},"end":{"line":66,"col":19,"offset":2207},"abstract_content":"key_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f8f15e960f7bca23ff06b32a628426aa20fc53fcad8380586039bd69ad4838171d9b23dc11c471fa691d3dada10fbab0963adbad8a400f863495f0e3863a2e22_0","lines":"  dsize = key_size + data_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":79,"col":20,"offset":2542},"end":{"line":79,"col":30,"offset":2552},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":20,"offset":2542},"end":{"line":79,"col":26,"offset":2548},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3a9bc2576f18c87611b563572bc38ac772fd6f71da6c960780e77e911ff3b4cf7bd68161f307778f10b6a3e82d2a36702666050a45f632af704ba89b0657102d_0","lines":"\t  data_ca->dptr = malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":79,"col":20,"offset":2542},"end":{"line":79,"col":30,"offset":2552},"extra":{"metavars":{"$LEN":{"start":{"line":79,"col":28,"offset":2550},"end":{"line":79,"col":29,"offset":2551},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d51011589b755cc762dd1851a6afe5cd5ccf453294aaea5b596cc274c2bbb4743d1b1c1d4f9d1880c4787d24be4cd86ab5e7794075b2716b74c097d8bbd22577_0","lines":"\t  data_ca->dptr = malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":81,"col":6,"offset":2581},"end":{"line":81,"col":24,"offset":2599},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":81,"col":6,"offset":2581},"end":{"line":81,"col":20,"offset":2595},"abstract_content":"data_ca->->dsize"},"$SIGNED":{"start":{"line":81,"col":23,"offset":2598},"end":{"line":81,"col":24,"offset":2599},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"feeeeb9e99f174c6033c152ae512668d09417ad5b2fe779f781e670c871d4c45a0c53143ff98b288cd47e7381489b108ecbe2fee4db3e15b9c3f20a857d8a8a1_0","lines":"\t    data_ca->dsize = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":92,"col":17,"offset":2801},"end":{"line":92,"col":47,"offset":2831},"extra":{"metavars":{"$X":{"start":{"line":66,"col":11,"offset":2199},"end":{"line":66,"col":19,"offset":2207},"abstract_content":"key_size"},"$Y":{"start":{"line":66,"col":22,"offset":2210},"end":{"line":66,"col":31,"offset":2219},"abstract_content":"data_size"},"$FUN":{"start":{"line":92,"col":17,"offset":2801},"end":{"line":92,"col":24,"offset":2808},"abstract_content":"realloc"},"$ARG1":{"start":{"line":92,"col":26,"offset":2810},"end":{"line":92,"col":39,"offset":2823},"abstract_content":"data_ca->->dptr"},"$N":{"start":{"line":92,"col":41,"offset":2825},"end":{"line":92,"col":46,"offset":2830},"abstract_content":"dsize","propagated_value":{"svalue_start":{"line":66,"col":11,"offset":2199},"svalue_end":{"line":66,"col":31,"offset":2219},"svalue_abstract_content":"key_size+data_size"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f099163fc494903722adf66ff08cd770c598e8f11a0725d1c44633c3992c302b525f62ad8612412d843e87369b8f0e87a93ab32745ecf04be91f5a7be3cc3c2_0","lines":"      char *p = realloc (data_ca->dptr, dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":92,"col":17,"offset":2801},"end":{"line":92,"col":47,"offset":2831},"extra":{"metavars":{"$FUN":{"start":{"line":92,"col":17,"offset":2801},"end":{"line":92,"col":24,"offset":2808},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3e0d7f5bd7f26292234513b315dddf0989aefbf11d16834ee4e8e6947e5a93d2650c6be4a7307f9264f3d097d9d47cdf75d8cf8e874b42a6088d069ebc365d57_0","lines":"      char *p = realloc (data_ca->dptr, dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","start":{"line":116,"col":8,"offset":3404},"end":{"line":116,"col":64,"offset":3460},"extra":{"metavars":{"$FUN":{"start":{"line":116,"col":8,"offset":3404},"end":{"line":116,"col":23,"offset":3419},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"eac24174ca060c1bb773ba3726247df5cfedf4c6a4993117338f71b3c49825afe35e846d0a445049ee12663549d1fb377fb87ebb87bac08febbfb156a2bfdb1f_0","lines":"  rc = _gdbm_full_read (dbf, data_ca->dptr, key_size+data_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c","start":{"line":30,"col":25,"offset":1164},"end":{"line":30,"col":56,"offset":1195},"extra":{"metavars":{"$FUN":{"start":{"line":30,"col":25,"offset":1164},"end":{"line":30,"col":39,"offset":1178},"abstract_content":"gdbm_file_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d94a2c3ea40eac57e7afe6e605343e470cb051123da4cc17c806f0241c72ec7bd7fb5c93e7edd4bcd8006e2f7b5f513c832fdf429249349f8f785d11303017ba_0","lines":"      ssize_t rdbytes = gdbm_file_read (dbf, ptr, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c","start":{"line":98,"col":2,"offset":2673},"end":{"line":98,"col":18,"offset":2689},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":98,"col":2,"offset":2673},"end":{"line":98,"col":11,"offset":2682},"abstract_content":"page_size"},"$SIGNED":{"start":{"line":98,"col":14,"offset":2685},"end":{"line":98,"col":18,"offset":2689},"abstract_content":"size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d5c72e126a695bbb8ec5033036d220df46dab46e8337f1328d3699e922dd76987bc74c98e2e0c69d6457351a2f5391e082685f9333c94525736e288b3f8629ef_0","lines":"\tpage_size = size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c","start":{"line":99,"col":13,"offset":2703},"end":{"line":99,"col":34,"offset":2724},"extra":{"metavars":{"$FUN":{"start":{"line":99,"col":13,"offset":2703},"end":{"line":99,"col":19,"offset":2709},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9f776c1ff1869c503829c3592199293a29033d47b61f183ef97c5f83de99e9b2cc95a03caa55f0aac8e7d688ef05e15ac6e056905ecc5b1eb3d238022ad1ea2c_0","lines":"      buf = calloc (1, page_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c","start":{"line":99,"col":13,"offset":2703},"end":{"line":99,"col":34,"offset":2724},"extra":{"metavars":{"$CNT":{"start":{"line":99,"col":21,"offset":2711},"end":{"line":99,"col":22,"offset":2712},"abstract_content":"1"},"$LEN":{"start":{"line":99,"col":24,"offset":2714},"end":{"line":99,"col":33,"offset":2723},"abstract_content":"page_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5c514de503a3038ecdd5403a67760bdcff073316ca174e3b553e0ce5dfba3746d4859d237046cfad01fc094c57537ecceda361d6c2d35e8df26c13158e52c4ac_0","lines":"      buf = calloc (1, page_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":40,"col":3,"offset":1211},"end":{"line":40,"col":25,"offset":1233},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":3,"offset":1211},"end":{"line":40,"col":12,"offset":1220},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"630f393705d0e0d861ec3b34a0bed4b252241bdb8dda6e8c199bbdc42a0ee208937f053005223fa228674948f4c7cdd37b233ef8d92e273dfaf60881cfa0966d_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":45,"col":17,"offset":1322},"end":{"line":45,"col":21,"offset":1326},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fe3a82ead0b5ae04b26a470bcfdc0722117ab3a6fcf5009cfa0b3f94f7518b07ebd53d7c8aa667d175d8363153f7d6533d54f11a06c3db7a69772d406362bea9_0","lines":"  set_progname (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":47,"col":36,"offset":1368},"end":{"line":47,"col":40,"offset":1372},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fe3a82ead0b5ae04b26a470bcfdc0722117ab3a6fcf5009cfa0b3f94f7518b07ebd53d7c8aa667d175d8363153f7d6533d54f11a06c3db7a69772d406362bea9_1","lines":"  for (opt = parseopt_first (argc, argv, optab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":60,"col":15,"offset":1649},"end":{"line":60,"col":28,"offset":1662},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"d96c4b9ed923d62d23875c472e73e24cbe95f594e9b445fe5d4bbc8d728752e23357e60fbcbba565f3f9ab9fc48a4016ccf6bf4af9f193bdcf951b0a25519fff_0","lines":"\t    format = atoi (optarg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":80,"col":3,"offset":1967},"end":{"line":80,"col":7,"offset":1971},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fe3a82ead0b5ae04b26a470bcfdc0722117ab3a6fcf5009cfa0b3f94f7518b07ebd53d7c8aa667d175d8363153f7d6533d54f11a06c3db7a69772d406362bea9_2","lines":"  argv += optind;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":94,"col":12,"offset":2209},"end":{"line":94,"col":16,"offset":2213},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fe3a82ead0b5ae04b26a470bcfdc0722117ab3a6fcf5009cfa0b3f94f7518b07ebd53d7c8aa667d175d8363153f7d6533d54f11a06c3db7a69772d406362bea9_3","lines":"  dbname = argv[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":96,"col":16,"offset":2250},"end":{"line":96,"col":20,"offset":2254},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"fe3a82ead0b5ae04b26a470bcfdc0722117ab3a6fcf5009cfa0b3f94f7518b07ebd53d7c8aa667d175d8363153f7d6533d54f11a06c3db7a69772d406362bea9_4","lines":"    filename = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":107,"col":12,"offset":2420},"end":{"line":107,"col":33,"offset":2441},"extra":{"metavars":{"$FUN":{"start":{"line":107,"col":12,"offset":2420},"end":{"line":107,"col":17,"offset":2425},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9f83d250771b85d98396b0d817eff40a84c3375a3acb4c77eebaeb8a4c3c008ae203e80f43ec68a649f166b8916a1132261235a8fa47133e5ca88e2e074bd514_0","lines":"      fp = fopen (filename, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","start":{"line":115,"col":9,"offset":2555},"end":{"line":115,"col":55,"offset":2601},"extra":{"metavars":{"$FUN":{"start":{"line":115,"col":9,"offset":2555},"end":{"line":115,"col":18,"offset":2564},"abstract_content":"gdbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"636d8f42d057d4220dac19ed785defc2c4d1fc57899dceff82ee421682c589005b919a72ce18c5dbb1b22ad5f1b4affe56ea0d4d39482d6f2f44a0cc1f19ca41_0","lines":"  dbf = gdbm_open (dbname, 0, GDBM_READER, 0600, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":52,"col":7,"offset":1667},"end":{"line":59,"col":3,"offset":1840},"extra":{"metavars":{"$EXPR1":{"start":{"line":52,"col":11,"offset":1671},"end":{"line":52,"col":20,"offset":1680},"abstract_content":"meta_mask"},"$EXPR2":{"start":{"line":52,"col":23,"offset":1683},"end":{"line":52,"col":43,"offset":1703},"abstract_content":"GDBM_META_MASK_OWNER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0d3e7e4b89036e8c9e49e825500c252b95beed74ced80c5c9258b8553343b54884e2327afab704192d4177b9defb40ccc2b0799d8ac64ef07f214c460cb79854_0","lines":"      if (meta_mask & GDBM_META_MASK_OWNER)\n\t{\n\t  if (fchown (fd, owner_uid, owner_gid))\n\t    {\n\t      GDBM_SET_ERRNO (dbf, GDBM_ERR_FILE_OWNER, FALSE);\n\t      return 1;\n\t    }\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":54,"col":8,"offset":1715},"end":{"line":54,"col":41,"offset":1748},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":54,"col":8,"offset":1715},"end":{"line":54,"col":14,"offset":1721},"abstract_content":"fchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e9a4439de4a50d85ebf639455660d48151fd0a942c7369b76931e3a07eb8aeace20aa94af01fc8573c1e1c491e8e1d2cdca9f48ed0c90b85e7bd3e9ec793d2b4_0","lines":"\t  if (fchown (fd, owner_uid, owner_gid))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":60,"col":7,"offset":1847},"end":{"line":64,"col":3,"offset":1978},"extra":{"metavars":{"$EXPR1":{"start":{"line":60,"col":12,"offset":1852},"end":{"line":60,"col":21,"offset":1861},"abstract_content":"meta_mask"},"$EXPR2":{"start":{"line":60,"col":24,"offset":1864},"end":{"line":60,"col":43,"offset":1883},"abstract_content":"GDBM_META_MASK_MODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c88ed65d039f834828061a16cabad51ec7cb4b73736c701d1842f3a05961e38ebf446eefc6474d72311c84730c92036be29b143924f4a5327152248eeacabf69_0","lines":"      if ((meta_mask & GDBM_META_MASK_MODE) && fchmod (fd, mode))\n\t{\n\t  GDBM_SET_ERRNO (dbf, GDBM_ERR_FILE_OWNER, FALSE);\n\t  return 1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":60,"col":48,"offset":1888},"end":{"line":60,"col":65,"offset":1905},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$FUN":{"start":{"line":60,"col":48,"offset":1888},"end":{"line":60,"col":54,"offset":1894},"abstract_content":"fchmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8eaed47f861566da786ddd8a679543157c0ee78bc6de6c57c953e664944fb111e0bff5476e08ab5ddfdb9aa72daf03cf789e9cddb6676afbbb9b18c3839aefa6_0","lines":"      if ((meta_mask & GDBM_META_MASK_MODE) && fchmod (fd, mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":70,"col":1,"offset":2011},"end":{"line":70,"col":8,"offset":2018},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":1,"offset":2011},"end":{"line":70,"col":8,"offset":2018},"abstract_content":"get_int"},"$LARGE":{"start":{"line":87,"col":10,"offset":2318},"end":{"line":87,"col":11,"offset":2319},"abstract_content":"n"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4895b8bba9ed5331b22db919af4e65b5266e169d3b15ac1db50d422fdf39d4d04c8078019e44639cab8d1d72269774060cc9bd06ee77509edaf94263594793c6_0","lines":"get_int (const char *arg)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":104,"col":3,"offset":2589},"end":{"line":104,"col":25,"offset":2611},"extra":{"metavars":{"$FUN":{"start":{"line":104,"col":3,"offset":2589},"end":{"line":104,"col":12,"offset":2598},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c6f218d83876c8d96d687ab28f932ef52c031f2cbe57f5f39397368d5907502c13086ce3f781ad48b3de5cf9fa592ee76b9642e6305929028f700696b4cf1031_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":109,"col":17,"offset":2700},"end":{"line":109,"col":21,"offset":2704},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1419b6c4b9a9bb3ad956c20ede67edb90e309ad27f93e1e3118e093552b70c30c52ee31135d66d9e6d40dc65a6eb8cdc7a87f6cb43d895952453e75692b0101d_0","lines":"  set_progname (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":111,"col":36,"offset":2746},"end":{"line":111,"col":40,"offset":2750},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1419b6c4b9a9bb3ad956c20ede67edb90e309ad27f93e1e3118e093552b70c30c52ee31135d66d9e6d40dc65a6eb8cdc7a87f6cb43d895952453e75692b0101d_1","lines":"  for (opt = parseopt_first (argc, argv, optab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":129,"col":21,"offset":3043},"end":{"line":129,"col":31,"offset":3053},"extra":{"metavars":{"$EXPR":{"start":{"line":129,"col":21,"offset":3043},"end":{"line":129,"col":26,"offset":3048},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":127,"col":12,"offset":2986},"svalue_end":{"line":127,"col":13,"offset":2987},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57be06befc2e16efacbf75a444126a41ed5e0a33ddace84e9e559c50af963f9386296b47cc7ebd3f54bd7cb929306cde3ad90ce51f619539c967632132ad565f_0","lines":"\t  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":131,"col":8,"offset":3069},"end":{"line":131,"col":23,"offset":3084},"extra":{"metavars":{"$NARROW":{"start":{"line":131,"col":8,"offset":3069},"end":{"line":131,"col":12,"offset":3073},"abstract_content":"mode"},"$LARGE":{"start":{"line":131,"col":15,"offset":3076},"end":{"line":131,"col":16,"offset":3077},"abstract_content":"n"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3a95b61164cbaa875d9c1b645939e9a79c307b3828910ca378d06881adbbcef025e3caa5af846ad8e37e0f435a9b587f7a5927b10e101bb887d3de9dc09f6829_0","lines":"\t      mode = n & 0777;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":157,"col":25,"offset":3542},"end":{"line":157,"col":35,"offset":3552},"extra":{"metavars":{"$EXPR":{"start":{"line":157,"col":25,"offset":3542},"end":{"line":157,"col":30,"offset":3547},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":155,"col":16,"offset":3476},"svalue_end":{"line":155,"col":17,"offset":3477},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57be06befc2e16efacbf75a444126a41ed5e0a33ddace84e9e559c50af963f9386296b47cc7ebd3f54bd7cb929306cde3ad90ce51f619539c967632132ad565f_1","lines":"\t      if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":176,"col":22,"offset":3910},"end":{"line":176,"col":32,"offset":3920},"extra":{"metavars":{"$EXPR":{"start":{"line":176,"col":22,"offset":3910},"end":{"line":176,"col":27,"offset":3915},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":174,"col":13,"offset":3850},"svalue_end":{"line":174,"col":14,"offset":3851},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"57be06befc2e16efacbf75a444126a41ed5e0a33ddace84e9e559c50af963f9386296b47cc7ebd3f54bd7cb929306cde3ad90ce51f619539c967632132ad565f_2","lines":"\t\t  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":221,"col":3,"offset":4577},"end":{"line":221,"col":7,"offset":4581},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1419b6c4b9a9bb3ad956c20ede67edb90e309ad27f93e1e3118e093552b70c30c52ee31135d66d9e6d40dc65a6eb8cdc7a87f6cb43d895952453e75692b0101d_2","lines":"  argv += optind;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":235,"col":14,"offset":4823},"end":{"line":235,"col":18,"offset":4827},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1419b6c4b9a9bb3ad956c20ede67edb90e309ad27f93e1e3118e093552b70c30c52ee31135d66d9e6d40dc65a6eb8cdc7a87f6cb43d895952453e75692b0101d_3","lines":"  filename = argv[0];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":237,"col":14,"offset":4862},"end":{"line":237,"col":18,"offset":4866},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1419b6c4b9a9bb3ad956c20ede67edb90e309ad27f93e1e3118e093552b70c30c52ee31135d66d9e6d40dc65a6eb8cdc7a87f6cb43d895952453e75692b0101d_4","lines":"    dbname = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":248,"col":12,"offset":5015},"end":{"line":248,"col":33,"offset":5036},"extra":{"metavars":{"$FUN":{"start":{"line":248,"col":12,"offset":5015},"end":{"line":248,"col":17,"offset":5020},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5d6a1e5df97b066e09a423a1a629817880d0c03fd253f97c11fc31c94988940296388719906c99c83d7a87c2bf2521d6608ffafbae9fd840524a2be1440102af_0","lines":"      fp = fopen (filename, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":258,"col":13,"offset":5176},"end":{"line":258,"col":63,"offset":5226},"extra":{"metavars":{"$FUN":{"start":{"line":258,"col":13,"offset":5176},"end":{"line":258,"col":22,"offset":5185},"abstract_content":"gdbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7184d399eb43e39698059c6b7f49348f5f6423b084f8b6a061bcf61edf1bdb030a9698d38db8f97295876d9b2048b7632b81b896117699f11c568326e4953c74_0","lines":"      dbf = gdbm_open (dbname, block_size, oflags, 0600, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":270,"col":3,"offset":5488},"end":{"line":274,"col":18,"offset":5650},"extra":{"metavars":{"$NARROW":{"start":{"line":270,"col":3,"offset":5488},"end":{"line":270,"col":5,"offset":5490},"abstract_content":"rc"},"$LARGE":{"start":{"line":274,"col":9,"offset":5641},"end":{"line":274,"col":17,"offset":5649},"abstract_content":"err_line"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"61a3debd4746b9cbb11e6e8d6aeeed11fbd8b3ee6c0666d7aa67223f745368570647a3921db98dc0ad87e3d07ef6d447b4b2fe0c7a4e339315fb5fb16949e9b4_0","lines":"  rc = gdbm_load_from_file (&dbf, fp, replace,\n\t\t\t    no_meta_option ?\n\t\t\t      (GDBM_META_MASK_MODE | GDBM_META_MASK_OWNER) :\n\t\t\t      meta_mask,\n\t\t\t    &err_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-sizeof","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":306,"col":51,"offset":6323},"end":{"line":306,"col":65,"offset":6337},"extra":{"metavars":{"$TYPE":{"start":{"line":95,"col":3,"offset":2400},"end":{"line":95,"col":7,"offset":2404},"abstract_content":"char"},"$PTR":{"start":{"line":306,"col":59,"offset":6331},"end":{"line":306,"col":65,"offset":6337},"abstract_content":"dbname"}},"message":"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/467","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2ad52f20eb68ae2843653f636afd5dfb06d0bdf3f214b45f009ae344ffc83c1adaab7d4ce53aa7f546ddef3ae25690399a9d38e733900444b16b77ade404d3be_0","lines":"\t  if (gdbm_setopt (dbf, GDBM_GETDBNAME, &dbname, sizeof (dbname)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","start":{"line":311,"col":8,"offset":6461},"end":{"line":311,"col":22,"offset":6475},"extra":{"metavars":{"$PTR":{"start":{"line":311,"col":14,"offset":6467},"end":{"line":311,"col":20,"offset":6473},"abstract_content":"dbname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"85eda8610e7c026520f02b42d8b238499dba916b9f44e477b0fc3dfb391c8dfa7ad83435ab5156c80552b83ff0847d4bc4b473e5c29be2a2a2eb369caa5be105_0","lines":"\t      free (dbname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":58,"col":3,"offset":1697},"end":{"line":58,"col":20,"offset":1714},"extra":{"metavars":{"$PTR":{"start":{"line":58,"col":9,"offset":1703},"end":{"line":58,"col":18,"offset":1712},"abstract_content":"dbf->->name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e4bd77cca318eac5e7eaa106b81d7b51415a454acf04d36b3c87632d08aef7238d4ed14cadbd97501cbaf1aa2a874ea65a661049a87a52fe18378d3b1ddc2a36_0","lines":"  free (dbf->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":59,"col":3,"offset":1717},"end":{"line":59,"col":19,"offset":1733},"extra":{"metavars":{"$PTR":{"start":{"line":59,"col":9,"offset":1723},"end":{"line":59,"col":17,"offset":1731},"abstract_content":"dbf->->dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3c453550fd3a8bffeecb5bb3744f28ebbb835deafd84db92583db47cd3dcb100a7ef7f405238affe10b504a07b07099afa053eaa72fb11ca14ab53896e447a16_0","lines":"  free (dbf->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":65,"col":4,"offset":1836},"end":{"line":65,"col":46,"offset":1878},"extra":{"metavars":{"$PTR":{"start":{"line":65,"col":10,"offset":1842},"end":{"line":65,"col":44,"offset":1876},"abstract_content":"dbf->->bucket_cache[index].ca_bucket"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3f3631a06b971986d34d61981791b83f75cefa85c1f4b2d4e905331a663e7d76b542942aeee14a21b53d506d3849c0538ea9349fab91b1e490d2dc0b4b6a9116_0","lines":"\t  free (dbf->bucket_cache[index].ca_bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":66,"col":4,"offset":1882},"end":{"line":66,"col":49,"offset":1927},"extra":{"metavars":{"$PTR":{"start":{"line":66,"col":10,"offset":1888},"end":{"line":66,"col":47,"offset":1925},"abstract_content":"dbf->->bucket_cache[index].ca_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f16119c56cc2eed89e7054fe91090b788f1d903629150c32cc640cffb3c8866d115513608563da78734c7dd5a514481da58f008c617e6390e89460916e6d5032_0","lines":"\t  free (dbf->bucket_cache[index].ca_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":68,"col":7,"offset":1937},"end":{"line":68,"col":32,"offset":1962},"extra":{"metavars":{"$PTR":{"start":{"line":68,"col":13,"offset":1943},"end":{"line":68,"col":30,"offset":1960},"abstract_content":"dbf->->bucket_cache"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a1d4fe7612b5a893f1d17cde983518e82c736cb2fd9a6b73bbed5a22054c6f958bafaa7973899f9544b6967fb570c806b146f85851b48ac93567edce9991fdc2_0","lines":"      free (dbf->bucket_cache);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":70,"col":3,"offset":1971},"end":{"line":70,"col":22,"offset":1990},"extra":{"metavars":{"$PTR":{"start":{"line":70,"col":9,"offset":1977},"end":{"line":70,"col":20,"offset":1988},"abstract_content":"dbf->->header"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f3aaa2ae498c0fb72c5a29b1f1cffa4e2194584beeca0dacfa4f837330c49a05dd9eaecd198324bafaad9fa2c687be91c54e68f0eb640da67f1b09e917717f4b_0","lines":"  free (dbf->header);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","start":{"line":71,"col":3,"offset":1993},"end":{"line":71,"col":14,"offset":2004},"extra":{"metavars":{"$PTR":{"start":{"line":71,"col":9,"offset":1999},"end":{"line":71,"col":12,"offset":2002},"abstract_content":"dbf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ccf3bf355f64ddff70a7a2f09c7475add2adb6422121c084d730ae7f04562a122b8eb0c4561af9a034345f927458235e92080026ffc7d435b721765448846246_0","lines":"  free (dbf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":33,"col":3,"offset":1066},"end":{"line":34,"col":30,"offset":1161},"extra":{"metavars":{"$SIGNED":{"start":{"line":33,"col":3,"offset":1066},"end":{"line":33,"col":5,"offset":1068},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":34,"col":26,"offset":1157},"end":{"line":34,"col":29,"offset":1160},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cbbb36e2f88efa80080d01e48370d34e54fe2ac5e2c9b5058e7ff72c4767a7c859970027f5c434436c0147ca6aef5c91f920ec96bebc8a2c12b173767e8e7a73_0","lines":"  rc = _gdbm_base64_encode ((unsigned char*) dat->dptr, dat->dsize,\n\t\t\t    bufptr, bufsize, &len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":62,"col":10,"offset":1612},"end":{"line":62,"col":19,"offset":1621},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":62,"col":10,"offset":1612},"end":{"line":62,"col":15,"offset":1617},"abstract_content":"count"},"$SIGNED":{"start":{"line":62,"col":18,"offset":1620},"end":{"line":62,"col":19,"offset":1621},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"505245fc06cf4cb25ddae6bde6e3223048cc238f048bae955a37c097d93859a0c7dfcabb6603e077cf4031784a97527148608604a220247baee803167fdf568c_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":64,"col":10,"offset":1664},"end":{"line":64,"col":21,"offset":1675},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":64,"col":10,"offset":1664},"end":{"line":64,"col":17,"offset":1671},"abstract_content":"bufsize"},"$SIGNED":{"start":{"line":64,"col":20,"offset":1674},"end":{"line":64,"col":21,"offset":1675},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"55a6c060e83e2a36e328a3fcf750f29372cbbe17f3ab542bb7effa5f4aff75da70c692d55e3a0dab86a5103f01c4188ef2c462c6bb9c65eb7e1e0d0369aedcb2_0","lines":"  size_t bufsize = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":68,"col":7,"offset":1723},"end":{"line":68,"col":22,"offset":1738},"extra":{"metavars":{"$FUN":{"start":{"line":68,"col":7,"offset":1723},"end":{"line":68,"col":12,"offset":1728},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf5851ac67bda21e73f51bc29099987ba1e687ec3508995cee146d47df5ad72ce42d73bab375d1e11c2473b832abf570e9fcf5650ffee43c60e088bad4f231f5_0","lines":"  if (fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":97,"col":4,"offset":2485},"end":{"line":104,"col":7,"offset":2715},"extra":{"metavars":{"$EXPR1":{"start":{"line":97,"col":9,"offset":2490},"end":{"line":97,"col":11,"offset":2492},"abstract_content":"rc"},"$EXPR2":{"start":{"line":97,"col":14,"offset":2495},"end":{"line":97,"col":55,"offset":2536},"abstract_content":"print_datum(&key&buffer&bufsize fp)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77d6246769f9e6a9b6b57a421aa24670800fc2f0ff85a8b7e14e1e56a1dd04bfef7bb879b5211a7d6068cd9f3a1697ffd5454731254248ba9857398e37cd6ecd_0","lines":"\t  if ((rc = print_datum (&key, &buffer, &bufsize, fp)) ||\n\t      (rc = print_datum (&data, &buffer, &bufsize, fp)))\n\t    {\n\t      free (key.dptr);\n\t      free (data.dptr);\n\t      GDBM_SET_ERRNO (dbf, rc, FALSE);\n\t      break;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":97,"col":9,"offset":2490},"end":{"line":97,"col":55,"offset":2536},"extra":{"metavars":{"$SIGNED":{"start":{"line":97,"col":9,"offset":2490},"end":{"line":97,"col":11,"offset":2492},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":97,"col":43,"offset":2524},"end":{"line":97,"col":50,"offset":2531},"abstract_content":"bufsize"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f163139ae03c58328ef3fd887829b4c88f9a30df5c3304d0a43814b775ee78006011cac595fdb051413976a54185ffd88f0cf3e7d3b1fd5d65e865bf28e4258d_0","lines":"\t  if ((rc = print_datum (&key, &buffer, &bufsize, fp)) ||","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":98,"col":9,"offset":2549},"end":{"line":98,"col":56,"offset":2596},"extra":{"metavars":{"$SIGNED":{"start":{"line":98,"col":9,"offset":2549},"end":{"line":98,"col":11,"offset":2551},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":98,"col":44,"offset":2584},"end":{"line":98,"col":51,"offset":2591},"abstract_content":"bufsize"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f163139ae03c58328ef3fd887829b4c88f9a30df5c3304d0a43814b775ee78006011cac595fdb051413976a54185ffd88f0cf3e7d3b1fd5d65e865bf28e4258d_1","lines":"\t      (rc = print_datum (&data, &buffer, &bufsize, fp)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":100,"col":8,"offset":2613},"end":{"line":100,"col":24,"offset":2629},"extra":{"metavars":{"$PTR":{"start":{"line":100,"col":14,"offset":2619},"end":{"line":100,"col":22,"offset":2627},"abstract_content":"key.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"de5d9db7ab43d117a839a20e5b3186b30378b92a6eff45f14c8528954202cc2e5e62b8b3010b3acb1ba75e2fd954277f6ed9fb908892f1157ca922432ee2f726_0","lines":"\t      free (key.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":101,"col":8,"offset":2637},"end":{"line":101,"col":25,"offset":2654},"extra":{"metavars":{"$PTR":{"start":{"line":101,"col":14,"offset":2643},"end":{"line":101,"col":23,"offset":2652},"abstract_content":"data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2a93bee1aa13df02040a38a4be09a086616707b39a6f9e1843da57ab8840c9ae38ec81286ac4caa8a944d309d4ee9c937bd870f02f810c95eb9b6d812019b55_0","lines":"\t      free (data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":109,"col":7,"offset":2786},"end":{"line":109,"col":23,"offset":2802},"extra":{"metavars":{"$PTR":{"start":{"line":109,"col":13,"offset":2792},"end":{"line":109,"col":21,"offset":2800},"abstract_content":"key.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"de5d9db7ab43d117a839a20e5b3186b30378b92a6eff45f14c8528954202cc2e5e62b8b3010b3acb1ba75e2fd954277f6ed9fb908892f1157ca922432ee2f726_1","lines":"      free (key.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":110,"col":7,"offset":2809},"end":{"line":110,"col":24,"offset":2826},"extra":{"metavars":{"$PTR":{"start":{"line":110,"col":13,"offset":2815},"end":{"line":110,"col":22,"offset":2824},"abstract_content":"data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2a93bee1aa13df02040a38a4be09a086616707b39a6f9e1843da57ab8840c9ae38ec81286ac4caa8a944d309d4ee9c937bd870f02f810c95eb9b6d812019b55_1","lines":"      free (data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":130,"col":3,"offset":3232},"end":{"line":130,"col":17,"offset":3246},"extra":{"metavars":{"$PTR":{"start":{"line":130,"col":9,"offset":3238},"end":{"line":130,"col":15,"offset":3244},"abstract_content":"buffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"51562da36140dee118ff4cd412588637a8bfd622d6261e9936204bc4f60d0b92106931a097c2d0d1421f2c844851436874cafba6624e91e1dfb3c7fb82a2238c_0","lines":"  free (buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":146,"col":7,"offset":3508},"end":{"line":146,"col":48,"offset":3549},"extra":{"metavars":{"$EXPR1":{"start":{"line":146,"col":12,"offset":3513},"end":{"line":146,"col":41,"offset":3542},"abstract_content":"gdbm_export_to_file(dbf fp)"},"$EXPR2":{"start":{"line":146,"col":45,"offset":3546},"end":{"line":146,"col":47,"offset":3548},"abstract_content":"-1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0cb2fca9eafb4dde47e70877462bcf91c6ccbf11bdd14def4fcbc9c9a476bc8679f9ecd838786d45ed5208846342070f9a3ab6b512d3ac7f8d47d9cab24f0a0f_0","lines":"      rc = gdbm_export_to_file (dbf, fp) == -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":181,"col":13,"offset":4212},"end":{"line":181,"col":63,"offset":4262},"extra":{"metavars":{"$FUN":{"start":{"line":181,"col":13,"offset":4212},"end":{"line":181,"col":17,"offset":4216},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ef828c16315bdb221d39a1dc38682e4e7b120adab5a31d8f052a7020b39a901d305b7d61a37d136cf88e22c7250317d3d0c921f1e2f031322204f65c8d75c06_0","lines":"      nfd = open (filename, O_WRONLY | O_CREAT | O_EXCL, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":189,"col":13,"offset":4406},"end":{"line":189,"col":64,"offset":4457},"extra":{"metavars":{"$FUN":{"start":{"line":189,"col":13,"offset":4406},"end":{"line":189,"col":17,"offset":4410},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9ef828c16315bdb221d39a1dc38682e4e7b120adab5a31d8f052a7020b39a901d305b7d61a37d136cf88e22c7250317d3d0c921f1e2f031322204f65c8d75c06_1","lines":"      nfd = open (filename, O_WRONLY | O_CREAT | O_TRUNC, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","start":{"line":201,"col":8,"offset":4667},"end":{"line":201,"col":25,"offset":4684},"extra":{"metavars":{"$FUN":{"start":{"line":201,"col":8,"offset":4667},"end":{"line":201,"col":14,"offset":4673},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ba777be453e811b5ea971c92d9bdd2cf09932b32154825db98df829b635b4a87ef9d8849a6b77a06956de7e09919226f9ba32ae988806ffb1e630ff2685c58a1_0","lines":"  fp = fdopen (nfd, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":31,"col":3,"offset":1079},"end":{"line":31,"col":30,"offset":1106},"extra":{"metavars":{"$TYPE":{"start":{"line":26,"col":8,"offset":976},"end":{"line":26,"col":25,"offset":993},"abstract_content":"GDBM_THREAD_LOCAL"},"$EXPR":{"start":{"line":26,"col":58,"offset":1026},"end":{"line":26,"col":71,"offset":1039},"abstract_content":"GDBM_NO_ERROR"},"$VAR":{"start":{"line":31,"col":11,"offset":1087},"end":{"line":31,"col":29,"offset":1105},"abstract_content":"gdbm_errno_storage"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2f957e58ee9080930ae734ffff0bb708b2362a3607d307b67d6fba6cdbaf31148c7db5ac9b8b92e61461be19e6c0a9f838a4ae271d9bbd7fe95a39d0b3a163d2_0","lines":"  return &gdbm_errno_storage;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":42,"col":7,"offset":1296},"end":{"line":42,"col":31,"offset":1320},"extra":{"metavars":{"$PTR":{"start":{"line":42,"col":13,"offset":1302},"end":{"line":42,"col":29,"offset":1318},"abstract_content":"dbf->->last_errstr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2919a8a67091050314401ee3cb8630199baa412fcc19407b454283d9417b333bb35a3ceaf553cb9952ffc41ac24cd177d41776559ac39e4ddc9e3c138dc47a52_0","lines":"      free (dbf->last_errstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":94,"col":7,"offset":2143},"end":{"line":94,"col":31,"offset":2167},"extra":{"metavars":{"$PTR":{"start":{"line":94,"col":13,"offset":2149},"end":{"line":94,"col":29,"offset":2165},"abstract_content":"dbf->->last_errstr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2919a8a67091050314401ee3cb8630199baa412fcc19407b454283d9417b333bb35a3ceaf553cb9952ffc41ac24cd177d41776559ac39e4ddc9e3c138dc47a52_1","lines":"      free (dbf->last_errstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":163,"col":11,"offset":5234},"end":{"line":163,"col":57,"offset":5280},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":163,"col":11,"offset":5234},"end":{"line":163,"col":14,"offset":5237},"abstract_content":"len"},"$SIGNED":{"start":{"line":163,"col":56,"offset":5279},"end":{"line":163,"col":57,"offset":5280},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f436b744f6c0f4fa22270b26e1cdb662c105c5c5cb4d3c571810b90e950cce5cec286dc3c58aae58ffc1e2ea9f7bcda9e1d2140016e17dbd9999e6bab8bee0b_0","lines":"\t  size_t len = strlen (errstr) + strlen (syserrstr) + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":164,"col":23,"offset":5304},"end":{"line":164,"col":39,"offset":5320},"extra":{"metavars":{"$FUN":{"start":{"line":164,"col":23,"offset":5304},"end":{"line":164,"col":29,"offset":5310},"abstract_content":"malloc"},"$X":{"start":{"line":164,"col":31,"offset":5312},"end":{"line":164,"col":34,"offset":5315},"abstract_content":"len","propagated_value":{"svalue_start":{"line":163,"col":17,"offset":5240},"svalue_end":{"line":163,"col":57,"offset":5280},"svalue_abstract_content":"strlen(errstr)+strlen(syserrstr)+2"}},"$Y":{"start":{"line":164,"col":37,"offset":5318},"end":{"line":164,"col":38,"offset":5319},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a8dbcf0dd83fa1307175814962da00e25ad7f98787009f21a66b001cdfe1abf1e4bb65164c8ce846f3fb00c1de893d806794e31a9be90640abc4331159e2f73d_0","lines":"\t  dbf->last_errstr = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":164,"col":23,"offset":5304},"end":{"line":164,"col":39,"offset":5320},"extra":{"metavars":{"$FUN":{"start":{"line":164,"col":23,"offset":5304},"end":{"line":164,"col":29,"offset":5310},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8f4bf36b2875265c1c6ced790afd5f0f7529b00ef68c7fa6fb92777f99275d450e67c3799b8a4a596e873297854946721c1763c62e2dfaa5ad1aa2fb8aaee48d_0","lines":"\t  dbf->last_errstr = malloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":168,"col":4,"offset":5372},"end":{"line":168,"col":37,"offset":5405},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3f72d43250a52fa5773b11a9eef938d832db39ce0c64be1f9a79e564bbd6b03297ba08da4281ce3a8385464eeefe7b068beaf0417f12cc3f17608bfbd53f9e01_0","lines":"\t  strcpy (dbf->last_errstr, errstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":168,"col":4,"offset":5372},"end":{"line":168,"col":37,"offset":5405},"extra":{"metavars":{"$FUN":{"start":{"line":168,"col":4,"offset":5372},"end":{"line":168,"col":10,"offset":5378},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e7d6c8e3b7c37fe596ec8af91a037f2973deacc7f10c08e815cb935df7de5fe8672675cb1dea043e840b814aa10361aea1791281ffaaad05f994e431fb8146c4_0","lines":"\t  strcpy (dbf->last_errstr, errstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":169,"col":4,"offset":5410},"end":{"line":169,"col":35,"offset":5441},"extra":{"metavars":{"$FUN":{"start":{"line":169,"col":4,"offset":5410},"end":{"line":169,"col":10,"offset":5416},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6394bf8da8099a8cb4b98b6e187e1758e0b047967fe2441df9245ee5a7b51fecd4c11a0c889673d27b69ae4348c0efd1e4d1068f2a7e90407415f560f8161624_0","lines":"\t  strcat (dbf->last_errstr, \": \");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":170,"col":4,"offset":5446},"end":{"line":170,"col":40,"offset":5482},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3f72d43250a52fa5773b11a9eef938d832db39ce0c64be1f9a79e564bbd6b03297ba08da4281ce3a8385464eeefe7b068beaf0417f12cc3f17608bfbd53f9e01_1","lines":"\t  strcat (dbf->last_errstr, syserrstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":170,"col":4,"offset":5446},"end":{"line":170,"col":40,"offset":5482},"extra":{"metavars":{"$FUN":{"start":{"line":170,"col":4,"offset":5446},"end":{"line":170,"col":10,"offset":5452},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6394bf8da8099a8cb4b98b6e187e1758e0b047967fe2441df9245ee5a7b51fecd4c11a0c889673d27b69ae4348c0efd1e4d1068f2a7e90407415f560f8161624_1","lines":"\t  strcat (dbf->last_errstr, syserrstr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":80,"col":7,"offset":2396},"end":{"line":80,"col":23,"offset":2412},"extra":{"metavars":{"$PTR":{"start":{"line":80,"col":13,"offset":2402},"end":{"line":80,"col":21,"offset":2410},"abstract_content":"key.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"20354f620b4a78a4cfb6262cbf39ca1e89b36b2f4321fe911342e5e843b79a58780d6b8e924466e5ebd4554ccc6ff57e667d0559f88a4d91b28358a187cc56fc_0","lines":"      free (key.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":81,"col":7,"offset":2419},"end":{"line":81,"col":24,"offset":2436},"extra":{"metavars":{"$PTR":{"start":{"line":81,"col":13,"offset":2425},"end":{"line":81,"col":22,"offset":2434},"abstract_content":"data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb2cf6a984afbf4f0135b7b729465b777126811175a8ed1f746c9aba06f7fe22a7bb1b65519d101c3eb45a5ea912ccc3ada1dd7cd514c3a10f1fb228fc2481c5_0","lines":"      free (data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":109,"col":11,"offset":2911},"end":{"line":109,"col":16,"offset":2916},"extra":{"metavars":{"$VAR":{"start":{"line":109,"col":11,"offset":2911},"end":{"line":109,"col":16,"offset":2916},"abstract_content":"flags"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"24f2b94843bd630359b89fbf529b678ec6bba550b974feda6c23ba6ddfe226041cfedd76d44e231b5f2330c5c0d629fd187298a6eddb33ea125f0680a57dc1ac_0","lines":"  switch (flags)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":112,"col":13,"offset":2959},"end":{"line":112,"col":65,"offset":3011},"extra":{"metavars":{"$FUN":{"start":{"line":112,"col":13,"offset":2959},"end":{"line":112,"col":17,"offset":2963},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"761c439082b274283fe1fdce22c8cb13af0b3f62dc888dc75b06ea24649e9352ae3ca555d21d42b2115d4e9af3c328f108a1e3670e24aeabdc55df9221747046_0","lines":"      nfd = open (exportfile, O_WRONLY | O_CREAT | O_EXCL, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":120,"col":13,"offset":3155},"end":{"line":120,"col":66,"offset":3208},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":13,"offset":3155},"end":{"line":120,"col":17,"offset":3159},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"761c439082b274283fe1fdce22c8cb13af0b3f62dc888dc75b06ea24649e9352ae3ca555d21d42b2115d4e9af3c328f108a1e3670e24aeabdc55df9221747046_1","lines":"      nfd = open (exportfile, O_WRONLY | O_CREAT | O_TRUNC, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","start":{"line":136,"col":8,"offset":3516},"end":{"line":136,"col":25,"offset":3533},"extra":{"metavars":{"$FUN":{"start":{"line":136,"col":8,"offset":3516},"end":{"line":136,"col":14,"offset":3522},"abstract_content":"fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5c4e27e48181ef35686b3a8a5e2bf83d8de244e8d7bf9c98ea8b219ebbbfab0a6edc9dddc0c1bef420fcaf13ad109fe7a2d48ffe0f24303f31a8346d6399b732_0","lines":"  fp = fdopen (nfd, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":57,"col":2,"offset":2018},"end":{"line":57,"col":39,"offset":2055},"extra":{"metavars":{"$RET":{"start":{"line":57,"col":2,"offset":2018},"end":{"line":57,"col":17,"offset":2033},"abstract_content":"return_val.dptr"},"$CAST":{"start":{"line":57,"col":21,"offset":2037},"end":{"line":57,"col":27,"offset":2043},"abstract_content":"char*"},"$FUN":{"start":{"line":57,"col":29,"offset":2045},"end":{"line":57,"col":35,"offset":2051},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0035474a0f748e2092b4d20b83f91695043c293f5d3de714edf64b79cfd28f48fd06843ed4b8752a441951fabc92e42e549aeb6ac14876f0e66a0b41f11519d2_0","lines":"\treturn_val.dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":57,"col":29,"offset":2045},"end":{"line":57,"col":39,"offset":2055},"extra":{"metavars":{"$FUN":{"start":{"line":57,"col":29,"offset":2045},"end":{"line":57,"col":35,"offset":2051},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8f09d4842b0b33f7a3741d75bd49f760f9075f924ec27eabc9837a5931d303748ba84cf947b01849048f75d7e26f2815e2f0eda39e42d5be50e2d224e88ed463_0","lines":"\treturn_val.dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":57,"col":29,"offset":2045},"end":{"line":57,"col":39,"offset":2055},"extra":{"metavars":{"$LEN":{"start":{"line":57,"col":37,"offset":2053},"end":{"line":57,"col":38,"offset":2054},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e87558d86ea73d9a0e06f44e46a9dce29f418d92b7204db2b8bee5f0cbb177a6b1d1fd506b4a14c1c5e2d2f85abdfb71ea5554b51e289738e55d4c8041402411_0","lines":"\treturn_val.dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":59,"col":2,"offset":2069},"end":{"line":59,"col":54,"offset":2121},"extra":{"metavars":{"$RET":{"start":{"line":59,"col":2,"offset":2069},"end":{"line":59,"col":17,"offset":2084},"abstract_content":"return_val.dptr"},"$CAST":{"start":{"line":59,"col":21,"offset":2088},"end":{"line":59,"col":27,"offset":2094},"abstract_content":"char*"},"$FUN":{"start":{"line":59,"col":29,"offset":2096},"end":{"line":59,"col":35,"offset":2102},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0035474a0f748e2092b4d20b83f91695043c293f5d3de714edf64b79cfd28f48fd06843ed4b8752a441951fabc92e42e549aeb6ac14876f0e66a0b41f11519d2_1","lines":"\treturn_val.dptr = (char *) malloc (return_val.dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":59,"col":29,"offset":2096},"end":{"line":59,"col":54,"offset":2121},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":29,"offset":2096},"end":{"line":59,"col":35,"offset":2102},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8f09d4842b0b33f7a3741d75bd49f760f9075f924ec27eabc9837a5931d303748ba84cf947b01849048f75d7e26f2815e2f0eda39e42d5be50e2d224e88ed463_1","lines":"\treturn_val.dptr = (char *) malloc (return_val.dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","start":{"line":65,"col":7,"offset":2261},"end":{"line":65,"col":60,"offset":2314},"extra":{"metavars":{"$FUN":{"start":{"line":65,"col":7,"offset":2261},"end":{"line":65,"col":13,"offset":2267},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"44a3cc574adf655e9427535cc96135837a6427af90be54eb4c3eb9a414872d0905bd865e745ac1431171edf6a92b2d146253250283eea39b270b7f7ae178e8c6_0","lines":"      memcpy (return_val.dptr, find_data, return_val.dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":49,"col":19,"offset":1412},"end":{"line":49,"col":29,"offset":1422},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":49,"col":19,"offset":1412},"end":{"line":49,"col":24,"offset":1417},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e6c72d60c7a976e81ee2bf459b779545b73a9a8b557166bbfe3d6fb65013a9c055723562d6c9233e145e6b201b63efad5c8e27bf9d4fa5a1d8cdbc39b105781b_0","lines":"      if ((rret = fgetc (fp)) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":70,"col":13,"offset":1775},"end":{"line":70,"col":30,"offset":1792},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":13,"offset":1775},"end":{"line":70,"col":19,"offset":1781},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0417a6b25fbf832cd9692703df58575ad43dedc6c30dd9205a8a69e80468d3c224b63e1d05f934f9dbe32deb248c6150b28a76ef06e87a8cffb84a1eb475bbd4_0","lines":"  kbuffer = malloc (kbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":77,"col":13,"offset":1947},"end":{"line":77,"col":30,"offset":1964},"extra":{"metavars":{"$FUN":{"start":{"line":77,"col":13,"offset":1947},"end":{"line":77,"col":19,"offset":1953},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0417a6b25fbf832cd9692703df58575ad43dedc6c30dd9205a8a69e80468d3c224b63e1d05f934f9dbe32deb248c6150b28a76ef06e87a8cffb84a1eb475bbd4_1","lines":"  dbuffer = malloc (dbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":87,"col":11,"offset":2201},"end":{"line":87,"col":55,"offset":2245},"extra":{"metavars":{"$NARROW":{"start":{"line":87,"col":11,"offset":2201},"end":{"line":87,"col":15,"offset":2205},"abstract_content":"rret"},"$LARGE":{"start":{"line":87,"col":26,"offset":2216},"end":{"line":87,"col":31,"offset":2221},"abstract_content":"rsize"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"257e7e5c263aebc5417b0500ee871bfb764c09bea0211fcd3e974fe83915629b791f28dfad38ad2650d6326bd859ada1855b1e76519e3ebee2edc7f1dd2c4400_0","lines":"  while ((rret = fread (&rsize, sizeof (rsize), 1, fp)) == 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":87,"col":18,"offset":2208},"end":{"line":87,"col":55,"offset":2245},"extra":{"metavars":{"$FUN":{"start":{"line":87,"col":18,"offset":2208},"end":{"line":87,"col":23,"offset":2213},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e84588ce1f10ec8a490929bfd46a60f27ce1643d712aecd9af54b637b547c0e78a3289dd58628ddb85554c3ca6099f920b56c4c5593fda98adb7c3ca0d7ff06e_0","lines":"  while ((rret = fread (&rsize, sizeof (rsize), 1, fp)) == 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":100,"col":14,"offset":2476},"end":{"line":100,"col":41,"offset":2503},"extra":{"metavars":{"$X":{"start":{"line":99,"col":16,"offset":2434},"end":{"line":99,"col":20,"offset":2438},"abstract_content":"size","propagated_value":{"svalue_start":{"line":90,"col":14,"offset":2298},"svalue_end":{"line":90,"col":27,"offset":2311},"svalue_abstract_content":"ntohl(rsize)"}},"$Y":{"start":{"line":99,"col":23,"offset":2441},"end":{"line":99,"col":42,"offset":2460},"abstract_content":"GDBM_MIN_BLOCK_SIZE"},"$FUN":{"start":{"line":100,"col":14,"offset":2476},"end":{"line":100,"col":21,"offset":2483},"abstract_content":"realloc"},"$ARG1":{"start":{"line":100,"col":23,"offset":2485},"end":{"line":100,"col":30,"offset":2492},"abstract_content":"kbuffer"},"$N":{"start":{"line":100,"col":32,"offset":2494},"end":{"line":100,"col":40,"offset":2502},"abstract_content":"kbufsize","propagated_value":{"svalue_start":{"line":99,"col":16,"offset":2434},"svalue_end":{"line":99,"col":42,"offset":2460},"svalue_abstract_content":"size+GDBM_MIN_BLOCK_SIZE"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"225893d776c82ed6725e0dc8b5dabb4dc33ada3a7840a4f618d1d340c09ec2b7080652cb83c269694607e1e1da4883f475d321bae5ce88333f902df9f117fec6_0","lines":"\t  kbuffer = realloc (kbuffer, kbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":100,"col":14,"offset":2476},"end":{"line":100,"col":41,"offset":2503},"extra":{"metavars":{"$FUN":{"start":{"line":100,"col":14,"offset":2476},"end":{"line":100,"col":21,"offset":2483},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"28779ee3976fbecb60f4b99ac83a35b0500a0a9bee14d964d0e21ccaa874a631c1813f29491d2cc51331d0415e5bfdd2d30533bbe80bf997c951cf9dd9b1d2bc_0","lines":"\t  kbuffer = realloc (kbuffer, kbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":107,"col":11,"offset":2601},"end":{"line":107,"col":39,"offset":2629},"extra":{"metavars":{"$FUN":{"start":{"line":107,"col":11,"offset":2601},"end":{"line":107,"col":16,"offset":2606},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e84588ce1f10ec8a490929bfd46a60f27ce1643d712aecd9af54b637b547c0e78a3289dd58628ddb85554c3ca6099f920b56c4c5593fda98adb7c3ca0d7ff06e_1","lines":"      if (fread (kbuffer, size, 1, fp) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":117,"col":11,"offset":2777},"end":{"line":117,"col":48,"offset":2814},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":11,"offset":2777},"end":{"line":117,"col":16,"offset":2782},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e84588ce1f10ec8a490929bfd46a60f27ce1643d712aecd9af54b637b547c0e78a3289dd58628ddb85554c3ca6099f920b56c4c5593fda98adb7c3ca0d7ff06e_2","lines":"      if (fread (&rsize, sizeof (rsize), 1, fp) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":132,"col":14,"offset":3052},"end":{"line":132,"col":41,"offset":3079},"extra":{"metavars":{"$X":{"start":{"line":131,"col":16,"offset":3010},"end":{"line":131,"col":20,"offset":3014},"abstract_content":"size","propagated_value":{"svalue_start":{"line":123,"col":14,"offset":2881},"svalue_end":{"line":123,"col":27,"offset":2894},"svalue_abstract_content":"ntohl(rsize)"}},"$Y":{"start":{"line":131,"col":23,"offset":3017},"end":{"line":131,"col":42,"offset":3036},"abstract_content":"GDBM_MIN_BLOCK_SIZE"},"$FUN":{"start":{"line":132,"col":14,"offset":3052},"end":{"line":132,"col":21,"offset":3059},"abstract_content":"realloc"},"$ARG1":{"start":{"line":132,"col":23,"offset":3061},"end":{"line":132,"col":30,"offset":3068},"abstract_content":"dbuffer"},"$N":{"start":{"line":132,"col":32,"offset":3070},"end":{"line":132,"col":40,"offset":3078},"abstract_content":"dbufsize","propagated_value":{"svalue_start":{"line":131,"col":16,"offset":3010},"svalue_end":{"line":131,"col":42,"offset":3036},"svalue_abstract_content":"size+GDBM_MIN_BLOCK_SIZE"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c64547faf3f720560bc0ba8d360a5d1ed4655761acad17ceda6be3959e0fbcebb2ef88c8a98ba80d9caf17f579bef3d266e0880e9218754b19ef49deb9ecf9ca_0","lines":"\t  dbuffer = realloc (dbuffer, dbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":132,"col":14,"offset":3052},"end":{"line":132,"col":41,"offset":3079},"extra":{"metavars":{"$FUN":{"start":{"line":132,"col":14,"offset":3052},"end":{"line":132,"col":21,"offset":3059},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"28779ee3976fbecb60f4b99ac83a35b0500a0a9bee14d964d0e21ccaa874a631c1813f29491d2cc51331d0415e5bfdd2d30533bbe80bf997c951cf9dd9b1d2bc_1","lines":"\t  dbuffer = realloc (dbuffer, dbufsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":139,"col":11,"offset":3177},"end":{"line":139,"col":39,"offset":3205},"extra":{"metavars":{"$FUN":{"start":{"line":139,"col":11,"offset":3177},"end":{"line":139,"col":16,"offset":3182},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e84588ce1f10ec8a490929bfd46a60f27ce1643d712aecd9af54b637b547c0e78a3289dd58628ddb85554c3ca6099f920b56c4c5593fda98adb7c3ca0d7ff06e_3","lines":"      if (fread (dbuffer, size, 1, fp) != 1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","start":{"line":177,"col":8,"offset":3746},"end":{"line":177,"col":31,"offset":3769},"extra":{"metavars":{"$FUN":{"start":{"line":177,"col":8,"offset":3746},"end":{"line":177,"col":13,"offset":3751},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"755238302ec4e25580d1f1a8d56c3ff8f0f8003f660be7e48acc52f23e3513524619db249f92d3ab50f3bbc293351f89c3830611c4f216bc895129eccae7e331_0","lines":"  fp = fopen (importfile, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":52,"col":3,"offset":1196},"end":{"line":52,"col":24,"offset":1217},"extra":{"metavars":{"$PTR":{"start":{"line":52,"col":9,"offset":1202},"end":{"line":52,"col":22,"offset":1215},"abstract_content":"file->->linebuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f0738373fc9098b5dda4dea0fb7915f0e9b21ef5bb6b1d38d20762c546d8b4005beab816634b93b80e05bc5d798f247a69f5588d70462997144c625fa8dd25f6_0","lines":"  free (file->linebuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":53,"col":3,"offset":1220},"end":{"line":53,"col":23,"offset":1240},"extra":{"metavars":{"$PTR":{"start":{"line":53,"col":9,"offset":1226},"end":{"line":53,"col":21,"offset":1238},"abstract_content":"file->->buffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a8d0784dac6bd984945096b0382de8e0b79bab6981f8ed0d3f4e7ddad333dd80f6a95992164ac4d2b350527a7855ea4924a4928823f4a254c552f860c65bf318_0","lines":"  free (file->buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":54,"col":3,"offset":1243},"end":{"line":54,"col":31,"offset":1271},"extra":{"metavars":{"$PTR":{"start":{"line":54,"col":9,"offset":1249},"end":{"line":54,"col":29,"offset":1269},"abstract_content":"file->->data[0].buffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f43e16374ce4206832351995f4d3a83082fbf0b5c63f0b0b0069fb87ebf89b6c1b27a9459c8458ed3fd3abeb9564b3d42b4b269960eb52c975d45dc99f6a1b2_0","lines":"  free (file->data[0].buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":55,"col":3,"offset":1274},"end":{"line":55,"col":31,"offset":1302},"extra":{"metavars":{"$PTR":{"start":{"line":55,"col":9,"offset":1280},"end":{"line":55,"col":29,"offset":1300},"abstract_content":"file->->data[1].buffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"562a3b18e9b75180d529a1416fab3c167d09031036d3e43843b3f3f5a3faf04b8cf7bae8d806dcdcee414089907b6148af447c0bf77167b92867da9c431f797d_0","lines":"  free (file->data[1].buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":56,"col":3,"offset":1305},"end":{"line":56,"col":23,"offset":1325},"extra":{"metavars":{"$PTR":{"start":{"line":56,"col":9,"offset":1311},"end":{"line":56,"col":21,"offset":1323},"abstract_content":"file->->header"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4f857f52839a68ca4b9a571b4d72bc7b2b49dafa1e9df164c22b5ae7d60adc59ffb21eca603d58322e469a577cb468fbef4fb14c4847ee7aa256022a1e2bc511_0","lines":"  free (file->header);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":67,"col":7,"offset":1472},"end":{"line":68,"col":3,"offset":1513},"extra":{"metavars":{"$EXPR1":{"start":{"line":67,"col":12,"offset":1477},"end":{"line":67,"col":20,"offset":1485},"abstract_content":"p=parm"},"$EXPR2":{"start":{"line":67,"col":22,"offset":1487},"end":{"line":67,"col":32,"offset":1497},"abstract_content":"*p==*buf"},"$EXPR3":{"start":{"line":67,"col":34,"offset":1499},"end":{"line":67,"col":44,"offset":1509},"abstract_content":"p++buf++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c2ac0e5a408296058afc62e22b787055b6702403b80a894b510382676a268af3753b6c42b0da727f54c99e66ee9a6ad3818ef2f2fec615f2c847cea95667ab3a_0","lines":"      for (p = parm; *p == *buf; p++, buf++)\n\t;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":83,"col":14,"offset":1739},"end":{"line":83,"col":47,"offset":1772},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":83,"col":14,"offset":1739},"end":{"line":83,"col":19,"offset":1744},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"008d0db71b9e8c0b8d457837619492ef42b41cbd38a01f3a5f722f875833f36d034e203ee4a50d3cb24b317fdc501a0d4a7157b1985e2acac6df75e0342de404_0","lines":"      while (fgets (buf, sizeof buf, file->fp))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":98,"col":21,"offset":2093},"end":{"line":98,"col":47,"offset":2119},"extra":{"metavars":{"$X":{"start":{"line":95,"col":21,"offset":1957},"end":{"line":96,"col":31,"offset":2032},"abstract_content":"file->->lblevel+n+_GDBM_MAX_DUMP_LINE_LEN/_GDBM_MAX_DUMP_LINE_LEN"},"$Y":{"start":{"line":97,"col":15,"offset":2048},"end":{"line":97,"col":38,"offset":2071},"abstract_content":"_GDBM_MAX_DUMP_LINE_LEN"},"$FUN":{"start":{"line":98,"col":21,"offset":2093},"end":{"line":98,"col":28,"offset":2100},"abstract_content":"realloc"},"$ARG1":{"start":{"line":98,"col":30,"offset":2102},"end":{"line":98,"col":43,"offset":2115},"abstract_content":"file->->linebuf"},"$N":{"start":{"line":98,"col":45,"offset":2117},"end":{"line":98,"col":46,"offset":2118},"abstract_content":"s"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4038dcee831e852b67e719b50c41b9f671813cd2b894393d2e1f8e6baabac4f08e0f03e75470631c07bcb57ca4d0d4ff8238a52e9d8538e4e206b92802c641a9_0","lines":"\t      char *newp = realloc (file->linebuf, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":98,"col":21,"offset":2093},"end":{"line":98,"col":47,"offset":2119},"extra":{"metavars":{"$FUN":{"start":{"line":98,"col":21,"offset":2093},"end":{"line":98,"col":28,"offset":2100},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68d9450f59a6573f25f7fc5f1581c182a3a0b05758f41a455a6f33de3b001c55fd2325d424d2c4dae4915158d6dd8529dd3e8ba2efd3409d3468a28525c0e7a9_0","lines":"\t      char *newp = realloc (file->linebuf, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":105,"col":4,"offset":2235},"end":{"line":105,"col":50,"offset":2281},"extra":{"metavars":{"$FUN":{"start":{"line":105,"col":4,"offset":2235},"end":{"line":105,"col":10,"offset":2241},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b1aae7e9bd6aec0f39ee9f86b9e1a6e36af319fb7d66ffed6dcde5cfdb8da7cb44e35df349692e36244546e64d6fb6e580d0cf66b474cd831e6f0702cd5a69b4_0","lines":"\t  memcpy (file->linebuf + file->lblevel, buf, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":131,"col":11,"offset":2678},"end":{"line":133,"col":41,"offset":2809},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":131,"col":11,"offset":2678},"end":{"line":131,"col":12,"offset":2679},"abstract_content":"s"},"$SIGNED":{"start":{"line":131,"col":64,"offset":2731},"end":{"line":131,"col":65,"offset":2732},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"52cba75ec5e42a878b7010b407077e2e98fe394c40decd6bacc2d3b611c5f9fbba4f53d2b16b84f9fa4009e609fec54838b63f9db72da9752b05d08551b31076_0","lines":"\t  size_t s = ((file->buflevel + n + _GDBM_MAX_DUMP_LINE_LEN - 1)\n\t\t      / _GDBM_MAX_DUMP_LINE_LEN)\n\t              * _GDBM_MAX_DUMP_LINE_LEN;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":134,"col":17,"offset":2827},"end":{"line":134,"col":42,"offset":2852},"extra":{"metavars":{"$X":{"start":{"line":131,"col":17,"offset":2684},"end":{"line":132,"col":34,"offset":2767},"abstract_content":"file->->buflevel+n+_GDBM_MAX_DUMP_LINE_LEN-1/_GDBM_MAX_DUMP_LINE_LEN"},"$Y":{"start":{"line":133,"col":18,"offset":2786},"end":{"line":133,"col":41,"offset":2809},"abstract_content":"_GDBM_MAX_DUMP_LINE_LEN"},"$FUN":{"start":{"line":134,"col":17,"offset":2827},"end":{"line":134,"col":24,"offset":2834},"abstract_content":"realloc"},"$ARG1":{"start":{"line":134,"col":26,"offset":2836},"end":{"line":134,"col":38,"offset":2848},"abstract_content":"file->->buffer"},"$N":{"start":{"line":134,"col":40,"offset":2850},"end":{"line":134,"col":41,"offset":2851},"abstract_content":"s"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8d937a2a452aa06b4b782201a1811c847f773b22426607f17f7af75de0b01244f7299ea4eaf295bdc67540c27e058e9560e08e2b28be2dc0330bf03becb639ef_0","lines":"\t  char *newp = realloc (file->buffer, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":134,"col":17,"offset":2827},"end":{"line":134,"col":42,"offset":2852},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":17,"offset":2827},"end":{"line":134,"col":24,"offset":2834},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68d9450f59a6573f25f7fc5f1581c182a3a0b05758f41a455a6f33de3b001c55fd2325d424d2c4dae4915158d6dd8529dd3e8ba2efd3409d3468a28525c0e7a9_1","lines":"\t  char *newp = realloc (file->buffer, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":140,"col":7,"offset":2954},"end":{"line":140,"col":63,"offset":3010},"extra":{"metavars":{"$FUN":{"start":{"line":140,"col":7,"offset":2954},"end":{"line":140,"col":13,"offset":2960},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b1aae7e9bd6aec0f39ee9f86b9e1a6e36af319fb7d66ffed6dcde5cfdb8da7cb44e35df349692e36244546e64d6fb6e580d0cf66b474cd831e6f0702cd5a69b4_1","lines":"      memcpy (file->buffer + file->buflevel, file->linebuf, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":177,"col":17,"offset":3696},"end":{"line":177,"col":42,"offset":3721},"extra":{"metavars":{"$X":{"start":{"line":174,"col":17,"offset":3557},"end":{"line":175,"col":34,"offset":3636},"abstract_content":"file->->buflevel+n+_GDBM_MAX_DUMP_LINE_LEN/_GDBM_MAX_DUMP_LINE_LEN"},"$Y":{"start":{"line":176,"col":18,"offset":3655},"end":{"line":176,"col":41,"offset":3678},"abstract_content":"_GDBM_MAX_DUMP_LINE_LEN"},"$FUN":{"start":{"line":177,"col":17,"offset":3696},"end":{"line":177,"col":24,"offset":3703},"abstract_content":"realloc"},"$ARG1":{"start":{"line":177,"col":26,"offset":3705},"end":{"line":177,"col":38,"offset":3717},"abstract_content":"file->->buffer"},"$N":{"start":{"line":177,"col":40,"offset":3719},"end":{"line":177,"col":41,"offset":3720},"abstract_content":"s"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6b5fd910f34c6151db3eec0f544dac034cc8b199ef03ba765e294c9c560a7fdcd514de863a784182440f6cfd5166227023b59a0f2825fdbccca5ca6fb7c61c64_0","lines":"\t  char *newp = realloc (file->buffer, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":177,"col":17,"offset":3696},"end":{"line":177,"col":42,"offset":3721},"extra":{"metavars":{"$FUN":{"start":{"line":177,"col":17,"offset":3696},"end":{"line":177,"col":24,"offset":3703},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68d9450f59a6573f25f7fc5f1581c182a3a0b05758f41a455a6f33de3b001c55fd2325d424d2c4dae4915158d6dd8529dd3e8ba2efd3409d3468a28525c0e7a9_2","lines":"\t  char *newp = realloc (file->buffer, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":241,"col":20,"offset":4832},"end":{"line":241,"col":30,"offset":4842},"extra":{"metavars":{"$EXPR":{"start":{"line":241,"col":20,"offset":4832},"end":{"line":241,"col":25,"offset":4837},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":239,"col":11,"offset":4781},"svalue_end":{"line":239,"col":12,"offset":4782},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3612ba86f6cd25e5ee9af8221ce9ac87ac10cd02e08c00625f16a6ad2cc0189db0e5097fe5b515f626605d75eb9b276b02e059ba6886fc4c9db6624590f9591e_0","lines":"  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":265,"col":3,"offset":5218},"end":{"line":265,"col":29,"offset":5244},"extra":{"metavars":{"$SIGNED":{"start":{"line":265,"col":3,"offset":5218},"end":{"line":265,"col":5,"offset":5220},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":265,"col":25,"offset":5240},"end":{"line":265,"col":28,"offset":5243},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0e330f4abc0b648f1bdfd5eb1371347133549db010b0985afbd5b2d84cbf8bb3ab424c72b5e9e2a1d3d287fe5a63794c56d349efe59eb619a8bb34295b73fd9e_0","lines":"  rc = get_len (param, &len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":273,"col":3,"offset":5375},"end":{"line":275,"col":38,"offset":5536},"extra":{"metavars":{"$SIGNED":{"start":{"line":273,"col":3,"offset":5375},"end":{"line":273,"col":5,"offset":5377},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":275,"col":9,"offset":5507},"end":{"line":275,"col":22,"offset":5520},"abstract_content":"consumed_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7dcfe8a4e17349626726c36fdec56faf44962fc7598ad6f652b97b72635953349847bbc70d1e80524e6740821db74e33cb5924f39eb299832611598fb072b061_0","lines":"  rc = _gdbm_base64_decode ((unsigned char *)file->buffer, file->buflevel,\n\t\t\t    &file->data[n].buffer, &file->data[n].size,\n\t\t\t    &consumed_size, &decoded_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":299,"col":3,"offset":5988},"end":{"line":343,"col":6,"offset":6832},"extra":{"metavars":{"$EXPR1":{"start":{"line":299,"col":9,"offset":5994},"end":{"line":299,"col":18,"offset":6003},"abstract_content":"meta_mask"},"$EXPR2":{"start":{"line":299,"col":21,"offset":6006},"end":{"line":299,"col":41,"offset":6026},"abstract_content":"GDBM_META_MASK_OWNER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"59dad920185efa0a9e0014ba37940077e1057606c47742383681d7f77241a5656dd349488e13e86602b98bf78c7be863244b94f79522306f23733c8eef18f34f_0","lines":"  if (!(meta_mask & GDBM_META_MASK_OWNER))\n    {\n      p = getparm (param, \"user\");\n      if (p)\n\t{\n\t  struct passwd *pw = getpwnam (p);\n\t  if (pw)\n\t    {\n\t      owner_uid = pw->pw_uid;\n\t      meta_flags |= META_UID;\n\t    }\n\t}\n\n      if (!(meta_flags & META_UID) && (p = getparm (param, \"uid\")))\n\t{\n\t  errno = 0;\n\t  n = strtoul (p, &end, 10);\n\t  if (*end == 0 && errno == 0)\n\t    {\n\t      owner_uid = n;\n\t      meta_flags |= META_UID;\n\t    }\n\t}\n\n      p = getparm (param, \"group\");\n      if (p)\n\t{\n\t  struct group *gr = getgrnam (p);\n\t  if (gr)\n\t    {\n\t      owner_gid = gr->gr_gid;\n\t      meta_flags |= META_GID;\n\t    }\n\t}\n      if (!(meta_flags & META_GID) && (p = getparm (param, \"gid\")))\n\t{\n\t  errno = 0;\n\t  n = strtoul (p, &end, 10);\n\t  if (*end == 0 && errno == 0)\n\t    {\n\t      owner_gid = n;\n\t      meta_flags |= META_GID;\n\t    }\n\t}\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":312,"col":7,"offset":6220},"end":{"line":321,"col":3,"offset":6430},"extra":{"metavars":{"$EXPR1":{"start":{"line":312,"col":13,"offset":6226},"end":{"line":312,"col":23,"offset":6236},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":312,"col":26,"offset":6239},"end":{"line":312,"col":34,"offset":6247},"abstract_content":"META_UID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"44ac41bce73889867ff1229b1f3b4a325eebaae7dcca4d02f1f0ea19cb8c1af30a2efae949d77376bf3f24dfbfda4e72fe58103975abf3c878acc387806459f8_0","lines":"      if (!(meta_flags & META_UID) && (p = getparm (param, \"uid\")))\n\t{\n\t  errno = 0;\n\t  n = strtoul (p, &end, 10);\n\t  if (*end == 0 && errno == 0)\n\t    {\n\t      owner_uid = n;\n\t      meta_flags |= META_UID;\n\t    }\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":316,"col":21,"offset":6349},"end":{"line":316,"col":31,"offset":6359},"extra":{"metavars":{"$EXPR":{"start":{"line":316,"col":21,"offset":6349},"end":{"line":316,"col":26,"offset":6354},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":314,"col":12,"offset":6296},"svalue_end":{"line":314,"col":13,"offset":6297},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3612ba86f6cd25e5ee9af8221ce9ac87ac10cd02e08c00625f16a6ad2cc0189db0e5097fe5b515f626605d75eb9b276b02e059ba6886fc4c9db6624590f9591e_1","lines":"\t  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":333,"col":7,"offset":6616},"end":{"line":342,"col":3,"offset":6826},"extra":{"metavars":{"$EXPR1":{"start":{"line":333,"col":13,"offset":6622},"end":{"line":333,"col":23,"offset":6632},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":333,"col":26,"offset":6635},"end":{"line":333,"col":34,"offset":6643},"abstract_content":"META_GID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d2f9eb6f03b125502d2c558b25a98203282a1cda4c8df35cd497faec301ccad8a610b7e9e43df02ff7a5308282cc3171d19ecce00d8224df2fcbc9bbecce8401_0","lines":"      if (!(meta_flags & META_GID) && (p = getparm (param, \"gid\")))\n\t{\n\t  errno = 0;\n\t  n = strtoul (p, &end, 10);\n\t  if (*end == 0 && errno == 0)\n\t    {\n\t      owner_gid = n;\n\t      meta_flags |= META_GID;\n\t    }\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":337,"col":21,"offset":6745},"end":{"line":337,"col":31,"offset":6755},"extra":{"metavars":{"$EXPR":{"start":{"line":337,"col":21,"offset":6745},"end":{"line":337,"col":26,"offset":6750},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":335,"col":12,"offset":6692},"svalue_end":{"line":335,"col":13,"offset":6693},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3612ba86f6cd25e5ee9af8221ce9ac87ac10cd02e08c00625f16a6ad2cc0189db0e5097fe5b515f626605d75eb9b276b02e059ba6886fc4c9db6624590f9591e_2","lines":"\t  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":345,"col":3,"offset":6838},"end":{"line":358,"col":6,"offset":7088},"extra":{"metavars":{"$EXPR1":{"start":{"line":345,"col":9,"offset":6844},"end":{"line":345,"col":18,"offset":6853},"abstract_content":"meta_mask"},"$EXPR2":{"start":{"line":345,"col":21,"offset":6856},"end":{"line":345,"col":40,"offset":6875},"abstract_content":"GDBM_META_MASK_MODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fec691a34cf79e1d95a9cb6756bf8c8415f8e020af3b70b4c44b056332b3143f28ae3281ebbb0a6d4b58a5007d4ac9f3b3232a017421658a0fa07f29ce3aefc7_0","lines":"  if (!(meta_mask & GDBM_META_MASK_MODE))\n    {\n      p = getparm (param, \"mode\");\n      if (p)\n\t{\n\t  errno = 0;\n\t  n = strtoul (p, &end, 8);\n\t  if (*end == 0 && errno == 0)\n\t    {\n\t      mode = n & 0777;\n\t      meta_flags |= META_MODE;\n\t    }\n\t}\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":352,"col":21,"offset":6998},"end":{"line":352,"col":31,"offset":7008},"extra":{"metavars":{"$EXPR":{"start":{"line":352,"col":21,"offset":6998},"end":{"line":352,"col":26,"offset":7003},"abstract_content":"errno","propagated_value":{"svalue_start":{"line":350,"col":12,"offset":6946},"svalue_end":{"line":350,"col":13,"offset":6947},"svalue_abstract_content":"0"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3612ba86f6cd25e5ee9af8221ce9ac87ac10cd02e08c00625f16a6ad2cc0189db0e5097fe5b515f626605d75eb9b276b02e059ba6886fc4c9db6624590f9591e_3","lines":"\t  if (*end == 0 && errno == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":363,"col":7,"offset":7155},"end":{"line":383,"col":3,"offset":7680},"extra":{"metavars":{"$EXPR1":{"start":{"line":363,"col":30,"offset":7178},"end":{"line":363,"col":40,"offset":7188},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":363,"col":44,"offset":7192},"end":{"line":363,"col":61,"offset":7209},"abstract_content":"META_UID|META_GID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8bc04b8ffd77bd71d7561591430b85d43e16dab2a2e357edbae27388a6e2e4ee0dadf4bea6c7902d1e2dbec1c750e09ebcf7af695209073ae3bd1e6c94aabecf_0","lines":"      if (getuid () == 0 && (meta_flags & (META_UID|META_GID)))\n\t{\n\t  if ((meta_flags & (META_UID|META_GID)) != (META_UID|META_GID))\n\t    {\n\t      struct stat st;\n\t      if (fstat (fd, &st))\n\t\t{\n\t\t  GDBM_SET_ERRNO (dbf, GDBM_FILE_STAT_ERROR, FALSE);\n\t\t  return 1;\n\t\t}\n\t      if (!(meta_flags & META_UID))\n\t\towner_uid = st.st_uid;\n\t      if (!(meta_flags & META_GID))\n\t\towner_gid = st.st_gid;\n\t    }\n\t  if (fchown (fd, owner_uid, owner_gid))\n\t    {\n\t      GDBM_SET_ERRNO (dbf, GDBM_ERR_FILE_OWNER, FALSE);\n\t      return 1;\n\t    }\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":365,"col":4,"offset":7219},"end":{"line":377,"col":7,"offset":7547},"extra":{"metavars":{"$EXPR1":{"start":{"line":365,"col":23,"offset":7238},"end":{"line":365,"col":31,"offset":7246},"abstract_content":"META_UID"},"$EXPR2":{"start":{"line":365,"col":32,"offset":7247},"end":{"line":365,"col":40,"offset":7255},"abstract_content":"META_GID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c997e622b5e6c5d7b0c9eb4b84b7ffd1afc30d86457a0d672dc495969025971b251b3bee735021a2f037d199d80f6edd672db81d7aca7365e1b47840a324ec23_0","lines":"\t  if ((meta_flags & (META_UID|META_GID)) != (META_UID|META_GID))\n\t    {\n\t      struct stat st;\n\t      if (fstat (fd, &st))\n\t\t{\n\t\t  GDBM_SET_ERRNO (dbf, GDBM_FILE_STAT_ERROR, FALSE);\n\t\t  return 1;\n\t\t}\n\t      if (!(meta_flags & META_UID))\n\t\towner_uid = st.st_uid;\n\t      if (!(meta_flags & META_GID))\n\t\towner_gid = st.st_gid;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":368,"col":12,"offset":7323},"end":{"line":368,"col":27,"offset":7338},"extra":{"metavars":{"$FUN":{"start":{"line":368,"col":12,"offset":7323},"end":{"line":368,"col":17,"offset":7328},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d43d4e730ba020c04c2c1904cfac8931b6afff050240921efa67dcd56c81118908e52f8abeb22870942d4681fe9db161551eae748989198a5902f6e8070a13e6_0","lines":"\t      if (fstat (fd, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":373,"col":8,"offset":7424},"end":{"line":374,"col":25,"offset":7478},"extra":{"metavars":{"$EXPR1":{"start":{"line":373,"col":14,"offset":7430},"end":{"line":373,"col":24,"offset":7440},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":373,"col":27,"offset":7443},"end":{"line":373,"col":35,"offset":7451},"abstract_content":"META_UID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"44ac41bce73889867ff1229b1f3b4a325eebaae7dcca4d02f1f0ea19cb8c1af30a2efae949d77376bf3f24dfbfda4e72fe58103975abf3c878acc387806459f8_1","lines":"\t      if (!(meta_flags & META_UID))\n\t\towner_uid = st.st_uid;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":375,"col":8,"offset":7486},"end":{"line":376,"col":25,"offset":7540},"extra":{"metavars":{"$EXPR1":{"start":{"line":375,"col":14,"offset":7492},"end":{"line":375,"col":24,"offset":7502},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":375,"col":27,"offset":7505},"end":{"line":375,"col":35,"offset":7513},"abstract_content":"META_GID"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d2f9eb6f03b125502d2c558b25a98203282a1cda4c8df35cd497faec301ccad8a610b7e9e43df02ff7a5308282cc3171d19ecce00d8224df2fcbc9bbecce8401_1","lines":"\t      if (!(meta_flags & META_GID))\n\t\towner_gid = st.st_gid;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":378,"col":8,"offset":7555},"end":{"line":378,"col":41,"offset":7588},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":378,"col":8,"offset":7555},"end":{"line":378,"col":14,"offset":7561},"abstract_content":"fchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"29c25a08f9128f4b545d18414faaa1bdfa71510f11fbe2923bd67747ca507f9b6d33c9fd87d57df0819bc8537a5a922a85882ab9daa37226afa9dc1c26f93e28_0","lines":"\t  if (fchown (fd, owner_uid, owner_gid))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":384,"col":7,"offset":7687},"end":{"line":388,"col":3,"offset":7809},"extra":{"metavars":{"$EXPR1":{"start":{"line":384,"col":12,"offset":7692},"end":{"line":384,"col":22,"offset":7702},"abstract_content":"meta_flags"},"$EXPR2":{"start":{"line":384,"col":25,"offset":7705},"end":{"line":384,"col":34,"offset":7714},"abstract_content":"META_MODE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ef6e599714cffc7a60d13c6aa0458f32b3964a9f490f987fcb81f9e98910aae444327cfa50b69fb6e21e72ca6d403966bd410270d62727699fc5eac1d645f41f_0","lines":"      if ((meta_flags & META_MODE) && fchmod (fd, mode))\n\t{\n\t  GDBM_SET_ERRNO (dbf, GDBM_ERR_FILE_OWNER, FALSE);\n\t  return 1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":384,"col":39,"offset":7719},"end":{"line":384,"col":56,"offset":7736},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$FUN":{"start":{"line":384,"col":39,"offset":7719},"end":{"line":384,"col":45,"offset":7725},"abstract_content":"fchmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"33ccc04c8679ed3d3b29099b0c3b6883acf93b49172bdc6e5f28f2c2f4e6ff439350edc175c392791f8cf7e1ae6a4d510856b05145cc766a13dec4847745e540_0","lines":"      if ((meta_flags & META_MODE) && fchmod (fd, mode))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":419,"col":13,"offset":8361},"end":{"line":420,"col":58,"offset":8442},"extra":{"metavars":{"$FUN":{"start":{"line":419,"col":13,"offset":8361},"end":{"line":419,"col":22,"offset":8370},"abstract_content":"gdbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c477b63732a1c0301729408d02a643d0df129ece97197fcc0d7716c209dd8d15e487aca978922983ff9177233cfb3e9535b1277cafae9933b2b268cdbc5b26c1_0","lines":"      tmp = gdbm_open (filename, 0,\n\t\t       replace ? GDBM_WRCREAT : GDBM_NEWDB, 0600, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":467,"col":8,"offset":9181},"end":{"line":467,"col":43,"offset":9216},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":467,"col":8,"offset":9181},"end":{"line":467,"col":13,"offset":9186},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"008d0db71b9e8c0b8d457837619492ef42b41cbd38a01f3a5f722f875833f36d034e203ee4a50d3cb24b317fdc501a0d4a7157b1985e2acac6df75e0342de404_1","lines":"  if (!fgets (buf, sizeof (buf), file->fp))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":471,"col":10,"offset":9292},"end":{"line":471,"col":45,"offset":9327},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":471,"col":10,"offset":9292},"end":{"line":471,"col":15,"offset":9297},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"008d0db71b9e8c0b8d457837619492ef42b41cbd38a01f3a5f722f875833f36d034e203ee4a50d3cb24b317fdc501a0d4a7157b1985e2acac6df75e0342de404_2","lines":"  while (fgets (buf, sizeof (buf), file->fp))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":499,"col":15,"offset":9725},"end":{"line":499,"col":25,"offset":9735},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":499,"col":15,"offset":9725},"end":{"line":499,"col":20,"offset":9730},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ebb205824cc83ae2c0d1140511a74feb8a04b3d77437ea21245744aa1fa24188693b896a97e7bad6572cc4c273213e8c6a552483c0e341d674d9425b0cfd37e_0","lines":"  while ((c = fgetc (fp)) != EOF && c != '\\n')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":508,"col":16,"offset":9869},"end":{"line":508,"col":26,"offset":9879},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":508,"col":16,"offset":9869},"end":{"line":508,"col":21,"offset":9874},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ebb205824cc83ae2c0d1140511a74feb8a04b3d77437ea21245744aa1fa24188693b896a97e7bad6572cc4c273213e8c6a552483c0e341d674d9425b0cfd37e_1","lines":"      if ((c = fgetc (fp)) == EOF)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":518,"col":15,"offset":10013},"end":{"line":518,"col":46,"offset":10044},"extra":{"metavars":{"$FUN":{"start":{"line":518,"col":15,"offset":10013},"end":{"line":518,"col":22,"offset":10020},"abstract_content":"realloc"},"$ARG1":{"start":{"line":518,"col":24,"offset":10022},"end":{"line":518,"col":31,"offset":10029},"abstract_content":"d->->dptr"},"$X":{"start":{"line":518,"col":33,"offset":10031},"end":{"line":518,"col":37,"offset":10035},"abstract_content":"dmax"},"$Y":{"start":{"line":518,"col":40,"offset":10038},"end":{"line":518,"col":45,"offset":10043},"abstract_content":"DINCR"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d1835efc6077ba8674ee0f6bb35ef44c6763f4ad55e5a24408c1a2eed3f9db0523435ece08ac713db460499a742a2c75c3649c6c9812f71e1e304ecf8281b21d_0","lines":"\t  char *np = realloc (d->dptr, dmax + DINCR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":518,"col":15,"offset":10013},"end":{"line":518,"col":46,"offset":10044},"extra":{"metavars":{"$FUN":{"start":{"line":518,"col":15,"offset":10013},"end":{"line":518,"col":22,"offset":10020},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68d9450f59a6573f25f7fc5f1581c182a3a0b05758f41a455a6f33de3b001c55fd2325d424d2c4dae4915158d6dd8529dd3e8ba2efd3409d3468a28525c0e7a9_3","lines":"\t  char *np = realloc (d->dptr, dmax + DINCR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":546,"col":15,"offset":10492},"end":{"line":546,"col":31,"offset":10508},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":546,"col":15,"offset":10492},"end":{"line":546,"col":20,"offset":10497},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ebb205824cc83ae2c0d1140511a74feb8a04b3d77437ea21245744aa1fa24188693b896a97e7bad6572cc4c273213e8c6a552483c0e341d674d9425b0cfd37e_2","lines":"  while ((c = fgetc (file->fp)) == ' ')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":548,"col":12,"offset":10535},"end":{"line":548,"col":50,"offset":10573},"extra":{"metavars":{"$FUN":{"start":{"line":548,"col":12,"offset":10535},"end":{"line":548,"col":23,"offset":10546},"abstract_content":"xdatum_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3999312c4128c6b9331045ea0b34cdf15a3a4910cae511b91e744705ded935db02b78d4b8756431e7e4df95477c88c3af0d272ea55f929e0f333f56d48f04838_0","lines":"      rc = xdatum_read (file->fp, &xd[i], &xs[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":561,"col":3,"offset":10763},"end":{"line":561,"col":21,"offset":10781},"extra":{"metavars":{"$PTR":{"start":{"line":561,"col":9,"offset":10769},"end":{"line":561,"col":19,"offset":10779},"abstract_content":"xd[0].dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8098a51bc6992b63063c33584cde0ba12eab34d2ca7dab0b84096f5900c224d8429da73f538b920c0c12e2690df8b6f748234a0589ec5d471a61404848aada48_0","lines":"  free (xd[0].dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":562,"col":3,"offset":10784},"end":{"line":562,"col":21,"offset":10802},"extra":{"metavars":{"$PTR":{"start":{"line":562,"col":9,"offset":10790},"end":{"line":562,"col":19,"offset":10800},"abstract_content":"xd[1].dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ffaf66b329520b400d8674dd52dc00ea1c32f1b85bf910a0cc387992ce6e78b53002c781a650200a2ea7a97284b89f5e4923c6dbe4709f32cf5bc3cea615d939_0","lines":"  free (xd[1].dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":581,"col":8,"offset":11088},"end":{"line":581,"col":18,"offset":11098},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":581,"col":8,"offset":11088},"end":{"line":581,"col":13,"offset":11093},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0ebb205824cc83ae2c0d1140511a74feb8a04b3d77437ea21245744aa1fa24188693b896a97e7bad6572cc4c273213e8c6a552483c0e341d674d9425b0cfd37e_3","lines":"  rc = fgetc (fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":582,"col":3,"offset":11102},"end":{"line":582,"col":18,"offset":11117},"extra":{"metavars":{"$1":{"start":{"line":1,"col":6,"offset":5},"end":{"line":1,"col":7,"offset":6},"abstract_content":"c"},"$FUN":{"start":{"line":582,"col":3,"offset":11102},"end":{"line":582,"col":9,"offset":11108},"abstract_content":"ungetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8afa2285c38b40a877de7f854416459e931bfea7fe88a8cd0094ffd152a9ff5a303e3ced5e5d008372500ae18575b9e74a9e7c7de6b529c38b2b7b2a8d8de2ff_0","lines":"  ungetc (rc, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","start":{"line":630,"col":8,"offset":11935},"end":{"line":630,"col":29,"offset":11956},"extra":{"metavars":{"$FUN":{"start":{"line":630,"col":8,"offset":11935},"end":{"line":630,"col":13,"offset":11940},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"04589eff133b287a995b36631b5f03c9d4ebe93daaf306bf05d7bda49b17e09c23164a77b0a174664d81f7bb72da3ff1969c0315e0f333d0d36ecfadd5ae9f59_0","lines":"  fp = fopen (filename, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":213,"col":7,"offset":5896},"end":{"line":213,"col":36,"offset":5925},"extra":{"metavars":{"$FUN":{"start":{"line":213,"col":7,"offset":5896},"end":{"line":213,"col":12,"offset":5901},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"289f0ff5cb1caf50d7677722d62ee76ef50271ac4b5b64cbf975fa3e6b485c9878acdb6e006615acbdbcde9cf8c66836a70df8587ba9dafc138a04e679337494_0","lines":"  if (fstat (dbf->desc, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":227,"col":8,"offset":6173},"end":{"line":227,"col":46,"offset":6211},"extra":{"metavars":{"$FUN":{"start":{"line":227,"col":8,"offset":6173},"end":{"line":227,"col":12,"offset":6177},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c097410fe58b76430b488832f22f96278104b1738d287a3bfc72df45403d9231ebb20f7a92f05554db3b48af153b721b403892a063535dea21e6c711490d21ba_0","lines":"  fd = open (dbf->name, O_RDWR|O_TRUNC, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":247,"col":7,"offset":6745},"end":{"line":247,"col":29,"offset":6767},"extra":{"metavars":{"$FUN":{"start":{"line":247,"col":7,"offset":6745},"end":{"line":247,"col":12,"offset":6750},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"289f0ff5cb1caf50d7677722d62ee76ef50271ac4b5b64cbf975fa3e6b485c9878acdb6e006615acbdbcde9cf8c66836a70df8587ba9dafc138a04e679337494_1","lines":"  if (fstat (fd, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":249,"col":7,"offset":6781},"end":{"line":250,"col":26,"offset":6833},"extra":{"metavars":{"$EXPR1":{"start":{"line":249,"col":11,"offset":6785},"end":{"line":249,"col":16,"offset":6790},"abstract_content":"flags"},"$EXPR2":{"start":{"line":249,"col":19,"offset":6793},"end":{"line":249,"col":32,"offset":6806},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_0","lines":"      if (flags & GDBM_CLOERROR)\n\tSAVE_ERRNO (close (fd));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":256,"col":9,"offset":6983},"end":{"line":256,"col":34,"offset":7008},"extra":{"metavars":{"$FUN":{"start":{"line":256,"col":9,"offset":6983},"end":{"line":256,"col":15,"offset":6989},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9252fb53e668d372b8cb81f36e763ff4525f4051329ea27eb180025fc056ab3f7d22e84c53e401031dd29391b9eb1b7377a6793cb7e6fe61955729a5662bf9f_0","lines":"  dbf = calloc (1, sizeof (*dbf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":256,"col":9,"offset":6983},"end":{"line":256,"col":34,"offset":7008},"extra":{"metavars":{"$CNT":{"start":{"line":256,"col":17,"offset":6991},"end":{"line":256,"col":18,"offset":6992},"abstract_content":"1"},"$LEN":{"start":{"line":256,"col":20,"offset":6994},"end":{"line":256,"col":32,"offset":7006},"abstract_content":"sizeof*dbf"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e2d3441ec65970305803a24ab47e7fe4787e443e25008c20cd7dabb66f260158e2fe344ce4ee8682a7a5d625dc84cf729aece3c859d3ae263b5251a42daed9b4_0","lines":"  dbf = calloc (1, sizeof (*dbf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":259,"col":7,"offset":7041},"end":{"line":260,"col":26,"offset":7093},"extra":{"metavars":{"$EXPR1":{"start":{"line":259,"col":11,"offset":7045},"end":{"line":259,"col":16,"offset":7050},"abstract_content":"flags"},"$EXPR2":{"start":{"line":259,"col":19,"offset":7053},"end":{"line":259,"col":32,"offset":7066},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_1","lines":"      if (flags & GDBM_CLOERROR)\n\tSAVE_ERRNO (close (fd));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":286,"col":7,"offset":7733},"end":{"line":287,"col":13,"offset":7772},"extra":{"metavars":{"$EXPR1":{"start":{"line":286,"col":11,"offset":7737},"end":{"line":286,"col":16,"offset":7742},"abstract_content":"flags"},"$EXPR2":{"start":{"line":286,"col":19,"offset":7745},"end":{"line":286,"col":32,"offset":7758},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_2","lines":"      if (flags & GDBM_CLOERROR)\n\tclose (fd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":307,"col":3,"offset":8428},"end":{"line":311,"col":6,"offset":8559},"extra":{"metavars":{"$EXPR1":{"start":{"line":307,"col":7,"offset":8432},"end":{"line":307,"col":12,"offset":8437},"abstract_content":"flags"},"$EXPR2":{"start":{"line":307,"col":15,"offset":8440},"end":{"line":307,"col":24,"offset":8449},"abstract_content":"GDBM_SYNC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b92fd27c69b1630b2cea754d17701d65883f39ee26042eca16f054c35bbb8db0ba80546029ff4ede2119f6fea006cb28cdfbc06f81b437d8aa86631118cfb2a5_0","lines":"  if (flags & GDBM_SYNC)\n    {\n      /* If GDBM_SYNC has been requested, don't do fast_write. */\n      dbf->fast_write = FALSE;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":312,"col":3,"offset":8562},"end":{"line":315,"col":6,"offset":8631},"extra":{"metavars":{"$EXPR1":{"start":{"line":312,"col":7,"offset":8566},"end":{"line":312,"col":12,"offset":8571},"abstract_content":"flags"},"$EXPR2":{"start":{"line":312,"col":15,"offset":8574},"end":{"line":312,"col":26,"offset":8585},"abstract_content":"GDBM_NOLOCK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1ba278d713a873bbf5133f2f97b805b33a77b9987b56bf3a46943f2f0a53fb1e81fc8ec16553ad59f95f48111533f821978a8eefa0e7c893066cb2be7b2e55cf_0","lines":"  if (flags & GDBM_NOLOCK)\n    {\n      dbf->file_locking = FALSE;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":322,"col":7,"offset":8813},"end":{"line":323,"col":20,"offset":8859},"extra":{"metavars":{"$EXPR1":{"start":{"line":322,"col":11,"offset":8817},"end":{"line":322,"col":16,"offset":8822},"abstract_content":"flags"},"$EXPR2":{"start":{"line":322,"col":19,"offset":8825},"end":{"line":322,"col":32,"offset":8838},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_3","lines":"      if (flags & GDBM_CLOERROR)\n\tclose (dbf->desc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":338,"col":4,"offset":9204},"end":{"line":339,"col":24,"offset":9254},"extra":{"metavars":{"$EXPR1":{"start":{"line":338,"col":8,"offset":9208},"end":{"line":338,"col":13,"offset":9213},"abstract_content":"flags"},"$EXPR2":{"start":{"line":338,"col":16,"offset":9216},"end":{"line":338,"col":29,"offset":9229},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_4","lines":"\t  if (flags & GDBM_CLOERROR)\n\t    close (dbf->desc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":360,"col":16,"offset":9801},"end":{"line":360,"col":45,"offset":9830},"extra":{"metavars":{"$FUN":{"start":{"line":360,"col":16,"offset":9801},"end":{"line":360,"col":21,"offset":9806},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"289f0ff5cb1caf50d7677722d62ee76ef50271ac4b5b64cbf975fa3e6b485c9878acdb6e006615acbdbcde9cf8c66836a70df8587ba9dafc138a04e679337494_2","lines":"      else if (fstat (dbf->desc, &file_stat))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":367,"col":4,"offset":9950},"end":{"line":368,"col":24,"offset":10000},"extra":{"metavars":{"$EXPR1":{"start":{"line":367,"col":8,"offset":9954},"end":{"line":367,"col":13,"offset":9959},"abstract_content":"flags"},"$EXPR2":{"start":{"line":367,"col":16,"offset":9962},"end":{"line":367,"col":29,"offset":9975},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_5","lines":"\t  if (flags & GDBM_CLOERROR)\n\t    close (dbf->desc);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":393,"col":4,"offset":10664},"end":{"line":403,"col":28,"offset":10927},"extra":{"metavars":{"$EXPR1":{"start":{"line":393,"col":8,"offset":10668},"end":{"line":393,"col":13,"offset":10673},"abstract_content":"flags"},"$EXPR2":{"start":{"line":393,"col":16,"offset":10676},"end":{"line":393,"col":28,"offset":10688},"abstract_content":"GDBM_BSEXACT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aeaed5e7de9eac78615df5816101d7f3c9e0d8123db83f3af7319c6b2e0473e8af8325ad87775df996e5a329e92a75912117bf2181297de2c1ff3cf1c5aa331c_0","lines":"\t  if (flags & GDBM_BSEXACT)\n\t    {\n\t      if (!(flags & GDBM_CLOERROR))\n\t\tdbf->desc = -1;\n\t      gdbm_close (dbf);\n\t      GDBM_SET_ERRNO2 (NULL, GDBM_BLOCK_SIZE_ERROR, FALSE,\n\t\t\t       GDBM_DEBUG_OPEN);\n\t      return NULL;\n\t    }\n\t  else\n\t    block_size = dir_size;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":395,"col":8,"offset":10704},"end":{"line":396,"col":18,"offset":10751},"extra":{"metavars":{"$EXPR1":{"start":{"line":395,"col":14,"offset":10710},"end":{"line":395,"col":19,"offset":10715},"abstract_content":"flags"},"$EXPR2":{"start":{"line":395,"col":22,"offset":10718},"end":{"line":395,"col":35,"offset":10731},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_6","lines":"\t      if (!(flags & GDBM_CLOERROR))\n\t\tdbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":409,"col":21,"offset":11157},"end":{"line":409,"col":43,"offset":11179},"extra":{"metavars":{"$FUN":{"start":{"line":409,"col":21,"offset":11157},"end":{"line":409,"col":27,"offset":11163},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9252fb53e668d372b8cb81f36e763ff4525f4051329ea27eb180025fc056ab3f7d22e84c53e401031dd29391b9eb1b7377a6793cb7e6fe61955729a5662bf9f_1","lines":"      dbf->header = calloc (1, block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":409,"col":21,"offset":11157},"end":{"line":409,"col":43,"offset":11179},"extra":{"metavars":{"$CNT":{"start":{"line":409,"col":29,"offset":11165},"end":{"line":409,"col":30,"offset":11166},"abstract_content":"1"},"$LEN":{"start":{"line":409,"col":32,"offset":11168},"end":{"line":409,"col":42,"offset":11178},"abstract_content":"block_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"faa3772e3cd687888acb1a2130e67974d7d759f890dc97a00b74825981d4f6607e1aac750f902d49c26c731ab3491081e088a8f1d1237e4c375ff6cff807cfb4_0","lines":"      dbf->header = calloc (1, block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":412,"col":4,"offset":11218},"end":{"line":413,"col":21,"offset":11268},"extra":{"metavars":{"$EXPR1":{"start":{"line":412,"col":10,"offset":11224},"end":{"line":412,"col":15,"offset":11229},"abstract_content":"flags"},"$EXPR2":{"start":{"line":412,"col":18,"offset":11232},"end":{"line":412,"col":31,"offset":11245},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_7","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":426,"col":28,"offset":11681},"end":{"line":426,"col":58,"offset":11711},"extra":{"metavars":{"$FUN":{"start":{"line":426,"col":28,"offset":11681},"end":{"line":426,"col":34,"offset":11687},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea7293a0e76f5402fca3d658cd56433c732b1abfa09c46cc48b4c2b745047f2f680f336335f17d03caa54c89fd4084a7c8089c3a88e96e259b122319ba6c7a59_0","lines":"      dbf->dir = (off_t *) malloc (dbf->header->dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":426,"col":28,"offset":11681},"end":{"line":426,"col":58,"offset":11711},"extra":{"metavars":{"$LEN":{"start":{"line":426,"col":36,"offset":11689},"end":{"line":426,"col":57,"offset":11710},"abstract_content":"dbf->->header->->dir_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6201041b5685dc332beee3c0e0576f33befaa547095029ef61175b29d84b23a520ca7c36a9ef04ac463fd0961dc27ede8dc66b458549fa85a26bf1726ec777b_0","lines":"      dbf->dir = (off_t *) malloc (dbf->header->dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":429,"col":4,"offset":11747},"end":{"line":430,"col":21,"offset":11797},"extra":{"metavars":{"$EXPR1":{"start":{"line":429,"col":10,"offset":11753},"end":{"line":429,"col":15,"offset":11758},"abstract_content":"flags"},"$EXPR2":{"start":{"line":429,"col":18,"offset":11761},"end":{"line":429,"col":31,"offset":11774},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_8","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":440,"col":21,"offset":12171},"end":{"line":440,"col":57,"offset":12207},"extra":{"metavars":{"$FUN":{"start":{"line":440,"col":21,"offset":12171},"end":{"line":440,"col":27,"offset":12177},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9252fb53e668d372b8cb81f36e763ff4525f4051329ea27eb180025fc056ab3f7d22e84c53e401031dd29391b9eb1b7377a6793cb7e6fe61955729a5662bf9f_2","lines":"      dbf->bucket = calloc (1, dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":440,"col":21,"offset":12171},"end":{"line":440,"col":57,"offset":12207},"extra":{"metavars":{"$CNT":{"start":{"line":440,"col":29,"offset":12179},"end":{"line":440,"col":30,"offset":12180},"abstract_content":"1"},"$LEN":{"start":{"line":440,"col":32,"offset":12182},"end":{"line":440,"col":56,"offset":12206},"abstract_content":"dbf->->header->->bucket_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ab084d0b279423e3de31131d95c1db2d46dcd699384dabd881e2b78a02ba2dca1322d7bbe90031abeb1ff915f1b4317c7b475524f24e3a01a9d9a14a81f39f3f_0","lines":"      dbf->bucket = calloc (1, dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":443,"col":4,"offset":12246},"end":{"line":444,"col":21,"offset":12296},"extra":{"metavars":{"$EXPR1":{"start":{"line":443,"col":10,"offset":12252},"end":{"line":443,"col":15,"offset":12257},"abstract_content":"flags"},"$EXPR2":{"start":{"line":443,"col":18,"offset":12260},"end":{"line":443,"col":31,"offset":12273},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_9","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":473,"col":4,"offset":13421},"end":{"line":474,"col":21,"offset":13471},"extra":{"metavars":{"$EXPR1":{"start":{"line":473,"col":10,"offset":13427},"end":{"line":473,"col":15,"offset":13432},"abstract_content":"flags"},"$EXPR2":{"start":{"line":473,"col":18,"offset":13435},"end":{"line":473,"col":31,"offset":13448},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_10","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":485,"col":4,"offset":13789},"end":{"line":486,"col":21,"offset":13839},"extra":{"metavars":{"$EXPR1":{"start":{"line":485,"col":10,"offset":13795},"end":{"line":485,"col":15,"offset":13800},"abstract_content":"flags"},"$EXPR2":{"start":{"line":485,"col":18,"offset":13803},"end":{"line":485,"col":31,"offset":13816},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_11","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":497,"col":4,"offset":14147},"end":{"line":498,"col":21,"offset":14197},"extra":{"metavars":{"$EXPR1":{"start":{"line":497,"col":10,"offset":14153},"end":{"line":497,"col":15,"offset":14158},"abstract_content":"flags"},"$EXPR2":{"start":{"line":497,"col":18,"offset":14161},"end":{"line":497,"col":31,"offset":14174},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_12","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":508,"col":4,"offset":14458},"end":{"line":509,"col":21,"offset":14508},"extra":{"metavars":{"$EXPR1":{"start":{"line":508,"col":10,"offset":14464},"end":{"line":508,"col":15,"offset":14469},"abstract_content":"flags"},"$EXPR2":{"start":{"line":508,"col":18,"offset":14472},"end":{"line":508,"col":31,"offset":14485},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_13","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":528,"col":11,"offset":14972},"end":{"line":528,"col":76,"offset":15037},"extra":{"metavars":{"$FUN":{"start":{"line":528,"col":11,"offset":14972},"end":{"line":528,"col":26,"offset":14987},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"233c1e24f896b583fb02ddae2949a0117a67ee0263b7dea243ff6184d65b6e02b3ce31ecd00834bdcd883f4f1923e3e2184e545ef2e7077dc041949d42b8b9a2_0","lines":"      if (_gdbm_full_read (dbf, &partial_header, sizeof (gdbm_file_header)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":533,"col":4,"offset":15184},"end":{"line":534,"col":21,"offset":15234},"extra":{"metavars":{"$EXPR1":{"start":{"line":533,"col":10,"offset":15190},"end":{"line":533,"col":15,"offset":15195},"abstract_content":"flags"},"$EXPR2":{"start":{"line":533,"col":18,"offset":15198},"end":{"line":533,"col":31,"offset":15211},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_14","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":547,"col":4,"offset":15491},"end":{"line":548,"col":21,"offset":15541},"extra":{"metavars":{"$EXPR1":{"start":{"line":547,"col":10,"offset":15497},"end":{"line":547,"col":15,"offset":15502},"abstract_content":"flags"},"$EXPR2":{"start":{"line":547,"col":18,"offset":15505},"end":{"line":547,"col":31,"offset":15518},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_15","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":555,"col":21,"offset":15723},"end":{"line":555,"col":55,"offset":15757},"extra":{"metavars":{"$FUN":{"start":{"line":555,"col":21,"offset":15723},"end":{"line":555,"col":27,"offset":15729},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea7293a0e76f5402fca3d658cd56433c732b1abfa09c46cc48b4c2b745047f2f680f336335f17d03caa54c89fd4084a7c8089c3a88e96e259b122319ba6c7a59_1","lines":"      dbf->header = malloc (partial_header.block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":555,"col":21,"offset":15723},"end":{"line":555,"col":55,"offset":15757},"extra":{"metavars":{"$LEN":{"start":{"line":555,"col":29,"offset":15731},"end":{"line":555,"col":54,"offset":15756},"abstract_content":"partial_header.block_size"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c3c5b809da00006dfa7bac74d85d10160777fce70a7eef5076c7d87d63182fc8ef6d5450ef547e542047c4632691bea013b7d7efe608e4d70584ef7ece569b77_0","lines":"      dbf->header = malloc (partial_header.block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":558,"col":4,"offset":15796},"end":{"line":559,"col":21,"offset":15846},"extra":{"metavars":{"$EXPR1":{"start":{"line":558,"col":10,"offset":15802},"end":{"line":558,"col":15,"offset":15807},"abstract_content":"flags"},"$EXPR2":{"start":{"line":558,"col":18,"offset":15810},"end":{"line":558,"col":31,"offset":15823},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_16","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":565,"col":7,"offset":15983},"end":{"line":565,"col":71,"offset":16047},"extra":{"metavars":{"$FUN":{"start":{"line":565,"col":7,"offset":15983},"end":{"line":565,"col":13,"offset":15989},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f47bf5f2ca2e6d39aca27b8e3e673a3e86437a7499771e8df25a160333c772eeb8bf17c40fce21d81b32467d6baf095ec4caa2308953fe624331c6e048e618cb_0","lines":"      memcpy (dbf->header, &partial_header, sizeof (gdbm_file_header));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":566,"col":11,"offset":16059},"end":{"line":567,"col":59,"offset":16172},"extra":{"metavars":{"$FUN":{"start":{"line":566,"col":11,"offset":16059},"end":{"line":566,"col":26,"offset":16074},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"233c1e24f896b583fb02ddae2949a0117a67ee0263b7dea243ff6184d65b6e02b3ce31ecd00834bdcd883f4f1923e3e2184e545ef2e7077dc041949d42b8b9a2_1","lines":"      if (_gdbm_full_read (dbf, &dbf->header->avail.av_table[1],\n\t\t\t   dbf->header->block_size - sizeof (gdbm_file_header)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":572,"col":4,"offset":16313},"end":{"line":573,"col":21,"offset":16363},"extra":{"metavars":{"$EXPR1":{"start":{"line":572,"col":10,"offset":16319},"end":{"line":572,"col":15,"offset":16324},"abstract_content":"flags"},"$EXPR2":{"start":{"line":572,"col":18,"offset":16327},"end":{"line":572,"col":31,"offset":16340},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_17","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":580,"col":4,"offset":16488},"end":{"line":581,"col":21,"offset":16538},"extra":{"metavars":{"$EXPR1":{"start":{"line":580,"col":10,"offset":16494},"end":{"line":580,"col":15,"offset":16499},"abstract_content":"flags"},"$EXPR2":{"start":{"line":580,"col":18,"offset":16502},"end":{"line":580,"col":31,"offset":16515},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_18","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":587,"col":18,"offset":16672},"end":{"line":587,"col":48,"offset":16702},"extra":{"metavars":{"$FUN":{"start":{"line":587,"col":18,"offset":16672},"end":{"line":587,"col":24,"offset":16678},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea7293a0e76f5402fca3d658cd56433c732b1abfa09c46cc48b4c2b745047f2f680f336335f17d03caa54c89fd4084a7c8089c3a88e96e259b122319ba6c7a59_2","lines":"      dbf->dir = malloc (dbf->header->dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":590,"col":4,"offset":16738},"end":{"line":591,"col":21,"offset":16788},"extra":{"metavars":{"$EXPR1":{"start":{"line":590,"col":10,"offset":16744},"end":{"line":590,"col":15,"offset":16749},"abstract_content":"flags"},"$EXPR2":{"start":{"line":590,"col":18,"offset":16752},"end":{"line":590,"col":31,"offset":16765},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_19","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":601,"col":4,"offset":17056},"end":{"line":602,"col":21,"offset":17106},"extra":{"metavars":{"$EXPR1":{"start":{"line":601,"col":10,"offset":17062},"end":{"line":601,"col":15,"offset":17067},"abstract_content":"flags"},"$EXPR2":{"start":{"line":601,"col":18,"offset":17070},"end":{"line":601,"col":31,"offset":17083},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_20","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":608,"col":11,"offset":17244},"end":{"line":608,"col":65,"offset":17298},"extra":{"metavars":{"$FUN":{"start":{"line":608,"col":11,"offset":17244},"end":{"line":608,"col":26,"offset":17259},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"233c1e24f896b583fb02ddae2949a0117a67ee0263b7dea243ff6184d65b6e02b3ce31ecd00834bdcd883f4f1923e3e2184e545ef2e7077dc041949d42b8b9a2_2","lines":"      if (_gdbm_full_read (dbf, dbf->dir, dbf->header->dir_size))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":613,"col":4,"offset":17434},"end":{"line":614,"col":21,"offset":17484},"extra":{"metavars":{"$EXPR1":{"start":{"line":613,"col":10,"offset":17440},"end":{"line":613,"col":15,"offset":17445},"abstract_content":"flags"},"$EXPR2":{"start":{"line":613,"col":18,"offset":17448},"end":{"line":613,"col":31,"offset":17461},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_21","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":622,"col":3,"offset":17562},"end":{"line":638,"col":6,"offset":17964},"extra":{"metavars":{"$EXPR1":{"start":{"line":622,"col":9,"offset":17568},"end":{"line":622,"col":14,"offset":17573},"abstract_content":"flags"},"$EXPR2":{"start":{"line":622,"col":17,"offset":17576},"end":{"line":622,"col":28,"offset":17587},"abstract_content":"GDBM_NOMMAP"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4d67abc17bbdad759f53899cd42123689e83fba272989d631eefedc09e41dd05d9bb9b958444350cce3d076b973306616668247dd360cd9a49f8356706cbab9f_0","lines":"  if (!(flags & GDBM_NOMMAP))\n    {\n      if (_gdbm_mapped_init (dbf) == 0)\n\tdbf->memory_mapping = TRUE;\n      else\n\t{\n\t  /* gdbm_errno should already be set. */\n\t  GDBM_DEBUG (GDBM_DEBUG_ERR|GDBM_DEBUG_OPEN,\n\t\t      \"%s: _gdbm_mapped_init failed: %s\",\n\t\t      dbf->name, strerror (errno));\n\n\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;\n\t  SAVE_ERRNO (gdbm_close (dbf));\n\t  return NULL;\n\t}\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":633,"col":4,"offset":17855},"end":{"line":634,"col":21,"offset":17905},"extra":{"metavars":{"$EXPR1":{"start":{"line":633,"col":10,"offset":17861},"end":{"line":633,"col":15,"offset":17866},"abstract_content":"flags"},"$EXPR2":{"start":{"line":633,"col":18,"offset":17869},"end":{"line":633,"col":31,"offset":17882},"abstract_content":"GDBM_CLOERROR"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68ddcded65b76c5a98bd722bc13f9e5b1a4254ad66ac1623324fc37a7c201b6798b1c883805d7764fb0952165a7a13b7918d9155e83e6d6721b3e2ceb51c922c_22","lines":"\t  if (!(flags & GDBM_CLOERROR))\n\t    dbf->desc = -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":707,"col":3,"offset":20331},"end":{"line":708,"col":24,"offset":20380},"extra":{"metavars":{"$EXPR1":{"start":{"line":707,"col":7,"offset":20335},"end":{"line":707,"col":12,"offset":20340},"abstract_content":"flags"},"$EXPR2":{"start":{"line":707,"col":15,"offset":20343},"end":{"line":707,"col":27,"offset":20355},"abstract_content":"GDBM_CLOEXEC"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"945b245a5ab85d249951dc6ede28cbed77939f83a924425b73c51bef8f556565708161561a787d1e2dd2fdb2ea75d92fd562372b39e3a89c4b15dc80ef39395c_0","lines":"  if (flags & GDBM_CLOEXEC)\n    fbits |= O_CLOEXEC;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":710,"col":8,"offset":20391},"end":{"line":710,"col":32,"offset":20415},"extra":{"metavars":{"$FUN":{"start":{"line":710,"col":8,"offset":20391},"end":{"line":710,"col":12,"offset":20395},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c097410fe58b76430b488832f22f96278104b1738d287a3bfc72df45403d9231ebb20f7a92f05554db3b48af153b721b403892a063535dea21e6c711490d21ba_1","lines":"  fd = open (file, fbits, mode);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":716,"col":10,"offset":20547},"end":{"line":717,"col":21,"offset":20626},"extra":{"metavars":{"$FUN":{"start":{"line":716,"col":10,"offset":20547},"end":{"line":716,"col":22,"offset":20559},"abstract_content":"gdbm_fd_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e35b0a6d412457ea68475f7587bd2d717885b003b446ad0309f8a3dc9dbb507d06dbfac1b19c143fd3d4da7a2a0182287169b362b2d3cc6002b9b52dd8a36646_0","lines":"  return gdbm_fd_open (fd, file, block_size, flags | GDBM_CLOERROR,\n\t\t       fatal_func);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":728,"col":27,"offset":20797},"end":{"line":728,"col":60,"offset":20830},"extra":{"metavars":{"$FUN":{"start":{"line":728,"col":27,"offset":20797},"end":{"line":728,"col":33,"offset":20803},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a9252fb53e668d372b8cb81f36e763ff4525f4051329ea27eb180025fc056ab3f7d22e84c53e401031dd29391b9eb1b7377a6793cb7e6fe61955729a5662bf9f_3","lines":"      dbf->bucket_cache = calloc (size, sizeof(cache_elem));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","start":{"line":739,"col":6,"offset":21100},"end":{"line":739,"col":39,"offset":21133},"extra":{"metavars":{"$FUN":{"start":{"line":739,"col":6,"offset":21100},"end":{"line":739,"col":12,"offset":21106},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea7293a0e76f5402fca3d658cd56433c732b1abfa09c46cc48b4c2b745047f2f680f336335f17d03caa54c89fd4084a7c8089c3a88e96e259b122319ba6c7a59_3","lines":"\t    malloc (dbf->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":81,"col":5,"offset":2612},"end":{"line":81,"col":43,"offset":2650},"extra":{"metavars":{"$RET":{"start":{"line":81,"col":5,"offset":2612},"end":{"line":81,"col":21,"offset":2628},"abstract_content":"return_val->->dptr"},"$CAST":{"start":{"line":81,"col":25,"offset":2632},"end":{"line":81,"col":31,"offset":2638},"abstract_content":"char*"},"$FUN":{"start":{"line":81,"col":33,"offset":2640},"end":{"line":81,"col":39,"offset":2646},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efd70f32744dc965c489a8aaa76b8be88d1497a09e9f6890572d18c2c3f4c41ab3da09bcb4c7e27dc1efa9540d807eee6a5125147c84ac89f5557a12535cda15_0","lines":"    return_val->dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":81,"col":33,"offset":2640},"end":{"line":81,"col":43,"offset":2650},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":33,"offset":2640},"end":{"line":81,"col":39,"offset":2646},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21b94c8b148b740e5bd34cb721adbb404b157255ebfc157d82360599acc9edc650139cd3c52385bb864d350581318a6b8c0b5f8667a25c45a38f75e04a1fd24d_0","lines":"    return_val->dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":81,"col":33,"offset":2640},"end":{"line":81,"col":43,"offset":2650},"extra":{"metavars":{"$LEN":{"start":{"line":81,"col":41,"offset":2648},"end":{"line":81,"col":42,"offset":2649},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"07e451bc2df08c45ddfbd6e69bdc08a263f98ab8c446fb71c1ca45491e5431faad1a7fe14a1057523a2d100a6f56f2d363be976152455024e570072b24616248_0","lines":"    return_val->dptr = (char *) malloc (1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":83,"col":5,"offset":2663},"end":{"line":83,"col":59,"offset":2717},"extra":{"metavars":{"$RET":{"start":{"line":83,"col":5,"offset":2663},"end":{"line":83,"col":21,"offset":2679},"abstract_content":"return_val->->dptr"},"$CAST":{"start":{"line":83,"col":25,"offset":2683},"end":{"line":83,"col":31,"offset":2689},"abstract_content":"char*"},"$FUN":{"start":{"line":83,"col":33,"offset":2691},"end":{"line":83,"col":39,"offset":2697},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"efd70f32744dc965c489a8aaa76b8be88d1497a09e9f6890572d18c2c3f4c41ab3da09bcb4c7e27dc1efa9540d807eee6a5125147c84ac89f5557a12535cda15_1","lines":"    return_val->dptr = (char *) malloc (return_val->dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":83,"col":33,"offset":2691},"end":{"line":83,"col":59,"offset":2717},"extra":{"metavars":{"$FUN":{"start":{"line":83,"col":33,"offset":2691},"end":{"line":83,"col":39,"offset":2697},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21b94c8b148b740e5bd34cb721adbb404b157255ebfc157d82360599acc9edc650139cd3c52385bb864d350581318a6b8c0b5f8667a25c45a38f75e04a1fd24d_1","lines":"    return_val->dptr = (char *) malloc (return_val->dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","start":{"line":90,"col":5,"offset":2877},"end":{"line":90,"col":60,"offset":2932},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":5,"offset":2877},"end":{"line":90,"col":11,"offset":2883},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1b151182e35d37a2e9d4856c7013075143d8e3502cc09c8c63fc9e9dc1a8dee80d97740fbb17b3f1831c90a6e6aad325234c69a39bfe3b57b6ba547022876819_0","lines":"    memcpy (return_val->dptr, find_data, return_val->dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c","start":{"line":120,"col":18,"offset":4047},"end":{"line":120,"col":45,"offset":4074},"extra":{"metavars":{"$FUN":{"start":{"line":120,"col":18,"offset":4047},"end":{"line":120,"col":29,"offset":4058},"abstract_content":"_gdbm_alloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f6e516c397cce7372cce011693dc53b1423166b6b1134129102e463986bac749a8a5d2ed3ad985a9d7968baea73bb3c147434b97dacba9a482fb5f57a36c3222_0","lines":"      file_adr = _gdbm_alloc (dbf, new_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c","start":{"line":152,"col":7,"offset":4999},"end":{"line":153,"col":47,"offset":5105},"extra":{"metavars":{"$FUN":{"start":{"line":152,"col":7,"offset":4999},"end":{"line":152,"col":13,"offset":5005},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bae79f4f3bd58a88d61e505b45018a4244417ec2e2d86215929ee40ca421bb5d2ce043f6ff8146bc85c3053505988de7df7ed5bb19cb320e8e17cbdb3456f387_0","lines":"      memcpy (dbf->bucket->h_table[elem_loc].key_start, key.dptr,\n\t     (SMALL < key.dsize ? SMALL : key.dsize));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":53,"col":7,"offset":1489},"end":{"line":53,"col":24,"offset":1506},"extra":{"metavars":{"$PTR":{"start":{"line":53,"col":13,"offset":1495},"end":{"line":53,"col":22,"offset":1504},"abstract_content":"file_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c7226a8ad35d6e5619d359d9f6bf1312a5be75bb6f7964f60ba1745f615aebc3868d032afd1062c6e331e41a23bd27ec3d7b6a53267e0fea6515a44d97796ba3_0","lines":"      free (file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":94,"col":4,"offset":2286},"end":{"line":94,"col":25,"offset":2307},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"d4b488189f4c4ca9c2fdde988d142f7096b11804b0c03894c4005e056c280308962f6a34f490490d05eb2afe9b5d493f87fac724bd0183a83f1ccfe9909493ed_0","lines":"\t  access (dbname, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":94,"col":4,"offset":2286},"end":{"line":94,"col":25,"offset":2307},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":4,"offset":2286},"end":{"line":94,"col":10,"offset":2292},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"573949bd0e690ab8fa1fee3168750451fca829fa00202134baed2e57009f8f587c8368762157555a40abdc099ff8b482ee1fee9c1d38cedeb3d8e9a4915af039_0","lines":"\t  access (dbname, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":104,"col":8,"offset":2497},"end":{"line":104,"col":73,"offset":2562},"extra":{"metavars":{"$FUN":{"start":{"line":104,"col":8,"offset":2497},"end":{"line":104,"col":17,"offset":2506},"abstract_content":"gdbm_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"74354cc41a4c6ae79020193869c09064c4acdffe59dbb742c870f2418d7326ddc727894d7f4a2721b07e4f631781e5124710d53bddd04dab1a889a97272a8c65_0","lines":"  db = gdbm_open (dbname, block_size, open_mode | flags, filemode, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":190,"col":3,"offset":4410},"end":{"line":190,"col":26,"offset":4433},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_0","lines":"  vfprintf (fp, mesg, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":193,"col":3,"offset":4487},"end":{"line":195,"col":40,"offset":4585},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_1","lines":"  fprintf (fp,\n\t   _(\"bits = %d\\ncount= %d\\nHash Table:\\n\"),\n\t   bucket->bucket_bits, bucket->count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":196,"col":3,"offset":4589},"end":{"line":197,"col":87,"offset":4688},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_2","lines":"  fprintf (fp,\n\t   _(\"    #    hash value     key size    data size     data adr home  key start\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":200,"col":7,"offset":4770},"end":{"line":206,"col":41,"offset":5098},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":36,"offset":35},"abstract_content":"\" %4d  %12x  %11d  %11d  %11lu %4d\""},"$ARG1":{"start":{"line":200,"col":16,"offset":4779},"end":{"line":200,"col":18,"offset":4781},"abstract_content":"fp"},"$FMT":{"start":{"line":200,"col":20,"offset":4783},"end":{"line":200,"col":55,"offset":4818},"abstract_content":"\" %4d  %12x  %11d  %11d  %11lu %4d\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9f5ef887aa54ca0f69bc29fc8a5cae98c763aac1bff96fc61330895fa17abbba59ebc4d3d6edb083a3c783ea1b7e6452e24f7fd0d48e86e4d64c76a4f09f49f8_0","lines":"      fprintf (fp, \" %4d  %12x  %11d  %11d  %11lu %4d\", index,\n\t       bucket->h_table[index].hash_value,\n\t       bucket->h_table[index].key_size,\n\t       bucket->h_table[index].data_size,\n\t       (unsigned long) bucket->h_table[index].data_pointer,\n\t       bucket->h_table[index].hash_value %\n\t       gdbm_file->header->bucket_elems);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":215,"col":3,"offset":5257},"end":{"line":215,"col":61,"offset":5315},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_3","lines":"  fprintf (fp, _(\"\\nAvail count = %1d\\n\"), bucket->av_count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":216,"col":3,"offset":5319},"end":{"line":216,"col":46,"offset":5362},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_4","lines":"  fprintf (fp, _(\"Address           size\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":231,"col":3,"offset":5722},"end":{"line":231,"col":39,"offset":5758},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":231,"col":3,"offset":5722},"end":{"line":231,"col":8,"offset":5727},"abstract_content":"lines"},"$SIGNED":{"start":{"line":231,"col":11,"offset":5730},"end":{"line":231,"col":12,"offset":5731},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1842fe8fd247f4c3acf308ddb2c7560e2a8d38cfbca5fcaac55d9df28b2fd2a332709afd597b33fd3df70e33f65a09afb3b6a6de1c0844200dd147d37b82ea23_0","lines":"  lines = 4 + dbf->header->avail.count;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":238,"col":12,"offset":6016},"end":{"line":238,"col":26,"offset":6030},"extra":{"metavars":{"$FUN":{"start":{"line":238,"col":12,"offset":6016},"end":{"line":238,"col":19,"offset":6023},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0273d24214632fe38d0a9c2eb9a2d78be67592661bd9299ea707e241b8f762d17d94fbc35440661adae2c895f0dcc5162f2d570b97fc5df54c8649abdefc0304_0","lines":"  av_stk = emalloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":249,"col":11,"offset":6214},"end":{"line":249,"col":46,"offset":6249},"extra":{"metavars":{"$FUN":{"start":{"line":249,"col":11,"offset":6214},"end":{"line":249,"col":26,"offset":6229},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21f0a3ef0c8eff919f885d16b4a2235f3d9d16536eedd96654c6122ade0145eeaa158cacbdeef7c62f781d7656f490f76dbe6a624a7af238c89cae2c36595cdd_0","lines":"      if (_gdbm_full_read (dbf, av_stk, size))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":263,"col":3,"offset":6472},"end":{"line":263,"col":17,"offset":6486},"extra":{"metavars":{"$PTR":{"start":{"line":263,"col":9,"offset":6478},"end":{"line":263,"col":15,"offset":6484},"abstract_content":"av_stk"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1bc9985b27d7261fdf041c70ab5ccc6f660bb3990bc28f41822c714a19f013f675356ea4325c0e6f5792f5b8f55d4445ae3275747cd6ae609b426b3eba25da8a_0","lines":"  free (av_stk);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":288,"col":3,"offset":6923},"end":{"line":289,"col":55,"offset":7037},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_5","lines":"  fprintf (fp, _(\"\\nheader block\\nsize  = %d\\ncount = %d\\n\"),\n\t   dbf->header->avail.size, dbf->header->avail.count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":296,"col":12,"offset":7325},"end":{"line":296,"col":26,"offset":7339},"extra":{"metavars":{"$FUN":{"start":{"line":296,"col":12,"offset":7325},"end":{"line":296,"col":19,"offset":7332},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0273d24214632fe38d0a9c2eb9a2d78be67592661bd9299ea707e241b8f762d17d94fbc35440661adae2c895f0dcc5162f2d570b97fc5df54c8649abdefc0304_1","lines":"  av_stk = emalloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":307,"col":11,"offset":7520},"end":{"line":307,"col":46,"offset":7555},"extra":{"metavars":{"$FUN":{"start":{"line":307,"col":11,"offset":7520},"end":{"line":307,"col":26,"offset":7535},"abstract_content":"_gdbm_full_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"21f0a3ef0c8eff919f885d16b4a2235f3d9d16536eedd96654c6122ade0145eeaa158cacbdeef7c62f781d7656f490f76dbe6a624a7af238c89cae2c36595cdd_1","lines":"      if (_gdbm_full_read (dbf, av_stk, size))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":314,"col":7,"offset":7664},"end":{"line":315,"col":37,"offset":7764},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_6","lines":"      fprintf (fp, _(\"\\nblock = %d\\nsize  = %d\\ncount = %d\\n\"), temp,\n\t       av_stk->size, av_stk->count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":322,"col":3,"offset":7967},"end":{"line":322,"col":17,"offset":7981},"extra":{"metavars":{"$PTR":{"start":{"line":322,"col":9,"offset":7973},"end":{"line":322,"col":15,"offset":7979},"abstract_content":"av_stk"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1bc9985b27d7261fdf041c70ab5ccc6f660bb3990bc28f41822c714a19f013f675356ea4325c0e6f5792f5b8f55d4445ae3275747cd6ae609b426b3eba25da8a_1","lines":"  free (av_stk);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":333,"col":7,"offset":8142},"end":{"line":335,"col":19,"offset":8254},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_7","lines":"      fprintf (fp,\n\t_(\"Bucket Cache (size %zu):\\n  Index:         Address  Changed  Data_Hash \\n\"),\n\t dbf->cache_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":338,"col":4,"offset":8318},"end":{"line":338,"col":49,"offset":8363},"extra":{"metavars":{"$NARROW":{"start":{"line":338,"col":4,"offset":8318},"end":{"line":338,"col":11,"offset":8325},"abstract_content":"changed"},"$LARGE":{"start":{"line":338,"col":32,"offset":8346},"end":{"line":338,"col":37,"offset":8351},"abstract_content":"index"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"205652c8980240102ebffa214245a1c79f1c238f88cfcb8b41ec5a17cb36b876dc17c898c3f2c77f4a5d1088da8cdef7fb7d3bbdb71cf21e18f05d87bd824c4f_0","lines":"\t  changed = dbf->bucket_cache[index].ca_changed;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":339,"col":4,"offset":8368},"end":{"line":343,"col":48,"offset":8562},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":26,"offset":25},"abstract_content":"\"  %5d:  %15lu %7s  %x\\n\""},"$ARG1":{"start":{"line":339,"col":13,"offset":8377},"end":{"line":339,"col":15,"offset":8379},"abstract_content":"fp"},"$FMT":{"start":{"line":339,"col":17,"offset":8381},"end":{"line":339,"col":42,"offset":8406},"abstract_content":"\"  %5d:  %15lu %7s  %x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5665f663b94bcbb95d9462d3f34d6c5e13cfc7be40626b964e252d0f2bd5bc638283e2941b8d64e146afc9eee3b4344bbe16fdd91c454c50ff7dc98a0e31697a_0","lines":"\t  fprintf (fp, \"  %5d:  %15lu %7s  %x\\n\",\n\t\t   index,\n\t\t   (unsigned long) dbf->bucket_cache[index].ca_adr,\n\t\t   (changed ? _(\"True\") : _(\"False\")),\n\t\t   dbf->bucket_cache[index].ca_data.hash_val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":347,"col":5,"offset":8584},"end":{"line":347,"col":64,"offset":8643},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_8","lines":"    fprintf (fp, _(\"Bucket cache has not been initialized.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":374,"col":24,"offset":9016},"end":{"line":374,"col":40,"offset":9032},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":374,"col":24,"offset":9016},"end":{"line":374,"col":30,"offset":9022},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"996a4c69bc0920d29b52646a0d125379e434bdbc1de5958aad6cbb81ed28b317b6fd0f30bf5e54307743a549dfa26323e57cd95a345397113a6463da5971c3c1_0","lines":"\t  const char *lines = getenv (\"LINES\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":381,"col":23,"offset":9152},"end":{"line":381,"col":39,"offset":9168},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":381,"col":23,"offset":9152},"end":{"line":381,"col":29,"offset":9158},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"996a4c69bc0920d29b52646a0d125379e434bdbc1de5958aad6cbb81ed28b317b6fd0f30bf5e54307743a549dfa26323e57cd95a345397113a6463da5971c3c1_1","lines":"  const char *lines = getenv (\"LINES\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":397,"col":5,"offset":9440},"end":{"line":397,"col":17,"offset":9452},"extra":{"metavars":{"$PTR":{"start":{"line":397,"col":11,"offset":9446},"end":{"line":397,"col":15,"offset":9450},"abstract_content":"name","propagated_value":{"svalue_start":{"line":392,"col":16,"offset":9329},"svalue_end":{"line":392,"col":52,"offset":9365},"svalue_abstract_content":"tildexpand(PARAM_STRING(param 0))"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a1a2ea2de00473db507715e679911267a9ce98ced0c3a47359efd56142e0ac49bf57126174fcee1580cb24d81dbe55470d2f0c478f190f9b1f9aaa223c4d02fd_0","lines":"    free (name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":446,"col":2,"offset":10257},"end":{"line":450,"col":6,"offset":10396},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_9","lines":"\tfprintf (param->fp, \n\t\t ngettext (\"There is %s item in the database.\\n\",\n\t\t\t   \"There are %s items in the database.\\n\",\n\t\t\t   count),\n\t\t p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":476,"col":7,"offset":11014},"end":{"line":476,"col":31,"offset":11038},"extra":{"metavars":{"$PTR":{"start":{"line":476,"col":13,"offset":11020},"end":{"line":476,"col":29,"offset":11036},"abstract_content":"return_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ab5e98bd8f0ce08dc3edda6b32be0b5e0a38d689db31a28e8ff77e9cc755512773615062091fb4080089c560853bf0134f4307619e76c141e28219c7b4088e2_0","lines":"      free (return_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":500,"col":5,"offset":11599},"end":{"line":500,"col":26,"offset":11620},"extra":{"metavars":{"$PTR":{"start":{"line":500,"col":11,"offset":11605},"end":{"line":500,"col":24,"offset":11618},"abstract_content":"key_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb264cdafe5ac5788103167859f94c651c1a6e1edda6ea08eff634d9a924ac1e899767e0b8e57e0035a0a3f2e7df0b6ee024ae7cdf37dba462c5c06501215230_0","lines":"    free (key_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":511,"col":7,"offset":11943},"end":{"line":511,"col":31,"offset":11967},"extra":{"metavars":{"$PTR":{"start":{"line":511,"col":13,"offset":11949},"end":{"line":511,"col":29,"offset":11965},"abstract_content":"return_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ab5e98bd8f0ce08dc3edda6b32be0b5e0a38d689db31a28e8ff77e9cc755512773615062091fb4080089c560853bf0134f4307619e76c141e28219c7b4088e2_1","lines":"      free (return_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":514,"col":5,"offset":12024},"end":{"line":514,"col":52,"offset":12071},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_10","lines":"    fprintf (param->fp, _(\"No such item found.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":526,"col":2,"offset":12295},"end":{"line":526,"col":23,"offset":12316},"extra":{"metavars":{"$PTR":{"start":{"line":526,"col":8,"offset":12301},"end":{"line":526,"col":21,"offset":12314},"abstract_content":"key_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb264cdafe5ac5788103167859f94c651c1a6e1edda6ea08eff634d9a924ac1e899767e0b8e57e0035a0a3f2e7df0b6ee024ae7cdf37dba462c5c06501215230_1","lines":"\tfree (key_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":527,"col":23,"offset":12339},"end":{"line":527,"col":61,"offset":12377},"extra":{"metavars":{"$FUN":{"start":{"line":527,"col":23,"offset":12339},"end":{"line":527,"col":30,"offset":12346},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0273d24214632fe38d0a9c2eb9a2d78be67592661bd9299ea707e241b8f762d17d94fbc35440661adae2c895f0dcc5162f2d570b97fc5df54c8649abdefc0304_2","lines":"      key_data.dptr = emalloc (PARAM_DATUM (param, 0).dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":529,"col":7,"offset":12438},"end":{"line":529,"col":74,"offset":12505},"extra":{"metavars":{"$FUN":{"start":{"line":529,"col":7,"offset":12438},"end":{"line":529,"col":13,"offset":12444},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf31595d9b88ae06b677605e1cd37994f7370ca38ae21722854813526c4792cb5974172b7125bf4630da76ea04ca214b6f7904090ec3938ea02f15f2321389f_0","lines":"      memcpy (key_data.dptr, PARAM_DATUM (param, 0).dptr, key_data.dsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":542,"col":7,"offset":12880},"end":{"line":542,"col":31,"offset":12904},"extra":{"metavars":{"$PTR":{"start":{"line":542,"col":13,"offset":12886},"end":{"line":542,"col":29,"offset":12902},"abstract_content":"return_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ab5e98bd8f0ce08dc3edda6b32be0b5e0a38d689db31a28e8ff77e9cc755512773615062091fb4080089c560853bf0134f4307619e76c141e28219c7b4088e2_2","lines":"      free (return_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":547,"col":7,"offset":13016},"end":{"line":547,"col":28,"offset":13037},"extra":{"metavars":{"$PTR":{"start":{"line":547,"col":13,"offset":13022},"end":{"line":547,"col":26,"offset":13035},"abstract_content":"key_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb264cdafe5ac5788103167859f94c651c1a6e1edda6ea08eff634d9a924ac1e899767e0b8e57e0035a0a3f2e7df0b6ee024ae7cdf37dba462c5c06501215230_2","lines":"      free (key_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":570,"col":3,"offset":13513},"end":{"line":570,"col":29,"offset":13539},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_11","lines":"  vfprintf (stderr, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":611,"col":8,"offset":14371},"end":{"line":611,"col":57,"offset":14420},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_12","lines":"\t      printf (_(\"not a number (stopped near %s)\\n\"), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":621,"col":8,"offset":14624},"end":{"line":621,"col":57,"offset":14673},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_13","lines":"\t      printf (_(\"not a number (stopped near %s)\\n\"), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":631,"col":8,"offset":14880},"end":{"line":631,"col":57,"offset":14929},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_14","lines":"\t      printf (_(\"not a number (stopped near %s)\\n\"), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":647,"col":7,"offset":15157},"end":{"line":647,"col":54,"offset":15204},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_15","lines":"      fprintf (param->fp, _(\"Recovery succeeded.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":650,"col":4,"offset":15231},"end":{"line":654,"col":42,"offset":15435},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_16","lines":"\t  fprintf (param->fp,\n\t\t   _(\"Keys recovered: %lu, failed: %lu, duplicate: %lu\\n\"),\n\t\t   (unsigned long) rcvr.recovered_keys,\n\t\t   (unsigned long) rcvr.failed_keys,\n\t\t   (unsigned long) rcvr.duplicate_keys);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":655,"col":4,"offset":15440},"end":{"line":658,"col":42,"offset":15595},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_17","lines":"\t  fprintf (param->fp,\n\t\t   _(\"Buckets recovered: %lu, failed: %lu\\n\"),\n\t\t   (unsigned long) rcvr.recovered_buckets,\n\t\t   (unsigned long) rcvr.failed_buckets);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":663,"col":4,"offset":15641},"end":{"line":665,"col":23,"offset":15733},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_18","lines":"\t  fprintf (param->fp,\n\t\t   _(\"Original database preserved in file %s\"),\n\t\t   rcvr.backup_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":666,"col":4,"offset":15738},"end":{"line":666,"col":28,"offset":15762},"extra":{"metavars":{"$PTR":{"start":{"line":666,"col":10,"offset":15744},"end":{"line":666,"col":26,"offset":15760},"abstract_content":"rcvr.backup_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c774e013639ae43120b29f94aacc252194c2cfdeca16e0d4ca2e4cf89b421c831604627b38ba8cd9153e6351bec197a054d4373371334bd466965af750744df6_0","lines":"\t  free (rcvr.backup_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":672,"col":7,"offset":15822},"end":{"line":672,"col":77,"offset":15892},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_19","lines":"      fprintf (stderr, _(\"Recovery failed: %s\"), gdbm_strerror (gdbm_errno));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":716,"col":5,"offset":16823},"end":{"line":716,"col":50,"offset":16868},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_20","lines":"    fprintf (param->fp, _(\"no current bucket\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":724,"col":7,"offset":17092},"end":{"line":725,"col":31,"offset":17183},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_21","lines":"      fprintf (param->fp, _(\"\\n current directory entry = %d.\\n\"),\n\t       gdbm_file->bucket_dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":726,"col":7,"offset":17191},"end":{"line":727,"col":56,"offset":17306},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_22","lines":"      fprintf (param->fp, _(\" current bucket address  = %lu.\\n\"),\n\t       (unsigned long) gdbm_file->cache_entry->ca_adr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":738,"col":7,"offset":17460},"end":{"line":738,"col":56,"offset":17509},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_23","lines":"      printf (_(\"not a number (stopped near %s)\\n\"), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":747,"col":7,"offset":17625},"end":{"line":747,"col":56,"offset":17674},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_24","lines":"      printf (_(\"not a number (stopped near %s)\\n\"), p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":798,"col":10,"offset":18644},"end":{"line":798,"col":19,"offset":18653},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":798,"col":10,"offset":18644},"end":{"line":798,"col":15,"offset":18649},"abstract_content":"count"},"$SIGNED":{"start":{"line":798,"col":18,"offset":18652},"end":{"line":798,"col":19,"offset":18653},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5cc6bf9b83fa84e4f08765739d60b039f1d327328620e8a64fe4cdb2c0f69e841830af34eb6caa5f7a9899fb8f0bb94e55a7332594a86f34638ae66083eb7c34_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":816,"col":3,"offset":18893},"end":{"line":816,"col":52,"offset":18942},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_25","lines":"  fprintf (param->fp, _(\"Hash table directory.\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":817,"col":3,"offset":18946},"end":{"line":819,"col":21,"offset":19100},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_26","lines":"  fprintf (param->fp, _(\"  Size =  %d.  Bits = %d,  Buckets = %zu.\\n\\n\"),\n\t   gdbm_file->header->dir_size, gdbm_file->header->dir_bits,\n\t   bucket_count ());","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":842,"col":3,"offset":19545},"end":{"line":842,"col":41,"offset":19583},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_27","lines":"  fprintf (fp, _(\"\\nFile Header: \\n\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":843,"col":3,"offset":19587},"end":{"line":844,"col":44,"offset":19672},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_28","lines":"  fprintf (fp, _(\"  table        = %lu\\n\"),\n\t   (unsigned long) gdbm_file->header->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":845,"col":3,"offset":19676},"end":{"line":845,"col":72,"offset":19745},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_29","lines":"  fprintf (fp, _(\"  table size   = %d\\n\"), gdbm_file->header->dir_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":846,"col":3,"offset":19749},"end":{"line":846,"col":72,"offset":19818},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_30","lines":"  fprintf (fp, _(\"  table bits   = %d\\n\"), gdbm_file->header->dir_bits);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":847,"col":3,"offset":19822},"end":{"line":847,"col":74,"offset":19893},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_31","lines":"  fprintf (fp, _(\"  block size   = %d\\n\"), gdbm_file->header->block_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":848,"col":3,"offset":19897},"end":{"line":848,"col":76,"offset":19970},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_32","lines":"  fprintf (fp, _(\"  bucket elems = %d\\n\"), gdbm_file->header->bucket_elems);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":849,"col":3,"offset":19974},"end":{"line":849,"col":75,"offset":20046},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_33","lines":"  fprintf (fp, _(\"  bucket size  = %d\\n\"), gdbm_file->header->bucket_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":850,"col":3,"offset":20050},"end":{"line":850,"col":76,"offset":20123},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_34","lines":"  fprintf (fp, _(\"  header magic = %x\\n\"), gdbm_file->header->header_magic);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":851,"col":3,"offset":20127},"end":{"line":852,"col":51,"offset":20219},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_35","lines":"  fprintf (fp, _(\"  next block   = %lu\\n\"),\n\t   (unsigned long) gdbm_file->header->next_block);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":853,"col":3,"offset":20223},"end":{"line":853,"col":74,"offset":20294},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_36","lines":"  fprintf (fp, _(\"  avail size   = %d\\n\"), gdbm_file->header->avail.size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":854,"col":3,"offset":20298},"end":{"line":854,"col":75,"offset":20370},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_37","lines":"  fprintf (fp, _(\"  avail count  = %d\\n\"), gdbm_file->header->avail.count);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":855,"col":3,"offset":20374},"end":{"line":856,"col":57,"offset":20472},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_38","lines":"  fprintf (fp, _(\"  avail nx blk = %lu\\n\"),\n\t   (unsigned long) gdbm_file->header->avail.next_block);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":868,"col":7,"offset":20713},"end":{"line":871,"col":45,"offset":20892},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_39","lines":"      fprintf (param->fp, _(\"hash value = %x, bucket #%u, slot %u\"),\n\t\thashval,\n\t\thashval >> (GDBM_HASH_BITS - gdbm_file->header->dir_bits),\n\t\thashval % gdbm_file->header->bucket_elems);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":874,"col":5,"offset":20911},"end":{"line":875,"col":44,"offset":20996},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_40","lines":"    fprintf (param->fp, _(\"hash value = %x\"),\n\t      _gdbm_hash (PARAM_DATUM (param, 0)));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":947,"col":5,"offset":22483},"end":{"line":947,"col":22,"offset":22500},"extra":{"metavars":{"$PTR":{"start":{"line":947,"col":11,"offset":22489},"end":{"line":947,"col":20,"offset":22498},"abstract_content":"data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b774137f6adc5ec30a30991be0df1e22c81ff6cf5953e822bb1f3e2e71fb553979167d0a3389776f7283e69fd5b80911f6112c6db2584f95d7fcfef0820b615d_0","lines":"\t   free (data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":949,"col":7,"offset":22511},"end":{"line":949,"col":23,"offset":22527},"extra":{"metavars":{"$PTR":{"start":{"line":949,"col":13,"offset":22517},"end":{"line":949,"col":21,"offset":22525},"abstract_content":"key.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2b69cd843fa67a460023aecf8cfe6652bc89c4af52bb3f5c41cfdc3d2aee155a703d58f528f75fedb955a3416e93b6e5ad1957eb9c1bcc2b6114133e4357b317_0","lines":"      free (key.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1020,"col":3,"offset":24160},"end":{"line":1021,"col":27,"offset":24245},"extra":{"metavars":{"$NARROW":{"start":{"line":1020,"col":3,"offset":24160},"end":{"line":1020,"col":5,"offset":24162},"abstract_content":"rc"},"$LARGE":{"start":{"line":1021,"col":18,"offset":24236},"end":{"line":1021,"col":26,"offset":24244},"abstract_content":"err_line"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"619b5774d175c3b6fe4f6d16a14419b9d02728bb023c3e865f76ed86ed31d19745114b54f5d89e9f1bb2382cdd55e2c914dc3a3213a20a3126780f64accd815b_0","lines":"  rc = gdbm_load (&gdbm_file, PARAM_STRING (param, 0), flag,\n\t\t   meta_mask, &err_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1033,"col":7,"offset":24427},"end":{"line":1034,"col":31,"offset":24516},"extra":{"metavars":{"$NARROW":{"start":{"line":1033,"col":7,"offset":24427},"end":{"line":1033,"col":9,"offset":24429},"abstract_content":"rc"},"$LARGE":{"start":{"line":1034,"col":22,"offset":24507},"end":{"line":1034,"col":30,"offset":24515},"abstract_content":"err_line"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"619b5774d175c3b6fe4f6d16a14419b9d02728bb023c3e865f76ed86ed31d19745114b54f5d89e9f1bb2382cdd55e2c914dc3a3213a20a3126780f64accd815b_1","lines":"      rc = gdbm_load (&gdbm_file, PARAM_STRING (param, 0), flag,\n\t\t       meta_mask, &err_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1057,"col":3,"offset":25009},"end":{"line":1057,"col":20,"offset":25026},"extra":{"metavars":{"$PTR":{"start":{"line":1057,"col":9,"offset":25015},"end":{"line":1057,"col":18,"offset":25024},"abstract_content":"file_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c7226a8ad35d6e5619d359d9f6bf1312a5be75bb6f7964f60ba1745f615aebc3868d032afd1062c6e331e41a23bd27ec3d7b6a53267e0fea6515a44d97796ba3_1","lines":"  free (file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-use-after-free","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1058,"col":7,"offset":25033},"end":{"line":1058,"col":78,"offset":25104},"extra":{"metavars":{"$FUN":{"start":{"line":1058,"col":7,"offset":25033},"end":{"line":1058,"col":18,"offset":25044},"abstract_content":"gdbm_setopt"},"$PTR":{"start":{"line":1058,"col":48,"offset":25074},"end":{"line":1058,"col":57,"offset":25083},"abstract_content":"file_name"}},"message":"The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/416","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"cc8a4f047e43011dd7795b777baabba6940817859d0bd300f124259dfcf1d29bc1b0b960bc01e2150ef75ba7f07dfccb72b11601f8b69dd79e470dab989f374e_0","lines":"  if (gdbm_setopt (gdbm_file, GDBM_GETDBNAME, &file_name, sizeof (file_name)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-incorrect-use-of-sizeof","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1058,"col":59,"offset":25085},"end":{"line":1058,"col":76,"offset":25102},"extra":{"metavars":{"$TYPE":{"start":{"line":35,"col":1,"offset":1049},"end":{"line":35,"col":5,"offset":1053},"abstract_content":"char"},"$EXPR":{"start":{"line":35,"col":19,"offset":1067},"end":{"line":35,"col":23,"offset":1071},"abstract_content":"NULL"},"$PTR":{"start":{"line":1058,"col":67,"offset":25093},"end":{"line":1058,"col":76,"offset":25102},"abstract_content":"file_name"}},"message":"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/467","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e582aa86502b6557f6ced8f5987743a2e65e608e7cb833b9aa4ced29db78a9aa5ef1de7c648ea2f4f9a8adfaa5436c8e1e9761c9346d3470f0f62483177c91ee_0","lines":"  if (gdbm_setopt (gdbm_file, GDBM_GETDBNAME, &file_name, sizeof (file_name)))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1067,"col":5,"offset":25297},"end":{"line":1067,"col":61,"offset":25353},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_41","lines":"    fprintf (param->fp, _(\"Database file: %s\\n\"), file_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1135,"col":7,"offset":26641},"end":{"line":1135,"col":45,"offset":26679},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_42","lines":"      fprintf (param->fp, _(\"Debug flags:\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1154,"col":3,"offset":27091},"end":{"line":1154,"col":16,"offset":27104},"extra":{"metavars":{"$PTR":{"start":{"line":1154,"col":9,"offset":27097},"end":{"line":1154,"col":14,"offset":27102},"abstract_content":"fname","propagated_value":{"svalue_start":{"line":1152,"col":17,"offset":27001},"svalue_end":{"line":1152,"col":53,"offset":27037},"svalue_abstract_content":"tildexpand(PARAM_STRING(param 0))"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7b6387b020e320ad7b4daa271445c33d28716074d90145360a82867762ecfffdaf7fa6dee7a805ccf1ff0874db2ae46d7d9c08514a57e43808717f116232698a_0","lines":"  free (fname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1498,"col":12,"offset":35413},"end":{"line":1498,"col":17,"offset":35418},"extra":{"metavars":{"$VAR":{"start":{"line":1498,"col":12,"offset":35413},"end":{"line":1498,"col":17,"offset":35418},"abstract_content":"state"},"$VAL2":{"start":{"line":1500,"col":11,"offset":35437},"end":{"line":1500,"col":20,"offset":35446},"abstract_content":"fcom_init"},"$VAL1":{"start":{"line":1505,"col":11,"offset":35520},"end":{"line":1505,"col":21,"offset":35530},"abstract_content":"fcom_found"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f7aaf6007e2d3ec0499ec1039fb323fc9ffadb7c6e68e03cd4e9f4c4469c08081dce6cb7daa1e66a0a47cbb9234a49b1a95469f35975f5e3f5469871a8f20e29_0","lines":"\t  switch (state)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1498,"col":12,"offset":35413},"end":{"line":1498,"col":17,"offset":35418},"extra":{"metavars":{"$VAR":{"start":{"line":1498,"col":12,"offset":35413},"end":{"line":1498,"col":17,"offset":35418},"abstract_content":"state"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"73831930cd0e9b6e71f582ae2948b89510815ce76850c974e039834e65758b89feae4c38dfeb413ab959059fb97b06582e683f83d856e6d4a8e8a3b0df633dc2_0","lines":"\t  switch (state)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1571,"col":25,"offset":37458},"end":{"line":1571,"col":51,"offset":37484},"extra":{"metavars":{"$FUN":{"start":{"line":1571,"col":25,"offset":37458},"end":{"line":1571,"col":32,"offset":37465},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_0","lines":"  struct gdbmarg *arg = ecalloc (1, sizeof (*arg));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1584,"col":25,"offset":37717},"end":{"line":1584,"col":51,"offset":37743},"extra":{"metavars":{"$FUN":{"start":{"line":1584,"col":25,"offset":37717},"end":{"line":1584,"col":32,"offset":37724},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_1","lines":"  struct gdbmarg *arg = ecalloc (1, sizeof (*arg));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1597,"col":25,"offset":37979},"end":{"line":1597,"col":51,"offset":38005},"extra":{"metavars":{"$FUN":{"start":{"line":1597,"col":25,"offset":37979},"end":{"line":1597,"col":32,"offset":37986},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_2","lines":"  struct gdbmarg *arg = ecalloc (1, sizeof (*arg));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1610,"col":22,"offset":38207},"end":{"line":1610,"col":44,"offset":38229},"extra":{"metavars":{"$FUN":{"start":{"line":1610,"col":22,"offset":38207},"end":{"line":1610,"col":29,"offset":38214},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0273d24214632fe38d0a9c2eb9a2d78be67592661bd9299ea707e241b8f762d17d94fbc35440661adae2c895f0dcc5162f2d570b97fc5df54c8649abdefc0304_3","lines":"  struct slist *lp = emalloc (sizeof (*lp));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1625,"col":16,"offset":38433},"end":{"line":1625,"col":31,"offset":38448},"extra":{"metavars":{"$FUN":{"start":{"line":1625,"col":16,"offset":38433},"end":{"line":1625,"col":23,"offset":38440},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0273d24214632fe38d0a9c2eb9a2d78be67592661bd9299ea707e241b8f762d17d94fbc35440661adae2c895f0dcc5162f2d570b97fc5df54c8649abdefc0304_4","lines":"  char *copy = emalloc (l + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1626,"col":3,"offset":38452},"end":{"line":1626,"col":22,"offset":38471},"extra":{"metavars":{"$FUN":{"start":{"line":1626,"col":3,"offset":38452},"end":{"line":1626,"col":9,"offset":38458},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bf31595d9b88ae06b677605e1cd37994f7370ca38ae21722854813526c4792cb5974172b7125bf4630da76ea04ca214b6f7904090ec3938ea02f15f2321389f_1","lines":"  memcpy (copy, s, l);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1637,"col":7,"offset":38619},"end":{"line":1637,"col":22,"offset":38634},"extra":{"metavars":{"$PTR":{"start":{"line":1637,"col":13,"offset":38625},"end":{"line":1637,"col":20,"offset":38632},"abstract_content":"lp->->str"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4d0070755ee716ca5941a7dbf74978546a1ea2ef6ecabea3e5d37607a94f0dcaed6ac9e77d4edd6aac8841c2d82e408cb96e9f5995f891f36fd8f7d00f9f0360_0","lines":"      free (lp->str);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1638,"col":7,"offset":38641},"end":{"line":1638,"col":17,"offset":38651},"extra":{"metavars":{"$PTR":{"start":{"line":1638,"col":13,"offset":38647},"end":{"line":1638,"col":15,"offset":38649},"abstract_content":"lp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"90590f691658aeea7860f54cfc4df8a5a5fa96c4412c923038593793cfbcdaa3e29af0b82a431e1816bacea93b4319ff04790e250e978325cd0648790d5d3fb0_0","lines":"      free (lp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1661,"col":22,"offset":39011},"end":{"line":1661,"col":46,"offset":39035},"extra":{"metavars":{"$FUN":{"start":{"line":1661,"col":22,"offset":39011},"end":{"line":1661,"col":29,"offset":39018},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_3","lines":"  struct kvpair *p = ecalloc (1, sizeof (*p));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1672,"col":22,"offset":39211},"end":{"line":1672,"col":46,"offset":39235},"extra":{"metavars":{"$FUN":{"start":{"line":1672,"col":22,"offset":39211},"end":{"line":1672,"col":29,"offset":39218},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_4","lines":"  struct kvpair *p = ecalloc (1, sizeof (*p));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1686,"col":7,"offset":39433},"end":{"line":1686,"col":23,"offset":39449},"extra":{"metavars":{"$PTR":{"start":{"line":1686,"col":13,"offset":39439},"end":{"line":1686,"col":21,"offset":39447},"abstract_content":"kvp->->key"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a54f50e81f23172368a800bee9a70d62272f69ea32cbe08f9e60a3bec37f395476dd668c289dfb2f65e1727d0dfd70243fcbb4159bb1e85796fa470b7dbe5402_0","lines":"      free (kvp->key);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1687,"col":15,"offset":39464},"end":{"line":1687,"col":24,"offset":39473},"extra":{"metavars":{"$VAR":{"start":{"line":1687,"col":15,"offset":39464},"end":{"line":1687,"col":24,"offset":39473},"abstract_content":"kvp->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bd77000efc179b8dc593df3f62ca155d350d2af80e7531609eea539873f8f9256142946fff92a9608eb3a2d36c622b5fd21bc34db10e693bc768a0948fa11790_0","lines":"      switch (kvp->type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1690,"col":4,"offset":39498},"end":{"line":1690,"col":22,"offset":39516},"extra":{"metavars":{"$PTR":{"start":{"line":1690,"col":10,"offset":39504},"end":{"line":1690,"col":20,"offset":39514},"abstract_content":"kvp->->val.s"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f33fe65ac2cc95e4623ed599e093f7ac81af169490c1b0b69fa882a6512314bb7bd22c1b432c6fd692ef609e0fbb01a796c503eba7c2b0871693cb81881f6d5f_0","lines":"\t  free (kvp->val.s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1697,"col":7,"offset":39590},"end":{"line":1697,"col":18,"offset":39601},"extra":{"metavars":{"$PTR":{"start":{"line":1697,"col":13,"offset":39596},"end":{"line":1697,"col":16,"offset":39599},"abstract_content":"kvp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"86891840ed16f3163814c13871b0c32e5ba9c38abad2e0832d64fb4a965827cf6544b95ee4d23c4005434d05aad34372e3f00f83142da4fff379c06728f77b0c_0","lines":"      free (kvp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1707,"col":15,"offset":39720},"end":{"line":1707,"col":24,"offset":39729},"extra":{"metavars":{"$VAR":{"start":{"line":1707,"col":15,"offset":39720},"end":{"line":1707,"col":24,"offset":39729},"abstract_content":"arg->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6287aa2f9c7c1350e8972fc58a2a947659f9ebb4cc80859c089d29851fb96efb853d77adc27cd4875b24bfc6b39a7b331952cb2d2642bbc6b1de42bdfbd28605_0","lines":"      switch (arg->type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1710,"col":4,"offset":39760},"end":{"line":1710,"col":25,"offset":39781},"extra":{"metavars":{"$PTR":{"start":{"line":1710,"col":10,"offset":39766},"end":{"line":1710,"col":23,"offset":39779},"abstract_content":"arg->->v.string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8d25f52de2d053c6879701d4c65d24b2fb63cfb75e48bd7f5cc3c52c09168a14342a8d81d42c863118892defda45c080a7e714368d5b74c23eb0eb014d23a7bf_0","lines":"\t  free (arg->v.string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1718,"col":4,"offset":39884},"end":{"line":1718,"col":27,"offset":39907},"extra":{"metavars":{"$PTR":{"start":{"line":1718,"col":10,"offset":39890},"end":{"line":1718,"col":25,"offset":39905},"abstract_content":"arg->->v.dat.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0cc215479c2c28abc9d212ebc74afa4ac9035f9457d6696d64f64ddef7771f4d3b8943ce333dfeb9b9dddee15b88a1c0149001691244f5bc0f8f9e7e137b4843_0","lines":"\t  free (arg->v.dat.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1721,"col":7,"offset":39927},"end":{"line":1721,"col":18,"offset":39938},"extra":{"metavars":{"$PTR":{"start":{"line":1721,"col":13,"offset":39933},"end":{"line":1721,"col":16,"offset":39936},"abstract_content":"arg"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a059f7e80d8c4ca22078388a9a4ed57373ff00e99e79ab3c0a7911cb59622d4add6a65c9db379fc8d04a1565a4a12cea9a4e54967c14364fce976cadd83442e6_0","lines":"      free (arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1848,"col":12,"offset":42360},"end":{"line":1848,"col":28,"offset":42376},"extra":{"metavars":{"$VAR":{"start":{"line":1848,"col":12,"offset":42360},"end":{"line":1848,"col":28,"offset":42376},"abstract_content":"last_cmd->->repeat"},"$VAL2":{"start":{"line":1850,"col":11,"offset":42395},"end":{"line":1850,"col":23,"offset":42407},"abstract_content":"REPEAT_NEVER"},"$VAL1":{"start":{"line":1852,"col":11,"offset":42433},"end":{"line":1852,"col":23,"offset":42445},"abstract_content":"REPEAT_NOARG"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e45f42ffe7080db37006b94f6904679fcff12787593c49062166421b73bebaef88083f533589d40df421d2dda4e7be1f9523bc2ed5973eb84a4b1c0d90b44f81_0","lines":"\t  switch (last_cmd->repeat)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1885,"col":17,"offset":43110},"end":{"line":1886,"col":38,"offset":43169},"extra":{"metavars":{"$FUN":{"start":{"line":1885,"col":17,"offset":43110},"end":{"line":1885,"col":25,"offset":43118},"abstract_content":"erealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a70e873f7c049398ffc34d8f2b77d052441cd1cc5c6619f36672071f80b5c17146b414f1cae44d6099643a3204630db9e7912ca3fe08000af25dd1bad35969e0_0","lines":"\t  param.argv = erealloc (param.argv,\n\t\t\t\t sizeof (param.argv[0]) * argmax);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1911,"col":11,"offset":43635},"end":{"line":1911,"col":47,"offset":43671},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":1911,"col":11,"offset":43635},"end":{"line":1911,"col":16,"offset":43640},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1db50c42ff236554d0525c56a0632ad71b482c561752c117e20efe9edec052797b108a1779588fbb40a0b9e0ab276035917f578f8fc2fc25a63f3c1c8740d799_0","lines":"      if (fgets (argbuf, sizeof argbuf, stdin) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1921,"col":17,"offset":43829},"end":{"line":1922,"col":38,"offset":43888},"extra":{"metavars":{"$FUN":{"start":{"line":1921,"col":17,"offset":43829},"end":{"line":1921,"col":25,"offset":43837},"abstract_content":"erealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a70e873f7c049398ffc34d8f2b77d052441cd1cc5c6619f36672071f80b5c17146b414f1cae44d6099643a3204630db9e7912ca3fe08000af25dd1bad35969e0_1","lines":"\t  param.argv = erealloc (param.argv,\n\t\t\t\t sizeof (param.argv[0]) * argmax);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1944,"col":7,"offset":44292},"end":{"line":1944,"col":22,"offset":44307},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1944,"col":7,"offset":44292},"end":{"line":1944,"col":13,"offset":44298},"abstract_content":"argmax"},"$SIGNED":{"start":{"line":1944,"col":16,"offset":44301},"end":{"line":1944,"col":22,"offset":44307},"abstract_content":"ARGINC"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e582c403084ffad51e93a0a1b7ee98a31558acb0142e247701cef3e2349fe202271f47fc0793699c3728c8b01447d51e9c52911092a9d24d6db9fffa095f34f3_0","lines":"      argmax = ARGINC;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1945,"col":20,"offset":44328},"end":{"line":1945,"col":60,"offset":44368},"extra":{"metavars":{"$FUN":{"start":{"line":1945,"col":20,"offset":44328},"end":{"line":1945,"col":27,"offset":44335},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d5aec10368d9fc2a2443d7ea68a7f170725b39945dfdeb9ddfc135f9aaaab1133ae2dfe9b09876aaac9b422b31d2ad0f3189017ec48e7acf6ec7cedb3b70df56_5","lines":"      param.argv = ecalloc (argmax, sizeof (param.argv[0]));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1953,"col":3,"offset":44487},"end":{"line":1953,"col":21,"offset":44505},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":1953,"col":3,"offset":44487},"end":{"line":1953,"col":17,"offset":44501},"abstract_content":"expected_lines"},"$SIGNED":{"start":{"line":1953,"col":20,"offset":44504},"end":{"line":1953,"col":21,"offset":44505},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5a7d605d158c354f4613298ce780e072d3e942672fa7e24e019ad9afa7d4fbc9d453b6953016597a3d8a7d1eac1664d4883b92deaa6d7f21f7de4276f758a305_0","lines":"  expected_lines = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-command-injection","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1959,"col":12,"offset":44723},"end":{"line":1959,"col":30,"offset":44741},"extra":{"metavars":{},"message":"The software constructs an OS command using externally-influenced input,  but it does not neutralize or incorrectly neutralizes special elements  that could modify the intended OS command.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/78","https://cwe.mitre.org/data/definitions/88","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"215bc3d6a1d33cf52b1e6dda9c00166c9ba00e545b80f29af0a05355f5a52b0ff4df862f7eaf0f8ddb179c5e7e26f0071df7f9ab5f7d9fcddc3945c3a6f398c0_0","lines":"\t  pagfp = popen (pager, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1959,"col":12,"offset":44723},"end":{"line":1959,"col":30,"offset":44741},"extra":{"metavars":{"$FUN":{"start":{"line":1959,"col":12,"offset":44723},"end":{"line":1959,"col":17,"offset":44728},"abstract_content":"popen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"547b8fd64c6663b4c79b3b8694d234eb252b5272faac67ae7b68274b59011f4a25939c062f4b00efbe5979c74576bd8236dcaebd2d1614fe286c6d15914d22cb_0","lines":"\t  pagfp = popen (pager, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1977,"col":2,"offset":45070},"end":{"line":1977,"col":20,"offset":45088},"extra":{"metavars":{"$PTR":{"start":{"line":1977,"col":8,"offset":45076},"end":{"line":1977,"col":18,"offset":45086},"abstract_content":"param.data"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7bbc51eaee1cc0f92825cb17a76cce5f800af26b278c29e71ec18269dc28805c2865f16d70a352ba8f86eaf57849f6ed9658d6bba474cdd18d5a0e4b1e4811a2_0","lines":"\tfree (param.data);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2000,"col":7,"offset":45394},"end":{"line":2000,"col":32,"offset":45419},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"d4b488189f4c4ca9c2fdde988d142f7096b11804b0c03894c4005e056c280308962f6a34f490490d05eb2afe9b5d493f87fac724bd0183a83f1ccfe9909493ed_1","lines":"  if (access (GDBMTOOLRC, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2000,"col":7,"offset":45394},"end":{"line":2000,"col":32,"offset":45419},"extra":{"metavars":{"$FUN":{"start":{"line":2000,"col":7,"offset":45394},"end":{"line":2000,"col":13,"offset":45400},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"573949bd0e690ab8fa1fee3168750451fca829fa00202134baed2e57009f8f587c8368762157555a40abdc099ff8b482ee1fee9c1d38cedeb3d8e9a4915af039_1","lines":"  if (access (GDBMTOOLRC, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2007,"col":17,"offset":45534},"end":{"line":2007,"col":32,"offset":45549},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2007,"col":17,"offset":45534},"end":{"line":2007,"col":23,"offset":45540},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"996a4c69bc0920d29b52646a0d125379e434bdbc1de5958aad6cbb81ed28b317b6fd0f30bf5e54307743a549dfa26323e57cd95a345397113a6463da5971c3c1_2","lines":"      char *p = getenv (\"HOME\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2019,"col":11,"offset":45783},"end":{"line":2019,"col":31,"offset":45803},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"d4b488189f4c4ca9c2fdde988d142f7096b11804b0c03894c4005e056c280308962f6a34f490490d05eb2afe9b5d493f87fac724bd0183a83f1ccfe9909493ed_2","lines":"      if (access (fname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2019,"col":11,"offset":45783},"end":{"line":2019,"col":31,"offset":45803},"extra":{"metavars":{"$FUN":{"start":{"line":2019,"col":11,"offset":45783},"end":{"line":2019,"col":17,"offset":45789},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"573949bd0e690ab8fa1fee3168750451fca829fa00202134baed2e57009f8f587c8368762157555a40abdc099ff8b482ee1fee9c1d38cedeb3d8e9a4915af039_2","lines":"      if (access (fname, R_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2023,"col":7,"offset":45867},"end":{"line":2023,"col":20,"offset":45880},"extra":{"metavars":{"$PTR":{"start":{"line":2023,"col":13,"offset":45873},"end":{"line":2023,"col":18,"offset":45878},"abstract_content":"fname","propagated_value":{"svalue_start":{"line":2018,"col":15,"offset":45739},"svalue_end":{"line":2018,"col":47,"offset":45771},"svalue_abstract_content":"mkfilename(p GDBMTOOLRC NULL)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7b6387b020e320ad7b4daa271445c33d28716074d90145360a82867762ecfffdaf7fa6dee7a805ccf1ff0874db2ae46d7d9c08514a57e43808717f116232698a_1","lines":"      free (fname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2041,"col":3,"offset":46095},"end":{"line":2041,"col":29,"offset":46121},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_43","lines":"  vfprintf (stderr, fmt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2056,"col":17,"offset":46301},"end":{"line":2056,"col":21,"offset":46305},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_0","lines":"  set_progname (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2062,"col":3,"offset":46403},"end":{"line":2062,"col":25,"offset":46425},"extra":{"metavars":{"$FUN":{"start":{"line":2062,"col":3,"offset":46403},"end":{"line":2062,"col":12,"offset":46412},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f8d831192d144b77a2a7e3f9d600d1df19a43016f004fbd2300b471e488bfc3fb6d9b6e3e309feb18b4996eceb9462349f1c4be1dec07f51b7b1d613b6a4d88e_0","lines":"  setlocale (LC_ALL, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2074,"col":39,"offset":46787},"end":{"line":2074,"col":55,"offset":46803},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":2074,"col":39,"offset":46787},"end":{"line":2074,"col":45,"offset":46793},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"996a4c69bc0920d29b52646a0d125379e434bdbc1de5958aad6cbb81ed28b317b6fd0f30bf5e54307743a549dfa26323e57cd95a345397113a6463da5971c3c1_3","lines":"  variable_set (\"pager\", VART_STRING, getenv (\"PAGER\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2079,"col":36,"offset":46881},"end":{"line":2079,"col":40,"offset":46885},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_1","lines":"  for (opt = parseopt_first (argc, argv, optab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2147,"col":3,"offset":47944},"end":{"line":2147,"col":7,"offset":47948},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_2","lines":"  argv += optind;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2158,"col":28,"offset":48138},"end":{"line":2158,"col":32,"offset":48142},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_3","lines":"      file_name = estrdup (argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2160,"col":7,"offset":48168},"end":{"line":2160,"col":11,"offset":48172},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_4","lines":"      argv++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2168,"col":40,"offset":48353},"end":{"line":2168,"col":44,"offset":48357},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"4e6078d981115be59cb7a5313175a3061ee2057e0ba8997f2569b948d9b7af007367d937cd1633ddf37b02482091e4453f4c898618f1d3a1bfe1f215c1686315_5","lines":"\t  input = instream_argv_create (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-signal","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2174,"col":3,"offset":48402},"end":{"line":2174,"col":28,"offset":48427},"extra":{"metavars":{},"message":"The signal() API should be regarded as deprecated. When possible, sigaction() should be used instead, because it allows to precisely specify the desired behavior in case two signals arrive shortly after each other thus preventing many race conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/364","https://cwe.mitre.org/data/definitions/479","https://cwe.mitre.org/data/definitions/828"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"8520119873101d8cdf3518a2315a6f131eecff0170311a6acd275a49a9b8bfc861e39a6f56012665ebae35288a0caa6e063b384c9abacf7ad4c61bfa023c5814_0","lines":"  signal (SIGPIPE, SIG_IGN);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2177,"col":3,"offset":48470},"end":{"line":2177,"col":13,"offset":48480},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":2177,"col":3,"offset":48470},"end":{"line":2177,"col":9,"offset":48476},"abstract_content":"argmax"},"$SIGNED":{"start":{"line":2177,"col":12,"offset":48479},"end":{"line":2177,"col":13,"offset":48480},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d30aa80c7b6698f387c4f65991f49b23f607a029756b6bc6b35d9414d23968a03b63fd2abb53e92266640da50cc37c8476d4716082ce2660adf96a1ff64731e4_0","lines":"  argmax = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":2187,"col":5,"offset":48670},"end":{"line":2187,"col":68,"offset":48733},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"75b8c273a3b5fd19ddad348844d60277b3cbd04fed99b62c49f4e116dbf56d0786789a264647ba8a5595adba0ada942b1c4572a080c5244c348fa4499df5ff32_44","lines":"    printf (_(\"\\nWelcome to the gdbm tool.  Type ? for help.\\n\\n\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":774,"col":12,"offset":27471},"end":{"line":774,"col":19,"offset":27478},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":774,"col":12,"offset":27471},"end":{"line":774,"col":15,"offset":27474},"abstract_content":"res"},"$SIGNED":{"start":{"line":774,"col":18,"offset":27477},"end":{"line":774,"col":19,"offset":27478},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9505c8e5d2d9a54b0a150e1f8b388a7a4a9edb763aac3c19a527c517dc4068088ec93244c5bfd9cbceddb1e86e1d10ccd6b7dcbfa949a0b71814e1c88c62989c_0","lines":"  unsigned res = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1071,"col":10,"offset":35153},"end":{"line":1071,"col":16,"offset":35159},"extra":{"metavars":{"$VAR":{"start":{"line":1071,"col":10,"offset":35153},"end":{"line":1071,"col":16,"offset":35159},"abstract_content":"*++yyp"},"$VAL1":{"start":{"line":1077,"col":9,"offset":35233},"end":{"line":1077,"col":13,"offset":35237},"abstract_content":"'\\\\'"},"$VAL2":{"start":{"line":1087,"col":9,"offset":35410},"end":{"line":1087,"col":12,"offset":35413},"abstract_content":"'\"'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fd2f6884cf9a822d11bceebdb5b91704a2f9f4280f89fc5659f8024af00ac1751d79c6ce801c0a792c2e2eb0ce4330d2dde538c57cedea39a3f6fa41a4fbe5a2_0","lines":"\tswitch (*++yyp)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1098,"col":10,"offset":35567},"end":{"line":1098,"col":33,"offset":35590},"extra":{"metavars":{"$FUN":{"start":{"line":1098,"col":10,"offset":35567},"end":{"line":1098,"col":18,"offset":35575},"abstract_content":"yystpcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"689f6d8e708e19984f35e9151b83850d740f2aefa3ea076dc02e65e7f2acd1fe8d6569fd8b48e10dc35af0a0f3571e100830627d45d49178f58b09646f12551b_0","lines":"  return yystpcpy (yyres, yystr) - yyres;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1098,"col":10,"offset":35567},"end":{"line":1098,"col":41,"offset":35598},"extra":{"metavars":{"$PTR1":{"start":{"line":1098,"col":10,"offset":35567},"end":{"line":1098,"col":33,"offset":35590},"abstract_content":"yystpcpy(yyres yystr)"},"$PTR2":{"start":{"line":1098,"col":36,"offset":35593},"end":{"line":1098,"col":41,"offset":35598},"abstract_content":"yyres"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7638d35a58479f1b091648bdff25f1ab5091ba25424e845511f0a371e957bee5b43fec0823ec6fed92e5b2f23e979a0630fdfbd9a878b5d60a7ddd37f7ac8e22_0","lines":"  return yystpcpy (yyres, yystr) - yyres;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1189,"col":11,"offset":39621},"end":{"line":1189,"col":18,"offset":39628},"extra":{"metavars":{"$VAR":{"start":{"line":1189,"col":11,"offset":39621},"end":{"line":1189,"col":18,"offset":39628},"abstract_content":"yycount"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f518b2a688a4dc1ba2724590fb68edd35ef8d63053b931f340e27c846b5947663fc052df0a6059849231512fed192e804e7c32d0800288c77c9bd186a52c6a96_0","lines":"  switch (yycount)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1413,"col":25,"offset":45155},"end":{"line":1413,"col":37,"offset":45167},"extra":{"metavars":{"$TYPE":{"start":{"line":1345,"col":5,"offset":43330},"end":{"line":1345,"col":17,"offset":43342},"abstract_content":"yytype_int16"},"$PTR2":{"start":{"line":1413,"col":25,"offset":45155},"end":{"line":1413,"col":30,"offset":45160},"abstract_content":"yyssp"},"$PTR1":{"start":{"line":1413,"col":33,"offset":45163},"end":{"line":1413,"col":37,"offset":45167},"abstract_content":"yyss"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7a05cced6b261a264c6e20f60b5bc40e27bf5a5a40972efda029e59bfed9a942bbff8cb91c92061ac2c67179862236db302bf7e8140af28419147d16b6b7b3b4_0","lines":"      YYSIZE_T yysize = yyssp - yyss + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1883,"col":8,"offset":55733},"end":{"line":1883,"col":40,"offset":55765},"extra":{"metavars":{"$PTR":{"start":{"line":1883,"col":14,"offset":55739},"end":{"line":1883,"col":37,"offset":55762},"abstract_content":"yyvsp[1-1].string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"715b4833f49f2580f660b1d7c123b90e2049827ceb1417d6e2e489c740c867ab2b19cd8bea00ed5778b4991395f36fe0cb0339e5ee572b9bd9ba4ea0f7fffa10_0","lines":"\t      free((yyvsp[(1) - (1)].string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1912,"col":8,"offset":56532},"end":{"line":1912,"col":41,"offset":56565},"extra":{"metavars":{"$PTR":{"start":{"line":1912,"col":15,"offset":56539},"end":{"line":1912,"col":38,"offset":56562},"abstract_content":"yyvsp[1-3].string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7d4260005cd0e012f141a2d8145830c935d0d9b26d7dbb4457f0a7794a5722c46e8dea908075b188cad68a15b92523ff6b97a77a961c1284bf17d5ccdaf00902_0","lines":"\t      free ((yyvsp[(1) - (3)].string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1913,"col":8,"offset":56573},"end":{"line":1913,"col":41,"offset":56606},"extra":{"metavars":{"$PTR":{"start":{"line":1913,"col":15,"offset":56580},"end":{"line":1913,"col":38,"offset":56603},"abstract_content":"yyvsp[3-3].string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"837c62d186e6946f0b3920a457e7babc9836ea5a0ec8206fc54ed050337bb7229cd474e20db6385659105fd95cf90dd86c1af753009645f2f6c9483e9bdda9fa_0","lines":"\t      free ((yyvsp[(3) - (3)].string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1922,"col":16,"offset":56764},"end":{"line":1922,"col":18,"offset":56766},"extra":{"metavars":{"$VAR":{"start":{"line":1922,"col":16,"offset":56764},"end":{"line":1922,"col":18,"offset":56766},"abstract_content":"rc"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ed1b037d7b2971dbd1d5d2b8afe5170eaa69b23b0b89f7a5ceac5afa76f666590013b737919703130fd54559eb84ddc9b41686177b293b29fea07af11e699167_0","lines":"\t      switch (rc)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1935,"col":8,"offset":57069},"end":{"line":1935,"col":40,"offset":57101},"extra":{"metavars":{"$PTR":{"start":{"line":1935,"col":14,"offset":57075},"end":{"line":1935,"col":37,"offset":57098},"abstract_content":"yyvsp[1-1].string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"715b4833f49f2580f660b1d7c123b90e2049827ceb1417d6e2e489c740c867ab2b19cd8bea00ed5778b4991395f36fe0cb0339e5ee572b9bd9ba4ea0f7fffa10_1","lines":"\t      free((yyvsp[(1) - (1)].string));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c","start":{"line":31,"col":1,"offset":1176},"end":{"line":31,"col":11,"offset":1186},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":1,"offset":1176},"end":{"line":31,"col":11,"offset":1186},"abstract_content":"_gdbm_hash"},"$UNSIGNED":{"start":{"line":44,"col":16,"offset":1612},"end":{"line":44,"col":21,"offset":1617},"abstract_content":"value","propagated_value":{"svalue_start":{"line":41,"col":12,"offset":1526},"svalue_end":{"line":41,"col":52,"offset":1566},"svalue_abstract_content":"1103515243*value+12345&0x7FFFFFFF"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"341065e73c6fb74e9f13a7486936f3608a325b2391741d7a1af4e66387caca4539945bdfafc05e9cc630de5413e38a6224577d92cc276eab0075438ab151162b_0","lines":"_gdbm_hash (datum key)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c","start":{"line":37,"col":3,"offset":1364},"end":{"line":37,"col":33,"offset":1394},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":37,"col":3,"offset":1364},"end":{"line":37,"col":8,"offset":1369},"abstract_content":"value"},"$SIGNED":{"start":{"line":37,"col":11,"offset":1372},"end":{"line":37,"col":21,"offset":1382},"abstract_content":"0x238F13AF"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"62e658ec3c2e0f863caafde33320ced904918e0d2b7cee755faae8bc17fe3987b45da3b3de5e7fa2d58f079743ca08f96f70de577c7c4b01f08742253fa0ccd9_0","lines":"  value = 0x238F13AF * key.dsize;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c","start":{"line":39,"col":5,"offset":1446},"end":{"line":39,"col":71,"offset":1512},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":39,"col":5,"offset":1446},"end":{"line":39,"col":10,"offset":1451},"abstract_content":"value"},"$SIGNED":{"start":{"line":39,"col":32,"offset":1473},"end":{"line":39,"col":37,"offset":1478},"abstract_content":"index"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f306b99616cb78a1ee0a4b9186a5d453f8d32b8f6ad68a963d372399d475f360843d845413530137dc964fd3ce6245924455d59b41d19572e1083de5597b0d9c_0","lines":"    value = (value + (key.dptr[index] << (index*5 % 24))) & 0x7FFFFFFF;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c","start":{"line":41,"col":3,"offset":1517},"end":{"line":41,"col":52,"offset":1566},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":41,"col":3,"offset":1517},"end":{"line":41,"col":8,"offset":1522},"abstract_content":"value"},"$SIGNED":{"start":{"line":41,"col":12,"offset":1526},"end":{"line":41,"col":22,"offset":1536},"abstract_content":"1103515243"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"326c1a579300017441bb30d7ac2be7382e6152a4cfee922136ffe1a66a2f9f94efb6354e77f56ef67990d7b6e4fb7809c855326c723dacf6376df1fd642b97d6_0","lines":"  value = (1103515243 * value + 12345) & 0x7FFFFFFF;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c","start":{"line":34,"col":10,"offset":1279},"end":{"line":34,"col":19,"offset":1288},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":34,"col":10,"offset":1279},"end":{"line":34,"col":15,"offset":1284},"abstract_content":"total"},"$SIGNED":{"start":{"line":34,"col":18,"offset":1287},"end":{"line":34,"col":19,"offset":1288},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1db54c59863c162bca2bdf98f722d72a2cb6a68956e33a8ead7885971425d24d12efca7506595fe1237375a8e1c3a68899581c1f486395c3b047f6b12e376427_0","lines":"  size_t total = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c","start":{"line":100,"col":3,"offset":2440},"end":{"line":100,"col":12,"offset":2449},"extra":{"metavars":{"$PTR":{"start":{"line":100,"col":9,"offset":2446},"end":{"line":100,"col":10,"offset":2447},"abstract_content":"i","propagated_value":{"svalue_start":{"line":99,"col":29,"offset":2408},"svalue_end":{"line":99,"col":57,"offset":2436},"svalue_abstract_content":"(struct instream_argv*istr"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7fd10585d47518e56136583bdda7a3aca6216661a5f3f3c879457b76664ec6e291bc0228ece30152a103250cc8f913b704efdcf74d87fbced8513950831afe2f_0","lines":"  free (i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c","start":{"line":114,"col":10,"offset":2625},"end":{"line":114,"col":32,"offset":2647},"extra":{"metavars":{"$FUN":{"start":{"line":114,"col":10,"offset":2625},"end":{"line":114,"col":17,"offset":2632},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"836e0a706095ca53cc28e9a03fbb238fef423ff8fc7dd61e0c94180afb02ad724d42711bf7e826e914aa19db27cf340b2716590d332edfbd19ab58b48e9a051d_0","lines":"  istr = emalloc (sizeof *istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c","start":{"line":122,"col":16,"offset":2873},"end":{"line":122,"col":20,"offset":2877},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"240a62ddb9d18c933860007292425378480692e0e2ba66e7262da2301bb7ece9ba50b118299c8b6bf047bb3d59f6a608b2f4b4dbab029e705e9b3fcb1f0a38cb_0","lines":"  istr->argv = argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":31,"col":10,"offset":1100},"end":{"line":31,"col":40,"offset":1130},"extra":{"metavars":{"$FUN":{"start":{"line":31,"col":10,"offset":1100},"end":{"line":31,"col":15,"offset":1105},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b30df7f44cf2f7f1d9dec6b173d6e920b777cf021e41300073f5288b7e9d070dbd989d0594c81543a87e32fc87f795812cc21cd41e5606f514d5ec63da7a65a1_0","lines":"  return fread (buf, 1, size, file->fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":31,"col":10,"offset":1100},"end":{"line":31,"col":40,"offset":1130},"extra":{"metavars":{"$PTR":{"start":{"line":31,"col":17,"offset":1107},"end":{"line":31,"col":20,"offset":1110},"abstract_content":"buf"},"$LEN":{"start":{"line":31,"col":22,"offset":1112},"end":{"line":31,"col":23,"offset":1113},"abstract_content":"1"},"$NITEMS":{"start":{"line":31,"col":25,"offset":1115},"end":{"line":31,"col":29,"offset":1119},"abstract_content":"size"},"$FS":{"start":{"line":31,"col":31,"offset":1121},"end":{"line":31,"col":39,"offset":1129},"abstract_content":"file->->fp"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2327b951a9e789ea7c5995b2c8299824f7450343724ceed8a87d6c783a373f6f01556daf076788907f5222093876989816569c1a349986f03f27799f67d0618b_0","lines":"  return fread (buf, 1, size, file->fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":39,"col":3,"offset":1271},"end":{"line":39,"col":29,"offset":1297},"extra":{"metavars":{"$PTR":{"start":{"line":39,"col":9,"offset":1277},"end":{"line":39,"col":27,"offset":1295},"abstract_content":"file->->base.in_name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8f6de92ab21bd8be5e2d542288288f6471e94b5af03c1c87084983a99b518da3bfb3fb4a9c13b42d1dfb97921c2f66d27d1d8339e61138e2f137315b85fde695_0","lines":"  free (file->base.in_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":40,"col":3,"offset":1300},"end":{"line":40,"col":15,"offset":1312},"extra":{"metavars":{"$PTR":{"start":{"line":40,"col":9,"offset":1306},"end":{"line":40,"col":13,"offset":1310},"abstract_content":"file","propagated_value":{"svalue_start":{"line":37,"col":32,"offset":1218},"svalue_end":{"line":37,"col":60,"offset":1246},"svalue_abstract_content":"(struct instream_file*istr"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b3dd25831d84b16c16d214d3739ca1bcb405ce97bde168cfcad896508779c25b2cfa2c76391605ae67e97f9e9c6056c0c772c16ec6d0d8f2d88b60b9cae4b134_0","lines":"  free (file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":58,"col":7,"offset":1685},"end":{"line":58,"col":23,"offset":1701},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"8d6044d477eefc6e0be0e0b796963c60bc1a55c468c31d639aff7b80966380e40a3f8627ac0b6d764143e895affb8d2c5a7bcc663790c7a92dfbf4a3c8058bc8_0","lines":"  if (stat (name, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":58,"col":7,"offset":1685},"end":{"line":58,"col":23,"offset":1701},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":7,"offset":1685},"end":{"line":58,"col":11,"offset":1689},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"818ff855cdf298eac85480cc17a148d7faf130c0d031274b1038dd5bd55123feace135210de5d8043435dbae92db743fdeeddc39e7baa763641505f11a1a50af_0","lines":"  if (stat (name, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":69,"col":8,"offset":1925},"end":{"line":69,"col":25,"offset":1942},"extra":{"metavars":{"$FUN":{"start":{"line":69,"col":8,"offset":1925},"end":{"line":69,"col":13,"offset":1930},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2cff5d5c4d5fb573bb844c2cdd87a3d5f04dace80e06325369de38373669305d087aacbafbdd84ed9742a1ba97996055cbf78ba2689e0711218236e855851a9c_0","lines":"  fp = fopen (name, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","start":{"line":77,"col":10,"offset":2081},"end":{"line":77,"col":32,"offset":2103},"extra":{"metavars":{"$FUN":{"start":{"line":77,"col":10,"offset":2081},"end":{"line":77,"col":17,"offset":2088},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42245c0879553dfad766fea33eba1941675ba401f9cf863569e41a95282689525c0d2f2351790eb9ed3b9851f80f85e04e377abaa9a7172fa8d6b2ba296a8455_0","lines":"  istr = emalloc (sizeof *istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":29,"col":7,"offset":942},"end":{"line":29,"col":29,"offset":964},"extra":{"metavars":{"$PTR":{"start":{"line":29,"col":13,"offset":948},"end":{"line":29,"col":27,"offset":962},"abstract_content":"pre_input_line"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b0919238980463e57c22ec1d5166a9f8d409084de70a7e6c8460c15f779b4fab4e0413b48bc3ddf8ca157ef71aa0937f874094c6522a176fab6fdeed12f8ac63_0","lines":"      free (pre_input_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":43,"col":11,"offset":1149},"end":{"line":43,"col":13,"offset":1151},"extra":{"metavars":{"$VAR":{"start":{"line":43,"col":11,"offset":1149},"end":{"line":43,"col":13,"offset":1151},"abstract_content":"rc"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"788a92d815d153453fc649cbfad0e556ce9ff0a5018d510e431a85381672dec774394633026ee6802224b3821d49b1419b8119066c45b2b293c285771eebdc82_0","lines":"  switch (rc)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":47,"col":7,"offset":1199},"end":{"line":47,"col":18,"offset":1210},"extra":{"metavars":{"$PTR":{"start":{"line":47,"col":13,"offset":1205},"end":{"line":47,"col":16,"offset":1208},"abstract_content":"out"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87c45cf4529f1dc4cb4a429fee3b7f726d7c7496ce8302ee3b15c317e5d8ffa2a8cdd85e35c9282efb62e9915cf6835ad2fa8128a68d96f47fda3dd02eac92f6_0","lines":"      free (out);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":51,"col":7,"offset":1246},"end":{"line":51,"col":18,"offset":1257},"extra":{"metavars":{"$PTR":{"start":{"line":51,"col":13,"offset":1252},"end":{"line":51,"col":16,"offset":1255},"abstract_content":"out"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87c45cf4529f1dc4cb4a429fee3b7f726d7c7496ce8302ee3b15c317e5d8ffa2a8cdd85e35c9282efb62e9915cf6835ad2fa8128a68d96f47fda3dd02eac92f6_1","lines":"      free (out);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":60,"col":7,"offset":1375},"end":{"line":60,"col":18,"offset":1386},"extra":{"metavars":{"$PTR":{"start":{"line":60,"col":13,"offset":1381},"end":{"line":60,"col":16,"offset":1384},"abstract_content":"out"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87c45cf4529f1dc4cb4a429fee3b7f726d7c7496ce8302ee3b15c317e5d8ffa2a8cdd85e35c9282efb62e9915cf6835ad2fa8128a68d96f47fda3dd02eac92f6_2","lines":"      free (out);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":78,"col":11,"offset":1631},"end":{"line":78,"col":22,"offset":1642},"extra":{"metavars":{"$VAR":{"start":{"line":78,"col":11,"offset":1631},"end":{"line":78,"col":22,"offset":1642},"abstract_content":"param->->argc"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4cb3900b3f8b4e00d9e9f3be7f965a8ca9b75b3122cd25c50f89057522767b83f4306544162d2fa529ffa1043cd803510b7e254295f567a8342f1556e53be887_0","lines":"  switch (param->argc)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":100,"col":7,"offset":2096},"end":{"line":100,"col":26,"offset":2115},"extra":{"metavars":{"$FUN":{"start":{"line":100,"col":7,"offset":2096},"end":{"line":100,"col":14,"offset":2103},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8437c1987f0f15d332cd4fe196f20470c45b61dd8ed93fc2f3e14e6494c33692f30b5e130682680901f800af1f0a72ae48955bab2db5ce841b668a4b2be3009c_0","lines":"  p = emalloc (sizeof *p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":134,"col":15,"offset":2726},"end":{"line":135,"col":37,"offset":2824},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":15,"offset":2726},"end":{"line":134,"col":22,"offset":2733},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8437c1987f0f15d332cd4fe196f20470c45b61dd8ed93fc2f3e14e6494c33692f30b5e130682680901f800af1f0a72ae48955bab2db5ce841b668a4b2be3009c_1","lines":"      hname = emalloc (sizeof HISTFILE_PREFIX + strlen (rl_readline_name) +\n\t\t       sizeof HISTFILE_SUFFIX - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":136,"col":7,"offset":2832},"end":{"line":136,"col":38,"offset":2863},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"a7da3d2f64eb7db448eed1d57443752b20295f10ef91471eb87be7b6ff4a6c8d220d69aa2097a0e673fbcf8545c7ae08bd2719cdb50bc1bd8160384280825468_0","lines":"      strcpy (hname, HISTFILE_PREFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":136,"col":7,"offset":2832},"end":{"line":136,"col":38,"offset":2863},"extra":{"metavars":{"$FUN":{"start":{"line":136,"col":7,"offset":2832},"end":{"line":136,"col":13,"offset":2838},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fa19e487842ff251b59fe2d0ffb5eb355d8c5b7d0d3bc5c3a26f28e960bba0a07c221a6f675184210b0408519c6b15547098c6a64faa6de936fe0c35bdcc8e44_0","lines":"      strcpy (hname, HISTFILE_PREFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":137,"col":7,"offset":2871},"end":{"line":137,"col":39,"offset":2903},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"a7da3d2f64eb7db448eed1d57443752b20295f10ef91471eb87be7b6ff4a6c8d220d69aa2097a0e673fbcf8545c7ae08bd2719cdb50bc1bd8160384280825468_1","lines":"      strcat (hname, rl_readline_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":137,"col":7,"offset":2871},"end":{"line":137,"col":39,"offset":2903},"extra":{"metavars":{"$FUN":{"start":{"line":137,"col":7,"offset":2871},"end":{"line":137,"col":13,"offset":2877},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f79e816ce769f2fa4bdbc31fece93c55dc269b548080fa4d19541f0ab6c2bccf35d63d9c49a40c925c563202fd1251fcc7eaa67b2c2073ba082a933aca9f9a43_0","lines":"      strcat (hname, rl_readline_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":138,"col":7,"offset":2911},"end":{"line":138,"col":38,"offset":2942},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"a7da3d2f64eb7db448eed1d57443752b20295f10ef91471eb87be7b6ff4a6c8d220d69aa2097a0e673fbcf8545c7ae08bd2719cdb50bc1bd8160384280825468_2","lines":"      strcat (hname, HISTFILE_SUFFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":138,"col":7,"offset":2911},"end":{"line":138,"col":38,"offset":2942},"extra":{"metavars":{"$FUN":{"start":{"line":138,"col":7,"offset":2911},"end":{"line":138,"col":13,"offset":2917},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f79e816ce769f2fa4bdbc31fece93c55dc269b548080fa4d19541f0ab6c2bccf35d63d9c49a40c925c563202fd1251fcc7eaa67b2c2073ba082a933aca9f9a43_1","lines":"      strcat (hname, HISTFILE_SUFFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":140,"col":7,"offset":2987},"end":{"line":140,"col":20,"offset":3000},"extra":{"metavars":{"$PTR":{"start":{"line":140,"col":13,"offset":2993},"end":{"line":140,"col":18,"offset":2998},"abstract_content":"hname","propagated_value":{"svalue_start":{"line":134,"col":15,"offset":2726},"svalue_end":{"line":135,"col":37,"offset":2824},"svalue_abstract_content":"emalloc(sizeof HISTFILE_PREFIX+strlen(rl_readline_name)+sizeof HISTFILE_SUFFIX-1)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4555bbf3acd05ee5621e4974831bc572f166a7c126b172c84862808dd7389f51f4ac7b3e0cbd1e3fd00bd0a8f533e84edaf11ae9fab8025582734712060b9f1_0","lines":"      free (hname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":180,"col":3,"offset":3797},"end":{"line":180,"col":15,"offset":3809},"extra":{"metavars":{"$PTR":{"start":{"line":180,"col":9,"offset":3803},"end":{"line":180,"col":13,"offset":3807},"abstract_content":"istr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1291929f11e3c9302b37ea9b10c285415c6c9c3ff35f9465cd7c51272094dc488dfb7dd96a0d85a3ee6af3e7ff2255f9e9717348ad727771706e7511d264541e_0","lines":"  free (istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":197,"col":4,"offset":4155},"end":{"line":197,"col":22,"offset":4173},"extra":{"metavars":{"$PTR":{"start":{"line":197,"col":10,"offset":4161},"end":{"line":197,"col":20,"offset":4171},"abstract_content":"input_line"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"510d615fc1225b05325bacbb7fa04c311a8b96950a426c2f584b0f836eaeaa13e6f47d7ec890f0a0d6fd0a7f5394e94f4cd91136c59ba011a6de0249bf711a8e_0","lines":"\t  free (input_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":208,"col":4,"offset":4335},"end":{"line":208,"col":18,"offset":4349},"extra":{"metavars":{"$PTR":{"start":{"line":208,"col":10,"offset":4341},"end":{"line":208,"col":16,"offset":4347},"abstract_content":"prompt","propagated_value":{"svalue_start":{"line":206,"col":13,"offset":4281},"svalue_end":{"line":206,"col":27,"offset":4295},"svalue_abstract_content":"make_prompt()"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"27a2cd84a6db7071e4697a4e849fe1a323da9b153c3f39e3ac590c89a7b2b3c310ab0f4728373b481be4b5a1f8321015f0a13ffb9d0d0b14aeb367a28dd68790_0","lines":"\t  free (prompt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":212,"col":4,"offset":4427},"end":{"line":212,"col":17,"offset":4440},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":212,"col":4,"offset":4427},"end":{"line":212,"col":13,"offset":4436},"abstract_content":"input_off"},"$SIGNED":{"start":{"line":212,"col":16,"offset":4439},"end":{"line":212,"col":17,"offset":4440},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4be367250a78df18b2e351992d19cddcd2303c4a5102ceefddb136cc70233d47c52b086b6b07e99e1b72470cf5abdc446a9f347c836f6fa0ecf4f4ac34e1a089_0","lines":"\t  input_off = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":217,"col":5,"offset":4520},"end":{"line":217,"col":23,"offset":4538},"extra":{"metavars":{"$PTR":{"start":{"line":217,"col":11,"offset":4526},"end":{"line":217,"col":21,"offset":4536},"abstract_content":"input_line","propagated_value":{"svalue_start":{"line":207,"col":17,"offset":4313},"svalue_end":{"line":207,"col":34,"offset":4330},"svalue_abstract_content":"readline(prompt)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"510d615fc1225b05325bacbb7fa04c311a8b96950a426c2f584b0f836eaeaa13e6f47d7ec890f0a0d6fd0a7f5394e94f4cd91136c59ba011a6de0249bf711a8e_1","lines":"\t\t  free (input_line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":230,"col":3,"offset":4694},"end":{"line":230,"col":34,"offset":4725},"extra":{"metavars":{"$FUN":{"start":{"line":230,"col":3,"offset":4694},"end":{"line":230,"col":9,"offset":4700},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0125017fc698e3decc0131254bdf56c0473fac5e4573ebfcdd5daaa1042a9b56eadec63b2078d617961281dd5eef02df147456d5f118d4cd0f47dfc06443dae7_0","lines":"  memcpy (buf, input_ptr (), len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":241,"col":10,"offset":4926},"end":{"line":241,"col":37,"offset":4953},"extra":{"metavars":{"$FUN":{"start":{"line":241,"col":10,"offset":4926},"end":{"line":241,"col":15,"offset":4931},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d019b9c47849734668f332b19341324386915301c3d998288e6f0f49308446f169541d3dd10d76bc5c61d2405184bb48d7d5bc5dd04cb71bc7d5382a6095d537_0","lines":"  return fread (buf, 1, size, stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":241,"col":10,"offset":4926},"end":{"line":241,"col":37,"offset":4953},"extra":{"metavars":{"$PTR":{"start":{"line":241,"col":17,"offset":4933},"end":{"line":241,"col":20,"offset":4936},"abstract_content":"buf"},"$LEN":{"start":{"line":241,"col":22,"offset":4938},"end":{"line":241,"col":23,"offset":4939},"abstract_content":"1"},"$NITEMS":{"start":{"line":241,"col":25,"offset":4941},"end":{"line":241,"col":29,"offset":4945},"abstract_content":"size"},"$FS":{"start":{"line":241,"col":31,"offset":4947},"end":{"line":241,"col":36,"offset":4952},"abstract_content":"stdin"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af311535981cba51c1313ce4544bb73ba7a78d6022960d2350bd7bfcb6c94e701c0729ed4a3072806746abb99114528f39cb2f7e28e1d4c4dff4273877fa00f2_0","lines":"  return fread (buf, 1, size, stdin);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","start":{"line":255,"col":10,"offset":5110},"end":{"line":255,"col":32,"offset":5132},"extra":{"metavars":{"$FUN":{"start":{"line":255,"col":10,"offset":5110},"end":{"line":255,"col":17,"offset":5117},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8437c1987f0f15d332cd4fe196f20470c45b61dd8ed93fc2f3e14e6494c33692f30b5e130682680901f800af1f0a72ae48955bab2db5ce841b668a4b2be3009c_2","lines":"  istr = emalloc (sizeof *istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c","start":{"line":24,"col":7,"offset":883},"end":{"line":24,"col":31,"offset":907},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":24,"col":7,"offset":883},"end":{"line":24,"col":12,"offset":888},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ac64000d1ae22d032343697eab1961f89c2f23e8e554f2f6017164a43a4b51b31ccffdeb436a34be5b9d9736d62d695dab409db8a9b1766a54bedc607f94515_0","lines":"  if (fgets (buf, size, stdin) == NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c","start":{"line":32,"col":3,"offset":1012},"end":{"line":32,"col":15,"offset":1024},"extra":{"metavars":{"$PTR":{"start":{"line":32,"col":9,"offset":1018},"end":{"line":32,"col":13,"offset":1022},"abstract_content":"istr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8e30d4552e8c0272f313658d51b3187d923fe88269cecf610b98a76c9cbfdd8ad20f868beef3e805a1f25a3ac3387d31d1cce55b00f79d6d1efe1b7522dac7e3_0","lines":"  free (istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c","start":{"line":46,"col":10,"offset":1180},"end":{"line":46,"col":32,"offset":1202},"extra":{"metavars":{"$FUN":{"start":{"line":46,"col":10,"offset":1180},"end":{"line":46,"col":17,"offset":1187},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5fba30df5f4e1449c6db6ae3e54d1b2edf63c0bc9615d40fd4cc84c2c8cf432c75ab61148121e969c6e8ae6bbf1ccaabf543bac23b2abed9b3b66b132a78341b_0","lines":"  istr = emalloc (sizeof *istr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c","start":{"line":66,"col":11,"offset":1444},"end":{"line":66,"col":25,"offset":1458},"extra":{"metavars":{"$VAR":{"start":{"line":66,"col":11,"offset":1444},"end":{"line":66,"col":25,"offset":1458},"abstract_content":"dbf->->lock_type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"326ecd206b650b6fe317c31c1f2844edcb6e1f4efafe4273147bb966165c535e956a08e612ce38b13e724b5eb877d82cd9a6d876f5b03e2681a1ec9f8259bc7a_0","lines":"  switch (dbf->lock_type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":32,"col":13,"offset":947},"end":{"line":32,"col":26,"offset":960},"extra":{"metavars":{"$FUN":{"start":{"line":32,"col":13,"offset":947},"end":{"line":32,"col":19,"offset":953},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e3f889f24266014270aa0cfadfd973779157f097c877f0c447b72242aced6ca0c75d13e364230a9cbb3e2fc20a19e474b82d1c415ad60771ddd4ee8670b5ee3e_0","lines":"  void *p = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":41,"col":18,"offset":1066},"end":{"line":41,"col":37,"offset":1085},"extra":{"metavars":{"$FUN":{"start":{"line":41,"col":18,"offset":1066},"end":{"line":41,"col":25,"offset":1073},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0b32710ecbbdfcacc5eb5184404b0e577bf3fba479f6f4ee39a135cb349740df31071bb9628745c1daeeac3a255e6eb340974ff26f4e514c101fddb8c7c150da_0","lines":"  void *newptr = realloc (ptr, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":50,"col":13,"offset":1198},"end":{"line":50,"col":33,"offset":1218},"extra":{"metavars":{"$FUN":{"start":{"line":50,"col":13,"offset":1198},"end":{"line":50,"col":19,"offset":1204},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"57f4d496183769dc847bbaf132f2f5db8225ef64c656234b5c8b42119736bf90b8f22744e99ed6d7bd43b369ccbb78537ae6338106e320b97d1cd0a727f7c09e_0","lines":"  void *p = calloc (nmemb, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":59,"col":10,"offset":1304},"end":{"line":59,"col":27,"offset":1321},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":10,"offset":1304},"end":{"line":59,"col":17,"offset":1311},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4deb70e9280be86d302a9b5221915e316cd3720c50a2cebf4facd61433de5ffe51e3b730796a7106e1b4f4e0179e63d4c723890f1d747b3c9f004e236873227d_0","lines":"  return ecalloc (1, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":69,"col":7,"offset":1408},"end":{"line":69,"col":33,"offset":1434},"extra":{"metavars":{"$FUN":{"start":{"line":69,"col":7,"offset":1408},"end":{"line":69,"col":14,"offset":1415},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"413971ed165d0acf8d0a251bbf27cbad422b6b998902c913b6e9b2a72805b772e088915f454be4a13992ac5cadb2dec3111fafc7380e612ee1ffcc9c9da4e220_0","lines":"  p = emalloc (strlen (str) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":70,"col":3,"offset":1438},"end":{"line":70,"col":18,"offset":1453},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"dcf733a015b8629a80a8532101277b62dbcc258e29ea39a76660b073ffdff0be02dea957845d2058415fe2925655aaf3384027a65c436a61485ca3c2b4662ba4_0","lines":"  strcpy (p, str);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","start":{"line":70,"col":3,"offset":1438},"end":{"line":70,"col":18,"offset":1453},"extra":{"metavars":{"$FUN":{"start":{"line":70,"col":3,"offset":1438},"end":{"line":70,"col":9,"offset":1444},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b970a36c7b7eb716607bf4d594f219c4ea4f203b0171d12d66cc0f57386c4cac1cdd2b267b4b6755cec534b1b5f55d85d2941ce28c427c93614a2d5a8b63cd06_0","lines":"  strcpy (p, str);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":63,"col":7,"offset":2065},"end":{"line":63,"col":29,"offset":2087},"extra":{"metavars":{"$FUN":{"start":{"line":63,"col":7,"offset":2065},"end":{"line":63,"col":12,"offset":2070},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"08f891fb3f767b3a3a6c344ed01f4b402c24c5f813c3126730b4464bc28b6db239b88990b88ad69ff3b3dde9c4cf6517da6a5c513d5b891d27e8e36b83d34e0b_0","lines":"  if (fstat (dbf->desc, &sb))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":261,"col":5,"offset":6895},"end":{"line":261,"col":37,"offset":6927},"extra":{"metavars":{"$SIGNED":{"start":{"line":261,"col":5,"offset":6895},"end":{"line":261,"col":7,"offset":6897},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":261,"col":33,"offset":6923},"end":{"line":261,"col":36,"offset":6926},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"98ddab0d557f057eb9836349dd42bc4ebf564809a1364d58f431f07eb090137930186ff95244b520546969f06e046dd8e00c37a41590431420f311988a6a0ab8_0","lines":"\t\t  rc = read (dbf->desc, cbuf, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":261,"col":10,"offset":6900},"end":{"line":261,"col":37,"offset":6927},"extra":{"metavars":{"$FUN":{"start":{"line":261,"col":10,"offset":6900},"end":{"line":261,"col":14,"offset":6904},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2077bc14c70d75feebd1872aad304e65686a9c31ec0f381fc918547258384d743fe35ae1aff1576b240ceb003e2ebd28240570a7d7d7dbde2cadcadbae71184_0","lines":"\t\t  rc = read (dbf->desc, cbuf, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":274,"col":4,"offset":7143},"end":{"line":274,"col":71,"offset":7210},"extra":{"metavars":{"$FUN":{"start":{"line":274,"col":4,"offset":7143},"end":{"line":274,"col":10,"offset":7149},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5619f0239480e2600088db8692590a7ea34f0a334c2dcd9f317becf5b30975e2294f7083cd3db32a5707ecbb9db213f25df9a9f6d02031c89ba72a08256f674d_0","lines":"\t  memcpy (cbuf, (char*) dbf->mapped_region + dbf->mapped_pos, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":282,"col":10,"offset":7337},"end":{"line":282,"col":39,"offset":7366},"extra":{"metavars":{"$FUN":{"start":{"line":282,"col":10,"offset":7337},"end":{"line":282,"col":14,"offset":7341},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2077bc14c70d75feebd1872aad304e65686a9c31ec0f381fc918547258384d743fe35ae1aff1576b240ceb003e2ebd28240570a7d7d7dbde2cadcadbae71184_1","lines":"  return read (dbf->desc, buffer, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":314,"col":5,"offset":8119},"end":{"line":314,"col":38,"offset":8152},"extra":{"metavars":{"$SIGNED":{"start":{"line":314,"col":5,"offset":8119},"end":{"line":314,"col":7,"offset":8121},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":314,"col":34,"offset":8148},"end":{"line":314,"col":37,"offset":8151},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"98ddab0d557f057eb9836349dd42bc4ebf564809a1364d58f431f07eb090137930186ff95244b520546969f06e046dd8e00c37a41590431420f311988a6a0ab8_1","lines":"\t\t  rc = write (dbf->desc, cbuf, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","start":{"line":327,"col":4,"offset":8368},"end":{"line":327,"col":71,"offset":8435},"extra":{"metavars":{"$FUN":{"start":{"line":327,"col":4,"offset":8368},"end":{"line":327,"col":10,"offset":8374},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5619f0239480e2600088db8692590a7ea34f0a334c2dcd9f317becf5b30975e2294f7083cd3db32a5707ecbb9db213f25df9a9f6d02031c89ba72a08256f674d_1","lines":"\t  memcpy ((char*) dbf->mapped_region + dbf->mapped_pos, cbuf, nbytes);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":99,"col":3,"offset":2790},"end":{"line":100,"col":6,"offset":2871},"extra":{"metavars":{"$EXPR1":{"start":{"line":99,"col":8,"offset":2795},"end":{"line":99,"col":17,"offset":2804},"abstract_content":"i=start"},"$EXPR2":{"start":{"line":99,"col":19,"offset":2806},"end":{"line":99,"col":72,"offset":2859},"abstract_content":"i<option_count&&!IS_GROUP_HEADER(&option_tab[i])"},"$EXPR3":{"start":{"line":99,"col":74,"offset":2861},"end":{"line":99,"col":77,"offset":2864},"abstract_content":"i++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a345f0ab477353e2e9aae01b997c974f4216beb13f9636470329395560b78ea645d5dad919d14ce68770ba78f97a2e4c1caf534919a17507ab3fba55de937e2f_0","lines":"  for (i = start; i < option_count && !IS_GROUP_HEADER (&option_tab[i]); i++)\n    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":113,"col":8,"offset":3183},"end":{"line":113,"col":17,"offset":3192},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":113,"col":8,"offset":3183},"end":{"line":113,"col":13,"offset":3188},"abstract_content":"start"},"$SIGNED":{"start":{"line":113,"col":16,"offset":3191},"end":{"line":113,"col":17,"offset":3192},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8b40a57be9450f0f57a52c4e72d84afed71dd551b7bee412d8c649cff6170296537a64bb23ea8934c41bf4b97a8177785ba83ed0b317b6065f671fc86f823458_0","lines":"  for (start = 0; start < option_count; )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":116,"col":2,"offset":3273},"end":{"line":116,"col":32,"offset":3303},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":116,"col":2,"offset":3273},"end":{"line":116,"col":7,"offset":3278},"abstract_content":"start"},"$SIGNED":{"start":{"line":116,"col":30,"offset":3301},"end":{"line":116,"col":31,"offset":3302},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c0dcf5467992545040e004503a16c9886f904bc49e5a46472a110ce23ade781fc9c7c24c57e2cff11c46d0da6d41e4e89246a166d8e25512370d3fed4683f1cf_0","lines":"\tstart = sort_group (start + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":125,"col":10,"offset":3421},"end":{"line":125,"col":20,"offset":3431},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":125,"col":10,"offset":3421},"end":{"line":125,"col":16,"offset":3427},"abstract_content":"optcnt"},"$SIGNED":{"start":{"line":125,"col":19,"offset":3430},"end":{"line":125,"col":20,"offset":3431},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d9bc85384a74edc8440df67dbfd0897e719e737f484310e0aa5c34b88572178984484952a3de163c0b78cee771df2d8e477f93a5daf574469014dc83ec49e4f7_0","lines":"  size_t optcnt = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":126,"col":10,"offset":3442},"end":{"line":126,"col":20,"offset":3452},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":126,"col":10,"offset":3442},"end":{"line":126,"col":16,"offset":3448},"abstract_content":"argcnt"},"$SIGNED":{"start":{"line":126,"col":19,"offset":3451},"end":{"line":126,"col":20,"offset":3452},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9e976c3f77d2b0a5c5d0e8bea96670fc4f588020d93bf8d6a466174396b55d050decc1190b6dd4fed9a88f481de657f91bde83a44c1595fab2dc74874248fa28_0","lines":"  size_t argcnt = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":127,"col":10,"offset":3463},"end":{"line":127,"col":19,"offset":3472},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":127,"col":10,"offset":3463},"end":{"line":127,"col":15,"offset":3468},"abstract_content":"count"},"$SIGNED":{"start":{"line":127,"col":18,"offset":3471},"end":{"line":127,"col":19,"offset":3472},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"05bbdfd0029a43727c1ffb98f7d73bcaf3c5ba18766fd66152bc8795a1ab2a4483fb7203f114c0485d5b8a636a0b8d316779f486c0b7b64b5b82bd54223766b8_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":143,"col":7,"offset":3714},"end":{"line":143,"col":44,"offset":3751},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":143,"col":7,"offset":3714},"end":{"line":143,"col":17,"offset":3724},"abstract_content":"option_max"},"$SIGNED":{"start":{"line":143,"col":43,"offset":3750},"end":{"line":143,"col":44,"offset":3751},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c71b6579e81d7d75645cb7929b1096c67c6f52658fe22f0722e8719bee74adef68a39251562338c0a14f802533b5168e02dda0edaa8100e50902641afdc1c9a5_0","lines":"      option_max = option_count + count + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":144,"col":20,"offset":3772},"end":{"line":145,"col":45,"offset":3838},"extra":{"metavars":{"$FUN":{"start":{"line":144,"col":20,"offset":3772},"end":{"line":144,"col":28,"offset":3780},"abstract_content":"erealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72ed8ee755e69109ed4caada49f3fe92ba359b7670d339c9a69e218f4989a0e3a04c53e8bef9157868a0004ad60360338375cd32668a55b218eac86012d876be_0","lines":"      option_tab = erealloc (option_tab,\n\t\t\t     sizeof (option_tab[0]) * option_max);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":151,"col":7,"offset":3941},"end":{"line":151,"col":55,"offset":3989},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":151,"col":7,"offset":3941},"end":{"line":151,"col":22,"offset":3956},"abstract_content":"long_option_max"},"$SIGNED":{"start":{"line":151,"col":54,"offset":3988},"end":{"line":151,"col":55,"offset":3989},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e58a0cd0e7d0cdf368fea0c094d0d4e3abc69d0fa1177afcdfe9f4d358dd61d5cf04dcdfb9cf357c4dfb46b1795e502e60dbd6a12ceb871bf78c8e45c7afa5fd_0","lines":"      long_option_max = long_option_count + optcnt + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":152,"col":22,"offset":4012},"end":{"line":153,"col":54,"offset":4089},"extra":{"metavars":{"$FUN":{"start":{"line":152,"col":22,"offset":4012},"end":{"line":152,"col":30,"offset":4020},"abstract_content":"erealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72ed8ee755e69109ed4caada49f3fe92ba359b7670d339c9a69e218f4989a0e3a04c53e8bef9157868a0004ad60360338375cd32668a55b218eac86012d876be_1","lines":"      long_options = erealloc (long_options,\n\t\t\t       sizeof (long_options[0]) * long_option_max);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":158,"col":7,"offset":4183},"end":{"line":158,"col":66,"offset":4242},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":158,"col":7,"offset":4183},"end":{"line":158,"col":23,"offset":4199},"abstract_content":"short_option_max"},"$SIGNED":{"start":{"line":158,"col":65,"offset":4241},"end":{"line":158,"col":66,"offset":4242},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4cc064b8a43ff14bcf71b17d279ac21f57196e97226a86a1eab1c3986a1bd096b27c5644979cdbb9631e03da5c286f9bc0f394e1bc247f81327b063c1dbbd510_0","lines":"      short_option_max = short_option_count + optcnt + argcnt + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":159,"col":23,"offset":4266},"end":{"line":160,"col":50,"offset":4340},"extra":{"metavars":{"$FUN":{"start":{"line":159,"col":23,"offset":4266},"end":{"line":159,"col":31,"offset":4274},"abstract_content":"erealloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"72ed8ee755e69109ed4caada49f3fe92ba359b7670d339c9a69e218f4989a0e3a04c53e8bef9157868a0004ad60360338375cd32668a55b218eac86012d876be_2","lines":"      short_options = erealloc (short_options,\n\t\t\t\tsizeof (short_options[0]) * short_option_max);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":195,"col":3,"offset":5219},"end":{"line":195,"col":21,"offset":5237},"extra":{"metavars":{"$PTR":{"start":{"line":195,"col":9,"offset":5225},"end":{"line":195,"col":19,"offset":5235},"abstract_content":"option_tab"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"314c62b17cf278122d3031125f2eda0006fb3e1ff749055512740a18a243bdd873e8c4ba8c79b0146e7cc38b3223b5337b37bf9b7adcfef69feb56a57cf948e2_0","lines":"  free (option_tab);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":196,"col":3,"offset":5240},"end":{"line":196,"col":24,"offset":5261},"extra":{"metavars":{"$PTR":{"start":{"line":196,"col":9,"offset":5246},"end":{"line":196,"col":22,"offset":5259},"abstract_content":"short_options"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"090f28ca4d52948ace213bc72856196cc5fd60e584d725e3f2596a0716e6569826ef863a1afd14032750b6c2948c78b97385d259e4dc4204d545e690523be27d_0","lines":"  free (short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":197,"col":3,"offset":5264},"end":{"line":197,"col":44,"offset":5305},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":197,"col":3,"offset":5264},"end":{"line":197,"col":21,"offset":5282},"abstract_content":"short_option_count"},"$SIGNED":{"start":{"line":197,"col":24,"offset":5285},"end":{"line":197,"col":40,"offset":5301},"abstract_content":"short_option_max","propagated_value":{"svalue_start":{"line":197,"col":43,"offset":5304},"svalue_end":{"line":197,"col":44,"offset":5305},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cf0af9fa2253e416c7056db88589c50811b8d1ca814b89f9b2e722097b458656aa555dc4144fb642cfcf62a92ee540d798a403361e6dd42066acd18b2d92b326_0","lines":"  short_option_count = short_option_max = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":197,"col":24,"offset":5285},"end":{"line":197,"col":44,"offset":5305},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":197,"col":24,"offset":5285},"end":{"line":197,"col":40,"offset":5301},"abstract_content":"short_option_max","propagated_value":{"svalue_start":{"line":197,"col":43,"offset":5304},"svalue_end":{"line":197,"col":44,"offset":5305},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":197,"col":43,"offset":5304},"end":{"line":197,"col":44,"offset":5305},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5025da251dd52dc5117545e80aeb0a5ff0555a8ff282f1f7fd19411236fe8f3f1e83d49c898955142c77566129911599ebc66350eb683a8337e11951b4337e14_0","lines":"  short_option_count = short_option_max = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":199,"col":3,"offset":5333},"end":{"line":199,"col":23,"offset":5353},"extra":{"metavars":{"$PTR":{"start":{"line":199,"col":9,"offset":5339},"end":{"line":199,"col":21,"offset":5351},"abstract_content":"long_options"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7df66e10a054fbae5b2a5093616b143b632ed362a0244f1862f70e51de524759e6f60fd16016c54532212156fc19b82abfa7808a7a9b120080d2320f90273ae9_0","lines":"  free (long_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":200,"col":3,"offset":5356},"end":{"line":200,"col":42,"offset":5395},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":200,"col":3,"offset":5356},"end":{"line":200,"col":20,"offset":5373},"abstract_content":"long_option_count"},"$SIGNED":{"start":{"line":200,"col":23,"offset":5376},"end":{"line":200,"col":38,"offset":5391},"abstract_content":"long_option_max","propagated_value":{"svalue_start":{"line":200,"col":41,"offset":5394},"svalue_end":{"line":200,"col":42,"offset":5395},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"07a1682a24942a6187716483c20c56a9553fefcce136c0c22fd610ff66191244df1e94d2d2a3a88fa4ac87e27735b62085946ae85e9ff769f40a73198cdc702a_0","lines":"  long_option_count = long_option_max = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":200,"col":23,"offset":5376},"end":{"line":200,"col":42,"offset":5395},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":200,"col":23,"offset":5376},"end":{"line":200,"col":38,"offset":5391},"abstract_content":"long_option_max","propagated_value":{"svalue_start":{"line":200,"col":41,"offset":5394},"svalue_end":{"line":200,"col":42,"offset":5395},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":200,"col":41,"offset":5394},"end":{"line":200,"col":42,"offset":5395},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8fb9d8f637b6d9fd2b0e41c0505769b17445f497e82366c007351a5b18e295cd1c0ccdeb7f1a7778a5d001e5ea9b518f5d332e6f01218f1985d0bb015444dfc8_0","lines":"  long_option_count = long_option_max = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":206,"col":3,"offset":5497},"end":{"line":206,"col":7,"offset":5501},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"66a795b54c051ab1f760573ba13f74bc01bd477662c723defdd67600e724ef841579914fbd4dace763ec889eeb277e5b75439ca921dbd4096c0b46b79ab0bfd7_0","lines":"  argv = pv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":231,"col":14,"offset":5934},"end":{"line":231,"col":19,"offset":5939},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":231,"col":14,"offset":5934},"end":{"line":231,"col":15,"offset":5935},"abstract_content":"s"},"$SIGNED":{"start":{"line":231,"col":18,"offset":5938},"end":{"line":231,"col":19,"offset":5939},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2d2a0cbeecced5634fa25886a77d5678c8d9f67a40c662e5f4ab43877774af6d77cf091e1b95e7155894fa8f34119babb57510ab3bf815a6f1a1e0a90c15f1ab_0","lines":"      size_t s = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":235,"col":12,"offset":6015},"end":{"line":235,"col":17,"offset":6020},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":235,"col":12,"offset":6015},"end":{"line":235,"col":13,"offset":6016},"abstract_content":"i"},"$SIGNED":{"start":{"line":235,"col":16,"offset":6019},"end":{"line":235,"col":17,"offset":6020},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9b924d99e5867f2e976665e4e6fc28cee9bf33f98d751378595333a2eb294b4f4db96942b17a1b39cb450e44655e2b583572d9c6206ec159cfa3258cf27d7c_0","lines":"      for (i = 0; ; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":282,"col":3,"offset":6886},"end":{"line":284,"col":16,"offset":6997},"extra":{"metavars":{"$EXPR1":{"start":{"line":282,"col":8,"offset":6891},"end":{"line":282,"col":22,"offset":6905},"abstract_content":"next=num+1"},"$EXPR2":{"start":{"line":283,"col":8,"offset":6914},"end":{"line":283,"col":74,"offset":6980},"abstract_content":"next<option_count&&option_tab[next].opt_flags&PARSEOPT_ALIAS"},"$EXPR3":{"start":{"line":284,"col":8,"offset":6989},"end":{"line":284,"col":14,"offset":6995},"abstract_content":"next++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2ad443fcdf93167eeea95459c5a81c377a65bf7a5ff3859b9181e7174836c92408eabc578b5fcd10b21d30d4cc58fec5b8ff10d2e538ec34ac20b7ea4baf121a_0","lines":"  for (next = num + 1;\n       next < option_count && option_tab[next].opt_flags & PARSEOPT_ALIAS;\n       next++);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":282,"col":8,"offset":6891},"end":{"line":282,"col":22,"offset":6905},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":282,"col":8,"offset":6891},"end":{"line":282,"col":12,"offset":6895},"abstract_content":"next"},"$SIGNED":{"start":{"line":282,"col":21,"offset":6904},"end":{"line":282,"col":22,"offset":6905},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d884a57f968a117422465d5d152c4ab9c2c27a39e0d1dc30fbf6672d73d3108c94396b345658ddb648510bd422f05b4935ae5d1d93a897ba3cb3915243c26799_0","lines":"  for (next = num + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":286,"col":3,"offset":7001},"end":{"line":287,"col":17,"offset":7055},"extra":{"metavars":{"$EXPR1":{"start":{"line":286,"col":7,"offset":7005},"end":{"line":286,"col":21,"offset":7019},"abstract_content":"opt->->opt_flags"},"$EXPR2":{"start":{"line":286,"col":24,"offset":7022},"end":{"line":286,"col":39,"offset":7037},"abstract_content":"PARSEOPT_HIDDEN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9126065936f9b12661e5f3bba482f620b873f85d2e4674863fce162e5a380f006729dea5ef9401e5c2b277080a4376a0abf40dc3113c7fadf60b99957c346dca_0","lines":"  if (opt->opt_flags & PARSEOPT_HIDDEN)\n    return next;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":356,"col":8,"offset":8298},"end":{"line":356,"col":13,"offset":8303},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":356,"col":8,"offset":8298},"end":{"line":356,"col":9,"offset":8299},"abstract_content":"i"},"$SIGNED":{"start":{"line":356,"col":12,"offset":8302},"end":{"line":356,"col":13,"offset":8303},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9b924d99e5867f2e976665e4e6fc28cee9bf33f98d751378595333a2eb294b4f4db96942b17a1b39cb450e44655e2b583572d9c6206ec159cfa3258cf27d7c_1","lines":"  for (i = 0; i < option_count; )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":375,"col":3,"offset":8958},"end":{"line":375,"col":58,"offset":9013},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"79bdd3c5a7314c94a9583e9925f190d793a515515b29acccffdef39d639a5d0ad87fc0916dd49e3314979630531b9faee30b9789f4a2cc1319f5d0e2ef17ef64_0","lines":"  printf (_(\"Report bugs to %s.\\n\"), program_bug_address);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":378,"col":3,"offset":9039},"end":{"line":378,"col":64,"offset":9100},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"79bdd3c5a7314c94a9583e9925f190d793a515515b29acccffdef39d639a5d0ad87fc0916dd49e3314979630531b9faee30b9789f4a2cc1319f5d0e2ef17ef64_1","lines":"  printf (_(\"%s home page: <%s>\\n\"), PACKAGE_NAME, PACKAGE_URL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":417,"col":7,"offset":9892},"end":{"line":417,"col":22,"offset":9907},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":417,"col":7,"offset":9892},"end":{"line":417,"col":8,"offset":9893},"abstract_content":"n"},"$SIGNED":{"start":{"line":417,"col":11,"offset":9896},"end":{"line":417,"col":22,"offset":9907},"abstract_content":"USAGECOLUMN"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6f8b83dd49aea40707dfaabc86bd108fdc30ead9784f1f5ee9bb469616a7fbc29b3da00d079c5c0eb15d8dbc29849b6ba63f341d6877a7f620008bc067e2aeb_0","lines":"      n = USAGECOLUMN;\t\t\t\t\t\t\t\\","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":429,"col":12,"offset":10149},"end":{"line":429,"col":54,"offset":10191},"extra":{"metavars":{"$FUN":{"start":{"line":429,"col":12,"offset":10149},"end":{"line":429,"col":19,"offset":10156},"abstract_content":"ecalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"05578eaa78d4235244896062977505ad54035db68efea7bc78cb80b460c41e50ecd1eebbfb07fb51f0dac037d50ddc2c13b9f0493c9ad854636db7e4af09753f_0","lines":"  idxbuf = ecalloc (option_count, sizeof (idxbuf[0]));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unsafe-ret-snprintf-vsnprintf","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":431,"col":3,"offset":10196},"end":{"line":432,"col":60,"offset":10309},"extra":{"metavars":{"$RET":{"start":{"line":431,"col":3,"offset":10196},"end":{"line":431,"col":4,"offset":10197},"abstract_content":"n"}},"message":"The snprintf() and vsnprintf() functions return the total length of the string they tried to create. Therefore, this return value can be larger than the size of the destination buffer. If it is used unsafely, e.g. as an index to write to the destination buffer, memory corruption might occur.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://lwn.net/Articles/507319/","https://g.co/kgs/PCHQjJ","https://dustri.org/b/playing-with-weggli.html"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ad8988175a6c3cd5443bd7e8df4b4e87047ae5d466cd6167ff657acb3da5ccce9467517ecb696f6fb396d3955abde36733c54cf23fcdf32f7227bdb122c88106_0","lines":"  n = snprintf (buf, sizeof buf, \"%s %s \", _(\"Usage:\"),\n\t\tparseopt_program_name ? parseopt_program_name : progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":431,"col":7,"offset":10200},"end":{"line":432,"col":60,"offset":10309},"extra":{"metavars":{"$FUN":{"start":{"line":431,"col":7,"offset":10200},"end":{"line":431,"col":15,"offset":10208},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f1dd45fb44acd8c5a9001d42f6537b027329844110743ca261ced49ae27ba4806ca12bc73d7c5776c95acd4f30c0e2d33038c621b1bfbb6ed6b5683d1ebba085_0","lines":"  n = snprintf (buf, sizeof buf, \"%s %s \", _(\"Usage:\"),\n\t\tparseopt_program_name ? parseopt_program_name : progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":431,"col":7,"offset":10200},"end":{"line":432,"col":60,"offset":10309},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"%s %s \""},"$TYPE":{"start":{"line":408,"col":3,"offset":9710},"end":{"line":408,"col":7,"offset":9714},"abstract_content":"char"},"$LEN":{"start":{"line":408,"col":12,"offset":9719},"end":{"line":408,"col":21,"offset":9728},"abstract_content":"RMARGIN+1"},"$FUN":{"start":{"line":431,"col":7,"offset":10200},"end":{"line":431,"col":15,"offset":10208},"abstract_content":"snprintf"},"$BUF":{"start":{"line":431,"col":17,"offset":10210},"end":{"line":431,"col":20,"offset":10213},"abstract_content":"buf"},"$N":{"start":{"line":431,"col":22,"offset":10215},"end":{"line":431,"col":32,"offset":10225},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":431,"col":34,"offset":10227},"end":{"line":431,"col":42,"offset":10235},"abstract_content":"\"%s %s \""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ba365545347e406d1df708bf30676bde62791761028c5ff1db0c973cb73aab258204da4dc95ea05e17a7056b5d4c5c813542dd64afd24b57fe2e32755ffea5d6_0","lines":"  n = snprintf (buf, sizeof buf, \"%s %s \", _(\"Usage:\"),\n\t\tparseopt_program_name ? parseopt_program_name : progname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":435,"col":8,"offset":10376},"end":{"line":435,"col":20,"offset":10388},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":435,"col":8,"offset":10376},"end":{"line":435,"col":9,"offset":10377},"abstract_content":"i"},"$SIGNED":{"start":{"line":435,"col":12,"offset":10380},"end":{"line":435,"col":16,"offset":10384},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":435,"col":19,"offset":10387},"svalue_end":{"line":435,"col":20,"offset":10388},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79eb967d3128e4442a09a9bccd4eac47a04ec48f68d062dee8bcecbb1bbeb1a45b2115616d7c48b4c279c81f24b09e99c8a3a9bc75b6e80ff641b7345928ec39_0","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":435,"col":12,"offset":10380},"end":{"line":435,"col":20,"offset":10388},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":435,"col":12,"offset":10380},"end":{"line":435,"col":16,"offset":10384},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":435,"col":19,"offset":10387},"svalue_end":{"line":435,"col":20,"offset":10388},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":435,"col":19,"offset":10387},"end":{"line":435,"col":20,"offset":10388},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba734085e94e357f9f558b595cefb6df903a77340d073011ecc6fd3f04b65192fb266a1df730a2ea73f65cd31528c2b94e57a1ea089f800ea1a6b2ba15fd1612_0","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":445,"col":12,"offset":10642},"end":{"line":445,"col":17,"offset":10647},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":445,"col":12,"offset":10642},"end":{"line":445,"col":13,"offset":10643},"abstract_content":"i"},"$SIGNED":{"start":{"line":445,"col":16,"offset":10646},"end":{"line":445,"col":17,"offset":10647},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9b924d99e5867f2e976665e4e6fc28cee9bf33f98d751378595333a2eb294b4f4db96942b17a1b39cb450e44655e2b583572d9c6206ec159cfa3258cf27d7c_2","lines":"      for (i = 0; i < nidx; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":453,"col":8,"offset":10799},"end":{"line":453,"col":20,"offset":10811},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":453,"col":8,"offset":10799},"end":{"line":453,"col":9,"offset":10800},"abstract_content":"i"},"$SIGNED":{"start":{"line":453,"col":12,"offset":10803},"end":{"line":453,"col":16,"offset":10807},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":453,"col":19,"offset":10810},"svalue_end":{"line":453,"col":20,"offset":10811},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79eb967d3128e4442a09a9bccd4eac47a04ec48f68d062dee8bcecbb1bbeb1a45b2115616d7c48b4c279c81f24b09e99c8a3a9bc75b6e80ff641b7345928ec39_1","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":453,"col":12,"offset":10803},"end":{"line":453,"col":20,"offset":10811},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":453,"col":12,"offset":10803},"end":{"line":453,"col":16,"offset":10807},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":453,"col":19,"offset":10810},"svalue_end":{"line":453,"col":20,"offset":10811},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":453,"col":19,"offset":10810},"end":{"line":453,"col":20,"offset":10811},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba734085e94e357f9f558b595cefb6df903a77340d073011ecc6fd3f04b65192fb266a1df730a2ea73f65cd31528c2b94e57a1ea089f800ea1a6b2ba15fd1612_1","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":463,"col":12,"offset":11041},"end":{"line":463,"col":17,"offset":11046},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":463,"col":12,"offset":11041},"end":{"line":463,"col":13,"offset":11042},"abstract_content":"i"},"$SIGNED":{"start":{"line":463,"col":16,"offset":11045},"end":{"line":463,"col":17,"offset":11046},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9b924d99e5867f2e976665e4e6fc28cee9bf33f98d751378595333a2eb294b4f4db96942b17a1b39cb450e44655e2b583572d9c6206ec159cfa3258cf27d7c_3","lines":"      for (i = 0; i < nidx; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":467,"col":11,"offset":11174},"end":{"line":467,"col":37,"offset":11200},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":467,"col":11,"offset":11174},"end":{"line":467,"col":14,"offset":11177},"abstract_content":"len"},"$SIGNED":{"start":{"line":467,"col":17,"offset":11180},"end":{"line":467,"col":18,"offset":11181},"abstract_content":"5"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"27d5b8d3a36341077740add01a123783be00ec0760382eef0e96bbe560368cd8a317f582b23960b8ffb085c923e7546cbb8b588ad5b56d78d2ae3958f64db3f6_0","lines":"\t  size_t len = 5 + strlen (arg) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":475,"col":4,"offset":11348},"end":{"line":475,"col":25,"offset":11369},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"be8d6a2871f5d3bcfbb98aa39c8f2cc8412c2d92b0955019f12252ff602072522928d3ea7d830c3935cae2a4a7acaa1027def5d0cb3c33f26e9fd772cc23c245_0","lines":"\t  strcpy (&buf[n], arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":475,"col":4,"offset":11348},"end":{"line":475,"col":25,"offset":11369},"extra":{"metavars":{"$FUN":{"start":{"line":475,"col":4,"offset":11348},"end":{"line":475,"col":10,"offset":11354},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8330f12b11fb629e1bbe95ee7121a78ad94d58a407a50399f02f872cc94514dc84e32b9bc2e27276cba2ab83f7c1668eacf42ecf5291a980aa683f52b28b8bb0_0","lines":"\t  strcpy (&buf[n], arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":483,"col":8,"offset":11492},"end":{"line":483,"col":20,"offset":11504},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":483,"col":8,"offset":11492},"end":{"line":483,"col":9,"offset":11493},"abstract_content":"i"},"$SIGNED":{"start":{"line":483,"col":12,"offset":11496},"end":{"line":483,"col":16,"offset":11500},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":483,"col":19,"offset":11503},"svalue_end":{"line":483,"col":20,"offset":11504},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"79eb967d3128e4442a09a9bccd4eac47a04ec48f68d062dee8bcecbb1bbeb1a45b2115616d7c48b4c279c81f24b09e99c8a3a9bc75b6e80ff641b7345928ec39_2","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":483,"col":12,"offset":11496},"end":{"line":483,"col":20,"offset":11504},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":483,"col":12,"offset":11496},"end":{"line":483,"col":16,"offset":11500},"abstract_content":"nidx","propagated_value":{"svalue_start":{"line":483,"col":19,"offset":11503},"svalue_end":{"line":483,"col":20,"offset":11504},"svalue_abstract_content":"0"}},"$SIGNED":{"start":{"line":483,"col":19,"offset":11503},"end":{"line":483,"col":20,"offset":11504},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ba734085e94e357f9f558b595cefb6df903a77340d073011ecc6fd3f04b65192fb266a1df730a2ea73f65cd31528c2b94e57a1ea089f800ea1a6b2ba15fd1612_2","lines":"  for (i = nidx = 0; i < option_count; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":493,"col":12,"offset":11704},"end":{"line":493,"col":17,"offset":11709},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":493,"col":12,"offset":11704},"end":{"line":493,"col":13,"offset":11705},"abstract_content":"i"},"$SIGNED":{"start":{"line":493,"col":16,"offset":11708},"end":{"line":493,"col":17,"offset":11709},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fb9b924d99e5867f2e976665e4e6fc28cee9bf33f98d751378595333a2eb294b4f4db96942b17a1b39cb450e44655e2b583572d9c6206ec159cfa3258cf27d7c_4","lines":"      for (i = 0; i < nidx; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":497,"col":11,"offset":11859},"end":{"line":498,"col":48,"offset":11939},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":497,"col":11,"offset":11859},"end":{"line":497,"col":14,"offset":11862},"abstract_content":"len"},"$SIGNED":{"start":{"line":497,"col":17,"offset":11865},"end":{"line":497,"col":18,"offset":11866},"abstract_content":"3"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bb6767e4b5feae428cfe18f5d5b4a8bc73cde066f9f8a0768969e3bb3b95d8d725ec8ca1679b3f3a7a21b1f6ab0f78974da2a736b491ed29a718a4fd5a318db2_0","lines":"\t  size_t len = 3 + strlen (opt->opt_long)\n\t                 + (arg ? 1 + strlen (arg) : 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":504,"col":4,"offset":12054},"end":{"line":504,"col":35,"offset":12085},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"be8d6a2871f5d3bcfbb98aa39c8f2cc8412c2d92b0955019f12252ff602072522928d3ea7d830c3935cae2a4a7acaa1027def5d0cb3c33f26e9fd772cc23c245_1","lines":"\t  strcpy (&buf[n], opt->opt_long);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":504,"col":4,"offset":12054},"end":{"line":504,"col":35,"offset":12085},"extra":{"metavars":{"$FUN":{"start":{"line":504,"col":4,"offset":12054},"end":{"line":504,"col":10,"offset":12060},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8330f12b11fb629e1bbe95ee7121a78ad94d58a407a50399f02f872cc94514dc84e32b9bc2e27276cba2ab83f7c1668eacf42ecf5291a980aa683f52b28b8bb0_1","lines":"\t  strcpy (&buf[n], opt->opt_long);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":509,"col":8,"offset":12177},"end":{"line":509,"col":29,"offset":12198},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"be8d6a2871f5d3bcfbb98aa39c8f2cc8412c2d92b0955019f12252ff602072522928d3ea7d830c3935cae2a4a7acaa1027def5d0cb3c33f26e9fd772cc23c245_2","lines":"\t      strcpy (&buf[n], arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":509,"col":8,"offset":12177},"end":{"line":509,"col":29,"offset":12198},"extra":{"metavars":{"$FUN":{"start":{"line":509,"col":8,"offset":12177},"end":{"line":509,"col":14,"offset":12183},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8330f12b11fb629e1bbe95ee7121a78ad94d58a407a50399f02f872cc94514dc84e32b9bc2e27276cba2ab83f7c1668eacf42ecf5291a980aa683f52b28b8bb0_2","lines":"\t      strcpy (&buf[n], arg);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":517,"col":3,"offset":12279},"end":{"line":517,"col":17,"offset":12293},"extra":{"metavars":{"$PTR":{"start":{"line":517,"col":9,"offset":12285},"end":{"line":517,"col":15,"offset":12291},"abstract_content":"idxbuf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"811d808845787712e14dc17aaecd4d09cc1241936e06a52874c9ecde00a5db6cdb8da904cda81b075c5c235f9d79038eaee1f216c40d24d04894bdb7c99d12e5_0","lines":"  free (idxbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":541,"col":3,"offset":13145},"end":{"line":541,"col":56,"offset":13198},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"79bdd3c5a7314c94a9583e9925f190d793a515515b29acccffdef39d639a5d0ad87fc0916dd49e3314979630531b9faee30b9789f4a2cc1319f5d0e2ef17ef64_2","lines":"  printf (version_etc_copyright, _(\"(C)\"), \"2011-2017\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":578,"col":12,"offset":13628},"end":{"line":578,"col":71,"offset":13687},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":12,"offset":11},"abstract_content":"opt_long"},"$FUN":{"start":{"line":578,"col":12,"offset":13628},"end":{"line":578,"col":23,"offset":13639},"abstract_content":"getopt_long"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1c5fea1279586aaa7922d6ddeebfa68f34332a09e8f475cb278c7fe1193f8e5381a1f8bf4ac6517bad2bcecb8ed7ccf1fc67766f63c983b569c5a04d17bd65bb_0","lines":"      rc = getopt_long (argc, argv, short_options, long_options, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":578,"col":31,"offset":13647},"end":{"line":578,"col":35,"offset":13651},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"66a795b54c051ab1f760573ba13f74bc01bd477662c723defdd67600e724ef841579914fbd4dace763ec889eeb277e5b75439ca921dbd4096c0b46b79ab0bfd7_1","lines":"      rc = getopt_long (argc, argv, short_options, long_options, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":580,"col":12,"offset":13706},"end":{"line":580,"col":46,"offset":13740},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":580,"col":12,"offset":13706},"end":{"line":580,"col":18,"offset":13712},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cee3313ffb3c5eb863fdc8fad2a9631e4d71104545a7bd170f20491154b28b40ed3d94565e624ab60c6e41a8ba489fdf999bbe057c3847c563079f8bb5f588af_0","lines":"      rc = getopt (argc, argv, short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","start":{"line":580,"col":26,"offset":13720},"end":{"line":580,"col":30,"offset":13724},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"66a795b54c051ab1f760573ba13f74bc01bd477662c723defdd67600e724ef841579914fbd4dace763ec889eeb277e5b75439ca921dbd4096c0b46b79ab0bfd7_2","lines":"      rc = getopt (argc, argv, short_options);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/proto.h","start":{"line":94,"col":10,"offset":3186},"end":{"line":94,"col":44,"offset":3220},"extra":{"metavars":{"$FUN":{"start":{"line":94,"col":10,"offset":3186},"end":{"line":94,"col":27,"offset":3203},"abstract_content":"_gdbm_mapped_read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c331bf0e518c5aa7d71dc4252c866a267aef448dbdf2807c89a9dc5acb62035c24550bee44606bb812c5f7ac0e770ed219276d8f55ce44958eab4ac9bd5fd1a8_0","lines":"  return _gdbm_mapped_read (dbf, buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/proto.h","start":{"line":96,"col":10,"offset":3237},"end":{"line":96,"col":37,"offset":3264},"extra":{"metavars":{"$FUN":{"start":{"line":96,"col":10,"offset":3237},"end":{"line":96,"col":14,"offset":3241},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e04a34cc77813c775a23c7ff8feaff41b0bb640c33e1781a10f78a719cb9da12a4ef20884e52e6b0682459d1deaa3b5392122b46c79c7d903daffb0002c5efeb_0","lines":"  return read (dbf->desc, buf, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":27,"col":7,"offset":872},"end":{"line":27,"col":29,"offset":894},"extra":{"metavars":{"$FUN":{"start":{"line":27,"col":7,"offset":872},"end":{"line":27,"col":12,"offset":877},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"674f1fad5ef85d1f0e80de84dedd225eaa65bde8a093ae298b7defb25264e6e3ff94ee22fa320f53b3e93f834b309cc39e9125abeb980f955df8bf7577ed306e_0","lines":"  if (fstat (src->desc, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":32,"col":7,"offset":1001},"end":{"line":32,"col":47,"offset":1041},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"own"},"$FUN":{"start":{"line":32,"col":7,"offset":1001},"end":{"line":32,"col":13,"offset":1007},"abstract_content":"fchown"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d3ccd12fe15677ab3cde8990da7d18357fac670827cf3b2bd53b7cca92b32d9986a396302f067c820f5e4338259f9f3bee137d8b6d164bc60438d30a5aeda055_0","lines":"  if (fchown (dst->desc, st.st_uid, st.st_gid))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":37,"col":3,"offset":1143},"end":{"line":41,"col":6,"offset":1282},"extra":{"metavars":{"$EXPR1":{"start":{"line":37,"col":26,"offset":1166},"end":{"line":37,"col":36,"offset":1176},"abstract_content":"st.st_mode"},"$EXPR2":{"start":{"line":37,"col":39,"offset":1179},"end":{"line":37,"col":43,"offset":1183},"abstract_content":"0777"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eea85beeb1477a689d1a6813907bf743cfcdd4e94b8a5331c2b8977be0443b24117f935e78de2f331bf4e4b7e72c55b90d7ebac028bc230de1d7004bced827d6_0","lines":"  if (fchmod (dst->desc, st.st_mode & 0777))\n    {\n      GDBM_SET_ERRNO (dst, GDBM_ERR_FILE_MODE, dst->need_recovery);\n      return -1;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":37,"col":7,"offset":1147},"end":{"line":37,"col":44,"offset":1184},"extra":{"metavars":{"$5":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":7,"offset":6},"abstract_content":"mod"},"$FUN":{"start":{"line":37,"col":7,"offset":1147},"end":{"line":37,"col":13,"offset":1153},"abstract_content":"fchmod"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f205729a380e99353bfdc944efedd40e9af979db0ccd21b3984cb52fe77b63c15044da8ab04131e3e72d3d09fd5c9457109c29a8184970f3f96019be9220bde3_0","lines":"  if (fchmod (dst->desc, st.st_mode & 0777))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":56,"col":9,"offset":1501},"end":{"line":56,"col":21,"offset":1513},"extra":{"metavars":{"$X":{"start":{"line":55,"col":9,"offset":1452},"end":{"line":55,"col":22,"offset":1465},"abstract_content":"strlen(name)"},"$Y":{"start":{"line":55,"col":25,"offset":1468},"end":{"line":55,"col":47,"offset":1490},"abstract_content":"sizeof INITIAL_SUFFIX"},"$FUN":{"start":{"line":56,"col":9,"offset":1501},"end":{"line":56,"col":15,"offset":1507},"abstract_content":"malloc"},"$N":{"start":{"line":56,"col":17,"offset":1509},"end":{"line":56,"col":20,"offset":1512},"abstract_content":"len","propagated_value":{"svalue_start":{"line":55,"col":9,"offset":1452},"svalue_end":{"line":55,"col":47,"offset":1490},"svalue_abstract_content":"strlen(name)+sizeof INITIAL_SUFFIX"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"95e3da832ed062c629671be82431c13ed0d6b5241ba50b65845d3c3274d2a6b4f0f04f5a41bd038af7f5c898e26c5a2ee048dfc96b6500161bc3bbc093737807_0","lines":"  buf = malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":56,"col":9,"offset":1501},"end":{"line":56,"col":21,"offset":1513},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":9,"offset":1501},"end":{"line":56,"col":15,"offset":1507},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"56d6aef7591abd1b19b1f851f7b5e904054153f33c715511ff88c08c65ea5f811170062391aef01aa784b0b00f1ff448a8d4597201937fab7a8a07429c5ffe38_0","lines":"  buf = malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":59,"col":3,"offset":1546},"end":{"line":59,"col":21,"offset":1564},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"50cfc8ede2bfeea97c9e1aea273ce4cbbfaf05726ef42f937b310c32d8eb09a02dc6376bfee53837e8723e1bcc2a3c73e38e0f9cf0c9dfe2aec0aaedd585d5eb_0","lines":"  strcpy (buf, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":59,"col":3,"offset":1546},"end":{"line":59,"col":21,"offset":1564},"extra":{"metavars":{"$FUN":{"start":{"line":59,"col":3,"offset":1546},"end":{"line":59,"col":9,"offset":1552},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"99841ba2801649e6df5f43975971852bd7b0046a7373916e09831c0c7842f08d183d2b64a6dddb2599a1ccdebcfd6fd7335f03432ce1e7fb2fe750defa45664e_0","lines":"  strcpy (buf, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":60,"col":3,"offset":1568},"end":{"line":60,"col":29,"offset":1594},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":60,"col":3,"offset":1568},"end":{"line":60,"col":10,"offset":1575},"abstract_content":"suf_pos"},"$SIGNED":{"start":{"line":60,"col":28,"offset":1593},"end":{"line":60,"col":29,"offset":1594},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6641831a098b2196a1962448471192dc84f0e046264b82fa9bd93f725b9c47c506294a6ee24ebfbca8b9867e9b63a9f380f08bb88c2fd19cdc68d1503553c1a_0","lines":"  suf_pos = strlen (buf) + 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":61,"col":3,"offset":1599},"end":{"line":61,"col":14,"offset":1610},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":61,"col":3,"offset":1599},"end":{"line":61,"col":10,"offset":1606},"abstract_content":"suf_len"},"$SIGNED":{"start":{"line":61,"col":13,"offset":1609},"end":{"line":61,"col":14,"offset":1610},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8bb909d3f8e5ebb7c2d491f23a68b178e3df8bf8a19418dee14d46434db2035b04554b2183cc93ca6e0f433a9463cc4b6e19e2b68981cad8179386faad30d1a3_0","lines":"  suf_len = 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":62,"col":3,"offset":1614},"end":{"line":62,"col":31,"offset":1642},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"50cfc8ede2bfeea97c9e1aea273ce4cbbfaf05726ef42f937b310c32d8eb09a02dc6376bfee53837e8723e1bcc2a3c73e38e0f9cf0c9dfe2aec0aaedd585d5eb_1","lines":"  strcat (buf, INITIAL_SUFFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":62,"col":3,"offset":1614},"end":{"line":62,"col":31,"offset":1642},"extra":{"metavars":{"$FUN":{"start":{"line":62,"col":3,"offset":1614},"end":{"line":62,"col":9,"offset":1620},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf0a19ade005384e53224d5e4a55f47ff03f1054ba4f9eaa42e5606e5a3e7d6c0c35782d1af92140007dd0d6bd3b6b61f1ee1c3630f7ce15b8c05a1dec13041c_0","lines":"  strcat (buf, INITIAL_SUFFIX);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":64,"col":10,"offset":1654},"end":{"line":64,"col":28,"offset":1672},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"96e29311c38c2254fcb5f3a970fea7d59a9426690513ed084e53ff10df17e49f2f7607ee19478bba5e50b81b5c43289569a242eabca141860e499466fa96c179_0","lines":"  while (access (buf, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":64,"col":10,"offset":1654},"end":{"line":64,"col":28,"offset":1672},"extra":{"metavars":{"$FUN":{"start":{"line":64,"col":10,"offset":1654},"end":{"line":64,"col":16,"offset":1660},"abstract_content":"access"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"33d2b4034ec2c7bb17c349bfd215702e77357257ec2935311c2b4b244d47ac02c014479dc2a847d70c3fe1a235b74948b0928a1a829515e73b8f1d281071220a_0","lines":"  while (access (buf, F_OK) == 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":73,"col":18,"offset":1834},"end":{"line":73,"col":38,"offset":1854},"extra":{"metavars":{"$FUN":{"start":{"line":73,"col":18,"offset":1834},"end":{"line":73,"col":25,"offset":1841},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"96fe35af163ea67148488cec5206c64cec0a71fa9b3f5686b6b51023d4214ee9563bd1f22799f93639e9e3f2369038fb110904bfe04757b016e92c19ea753bdd_0","lines":"\t      char *p = realloc (buf, ++len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-use-after-free","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":76,"col":5,"offset":1879},"end":{"line":76,"col":28,"offset":1902},"extra":{"metavars":{"$FUN":{"start":{"line":76,"col":5,"offset":1879},"end":{"line":76,"col":15,"offset":1889},"abstract_content":"SAVE_ERRNO"},"$PTR":{"start":{"line":76,"col":23,"offset":1897},"end":{"line":76,"col":26,"offset":1900},"abstract_content":"buf"}},"message":"The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/416","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"b5184dc71705b0ba170539798b52b30cca7b962393b46b8da8f507cc3925d9352771a92d0cb879e63b32e13b7e1acae658c75c669f829263fdd01e01ac84248e_0","lines":"\t\t  SAVE_ERRNO (free (buf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":79,"col":8,"offset":1932},"end":{"line":79,"col":59,"offset":1983},"extra":{"metavars":{"$FUN":{"start":{"line":79,"col":8,"offset":1932},"end":{"line":79,"col":15,"offset":1939},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6d28284119b34ee7f39b9529b0cfc9cc53d549f97478e4a0a4d317e06aa68607d8ffa0e7ec12b7f3d98dc2b1459c86ec8f055239172fadb001542083e339f4e8_0","lines":"\t      memmove (p + suf_pos + 1, p + suf_pos, suf_len + 2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":114,"col":3,"offset":2509},"end":{"line":130,"col":6,"offset":2929},"extra":{"metavars":{"$EXPR1":{"start":{"line":114,"col":7,"offset":2513},"end":{"line":114,"col":12,"offset":2518},"abstract_content":"flags"},"$EXPR2":{"start":{"line":114,"col":15,"offset":2521},"end":{"line":114,"col":31,"offset":2537},"abstract_content":"GDBM_RCVR_BACKUP"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3408b58ceb98f66e4b29e360829dbb454409752a88f2d00868e8f2a2ee996dec0f5b08bbd4bc7931b53c76327a8ecab915d06d548e4f65a4de03f7f868fa7ed0_0","lines":"  if (flags & GDBM_RCVR_BACKUP)\n    {\n      char *bkname = backup_name (dbf->name);\n      if (!bkname)\n\t{\n\t  SAVE_ERRNO (gdbm_close (new_dbf));\n\t  GDBM_SET_ERRNO (NULL, GDBM_BACKUP_FAILED, FALSE);\n\t  return -1;\n\t}\n      if (rename (dbf->name, bkname) != 0)\n\t{\n\t  SAVE_ERRNO (gdbm_close (new_dbf); free (bkname));\n\t  GDBM_SET_ERRNO (NULL, GDBM_BACKUP_FAILED, FALSE);\n\t  return -1;\n\t}\n      rcvr->backup_name = bkname;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":123,"col":11,"offset":2731},"end":{"line":123,"col":37,"offset":2757},"extra":{"metavars":{"$FUN":{"start":{"line":123,"col":11,"offset":2731},"end":{"line":123,"col":17,"offset":2737},"abstract_content":"rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b5f976385295cdf667cd6e7699aafa2cbbcd3e8fd574e925ba26e411754ac143d0c36d920afaf6262d457d639deef72eccc7947dabcc347608662e8d9f550352_0","lines":"      if (rename (dbf->name, bkname) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":134,"col":7,"offset":2979},"end":{"line":134,"col":40,"offset":3012},"extra":{"metavars":{"$FUN":{"start":{"line":134,"col":7,"offset":2979},"end":{"line":134,"col":13,"offset":2985},"abstract_content":"rename"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b5f976385295cdf667cd6e7699aafa2cbbcd3e8fd574e925ba26e411754ac143d0c36d920afaf6262d457d639deef72eccc7947dabcc347608662e8d9f550352_1","lines":"  if (rename (new_dbf->name, dbf->name) != 0)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":145,"col":3,"offset":3283},"end":{"line":145,"col":22,"offset":3302},"extra":{"metavars":{"$PTR":{"start":{"line":145,"col":9,"offset":3289},"end":{"line":145,"col":20,"offset":3300},"abstract_content":"dbf->->header"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"452f5b2ba074f4a38c677b3e923fc1bb351f65f7aec49016b18c8720ca9c582dd3627e366781ed71f5bc985c2af5370c0dea6104f7153d691e207d01f03a21c3_0","lines":"  free (dbf->header);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":146,"col":3,"offset":3305},"end":{"line":146,"col":19,"offset":3321},"extra":{"metavars":{"$PTR":{"start":{"line":146,"col":9,"offset":3311},"end":{"line":146,"col":17,"offset":3319},"abstract_content":"dbf->->dir"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"18383f1e2a8ec915c7404be7fdbd6b9ff23b9630dbc799e8e283e72e5ed702e8ea9c6b30b506f4eeb56f186cc0a8a61a3759c43a4e2ba426e570fe8cca1af311_0","lines":"  free (dbf->dir);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":152,"col":5,"offset":3414},"end":{"line":152,"col":43,"offset":3452},"extra":{"metavars":{"$PTR":{"start":{"line":152,"col":11,"offset":3420},"end":{"line":152,"col":41,"offset":3450},"abstract_content":"dbf->->bucket_cache[i].ca_bucket"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2d775e0ca9b6382c54f491765e0505949326112c120bcaa74672082d52362803391647b1c88201ce3788a77806a2163a6309ef688f10ea4d3bbc234c1aba893_0","lines":"\t   free (dbf->bucket_cache[i].ca_bucket);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":153,"col":5,"offset":3457},"end":{"line":153,"col":46,"offset":3498},"extra":{"metavars":{"$PTR":{"start":{"line":153,"col":11,"offset":3463},"end":{"line":153,"col":44,"offset":3496},"abstract_content":"dbf->->bucket_cache[i].ca_data.dptr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cf3e1bacecdb408744f7ed4a7059f8f99c91a4a706e9a76cec4c5ab1838254825d7687c2e3a4c578d69ee9f382b659a80216d53c6cbeb2de519a45a2b1ec2209_0","lines":"\t   free (dbf->bucket_cache[i].ca_data.dptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":155,"col":7,"offset":3509},"end":{"line":155,"col":32,"offset":3534},"extra":{"metavars":{"$PTR":{"start":{"line":155,"col":13,"offset":3515},"end":{"line":155,"col":30,"offset":3532},"abstract_content":"dbf->->bucket_cache"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7271536e2cfbd178e1d6e3722fa750283f148fd1eadf05e9004a4704d459813fdb754c2d76a78ae7929a2f361586cc28a63a9d069b2dc8f34e1e75830be5029a_0","lines":"      free (dbf->bucket_cache);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":171,"col":4,"offset":4132},"end":{"line":171,"col":25,"offset":4153},"extra":{"metavars":{"$PTR":{"start":{"line":171,"col":10,"offset":4138},"end":{"line":171,"col":23,"offset":4151},"abstract_content":"new_dbf->->name"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a403b957e65e45aef9b5096b9768be3d05a87ecfddc4bf96f7698dc03d5149170cda8dc1fdb8ae48a29b91b6c2e3679ba6bbb28744367b8e32c51cc73418334d_0","lines":"   free (new_dbf->name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":172,"col":4,"offset":4157},"end":{"line":172,"col":19,"offset":4172},"extra":{"metavars":{"$PTR":{"start":{"line":172,"col":10,"offset":4163},"end":{"line":172,"col":17,"offset":4170},"abstract_content":"new_dbf"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"84957a86b9b300221ccb4ca571df554c54b368bfff61729ee2beca40f7740d69144bf235854b440fd4986bf019bbbb3d0ea43f38420a9ae8d3b2294ff8b3a82c_0","lines":"   free (new_dbf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":265,"col":4,"offset":6382},"end":{"line":268,"col":30,"offset":6521},"extra":{"metavars":{"$EXPR1":{"start":{"line":265,"col":8,"offset":6386},"end":{"line":265,"col":13,"offset":6391},"abstract_content":"flags"},"$EXPR2":{"start":{"line":265,"col":16,"offset":6394},"end":{"line":265,"col":32,"offset":6410},"abstract_content":"GDBM_RCVR_ERRFUN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635500fba8a2fecef96b42ccfd8c07a8f6dd6307aab09dc2d84e449a125608f927de94551553a98ab28e73a9b42a7c74068a0af071a10fc9ef1a56d241f38114_0","lines":"\t  if (flags & GDBM_RCVR_ERRFUN)\n\t    rcvr->errfun (rcvr->data, _(\"can't read bucket #%d: %s\"),\n\t\t\t  bucket_dir,\n\t\t\t  gdbm_db_strerror (dbf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":270,"col":4,"offset":6552},"end":{"line":272,"col":16,"offset":6670},"extra":{"metavars":{"$EXPR1":{"start":{"line":270,"col":9,"offset":6557},"end":{"line":270,"col":14,"offset":6562},"abstract_content":"flags"},"$EXPR2":{"start":{"line":270,"col":17,"offset":6565},"end":{"line":270,"col":45,"offset":6593},"abstract_content":"GDBM_RCVR_MAX_FAILED_BUCKETS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"41e8ca53cce29c81f73b880eea3b9b9298ef77835b87500e19487a50cc56d787fba4a9064e81ba0debfde4c5f1937d8c01ae52004ddcfa647b8dc234c90c7cee_0","lines":"\t  if ((flags & GDBM_RCVR_MAX_FAILED_BUCKETS)\n\t      && rcvr->failed_buckets == rcvr->max_failed_buckets)\n\t    return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":273,"col":4,"offset":6674},"end":{"line":275,"col":16,"offset":6802},"extra":{"metavars":{"$EXPR1":{"start":{"line":273,"col":9,"offset":6679},"end":{"line":273,"col":14,"offset":6684},"abstract_content":"flags"},"$EXPR2":{"start":{"line":273,"col":17,"offset":6687},"end":{"line":273,"col":39,"offset":6709},"abstract_content":"GDBM_RCVR_MAX_FAILURES"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92f8a95864ac5d3d2f166c732722194a44f681b789e9bdf8b231a8ce6663e2fbcfdcabccdb73cef3858acc2166be154c3894fe181e338d66459fec06f4a094a6_0","lines":"\t  if ((flags & GDBM_RCVR_MAX_FAILURES)\n\t      && (rcvr->failed_buckets + rcvr->failed_keys) == rcvr->max_failures)\n\t    return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":292,"col":5,"offset":7126},"end":{"line":299,"col":31,"offset":7434},"extra":{"metavars":{"$EXPR1":{"start":{"line":292,"col":9,"offset":7130},"end":{"line":292,"col":14,"offset":7135},"abstract_content":"flags"},"$EXPR2":{"start":{"line":292,"col":17,"offset":7138},"end":{"line":292,"col":33,"offset":7154},"abstract_content":"GDBM_RCVR_ERRFUN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635500fba8a2fecef96b42ccfd8c07a8f6dd6307aab09dc2d84e449a125608f927de94551553a98ab28e73a9b42a7c74068a0af071a10fc9ef1a56d241f38114_1","lines":"\t\t  if (flags & GDBM_RCVR_ERRFUN)\n\t\t    rcvr->errfun (rcvr->data,\n\t\t\t\t  _(\"can't read key pair %d:%d (%lu:%d): %s\"),\n\t\t\t\t  bucket_dir, i,\n\t\t\t\t  (unsigned long) dbf->bucket->h_table[i].data_pointer,\n\t\t\t\t  dbf->bucket->h_table[i].key_size\n\t\t\t\t    + dbf->bucket->h_table[i].data_size,\n\t\t\t\t  gdbm_db_strerror (dbf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":301,"col":5,"offset":7464},"end":{"line":303,"col":17,"offset":7575},"extra":{"metavars":{"$EXPR1":{"start":{"line":301,"col":10,"offset":7469},"end":{"line":301,"col":15,"offset":7474},"abstract_content":"flags"},"$EXPR2":{"start":{"line":301,"col":18,"offset":7477},"end":{"line":301,"col":43,"offset":7502},"abstract_content":"GDBM_RCVR_MAX_FAILED_KEYS"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d44bc650d33d34cc0d6a24c8b139302a1b0e19fd57e9e0789e224598bc0a139b0a0260eb9249e09ed1190d5dfc873acdc79039ec0b31faa9045c439094e9010e_0","lines":"\t\t  if ((flags & GDBM_RCVR_MAX_FAILED_KEYS)\n\t\t      && rcvr->failed_keys == rcvr->max_failed_keys)\n\t\t    return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":304,"col":5,"offset":7580},"end":{"line":306,"col":17,"offset":7710},"extra":{"metavars":{"$EXPR1":{"start":{"line":304,"col":10,"offset":7585},"end":{"line":304,"col":15,"offset":7590},"abstract_content":"flags"},"$EXPR2":{"start":{"line":304,"col":18,"offset":7593},"end":{"line":304,"col":40,"offset":7615},"abstract_content":"GDBM_RCVR_MAX_FAILURES"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92f8a95864ac5d3d2f166c732722194a44f681b789e9bdf8b231a8ce6663e2fbcfdcabccdb73cef3858acc2166be154c3894fe181e338d66459fec06f4a094a6_1","lines":"\t\t  if ((flags & GDBM_RCVR_MAX_FAILURES)\n\t\t      && (rcvr->failed_buckets + rcvr->failed_keys) == rcvr->max_failures)\n\t\t    return -1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":322,"col":9,"offset":8095},"end":{"line":328,"col":48,"offset":8374},"extra":{"metavars":{"$EXPR1":{"start":{"line":322,"col":13,"offset":8099},"end":{"line":322,"col":18,"offset":8104},"abstract_content":"flags"},"$EXPR2":{"start":{"line":322,"col":21,"offset":8107},"end":{"line":322,"col":37,"offset":8123},"abstract_content":"GDBM_RCVR_ERRFUN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635500fba8a2fecef96b42ccfd8c07a8f6dd6307aab09dc2d84e449a125608f927de94551553a98ab28e73a9b42a7c74068a0af071a10fc9ef1a56d241f38114_2","lines":"\t\t      if (flags & GDBM_RCVR_ERRFUN)\n\t\t\trcvr->errfun (rcvr->data,\n\t\t          _(\"ignoring duplicate key %d:%d (%lu:%d)\"),\n\t\t\t  bucket_dir, i,\n\t\t\t  (unsigned long) dbf->bucket->h_table[i].data_pointer,\n\t\t\t  dbf->bucket->h_table[i].key_size\n\t\t\t\t      + dbf->bucket->h_table[i].data_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":332,"col":9,"offset":8422},"end":{"line":339,"col":34,"offset":8733},"extra":{"metavars":{"$EXPR1":{"start":{"line":332,"col":13,"offset":8426},"end":{"line":332,"col":18,"offset":8431},"abstract_content":"flags"},"$EXPR2":{"start":{"line":332,"col":21,"offset":8434},"end":{"line":332,"col":37,"offset":8450},"abstract_content":"GDBM_RCVR_ERRFUN"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"635500fba8a2fecef96b42ccfd8c07a8f6dd6307aab09dc2d84e449a125608f927de94551553a98ab28e73a9b42a7c74068a0af071a10fc9ef1a56d241f38114_3","lines":"\t\t      if (flags & GDBM_RCVR_ERRFUN)\n\t\t\trcvr->errfun (rcvr->data,\n\t\t\t  _(\"fatal: can't store element %d:%d (%lu:%d): %s\"),\n\t\t\t  bucket_dir, i,\n\t\t\t  (unsigned long) dbf->bucket->h_table[i].data_pointer,\n\t\t\t  dbf->bucket->h_table[i].key_size\n\t\t\t\t    + dbf->bucket->h_table[i].data_size,\n\t\t\t  gdbm_db_strerror (new_dbf));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":381,"col":3,"offset":9484},"end":{"line":420,"col":6,"offset":10449},"extra":{"metavars":{"$EXPR1":{"start":{"line":381,"col":8,"offset":9489},"end":{"line":381,"col":13,"offset":9494},"abstract_content":"flags"},"$EXPR2":{"start":{"line":381,"col":16,"offset":9497},"end":{"line":381,"col":31,"offset":9512},"abstract_content":"GDBM_RCVR_FORCE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4dba2322410375be2c75fcb2ce7a6dfc01a05248c6465658d9d9f578fa0fa877b03f1deef02fb7b79de7b1f9504bc51b2b8b634412f7560019e453c4494d22cd_0","lines":"  if ((flags & GDBM_RCVR_FORCE) || check_db (dbf))\n    {\n      gdbm_clear_error (dbf);\n      len = strlen (dbf->name);\n      new_name = malloc (len + sizeof (TMPSUF));\n      if (!new_name)\n\t{\n\t  GDBM_SET_ERRNO (NULL, GDBM_MALLOC_ERROR, FALSE);\n\t  return -1;\n\t}\n      strcat (strcpy (new_name, dbf->name), TMPSUF);\n  \n      fd = mkstemp (new_name);\n      if (fd == -1)\n\t{\n\t  GDBM_SET_ERRNO (NULL, GDBM_FILE_OPEN_ERROR, FALSE);\n\t  free (new_name);\n\t  return -1;\n\t}\n  \n      new_dbf = gdbm_fd_open (fd, new_name, dbf->header->block_size,\n\t\t\t      GDBM_WRCREAT\n\t\t\t      | (dbf->cloexec ? GDBM_CLOEXEC : 0)\n\t\t\t      | GDBM_CLOERROR, dbf->fatal_err);\n  \n      SAVE_ERRNO (free (new_name));\n  \n      if (new_dbf == NULL)\n\t{\n\t  GDBM_SET_ERRNO (NULL, GDBM_REORGANIZE_FAILED, FALSE);\n\t  return -1;\n\t}\n\n      rc = run_recovery (dbf, new_dbf, rcvr, flags);\n      \n      if (rc == 0)\n\trc = _gdbm_finish_transfer (dbf, new_dbf, rcvr, flags);\n      else\n\tgdbm_close (new_dbf);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":385,"col":18,"offset":9618},"end":{"line":385,"col":48,"offset":9648},"extra":{"metavars":{"$FUN":{"start":{"line":385,"col":18,"offset":9618},"end":{"line":385,"col":24,"offset":9624},"abstract_content":"malloc"},"$X":{"start":{"line":385,"col":26,"offset":9626},"end":{"line":385,"col":29,"offset":9629},"abstract_content":"len"},"$Y":{"start":{"line":385,"col":32,"offset":9632},"end":{"line":385,"col":46,"offset":9646},"abstract_content":"sizeof TMPSUF"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6b82ecc72e6aff872b4c9beeecd99e893009a6030827288492062ad01c7653d5a5d29538e7f1480fb24bb2fe8525a19cb316f3cbe9658a0d69934d71b96e5f4a_0","lines":"      new_name = malloc (len + sizeof (TMPSUF));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":385,"col":18,"offset":9618},"end":{"line":385,"col":48,"offset":9648},"extra":{"metavars":{"$FUN":{"start":{"line":385,"col":18,"offset":9618},"end":{"line":385,"col":24,"offset":9624},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"56d6aef7591abd1b19b1f851f7b5e904054153f33c715511ff88c08c65ea5f811170062391aef01aa784b0b00f1ff448a8d4597201937fab7a8a07429c5ffe38_1","lines":"      new_name = malloc (len + sizeof (TMPSUF));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":391,"col":7,"offset":9749},"end":{"line":391,"col":52,"offset":9794},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"50cfc8ede2bfeea97c9e1aea273ce4cbbfaf05726ef42f937b310c32d8eb09a02dc6376bfee53837e8723e1bcc2a3c73e38e0f9cf0c9dfe2aec0aaedd585d5eb_2","lines":"      strcat (strcpy (new_name, dbf->name), TMPSUF);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":391,"col":7,"offset":9749},"end":{"line":391,"col":52,"offset":9794},"extra":{"metavars":{"$FUN":{"start":{"line":391,"col":7,"offset":9749},"end":{"line":391,"col":13,"offset":9755},"abstract_content":"strcat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bf0a19ade005384e53224d5e4a55f47ff03f1054ba4f9eaa42e5606e5a3e7d6c0c35782d1af92140007dd0d6bd3b6b61f1ee1c3630f7ce15b8c05a1dec13041c_1","lines":"      strcat (strcpy (new_name, dbf->name), TMPSUF);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":391,"col":15,"offset":9757},"end":{"line":391,"col":43,"offset":9785},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"50cfc8ede2bfeea97c9e1aea273ce4cbbfaf05726ef42f937b310c32d8eb09a02dc6376bfee53837e8723e1bcc2a3c73e38e0f9cf0c9dfe2aec0aaedd585d5eb_3","lines":"      strcat (strcpy (new_name, dbf->name), TMPSUF);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":391,"col":15,"offset":9757},"end":{"line":391,"col":43,"offset":9785},"extra":{"metavars":{"$FUN":{"start":{"line":391,"col":15,"offset":9757},"end":{"line":391,"col":21,"offset":9763},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"99841ba2801649e6df5f43975971852bd7b0046a7373916e09831c0c7842f08d183d2b64a6dddb2599a1ccdebcfd6fd7335f03432ce1e7fb2fe750defa45664e_1","lines":"      strcat (strcpy (new_name, dbf->name), TMPSUF);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":393,"col":12,"offset":9810},"end":{"line":393,"col":30,"offset":9828},"extra":{"metavars":{"$FUN":{"start":{"line":393,"col":12,"offset":9810},"end":{"line":393,"col":19,"offset":9817},"abstract_content":"mkstemp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"04f915901eff7c4f69437715a8f67df5c8f4aad9db8d0723d438570481f32e47f6328bbd7c2dad49ea62ff56823970f59ebf0ea2220cb232ab10565b924b3397_0","lines":"      fd = mkstemp (new_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":401,"col":17,"offset":9964},"end":{"line":404,"col":42,"offset":10125},"extra":{"metavars":{"$FUN":{"start":{"line":401,"col":17,"offset":9964},"end":{"line":401,"col":29,"offset":9976},"abstract_content":"gdbm_fd_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8c1a577817519c2d639951b785852d5ee147de1c410f448c82ecee2f39d507e07fe325974abed1ff49c4b6c3ee252080052934204b5a4b2be95bb23c0800de19_0","lines":"      new_dbf = gdbm_fd_open (fd, new_name, dbf->header->block_size,\n\t\t\t      GDBM_WRCREAT\n\t\t\t      | (dbf->cloexec ? GDBM_CLOEXEC : 0)\n\t\t\t      | GDBM_CLOERROR, dbf->fatal_err);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-use-after-free","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":406,"col":7,"offset":10136},"end":{"line":406,"col":35,"offset":10164},"extra":{"metavars":{"$FUN":{"start":{"line":406,"col":7,"offset":10136},"end":{"line":406,"col":17,"offset":10146},"abstract_content":"SAVE_ERRNO"},"$PTR":{"start":{"line":406,"col":25,"offset":10154},"end":{"line":406,"col":33,"offset":10162},"abstract_content":"new_name","propagated_value":{"svalue_start":{"line":385,"col":18,"offset":9618},"svalue_end":{"line":385,"col":48,"offset":9648},"svalue_abstract_content":"malloc(len+sizeof TMPSUF)"}}},"message":"The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur involves the system's reuse of the freed memory.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/416","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"797b2a2720ae644e2c3e710c6ed14dc188d20e0688c13dcaafb1b8b2c61adb2c7ac017b047835865901e31b5531e15624018b1032106283f523605cbd2e8715c_0","lines":"      SAVE_ERRNO (free (new_name));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":26,"col":10,"offset":930},"end":{"line":26,"col":41,"offset":961},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":26,"col":10,"offset":930},"end":{"line":26,"col":16,"offset":936},"abstract_content":"suflen"},"$SIGNED":{"start":{"line":26,"col":40,"offset":960},"end":{"line":26,"col":41,"offset":961},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a48b024ed921faf7982a5197985b552a13becee43e9c84c5cab005ba4d99540ef24f42c8ea38e12adff74d3a554e75ed313c884d688c531b37be950dfc9b2c2b_0","lines":"  size_t suflen = suf ? strlen (suf) : 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":33,"col":3,"offset":1075},"end":{"line":33,"col":52,"offset":1124},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":33,"col":3,"offset":1075},"end":{"line":33,"col":6,"offset":1078},"abstract_content":"len"},"$SIGNED":{"start":{"line":33,"col":19,"offset":1091},"end":{"line":33,"col":33,"offset":1105},"abstract_content":"dir[0]1 0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3d482c26886c73116f67b72d7552d8d4a494888b1e19f37c98a44cf468162d745127af4997940c2a1b9f8a122010698759421615e717ad89e9c6b4bcbe008e7d_0","lines":"  len = dirlen + (dir[0] ? 1 : 0) + fillen + suflen;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":34,"col":9,"offset":1134},"end":{"line":34,"col":26,"offset":1151},"extra":{"metavars":{"$FUN":{"start":{"line":34,"col":9,"offset":1134},"end":{"line":34,"col":16,"offset":1141},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"22f287b9565247fe8c79c5642f3585c356b283f713204644613051bc7efa333fce2e8dbb5992ea006a0b8d266beb2abf847cef18c14d36cc6130c0127b31064b_0","lines":"  tmp = emalloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":35,"col":3,"offset":1155},"end":{"line":35,"col":28,"offset":1180},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":3,"offset":1155},"end":{"line":35,"col":9,"offset":1161},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"232563f7df3fd10ac627ec49f27b7f0dd72e83a023dcd75d27824d695e1acf558e7f3f34afed273c1ee44ea2f11b15a667d226b88c2e5cdf597da572d9044630_0","lines":"  memcpy (tmp, dir, dirlen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":38,"col":3,"offset":1223},"end":{"line":38,"col":38,"offset":1258},"extra":{"metavars":{"$FUN":{"start":{"line":38,"col":3,"offset":1223},"end":{"line":38,"col":9,"offset":1229},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"232563f7df3fd10ac627ec49f27b7f0dd72e83a023dcd75d27824d695e1acf558e7f3f34afed273c1ee44ea2f11b15a667d226b88c2e5cdf597da572d9044630_1","lines":"  memcpy (tmp + dirlen, file, fillen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":40,"col":5,"offset":1275},"end":{"line":40,"col":48,"offset":1318},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":5,"offset":1275},"end":{"line":40,"col":11,"offset":1281},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"232563f7df3fd10ac627ec49f27b7f0dd72e83a023dcd75d27824d695e1acf558e7f3f34afed273c1ee44ea2f11b15a667d226b88c2e5cdf597da572d9044630_2","lines":"    memcpy (tmp + dirlen + fillen, suf, suflen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":58,"col":17,"offset":1572},"end":{"line":58,"col":34,"offset":1589},"extra":{"metavars":{"$FUN":{"start":{"line":58,"col":17,"offset":1572},"end":{"line":58,"col":24,"offset":1579},"abstract_content":"emalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"22f287b9565247fe8c79c5642f3585c356b283f713204644613051bc7efa333fce2e8dbb5992ea006a0b8d266beb2abf847cef18c14d36cc6130c0127b31064b_1","lines":"\t  char *user = emalloc (len + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":60,"col":4,"offset":1598},"end":{"line":60,"col":25,"offset":1619},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":4,"offset":1598},"end":{"line":60,"col":10,"offset":1604},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"232563f7df3fd10ac627ec49f27b7f0dd72e83a023dcd75d27824d695e1acf558e7f3f34afed273c1ee44ea2f11b15a667d226b88c2e5cdf597da572d9044630_3","lines":"\t  memcpy (user, p, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":63,"col":4,"offset":1667},"end":{"line":63,"col":16,"offset":1679},"extra":{"metavars":{"$PTR":{"start":{"line":63,"col":10,"offset":1673},"end":{"line":63,"col":14,"offset":1677},"abstract_content":"user"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"daa5a0bb99893ee10c669fab487f8e01eb8273c609cb44576c87ce7a0b026496720e6ffdd62a59cbe33c4b347fefc5a9fcedbd3c6675c138a0a1922d71092b95_0","lines":"\t  free (user);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":79,"col":15,"offset":1884},"end":{"line":79,"col":20,"offset":1889},"extra":{"metavars":{"$VAR":{"start":{"line":79,"col":15,"offset":1884},"end":{"line":79,"col":20,"offset":1889},"abstract_content":"state","propagated_value":{"svalue_start":{"line":74,"col":15,"offset":1840},"svalue_end":{"line":74,"col":16,"offset":1841},"svalue_abstract_content":"0"}},"$VAL1":{"start":{"line":81,"col":7,"offset":1900},"end":{"line":81,"col":8,"offset":1901},"abstract_content":"1"},"$VAL2":{"start":{"line":87,"col":7,"offset":2003},"end":{"line":87,"col":8,"offset":2004},"abstract_content":"2"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"59fca2b220296e50f9daabf35821e9605d86e5859eb429e7f061a8477bd55af7f6f23f3f40f2de67ffc6f4e441058f68dc33ee796440b52b2d884a893218fa58_0","lines":"      switch (state)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":79,"col":15,"offset":1884},"end":{"line":79,"col":20,"offset":1889},"extra":{"metavars":{"$VAR":{"start":{"line":79,"col":15,"offset":1884},"end":{"line":79,"col":20,"offset":1889},"abstract_content":"state","propagated_value":{"svalue_start":{"line":74,"col":15,"offset":1840},"svalue_end":{"line":74,"col":16,"offset":1841},"svalue_abstract_content":"0"}}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"db08cb6411902229a6a39dfed256ce89ca09383d3c8586a139da4bfdabc095bb915adb44aba6894643a6badc1d9f307cef277b0ac2a3db44cb1ef1327c1c5cf8_0","lines":"      switch (state)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":107,"col":4,"offset":2277},"end":{"line":107,"col":33,"offset":2306},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"54c624936a52e7f09df9957d5d3f639954a8cf05ce00470e393160430c601eed7e059df7bde597528b2d6bab20ea09a4f2cf437bd1ffb595fdb2189e53dc361a_0","lines":"\t  vfprintf (stdout, prompt, ap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","start":{"line":113,"col":19,"offset":2405},"end":{"line":113,"col":29,"offset":2415},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":8,"offset":7},"abstract_content":"char"},"$FUN":{"start":{"line":113,"col":19,"offset":2405},"end":{"line":113,"col":26,"offset":2412},"abstract_content":"getchar"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5d5133a289d33e065a8c70deb147cfadd4b81fd8b3dff5dd8fad32326487d40ba1bc1cefa3dc3cda2fb60f7f40cac91929e819122f0e34baaed216b3358fbdf9_0","lines":"    } while ((c = getchar ()) != EOF);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":131,"col":3,"offset":3557},"end":{"line":131,"col":47,"offset":3601},"extra":{"metavars":{"$FUN":{"start":{"line":131,"col":3,"offset":3557},"end":{"line":131,"col":11,"offset":3565},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"738d792e5a8fc9d16a8bf1713adaf66fbfeeca6e56a3163183c7175b0a4a71ae832cf227f2d5ea6ea857d1a2708abc7a1caac2689886962c184f219e013b05ba_0","lines":"  snprintf (buf, sizeof buf, \"%d\", *(int*)val);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":234,"col":7,"offset":5363},"end":{"line":235,"col":26,"offset":5415},"extra":{"metavars":{"$EXPR1":{"start":{"line":234,"col":11,"offset":5367},"end":{"line":234,"col":20,"offset":5376},"abstract_content":"vp->->flags"},"$EXPR2":{"start":{"line":234,"col":23,"offset":5379},"end":{"line":234,"col":32,"offset":5388},"abstract_content":"VARF_PROT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c3ab2563d72983790308729f4103560bb2b3324993b115200fceb97751db25ea1e56762b965d32089fee4033a172c0cb69910e40d6386415ff6d5ce38022a2b0_0","lines":"      if (vp->flags & VARF_PROT)\n\treturn VAR_ERR_BADVALUE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":242,"col":3,"offset":5518},"end":{"line":243,"col":25,"offset":5597},"extra":{"metavars":{"$EXPR1":{"start":{"line":242,"col":35,"offset":5550},"end":{"line":242,"col":44,"offset":5559},"abstract_content":"vp->->flags"},"$EXPR2":{"start":{"line":242,"col":47,"offset":5562},"end":{"line":242,"col":55,"offset":5570},"abstract_content":"VARF_SET"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"07649b6c5b4b4904fb409bc98000c2f46d350c82443c35cc81dbc4c201338c772d6d2b1b404aa984cf75fdff30e98e3dfd4bdb99f2afa17a50b754a718c8e5f9_0","lines":"  if (vp->type == VART_STRING && (vp->flags & VARF_SET))\n    free (vp->v.string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":243,"col":5,"offset":5577},"end":{"line":243,"col":25,"offset":5597},"extra":{"metavars":{"$PTR":{"start":{"line":243,"col":11,"offset":5583},"end":{"line":243,"col":23,"offset":5595},"abstract_content":"vp->->v.string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9da05eb9cd574685a736abb992783a851f875cef7b74cf0dcf17f158ac9c51bbd0fb12d36eccee942f7fc15fbcee992846633843ea456194f47a0bb8235b28a4_0","lines":"    free (vp->v.string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":267,"col":3,"offset":5918},"end":{"line":268,"col":29,"offset":5973},"extra":{"metavars":{"$EXPR1":{"start":{"line":267,"col":7,"offset":5922},"end":{"line":267,"col":16,"offset":5931},"abstract_content":"vp->->flags"},"$EXPR2":{"start":{"line":267,"col":19,"offset":5934},"end":{"line":267,"col":28,"offset":5943},"abstract_content":"VARF_PROT"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c3ab2563d72983790308729f4103560bb2b3324993b115200fceb97751db25ea1e56762b965d32089fee4033a172c0cb69910e40d6386415ff6d5ce38022a2b0_1","lines":"  if (vp->flags & VARF_PROT)\n    return VAR_ERR_BADVALUE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":292,"col":11,"offset":6365},"end":{"line":292,"col":19,"offset":6373},"extra":{"metavars":{"$VAR":{"start":{"line":292,"col":11,"offset":6365},"end":{"line":292,"col":19,"offset":6373},"abstract_content":"vp->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"986a9f8d8af023440bd8142091697ee73dddd598177fb3a769e80812325d52ffc63fa5bb1d83ab67de01a56d03def3a73a051accb3ffbc1671ad96e1d7fd7614_0","lines":"  switch (vp->type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":339,"col":12,"offset":7137},"end":{"line":339,"col":20,"offset":7145},"extra":{"metavars":{"$VAR":{"start":{"line":339,"col":12,"offset":7137},"end":{"line":339,"col":20,"offset":7145},"abstract_content":"vp->->type"},"$VAL2":{"start":{"line":341,"col":11,"offset":7164},"end":{"line":341,"col":19,"offset":7172},"abstract_content":"VART_INT"},"$VAL1":{"start":{"line":350,"col":11,"offset":7411},"end":{"line":350,"col":22,"offset":7422},"abstract_content":"VART_STRING"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"06a6cf6195efa33e6b7aa921f790f2bb81c77bde4ee5cb4fd9158b93796e8614f6598d55248943791b306b4a2bfb688f36aa9bac139d0c912628d913074b2b5e_0","lines":"\t  switch (vp->type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":339,"col":12,"offset":7137},"end":{"line":339,"col":20,"offset":7145},"extra":{"metavars":{"$VAR":{"start":{"line":339,"col":12,"offset":7137},"end":{"line":339,"col":20,"offset":7145},"abstract_content":"vp->->type"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"986a9f8d8af023440bd8142091697ee73dddd598177fb3a769e80812325d52ffc63fa5bb1d83ab67de01a56d03def3a73a051accb3ffbc1671ad96e1d7fd7614_1","lines":"\t  switch (vp->type)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","start":{"line":358,"col":10,"offset":7576},"end":{"line":361,"col":34,"offset":7672},"extra":{"metavars":{"$EXPR1":{"start":{"line":358,"col":15,"offset":7581},"end":{"line":358,"col":16,"offset":7582},"abstract_content":"c"},"$EXPR2":{"start":{"line":358,"col":19,"offset":7585},"end":{"line":358,"col":30,"offset":7596},"abstract_content":"escape(*s)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d4e4c08716959f601b79f1a0f5ea893db4a48ba36239f345e9c1b006f0b831af115648e27f02e6ef99fedf13124a8392271bbce571f8e629b88d3ea8baa8e79d_0","lines":"\t\t  else if ((c = escape (*s)))\n\t\t    fprintf (fp, \"\\\\%c\", c);\n\t\t  else\n\t\t    fprintf (fp, \"\\\\%03o\", *s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":334,"col":1,"offset":0},"end":{"line":334,"col":65,"offset":64}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":762,"col":1,"offset":0},"end":{"line":762,"col":28,"offset":27}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1291,"col":9,"offset":0},"end":{"line":1291,"col":15,"offset":6}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1296,"col":3,"offset":0},"end":{"line":1296,"col":19,"offset":16}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c:334:\n `#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":334,"col":1,"offset":0},"end":{"line":334,"col":65,"offset":64}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":762,"col":1,"offset":0},"end":{"line":762,"col":28,"offset":27}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1291,"col":9,"offset":0},"end":{"line":1291,"col":15,"offset":6}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","start":{"line":1296,"col":3,"offset":0},"end":{"line":1296,"col":19,"offset":16}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c","start":{"line":29,"col":14,"offset":0},"end":{"line":29,"col":22,"offset":8}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c","start":{"line":30,"col":1,"offset":0},"end":{"line":30,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/version.c:29:\n `__DATE__` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c","start":{"line":29,"col":14,"offset":0},"end":{"line":29,"col":22,"offset":8}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c","start":{"line":30,"col":1,"offset":0},"end":{"line":30,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":125,"col":38,"offset":0},"end":{"line":125,"col":52,"offset":14}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c:125:\n `free (bkname))` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","start":{"line":125,"col":38,"offset":0},"end":{"line":125,"col":52,"offset":14}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c:2:\n `#line 3 \"lex.c\"\n\n#define  YY_INT_ALIGNED short int\n\n/* A lexical scanner generated by flex */\n\n#define FLEX_SCANNER\n#define YY_FLEX_MAJOR_VERSION 2\n#define YY_FLEX_MINOR_VERSION 5\n#define YY_FLEX_SUBMINOR_VERSION 37\n#if YY_FLEX_SUBMINOR_VERSION > 0\n#define FLEX_BETA\n#endif\n\n/* First, we deal with  platform-specific or compiler-specific issues. */\n\n/* begin standard C headers. */\n#include <stdio.h>\n#include <string.h>\n#include <errno.h>\n#include <stdlib.h>\n\n/* end standard C headers. */\n\n/* flex integer type definitions */\n\n#ifndef FLEXINT_H\n#define FLEXINT_H\n\n/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */\n\n#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n\n/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,\n * if you want the limit (max/min) macros for int types. \n */\n#ifndef __STDC_LIMIT_MACROS\n#define __STDC_LIMIT_MACROS 1\n#endif\n\n#include <inttypes.h>\ntypedef int8_t flex_int8_t;\ntypedef uint8_t flex_uint8_t;\ntypedef int16_t flex_int16_t;\ntypedef uint16_t flex_uint16_t;\ntypedef int32_t flex_int32_t;\ntypedef uint32_t flex_uint32_t;\n#else\ntypedef signed char flex_int8_t;\ntypedef short int flex_int16_t;\ntypedef int flex_int32_t;\ntypedef unsigned char flex_uint8_t; \ntypedef unsigned short int flex_uint16_t;\ntypedef unsigned int flex_uint32_t;\n\n/* Limits of integral types. */\n#ifndef INT8_MIN\n#define INT8_MIN               (-128)\n#endif\n#ifndef INT16_MIN\n#define INT16_MIN              (-32767-1)\n#endif\n#ifndef INT32_MIN\n#define INT32_MIN              (-2147483647-1)\n#endif\n#ifndef INT8_MAX\n#define INT8_MAX               (127)\n#endif\n#ifndef INT16_MAX\n#define INT16_MAX              (32767)\n#endif\n#ifndef INT32_MAX\n#define INT32_MAX              (2147483647)\n#endif\n#ifndef UINT8_MAX\n#define UINT8_MAX              (255U)\n#endif\n#ifndef UINT16_MAX\n#define UINT16_MAX             (65535U)\n#endif\n#ifndef UINT32_MAX\n#define UINT32_MAX             (4294967295U)\n#endif\n\n#endif /* ! C99 */\n\n#endif /* ! FLEXINT_H */\n\n#ifdef __cplusplus\n\n/* The \"const\" storage-class-modifier is valid. */\n#define YY_USE_CONST\n\n#else\t/* ! __cplusplus */\n\n/* C99 requires __STDC__ to be defined as 1. */\n#if defined (__STDC__)\n\n#define YY_USE_CONST\n\n#endif\t/* defined (__STDC__) */\n#endif\t/* ! __cplusplus */\n\n#ifdef YY_USE_CONST\n#define yyconst const\n#else\n#define yyconst\n#endif\n\n/* Returned upon end-of-file. */\n#define YY_NULL 0\n\n/* Promotes a possibly negative, possibly signed char to an unsigned\n * integer for use as an array index.  If the signed char is negative,\n * we want to instead treat it as an 8-bit unsigned char, hence the\n * double cast.\n */\n#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)\n\n/* Enter a start condition.  This macro really ought to take a parameter,\n * but we do it the disgusting crufty way forced on us by the ()-less\n * definition of BEGIN.\n */\n#define BEGIN (yy_start) = 1 + 2 *\n\n/* Translate the current start state into a value that can be later handed\n * to BEGIN to return to the state.  The YYSTATE alias is for lex\n * compatibility.\n */\n#define YY_START (((yy_start) - 1) / 2)\n#define YYSTATE YY_START\n\n/* Action number for EOF rule of a given start state. */\n#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)\n\n/* Special action meaning \"start processing a new file\". */\n#define YY_NEW_FILE yyrestart(yyin  )\n\n#define YY_END_OF_BUFFER_CHAR 0\n\n/* Size of default input buffer. */\n#ifndef YY_BUF_SIZE\n#define YY_BUF_SIZE 16384\n#endif\n\n/* The state buf must be large enough to hold one state per character in the main buffer.\n */\n#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))\n\n#ifndef YY_TYPEDEF_YY_BUFFER_STATE\n#define YY_TYPEDEF_YY_BUFFER_STATE\ntypedef struct yy_buffer_state *YY_BUFFER_STATE;\n#endif\n\n#ifndef YY_TYPEDEF_YY_SIZE_T\n#define YY_TYPEDEF_YY_SIZE_T\ntypedef size_t yy_size_t;\n#endif\n\nextern yy_size_t yyleng;\n\nextern FILE *yyin, *yyout;\n\n#define EOB_ACT_CONTINUE_SCAN 0\n#define EOB_ACT_END_OF_FILE 1\n#define EOB_ACT_LAST_MATCH 2\n\n    #define YY_LESS_LINENO(n)\n    \n/* Return all but the first \"n\" matched characters back to the input stream. */\n#define yyless(n) \\\n\tdo \\\n\t\t{ \\\n\t\t/* Undo effects of setting up yytext. */ \\\n        int yyless_macro_arg = (n); \\\n        YY_LESS_LINENO(yyless_macro_arg);\\\n\t\t*yy_cp = (yy_hold_char); \\\n\t\tYY_RESTORE_YY_MORE_OFFSET \\\n\t\t(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \\\n\t\tYY_DO_BEFORE_ACTION; /* set up yytext again */ \\\n\t\t} \\\n\twhile ( 0 )\n\n#define unput(c) yyunput( c, (yytext_ptr)  )\n\n#ifndef YY_STRUCT_YY_BUFFER_STATE\n#define YY_STRUCT_YY_BUFFER_STATE\nstruct yy_buffer_state\n\t{\n\tFILE *yy_input_file;\n\n\tchar *yy_ch_buf;\t\t/* input buffer */\n\tchar *yy_buf_pos;\t\t/* current position in input buffer */\n\n\t/* Size of input buffer in bytes, not including room for EOB\n\t * characters.\n\t */\n\tyy_size_t yy_buf_size;\n\n\t/* Number of characters read into yy_ch_buf, not including EOB\n\t * characters.\n\t */\n\tyy_size_t yy_n_chars;\n\n\t/* Whether we \"own\" the buffer - i.e., we know we created it,\n\t * and can realloc() it to grow it, and should free() it to\n\t * delete it.\n\t */\n\tint yy_is_our_buffer;\n\n\t/* Whether this is an \"interactive\" input source; if so, and\n\t * if we're using stdio for input, then we want to use getc()\n\t * instead of fread(), to make sure we stop fetching input after\n\t * each newline.\n\t */\n\tint yy_is_interactive;\n\n\t/* Whether we're considered to be at the beginning of a line.\n\t * If so, '^' rules will be active on the next match, otherwise\n\t * not.\n\t */\n\tint yy_at_bol;\n\n    int yy_bs_lineno; /**< The line count. */\n    int yy_bs_column; /**< The column count. */\n    \n\t/* Whether to try to fill the input buffer when we reach the\n\t * end of it.\n\t */\n\tint yy_fill_buffer;\n\n\tint yy_buffer_status;\n\n#define YY_BUFFER_NEW 0\n#define YY_BUFFER_NORMAL 1\n\t/* When an EOF's been seen but there's still some text to process\n\t * then we mark the buffer as YY_EOF_PENDING, to indicate that we\n\t * shouldn't try reading from the input source any more.  We might\n\t * still have a bunch of tokens to match, though, because of\n\t * possible backing-up.\n\t *\n\t * When we actually see the EOF, we change the status to \"new\"\n\t * (via yyrestart()), so that the user can continue scanning by\n\t * just pointing yyin at a new input file.\n\t */\n#define YY_BUFFER_EOF_PENDING 2\n\n\t};\n#endif /* !YY_STRUCT_YY_BUFFER_STATE */\n\n/* Stack of input buffers. */\nstatic size_t yy_buffer_stack_top = 0; /**< index of top of stack. */\nstatic size_t yy_buffer_stack_max = 0; /**< capacity of stack. */\nstatic YY_BUFFER_STATE * yy_buffer_stack = 0; /**< Stack as an array. */\n\n/* We provide macros for accessing buffer states in case in the\n * future we want to put the buffer states in a more general\n * \"scanner state\".\n *\n * Returns the top of the stack, or NULL.\n */\n#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \\\n                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \\\n                          : NULL)\n\n/* Same as previous macro, but useful when we know that the buffer stack is not\n * NULL or when we need an lvalue. For internal use only.\n */\n#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]\n\n/* yy_hold_char holds the character lost when yytext is formed. */\nstatic char yy_hold_char;\nstatic yy_size_t yy_n_chars;\t\t/* number of characters read into yy_ch_buf */\nyy_size_t yyleng;\n\n/* Points to current character in buffer. */\nstatic char *yy_c_buf_p = (char *) 0;\nstatic int yy_init = 0;\t\t/* whether we need to initialize */\nstatic int yy_start = 0;\t/* start state number */\n\n/* Flag which is used to allow yywrap()'s to do buffer switches\n * instead of setting up a fresh yyin.  A bit of a hack ...\n */\nstatic int yy_did_buffer_switch_on_eof;\n\nvoid yyrestart (FILE *input_file  );\nvoid yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );\nYY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );\nvoid yy_delete_buffer (YY_BUFFER_STATE b  );\nvoid yy_flush_buffer (YY_BUFFER_STATE b  );\nvoid yypush_buffer_state (YY_BUFFER_STATE new_buffer  );\nvoid yypop_buffer_state (void );\n\nstatic void yyensure_buffer_stack (void );\nstatic void yy_load_buffer_state (void );\nstatic void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );\n\n#define YY_FLUSH_BUFFER yy_flush_buffer(YY_CURRENT_BUFFER )\n\nYY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );\nYY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );\nYY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,yy_size_t len  );\n\nvoid *yyalloc (yy_size_t  );\nvoid *yyrealloc (void *,yy_size_t  );\nvoid yyfree (void *  );\n\n#define yy_new_buffer yy_create_buffer\n\n#define yy_set_interactive(is_interactive) \\\n\t{ \\\n\tif ( ! YY_CURRENT_BUFFER ){ \\\n        yyensure_buffer_stack (); \\\n\t\tYY_CURRENT_BUFFER_LVALUE =    \\\n            yy_create_buffer(yyin,YY_BUF_SIZE ); \\\n\t} \\\n\tYY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \\\n\t}\n\n#define yy_set_bol(at_bol) \\\n\t{ \\\n\tif ( ! YY_CURRENT_BUFFER ){\\\n        yyensure_buffer_stack (); \\\n\t\tYY_CURRENT_BUFFER_LVALUE =    \\\n            yy_create_buffer(yyin,YY_BUF_SIZE ); \\\n\t} \\\n\tYY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \\\n\t}\n\n#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)\n\n/* Begin user sect3 */\n\ntypedef unsigned char YY_CHAR;\n\nFILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;\n\ntypedef int yy_state_type;\n\nextern int yylineno;\n\nint yylineno = 1;\n\nextern char *yytext;\n#define yytext_ptr yytext\n\nstatic yy_state_type yy_get_previous_state (void );\nstatic yy_state_type yy_try_NUL_trans (yy_state_type current_state  );\nstatic int yy_get_next_buffer (void );\nstatic void yy_fatal_error (yyconst char msg[]  );\n\n/* Done after the current pattern has been matched and before the\n * corresponding action - sets up yytext.\n */\n#define YY_DO_BEFORE_ACTION \\\n\t(yytext_ptr) = yy_bp; \\\n\tyyleng = (size_t) (yy_cp - yy_bp); \\\n\t(yy_hold_char) = *yy_cp; \\\n\t*yy_cp = '\\0'; \\\n\t(yy_c_buf_p) = yy_cp;\n\n#define YY_NUM_RULES 29\n#define YY_END_OF_BUFFER 30\n/* This struct is not used in this scanner,\n   but its presence is necessary. */\nstruct yy_trans_info\n\t{\n\tflex_int32_t yy_verify;\n\tflex_int32_t yy_nxt;\n\t};\nstatic yyconst flex_int16_t yy_acclist[132] =\n    {   0,\n       30,   28,   29,    6,   28,   29,   27,   29,    3,   28,\n       29,    4,   28,   29,    5,   28,   29,    6,   28,   29,\n        3,   28,   29,   18,   28,   29,   23,   28,   29,   28,\n       29,   22,   28,   29,   17,   18,   28,   29,   29,   24,\n       29,   29,   13,   16,   28,   29,   15,   16,   28,   29,\n       14,   27,   29,   16,   28,   29,   11,   13,   16,   28,\n       29,   11,   13,   16,   28,   29,   12,   13,   16,   28,\n       29,   12,   13,   16,   28,   29,   12,   13,   16,   28,\n       29,    6,    3,    2,    5,    6,    3,    3,   18,   23,\n       19,   17,   18,   24,   26,   25,   13,   15,   10,   13,\n\n       13,   11,   13,   12,   13,   12,   13,   12,   13,    3,\n       21,   20,   10,   13,    9,   13,    7,   12,   13,    8,\n       12,   13,    3,    9,   13,    3,    3,    3,    1,    2,\n        1\n    } ;\n\nstatic yyconst flex_int16_t yy_accept[87] =\n    {   0,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    2,    4,    7,    9,   12,   15,   18,   21,   24,\n       27,   30,   32,   35,   39,   40,   42,   43,   47,   51,\n       54,   57,   62,   67,   72,   77,   82,   83,   84,   85,\n       86,   87,   87,   88,   89,   90,   91,   91,   92,   92,\n       94,   94,   95,   95,   96,   97,   98,   99,  101,  102,\n      104,  106,  108,  110,  110,  110,  111,  112,  113,  115,\n      117,  120,  123,  123,  124,  126,  126,  127,  127,  128,\n      128,  129,  131,  131,  132,  132\n    } ;\n\nstatic yyconst flex_int32_t yy_ec[256] =\n    {   0,\n        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    2,    1,    4,    5,    1,    1,    1,    1,    1,\n        1,    1,    1,    6,    7,    1,    1,    8,    9,    9,\n        9,    9,    9,    9,    9,   10,   10,    1,   11,    1,\n        6,    1,   12,    1,   13,   13,   13,   13,   13,   13,\n       14,   14,   14,   14,   14,   14,   14,   14,   14,   14,\n       14,   14,   14,   14,   14,   14,   14,   15,   14,   14,\n        6,   16,    6,    1,   14,    1,   17,   13,   13,   18,\n\n       19,   20,   14,   14,   21,   14,   14,   22,   14,   23,\n       24,   25,   14,   14,   14,   14,   14,   14,   14,   15,\n       14,   14,    6,    1,    6,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1\n    } ;\n\nstatic yyconst flex_int32_t yy_meta[26] =\n    {   0,\n        1,    2,    3,    2,    1,    2,    4,    4,    4,    4,\n        2,    1,    4,    4,    4,    1,    4,    4,    4,    4,\n        4,    4,    4,    4,    4\n    } ;\n\nstatic yyconst flex_int16_t yy_base[99] =\n    {   0,\n        0,   24,   29,    0,   52,   54,   56,   58,   74,    0,\n      175,  263,  172,  263,  168,  263,    0,   61,   98,    0,\n      168,   98,  263,  120,   99,  263,  166,    0,  165,  263,\n      263,   56,   96,  136,  152,   90,  164,  162,  263,    0,\n      106,  107,  116,  109,    0,  161,  112,  263,  159,  172,\n      118,  263,  158,  263,  263,    0,  158,   19,  181,  134,\n      139,  138,   49,  111,  135,  123,  263,  263,  115,  194,\n      135,  134,  128,  128,    0,  131,  137,  147,  142,  132,\n      124,  263,  114,  263,  263,  214,  218,   69,  222,  226,\n      230,  234,  238,  242,  246,  250,  254,  258\n\n    } ;\n\nstatic yyconst flex_int16_t yy_def[99] =\n    {   0,\n       85,    1,   85,    3,   86,   86,   86,   86,   85,    9,\n       85,   85,   85,   85,   87,   85,   88,   85,   87,   89,\n       85,   90,   85,   91,   92,   85,   93,   94,   85,   85,\n       85,   94,   94,   95,   95,   35,   85,   87,   85,   88,\n       85,   85,   87,   87,   89,   85,   90,   85,   96,   91,\n       92,   85,   93,   85,   85,   94,   85,   94,   94,   94,\n       35,   35,   35,   85,   85,   87,   85,   85,   94,   94,\n       35,   35,   85,   87,   70,   85,   87,   85,   97,   98,\n       97,   85,   98,   85,    0,   85,   85,   85,   85,   85,\n       85,   85,   85,   85,   85,   85,   85,   85\n\n    } ;\n\nstatic yyconst flex_int16_t yy_nxt[289] =\n    {   0,\n       12,   13,   14,   12,   15,   12,   12,   12,   12,   12,\n       12,   16,   17,   17,   17,   12,   17,   17,   17,   17,\n       17,   17,   17,   17,   17,   18,   69,   69,   19,   20,\n       21,   14,   22,   20,   12,   20,   20,   20,   20,   23,\n       20,   24,   24,   24,   20,   24,   24,   24,   24,   24,\n       24,   24,   24,   24,   14,   26,   14,   26,   14,   26,\n       14,   26,   41,   58,   58,   42,   72,   27,   61,   27,\n       59,   27,   40,   27,   28,   29,   30,   31,   28,   31,\n       28,   32,   33,   33,   31,   28,   34,   34,   34,   28,\n       34,   34,   34,   34,   34,   34,   34,   35,   36,   43,\n\n       39,   48,   52,   60,   60,   60,   63,   41,   64,   61,\n       42,   39,   64,   49,   53,   48,   84,   43,   39,   44,\n       45,   52,   69,   69,   45,   39,   82,   49,   65,   66,\n       39,   45,   65,   53,   84,   45,   56,   44,   79,   39,\n       56,   60,   60,   60,   82,   74,   77,   56,   80,   78,\n       76,   56,   56,   61,   61,   73,   56,   71,   61,   57,\n       55,   68,   46,   56,   39,   37,   57,   56,   55,   46,\n       39,   62,   45,   37,   85,   85,   45,   85,   85,   85,\n       85,   85,   85,   45,   85,   85,   85,   45,   70,   70,\n       70,   85,   85,   70,   85,   85,   85,   70,   70,   70,\n\n       70,   75,   75,   75,   85,   85,   75,   85,   85,   85,\n       75,   75,   75,   75,   25,   25,   25,   25,   38,   38,\n       38,   38,   45,   85,   85,   45,   47,   47,   85,   47,\n       50,   85,   85,   50,   51,   51,   85,   51,   54,   54,\n       54,   54,   56,   85,   85,   56,   61,   85,   85,   61,\n       67,   67,   67,   67,   81,   81,   81,   81,   83,   83,\n       83,   83,   11,   85,   85,   85,   85,   85,   85,   85,\n       85,   85,   85,   85,   85,   85,   85,   85,   85,   85,\n       85,   85,   85,   85,   85,   85,   85,   85\n    } ;\n\nstatic yyconst flex_int16_t yy_chk[289] =\n    {   0,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,\n        1,    1,    1,    1,    1,    2,   58,   58,    2,    3,\n        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,\n        3,    3,    3,    3,    5,    5,    6,    6,    7,    7,\n        8,    8,   18,   32,   32,   18,   63,    5,   63,    6,\n       32,    7,   88,    8,    9,    9,    9,    9,    9,    9,\n        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,\n        9,    9,    9,    9,    9,    9,    9,    9,    9,   19,\n\n       19,   22,   25,   33,   33,   33,   36,   41,   42,   36,\n       41,   44,   64,   22,   25,   47,   83,   43,   43,   19,\n       24,   51,   69,   69,   24,   66,   81,   47,   42,   44,\n       74,   24,   64,   51,   80,   24,   34,   43,   77,   77,\n       34,   60,   60,   60,   79,   66,   74,   34,   78,   76,\n       73,   34,   35,   72,   71,   65,   35,   62,   61,   57,\n       53,   49,   46,   35,   38,   37,   29,   35,   27,   21,\n       15,   35,   50,   13,   11,    0,   50,    0,    0,    0,\n        0,    0,    0,   50,    0,    0,    0,   50,   59,   59,\n       59,    0,    0,   59,    0,    0,    0,   59,   59,   59,\n\n       59,   70,   70,   70,    0,    0,   70,    0,    0,    0,\n       70,   70,   70,   70,   86,   86,   86,   86,   87,   87,\n       87,   87,   89,    0,    0,   89,   90,   90,    0,   90,\n       91,    0,    0,   91,   92,   92,    0,   92,   93,   93,\n       93,   93,   94,    0,    0,   94,   95,    0,    0,   95,\n       96,   96,   96,   96,   97,   97,   97,   97,   98,   98,\n       98,   98,   85,   85,   85,   85,   85,   85,   85,   85,\n       85,   85,   85,   85,   85,   85,   85,   85,   85,   85,\n       85,   85,   85,   85,   85,   85,   85,   85\n    } ;\n\nextern int yy_flex_debug;\nint yy_flex_debug = 0;\n\nstatic yy_state_type *yy_state_buf=0, *yy_state_ptr=0;\nstatic char *yy_full_match;\nstatic int yy_lp;\n#define REJECT \\\n{ \\\n*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */ \\\nyy_cp = (yy_full_match); /* restore poss. backed-over text */ \\\n++(yy_lp); \\\ngoto find_rule; \\\n}\n\n#define yymore() yymore_used_but_not_detected\n#define YY_MORE_ADJ 0\n#define YY_RESTORE_YY_MORE_OFFSET\nchar *yytext;\n#line 1 \"lex.l\"\n#line 2 \"lex.l\"\n/* This file is part of GDBM, the GNU data base manager.\n   Copyright (C) 1990-1991, 1993, 2007, 2011, 2013, 2016-2018 Free\n   Software Foundation, Inc.\n\n   GDBM is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   GDBM is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with GDBM. If not, see <http://www.gnu.org/licenses/>.    */\n\n#include \"gdbmtool.h\"\n#include \"gram.h\"\n\nstruct context                /* Input context */\n{\n  struct context *parent;     /* Pointer to the parent context */\n  struct locus locus;         /* Locus */\n  struct point point;\n  YY_BUFFER_STATE buf;        /* Buffer */\n  instream_t input;\n};\n\nstatic struct context *context_tos;\n\n/* Advance locus to the next line */\nvoid\nadvance_line (void)\n{\n  ++context_tos->point.line;\n  context_tos->point.col = 0;\n}\n\n#define YY_USER_ACTION\t\t\t\t\t    \\\n  do\t\t\t\t\t\t\t    \\\n    {\t\t\t\t\t\t\t    \\\n      if (YYSTATE == 0)\t\t\t\t\t    \\\n\t{\t\t\t\t\t\t    \\\n\t  yylloc.beg = context_tos->point;\t\t    \\\n\t  yylloc.beg.col++;\t\t\t\t    \\\n\t}\t\t\t\t\t\t    \\\n      context_tos->point.col += yyleng;\t\t\t    \\\n      yylloc.end = context_tos->point;\t\t\t    \\\n    }\t\t\t\t\t\t\t    \\\n  while (0);\n\n#undef YY_INPUT\n#define YY_INPUT(buf,result,max_size)                                   \\\n  do\t\t\t\t\t\t\t\t\t\\\n    {\t\t\t\t\t\t\t\t\t\\\n      if (context_tos)\t\t\t\t\t\t\t\\\n        result = instream_read (context_tos->input, buf, max_size);\t\\\n      else\t\t\t\t\t\t\t\t\\\n\tresult = 0;\t\t\t\t\t\t\t\\\n    }\t\t\t\t\t\t\t\t\t\\\n  while (0);\n \nvoid string_begin (void);\nvoid string_add (const char *s, int l);\nvoid string_addc (int c);\nchar *string_end (void);\nint unescape (int c);\n\nint\ninteractive (void)\n{\n  return context_tos && instream_interactive (context_tos->input);\n}\n \nstatic struct context *\ninput_context_lookup (instream_t istr)\n{\n  struct context *cp;\n\n  for (cp = context_tos; cp; cp = cp->parent)\n    if (instream_eq (cp->input, istr))\n      break;\n  return cp;\n}\n \nint\ninput_context_push (instream_t input)\n{\n  struct context *cp;\n\n  cp = input_context_lookup (input);\n  if (cp)\n    {\n      terror (_(\"recursive sourcing\"));\n      if (cp->parent)\n\tlerror (&cp->locus, _(\"%s already sourced here\"),\n\t\tinstream_name (input));\n      return 1;\n    }\n\n  yy_switch_to_buffer (yy_create_buffer (NULL, YY_BUF_SIZE));\n\n  /* Create new context */\n\n  cp = ecalloc (1, sizeof (*cp));\n  cp->locus = yylloc;\n  cp->point.file = estrdup (instream_name (input));\n  cp->point.line = 1;\n  cp->point.col = 0;\n  \n  cp->input = input;\n  cp->buf = YY_CURRENT_BUFFER;\n  cp->parent = context_tos;\n  context_tos = cp;\n\n  return 0;\n}\n\nvoid\nlex_trace (int n)\n{\n  yy_flex_debug = n;\n}\n    \nint\ninput_context_pop (void)\n{\n  struct context *cp;\n\n  if (!context_tos)\n    return 1;\n  instream_close (context_tos->input);\n  free (context_tos->point.file);\n  memset (&yylloc, 0, sizeof (yylloc));\n  cp = context_tos->parent;\n  free (context_tos);\n  context_tos = cp;\n  if (!cp)\n    return 1;\n\n  yylloc = cp->locus;\n  yy_delete_buffer (YY_CURRENT_BUFFER);\n  yy_switch_to_buffer (cp->buf);\n\n  return 0;\n}\n\nstatic int\nt_num (int base)\n{\n  long n;\n  errno = 0;\n  n = strtol (yytext, NULL, base);\n  if (errno)\n    {\n      lerror (&yylloc, \"%s\", strerror (errno));\n      return T_BOGUS;\n    }\n  if (n < INT_MIN || n > INT_MAX)\n    {\n      lerror (&yylloc, \"value out of range\");\n      return T_BOGUS;\n    }\n  yylval.num = n;\n  return T_NUM;  \n}\n \n#define YY_NO_INPUT 1\n\n#line 734 \"lex.c\"\n\n#define INITIAL 0\n#define CMD 1\n#define STR 2\n#define MLSTR 3\n#define DEF 4\n\n#ifndef YY_NO_UNISTD_H\n/* Special case for \"unistd.h\", since it is non-ANSI. We include it way\n * down here because we want the user's section 1 to have been scanned first.\n * The user has a chance to override it with an option.\n */\n#include <unistd.h>\n#endif\n\n#ifndef YY_EXTRA_TYPE\n#define YY_EXTRA_TYPE void *\n#endif\n\nstatic int yy_init_globals (void );\n\n/* Accessor methods to globals.\n   These are made visible to non-reentrant scanners for convenience. */\n\nint yylex_destroy (void );\n\nint yyget_debug (void );\n\nvoid yyset_debug (int debug_flag  );\n\nYY_EXTRA_TYPE yyget_extra (void );\n\nvoid yyset_extra (YY_EXTRA_TYPE user_defined  );\n\nFILE *yyget_in (void );\n\nvoid yyset_in  (FILE * in_str  );\n\nFILE *yyget_out (void );\n\nvoid yyset_out  (FILE * out_str  );\n\nyy_size_t yyget_leng (void );\n\nchar *yyget_text (void );\n\nint yyget_lineno (void );\n\nvoid yyset_lineno (int line_number  );\n\n/* Macros after this point can all be overridden by user definitions in\n * section 1.\n */\n\n#ifndef YY_SKIP_YYWRAP\n#ifdef __cplusplus\nextern \"C\" int yywrap (void );\n#else\nextern int yywrap (void );\n#endif\n#endif\n\n#ifndef yytext_ptr\nstatic void yy_flex_strncpy (char *,yyconst char *,int );\n#endif\n\n#ifdef YY_NEED_STRLEN\nstatic int yy_flex_strlen (yyconst char * );\n#endif\n\n#ifndef YY_NO_INPUT\n\n#ifdef __cplusplus\nstatic int yyinput (void );\n#else\nstatic int input (void );\n#endif\n\n#endif\n\n/* Amount of stuff to slurp up with each read. */\n#ifndef YY_READ_BUF_SIZE\n#define YY_READ_BUF_SIZE 8192\n#endif\n\n/* Copy whatever the last rule matched to the standard output. */\n#ifndef ECHO\n/* This used to be an fputs(), but since the string might contain NUL's,\n * we now use fwrite().\n */\n#define ECHO do { if (fwrite( yytext, yyleng, 1, yyout )) {} } while (0)\n#endif\n\n/* Gets input and stuffs it into \"buf\".  number of characters read, or YY_NULL,\n * is returned in \"result\".\n */\n#ifndef YY_INPUT\n#define YY_INPUT(buf,result,max_size) \\\n\tif ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \\\n\t\t{ \\\n\t\tint c = '*'; \\\n\t\tsize_t n; \\\n\t\tfor ( n = 0; n < max_size && \\\n\t\t\t     (c = getc( yyin )) != EOF && c != '\\n'; ++n ) \\\n\t\t\tbuf[n] = (char) c; \\\n\t\tif ( c == '\\n' ) \\\n\t\t\tbuf[n++] = (char) c; \\\n\t\tif ( c == EOF && ferror( yyin ) ) \\\n\t\t\tYY_FATAL_ERROR( \"input in flex scanner failed\" ); \\\n\t\tresult = n; \\\n\t\t} \\\n\telse \\\n\t\t{ \\\n\t\terrno=0; \\\n\t\twhile ( (result = fread(buf, 1, max_size, yyin))==0 && ferror(yyin)) \\\n\t\t\t{ \\\n\t\t\tif( errno != EINTR) \\\n\t\t\t\t{ \\\n\t\t\t\tYY_FATAL_ERROR( \"input in flex scanner failed\" ); \\\n\t\t\t\tbreak; \\\n\t\t\t\t} \\\n\t\t\terrno=0; \\\n\t\t\tclearerr(yyin); \\\n\t\t\t} \\\n\t\t}\\\n\\\n\n#endif\n\n/* No semi-colon after return; correct usage is to write \"yyterminate();\" -\n * we don't want an extra ';' after the \"return\" because that will cause\n * some compilers to complain about unreachable statements.\n */\n#ifndef yyterminate\n#define yyterminate() return YY_NULL\n#endif\n\n/* Number of entries by which start-condition stack grows. */\n#ifndef YY_START_STACK_INCR\n#define YY_START_STACK_INCR 25\n#endif\n\n/* Report a fatal error. */\n#ifndef YY_FATAL_ERROR\n#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )\n#endif\n\n/* end tables serialization structures and prototypes */\n\n/* Default declaration of generated scanner - a define so the user can\n * easily add parameters.\n */\n#ifndef YY_DECL\n#define YY_DECL_IS_OURS 1\n\nextern int yylex (void);\n\n#define YY_DECL int yylex (void)\n#endif /* !YY_DECL */\n\n/* Code executed at the beginning of each rule, after yytext and yyleng\n * have been set up.\n */\n#ifndef YY_USER_ACTION\n#define YY_USER_ACTION\n#endif\n\n/* Code executed at the end of each rule. */\n#ifndef YY_BREAK\n#define YY_BREAK break;\n#endif\n\n#define YY_RULE_SETUP \\\n\tif ( yyleng > 0 ) \\\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_at_bol = \\\n\t\t\t\t(yytext[yyleng - 1] == '\\n'); \\\n\tYY_USER_ACTION\n\n/** The main scanner function which does all the work.\n */\nYY_DECL\n{\n\tregister yy_state_type yy_current_state;\n\tregister char *yy_cp, *yy_bp;\n\tregister int yy_act;\n    \n#line 185 \"lex.l\"\n\n#line 923 \"lex.c\"\n\n\tif ( !(yy_init) )\n\t\t{\n\t\t(yy_init) = 1;\n\n#ifdef YY_USER_INIT\n\t\tYY_USER_INIT;\n#endif\n\n        /* Create the reject buffer large enough to save one state per allowed character. */\n        if ( ! (yy_state_buf) )\n            (yy_state_buf) = (yy_state_type *)yyalloc(YY_STATE_BUF_SIZE  );\n            if ( ! (yy_state_buf) )\n                YY_FATAL_ERROR( \"out of dynamic memory in yylex()\" );\n\n\t\tif ( ! (yy_start) )\n\t\t\t(yy_start) = 1;\t/* first start state */\n\n\t\tif ( ! yyin )\n\t\t\tyyin = stdin;\n\n\t\tif ( ! yyout )\n\t\t\tyyout = stdout;\n\n\t\tif ( ! YY_CURRENT_BUFFER ) {\n\t\t\tyyensure_buffer_stack ();\n\t\t\tYY_CURRENT_BUFFER_LVALUE =\n\t\t\t\tyy_create_buffer(yyin,YY_BUF_SIZE );\n\t\t}\n\n\t\tyy_load_buffer_state( );\n\t\t}\n\n\twhile ( 1 )\t\t/* loops until end-of-file is reached */\n\t\t{\n\t\tyy_cp = (yy_c_buf_p);\n\n\t\t/* Support of yytext. */\n\t\t*yy_cp = (yy_hold_char);\n\n\t\t/* yy_bp points to the position in yy_ch_buf of the start of\n\t\t * the current run.\n\t\t */\n\t\tyy_bp = yy_cp;\n\n\t\tyy_current_state = (yy_start);\n\t\tyy_current_state += YY_AT_BOL();\n\n\t\t(yy_state_ptr) = (yy_state_buf);\n\t\t*(yy_state_ptr)++ = yy_current_state;\n\nyy_match:\n\t\tdo\n\t\t\t{\n\t\t\tregister YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];\n\t\t\twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n\t\t\t\t{\n\t\t\t\tyy_current_state = (int) yy_def[yy_current_state];\n\t\t\t\tif ( yy_current_state >= 86 )\n\t\t\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n\t\t\t\t}\n\t\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n\t\t\t*(yy_state_ptr)++ = yy_current_state;\n\t\t\t++yy_cp;\n\t\t\t}\n\t\twhile ( yy_base[yy_current_state] != 263 );\n\nyy_find_action:\n\t\tyy_current_state = *--(yy_state_ptr);\n\t\t(yy_lp) = yy_accept[yy_current_state];\nfind_rule: /* we branch to this label when backing up */\n\t\tfor ( ; ; ) /* until we find what rule we matched */\n\t\t\t{\n\t\t\tif ( (yy_lp) && (yy_lp) < yy_accept[yy_current_state + 1] )\n\t\t\t\t{\n\t\t\t\tyy_act = yy_acclist[(yy_lp)];\n\t\t\t\t\t{\n\t\t\t\t\t(yy_full_match) = yy_cp;\n\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t--yy_cp;\n\t\t\tyy_current_state = *--(yy_state_ptr);\n\t\t\t(yy_lp) = yy_accept[yy_current_state];\n\t\t\t}\n\n\t\tYY_DO_BEFORE_ACTION;\n\ndo_action:\t/* This label is used only to access EOF actions. */\n\n\t\tswitch ( yy_act )\n\t{ /* beginning of action switch */\ncase 1:\n/* rule 1 can match eol */\nYY_RULE_SETUP\n#line 186 \"lex.l\"\n{\n  char *p;\n  char *file = NULL;\n  int line, len;\n  \n  for (p = strchr (yytext, '#') + 1; *p == ' ' || *p == '\\t'; p++);\n  p += 4;\n  for (; *p == ' ' || *p == '\\t'; p++);\n\n  line = strtol (p, &p, 10);\n  for (; *p == ' ' || *p == '\\t'; p++);\n\n  if (*p == '\"')\n    {\n      p++;\n      len = strcspn (p, \"\\\"\");\n      if (p[len] == 0)\n\t{\n\t  yyerror (_(\"invalid #line statement\"));\n\t  REJECT;\n\t}\n      file = emalloc (len + 1);\n      memcpy (file, p, len);\n      file[len] = 0;\n      for (p += len + 1; *p == ' ' || *p == '\\t'; p++);\n    }\n  if (*p != '\\n' )\n    {\n      yyerror (_(\"invalid #line statement\"));\n      free (file);\n      REJECT;\n    }\n  if (file)\n    context_tos->point.file = file;\n  context_tos->point.line = line;\n  context_tos->point.col = 0;\n}\n\tYY_BREAK\ncase 2:\n/* rule 2 can match eol */\nYY_RULE_SETUP\n#line 223 \"lex.l\"\nadvance_line ();\n\tYY_BREAK\ncase 3:\nYY_RULE_SETUP\n#line 224 \"lex.l\"\n/* end-of-file comment */;\n\tYY_BREAK\n\ncase 4:\nYY_RULE_SETUP\n#line 227 \"lex.l\"\n{ BEGIN (CMD);\n            return command_lookup (\"help\", &yylloc, &yylval.cmd); }\n\tYY_BREAK\ncase 5:\nYY_RULE_SETUP\n#line 229 \"lex.l\"\n{ BEGIN (CMD);\n            return command_lookup (yytext, &yylloc, &yylval.cmd); }\n\tYY_BREAK\ncase 6:\nYY_RULE_SETUP\n#line 231 \"lex.l\"\n; \n\tYY_BREAK\n\n\ncase 7:\nYY_RULE_SETUP\n#line 235 \"lex.l\"\n{ return T_OFF; }\n\tYY_BREAK\ncase 8:\nYY_RULE_SETUP\n#line 236 \"lex.l\"\n{ return T_PAD; }\n\tYY_BREAK\ncase 9:\nYY_RULE_SETUP\n#line 237 \"lex.l\"\n{ return t_num (8); };\n\tYY_BREAK\ncase 10:\nYY_RULE_SETUP\n#line 238 \"lex.l\"\n{ return t_num (16); };\n\tYY_BREAK\ncase 11:\nYY_RULE_SETUP\n#line 239 \"lex.l\"\n{ return t_num (10); };\n\tYY_BREAK\ncase 12:\nYY_RULE_SETUP\n#line 240 \"lex.l\"\n{ if ((yylval.type = datadef_lookup (yytext)))\n                  return T_TYPE;\n                else\n\t\t  {\n\t\t    yylval.string = estrdup (yytext);\n\t\t    return T_IDENT;\n\t\t  }\n              }\n\tYY_BREAK\ncase 13:\nYY_RULE_SETUP\n#line 248 \"lex.l\"\n{ yylval.string = estrdup (yytext); return T_WORD; }\n\tYY_BREAK\ncase 14:\n/* rule 14 can match eol */\nYY_RULE_SETUP\n#line 249 \"lex.l\"\n{ advance_line (); }\n\tYY_BREAK\ncase 15:\nYY_RULE_SETUP\n#line 250 \"lex.l\"\n;\n\tYY_BREAK\ncase 16:\nYY_RULE_SETUP\n#line 251 \"lex.l\"\nreturn yytext[0]; \n\tYY_BREAK\n\n\ncase 17:\nYY_RULE_SETUP\n#line 255 \"lex.l\"\n{ yylval.string = estrdup (yytext); return T_IDENT; }\n\tYY_BREAK\ncase 18:\nYY_RULE_SETUP\n#line 256 \"lex.l\"\n{ yylval.string = estrdup (yytext); return T_WORD; }\n\tYY_BREAK\ncase 19:\nYY_RULE_SETUP\n#line 257 \"lex.l\"\n{\n                     yylval.string = emalloc (yyleng - 1);\n                     memcpy (yylval.string, yytext+1, yyleng-2);\n\t\t     yylval.string[yyleng-2] = 0;\n\t\t     return T_WORD; }\n\tYY_BREAK\ncase 20:\n*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */\n(yy_c_buf_p) = yy_cp -= 1;\nYY_DO_BEFORE_ACTION; /* set up yytext again */\nYY_RULE_SETUP\n#line 262 \"lex.l\"\n{\n                     string_begin ();\n                     string_add (yytext + 1, yyleng - 2);\n                     BEGIN (MLSTR); }\n\tYY_BREAK\ncase 21:\nYY_RULE_SETUP\n#line 266 \"lex.l\"\n{\n                     string_begin ();\n                     string_add (yytext + 1, yyleng - 3);\n\t\t     string_addc (unescape (yytext[yyleng-1]));\n                     BEGIN (STR); }\n\tYY_BREAK\ncase 22:\nYY_RULE_SETUP\n#line 271 \"lex.l\"\n{ BEGIN (INITIAL); return ';'; }\n\tYY_BREAK\ncase 23:\nYY_RULE_SETUP\n#line 272 \"lex.l\"\n; \n\tYY_BREAK\n\n\ncase 24:\nYY_RULE_SETUP\n#line 276 \"lex.l\"\n{ if (yyleng > 1)\n\t\t       string_add (yytext, yyleng - 1);\n\t\t     yylval.string = string_end ();\n\t\t     BEGIN (CMD);\n\t\t     return T_WORD; }\n\tYY_BREAK\ncase 25:\n*yy_cp = (yy_hold_char); /* undo effects of setting up yytext */\n(yy_c_buf_p) = yy_cp -= 1;\nYY_DO_BEFORE_ACTION; /* set up yytext again */\nYY_RULE_SETUP\n#line 281 \"lex.l\"\n{ string_add (yytext, yyleng - 1); }\n\tYY_BREAK\ncase 26:\nYY_RULE_SETUP\n#line 282 \"lex.l\"\n{ string_add (yytext, yyleng - 2);\n                     string_addc (unescape (yytext[yyleng-1])); }\n\tYY_BREAK\n\ncase 27:\n/* rule 27 can match eol */\nYY_RULE_SETUP\n#line 286 \"lex.l\"\n{ BEGIN (INITIAL); advance_line (); return '\\n'; }\n\tYY_BREAK\ncase 28:\nYY_RULE_SETUP\n#line 288 \"lex.l\"\nreturn yytext[0];\n\tYY_BREAK\ncase 29:\nYY_RULE_SETUP\n#line 289 \"lex.l\"\nYY_FATAL_ERROR( \"flex scanner jammed\" );\n\tYY_BREAK\n#line 1240 \"lex.c\"\n\t\t\tcase YY_STATE_EOF(INITIAL):\n\t\t\tcase YY_STATE_EOF(CMD):\n\t\t\tcase YY_STATE_EOF(STR):\n\t\t\tcase YY_STATE_EOF(MLSTR):\n\t\t\tcase YY_STATE_EOF(DEF):\n\t\t\t\tyyterminate();\n\n\tcase YY_END_OF_BUFFER:\n\t\t{\n\t\t/* Amount of text matched not including the EOB char. */\n\t\tint yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;\n\n\t\t/* Undo the effects of YY_DO_BEFORE_ACTION. */\n\t\t*yy_cp = (yy_hold_char);\n\t\tYY_RESTORE_YY_MORE_OFFSET\n\n\t\tif ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )\n\t\t\t{\n\t\t\t/* We're scanning a new file or input source.  It's\n\t\t\t * possible that this happened because the user\n\t\t\t * just pointed yyin at a new source and called\n\t\t\t * yylex().  If so, then we have to assure\n\t\t\t * consistency between YY_CURRENT_BUFFER and our\n\t\t\t * globals.  Here is the right place to do so, because\n\t\t\t * this is the first action (other than possibly a\n\t\t\t * back-up) that will match for the new input source.\n\t\t\t */\n\t\t\t(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;\n\t\t\tYY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin;\n\t\t\tYY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;\n\t\t\t}\n\n\t\t/* Note that here we test for yy_c_buf_p \"<=\" to the position\n\t\t * of the first EOB in the buffer, since yy_c_buf_p will\n\t\t * already have been incremented past the NUL character\n\t\t * (since all states make transitions on EOB to the\n\t\t * end-of-buffer state).  Contrast this with the test\n\t\t * in input().\n\t\t */\n\t\tif ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )\n\t\t\t{ /* This was really a NUL. */\n\t\t\tyy_state_type yy_next_state;\n\n\t\t\t(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;\n\n\t\t\tyy_current_state = yy_get_previous_state(  );\n\n\t\t\t/* Okay, we're now positioned to make the NUL\n\t\t\t * transition.  We couldn't have\n\t\t\t * yy_get_previous_state() go ahead and do it\n\t\t\t * for us because it doesn't know how to deal\n\t\t\t * with the possibility of jamming (and we don't\n\t\t\t * want to build jamming into it because then it\n\t\t\t * will run more slowly).\n\t\t\t */\n\n\t\t\tyy_next_state = yy_try_NUL_trans( yy_current_state );\n\n\t\t\tyy_bp = (yytext_ptr) + YY_MORE_ADJ;\n\n\t\t\tif ( yy_next_state )\n\t\t\t\t{\n\t\t\t\t/* Consume the NUL. */\n\t\t\t\tyy_cp = ++(yy_c_buf_p);\n\t\t\t\tyy_current_state = yy_next_state;\n\t\t\t\tgoto yy_match;\n\t\t\t\t}\n\n\t\t\telse\n\t\t\t\t{\n\t\t\t\tyy_cp = (yy_c_buf_p);\n\t\t\t\tgoto yy_find_action;\n\t\t\t\t}\n\t\t\t}\n\n\t\telse switch ( yy_get_next_buffer(  ) )\n\t\t\t{\n\t\t\tcase EOB_ACT_END_OF_FILE:\n\t\t\t\t{\n\t\t\t\t(yy_did_buffer_switch_on_eof) = 0;\n\n\t\t\t\tif ( yywrap( ) )\n\t\t\t\t\t{\n\t\t\t\t\t/* Note: because we've taken care in\n\t\t\t\t\t * yy_get_next_buffer() to have set up\n\t\t\t\t\t * yytext, we can now set up\n\t\t\t\t\t * yy_c_buf_p so that if some total\n\t\t\t\t\t * hoser (like flex itself) wants to\n\t\t\t\t\t * call the scanner after we return the\n\t\t\t\t\t * YY_NULL, it'll still work - another\n\t\t\t\t\t * YY_NULL will get returned.\n\t\t\t\t\t */\n\t\t\t\t\t(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;\n\n\t\t\t\t\tyy_act = YY_STATE_EOF(YY_START);\n\t\t\t\t\tgoto do_action;\n\t\t\t\t\t}\n\n\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\tif ( ! (yy_did_buffer_switch_on_eof) )\n\t\t\t\t\t\tYY_NEW_FILE;\n\t\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\tcase EOB_ACT_CONTINUE_SCAN:\n\t\t\t\t(yy_c_buf_p) =\n\t\t\t\t\t(yytext_ptr) + yy_amount_of_matched_text;\n\n\t\t\t\tyy_current_state = yy_get_previous_state(  );\n\n\t\t\t\tyy_cp = (yy_c_buf_p);\n\t\t\t\tyy_bp = (yytext_ptr) + YY_MORE_ADJ;\n\t\t\t\tgoto yy_match;\n\n\t\t\tcase EOB_ACT_LAST_MATCH:\n\t\t\t\t(yy_c_buf_p) =\n\t\t\t\t&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];\n\n\t\t\t\tyy_current_state = yy_get_previous_state(  );\n\n\t\t\t\tyy_cp = (yy_c_buf_p);\n\t\t\t\tyy_bp = (yytext_ptr) + YY_MORE_ADJ;\n\t\t\t\tgoto yy_find_action;\n\t\t\t}\n\t\tbreak;\n\t\t}\n\n\tdefault:\n\t\tYY_FATAL_ERROR(\n\t\t\t\"fatal flex scanner internal error--no action found\" );\n\t} /* end of action switch */\n\t\t} /* end of scanning one token */\n} /* end of yylex */\n\n/* yy_get_next_buffer - try to read in a new buffer\n *\n * Returns a code representing an action:\n *\tEOB_ACT_LAST_MATCH -\n *\tEOB_ACT_CONTINUE_SCAN - continue scanning from current position\n *\tEOB_ACT_END_OF_FILE - end of file\n */\nstatic int yy_get_next_buffer (void)\n{\n    \tregister char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;\n\tregister char *source = (yytext_ptr);\n\tregister int number_to_move, i;\n\tint ret_val;\n\n\tif ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )\n\t\tYY_FATAL_ERROR(\n\t\t\"fatal flex scanner internal error--end of buffer missed\" );\n\n\tif ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )\n\t\t{ /* Don't try to fill the buffer, so this is an EOF. */\n\t\tif ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )\n\t\t\t{\n\t\t\t/* We matched a single character, the EOB, so\n\t\t\t * treat this as a final EOF.\n\t\t\t */\n\t\t\treturn EOB_ACT_END_OF_FILE;\n\t\t\t}\n\n\t\telse\n\t\t\t{\n\t\t\t/* We matched some text prior to the EOB, first\n\t\t\t * process it.\n\t\t\t */\n\t\t\treturn EOB_ACT_LAST_MATCH;\n\t\t\t}\n\t\t}\n\n\t/* Try to read more data. */\n\n\t/* First move last chars to start of buffer. */\n\tnumber_to_move = (int) ((yy_c_buf_p) - (yytext_ptr)) - 1;\n\n\tfor ( i = 0; i < number_to_move; ++i )\n\t\t*(dest++) = *(source++);\n\n\tif ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )\n\t\t/* don't do the read, it's not guaranteed to return an EOF,\n\t\t * just force an EOF\n\t\t */\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;\n\n\telse\n\t\t{\n\t\t\tyy_size_t num_to_read =\n\t\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;\n\n\t\twhile ( num_to_read <= 0 )\n\t\t\t{ /* Not enough room in the buffer - grow it. */\n\n\t\t\tYY_FATAL_ERROR(\n\"input buffer overflow, can't enlarge buffer because scanner uses REJECT\" );\n\n\t\t\t}\n\n\t\tif ( num_to_read > YY_READ_BUF_SIZE )\n\t\t\tnum_to_read = YY_READ_BUF_SIZE;\n\n\t\t/* Read in more data. */\n\t\tYY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),\n\t\t\t(yy_n_chars), num_to_read );\n\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\tif ( (yy_n_chars) == 0 )\n\t\t{\n\t\tif ( number_to_move == YY_MORE_ADJ )\n\t\t\t{\n\t\t\tret_val = EOB_ACT_END_OF_FILE;\n\t\t\tyyrestart(yyin  );\n\t\t\t}\n\n\t\telse\n\t\t\t{\n\t\t\tret_val = EOB_ACT_LAST_MATCH;\n\t\t\tYY_CURRENT_BUFFER_LVALUE->yy_buffer_status =\n\t\t\t\tYY_BUFFER_EOF_PENDING;\n\t\t\t}\n\t\t}\n\n\telse\n\t\tret_val = EOB_ACT_CONTINUE_SCAN;\n\n\tif ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {\n\t\t/* Extend the array by 50%, plus the number we really need. */\n\t\tyy_size_t new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );\n\t\tif ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )\n\t\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_get_next_buffer()\" );\n\t}\n\n\t(yy_n_chars) += number_to_move;\n\tYY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;\n\tYY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;\n\n\t(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];\n\n\treturn ret_val;\n}\n\n/* yy_get_previous_state - get the state just before the EOB char was reached */\n\n    static yy_state_type yy_get_previous_state (void)\n{\n\tregister yy_state_type yy_current_state;\n\tregister char *yy_cp;\n    \n\tyy_current_state = (yy_start);\n\tyy_current_state += YY_AT_BOL();\n\n\t(yy_state_ptr) = (yy_state_buf);\n\t*(yy_state_ptr)++ = yy_current_state;\n\n\tfor ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )\n\t\t{\n\t\tregister YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n\t\twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n\t\t\t{\n\t\t\tyy_current_state = (int) yy_def[yy_current_state];\n\t\t\tif ( yy_current_state >= 86 )\n\t\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n\t\t\t}\n\t\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n\t\t*(yy_state_ptr)++ = yy_current_state;\n\t\t}\n\n\treturn yy_current_state;\n}\n\n/* yy_try_NUL_trans - try to make a transition on the NUL character\n *\n * synopsis\n *\tnext_state = yy_try_NUL_trans( current_state );\n */\n    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )\n{\n\tregister int yy_is_jam;\n    \n\tregister YY_CHAR yy_c = 1;\n\twhile ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )\n\t\t{\n\t\tyy_current_state = (int) yy_def[yy_current_state];\n\t\tif ( yy_current_state >= 86 )\n\t\t\tyy_c = yy_meta[(unsigned int) yy_c];\n\t\t}\n\tyy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];\n\tyy_is_jam = (yy_current_state == 85);\n\tif ( ! yy_is_jam )\n\t\t*(yy_state_ptr)++ = yy_current_state;\n\n\t\treturn yy_is_jam ? 0 : yy_current_state;\n}\n\n#ifndef YY_NO_INPUT\n#ifdef __cplusplus\n    static int yyinput (void)\n#else\n    static int input  (void)\n#endif\n\n{\n\tint c;\n    \n\t*(yy_c_buf_p) = (yy_hold_char);\n\n\tif ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )\n\t\t{\n\t\t/* yy_c_buf_p now points to the character we want to return.\n\t\t * If this occurs *before* the EOB characters, then it's a\n\t\t * valid NUL; if not, then we've hit the end of the buffer.\n\t\t */\n\t\tif ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )\n\t\t\t/* This was really a NUL. */\n\t\t\t*(yy_c_buf_p) = '\\0';\n\n\t\telse\n\t\t\t{ /* need more input */\n\t\t\tyy_size_t offset = (yy_c_buf_p) - (yytext_ptr);\n\t\t\t++(yy_c_buf_p);\n\n\t\t\tswitch ( yy_get_next_buffer(  ) )\n\t\t\t\t{\n\t\t\t\tcase EOB_ACT_LAST_MATCH:\n\t\t\t\t\t/* This happens because yy_g_n_b()\n\t\t\t\t\t * sees that we've accumulated a\n\t\t\t\t\t * token and flags that we need to\n\t\t\t\t\t * try matching the token before\n\t\t\t\t\t * proceeding.  But for input(),\n\t\t\t\t\t * there's no matching to consider.\n\t\t\t\t\t * So convert the EOB_ACT_LAST_MATCH\n\t\t\t\t\t * to EOB_ACT_END_OF_FILE.\n\t\t\t\t\t */\n\n\t\t\t\t\t/* Reset buffer status. */\n\t\t\t\t\tyyrestart(yyin );\n\n\t\t\t\t\t/*FALLTHROUGH*/\n\n\t\t\t\tcase EOB_ACT_END_OF_FILE:\n\t\t\t\t\t{\n\t\t\t\t\tif ( yywrap( ) )\n\t\t\t\t\t\treturn EOF;\n\n\t\t\t\t\tif ( ! (yy_did_buffer_switch_on_eof) )\n\t\t\t\t\t\tYY_NEW_FILE;\n#ifdef __cplusplus\n\t\t\t\t\treturn yyinput();\n#else\n\t\t\t\t\treturn input();\n#endif\n\t\t\t\t\t}\n\n\t\t\t\tcase EOB_ACT_CONTINUE_SCAN:\n\t\t\t\t\t(yy_c_buf_p) = (yytext_ptr) + offset;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\tc = *(unsigned char *) (yy_c_buf_p);\t/* cast for 8-bit char's */\n\t*(yy_c_buf_p) = '\\0';\t/* preserve yytext */\n\t(yy_hold_char) = *++(yy_c_buf_p);\n\n\tYY_CURRENT_BUFFER_LVALUE->yy_at_bol = (c == '\\n');\n\n\treturn c;\n}\n#endif\t/* ifndef YY_NO_INPUT */\n\n/** Immediately switch to a different input stream.\n * @param input_file A readable stream.\n * \n * @note This function does not reset the start condition to @c INITIAL .\n */\n    void yyrestart  (FILE * input_file )\n{\n    \n\tif ( ! YY_CURRENT_BUFFER ){\n        yyensure_buffer_stack ();\n\t\tYY_CURRENT_BUFFER_LVALUE =\n            yy_create_buffer(yyin,YY_BUF_SIZE );\n\t}\n\n\tyy_init_buffer(YY_CURRENT_BUFFER,input_file );\n\tyy_load_buffer_state( );\n}\n\n/** Switch to a different input buffer.\n * @param new_buffer The new input buffer.\n * \n */\n    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )\n{\n    \n\t/* TODO. We should be able to replace this entire function body\n\t * with\n\t *\t\tyypop_buffer_state();\n\t *\t\tyypush_buffer_state(new_buffer);\n     */\n\tyyensure_buffer_stack ();\n\tif ( YY_CURRENT_BUFFER == new_buffer )\n\t\treturn;\n\n\tif ( YY_CURRENT_BUFFER )\n\t\t{\n\t\t/* Flush out information for old buffer. */\n\t\t*(yy_c_buf_p) = (yy_hold_char);\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n\tyy_load_buffer_state( );\n\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n\t(yy_did_buffer_switch_on_eof) = 1;\n}\n\nstatic void yy_load_buffer_state  (void)\n{\n    \t(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;\n\t(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;\n\tyyin = YY_CURRENT_BUFFER_LVALUE->yy_input_file;\n\t(yy_hold_char) = *(yy_c_buf_p);\n}\n\n/** Allocate and initialize an input buffer state.\n * @param file A readable stream.\n * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.\n * \n * @return the allocated buffer state.\n */\n    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )\n{\n\tYY_BUFFER_STATE b;\n    \n\tb = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );\n\tif ( ! b )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_create_buffer()\" );\n\n\tb->yy_buf_size = size;\n\n\t/* yy_ch_buf has to be 2 characters longer than the size given because\n\t * we need to put in 2 end-of-buffer characters.\n\t */\n\tb->yy_ch_buf = (char *) yyalloc(b->yy_buf_size + 2  );\n\tif ( ! b->yy_ch_buf )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_create_buffer()\" );\n\n\tb->yy_is_our_buffer = 1;\n\n\tyy_init_buffer(b,file );\n\n\treturn b;\n}\n\n/** Destroy the buffer.\n * @param b a buffer created with yy_create_buffer()\n * \n */\n    void yy_delete_buffer (YY_BUFFER_STATE  b )\n{\n    \n\tif ( ! b )\n\t\treturn;\n\n\tif ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */\n\t\tYY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;\n\n\tif ( b->yy_is_our_buffer )\n\t\tyyfree((void *) b->yy_ch_buf  );\n\n\tyyfree((void *) b  );\n}\n\n/* Initializes or reinitializes a buffer.\n * This function is sometimes called more than once on the same buffer,\n * such as during a yyrestart() or at EOF.\n */\n    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )\n\n{\n\tint oerrno = errno;\n    \n\tyy_flush_buffer(b );\n\n\tb->yy_input_file = file;\n\tb->yy_fill_buffer = 1;\n\n    /* If b is the current buffer, then yy_init_buffer was _probably_\n     * called from yyrestart() or through yy_get_next_buffer.\n     * In that case, we don't want to reset the lineno or column.\n     */\n    if (b != YY_CURRENT_BUFFER){\n        b->yy_bs_lineno = 1;\n        b->yy_bs_column = 0;\n    }\n\n        b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;\n    \n\terrno = oerrno;\n}\n\n/** Discard all buffered characters. On the next scan, YY_INPUT will be called.\n * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.\n * \n */\n    void yy_flush_buffer (YY_BUFFER_STATE  b )\n{\n    \tif ( ! b )\n\t\treturn;\n\n\tb->yy_n_chars = 0;\n\n\t/* We always need two end-of-buffer characters.  The first causes\n\t * a transition to the end-of-buffer state.  The second causes\n\t * a jam in that state.\n\t */\n\tb->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;\n\tb->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;\n\n\tb->yy_buf_pos = &b->yy_ch_buf[0];\n\n\tb->yy_at_bol = 1;\n\tb->yy_buffer_status = YY_BUFFER_NEW;\n\n\tif ( b == YY_CURRENT_BUFFER )\n\t\tyy_load_buffer_state( );\n}\n\n/** Pushes the new state onto the stack. The new state becomes\n *  the current state. This function will allocate the stack\n *  if necessary.\n *  @param new_buffer The new state.\n *  \n */\nvoid yypush_buffer_state (YY_BUFFER_STATE new_buffer )\n{\n    \tif (new_buffer == NULL)\n\t\treturn;\n\n\tyyensure_buffer_stack();\n\n\t/* This block is copied from yy_switch_to_buffer. */\n\tif ( YY_CURRENT_BUFFER )\n\t\t{\n\t\t/* Flush out information for old buffer. */\n\t\t*(yy_c_buf_p) = (yy_hold_char);\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);\n\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\t/* Only push if top exists. Otherwise, replace top. */\n\tif (YY_CURRENT_BUFFER)\n\t\t(yy_buffer_stack_top)++;\n\tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n\n\t/* copied from yy_switch_to_buffer. */\n\tyy_load_buffer_state( );\n\t(yy_did_buffer_switch_on_eof) = 1;\n}\n\n/** Removes and deletes the top of the stack, if present.\n *  The next element becomes the new top.\n *  \n */\nvoid yypop_buffer_state (void)\n{\n    \tif (!YY_CURRENT_BUFFER)\n\t\treturn;\n\n\tyy_delete_buffer(YY_CURRENT_BUFFER );\n\tYY_CURRENT_BUFFER_LVALUE = NULL;\n\tif ((yy_buffer_stack_top) > 0)\n\t\t--(yy_buffer_stack_top);\n\n\tif (YY_CURRENT_BUFFER) {\n\t\tyy_load_buffer_state( );\n\t\t(yy_did_buffer_switch_on_eof) = 1;\n\t}\n}\n\n/* Allocates the stack if it does not exist.\n *  Guarantees space for at least one push.\n */\nstatic void yyensure_buffer_stack (void)\n{\n\tyy_size_t num_to_alloc;\n    \n\tif (!(yy_buffer_stack)) {\n\n\t\t/* First allocation is just for 2 elements, since we don't know if this\n\t\t * scanner will even need a stack. We use 2 instead of 1 to avoid an\n\t\t * immediate realloc on the next call.\n         */\n\t\tnum_to_alloc = 1;\n\t\t(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc\n\t\t\t\t\t\t\t\t(num_to_alloc * sizeof(struct yy_buffer_state*)\n\t\t\t\t\t\t\t\t);\n\t\tif ( ! (yy_buffer_stack) )\n\t\t\tYY_FATAL_ERROR( \"out of dynamic memory in yyensure_buffer_stack()\" );\n\t\t\t\t\t\t\t\t  \n\t\tmemset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));\n\t\t\t\t\n\t\t(yy_buffer_stack_max) = num_to_alloc;\n\t\t(yy_buffer_stack_top) = 0;\n\t\treturn;\n\t}\n\n\tif ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){\n\n\t\t/* Increase the buffer to prepare for a possible push. */\n\t\tint grow_size = 8 /* arbitrary grow size */;\n\n\t\tnum_to_alloc = (yy_buffer_stack_max) + grow_size;\n\t\t(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc\n\t\t\t\t\t\t\t\t((yy_buffer_stack),\n\t\t\t\t\t\t\t\tnum_to_alloc * sizeof(struct yy_buffer_state*)\n\t\t\t\t\t\t\t\t);\n\t\tif ( ! (yy_buffer_stack) )\n\t\t\tYY_FATAL_ERROR( \"out of dynamic memory in yyensure_buffer_stack()\" );\n\n\t\t/* zero only the new slots.*/\n\t\tmemset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));\n\t\t(yy_buffer_stack_max) = num_to_alloc;\n\t}\n}\n\n/** Setup the input buffer state to scan directly from a user-specified character buffer.\n * @param base the character buffer\n * @param size the size in bytes of the character buffer\n * \n * @return the newly allocated buffer state object. \n */\nYY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n{\n\tYY_BUFFER_STATE b;\n    \n\tif ( size < 2 ||\n\t     base[size-2] != YY_END_OF_BUFFER_CHAR ||\n\t     base[size-1] != YY_END_OF_BUFFER_CHAR )\n\t\t/* They forgot to leave room for the EOB's. */\n\t\treturn 0;\n\n\tb = (YY_BUFFER_STATE) yyalloc(sizeof( struct yy_buffer_state )  );\n\tif ( ! b )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_buffer()\" );\n\n\tb->yy_buf_size = size - 2;\t/* \"- 2\" to take care of EOB's */\n\tb->yy_buf_pos = b->yy_ch_buf = base;\n\tb->yy_is_our_buffer = 0;\n\tb->yy_input_file = 0;\n\tb->yy_n_chars = b->yy_buf_size;\n\tb->yy_is_interactive = 0;\n\tb->yy_at_bol = 1;\n\tb->yy_fill_buffer = 0;\n\tb->yy_buffer_status = YY_BUFFER_NEW;\n\n\tyy_switch_to_buffer(b  );\n\n\treturn b;\n}\n\n/** Setup the input buffer state to scan a string. The next call to yylex() will\n * scan from a @e copy of @a str.\n * @param yystr a NUL-terminated string to scan\n * \n * @return the newly allocated buffer state object.\n * @note If you want to scan bytes that may contain NUL values, then use\n *       yy_scan_bytes() instead.\n */\nYY_BUFFER_STATE yy_scan_string (yyconst char * yystr )\n{\n    \n\treturn yy_scan_bytes(yystr,strlen(yystr) );\n}\n\n/** Setup the input buffer state to scan the given bytes. The next call to yylex() will\n * scan from a @e copy of @a bytes.\n * @param yybytes the byte buffer to scan\n * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.\n * \n * @return the newly allocated buffer state object.\n */\nYY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, yy_size_t  _yybytes_len )\n{\n\tYY_BUFFER_STATE b;\n\tchar *buf;\n\tyy_size_t n;\n\tint i;\n    \n\t/* Get memory for full buffer, including space for trailing EOB's. */\n\tn = _yybytes_len + 2;\n\tbuf = (char *) yyalloc(n  );\n\tif ( ! buf )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_bytes()\" );\n\n\tfor ( i = 0; i < _yybytes_len; ++i )\n\t\tbuf[i] = yybytes[i];\n\n\tbuf[_yybytes_len] = buf[_yybytes_len+1] = YY_END_OF_BUFFER_CHAR;\n\n\tb = yy_scan_buffer(buf,n );\n\tif ( ! b )\n\t\tYY_FATAL_ERROR( \"bad buffer in yy_scan_bytes()\" );\n\n\t/* It's okay to grow etc. this buffer, and we should throw it\n\t * away when we're done.\n\t */\n\tb->yy_is_our_buffer = 1;\n\n\treturn b;\n}\n\n#ifndef YY_EXIT_FAILURE\n#define YY_EXIT_FAILURE 2\n#endif\n\nstatic void yy_fatal_error (yyconst char* msg )\n{\n    \t(void) fprintf( stderr, \"%s\\n\", msg );\n\texit( YY_EXIT_FAILURE );\n}\n\n/* Redefine yyless() so it works in section 3 code. */\n\n#undef yyless\n#define yyless(n) \\\n\tdo \\\n\t\t{ \\\n\t\t/* Undo effects of setting up yytext. */ \\\n        int yyless_macro_arg = (n); \\\n        YY_LESS_LINENO(yyless_macro_arg);\\\n\t\tyytext[yyleng] = (yy_hold_char); \\\n\t\t(yy_c_buf_p) = yytext + yyless_macro_arg; \\\n\t\t(yy_hold_char) = *(yy_c_buf_p); \\\n\t\t*(yy_c_buf_p) = '\\0'; \\\n\t\tyyleng = yyless_macro_arg; \\\n\t\t} \\\n\twhile ( 0 )\n\n/* Accessor  methods (get/set functions) to struct members. */\n\n/** Get the current line number.\n * \n */\nint yyget_lineno  (void)\n{\n        \n    return yylineno;\n}\n\n/** Get the input stream.\n * \n */\nFILE *yyget_in  (void)\n{\n        return yyin;\n}\n\n/** Get the output stream.\n * \n */\nFILE *yyget_out  (void)\n{\n        return yyout;\n}\n\n/** Get the length of the current token.\n * \n */\nyy_size_t yyget_leng  (void)\n{\n        return yyleng;\n}\n\n/** Get the current token.\n * \n */\n\nchar *yyget_text  (void)\n{\n        return yytext;\n}\n\n/** Set the current line number.\n * @param line_number\n * \n */\nvoid yyset_lineno (int  line_number )\n{\n    \n    yylineno = line_number;\n}\n\n/** Set the input stream. This does not discard the current\n * input buffer.\n * @param in_str A readable stream.\n * \n * @see yy_switch_to_buffer\n */\nvoid yyset_in (FILE *  in_str )\n{\n        yyin = in_str ;\n}\n\nvoid yyset_out (FILE *  out_str )\n{\n        yyout = out_str ;\n}\n\nint yyget_debug  (void)\n{\n        return yy_flex_debug;\n}\n\nvoid yyset_debug (int  bdebug )\n{\n        yy_flex_debug = bdebug ;\n}\n\nstatic int yy_init_globals (void)\n{\n        /* Initialization is the same as for the non-reentrant scanner.\n     * This function is called from yylex_destroy(), so don't allocate here.\n     */\n\n    (yy_buffer_stack) = 0;\n    (yy_buffer_stack_top) = 0;\n    (yy_buffer_stack_max) = 0;\n    (yy_c_buf_p) = (char *) 0;\n    (yy_init) = 0;\n    (yy_start) = 0;\n\n    (yy_state_buf) = 0;\n    (yy_state_ptr) = 0;\n    (yy_full_match) = 0;\n    (yy_lp) = 0;\n\n/* Defined in main.c */\n#ifdef YY_STDINIT\n    yyin = stdin;\n    yyout = stdout;\n#else\n    yyin = (FILE *) 0;\n    yyout = (FILE *) 0;\n#endif\n\n    /* For future reference: Set errno on error, since we are called by\n     * yylex_init()\n     */\n    return 0;\n}\n\n/* yylex_destroy is for both reentrant and non-reentrant scanners. */\nint yylex_destroy  (void)\n{\n    \n    /* Pop the buffer stack, destroying each element. */\n\twhile(YY_CURRENT_BUFFER){\n\t\tyy_delete_buffer(YY_CURRENT_BUFFER  );\n\t\tYY_CURRENT_BUFFER_LVALUE = NULL;\n\t\tyypop_buffer_state();\n\t}\n\n\t/* Destroy the stack itself. */\n\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    yyfree ( (yy_state_buf) );\n    (yy_state_buf)  = NULL;\n\n    /* Reset the globals. This is important in a non-reentrant scanner so the next time\n     * yylex() is called, initialization will occur. */\n    yy_init_globals( );\n\n    return 0;\n}\n\n/*\n * Internal utility routines.\n */\n\n#ifndef yytext_ptr\nstatic void yy_flex_strncpy (char* s1, yyconst char * s2, int n )\n{\n\tregister int i;\n\tfor ( i = 0; i < n; ++i )\n\t\ts1[i] = s2[i];\n}\n#endif\n\n#ifdef YY_NEED_STRLEN\nstatic int yy_flex_strlen (yyconst char * s )\n{\n\tregister int n;\n\tfor ( n = 0; s[n]; ++n )\n\t\t;\n\n\treturn n;\n}\n#endif\n\nvoid *yyalloc (yy_size_t  size )\n{\n\treturn (void *) malloc( size );\n}\n\nvoid *yyrealloc  (void * ptr, yy_size_t  size )\n{\n\t/* The cast to (char *) in the following accommodates both\n\t * implementations that use char* generic pointers, and those\n\t * that use void* generic pointers.  It works with the latter\n\t * because both ANSI C and C++ allow castless assignment from\n\t * any pointer type to void*, and deal with argument conversions\n\t * as though doing an assignment.\n\t */\n\treturn (void *) realloc( (char *) ptr, size );\n}\n\nvoid yyfree (void * ptr )\n{\n\tfree( (char *) ptr );\t/* see yyrealloc() for (char *) cast */\n}\n\n#define YYTABLES_NAME \"yytables\"\n\n#line 289 \"lex.l\"\n\n\n\nint\nyywrap (void)\n{\n  return input_context_pop ();\n}\n\nvoid\nbegin_def (void)\n{\n  BEGIN (DEF);\n}\n\nvoid\nend_def (void)\n{\n  BEGIN (CMD);\n} \n\nvoid\nprint_prompt_at_bol (void)\n{\n  if (YY_AT_BOL ())\n    {\n      char *s = make_prompt ();\n      fputs (s, stdout);\n      fflush (stdout);\n      free (s);\n    }\n}\n  \n\f\nstruct strseg\n{\n  struct strseg *next;\n  int len;\n  char ptr[1];\n};\n\nstatic struct strseg *strseg_head, *strseg_tail;\n\nvoid\nstring_begin (void)\n{\n  strseg_head = strseg_tail = NULL;\n}\n\nvoid\nstrseg_attach (struct strseg *seg)\n{\n  seg->next = NULL;\n  if (strseg_tail)\n    strseg_tail->next = seg;\n  else\n    strseg_head = seg;\n  strseg_tail = seg;\n}  \n\nvoid\nstring_add (const char *s, int l)\n{\n  struct strseg *seg = emalloc (sizeof (*seg) + l);\n  memcpy (seg->ptr, s, l);\n  seg->len = l;\n  strseg_attach (seg);\n}\n\nvoid\nstring_addc (int c)\n{\n  struct strseg *seg = emalloc (sizeof (*seg));\n  seg->ptr[0] = c;\n  seg->len = 1;\n  strseg_attach (seg);\n}\n\nchar *\nstring_end (void)\n{\n  int len = 1;\n  struct strseg *seg;\n  char *ret, *p;\n  \n  for (seg = strseg_head; seg; seg = seg->next)\n    len += seg->len;\n\n  ret = emalloc (len);\n  p = ret;\n  for (seg = strseg_head; seg; )\n    {\n      struct strseg *next = seg->next;\n      memcpy (p, seg->ptr, seg->len);\n      p += seg->len;\n      free (seg);\n      seg = next;\n    }\n  *p = 0;\n\n  strseg_head = strseg_tail = NULL;\n\n  return ret;\n}\n\nstatic char transtab[] = \"\\\\\\\\\\\"\\\"a\\ab\\bf\\fn\\nr\\rt\\tv\\v\";\n\nint\nunescape (int c)\n{\n  char *p;\n\n  for (p = transtab; *p; p += 2)\n    {\n      if (*p == c)\n\treturn p[1];\n    }\n  return c;\n}\n\nint\nescape (int c)\n{\n  char *p;\n  for (p = transtab + sizeof (transtab) - 2; p > transtab; p -= 2)\n    {\n      if (*p == c)\n\treturn p[-1];\n    }\n  return 0;\n}\n\nvoid\nvlerror (struct locus *loc, const char *fmt, va_list ap)\n{\n  if (!interactive ())\n    fprintf (stderr, \"%s: \", progname);\n  if (loc && loc->beg.file)\n    {\n      YY_LOCATION_PRINT (stderr, *loc);\n      fprintf (stderr, \": \");\n    }\n  vfprintf (stderr, fmt, ap);\n  fputc ('\\n', stderr);\n}\n\nvoid\nlerror (struct locus *loc, const char *fmt, ...)\n{\n  va_list ap;\n\n  va_start (ap, fmt);\n  vlerror (loc, fmt, ap);\n  va_end (ap);\n}\n\n\f\nstatic struct slist *\npe_file_name (void)\n{\n  return file_name ? slist_new (file_name) : NULL;\n}\n\nstatic struct slist *\npe_program_name (void)\n{\n  return slist_new (progname);\n}\n\nstatic struct slist *\npe_package_name (void)\n{\n  return slist_new (PACKAGE_NAME);\n}\n\nstatic struct slist *\npe_program_version (void)\n{\n  return slist_new (PACKAGE_VERSION);\n}\n\nstatic struct slist *\npe_space (void)\n{\n  return slist_new (\" \");\n}\n\nstruct prompt_exp\n{\n  int ch;\n  struct slist *(*fun) (void);\n};\n\nstruct prompt_exp prompt_exp[] = {\n  { 'f', pe_file_name },\n  { 'p', pe_program_name },\n  { 'P', pe_package_name },\n  { 'v', pe_program_version },\n  { '_', pe_space },\n  { 0 }\n};\n\nstatic int\nexpand_char (int c, struct slist **tailp)\n{\n  struct prompt_exp *p;\n\n  if (c && c != '%')\n    {\n      for (p = prompt_exp; p->ch; p++)\n\t{\n\t  if (c == p->ch)\n\t    {\n\t      struct slist *s = p->fun ();\n\t      if (s)\n\t\tslist_insert (tailp, s);\n\t      return 0;\n\t    }\n\t}\n    }\n  return 1;\n}\n\nchar const *\npsname (void)\n{\n  if (YYSTATE == DEF || YYSTATE == MLSTR)\n    return \"ps2\";\n  return \"ps1\";\n}\n\nchar *\nmake_prompt (void)\n{\n  const char *s;\n  const char *prompt;\n  struct slist *head = NULL, *tail = NULL, *p;\n  char *ret, *end;\n  size_t len;\n  \n  switch (variable_get (psname (), VART_STRING, (void *) &prompt))\n    {\n    case VAR_OK:\n      break;\n\n    case VAR_ERR_NOTSET:\n      return NULL;\n      \n    default:\n      abort ();\n    }\n\n  for (s = prompt; *s; )\n    {\n      if (*s == '%' && s[1])\n\t{\n\t  if (s > prompt)\n\t    {\n\t      slist_insert (&tail, slist_new_l (prompt, s - prompt));\n\t      if (!head)\n\t\thead = tail;\n\t    }\n\t  if (expand_char (s[1], &tail) == 0)\n\t    {\n\t      if (!head)\n\t\thead = tail;\n\t      prompt = s + 2;\n\t    }\n\t  else\n\t    prompt = s;\n\t  s += 2;\n\t}\n      else\n\t++s;\n    }\n\n  if (s > prompt)\n    {\n      slist_insert (&tail, slist_new_l (prompt, s - prompt));\n      if (!head)\n\thead = tail;\n    }\n\n  len = 0;\n  for (p = head; p; p = p->next)\n    len += strlen (p->str);\n\n  ret = emalloc (len + 1);\n  end = ret;\n  for (p = head; p; p = p->next)\n    {\n      s = p->str;\n      while (*s)\n\t*end++ = *s++;\n    }\n  *end = 0;\n\n  slist_free (head);\n  \n  return ret;\n}\n\n\n` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":154,"col":38,"offset":0},"end":{"line":154,"col":43,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":155,"col":17,"offset":0},"end":{"line":155,"col":26,"offset":9}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":556,"col":43,"offset":0},"end":{"line":556,"col":48,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":565,"col":20,"offset":0},"end":{"line":565,"col":24,"offset":4}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":681,"col":36,"offset":0},"end":{"line":681,"col":41,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":698,"col":51,"offset":0},"end":{"line":698,"col":56,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":784,"col":40,"offset":0},"end":{"line":784,"col":45,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":828,"col":43,"offset":0},"end":{"line":828,"col":48,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":881,"col":42,"offset":0},"end":{"line":881,"col":47,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":905,"col":35,"offset":0},"end":{"line":905,"col":40,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":956,"col":37,"offset":0},"end":{"line":956,"col":42,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1193,"col":1,"offset":0},"end":{"line":1194,"col":13,"offset":45}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1200,"col":37,"offset":0},"end":{"line":1200,"col":38,"offset":1}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1201,"col":3,"offset":0},"end":{"line":1201,"col":4,"offset":1}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1201,"col":7,"offset":0},"end":{"line":1201,"col":13,"offset":6}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1206,"col":27,"offset":0},"end":{"line":1206,"col":28,"offset":1}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1384,"col":1,"offset":0},"end":{"line":1384,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1393,"col":1,"offset":0},"end":{"line":1394,"col":4,"offset":10}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1399,"col":33,"offset":0},"end":{"line":1399,"col":34,"offset":1}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1400,"col":1,"offset":0},"end":{"line":1400,"col":7,"offset":6}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1402,"col":1,"offset":0},"end":{"line":1402,"col":2,"offset":1}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1457,"col":35,"offset":0},"end":{"line":1457,"col":40,"offset":5}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1558,"col":1,"offset":0},"end":{"line":1558,"col":4,"offset":3}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1561,"col":1,"offset":0},"end":{"line":1561,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c:154:\n `param` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":154,"col":38,"offset":0},"end":{"line":154,"col":43,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":155,"col":17,"offset":0},"end":{"line":155,"col":26,"offset":9}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":556,"col":43,"offset":0},"end":{"line":556,"col":48,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":565,"col":20,"offset":0},"end":{"line":565,"col":24,"offset":4}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":681,"col":36,"offset":0},"end":{"line":681,"col":41,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":698,"col":51,"offset":0},"end":{"line":698,"col":56,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":784,"col":40,"offset":0},"end":{"line":784,"col":45,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":828,"col":43,"offset":0},"end":{"line":828,"col":48,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":881,"col":42,"offset":0},"end":{"line":881,"col":47,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":905,"col":35,"offset":0},"end":{"line":905,"col":40,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":956,"col":37,"offset":0},"end":{"line":956,"col":42,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1193,"col":1,"offset":0},"end":{"line":1194,"col":13,"offset":45}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1200,"col":37,"offset":0},"end":{"line":1200,"col":38,"offset":1}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1201,"col":3,"offset":0},"end":{"line":1201,"col":4,"offset":1}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1201,"col":7,"offset":0},"end":{"line":1201,"col":13,"offset":6}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1206,"col":27,"offset":0},"end":{"line":1206,"col":28,"offset":1}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1384,"col":1,"offset":0},"end":{"line":1384,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1393,"col":1,"offset":0},"end":{"line":1394,"col":4,"offset":10}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1399,"col":33,"offset":0},"end":{"line":1399,"col":34,"offset":1}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1400,"col":1,"offset":0},"end":{"line":1400,"col":7,"offset":6}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1402,"col":1,"offset":0},"end":{"line":1402,"col":2,"offset":1}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1457,"col":35,"offset":0},"end":{"line":1457,"col":40,"offset":5}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1558,"col":1,"offset":0},"end":{"line":1558,"col":4,"offset":3}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","start":{"line":1561,"col":1,"offset":0},"end":{"line":1561,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h:1:\n `/* Convenience header for conditional use of GNU <libintl.h>.\n   Copyright (C) 1995-1998, 2000-2002, 2004-2006, 2009, 2013, 2017-2018\n   Free Software Foundation, Inc.\n\n   This program is free software; you can redistribute it and/or modify it\n   under the terms of the GNU General Public License as published\n   by the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Library General Public License for more details.\n\n   You should have received a copy of the GNU General Public\n   License along with this program; if not, write to the Free Software\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n   USA.  */\n\n#ifndef _LIBGETTEXT_H\n#define _LIBGETTEXT_H 1\n\n/* NLS can be disabled through the configure --disable-nls option.  */\n#if ENABLE_NLS\n\n/* Get declarations of GNU message catalog functions.  */\n# include <libintl.h>\n\n/* You can set the DEFAULT_TEXT_DOMAIN macro to specify the domain used by\n   the gettext() and ngettext() macros.  This is an alternative to calling\n   textdomain(), and is useful for libraries.  */\n# ifdef DEFAULT_TEXT_DOMAIN\n#  undef gettext\n#  define gettext(Msgid) \\\n     dgettext (DEFAULT_TEXT_DOMAIN, Msgid)\n#  undef ngettext\n#  define ngettext(Msgid1, Msgid2, N) \\\n     dngettext (DEFAULT_TEXT_DOMAIN, Msgid1, Msgid2, N)\n# endif\n\n#else\n\n/* Solaris /usr/include/locale.h includes /usr/include/libintl.h, which\n   chokes if dcgettext is defined as a macro.  So include it now, to make\n   later inclusions of <locale.h> a NOP.  We don't include <libintl.h>\n   as well because people using \"gettext.h\" will not include <libintl.h>,\n   and also including <libintl.h> would fail on SunOS 4, whereas <locale.h>\n   is OK.  */\n#if defined(__sun)\n# include <locale.h>\n#endif\n\n/* Many header files from the libstdc++ coming with g++ 3.3 or newer include\n   <libintl.h>, which chokes if dcgettext is defined as a macro.  So include\n   it now, to make later inclusions of <libintl.h> a NOP.  */\n#if defined(__cplusplus) && defined(__GNUG__) && (__GNUC__ >= 3)\n# include <cstdlib>\n# if (__GLIBC__ >= 2) || _GLIBCXX_HAVE_LIBINTL_H\n#  include <libintl.h>\n# endif\n#endif\n\n/* Disabled NLS.\n   The casts to 'const char *' serve the purpose of producing warnings\n   for invalid uses of the value returned from these functions.\n   On pre-ANSI systems without 'const', the config.h file is supposed to\n   contain \"#define const\".  */\n# undef gettext\n# define gettext(Msgid) ((const char *) (Msgid))\n# undef dgettext\n# define dgettext(Domainname, Msgid) ((void) (Domainname), gettext (Msgid))\n# undef dcgettext\n# define dcgettext(Domainname, Msgid, Category) \\\n    ((void) (Category), dgettext (Domainname, Msgid))\n# undef ngettext\n# define ngettext(Msgid1, Msgid2, N) \\\n    ((N) == 1 \\\n     ? ((void) (Msgid2), (const char *) (Msgid1)) \\\n     : ((void) (Msgid1), (const char *) (Msgid2)))\n# undef dngettext\n# define dngettext(Domainname, Msgid1, Msgid2, N) \\\n    ((void) (Domainname), ngettext (Msgid1, Msgid2, N))\n# undef dcngettext\n# define dcngettext(Domainname, Msgid1, Msgid2, N, Category) \\\n    ((void) (Category), dngettext(Domainname, Msgid1, Msgid2, N))\n# undef textdomain\n# define textdomain(Domainname) ((const char *) (Domainname))\n# undef bindtextdomain\n# define bindtextdomain(Domainname, Dirname) \\\n    ((void) (Domainname), (const char *) (Dirname))\n# undef bind_textdomain_codeset\n# define bind_textdomain_codeset(Domainname, Codeset) \\\n    ((void) (Domainname), (const char *) (Codeset))\n\n#endif\n\n/* A pseudo function call that serves as a marker for the automated\n   extraction of messages, but does not call gettext().  The run-time\n   translation is done at a different place in the code.\n   The argument, String, should be a literal string.  Concatenated strings\n   and other string expressions won't work.\n   The macro's expansion is not parenthesized, so that it is suitable as\n   initializer for static 'char[]' or 'const char[]' variables.  */\n#define gettext_noop(String) String\n\n/* The separator between msgctxt and msgid in a .mo file.  */\n#define GETTEXT_CONTEXT_GLUE \"\\004\"\n\n/* Pseudo function calls, taking a MSGCTXT and a MSGID instead of just a\n   MSGID.  MSGCTXT and MSGID must be string literals.  MSGCTXT should be\n   short and rarely need to change.\n   The letter 'p' stands for 'particular' or 'special'.  */\n#ifdef DEFAULT_TEXT_DOMAIN\n# define pgettext(Msgctxt, Msgid) \\\n   pgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#else\n# define pgettext(Msgctxt, Msgid) \\\n   pgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#endif\n#define dpgettext(Domainname, Msgctxt, Msgid) \\\n  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, LC_MESSAGES)\n#define dcpgettext(Domainname, Msgctxt, Msgid, Category) \\\n  pgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, Category)\n#ifdef DEFAULT_TEXT_DOMAIN\n# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \\\n   npgettext_aux (DEFAULT_TEXT_DOMAIN, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#else\n# define npgettext(Msgctxt, Msgid, MsgidPlural, N) \\\n   npgettext_aux (NULL, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#endif\n#define dnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N) \\\n  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, LC_MESSAGES)\n#define dcnpgettext(Domainname, Msgctxt, Msgid, MsgidPlural, N, Category) \\\n  npgettext_aux (Domainname, Msgctxt GETTEXT_CONTEXT_GLUE Msgid, Msgid, MsgidPlural, N, Category)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\npgettext_aux (const char *domain,\n              const char *msg_ctxt_id, const char *msgid,\n              int category)\n{\n  const char *translation = dcgettext (domain, msg_ctxt_id, category);\n  if (translation == msg_ctxt_id)\n    return msgid;\n  else\n    return translation;\n}\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\nnpgettext_aux (const char *domain,\n               const char *msg_ctxt_id, const char *msgid,\n               const char *msgid_plural, unsigned long int n,\n               int category)\n{\n  const char *translation =\n    dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);\n  if (translation == msg_ctxt_id || translation == msgid_plural)\n    return (n == 1 ? msgid : msgid_plural);\n  else\n    return translation;\n}\n\n/* The same thing extended for non-constant arguments.  Here MSGCTXT and MSGID\n   can be arbitrary expressions.  But for string literals these macros are\n   less efficient than those above.  */\n\n#include <string.h>\n\n#define _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS \\\n  (((__GNUC__ >= 3 || __GNUG__ >= 2) && !__STRICT_ANSI__) \\\n   /* || __STDC_VERSION__ >= 199901L */ )\n\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n#include <stdlib.h>\n#endif\n\n#define pgettext_expr(Msgctxt, Msgid) \\\n  dcpgettext_expr (NULL, Msgctxt, Msgid, LC_MESSAGES)\n#define dpgettext_expr(Domainname, Msgctxt, Msgid) \\\n  dcpgettext_expr (Domainname, Msgctxt, Msgid, LC_MESSAGES)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\ndcpgettext_expr (const char *domain,\n                 const char *msgctxt, const char *msgid,\n                 int category)\n{\n  size_t msgctxt_len = strlen (msgctxt) + 1;\n  size_t msgid_len = strlen (msgid) + 1;\n  const char *translation;\n#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n  char msg_ctxt_id[msgctxt_len + msgid_len];\n#else\n  char buf[1024];\n  char *msg_ctxt_id =\n    (msgctxt_len + msgid_len <= sizeof (buf)\n     ? buf\n     : (char *) malloc (msgctxt_len + msgid_len));\n  if (msg_ctxt_id != NULL)\n#endif\n    {\n      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);\n      msg_ctxt_id[msgctxt_len - 1] = '\\004';\n      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);\n      translation = dcgettext (domain, msg_ctxt_id, category);\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n      if (msg_ctxt_id != buf)\n        free (msg_ctxt_id);\n#endif\n      if (translation != msg_ctxt_id)\n        return translation;\n    }\n  return msgid;\n}\n\n#define npgettext_expr(Msgctxt, Msgid, MsgidPlural, N) \\\n  dcnpgettext_expr (NULL, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)\n#define dnpgettext_expr(Domainname, Msgctxt, Msgid, MsgidPlural, N) \\\n  dcnpgettext_expr (Domainname, Msgctxt, Msgid, MsgidPlural, N, LC_MESSAGES)\n\n#ifdef __GNUC__\n__inline\n#else\n#ifdef __cplusplus\ninline\n#endif\n#endif\nstatic const char *\ndcnpgettext_expr (const char *domain,\n                  const char *msgctxt, const char *msgid,\n                  const char *msgid_plural, unsigned long int n,\n                  int category)\n{\n  size_t msgctxt_len = strlen (msgctxt) + 1;\n  size_t msgid_len = strlen (msgid) + 1;\n  const char *translation;\n#if _LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n  char msg_ctxt_id[msgctxt_len + msgid_len];\n#else\n  char buf[1024];\n  char *msg_ctxt_id =\n    (msgctxt_len + msgid_len <= sizeof (buf)\n     ? buf\n     : (char *) malloc (msgctxt_len + msgid_len));\n  if (msg_ctxt_id != NULL)\n#endif\n    {\n      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);\n      msg_ctxt_id[msgctxt_len - 1] = '\\004';\n      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);\n      translation = dcngettext (domain, msg_ctxt_id, msgid_plural, n, category);\n#if !_LIBGETTEXT_HAVE_VARIABLE_SIZE_ARRAYS\n      if (msg_ctxt_id != buf)\n        free (msg_ctxt_id);\n#endif\n      if (!(translation == msg_ctxt_id || translation == msgid_plural))\n        return translation;\n    }\n  return (n == 1 ? msgid : msgid_plural);\n}\n\n#endif /* _LIBGETTEXT_H */\n` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h"},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c:1:\n `/* This file is part of GDBM, the GNU data base manager.\n   Copyright (C) 1990-1991, 1993, 2007, 2011, 2013, 2017-2018 Free\n   Software Foundation, Inc.\n\n   GDBM is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License as published by\n   the Free Software Foundation; either version 3, or (at your option)\n   any later version.\n\n   GDBM is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n   GNU General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with GDBM. If not, see <http://www.gnu.org/licenses/>.    */\n\n#include \"gdbmtool.h\"\n\n#define DEFFMT(name, type, fmt)\t\t\t\\\nstatic int\t\t\t\t\t\\\nname (FILE *fp, void *ptr, int size)            \\\n{                                               \\\n  fprintf (fp, fmt, *(type*) ptr);              \\\n  return size;                                  \\\n}\n\nDEFFMT (f_char, char, \"%c\")\nDEFFMT (f_short, short, \"%hd\")\nDEFFMT (f_ushort, unsigned short, \"%hu\")\nDEFFMT (f_int, int, \"%d\")\nDEFFMT (f_uint, unsigned, \"%u\")\nDEFFMT (f_long, long, \"%ld\")\nDEFFMT (f_ulong, unsigned long, \"%lu\")\nDEFFMT (f_llong, long long, \"%lld\")\nDEFFMT (f_ullong, unsigned long long, \"%llu\")\nDEFFMT (f_float, float, \"%f\")\nDEFFMT (f_double, double, \"%e\")\n\nstatic int\nf_stringz (FILE *fp, void *ptr, int size)\n{\n  int sz;\n  char *s;\n  \n  for (sz = 1, s = ptr; *s; s++, sz++)\n    {\n      int c;\n      \n      if (isprint (*s))\n\tfputc (*s, fp);\n      else if ((c = escape (*s)))\n\tfprintf (fp, \"\\\\%c\", c);\n      else\n\tfprintf (fp, \"\\\\%03o\", *s);\n    }\n  return sz;\n}\n\nstatic int\nf_string (FILE *fp, void *ptr, int size)\n{\n  int sz;\n  char *s;\n  \n  for (sz = 0, s = ptr; sz < size; s++, sz++)\n    {\n      int c;\n      \n      if (isprint (*s))\n\tfputc (*s, fp);\n      else if ((c = escape (*s)))\n\tfprintf (fp, \"\\\\%c\", c);\n      else\n\tfprintf (fp, \"\\\\%03o\", *s);\n    }\n  return sz;\n}\n\f\nint\ns_char (struct xdatum *xd, char *str)\n{\n  xd_store (xd, str, 1);\n  return 0;\n}\n\n#define DEFNSCAN(name, type, temptype, strto)\t\\\nint\t\t\t\t\t\t\\\nname (struct xdatum *xd, char *str)             \\\n{                                               \\\n  temptype n;                                   \\\n  type t;                                       \\\n  char *p;                                      \\\n                                                \\\n  errno = 0;                                    \\\n  n = strto (str, &p, 0);                       \\\n  if (*p)                                       \\\n    return 1;                                   \\\n  if (errno == ERANGE || (t = n) != n)          \\\n    return 1;                                   \\\n  xd_store (xd, &t, sizeof (t));                \\\n  return 0;                                     \\\n}\n\nDEFNSCAN(s_short, short, long, strtol);\nDEFNSCAN(s_ushort, unsigned short, unsigned long, strtoul);\nDEFNSCAN(s_int, int, long, strtol)\nDEFNSCAN(s_uint, unsigned, unsigned long, strtol)\nDEFNSCAN(s_long, long, long, strtoul)\nDEFNSCAN(s_ulong, unsigned long, unsigned long, strtoul)\nDEFNSCAN(s_llong, long long, long long, strtoll)\nDEFNSCAN(s_ullong, unsigned long long, unsigned long long, strtoull)\n\nint\ns_double (struct xdatum *xd, char *str)\n{\n  double d;\n  char *p;\n  \n  errno = 0;\n  d = strtod (str, &p);\n  if (errno || *p)\n    return 1;\n  xd_store (xd, &d, sizeof (d));\n  return 0;\n}\n\nint\ns_float (struct xdatum *xd, char *str)\n{\n  float d;\n  char *p;\n  \n  errno = 0;\n  d = strtod (str, &p);\n  if (errno || *p)\n    return 1;\n  xd_store (xd, &d, sizeof (d));\n  return 0;\n}\n\nint\ns_stringz (struct xdatum *xd, char *str)\n{\n  xd_store (xd, str, strlen (str) + 1);\n  return 0;\n}\n\nint\ns_string (struct xdatum *xd, char *str)\n{\n  xd_store (xd, str, strlen (str));\n  return 0;\n}\n\nstatic struct datadef datatab[] = {\n  { \"char\",     sizeof(char),      f_char, s_char },\n  { \"short\",    sizeof(short),     f_short, s_short },\n  { \"ushort\",   sizeof(unsigned short), f_ushort, s_ushort },\n  { \"int\",      sizeof(int),       f_int, s_int  },\n  { \"unsigned\", sizeof(unsigned),  f_uint, s_uint },\n  { \"uint\",     sizeof(unsigned),  f_uint, s_uint },\n  { \"long\",     sizeof(long),      f_long, s_long },\n  { \"ulong\",    sizeof(unsigned long),     f_ulong, s_ulong },\n  { \"llong\",    sizeof(long long), f_llong, s_llong },\n  { \"ullong\",   sizeof(unsigned long long), f_ullong, s_ullong },\n  { \"float\",    sizeof(float),     f_float, s_float }, \n  { \"double\",   sizeof(double),    f_double, s_double },\n  { \"stringz\",  0, f_stringz, s_stringz },\n  { \"string\",   0, f_string, s_string },\n  { NULL }\n};\n\nstruct datadef *\ndatadef_lookup (const char *name)\n{\n  struct datadef *p;\n\n  for (p = datatab; p->name; p++)\n    if (strcmp (p->name, name) == 0)\n      return p;\n  return NULL;\n}\n\f\nstruct dsegm *\ndsegm_new (int type)\n{\n  struct dsegm *p = emalloc (sizeof (*p));\n  p->next = NULL;\n  p->type = type;\n  return p;\n}\n\nstruct dsegm *\ndsegm_new_field (struct datadef *type, char *id, int dim)\n{\n  struct dsegm *p = dsegm_new (FDEF_FLD);\n  p->v.field.type = type;\n  p->v.field.name = id;\n  p->v.field.dim = dim;\n  return p;\n}\n\nvoid\ndsegm_free_list (struct dsegm *dp)\n{\n  while (dp)\n    {\n      struct dsegm *next = dp->next;\n      free (dp);\n      dp = next;\n    }\n}\n\nvoid\ndatum_format (FILE *fp, datum const *dat, struct dsegm *ds)\n{\n  int off = 0;\n  char *delim[2];\n  int first_field = 1;\n  \n  if (!ds)\n    {\n      fprintf (fp, \"%.*s\\n\", dat->dsize, dat->dptr);\n      return;\n    }\n\n  if (variable_get (\"delim1\", VART_STRING, (void*) &delim[0]))\n    abort ();\n  if (variable_get (\"delim2\", VART_STRING, (void*) &delim[1]))\n    abort ();\n  \n  for (; ds && off <= dat->dsize; ds = ds->next)\n    {\n      switch (ds->type)\n\t{\n\tcase FDEF_FLD:\n\t  if (!first_field)\n\t    fwrite (delim[1], strlen (delim[1]), 1, fp);\n\t  if (ds->v.field.name)\n\t    fprintf (fp, \"%s=\", ds->v.field.name);\n\t  if (ds->v.field.dim > 1)\n\t    fprintf (fp, \"{ \");\n\t  if (ds->v.field.type->format)\n\t    {\n\t      int i, n;\n\n\t      for (i = 0; i < ds->v.field.dim; i++)\n\t\t{\n\t\t  if (i)\n\t\t    fwrite (delim[0], strlen (delim[0]), 1, fp);\n\t\t  if (off + ds->v.field.type->size > dat->dsize)\n\t\t    {\n\t\t      fprintf (fp, _(\"(not enough data)\"));\n\t\t      off += dat->dsize;\n\t\t      break;\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      n = ds->v.field.type->format (fp,\n\t\t\t\t\t\t    (char*) dat->dptr + off,\n\t\t\t\t\t\t    ds->v.field.type->size ?\n\t\t\t\t\t\t      ds->v.field.type->size :\n\t\t\t\t\t\t      dat->dsize - off);\n\t\t      off += n;\n\t\t    }\n\t\t}\n\t    }\n\t  if (ds->v.field.dim > 1)\n\t    fprintf (fp, \" }\");\n\t  first_field = 0;\n\t  break;\n\t  \n\tcase FDEF_OFF:\n\t  off = ds->v.n;\n\t  break;\n\t  \n\tcase FDEF_PAD:\n\t  off += ds->v.n;\n\t  break;\n\t}\n    }\n}\n\f\nstruct xdatum\n{\n  char *dptr;\n  size_t dsize;\n  size_t dmax;\n  int off;\n};\n\nvoid\nxd_expand (struct xdatum *xd, size_t size)\n{\n  if (xd->dmax < size)\n    {\n      xd->dptr = erealloc (xd->dptr, size);\n      memset (xd->dptr + xd->dmax, 0, size - xd->dmax);\n      xd->dmax = size;\n    }\n}\n  \nvoid\nxd_store (struct xdatum *xd, void *val, size_t size)\n{\n  xd_expand (xd, xd->off + size);\n  memcpy (xd->dptr + xd->off, val, size);\n  xd->off += size;\n  if (xd->off > xd->dsize)\n    xd->dsize = xd->off;\n} \n\f\nstatic int\ndatum_scan_notag (datum *dat, struct dsegm *ds, struct kvpair *kv)\n{\n  struct xdatum xd;\n  int i;\n  struct slist *s;\n  int err = 0;\n  \n  memset (&xd, 0, sizeof (xd));\n  \n  for (; err == 0 && ds && kv; ds = ds->next, kv = kv->next)\n    {\n      if (kv->key)\n\t{\n\t  lerror (&kv->loc,\n\t\t       _(\"mixing tagged and untagged values is not allowed\"));\n\t  err = 1;\n\t  break;\n\t}\n      \n      switch (ds->type)\n\t{\n\tcase FDEF_FLD:\n\t  if (!ds->v.field.type->scan)\n\t    abort ();\n\n\t  if (kv->type == KV_STRING && ds->v.field.dim > 1)\n\t    {\n\t      /* If a char[] value was supplied as a quoted string.\n\t         convert it it list for further processing */\n\t      if (ds->v.field.type->size == 1)\n\t\t{\n\t\t  struct slist *head = slist_new_l (kv->val.s, 1);\n\t\t  struct slist *tail = head;\n\t\t  char *s;\n\t\t  for (s = kv->val.s + 1; *s; s++)\n\t\t    slist_insert (&tail, slist_new_l (s, 1));\n\t\t  free (kv->val.s);\n\t\t  kv->val.l = head;\n\t\t  kv->type = KV_LIST;\n\t\t}\n\t    }\n\t  \n\t  switch (kv->type)\n\t    {\n\t    case KV_STRING:\n\t      err = ds->v.field.type->scan (&xd, kv->val.s);\n\t      if (err)\n\t\tlerror (&kv->loc, _(\"cannot convert\"));\n\t      break;\n\t      \n\t    case KV_LIST:\n\t      for (i = 0, s = kv->val.l; i < ds->v.field.dim && s;\n\t\t   i++, s = s->next)\n\t\t{\n\t\t  err = ds->v.field.type->scan (&xd, s->str);\n\t\t  if (err)\n\t\t    {\n\t\t      lerror (&kv->loc,\n\t\t\t\t   _(\"cannot convert value #%d: %s\"),\n\t\t\t\t   i, s->str);\n\t\t      break;\n\t\t    }\n\t\t}\n\t      if (s)\n\t\t{\n\t\t  lerror (&kv->loc, \"surplus initializers ignored\");\n\t\t  err = 1;\n\t\t}\n\t    }\t\t\t\t      \n\t  break;\n\n\tcase FDEF_OFF:\n\t  xd_expand (&xd, ds->v.n);\n\t  xd.off = ds->v.n;\n\t  break;\n\t  \n\tcase FDEF_PAD:\n\t  xd_expand (&xd, xd.off + ds->v.n);\n\t  xd.off += ds->v.n;\n\t  break;\n\t}\n    }\n\n  if (err)\n    {\n      free (xd.dptr);\n      return 1;\n    }\n\n  dat->dptr  = xd.dptr;\n  dat->dsize = xd.dsize;\n      \n  return 0;\n}\n\nstatic int\ndatum_scan_tag (datum *dat, struct dsegm *ds, struct kvpair *kv)\n{\n  lerror (&kv->loc, \"tagged values are not yet supported\");\n  return 1;\n}\n\nint\ndatum_scan (datum *dat, struct dsegm *ds, struct kvpair *kv)\n{\n  return (kv->key ? datum_scan_tag : datum_scan_notag) (dat, ds, kv);\n}\n\nvoid\ndsprint (FILE *fp, int what, struct dsegm *ds)\n{\n  static char *dsstr[] = { \"key\", \"content\" };\n  int delim;\n  \n  fprintf (fp, \"define %s\", dsstr[what]);\n  if (ds->next)\n    {\n      fprintf (fp, \" {\\n\");\n      delim = '\\t';\n    }\n  else\n    delim = ' ';\n  for (; ds; ds = ds->next)\n    {\n      switch (ds->type)\n\t{\n\tcase FDEF_FLD:\n\t  fprintf (fp, \"%c%s\", delim, ds->v.field.type->name);\n\t  if (ds->v.field.name)\n\t    fprintf (fp, \" %s\", ds->v.field.name);\n\t  if (ds->v.field.dim > 1)\n\t    fprintf (fp, \"[%d]\", ds->v.field.dim);\n\t  break;\n\t  \n\tcase FDEF_OFF:\n\t  fprintf (fp, \"%coffset %d\", delim, ds->v.n);\n\t  break;\n\n\tcase FDEF_PAD:\n\t  fprintf (fp, \"%cpad %d\", delim, ds->v.n);\n\t  break;\n\t}\n      if (ds->next)\n\tfputc (',', fp);\n      fputc ('\\n', fp);\n    }\n  if (delim == '\\t')\n    fputs (\"}\\n\", fp);\n}\n` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":26,"col":26,"offset":0},"end":{"line":26,"col":36,"offset":10}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c:26:\n `gdbm_error` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","start":{"line":26,"col":26,"offset":0},"end":{"line":26,"col":36,"offset":10}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","start":{"line":321,"col":1,"offset":0},"end":{"line":321,"col":4,"offset":3}},{"path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","start":{"line":326,"col":1,"offset":0},"end":{"line":326,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c:321:\n `#if` was unexpected","path":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","spans":[{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","start":{"line":321,"col":1,"offset":0},"end":{"line":321,"col":4,"offset":3}},{"file":"/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","start":{"line":326,"col":1,"offset":0},"end":{"line":326,"col":7,"offset":6}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/gdbm-1.18.1/compat/close.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbm-priv.h","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbm.h","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmclose.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdelete.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmdirfno.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmerr.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmfetch.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbminit.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmopen.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmpagfno.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmrdonly.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmseq.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/dbmstore.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/delete.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/fetch.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/ndbm.h","/home/capstone/Desktop/root/gdbm-1.18.1/compat/seq.c","/home/capstone/Desktop/root/gdbm-1.18.1/compat/store.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/base64.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/bucket.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/datconv.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/debug.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/err.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/falloc.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/findkey.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/fullio.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_dump.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbm_load.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmapp.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmclose.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmconst.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmcount.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdefs.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdelete.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmdump.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmerrno.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexists.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmexp.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfdesc.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmfetch.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmimp.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmload.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmopen.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmreorg.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmseq.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsetopt.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmstore.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmsync.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gdbmtool.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/gettext.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/gram.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/hash.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/input-argv.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/input-file.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/input-rl.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/input-std.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/lex.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/lock.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/mem.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/mmap.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/parseopt.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/progname.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/proto.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/recover.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/systems.h","/home/capstone/Desktop/root/gdbm-1.18.1/src/update.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/util.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/var.c","/home/capstone/Desktop/root/gdbm-1.18.1/src/version.c"]},"interfile_languages_used":[],"skipped_rules":[]}