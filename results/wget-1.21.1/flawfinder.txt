/home/capstone/Desktop/root/wget-1.21.1/lib/canonicalize.c:345:23:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
                  n = readlink (rname, buf, bufsize - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:32:1:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
readlink (char const *file, char *buf _GL_UNUSED,
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:47:9:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
# undef readlink
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:72:15:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
  ssize_t r = readlink (file, buf, bufsize);
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:80:11:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
      r = readlink (file, stackbuf, sizeof stackbuf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:897:8:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
#undef gets
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:899:18:  [5] (buffer) gets:Does not check for buffer overflows (CWE-120, CWE-20).  Use fgets() instead. 
_GL_WARN_ON_USE (gets, "gets is a security hole - use fgets instead");
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:400:11:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
#   undef chmod
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:401:12:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
#   define chmod _chmod
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:404:24:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
_GL_CXXALIAS_MDA_CAST (chmod, int, (const char *filename, mode_t mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:406:19:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
_GL_CXXALIAS_SYS (chmod, int, (const char *filename, mode_t mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:408:19:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
_GL_CXXALIASWARN (chmod);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:321:18:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_WARN_ON_USE (chown, "chdir is not always in <unistd.h> - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:349:11:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
#   undef chown
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:350:12:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
#   define chown rpl_chown
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:352:19:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_FUNCDECL_RPL (chown, int, (const char *file, uid_t uid, gid_t gid)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:354:19:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_CXXALIAS_RPL (chown, int, (const char *file, uid_t uid, gid_t gid));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:357:19:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_FUNCDECL_SYS (chown, int, (const char *file, uid_t uid, gid_t gid)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:360:19:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_CXXALIAS_SYS (chown, int, (const char *file, uid_t uid, gid_t gid));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:362:19:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_CXXALIASWARN (chown);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:364:9:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
# undef chown
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:366:18:  [5] (race) chown:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchown( ) instead. 
_GL_WARN_ON_USE (chown, "chown fails to follow symlinks on some systems and "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1868:12:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
#   define readlink rpl_readlink
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1870:19:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_FUNCDECL_RPL (readlink, ssize_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1874:19:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_CXXALIAS_RPL (readlink, ssize_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1879:19:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_FUNCDECL_SYS (readlink, ssize_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1884:19:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_CXXALIAS_SYS (readlink, ssize_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1888:19:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_CXXALIASWARN (readlink);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1890:9:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
# undef readlink
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1892:18:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
_GL_WARN_ON_USE (readlink, "readlink is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2348:31:  [5] (race) readlink:This accepts filename arguments; if an attacker can move those files or change the link content, a race condition results.  Also, it does not terminate with ASCII NUL. (CWE-362, CWE-20).  Reconsider approach. 
                          n = readlink (con->target, link_target, len);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2425:19:  [5] (race) chmod:This accepts filename arguments; if an attacker can move those files, a race condition results. (CWE-362).  Use fchmod( ) instead. 
              if (chmod (actual_target, f->perms))
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:83:10:  [4] (shell) system:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
		return system(cmd) != 0;
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:88:10:  [4] (shell) system:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
		return system(cmd) != 0;
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:111:3:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
		snprintf(corporadir, sizeof(corporadir), SRCDIR "/%.*s.in", (int) target_len, target);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:117:3:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
		snprintf(corporadir, sizeof(corporadir), SRCDIR "/%.*s.repro", (int) target_len, target);
/home/capstone/Desktop/root/wget-1.21.1/lib/access.c:26:1:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
access (const char *file, int mode)
/home/capstone/Desktop/root/wget-1.21.1/lib/canonicalize.c:118:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (dirend, dir_suffix);
/home/capstone/Desktop/root/wget-1.21.1/lib/chdir-long.c:249:7:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
      execlp (cmd, (char *) NULL);
/home/capstone/Desktop/root/wget-1.21.1/lib/error.c:274:5:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
    vfprintf (stderr, message, args);
/home/capstone/Desktop/root/wget-1.21.1/lib/error.c:389:3:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
  fprintf (stderr, file_name != NULL ? "%s:%u: " : " ",
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:57:10:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
# define wcscat __wcscat
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:135:22:  [4] (buffer) strcat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  Consider using strcat_s, strncat, strlcat, or snprintf (warning: strncat is easily misused). 
#define STRCAT(D, S) strcat (D, S)
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:156:22:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
#define STRCAT(D, S) wcscat (D, S)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:40:10:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
# define fprintf __fxprintf_nocancel
/home/capstone/Desktop/root/wget-1.21.1/lib/getpass.c:87:1:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
getpass (const char *prompt)
/home/capstone/Desktop/root/wget-1.21.1/lib/getpass.c:197:1:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
getpass (const char *prompt)
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:279:15:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
              strcpy (ret, progname);
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:140:10:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  return strcpy (dst, tmp);
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:255:10:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  return strcpy (dst, tmp);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:905:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (resultbuf, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:929:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (buf, "CP%s", pdot + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:947:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (resultbuf, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1007:11:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
          strcpy (resultbuf, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:128:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (result, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:132:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (result, codeset);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:168:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result[item], tmp);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:400:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:409:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:428:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result[item - DAY_1], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:446:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result[item - ABDAY_1], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:471:11:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
          strcpy (result[item - MON_1], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:496:11:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
          strcpy (result[item - ALTMON_1], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:521:9:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
        strcpy (result[item - ABMON_1], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:89:13:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
            sprintf (dotdot_buf, PROC_SELF_FD_FORMAT "../fd", proc_self_fd);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:90:27:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
            proc_status = access (dotdot_buf, F_OK) ? -1 : 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:107:18:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
        dirlen = sprintf (result, PROC_SELF_FD_FORMAT, fd);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:128:5:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
    strcpy (result, dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:133:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (result + dirlen, file);
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:161:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (dirp->dir_name_mask, dir_name_mask);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:327:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (resultbuf, buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:406:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (resultbuf[i], buf);
/home/capstone/Desktop/root/wget-1.21.1/lib/snprintf.c:37:1:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
snprintf (char *str, size_t size, const char *format, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:125:1:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
printf (const char *format, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:131:12:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
  retval = vfprintf (stdout, format, args);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:140:1:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
fprintf (FILE *stream, const char *format, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:146:12:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
  retval = vfprintf (stream, format, args);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:155:1:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
vprintf (const char *format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:157:10:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
  return vfprintf (stdout, format, args);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:163:1:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
vfprintf (FILE *stream, const char *format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:164:8:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#undef vfprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-write.c:166:37:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
  CALL_WITH_SIGPIPE_EMULATION (int, vfprintf (stream, format, args), ret == EOF)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:404:12:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#   define fprintf rpl_fprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:408:19:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (fprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:413:19:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (fprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:418:19:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (fprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:421:19:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS (fprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:425:19:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (fprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:430:10:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#  undef fprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:433:18:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (fprintf, "fprintf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:557:11:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   undef fscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:558:12:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   define fscanf rpl_fscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:560:19:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_FUNCDECL_RPL (fscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:564:19:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_RPL (fscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:567:19:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_SYS (fscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:571:19:  [4] (buffer) fscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIASWARN (fscanf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1009:11:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef popen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1010:12:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define popen rpl_popen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1012:19:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (popen, FILE *, (const char *cmd, const char *mode)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1014:19:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (popen, FILE *, (const char *cmd, const char *mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1017:19:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_SYS (popen, FILE *, (const char *cmd, const char *mode)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1020:19:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (popen, FILE *, (const char *cmd, const char *mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1022:19:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (popen);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1024:9:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef popen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1026:18:  [4] (shell) popen:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (popen, "popen is buggy on some platforms - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1037:13:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#    define printf __printf__
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1054:21:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL_1 (printf, __printf__, int, (const char *format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1057:13:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#    define printf rpl_printf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1059:19:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (printf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1063:19:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (printf, int, (const char *restrict format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1067:19:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS (printf, int, (const char *restrict format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1070:19:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (printf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1075:10:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#  undef printf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1078:18:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (printf, "printf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1226:12:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#    undef scanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1228:13:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#    define scanf __scanf__
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1236:21:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_RPL_1 (scanf, __scanf__, int, (const char *restrict format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1239:12:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#    undef scanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1240:13:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#    define scanf rpl_scanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1242:19:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_FUNCDECL_RPL (scanf, int, (const char *restrict format, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1245:19:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_RPL (scanf, int, (const char *restrict format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1248:19:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_SYS (scanf, int, (const char *restrict format, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1251:19:  [4] (buffer) scanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIASWARN (scanf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1258:12:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#   define snprintf rpl_snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1260:19:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (snprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1265:19:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (snprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1270:19:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_SYS (snprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1276:19:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS (snprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1281:19:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (snprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1284:9:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
# undef snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1286:18:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (snprintf, "snprintf is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1303:12:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
#   define sprintf rpl_sprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1305:19:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_FUNCDECL_RPL (sprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1309:19:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIAS_RPL (sprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1312:19:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIAS_SYS (sprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1316:19:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIASWARN (sprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1319:9:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
# undef sprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1321:18:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_WARN_ON_USE (sprintf, "sprintf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1450:12:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#   define vfprintf rpl_vfprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1454:19:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (vfprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1460:19:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (vfprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1466:19:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (vfprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1473:24:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS_CAST (vfprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1478:19:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (vfprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1483:10:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#  undef vfprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1486:18:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (vfprintf, "vfprintf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1494:11:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   undef vfscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1495:12:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   define vfscanf rpl_vfscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1497:19:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_FUNCDECL_RPL (vfscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1502:19:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_RPL (vfscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1506:19:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_SYS (vfscanf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1511:19:  [4] (buffer) vfscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIASWARN (vfscanf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1519:12:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#   define vprintf rpl_vprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1523:19:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (vprintf, int, (const char *restrict format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1527:19:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (vprintf, int, (const char *restrict format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1531:19:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (vprintf, int, (const char *restrict format, va_list args));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1536:24:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS_CAST (vprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1540:19:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (vprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1545:10:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
#  undef vprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1548:18:  [4] (format) vprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (vprintf, "vprintf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1556:11:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   undef vscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1557:12:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
#   define vscanf rpl_vscanf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1559:19:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_FUNCDECL_RPL (vscanf, int, (const char *restrict format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1562:19:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_RPL (vscanf, int, (const char *restrict format, va_list args));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1564:19:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIAS_SYS (vscanf, int, (const char *restrict format, va_list args));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1567:19:  [4] (buffer) vscanf:The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. 
_GL_CXXALIASWARN (vscanf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1574:12:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#   define vsnprintf rpl_vsnprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1576:19:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_RPL (vsnprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1581:19:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_RPL (vsnprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1586:19:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_FUNCDECL_SYS (vsnprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1592:19:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIAS_SYS (vsnprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1597:19:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_CXXALIASWARN (vsnprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1600:9:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
# undef vsnprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1602:18:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
_GL_WARN_ON_USE (vsnprintf, "vsnprintf is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1610:12:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
#   define vsprintf rpl_vsprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1612:19:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_FUNCDECL_RPL (vsprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1617:19:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIAS_RPL (vsprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1624:24:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIAS_SYS_CAST (vsprintf, int,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1629:19:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_CXXALIASWARN (vsprintf);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1632:9:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
# undef vsprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1634:18:  [4] (buffer) vsprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
_GL_WARN_ON_USE (vsprintf, "vsprintf is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:590:11:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
#   undef mktemp
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:591:12:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
#   define mktemp _mktemp
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:593:19:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
_GL_CXXALIAS_MDA (mktemp, char *, (char * /*template*/));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:595:19:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
_GL_CXXALIAS_SYS (mktemp, char *, (char * /*template*/));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:597:19:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
_GL_CXXALIASWARN (mktemp);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror.c:33:8:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
#undef sprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror.c:59:7:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
      sprintf (buf, fmt, n);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:123:9:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
# undef snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:124:10:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
# define snprintf local_snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/tmpdir.c:163:3:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
  sprintf (tmpl + dlen, &"/%.*sXXXXXX"[!add_slash], (int) plen, pfx);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:265:11:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   undef access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:266:12:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   define access rpl_access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:268:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_FUNCDECL_RPL (access, int, (const char *file, int mode)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:270:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIAS_RPL (access, int, (const char *file, int mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:273:11:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   undef access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:274:12:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   define access _access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:276:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIAS_MDA (access, int, (const char *file, int mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:278:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIAS_SYS (access, int, (const char *file, int mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:280:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIASWARN (access);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:282:9:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
# undef access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:285:18:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_WARN_ON_USE (access, "access does not always support X_OK - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:296:11:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   undef access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:297:12:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
#   define access _access
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:299:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIAS_MDA (access, int, (const char *file, int mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:301:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIAS_SYS (access, int, (const char *file, int mode));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:303:19:  [4] (race) access:This usually indicates a security flaw.  If an attacker can change anything along the path between the call to access() and the file's actual use (e.g., by moving files), the attacker can exploit the race condition (CWE-362/CWE-367!).  Set up the correct permissions (e.g., using setuid()) and try to open the file directly. 
_GL_CXXALIASWARN (access);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:621:11:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execl
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:622:12:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execl rpl_execl
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:624:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (execl, int, (const char *program, const char *arg, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:626:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (execl, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:628:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execl, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:630:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execl);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:632:9:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef execl
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:634:18:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (execl, "execl behaves very differently on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:643:11:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execl
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:644:12:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execl _execl
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:646:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_MDA (execl, intptr_t, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:648:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execl, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:650:19:  [4] (shell) execl:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execl);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:656:11:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execle
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:657:12:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execle rpl_execle
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:659:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (execle, int, (const char *program, const char *arg, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:661:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (execle, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:663:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execle, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:665:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execle);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:667:9:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef execle
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:669:18:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (execle, "execle behaves very differently on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:678:11:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execle
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:679:12:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execle _execle
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:681:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_MDA (execle, intptr_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:684:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execle, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:686:19:  [4] (shell) execle:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execle);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:692:11:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execlp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:693:12:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execlp rpl_execlp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:695:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (execlp, int, (const char *program, const char *arg, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:697:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (execlp, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:699:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execlp, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:701:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execlp);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:703:9:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef execlp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:705:18:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (execlp, "execlp behaves very differently on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:714:11:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execlp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:715:12:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execlp _execlp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:717:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_MDA (execlp, intptr_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:720:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execlp, int, (const char *program, const char *arg, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:722:19:  [4] (shell) execlp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execlp);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:729:11:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execv
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:730:12:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execv rpl_execv
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:732:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (execv, int, (const char *program, char * const *argv)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:734:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (execv, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:736:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execv, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:738:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execv);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:740:9:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef execv
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:742:18:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (execv, "execv behaves very differently on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:751:11:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execv
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:752:12:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execv _execv
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:754:24:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_MDA_CAST (execv, intptr_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:757:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execv, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:759:19:  [4] (shell) execv:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execv);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:806:11:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execvp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:807:12:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execvp rpl_execvp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:809:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_FUNCDECL_RPL (execvp, int, (const char *program, char * const *argv)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:811:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_RPL (execvp, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:813:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execvp, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:815:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execvp);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:817:9:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
# undef execvp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:819:18:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_WARN_ON_USE (execvp, "execvp behaves very differently on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:828:11:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   undef execvp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:829:12:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
#   define execvp _execvp
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:831:24:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_MDA_CAST (execvp, intptr_t,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:834:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIAS_SYS (execvp, int, (const char *program, char * const *argv));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:836:19:  [4] (shell) execvp:This causes a new program to execute and is difficult to use safely (CWE-78).  try using a library call that implements the same functionality if available. 
_GL_CXXALIASWARN (execvp);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1266:19:  [4] (misc) getlogin:It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807).  Use getpwuid(geteuid()) and extract the desired information instead. 
_GL_FUNCDECL_SYS (getlogin, char *, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1268:19:  [4] (misc) getlogin:It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807).  Use getpwuid(geteuid()) and extract the desired information instead. 
_GL_CXXALIAS_SYS (getlogin, char *, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1269:19:  [4] (misc) getlogin:It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807).  Use getpwuid(geteuid()) and extract the desired information instead. 
_GL_CXXALIASWARN (getlogin);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1271:9:  [4] (misc) getlogin:It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807).  Use getpwuid(geteuid()) and extract the desired information instead. 
# undef getlogin
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1273:18:  [4] (misc) getlogin:It's often easy to fool getlogin.  Sometimes it does not work at all, because some program messed up the utmp file.  Often, it gives only the first 8 characters of the login name. The user currently logged in on the controlling tty of our program need not be the user who started it.  Avoid getlogin() for security-related purposes (CWE-807).  Use getpwuid(geteuid()) and extract the desired information instead. 
_GL_WARN_ON_USE (getlogin, "getlogin is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1414:11:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
#   undef getpass
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1415:12:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
#   define getpass rpl_getpass
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1417:19:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_FUNCDECL_RPL (getpass, char *, (const char *prompt)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1419:19:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_CXXALIAS_RPL (getpass, char *, (const char *prompt));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1422:19:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_FUNCDECL_SYS (getpass, char *, (const char *prompt)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1425:19:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_CXXALIAS_SYS (getpass, char *, (const char *prompt));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1427:19:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_CXXALIASWARN (getpass);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1429:9:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
# undef getpass
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1431:18:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
_GL_WARN_ON_USE (getpass, "getpass is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:171:20:  [4] (buffer) swprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
#  define SNPRINTF swprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:189:21:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#   define SNPRINTF snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:191:11:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#   undef snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:194:21:  [4] (format) _snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#   define SNPRINTF _snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:199:20:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#  define SNPRINTF snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:201:10:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
#  undef snprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:205:8:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
#undef sprintf
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4517:39:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                                      sprintf ((char *) p, decimal_format, exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4525:39:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                                      sprintf (expbuf, decimal_format, exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4710:47:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                                              sprintf ((char *) p, decimal_format, exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4718:47:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                                              sprintf (expbuf, decimal_format, exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5244:33:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                        count = sprintf (tmp, buf, arg);                    \
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5247:33:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                        count = sprintf (tmp, buf, prefixes[0], arg);       \
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5250:33:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
                        count = sprintf (tmp, buf, prefixes[0], prefixes[1],\
/home/capstone/Desktop/root/wget-1.21.1/lib/vsnprintf.c:39:1:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
vsnprintf (char *str, size_t size, const char *format, va_list args)
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:698:19:  [4] (buffer) wcscpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using a function version that stops copying at the end of the buffer. 
_GL_FUNCDECL_SYS (wcscpy, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:701:19:  [4] (buffer) wcscpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using a function version that stops copying at the end of the buffer. 
_GL_CXXALIAS_SYS (wcscpy, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:704:19:  [4] (buffer) wcscpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using a function version that stops copying at the end of the buffer. 
_GL_CXXALIASWARN (wcscpy);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:707:9:  [4] (buffer) wcscpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using a function version that stops copying at the end of the buffer. 
# undef wcscpy
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:709:18:  [4] (buffer) wcscpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using a function version that stops copying at the end of the buffer. 
_GL_WARN_ON_USE (wcscpy, "wcscpy is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:779:19:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
_GL_FUNCDECL_SYS (wcscat, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:782:19:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
_GL_CXXALIAS_SYS (wcscat, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:785:19:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
_GL_CXXALIASWARN (wcscat);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:788:9:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
# undef wcscat
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:790:18:  [4] (buffer) wcscat:Does not check for buffer overflows when concatenating to destination [MS-banned] (CWE-120).  
_GL_WARN_ON_USE (wcscat, "wcscat is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:452:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (link + 2, linkfile);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:460:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (link + 3 * i, linkfile);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:581:11:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
          strcpy (filename_plus_orig_suffix + filename_len, ORIG_SFX);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:819:15:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
              strcpy (p, target);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:851:15:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
              strcpy (ntarget, target);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2521:9:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
        sprintf (newdir, "%s%s", odir, f->name);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2524:9:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
        sprintf (newdir, "%s/%s", odir, f->name);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:491:5:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
    snprintf (ntlmbuf, sizeof (ntlmbuf),
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1840:3:  [4] (format) snprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
  snprintf (buf, bufsize, time_format, wkday[gtm->tm_wday],
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5026:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
  sprintf (t1, "%s:%s", user, passwd);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5389:7:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
      strcpy (hs->local_file + local_filename_len, ext);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5396:13:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
            sprintf (hs->local_file + local_filename_len,
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:437:7:  [4] (format) vfprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
      vfprintf (fp, fmt, args);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:453:16:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
  numwritten = vsnprintf (write_ptr, available_size, fmt, args);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:484:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (cp + 3, s);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1071:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (buf, "%ss", print_decimal (interval));
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1085:10:  [4] (misc) getpass:This function is obsolete and not portable. It was in SUSv2 but removed by POSIX.2.  What it does exactly varies considerably between systems, particularly in where its prompt is displayed and where it gets its data (e.g., /dev/tty, stdin, stderr, etc.). In addition, some implementations overflow buffers. (CWE-676, CWE-120, CWE-20).  Make the specific calls to do exactly what you want.  If you continue to use it, or write your own, be sure to zero the password as soon as possible to avoid leaving the cleartext password visible in the process' address space. 
  return getpass("");
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1604:7:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
      fprintf (stderr,
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:372:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
  sprintf (title_buf, "Wget %s", curr_url);
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:400:3:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
  sprintf (title_buf, "Wget [%d%%] %s", percentage, curr_url);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1107:12:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
      p += sprintf (p, "%s", bp->f_download);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1240:8:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
  p += sprintf (p, "%s", down_size);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1253:12:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
      p += sprintf (p, "  %4.*f%s", dlspeed >= 99.95 ? 0 : dlspeed >= 9.995 ? 1 : 2,
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1292:16:  [4] (format) sprintf:Potential format string problem (CWE-134).  Make format string constant. 
          p += sprintf (p, get_eta(&bytes_cols_diff),
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1317:18:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
        ncols += sprintf (p + nbytes, "%s",  eta_to_human_short ((int) (dl_total_time + 0.5), false));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1319:18:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
        ncols += sprintf (p + nbytes, "%ss", print_decimal (dl_total_time));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1452:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (buf, "%dm%s%ds", secs / 60, space, secs % 60);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1454:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (buf, "%dh%s%dm", secs / 3600, space, (secs / 60) % 60);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1456:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (buf, "%dd%s%dh", secs / 86400, space, (secs / 3600) % 24);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:341:11:  [4] (format) vsnprintf:If format strings can be influenced by an attacker, they can be exploited, and note that sprintf variations do not always \0-terminate (CWE-134).  Use a constant for the format specification. 
      n = vsnprintf (str, size, fmt, args);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1035:3:  [4] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). 
  strcpy (result + (cut - base) + 1, file);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:884:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (new_filename, "%s-meta.%s", opt.warc_filename, extension);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:887:7:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
      sprintf (new_filename, "%s-%05d.%s", opt.warc_filename,
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:891:5:  [4] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. 
    sprintf (new_filename, "%s.%s", opt.warc_filename, extension);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1311:11:  [4] (tmpfile) mktemp:Temporary file race condition (CWE-377).  
    tfn = mktemp (filename);            /* Get unique name from template. */
/home/capstone/Desktop/root/wget-1.21.1/src/wget.h:106:56:  [4] (format) printf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
# define GCC_FORMAT_ATTR(a, b) __attribute__ ((format (printf, a, b)))
/home/capstone/Desktop/root/wget-1.21.1/util/trunc.c:95:11:  [4] (format) fprintf:If format strings can be influenced by an attacker, they can be exploited (CWE-134).  Use a constant for the format specification. 
          fprintf (stderr, PROGRAM_NAME ": Unrecognized option `%c'.\n\n",
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:72:25:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
	const char *valgrind = getenv("VALGRIND_TESTS");
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch_loop.c:238:33:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
              posixly_correct = getenv ("POSIXLY_CORRECT") != NULL ? 1 : -1;
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch_loop.c:946:29:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
          posixly_correct = getenv ("POSIXLY_CORRECT") != NULL ? 1 : -1;
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch_loop.c:1008:29:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
          posixly_correct = getenv ("POSIXLY_CORRECT") != NULL ? 1 : -1;
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-core.h:91:12:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-ext.h:66:12:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
extern int getopt_long (int ___argc, char *__getopt_argv_const *___argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-core.h:40:9:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# undef getopt
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-core.h:45:10:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# define getopt __GETOPT_ID (getopt)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-core.h:45:30:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# define getopt __GETOPT_ID (getopt)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-ext.h:40:9:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# undef getopt_long
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-ext.h:44:10:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# define getopt_long __GETOPT_ID (getopt_long)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt-pfx-ext.h:44:35:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
# define getopt_long __GETOPT_ID (getopt_long)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:405:33:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  else if (posixly_correct || !!getenv ("POSIXLY_CORRECT"))
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:736:14:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
GETOPT_ENTRY(getopt, 0)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:739:14:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
GETOPT_ENTRY(getopt, 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:758:11:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
      c = getopt (argc, argv, "abc:d:0123456789");
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt1.c:28:1:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
getopt_long (int argc, char *__getopt_argv_const *argv, const char *options,
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt1.c:94:11:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
      c = getopt_long (argc, argv, "abc:d:0123456789",
/home/capstone/Desktop/root/wget-1.21.1/lib/getrandom.c:55:9:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
# undef LoadLibrary
/home/capstone/Desktop/root/wget-1.21.1/lib/getrandom.c:56:10:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
# define LoadLibrary LoadLibraryA
/home/capstone/Desktop/root/wget-1.21.1/lib/getrandom.c:75:20:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
  HMODULE bcrypt = LoadLibrary ("bcrypt.dll");
/home/capstone/Desktop/root/wget-1.21.1/lib/gettimeofday.c:35:9:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
# undef LoadLibrary
/home/capstone/Desktop/root/wget-1.21.1/lib/gettimeofday.c:36:10:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
# define LoadLibrary LoadLibraryA
/home/capstone/Desktop/root/wget-1.21.1/lib/gettimeofday.c:52:22:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
  HMODULE kernel32 = LoadLibrary ("kernel32.dll");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:858:16:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      locale = getenv ("LC_ALL");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:861:20:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
          locale = getenv ("LC_CTYPE");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:863:22:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
            locale = getenv ("LANG");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:962:12:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  locale = getenv ("LC_ALL");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:965:16:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      locale = getenv ("LC_CTYPE");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:967:18:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
        locale = getenv ("LANG");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1090:16:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      locale = getenv ("LC_ALL");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1093:20:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
          locale = getenv ("LC_CTYPE");
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1095:22:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
            locale = getenv ("LANG");
/home/capstone/Desktop/root/wget-1.21.1/lib/mbtowc-lock.c:76:11:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
          InitializeCriticalSection (&lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/mbtowc-lock.h:45:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/mktime.c:94:20:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  const char *tz = getenv ("TZ");
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo-lock.c:76:11:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
          InitializeCriticalSection (&lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:197:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/secure_getenv.c:36:10:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  return getenv (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/secure_getenv.c:40:10:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  return getenv (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/secure_getenv.c:50:10:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  return getenv (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale-lock.c:76:11:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
          InitializeCriticalSection (&lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:194:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:170:44:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
            find_in_given_path (prog_path, getenv ("PATH"), NULL, false);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:110:9:  [3] (shell) CreateProcess:This causes a new process to execute and is difficult to use safely (CWE-78).  Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run. 
# undef CreateProcess
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:111:10:  [3] (shell) CreateProcess:This causes a new process to execute and is difficult to use safely (CWE-78).  Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run. 
# define CreateProcess CreateProcessA
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:648:53:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      find_in_given_path (prog_filename, use_path ? getenv ("PATH") : "",
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:903:10:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  path = getenv ("PATH");
/home/capstone/Desktop/root/wget-1.21.1/lib/stat-w32.c:56:8:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
#undef LoadLibrary
/home/capstone/Desktop/root/wget-1.21.1/lib/stat-w32.c:57:9:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
#define LoadLibrary LoadLibraryA
/home/capstone/Desktop/root/wget-1.21.1/lib/stat-w32.c:91:22:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
  HMODULE kernel32 = LoadLibrary ("kernel32.dll");
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1332:11:  [3] (tmpfile) tempnam:Temporary file race condition (CWE-377).  
#   undef tempnam
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1333:12:  [3] (tmpfile) tempnam:Temporary file race condition (CWE-377).  
#   define tempnam _tempnam
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1335:19:  [3] (tmpfile) tempnam:Temporary file race condition (CWE-377).  
_GL_CXXALIAS_MDA (tempnam, char *, (const char *dir, const char *prefix));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1337:19:  [3] (tmpfile) tempnam:Temporary file race condition (CWE-377).  
_GL_CXXALIAS_SYS (tempnam, char *, (const char *dir, const char *prefix));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1339:19:  [3] (tmpfile) tempnam:Temporary file race condition (CWE-377).  
_GL_CXXALIASWARN (tempnam);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:786:11:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   undef random
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:787:12:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   define random rpl_random
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:789:19:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_RPL (random, long, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:790:19:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_RPL (random, long, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:793:19:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_SYS (random, long, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:797:24:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_SYS_CAST (random, long, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:799:19:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIASWARN (random);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:801:9:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
# undef random
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:803:18:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_WARN_ON_USE (random, "random is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:811:11:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   undef srandom
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:812:12:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   define srandom rpl_srandom
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:814:19:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_RPL (srandom, void, (unsigned int seed));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:815:19:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_RPL (srandom, void, (unsigned int seed));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:818:19:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_SYS (srandom, void, (unsigned int seed));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:822:24:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_SYS_CAST (srandom, void, (unsigned int seed));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:824:19:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIASWARN (srandom);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:826:9:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
# undef srandom
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:828:18:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_WARN_ON_USE (srandom, "srandom is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:867:11:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   undef setstate
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:868:12:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
#   define setstate rpl_setstate
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:870:19:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_RPL (setstate, char *, (char *arg_state) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:871:19:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_RPL (setstate, char *, (char *arg_state));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:874:19:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_FUNCDECL_SYS (setstate, char *, (char *arg_state) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:878:24:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIAS_SYS_CAST (setstate, char *, (char *arg_state));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:880:19:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_CXXALIASWARN (setstate);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:882:9:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
# undef setstate
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:884:18:  [3] (random) setstate:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
_GL_WARN_ON_USE (setstate, "setstate is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1053:12:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
#   define realpath rpl_realpath
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1055:19:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_FUNCDECL_RPL (realpath, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1058:19:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_CXXALIAS_RPL (realpath, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1062:19:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_FUNCDECL_SYS (realpath, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1066:19:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_CXXALIAS_SYS (realpath, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1069:19:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_CXXALIASWARN (realpath);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1071:9:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
# undef realpath
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:1073:18:  [3] (buffer) realpath:This function does not protect against buffer overflows, and some implementations can overflow internally (CWE-120/CWE-785!).  Ensure that the destination buffer is at least of size MAXPATHLEN, andto protect against implementation problems, the input argument should also be checked to ensure it is no larger than MAXPATHLEN. 
_GL_WARN_ON_USE (realpath, "realpath is unportable - use gnulib module "
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-mutex.c:30:3:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  InitializeCriticalSection (&mutex->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-mutex.c:52:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&mutex->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-once.c:35:11:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
          InitializeCriticalSection (&once_control->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-once.c:36:11:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
          EnterCriticalSection (&once_control->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-once.c:55:15:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
              EnterCriticalSection (&once_control->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-recmutex.c:32:3:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  InitializeCriticalSection (&mutex->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-recmutex.c:58:9:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
        EnterCriticalSection (&mutex->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:126:3:  [3] (misc) InitializeCriticalSection:Exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  InitializeCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:151:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:183:15:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
              EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:211:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:240:15:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
              EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:270:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:306:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-rwlock.c:324:3:  [3] (misc) EnterCriticalSection:On some versions of Windows, exceptions can be thrown in low-memory situations.  Use InitializeCriticalSectionAndSpinCount instead. 
  EnterCriticalSection (&lock->lock);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:46:8:  [3] (shell) CreateProcess:This causes a new process to execute and is difficult to use safely (CWE-78).  Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run. 
#undef CreateProcess
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:47:9:  [3] (shell) CreateProcess:This causes a new process to execute and is difficult to use safely (CWE-78).  Specify the application path in the first argument, NOT as part of the second, or embedded spaces could allow an attacker to force a different program to run. 
#define CreateProcess CreateProcessA
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:589:35:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
    find_in_given_path (progname, getenv ("PATH"), NULL, false);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:943:18:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      if ((tok = getenv ( "WGET_TIMEZONE_DIFFERENTIAL")) != NULL)
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:416:9:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  tmp = getenv ("no_proxy");
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:527:14:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      home = getenv ("HOME");
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:577:15:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  char *env = getenv ("WGETRC");
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:754:15:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  env_sysrc = getenv ("SYSTEM_WGETRC");
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1462:9:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
  env = getenv (env_name);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1466:13:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      env = getenv (env_name);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1425:21:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
  while ((retconf = getopt_long (argc, argv,
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1466:17:  [3] (buffer) getopt_long:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
  while ((ret = getopt_long (argc, argv,
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:1484:49:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      proxy = opt.http_proxy ? opt.http_proxy : getenv ("http_proxy");
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:1488:51:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      proxy = opt.https_proxy ? opt.https_proxy : getenv ("https_proxy");
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:1491:47:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      proxy = opt.ftp_proxy ? opt.ftp_proxy : getenv ("ftps_proxy");
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:1495:47:  [3] (buffer) getenv:Environment variables are untrustable input if they can be set by an attacker.  They can have any content and length, and the same variable can be set more than once (CWE-807, CWE-20).  Check environment variables carefully before using them. 
      proxy = opt.ftp_proxy ? opt.ftp_proxy : getenv ("ftp_proxy");
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1984:7:  [3] (random) srandom:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
      srandom ((long) time (NULL) ^ (long) getpid ());
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1987:10:  [3] (random) random:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
  return random () % max;
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1994:10:  [3] (random) lrand48:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
  return lrand48 () % max;
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2001:7:  [3] (random) srand:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
      srand ((unsigned) time (NULL) ^ (unsigned) getpid ());
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2031:10:  [3] (random) drand48:This function is not sufficiently random for security-related functions such as key and nonce creation (CWE-327).  Use a more secure technique for acquiring random values. 
  return drand48 ();
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:696:27:  [3] (misc) LoadLibrary:Ensure that the full path to the library is specified, or current directory may be used (CWE-829, CWE-20).  Use registry entry or GetWindowsDirectory to find library path, if you aren't already. 
      HMODULE hm_rpcrt4 = LoadLibrary ("Rpcrt4.dll");
/home/capstone/Desktop/root/wget-1.21.1/util/trunc.c:88:20:  [3] (buffer) getopt:Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20).  Check implementation on installation, or limit the size of all string inputs. 
  while ((option = getopt (argc, argv, "c")) != -1)
/home/capstone/Desktop/root/wget-1.21.1/fuzz/fuzzer.h:25:11:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	int fd = open("/dev/null", O_WRONLY); \
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:51:4:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			char fname[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:80:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char cmd[strlen(argv[0]) + 256];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:85:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char cmd[strlen(valgrind) + strlen(argv[0]) + 32];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:110:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		char corporadir[sizeof(SRCDIR) + 1 + target_len + 8];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:144:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	unsigned char buf[64 * 1024];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_cookie_fuzzer.c:53:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_cookie_fuzzer.c:76:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy(set_cookie, data, size);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_css_fuzzer.c:58:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_ftpls_fuzzer.c:54:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_html_fuzzer.c:59:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_netrc_fuzzer.c:53:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_ntlm_fuzzer.c:57:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_ntlm_fuzzer.c:89:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy(data0, "NTLM", 4);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_ntlm_fuzzer.c:90:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy(data0 + 4, data, size);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_options_fuzzer.c:51:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_progress_fuzzer.c:56:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:55:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:74:2:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	char peekbuf[512];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:86:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(buf, g_data + g_read, n);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:87:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(ctx->peekbuf, g_data + g_read, n);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:101:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (buf, ctx->peekbuf, copysize);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_read_hunk_fuzzer.c:113:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(buf, g_data + g_read, n);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_robots_fuzzer.c:54:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_url_fuzzer.c:53:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
	return fopen("/dev/null", mode);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/wget_url_fuzzer.c:79:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy(in, data, size);
/home/capstone/Desktop/root/wget-1.21.1/lib/af_alg.c:159:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char buf[BLOCKSIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/alloca.c:112:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char align[ALIGN_SIZE];       /* To force sizeof(header).  */
/home/capstone/Desktop/root/wget-1.21.1/lib/at-func.c:89:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char proc_buf[OPENAT_BUFFER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/base32.c:68:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static const char b32str[32] =
/home/capstone/Desktop/root/wget-1.21.1/lib/base32.c:209:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const signed char b32[0x100] = {
/home/capstone/Desktop/root/wget-1.21.1/lib/base32.h:34:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[8];
/home/capstone/Desktop/root/wget-1.21.1/lib/basename.c:51:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (p + 2, base, length);
/home/capstone/Desktop/root/wget-1.21.1/lib/btowc.c:31:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[1];
/home/capstone/Desktop/root/wget-1.21.1/lib/canonicalize.c:272:21:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                    memcpy (dest, name + 2, i - 2 + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/canonicalize.c:405:28:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              name = end = memcpy (extra_buf, buf, n);
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:64:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (result, directory, directory_len);
/home/capstone/Desktop/root/wget-1.21.1/lib/dirent-private.h:41:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char dir_name_mask[1];
/home/capstone/Desktop/root/wget-1.21.1/lib/dirent.in.h:41:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char d_name[1];
/home/capstone/Desktop/root/wget-1.21.1/lib/dirname-lgpl.c:81:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (dir, file, length);
/home/capstone/Desktop/root/wget-1.21.1/lib/dup.c:70:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char path[_MAX_PATH];
/home/capstone/Desktop/root/wget-1.21.1/lib/dup.c:74:17:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
        dupfd = open (path, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/lib/dup2.c:116:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  tempfd = open ("NUL", O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/lib/dup2.c:124:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char path[_MAX_PATH];
/home/capstone/Desktop/root/wget-1.21.1/lib/dup2.c:128:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      return open(path, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/lib/error.c:180:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char errbuf[1024];
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.c:61:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char fds_to_close[OPEN_MAX_MAX / CHAR_BIT];
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:164:11:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   undef open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:165:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   define open rpl_open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:167:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_FUNCDECL_RPL (open, int, (const char *filename, int flags, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:169:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_RPL (open, int, (const char *filename, int flags, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:172:11:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   undef open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:173:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   define open _open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:175:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_MDA (open, int, (const char *filename, int flags, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:177:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_SYS (open, int, (const char *filename, int flags, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:182:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIASWARN (open);
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:185:9:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# undef open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:187:18:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_WARN_ON_USE (open, "open is not always POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:195:11:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   undef open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:196:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   define open _open
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:198:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_MDA (open, int, (const char *filename, int flags, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:200:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_SYS (open, int, (const char *filename, int flags, ...));
/home/capstone/Desktop/root/wget-1.21.1/lib/fcntl.in.h:203:19:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIASWARN (open);
/home/capstone/Desktop/root/wget-1.21.1/lib/fdopendir.c:71:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char path[_MAX_PATH];
/home/capstone/Desktop/root/wget-1.21.1/lib/fdopendir.c:182:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[OPENAT_BUFFER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/filenamecat-lgpl.c:32:47:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
# define mempcpy(D, S, N) ((void *) ((char *) memcpy (D, S, N) + (N)))
/home/capstone/Desktop/root/wget-1.21.1/lib/findprog-in.c:331:33:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                                memcpy (progpathname + 2, progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:179:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char s[CHAR_CLASS_MAX_LENGTH + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:32:10:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  return fopen (filename, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:56:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char fdopen_mode_buf[BUF_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:140:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (q, p, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:179:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
        fd = open (filename, open_direction | open_flags,
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:213:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open (filename, open_direction | open_flags,
/home/capstone/Desktop/root/wget-1.21.1/lib/fseeko.c:62:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      FILE *tmp = fopen ("/dev/null", "r");
/home/capstone/Desktop/root/wget-1.21.1/lib/ftello.c:76:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      FILE *tmp = fopen ("/dev/null", "r");
/home/capstone/Desktop/root/wget-1.21.1/lib/getaddrinfo.c:311:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (&sinp->sin6_addr, he->h_addr_list[0], sizeof sinp->sin6_addr);
/home/capstone/Desktop/root/wget-1.21.1/lib/getaddrinfo.c:335:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (&sinp->sin_addr, he->h_addr_list[0], sizeof sinp->sin_addr);
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd-lgpl.c:84:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char tmp[4032];
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:178:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char dots[DEEP_NESTING * sizeof ".." + BIG_FILE_NAME_COMPONENT_LENGTH + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:218:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char big_buffer[BIG_FILE_NAME_LENGTH + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:394:13:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            memcpy (dotlist + dotlen, d->d_name, _D_ALLOC_NAMLEN (d));
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:430:22:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              dirp = memcpy (tmp + allocated - (oldsize - dirroom),
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:437:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dirp, d->d_name, namlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/getpass.c:102:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  tty = fopen ("/dev/tty", "w+e");
/home/capstone/Desktop/root/wget-1.21.1/lib/getpass.c:199:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char getpassbuf[PASS_MAX + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:158:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char status64[1216];
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:228:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char filename[50];
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:231:3:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
  sprintf (filename, "/proc/pinfo/%d", (int) getpid ());
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:232:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fd = open (filename, O_RDONLY | O_CLOEXEC);
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:249:22:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              return memcpy (namecopy, name, namelen);
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:255:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[80];
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:257:3:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
  sprintf (buf, "/proc/%d/cmdline", getpid());
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:258:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fd = open (buf, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/lib/getrandom.c:179:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open (randdevice[devrandom], oflags);
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:227:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char msg_ctxt_id[msgctxt_len + msgid_len];
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:229:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:238:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:240:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:275:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char msg_ctxt_id[msgctxt_len + msgid_len];
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:277:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:286:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (msg_ctxt_id, msgctxt, msgctxt_len - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:288:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (msg_ctxt_id + msgctxt_len, msgid, msgid_len);
/home/capstone/Desktop/root/wget-1.21.1/lib/group-member.c:109:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      gid = atoi (argv[i]);
/home/capstone/Desktop/root/wget-1.21.1/lib/hard-locale.c:29:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char locale[SETLOCALE_NULL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:127:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char tmp[sizeof "255.255.255.255"];
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:130:9:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
  len = sprintf (tmp, "%u.%u.%u.%u", src[0], src[1], src[2], src[3]);
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:161:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char tmp[sizeof "ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"], *tp;
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:234:19:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
        int len = sprintf (tp, "%x", words[i]);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:88:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  const char alias[11+1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:89:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  const char canonical[11+1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:579:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  const char locale[17+1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:580:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  const char canonical[11+1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:856:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      static char resultbuf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:883:19:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                  memcpy (resultbuf, dot, modifier - dot);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:902:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        char buf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:904:9:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
        sprintf (buf, "CP%u", GetACP ());
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:917:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:918:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char resultbuf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:939:7:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
      sprintf (buf, "CP%u", GetACP ());
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:954:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char resultbuf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:986:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (resultbuf, dot, modifier - dot);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1004:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char buf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:1006:11:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
          sprintf (buf, "CP%u", cp[0]);
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/dynarray_at_failure.c:27:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[200];
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/dynarray_emplace_enlarge.c:63:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (new_array, list->array, list->used * element_size);
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/dynarray_finalize.c:51:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (heap_array, list->array, allocation_size);
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/dynarray_resize.c:53:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (new_array, list->array, list->used * element_size);
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/scratch_buffer.h:69:32:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  union { max_align_t __align; char __c[1024]; } __space;
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/scratch_buffer_dupfree.c:33:29:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      return copy != NULL ? memcpy (copy, data, size) : NULL;
/home/capstone/Desktop/root/wget-1.21.1/lib/malloc/scratch_buffer_grow_preserve.c:40:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (new_ptr, buffer->__space.__c, buffer->length);
/home/capstone/Desktop/root/wget-1.21.1/lib/mbchar.h:168:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[MBCHAR_BUF_SIZE]; /* room for the bytes, used for file input only */
/home/capstone/Desktop/root/wget-1.21.1/lib/mbchar.h:265:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&new_mbc->buf[0], &old_mbc->buf[0], old_mbc->bytes);
/home/capstone/Desktop/root/wget-1.21.1/lib/mbiter.h:188:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (&new_iter->state, &old_iter->state, sizeof (mbstate_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/mbrtowc-impl.h:41:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char buf[4];
/home/capstone/Desktop/root/wget-1.21.1/lib/mbrtowc.c:59:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char internal_state[4];
/home/capstone/Desktop/root/wget-1.21.1/lib/md2.c:60:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (resbuf, ctx->X, 16);
/home/capstone/Desktop/root/wget-1.21.1/lib/md2.c:84:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (ctx->buf, ctx->chksum, 16);
/home/capstone/Desktop/root/wget-1.21.1/lib/md2.c:191:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (ctx->buf + ctx->curlen, in, (size_t) n);
/home/capstone/Desktop/root/wget-1.21.1/lib/md2.c:206:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char PI_SUBST[256] = {
/home/capstone/Desktop/root/wget-1.21.1/lib/md2.h:34:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char chksum[16], X[48], buf[16];
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:50:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char fillbuf[64] = { 0x80, 0 /* , 0, 0, ...  */  };
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:73:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, &v, sizeof v);
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:105:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&((char*)ctx->buffer)[bytes], fillbuf, pad);
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:220:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char*)ctx->buffer)[left_over], buffer, add);
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:229:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &((char*)ctx->buffer)[(left_over + add) & ~63],
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:245:32:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            md4_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:263:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char*)ctx->buffer)[left_over], buffer, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/md4.c:269:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &ctx->buffer[16], left_over);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:70:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char fillbuf[64] = { 0x80, 0 /* , 0, 0, ...  */ };
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:93:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, &v, sizeof v);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:128:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:252:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, add);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:262:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer,
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:279:32:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            md5_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:297:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/md5.c:305:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &ctx->buffer[16], left_over);
/home/capstone/Desktop/root/wget-1.21.1/lib/mempcpy.c:27:19:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  return (char *) memcpy (dest, src, n) + n;
/home/capstone/Desktop/root/wget-1.21.1/lib/mkstemp.c:47:1:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
mkstemp (char *xtemplate)
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:73:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char result[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:74:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[2 + 10 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:75:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char locale[SETLOCALE_NULL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:103:29:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                  codeset = memcpy (buf, codeset_start, codesetlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:120:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf + 2, "%u", GetACP ());
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:127:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (buf, "CP", 2);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:159:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char result[ITEMS][MAX_RESULT_LEN];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:173:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (result[item], tmp, MAX_RESULT_LEN - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:356:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[100];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:397:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        static char result[80];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:405:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        static char result[80];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:420:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        static char result[7][50];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:427:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          return (char *) days[item - DAY_1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:439:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        static char result[7][30];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:445:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          return (char *) abdays[item - ABDAY_1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:467:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          static char result[12][50];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:470:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
            return (char *) months[item - MON_1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:487:18:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          static char result[12][50];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:495:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
              return (char *) months[item - ALTMON_1];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:513:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        static char result[12][30];
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:520:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          return (char *) abmonths[item - ABMON_1];
/home/capstone/Desktop/root/wget-1.21.1/lib/open.c:36:10:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  return open (filename, flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/open.c:59:1:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
open (const char *filename, int flags, ...)
/home/capstone/Desktop/root/wget-1.21.1/lib/open.c:165:16:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          fd = open ("/dev/null", flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-priv.h:47:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char *openat_proc_name (char buf[OPENAT_BUFFER_SIZE], int fd, char const *file);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-priv.h:47:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char *openat_proc_name (char buf[OPENAT_BUFFER_SIZE], int fd, char const *file);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:43:1:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
char *
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:44:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
openat_proc_name (char buf[OPENAT_BUFFER_SIZE], int fd, char const *file)
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:77:11:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          open ("/proc/self/fd",
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:88:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
            char dotdot_buf[PROC_SELF_FD_DIR_SIZE_BOUND + sizeof "../fd" - 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:113:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char dir[_MAX_PATH];
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:223:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    return open (file, flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:226:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char buf[OPENAT_BUFFER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:230:27:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
        int open_result = open (proc_file, flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:267:13:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      err = open (file, flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:294:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  int fd = open ("/", O_SEARCH | O_CLOEXEC);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:298:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[OPENAT_BUFFER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:71:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    int fd = open (dir_name, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:87:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char dir_name_mask[MAX_PATH + 1 + 1 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:160:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (&dirp->entry, &entry, sizeof (WIN32_FIND_DATA));
/home/capstone/Desktop/root/wget-1.21.1/lib/os2-spawn.c:149:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (mem, quoted_string, length + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/printf-parse.c:122:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (memory, a->arg, a->count * sizeof (argument));        \
/home/capstone/Desktop/root/wget-1.21.1/lib/printf-parse.c:593:17:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                memcpy (memory, d->dir, d->count * sizeof (DIRECTIVE));
/home/capstone/Desktop/root/wget-1.21.1/lib/quotearg.c:835:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char slot0[256];
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:79:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char stackbuf[4032];
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:96:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (buf, stackbuf, r);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:312:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
	      unsigned char buf[MB_LEN_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:395:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		  char buf[256];
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:545:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (errbuf, msg, cpy_size);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:3170:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      unsigned char start_name_buf[BRACKET_NAME_BUF_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:3171:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      unsigned char end_name_buf[BRACKET_NAME_BUF_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:3493:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      unsigned char char_buf[2];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex.h:649:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
		    const char *_Restrict_ __String, size_t __nmatch,
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:214:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char buf[MB_LEN_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:217:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char buf[64];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:287:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[MB_LEN_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:290:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[64];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:333:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		    memcpy (pstr->mbs + byte_idx, buf, mbclen);
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:341:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy (pstr->mbs + byte_idx,
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:401:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		  memcpy (pstr->mbs + byte_idx, buf, mbclen);
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:426:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		    memcpy (pstr->mbs + byte_idx, buf, mbcdlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:445:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		  memcpy (pstr->mbs + byte_idx, p, mbclen);
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:448:8:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	      memcpy (pstr->mbs + byte_idx, p, mbclen);
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:740:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
			  unsigned char buf[6];
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1040:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dest->elems, src->elems, src->nelem * sizeof (Idx));
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1134:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (dest->elems, dest->elems + sbase, delta * sizeof (Idx));
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1178:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dest->elems + id, src1->elems + i1,
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1184:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dest->elems + id, src2->elems + i2,
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1215:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dest->elems, src->elems, src->nelem * sizeof (Idx));
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1236:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (dest->elems + sbase, src->elems, (is + 1) * sizeof (Idx));
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.c:1264:8:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	      memcpy (dest->elems, dest->elems + sbase,
/home/capstone/Desktop/root/wget-1.21.1/lib/regex_internal.h:748:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (dest, src, sizeof (bitset_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:344:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy (__mempcpy (s, string1, length1), string2, length2);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:346:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy (s, string1, length1);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:347:2:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	memcpy (s + length1, string2, length2);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:1339:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (fs->stack[num].regs, regs, sizeof (regmatch_t) * nregs);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:1351:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (regs, fs->stack[num].regs, sizeof (regmatch_t) * nregs);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:1404:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (prev_idx_match, pmatch, sizeof (regmatch_t) * nmatch);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:1507:8:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
	      memcpy (prev_idx_match, pmatch, sizeof (regmatch_t) * nmatch);
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:1518:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy (pmatch, prev_idx_match, sizeof (regmatch_t) * nmatch);
/home/capstone/Desktop/root/wget-1.21.1/lib/save-cwd.c:66:15:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  cwd->desc = open (".", O_SEARCH | O_CLOEXEC);
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:70:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char in[FD_SETSIZE / CHAR_BIT];
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:71:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char out[FD_SETSIZE / CHAR_BIT];
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:276:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char anyfds_in[FD_SETSIZE / CHAR_BIT];
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:433:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_rfds, rfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:434:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_wfds, wfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:435:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_xfds, xfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:509:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_rfds, rfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:510:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_wfds, wfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:511:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (&handle_xfds, xfds, sizeof (fd_set));
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:157:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (buf, result, length + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:167:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (buf, result, bufsize - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:322:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[SETLOCALE_NULL_ALL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:323:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      static char resultbuf[SETLOCALE_NULL_ALL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:365:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[SETLOCALE_NULL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:366:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      static char resultbuf[LC_INDICES_COUNT][SETLOCALE_NULL_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:55:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char fillbuf[64] = { 0x80, 0 /* , 0, 0, ...  */ };
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:80:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, &v, sizeof v);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:116:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:239:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, add);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:249:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer,
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:266:33:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            sha1_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:284:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha1.c:292:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &ctx->buffer[16], left_over);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:54:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char fillbuf[64] = { 0x80, 0 /* , 0, 0, ...  */ };
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:100:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, &v, sizeof v);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:151:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 4 - bytes);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:318:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, add);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:328:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer,
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:345:35:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            sha256_process_block (memcpy (ctx->buffer, buffer, 64), 64, ctx);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:363:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha256.c:371:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &ctx->buffer[16], left_over);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:54:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char fillbuf[128] = { 0x80, 0 /* , 0, 0, ...  */ };
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:100:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, &v, sizeof v);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:152:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&((char *) ctx->buffer)[bytes], fillbuf, (size - 2) * 8 - bytes);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:319:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, add);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:329:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer,
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:346:35:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            sha512_process_block (memcpy (ctx->buffer, buffer, 128), 128, ctx);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:364:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (&((char *) ctx->buffer)[left_over], buffer, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/sha512.c:372:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->buffer, &ctx->buffer[16], left_over);
/home/capstone/Desktop/root/wget-1.21.1/lib/snprintf.c:57:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (str, output, pruned_len);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:112:14:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    retval = open (pathname, oflag, mode);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:117:9:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# undef open /* avoid warning on VMS */
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:118:10:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# define open nonintr_open
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:138:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
create_pipe (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:139:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
             const char *prog_path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:140:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
             const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:141:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
             const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:143:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
             const char *prog_stdin, const char *prog_stdout,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:143:44:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
             const char *prog_stdin, const char *prog_stdout,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:244:24:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
       || (nulloutfd = open ("NUL", O_RDWR, 0)) >= 0)
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:247:25:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          || (stdinfd = open (prog_stdin, O_RDONLY, 0)) >= 0)
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:250:26:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          || (stdoutfd = open (prog_stdout, O_WRONLY, 0)) >= 0))
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:370:28:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          || ((nulloutfd = open ("NUL", O_RDWR, 0)) >= 0
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:376:26:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          || ((stdinfd = open (prog_stdin, O_RDONLY, 0)) >= 0
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:382:27:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          || ((stdoutfd = open (prog_stdout, O_WRONLY, 0)) >= 0
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:612:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
create_pipe_bidi (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:613:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:613:48:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:614:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:634:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
create_pipe_in (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:635:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:635:46:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:636:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:637:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                const char *prog_stdin, bool null_stderr,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:659:24:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
create_pipe_out (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:660:24:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                 const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:660:47:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                 const char *prog_path, const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:661:24:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                 const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.c:662:24:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                 const char *prog_stdout, bool null_stderr,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:98:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern pid_t create_pipe_out (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:99:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                              const char *prog_path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:100:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                              const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:101:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                              const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:102:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                              const char *prog_stdout, bool null_stderr,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:113:36:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern pid_t create_pipe_in (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:114:36:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                             const char *prog_path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:115:36:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                             const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:116:36:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                             const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:117:36:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                             const char *prog_stdin, bool null_stderr,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:143:38:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern pid_t create_pipe_bidi (const char *progname,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:144:38:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                               const char *prog_path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:145:38:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                               const char * const *prog_argv,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn-pipe.h:146:38:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                               const char *directory,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:188:26:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   const char *_Restrict_ __path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:191:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const argv[_Restrict_arr_],
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:192:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const envp[_Restrict_arr_])
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:196:26:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   const char *_Restrict_ __path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:199:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const argv[_Restrict_arr_],
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:200:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const envp[_Restrict_arr_]));
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:205:26:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   const char *_Restrict_ __path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:208:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const argv[_Restrict_arr_],
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:209:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const envp[_Restrict_arr_])
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:214:26:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   const char *_Restrict_ __path,
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:217:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const argv[_Restrict_arr_],
/home/capstone/Desktop/root/wget-1.21.1/lib/spawn.in.h:218:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                   char *const envp[_Restrict_arr_]));
/home/capstone/Desktop/root/wget-1.21.1/lib/spawnattr_setsigmask.c:30:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&attr->_ss, sigmask, sizeof (sigset_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:47:26:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# define open_not_cancel open
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:77:10:  [2] (race) vfork:On some old systems, vfork() permits race conditions, and it's very difficult to use correctly (CWE-362).  Use fork() instead. 
# define vfork __vfork
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:266:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (malloca_rname, name, rlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:757:15:  [2] (race) vfork:On some old systems, vfork() permits race conditions, and it's very difficult to use correctly (CWE-362).  Use fork() instead. 
    new_pid = vfork ();
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:924:19:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  name = (char *) memcpy (name + pathlen + 1, file, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:941:27:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        startp = (char *) memcpy (name - (p - path), path, p - path);
/home/capstone/Desktop/root/wget-1.21.1/lib/stat-w32.c:232:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (&buf->st_ino, &id.FileId, sizeof (ino_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/stat-w32.c:285:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
              char fpath[PATH_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/stat.c:179:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (malloca_rname, name, rlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-impl.h:56:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                         unsigned char _ubuf[3]; \
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-impl.h:57:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                         unsigned char _nbuf[1]; \
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-impl.h:95:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                         unsigned char _ubuf[3]; \
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio-impl.h:96:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                         unsigned char _nbuf[1]; \
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:378:11:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   undef fopen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:379:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#   define fopen rpl_fopen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:381:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_FUNCDECL_RPL (fopen, FILE *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:384:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_RPL (fopen, FILE *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:387:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIAS_SYS (fopen, FILE *,
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:391:19:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_CXXALIASWARN (fopen);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:394:9:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# undef fopen
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:396:18:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
_GL_WARN_ON_USE (fopen, "fopen on native Windows platforms is not POSIX compliant - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1345:12:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
#   define tmpfile rpl_tmpfile
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1347:19:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
_GL_FUNCDECL_RPL (tmpfile, FILE *, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1348:19:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
_GL_CXXALIAS_RPL (tmpfile, FILE *, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1350:19:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
_GL_CXXALIAS_SYS (tmpfile, FILE *, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1353:19:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
_GL_CXXALIASWARN (tmpfile);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1356:9:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
# undef tmpfile
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:1358:18:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
_GL_WARN_ON_USE (tmpfile, "tmpfile is not usable on mingw - "
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:540:12:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
#   define mkstemp rpl_mkstemp
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:542:19:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_FUNCDECL_RPL (mkstemp, int, (char * /*template*/) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:543:19:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_CXXALIAS_RPL (mkstemp, int, (char * /*template*/));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:546:19:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_FUNCDECL_SYS (mkstemp, int, (char * /*template*/) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:548:19:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_CXXALIAS_SYS (mkstemp, int, (char * /*template*/));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:550:19:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_CXXALIASWARN (mkstemp);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:552:9:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
# undef mkstemp
/home/capstone/Desktop/root/wget-1.21.1/lib/stdlib.in.h:554:18:  [2] (tmpfile) mkstemp:Potential for temporary file vulnerability in some circumstances.  Some older Unix-like systems create temp files with permission to write by all by default, so be sure to set the umask to override this. Also, some older Unix systems might fail to use O_EXCL when opening the file, so make sure that O_EXCL is used by the library (CWE-377).  
_GL_WARN_ON_USE (mkstemp, "mkstemp is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/strdup.c:47:19:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  return (char *) memcpy (new, s, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror.c:39:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[STACKBUF_LEN];
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror.c:69:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (buf, msg, len + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:193:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char stackbuf[80];
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:220:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        char stackbuf[STACKBUF_LEN];
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:239:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        char stackbuf[STACKBUF_LEN];
/home/capstone/Desktop/root/wget-1.21.1/lib/strndup.c:35:10:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  return memcpy (new, s, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_socket.in.h:116:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char __ss_padding[_SS_PADSIZE];
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:900:44:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
_GL_FUNCDECL_RPL (utimensat, int, (int fd, char const *name,
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:903:44:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
_GL_CXXALIAS_RPL (utimensat, int, (int fd, char const *name,
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:907:44:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
_GL_FUNCDECL_SYS (utimensat, int, (int fd, char const *name,
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:911:44:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
_GL_CXXALIAS_SYS (utimensat, int, (int fd, char const *name,
/home/capstone/Desktop/root/wget-1.21.1/lib/tempname.c:63:17:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
# define __open open
/home/capstone/Desktop/root/wget-1.21.1/lib/tempname.c:163:3:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
  sprintf (tmpl, "%.*s/%.*sXXXXXX", (int) dlen, dir, (int) plen, pfx);
/home/capstone/Desktop/root/wget-1.21.1/lib/tmpdir.c:125:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char dirbuf[PATH_MAX];
/home/capstone/Desktop/root/wget-1.21.1/lib/tmpdir.c:162:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (tmpl, dir, dlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/unicase/special-casing.in.h:36:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  /*unsigned*/ char code[3];
/home/capstone/Desktop/root/wget-1.21.1/lib/unicase/special-casing.in.h:45:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char language[2];
/home/capstone/Desktop/root/wget-1.21.1/lib/unicase/u-casemap.h:70:13:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
            char code[3];
/home/capstone/Desktop/root/wget-1.21.1/lib/unictype/combiningclass.h:14:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    unsigned char level3[75 << 7];
/home/capstone/Desktop/root/wget-1.21.1/lib/uninorm/u-normalize-internal.h:318:17:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                memcpy (new_sortbuf, sortbuf,
/home/capstone/Desktop/root/wget-1.21.1/lib/unistr/u-cpy.h:30:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy ((char *) dest, (const char *) src, n * sizeof (UNIT));
/home/capstone/Desktop/root/wget-1.21.1/lib/uniwidth/width.c:35:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char nonspacing_table_data[38*64] = {
/home/capstone/Desktop/root/wget-1.21.1/lib/uniwidth/width.c:379:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const signed char nonspacing_table_ind[248] = {
/home/capstone/Desktop/root/wget-1.21.1/lib/unlink.c:72:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (short_name, name, len);
/home/capstone/Desktop/root/wget-1.21.1/lib/utime.c:39:28:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
_gl_utimens_windows (const char *name, struct timespec ts[2])
/home/capstone/Desktop/root/wget-1.21.1/lib/utime.c:83:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (malloca_rname, name, rlen);
/home/capstone/Desktop/root/wget-1.21.1/lib/utime.in.h:107:39:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
extern int _gl_utimens_windows (const char *filename, struct timespec ts[2]);
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.c:173:20:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
fdutimens (int fd, char const *file, struct timespec const timespec[2])
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.c:522:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
utimens (char const *file, struct timespec const timespec[2])
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.c:532:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
lutimens (char const *file, struct timespec const timespec[2])
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.h:21:21:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
int fdutimens (int, char const *, struct timespec const [2]);
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.h:22:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
int utimens (char const *, struct timespec const [2]);
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.h:23:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
int lutimens (char const *, struct timespec const [2]);
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.h:37:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
int fdutimensat (int fd, int dir, char const *name, struct timespec const [2],
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.h:42:22:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
lutimensat (int dir, char const *file, struct timespec const times[2])
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:151:21:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
#  define DCHAR_CPY memcpy
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:285:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char hex[16] = "0123456789ABCDEF";
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:363:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char pointbuf[5];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:364:3:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
  sprintf (pointbuf, "%#.0f", 1.0);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:588:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (r_ptr, a_ptr, a_len * sizeof (mp_limb_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:725:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (r_ptr, a_ptr, a_len * sizeof (mp_limb_t));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2741:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2782:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2828:25:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                        char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2837:25:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                        memcpy (tmpptr, cbuf, count);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2905:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2914:27:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                          memcpy (result + length, cbuf, count);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2930:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2948:27:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                          memcpy (result + length, cbuf, count);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3033:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3059:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                      char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3070:23:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                      memcpy (tmpsrc, cbuf, count);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3142:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char cbuf[64]; /* Assume MB_CUR_MAX <= 64.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3154:27:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                          memcpy (result + length, cbuf, count);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3433:35:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                  sprintf ((char *) p, "%+d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3439:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                  char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3441:35:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                  sprintf (expbuf, "%+d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3584:35:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                  sprintf ((char *) p, "%+d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3590:35:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                  char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3592:35:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                  sprintf (expbuf, "%+d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3659:17:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                memcpy (result + length, tmp, count * sizeof (DCHAR_T));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4044:37:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                    sprintf ((char *) p, "%+.2d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4050:37:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                    char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4052:37:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                    sprintf (expbuf, "%+.2d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4225:45:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                            sprintf ((char *) p, "%+.2d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4231:45:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                            char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4233:45:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                                            sprintf (expbuf, "%+.2d", exponent);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4523:39:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                      char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4716:47:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                                              char expbuf[6 + 1];
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4842:17:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                memcpy (result + length, tmp, count * sizeof (DCHAR_T));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5050:29:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                            memcpy (fbp, dp->width_start, n * sizeof (TCHAR_T));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5071:29:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                            memcpy (fbp, dp->precision_start, n * sizeof (TCHAR_T));
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:5782:21:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                    memcpy (result + length, tmp, count * sizeof (DCHAR_T));
/home/capstone/Desktop/root/wget-1.21.1/lib/vsnprintf.c:56:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (str, output, pruned_len);
/home/capstone/Desktop/root/wget-1.21.1/lib/wait-process.c:164:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (new_slaves, old_slaves,
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:187:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (mem, "\"\"", length + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:197:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (mem, string, length + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:235:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (cp, p, size - 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:292:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (envblock + envblock_used, p, size);
/home/capstone/Desktop/root/wget-1.21.1/lib/xmalloc.c:124:10:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  return memcpy (xmalloc (s), p, s);
/home/capstone/Desktop/root/wget-1.21.1/lib/xmemdup0.c:42:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (result, p, s);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:68:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char *arr[1024], **file_array;
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:273:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (file, "wb");
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:451:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (link, "./", 2);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:459:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (link + 3 * i, "../", 3);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:555:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:574:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (filename_plus_orig_suffix, file, filename_len - 4);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:575:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (filename_plus_orig_suffix + filename_len - 4, "orig", 5);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:580:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (filename_plus_orig_suffix, file, filename_len);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:672:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char new_with_timeout[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:741:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:398:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char value_copy[128];
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:405:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (value_copy, value.b, value_len);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:426:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char value_copy[32];
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:432:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (value_copy, value.b, value_len);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:743:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024], *tmp;
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:755:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (tmp + 1, path, pathlen + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1066:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char pathbuf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1095:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (tmp + 1, path, pathlen + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1165:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (result + pos, c->attr, namlen);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1168:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (result + pos, c->value, vallen);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1256:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  FILE *fp = fopen (file, "r");
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1377:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (file, "w");
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1465:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    const char *results[10];
/home/capstone/Desktop/root/wget-1.21.1/src/css-url.c:157:19:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
                  memcpy (uri, yytext + 1, length);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:117:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (defanged, value, len + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:291:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char bytes[6 * 4 + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:381:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char bytes[21 * 4 + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:458:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char bytes[4 + INET6_ADDRSTRLEN + 1 + 5 + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:557:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char spbsz[5];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:589:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char value[2];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:625:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char tmp[6];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:677:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (IP_INADDR_DATA (addr), tmp, 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:693:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char tmp[16];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:694:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char tmpprt[2];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:826:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (IP_INADDR_DATA (addr), tmp, 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:837:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (IP_INADDR_DATA (addr), tmp, 16);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:950:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char stype[2];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:322:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (cur.name, tok, fnlen + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:367:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:375:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:447:15:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      month = atoi(tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:451:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      day = atoi(tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:454:14:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      year = atoi(tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:478:14:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      hour = atoi(tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:481:13:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      min = atoi(tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:541:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:549:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:676:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char date_str[32];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:945:16:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
          dt = atoi (tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:965:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:973:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (l, &cur, sizeof (cur));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:1007:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (file, "rb");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:1067:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fp = fopen (file, "wb");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:42:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
 static char Wp[2048][4] = {
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2121:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char cp[10];         /* add in room for the parity 2 bits +
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2130:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cp, c, 8);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2142:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp,  0, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2145:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp, 11, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2148:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp, 22, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2151:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp, 33, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2154:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp, 44, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2157:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (store, &Wp[extract (cp, 55, 11)][0], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2193:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char key[8];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2197:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char english[30];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2208:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (key, checksum, 8);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2217:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (key, checksum, 8);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:760:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char targetbuf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:816:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (p, con->id, idlen);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1461:20:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              fp = fopen (con->target, "ab", FOPEN_OPT_ARGS_BIN);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1466:20:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              fp = fopen (con->target, "a", FOPEN_OPT_ARGS);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1469:16:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          fp = fopen (con->target, "ab");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1495:20:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              fp = fopen (con->target, "wb", FOPEN_OPT_ARGS_BIN);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1500:20:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              fp = fopen (con->target, "w", FOPEN_OPT_ARGS);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1503:16:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          fp = fopen (con->target, "wb");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1700:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fp = fopen (con->target, "r");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1955:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char tmp[256];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1956:11:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
          strcpy (tmp, "        ");
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:1958:13:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
            sprintf (tmp, _("(try:%2d)"), count);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2339:27:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                          char buf[1024], *link_target;
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2486:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2666:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:143:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
              char ca_file[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:254:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char peekbuf[512];
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:379:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (buf, ctx->peekbuf, copysize);
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:446:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (buf, ctx->peekbuf, offset);
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:472:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ctx->peekbuf + offset, buf + offset,
/home/capstone/Desktop/root/wget-1.21.1/src/hash.c:775:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char line[80];
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:288:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (IP_INADDR_DATA (ip), vec[i], 4);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:426:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[64];
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:658:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (al1->addresses + al1->count, al2->addresses, sizeof (ip_address) * al2->count);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:685:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (IP_INADDR_DATA (ip), host->h_addr_list[i], ip->family == AF_INET ? 4 : 16);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:796:9:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
        char *vec[2];
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:158:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (kh, k, sizeof (struct hsts_kh));
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:281:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char host[256];
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:561:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fp = fopen (filename, "a+");
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:634:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fp = fopen (filename, "w");
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:800:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fp = fopen (file, "w");
/home/capstone/Desktop/root/wget-1.21.1/src/html-parse.c:193:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy ((p)->contents + (p)->tail, PA_beg, PA_size);  \
/home/capstone/Desktop/root/wget-1.21.1/src/html-parse.c:249:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ga_new, basevar, (sizevar) * sizeof (type));                  \
/home/capstone/Desktop/root/wget-1.21.1/src/html-parse.c:780:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[256], *copy;
/home/capstone/Desktop/root/wget-1.21.1/src/html-parse.c:792:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (copy, b, len);
/home/capstone/Desktop/root/wget-1.21.1/src/html-parse.c:847:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char pool_initial_storage[256];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:121:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buffer[48]; // decode 48 bytes needs ((48 + 2) / 3) * 4 + 1 bytes
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:133:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (ntlm->nonce, &buffer[24], 8);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:172:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char key[8];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:254:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char lmbuffer[21];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:256:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char ntbuffer[21];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:258:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char pw[14];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:310:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    unsigned char pw4[64];
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:356:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char ntlmbuf[256]; /* enough, unless the host/domain is very long */
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:428:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy(output, "NTLM ", 5);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:455:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    unsigned char lmresp[0x18]; /* fixed-size */
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:457:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    unsigned char ntresp[0x18]; /* fixed-size */
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:577:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy(&ntlmbuf[size], domain, domlen);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:580:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy(&ntlmbuf[size], usr, userlen);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:585:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy(&ntlmbuf[size], lmresp, 0x18);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:591:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy(&ntlmbuf[size], ntresp, 0x18);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:601:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy(output, "NTLM ", 5);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.h:45:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char nonce[8];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:322:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (p, str, A_len);                       \
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:358:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (p, "HTTP/1.1\r\n", 10); p += 10;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:474:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char chunk[8192];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:481:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (file_name, "rb");
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:759:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (buf, b, len);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:870:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024], *copy;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:878:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy(copy, b, len);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:979:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char dlbuf[SKIP_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1215:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (*filename + original_length, value->b, (value->e - value->b));
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1892:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char strtime[32];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1900:11:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
          strcpy (strtime, "Thu, 01 Jan 1970 00:00:00 GMT");
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2237:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2265:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (filename_plus_orig_suffix, hs->local_file, filename_len);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2266:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (filename_plus_orig_suffix + filename_len,
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2385:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[256], *tmp = NULL;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2415:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (tmp, wabeg, len);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2553:17:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          *fp = fopen (hs->local_file, "ab", FOPEN_OPT_ARGS);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2555:17:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          *fp = fopen (hs->local_file, "ab");
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2574:17:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          *fp = fopen (hs->local_file, "wb", FOPEN_OPT_ARGS);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2578:29:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              *fp = fdopen (open (hs->local_file, O_BINARY | O_CREAT | O_TRUNC | O_WRONLY, S_IRUSR | S_IWUSR), "wb");
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2582:21:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              *fp = fopen (hs->local_file, "wb");
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2818:27:  [2] (tmpfile) tmpfile:Function tmpfile() has a security flaw on some systems (e.g., older System V systems) (CWE-377).  
          output_stream = tmpfile ();
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3069:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char bin_hash[256];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3223:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char hdrval[512];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3229:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char warc_timestamp_str [21];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3230:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char warc_request_uuid [48];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3551:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char buf[1024], *set_cookie;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3559:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (set_cookie, scbeg, len);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4218:11:  [2] (integer) atoi:Unless checked, the resulting number can exceed the expected range (CWE-190).  If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended). 
      if (atoi (tok) == statcode)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4361:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
              char tmp[256];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4362:15:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
              sprintf (tmp, _("(try:%2d)"), count);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4948:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char savedlocale[256];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4962:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (savedlocale, oldlocale, l);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5012:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf_t1[256], buf_t2[256];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5081:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char cnonce[16] = "";
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5125:14:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    unsigned char hash[MD5_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5126:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char a1buf[MD5_DIGEST_SIZE * 2 + 1], a2buf[MD5_DIGEST_SIZE * 2 + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5127:5:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    char response_digest[MD5_DIGEST_SIZE * 2 + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5370:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char shortext[8];
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5376:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (shortext, ext, len - 1);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:847:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:894:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (cmdcopy, cmdstart, len);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:977:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char dd_optname[2 + MAX_LONGOPTION + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:137:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char static_line[STATIC_LENGTH + 1]; /* statically allocated
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:205:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ln->static_line, start, len);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:223:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ln->malloced_line + old_len, start, len);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:236:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (ln->malloced_line, ln->static_line,
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:238:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (ln->malloced_line + old_len, start, len);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:246:15:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
              memcpy (ln->static_line + old_len, start, len);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:423:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char smallmsg[128];
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:638:23:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          filelogfp = fopen (file, appendp ? "a" : "w");
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:159:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char MBCP[16] = "";
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:246:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char long_name[MAX_LONGOPTION];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:476:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buffer[2048];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:491:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char short_options[128];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:494:17:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static unsigned char optmap[96];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1056:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[32];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1065:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf, "%dd %dh %dm %ds", days, hours, mins, secs);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1067:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf, "%dh %dm %ds", hours, mins, secs);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1069:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf, "%dm %ds", mins, secs);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1096:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char tmp[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1101:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char *argv[3], *p;
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1166:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char question[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1408:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (p, argv[i], arglen);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1990:27:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
          output_stream = fopen (opt.output_document,
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:452:37:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
                    output_stream = fopen (safename, "ab");
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:506:28:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
              local_file = fopen (destname, "rb");
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:553:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md2[MD2_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:554:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md2_txt[2 * MD2_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:556:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md4[MD4_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:557:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md4_txt[2 * MD4_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:559:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md5[MD5_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:560:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char md5_txt[2 * MD5_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:562:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha1[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:563:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha1_txt[2 * SHA1_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:565:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha224[SHA224_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:566:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha224_txt[2 * SHA224_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:568:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha256[SHA256_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:569:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha256_txt[2 * SHA256_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:571:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha384[SHA384_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:572:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha384_txt[2 * SHA384_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:574:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha512[SHA512_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:575:19:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
                  char sha512_txt[2 * SHA512_DIGEST_SIZE + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:718:24:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
                  fd = open (destname, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1029:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char *new, buf[24];
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1190:21:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    output_stream = fopen (filename, "ab");
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:122:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char lfilename[MAX_PATH + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:192:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char exe[MAX_PATH + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:414:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char buf[MAX_PATH + 1];
/home/capstone/Desktop/root/wget-1.21.1/src/netrc.c:451:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (path, "r");
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:75:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char namebuf[256];
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:726:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (errmsg + msglen, str, len);
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:1021:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char common_name[256];
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:667:27:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
                  dest += sprintf (dest, "%%%02x", (unsigned char) *(mb_ptr(mbc) + i));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:703:23:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
              dest += sprintf (dest, "%%%02x", (unsigned char) *src );
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1039:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (p, s, sizeof (s) - 1);                \
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1150:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (p, bp->f_download + offset_bytes, bytes_in_filename);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1163:12:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
      p += sprintf (p, "%3d%%", percentage);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1312:7:  [2] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant string.
      strcpy (p, _("    in "));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1438:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[16]; /* enough space to be on the safe side */
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1450:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf, "%ds", secs);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1459:5:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
    sprintf (buf, "%dd", secs / 86400);
/home/capstone/Desktop/root/wget-1.21.1/src/recur.c:261:21:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      rejectedlog = fopen (opt.rejected_log, "w");
/home/capstone/Desktop/root/wget-1.21.1/src/res.c:489:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[256], *hp, *hp_old;
/home/capstone/Desktop/root/wget-1.21.1/src/res.c:518:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[256], *hp;
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:790:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char res[20];
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:1421:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char from[FILE_BUF_SIZE], to[FILE_BUF_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:142:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char urlchr_table[256] =
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:659:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char seps[8] = ":/";
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1086:5:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
    memcpy (where, f_el, l);                    \
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1180:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (p, edir, dirlen);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1183:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (p, efile, filelen);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1362:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (TAIL (dest), str, l);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1399:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static const unsigned char filechr_table[256] =
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1465:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1492:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
		memcpy(unescaped, b, len);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1525:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (TAIL (dest), b, outlen);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1756:15:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
              char portstr[24];
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2039:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge, base, baselength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2040:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge + baselength, link, linklength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2055:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge, base, baselength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2056:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge + baselength, link, linklength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2086:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (merge, base, span);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2087:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge + span, link, linklength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2141:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (merge, base, span);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2142:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge + span, link, linklength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2179:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (merge, base, span);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2182:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (merge + span, link, linklength);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2191:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (p, s, len);                           \
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:188:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
unsigned char char_prop[ 256] = {
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:246:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (res, beg, end - beg);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:434:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char output[32];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:630:14:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  FILE *fp = fopen (filename, "rb");
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:665:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (template, prefix, plen);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:797:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open( fname,                 /* File name. */
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:807:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open( fname,                 /* File name. */
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:818:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open( fname,                 /* File name. */
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:830:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fd = open (fname, flags, 0666);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:845:10:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  return fopen (fname, binary ? "wb" : "w");
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:875:8:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fp = fopen (fname, mode);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:934:8:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  fd = open (fname, flags, mode);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:972:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buf[1024];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:980:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy(buf, directory, len + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1033:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (result, base, cut - base);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1312:10:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    fd = open (file, O_RDONLY);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1463:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (v1 + i, v2, (j + 1) * sizeof (char *));
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1615:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char outbuf[48];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1654:13:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
            memcpy (p -= seplen, sep, seplen);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1695:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[8];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1913:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char ring[RING_SIZE][24];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2265:16:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static const char tbl[64] = {
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2334:23:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static const signed char base64_char_to_value[128] =
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2586:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ELT (temp, k), ELT (base, i++), size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2588:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (ELT (temp, k), ELT (base, j++), size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2590:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (ELT (temp, k++), ELT (base, i++), size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2592:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (ELT (temp, k++), ELT (base, j++), size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2594:9:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
        memcpy (ELT (base, k), ELT (temp, k), size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2628:10:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  static char buf[32];
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2711:7:  [2] (buffer) sprintf:Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.
      sprintf (str_buffer + 2 * i, "%02x", (unsigned) (hex_buffer[i] & 0xFF));
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2824:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (pinkeycopy, pinnedpubkey, pinkeylen);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2904:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (buf, fm->content, size);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2960:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
    const char *dirlist[3];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:103:8:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
static char warc_current_warcinfo_uuid_str[48];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:123:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char digest[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:131:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (&v, key, sizeof (unsigned long));
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:297:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char content_length[MAX_INT_TO_STRING_LEN(off_t)];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:298:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char buffer[BUFSIZ];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:340:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char extra_header[EXTRA_GZIP_HEADER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:341:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char static_header[GZIP_STATIC_HEADER_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:442:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char current_timestamp[21];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:592:7:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
      memcpy (sha1_base32, "sha1:", 5);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:613:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char sha1_res_block[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:614:7:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
      char sha1_res_payload[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:620:11:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
          char digest[BASE32_LENGTH(SHA1_DIGEST_SIZE) + 1 + 5];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:656:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char uuid_str[37];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:746:12:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  unsigned char uuid_data[16];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:782:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char timestamp[22];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:896:23:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  warc_current_file = fopen (new_filename, "wb+");
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:919:27:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  warc_current_cdx_file = fopen (cdx_filename, "a+");
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1042:11:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
          memcpy (rec->digest, checksum_v, SHA1_DIGEST_SIZE);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1074:7:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
  f = fopen (opt.warc_cdx_dedup_filename, "r");
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1220:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char manifest_uuid[48];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1296:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char filename[100];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1314:12:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
    return fopen (tfn, "w+", "fop=tmd");    /* Create auto-delete temp file. */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1384:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char timestamp_str_cdx[15];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1385:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char offset_string[MAX_INT_TO_STRING_LEN(off_t)];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1389:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx     , timestamp_str     , 4); /* "YYYY" "-" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1390:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx +  4, timestamp_str +  5, 2); /* "mm"   "-" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1391:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx +  6, timestamp_str +  8, 2); /* "dd"   "T" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1392:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx +  8, timestamp_str + 11, 2); /* "HH"   ":" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1393:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx + 10, timestamp_str + 14, 2); /* "MM"   ":" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1394:3:  [2] (buffer) memcpy:Does not check for buffer overflows when copying to destination (CWE-120).  Make sure destination can always hold the source data. 
  memcpy (timestamp_str_cdx + 12, timestamp_str + 17, 2); /* "SS"   "Z" */
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1441:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char revisit_uuid [48];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1442:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char block_digest[BASE32_LENGTH(SHA1_DIGEST_SIZE) + 1 + 5];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1443:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char sha1_res_block[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1491:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char block_digest[BASE32_LENGTH(SHA1_DIGEST_SIZE) + 1 + 5];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1492:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char payload_digest[BASE32_LENGTH(SHA1_DIGEST_SIZE) + 1 + 5];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1493:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char sha1_res_block[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1494:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char sha1_res_payload[SHA1_DIGEST_SIZE];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1495:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char response_uuid [48];
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1591:3:  [2] (buffer) char:Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. 
  char uuid_buf[48];
/home/capstone/Desktop/root/wget-1.21.1/src/wget.h:320:11:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#  define fopen(fp, mode) fopen_wget(fp, mode)
/home/capstone/Desktop/root/wget-1.21.1/src/wget.h:330:34:  [2] (misc) fopen:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
#  define fopen_wgetrc(fp, mode) fopen(fp, mode)
/home/capstone/Desktop/root/wget-1.21.1/util/trunc.c:120:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open(fname, O_WRONLY | O_CREAT, mode);
/home/capstone/Desktop/root/wget-1.21.1/util/trunc.c:124:12:  [2] (misc) open:Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  
      fd = open(fname, O_WRONLY);
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:51:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			char fname[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:51:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			char fname[strlen(dirname) + strlen(dp->d_name) + 2];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:80:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		char cmd[strlen(argv[0]) + 256];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:85:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		char cmd[strlen(valgrind) + strlen(argv[0]) + 32];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:85:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
		char cmd[strlen(valgrind) + strlen(argv[0]) + 32];
/home/capstone/Desktop/root/wget-1.21.1/fuzz/main.c:102:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	target_len = strlen(target);
/home/capstone/Desktop/root/wget-1.21.1/lib/af_alg.c:92:20:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
          result = read (ofd, resblock, hashlen) == hashlen ? 0 : -EAFNOSUPPORT;
/home/capstone/Desktop/root/wget-1.21.1/lib/af_alg.c:132:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
              if (read (ofd, resblock, hashlen) == hashlen)
/home/capstone/Desktop/root/wget-1.21.1/lib/af_alg.c:200:26:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
      if (result == 0 && read (ofd, resblock, hashlen) != hashlen)
/home/capstone/Desktop/root/wget-1.21.1/lib/basename-lgpl.c:59:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  for (len = strlen (name);  1 < len && ISSLASH (name[len - 1]);  len--)
/home/capstone/Desktop/root/wget-1.21.1/lib/canonicalize.c:391:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              size_t len = strlen (end);
/home/capstone/Desktop/root/wget-1.21.1/lib/chdir-long.c:117:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    size_t len = strlen (dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:45:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      result = (char *) malloc (strlen (filename)
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:46:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                + (suffix != NULL ? strlen (suffix) : 0)
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:54:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t directory_len = strlen (directory);
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:59:35:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                + strlen (filename)
/home/capstone/Desktop/root/wget-1.21.1/lib/concat-filename.c:60:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                + (suffix != NULL ? strlen (suffix) : 0)
/home/capstone/Desktop/root/wget-1.21.1/lib/error.c:211:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t len = strlen (message) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/filenamecat-lgpl.c:53:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t baselen = strlen (base);
/home/capstone/Desktop/root/wget-1.21.1/lib/findprog-in.c:321:56:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                  (char *) malloc (2 + strlen (progname) + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/findprog-in.c:332:41:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        strlen (progname) + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:58:10:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
# define wcslen __wcslen
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:134:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
#define STRLEN(S) strlen (S)
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:155:19:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
#define STRLEN(S) wcslen (S)
/home/capstone/Desktop/root/wget-1.21.1/lib/fnmatch.c:351:54:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  return internal_fnmatch (pattern, string, string + strlen (string),
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:137:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t len = strlen (p);
/home/capstone/Desktop/root/wget-1.21.1/lib/fopen.c:166:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    size_t len = strlen (filename);
/home/capstone/Desktop/root/wget-1.21.1/lib/fstatat.c:84:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len = strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd-lgpl.c:124:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t actual_size = strlen (result) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/getcwd.c:52:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
# define _D_EXACT_NAMLEN(d) strlen ((d)->d_name)
/home/capstone/Desktop/root/wget-1.21.1/lib/getdelim.c:39:41:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
# define getc_maybe_unlocked(fp)        getc(fp)
/home/capstone/Desktop/root/wget-1.21.1/lib/getdelim.c:45:41:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
# define getc_maybe_unlocked(fp)        getc(fp)
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:214:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	&& namelen == strlen (p->name))
/home/capstone/Desktop/root/wget-1.21.1/lib/getopt.c:301:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	  d->__nextchar += strlen (d->__nextchar);
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:127:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          if (strlen (ucomm) < PST_UCOMMLEN - 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:141:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              if (strlen (p) > PST_UCOMMLEN - 1
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:163:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              if (strlen (ucomm) < PST_UCOMMLEN - 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:177:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                  if (strlen (p) > PST_UCOMMLEN - 1
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:261:18:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
      size_t n = read (fd, buf, 79);
/home/capstone/Desktop/root/wget-1.21.1/lib/getprogname.c:276:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          ret = malloc (strlen (progname) + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/getrandom.c:185:10:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
  return read (fd, buffer, length);
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:223:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t msgctxt_len = strlen (msgctxt) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:224:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t msgid_len = strlen (msgid) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:271:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t msgctxt_len = strlen (msgctxt) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/gettext.h:272:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t msgid_len = strlen (msgid) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/inet_ntop.c:230:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          tp += strlen (tp);
/home/capstone/Desktop/root/wget-1.21.1/lib/link.c:74:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len1 = strlen (file1);
/home/capstone/Desktop/root/wget-1.21.1/lib/link.c:75:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len2 = strlen (file2);
/home/capstone/Desktop/root/wget-1.21.1/lib/link.c:199:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len1 = strlen (file1);
/home/capstone/Desktop/root/wget-1.21.1/lib/link.c:200:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len2 = strlen (file2);
/home/capstone/Desktop/root/wget-1.21.1/lib/localcharset.c:928:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (pdot && 2 + strlen (pdot + 1) + 1 <= sizeof (buf))
/home/capstone/Desktop/root/wget-1.21.1/lib/lstat.c:84:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (S_ISDIR (sbuf->st_mode) || file[strlen (file) - 1] != '/')
/home/capstone/Desktop/root/wget-1.21.1/lib/mkdir.c:55:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:116:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  codesetlen = strlen (codeset);
/home/capstone/Desktop/root/wget-1.21.1/lib/nl_langinfo.c:166:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t tmp_len = strlen (tmp);
/home/capstone/Desktop/root/wget-1.21.1/lib/open.c:121:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t len = strlen (filename);
/home/capstone/Desktop/root/wget-1.21.1/lib/open.c:188:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t len = strlen (filename);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:99:56:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        size_t bufsize = PROC_SELF_FD_DIR_SIZE_BOUND + strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:119:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    dirlen = strlen (dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat-proc.c:120:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    bufsize = dirlen + 1 + strlen (file) + 1; /* 1 for '/', 1 for null */
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:107:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t len = strlen (filename);
/home/capstone/Desktop/root/wget-1.21.1/lib/openat.c:150:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t len = strlen (filename);
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:113:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    p = dir_name_mask + strlen (dir_name_mask);
/home/capstone/Desktop/root/wget-1.21.1/lib/opendir.c:149:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
            + strlen (dir_name_mask) + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/os2-spawn.c:122:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t length = strlen (quoted_string);
/home/capstone/Desktop/root/wget-1.21.1/lib/os2-spawn.c:148:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t length = strlen (quoted_string);
/home/capstone/Desktop/root/wget-1.21.1/lib/quotearg.c:363:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        quote_string_len = strlen (quote_string);
/home/capstone/Desktop/root/wget-1.21.1/lib/quotearg.c:409:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                  ? (argsize = strlen (arg)) : argsize))
/home/capstone/Desktop/root/wget-1.21.1/lib/quotearg.c:620:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                  argsize = strlen (arg);
/home/capstone/Desktop/root/wget-1.21.1/lib/readlink.c:57:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t file_len = strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:491:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  ret = re_compile_internal (preg, pattern, strlen (pattern), syntax);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:535:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  msg_size = strlen (msg) + 1; /* Includes the null.  */
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:703:47:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  ret = re_compile_internal (&re_comp_buf, s, strlen (s), re_syntax_options);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:771:3:  [1] (buffer) strncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
  strncpy (dfa->re_str, pattern, length + 1);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:2715:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			 && strlen ((char *) start_elem->opr.name) > 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:2717:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
			    && strlen ((char *) end_elem->opr.name) > 1)))
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:2825:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t name_len = strlen ((const char *) name);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:2906:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	  size_t sym_name_len = strlen ((char *) br_elem->opr.name);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:3041:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t name_len = strlen ((const char *) name);
/home/capstone/Desktop/root/wget-1.21.1/lib/regcomp.c:3551:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (__glibc_unlikely (strlen ((const char *) name) != 1))
/home/capstone/Desktop/root/wget-1.21.1/lib/regexec.c:210:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      length = strlen (string);
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:138:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
  BOOL read, write, except;
/home/capstone/Desktop/root/wget-1.21.1/lib/select.c:245:7:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
  if (read && (rbits->in[fd / CHAR_BIT] & (1 << (fd & (CHAR_BIT - 1)))))
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:111:23:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t length = wcslen (result);
/home/capstone/Desktop/root/wget-1.21.1/lib/setlocale_null.c:154:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t length = strlen (result);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:220:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:920:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len = strlen (file) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/spawni.c:921:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  pathlen = strlen (path);
/home/capstone/Desktop/root/wget-1.21.1/lib/stat.c:133:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/stat.c:428:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:326:11:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef fgetc
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:327:12:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define fgetc rpl_fgetc
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:329:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_FUNCDECL_RPL (fgetc, int, (FILE *stream) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:330:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_RPL (fgetc, int, (FILE *stream));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:332:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_SYS (fgetc, int, (FILE *stream));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:335:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIASWARN (fgetc);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:781:11:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef getc
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:782:12:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define getc rpl_fgetc
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:784:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_FUNCDECL_RPL (fgetc, int, (FILE *stream) _GL_ARG_NONNULL ((1)));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:785:21:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_RPL_1 (getc, rpl_fgetc, int, (FILE *stream));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:787:19:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_SYS (getc, int, (FILE *stream));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:790:19:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIASWARN (getc);
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:797:11:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef getchar
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:798:12:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define getchar rpl_getchar
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:800:19:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_FUNCDECL_RPL (getchar, int, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:801:19:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_RPL (getchar, int, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:803:19:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_SYS (getchar, int, (void));
/home/capstone/Desktop/root/wget-1.21.1/lib/stdio.in.h:806:19:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIASWARN (getchar);
/home/capstone/Desktop/root/wget-1.21.1/lib/strdup.c:41:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (s) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror.c:65:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len = strlen (msg);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:132:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (msg);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:218:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    if (!ret && strlen (buf) == buflen - 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:223:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        len = strlen (stackbuf);
/home/capstone/Desktop/root/wget-1.21.1/lib/strerror_r.c:237:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    if (ret == ERANGE && strlen (buf) < buflen - 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:469:11:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
#   undef strncat
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:470:12:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
#   define strncat rpl_strncat
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:472:19:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
_GL_FUNCDECL_RPL (strncat, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:475:19:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
_GL_CXXALIAS_RPL (strncat, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:478:19:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
_GL_CXXALIAS_SYS (strncat, char *,
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:482:19:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
_GL_CXXALIASWARN (strncat);
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:485:9:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
# undef strncat
/home/capstone/Desktop/root/wget-1.21.1/lib/string.in.h:487:18:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
_GL_WARN_ON_USE (strncat, "strncat is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/strptime.c:47:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  ({ size_t len = strlen (cs1);                                               \
/home/capstone/Desktop/root/wget-1.21.1/lib/strptime.c:54:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  (strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))
/home/capstone/Desktop/root/wget-1.21.1/lib/strptime.c:54:59:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  (strncasecmp ((cs1), (s2), strlen (cs1)) ? 0 : ((s2) += strlen (cs1), 1))
/home/capstone/Desktop/root/wget-1.21.1/lib/symlink.c:35:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:878:11:  [1] (access) umask:Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).  
#   undef umask
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:879:12:  [1] (access) umask:Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).  
#   define umask _umask
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:882:24:  [1] (access) umask:Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).  
_GL_CXXALIAS_MDA_CAST (umask, mode_t, (mode_t mask));
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:884:19:  [1] (access) umask:Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).  
_GL_CXXALIAS_SYS (umask, mode_t, (mode_t mask));
/home/capstone/Desktop/root/wget-1.21.1/lib/sys_stat.in.h:886:19:  [1] (access) umask:Ensure that umask is given most restrictive possible setting (e.g., 066 or 077) (CWE-732).  
_GL_CXXALIASWARN (umask);
/home/capstone/Desktop/root/wget-1.21.1/lib/tempname.c:124:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      plen = strlen (pfx);
/home/capstone/Desktop/root/wget-1.21.1/lib/tempname.c:152:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  dlen = strlen (dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/tempname.c:277:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len = strlen (tmpl);
/home/capstone/Desktop/root/wget-1.21.1/lib/tmpdir.c:107:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      plen = strlen (pfx);
/home/capstone/Desktop/root/wget-1.21.1/lib/tmpdir.c:148:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  dlen = strlen (dir);
/home/capstone/Desktop/root/wget-1.21.1/lib/unicase/u8-tolower.c:105:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int length = strlen (input);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1823:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1824:12:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define read rpl_read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1826:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_FUNCDECL_RPL (read, ssize_t, (int fd, void *buf, size_t count)
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1828:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_RPL (read, ssize_t, (int fd, void *buf, size_t count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1831:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1832:12:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define read _read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1834:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_MDA (read, ssize_t, (int fd, void *buf, size_t count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1836:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_SYS (read, ssize_t, (int fd, void *buf, size_t count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1838:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIASWARN (read);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1845:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   undef read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1846:12:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#   define read _read
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1849:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_MDA (read, int, (int fd, void *buf, unsigned int count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1851:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_MDA (read, ssize_t, (int fd, void *buf, unsigned int count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1854:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIAS_SYS (read, ssize_t, (int fd, void *buf, size_t count));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:1856:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
_GL_CXXALIASWARN (read);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2234:11:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
#   undef usleep
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2235:12:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
#   define usleep rpl_usleep
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2237:19:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_FUNCDECL_RPL (usleep, int, (useconds_t n));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2238:19:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_CXXALIAS_RPL (usleep, int, (useconds_t n));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2241:19:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_FUNCDECL_SYS (usleep, int, (useconds_t n));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2245:24:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_CXXALIAS_SYS_CAST (usleep, int, (useconds_t n));
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2247:19:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_CXXALIASWARN (usleep);
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2249:9:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
# undef usleep
/home/capstone/Desktop/root/wget-1.21.1/lib/unistd.in.h:2251:18:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
_GL_WARN_ON_USE (usleep, "usleep is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/unistr/u8-strlen.c:28:10:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  return strlen ((const char *) s);
/home/capstone/Desktop/root/wget-1.21.1/lib/unlink.c:41:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:100:10:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  undef getc
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:101:11:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  define getc(x) getc_unlocked (x)
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:103:28:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  define getc_unlocked(x) getc (x)
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:107:10:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  undef getchar
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:108:11:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  define getchar() getchar_unlocked ()
/home/capstone/Desktop/root/wget-1.21.1/lib/unlocked-io.h:110:30:  [1] (buffer) getchar:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#  define getchar_unlocked() getchar ()
/home/capstone/Desktop/root/wget-1.21.1/lib/utime.c:51:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/utime.c:275:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/lib/utimens.c:253:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t len = strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:240:24:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
#  define local_wcslen wcslen
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:1810:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
            tmp_length = strlen (arg);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:2640:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                      arg_end = arg + strlen (arg);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3911:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:3971:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4007:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        if (strlen (digits2) == precision + 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4107:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4143:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        if (strlen (digits2) == precision)
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4373:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4430:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4465:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        if (strlen (digits2) == precision + 1)
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4578:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        ndigits = strlen (digits);
/home/capstone/Desktop/root/wget-1.21.1/lib/vasnprintf.c:4613:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                        if (strlen (digits2) == precision)
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:663:19:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
_GL_FUNCDECL_SYS (wcslen, size_t, (const wchar_t *s) _GL_ATTRIBUTE_PURE);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:665:19:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
_GL_CXXALIAS_SYS (wcslen, size_t, (const wchar_t *s));
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:667:19:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
_GL_CXXALIASWARN (wcslen);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:670:9:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
# undef wcslen
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:672:18:  [1] (buffer) wcslen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
_GL_WARN_ON_USE (wcslen, "wcslen is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:736:19:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
_GL_FUNCDECL_SYS (wcsncpy, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:740:19:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
_GL_CXXALIAS_SYS (wcsncpy, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:744:19:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
_GL_CXXALIASWARN (wcsncpy);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:747:9:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
# undef wcsncpy
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:749:18:  [1] (buffer) wcsncpy:Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers [MS-banned] (CWE-120).  
_GL_WARN_ON_USE (wcsncpy, "wcsncpy is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:799:19:  [1] (buffer) wcsncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. 
_GL_FUNCDECL_SYS (wcsncat, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:803:19:  [1] (buffer) wcsncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. 
_GL_CXXALIAS_SYS (wcsncat, wchar_t *,
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:807:19:  [1] (buffer) wcsncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. 
_GL_CXXALIASWARN (wcsncat);
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:810:9:  [1] (buffer) wcsncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. 
# undef wcsncat
/home/capstone/Desktop/root/wget-1.21.1/lib/wchar.in.h:812:18:  [1] (buffer) wcsncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. 
_GL_WARN_ON_USE (wcsncat, "wcsncat is unportable - "
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:155:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        length = strlen ("\"\"");
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:159:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        length = strlen (string);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:186:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t length = strlen ("\"\"");
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:196:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t length = strlen (string);
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:217:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    total_size += strlen (p) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:234:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t size = strlen (p) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:262:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      total_size += strlen (p) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/windows-spawn.c:275:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        size_t size = strlen (p) + 1;
/home/capstone/Desktop/root/wget-1.21.1/lib/xmalloc.c:132:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  return xmemdup (string, strlen (string) + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/connect.c:793:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
    res = read (fd, buf, bufsize);
/home/capstone/Desktop/root/wget-1.21.1/src/connect.c:830:8:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
#undef read
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:450:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      link = xmalloc (2 + strlen (linkfile) + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:457:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      link = xmalloc (3 * basedirs + strlen (linkfile) + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:556:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t filename_len = strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/src/convert.c:750:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  tolen = 3 * strlen (file);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:708:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int dlen = strlen (cookie_domain);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:709:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int hlen = strlen (host);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:744:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t pathlen = strlen(path);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:903:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int len = strlen (prefix);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1087:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    size_t pathlen = strlen(path);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1129:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        outgoing[ocnt].domain_goodness = strlen (cookie->domain);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1149:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      result_size += strlen (c->attr) + 1 + strlen (c->value);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1149:45:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      result_size += strlen (c->attr) + 1 + strlen (c->value);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1162:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int namlen = strlen (c->attr);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1163:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int vallen = strlen (c->value);
/home/capstone/Desktop/root/wget-1.21.1/src/cookies.c:1299:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      value_e = p + strlen (p);
/home/capstone/Desktop/root/wget-1.21.1/src/css.c:2561:14:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
/home/capstone/Desktop/root/wget-1.21.1/src/css.c:3683:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	return yy_scan_bytes( yystr, (int) strlen(yystr) );
/home/capstone/Desktop/root/wget-1.21.1/src/css_.c:2562:14:  [1] (buffer) getc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
/home/capstone/Desktop/root/wget-1.21.1/src/css_.c:3684:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
	return yy_scan_bytes( yystr, (int) strlen(yystr) );
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:110:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          size_t len = strlen(value);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:178:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:212:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        int l = strlen (skey_head[i]);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:242:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:312:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:402:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:477:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:530:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      written = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:562:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  written = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:595:39:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  written = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:635:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:705:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:871:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:957:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:989:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1024:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1055:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1116:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1167:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1237:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-basic.c:1285:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  nwritten = fd_write (csock, request, strlen (request), -1);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:54:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (strlen (s) < 9)
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:281:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              fnlen = strlen (tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:320:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              fnlen = strlen (tok); /* re-calculate `fnlen' */
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:739:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      for (p = tok + strlen (tok); (--p > tok) && c_isdigit(*p); );
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:760:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      len = strlen (tok);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:856:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          if ((strlen (tok) < 12) && (strchr( tok, '-') != NULL))
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:862:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          else if ((strlen (tok) < 12) && (strchr( tok, ':') != NULL))
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:866:15:  [1] (buffer) strncat:Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) [MS-banned] (CWE-120).  Consider strcat_s, strlcat, snprintf, or automatically resizing strings. 
              strncat( date_str,
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:868:44:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                       (sizeof( date_str)- strlen (date_str) - 1));
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:882:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              for (i = 0; i < (int) strlen(tok); i++)
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-ls.c:1030:19:  [1] (buffer) fgetc:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
        int   c = fgetc(fp);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2203:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  md5_process_bytes ((const unsigned char *) seed, strlen (seed), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp-opie.c:2204:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  md5_process_bytes ((const unsigned char *) pass, strlen (pass), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:803:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              size_t idlen = strlen (con->id);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:810:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              len = idlen + 1 + strlen (target);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:846:47:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              char *ntarget = (char *)alloca (strlen (target) + 2);
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2336:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                      size_t len = strlen (f->linkto) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2503:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size = strlen (u->dir) + 1 + strlen (f->name) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/ftp.c:2503:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size = strlen (u->dir) + 1 + strlen (f->name) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:461:27:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
        ctx->last_error = read;
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:462:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
      if (read < 0)
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:467:20:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
            return read;
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:470:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
      if (read > 0)
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:473:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
                  read);
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:474:27:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
          ctx->peeklen += read;
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:478:19:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
  return offset + read;
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:723:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen(hostname);
/home/capstone/Desktop/root/wget-1.21.1/src/gnutls.c:870:71:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      gnutls_server_name_set (session, GNUTLS_NAME_DNS, sni_hostname, strlen(sni_hostname));
/home/capstone/Desktop/root/wget-1.21.1/src/hash.c:787:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int len = strlen (line);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:809:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    const char *end = host + strlen (host);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:1022:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  lw = strlen (what);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:1026:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      j = strlen (list[i]);
/home/capstone/Desktop/root/wget-1.21.1/src/host.c:1074:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  endp = name + strlen(name);
/home/capstone/Desktop/root/wget-1.21.1/src/hsts.c:296:20:  [1] (buffer) sscanf:It's unclear if the %s limit in the format string is small enough (CWE-120).  Check that the limit is sufficiently small, or use a different input function. 
      items_read = sscanf (p, "%255s %d %d %lu %lu",
/home/capstone/Desktop/root/wget-1.21.1/src/html-url.c:670:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                    end = content + strlen (content);
/home/capstone/Desktop/root/wget-1.21.1/src/html-url.c:695:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int size = strlen (srcset);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:262:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t i, len = strlen(password);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:312:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    len = strlen (password);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:351:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t domlen = strlen(domain);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:352:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t hostlen = strlen(host);
/home/capstone/Desktop/root/wget-1.21.1/src/http-ntlm.c:475:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    userlen = strlen(usr);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:321:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int A_len = strlen (str);                     \
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:340:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size += strlen (req->method) + 1 + strlen (req->arg) + 1 + 8 + 2;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:340:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size += strlen (req->method) + 1 + strlen (req->arg) + 1 + 8 + 2;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:346:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size += strlen (hdr->name) + 2 + strlen (hdr->value) + 2;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:346:40:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size += strlen (hdr->name) + 2 + strlen (hdr->value) + 2;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:655:22:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              hdr += strlen (hdr);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:699:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  name_len = strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1212:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int original_length = strlen (*filename);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1213:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int new_length = strlen (*filename) + (value->e - value->b);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1690:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          int head_len = strlen (head);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1710:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        fwrite (head, 1, strlen (head), fp);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:1995:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
            *body_data_size = strlen (opt.body_data);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2247:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t filename_len = strlen (hs->local_file);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:2919:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              if (end_pristr != pristr + strlen (pristr) ||
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3001:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
              if (end_pristr != pristr + strlen (pristr) ||
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:3068:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          const size_t dig_hash_str_len = strlen (dig_hash);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:4958:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size_t l = strlen (oldlocale) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5014:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len1 = strlen (user) + 1 + strlen (passwd);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5014:37:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len1 = strlen (user) + 1 + strlen (passwd);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5096:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        if (namelen == strlen (options[i].name)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5131:47:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    md5_process_bytes ((unsigned char *)user, strlen (user), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5133:48:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    md5_process_bytes ((unsigned char *)realm, strlen (realm), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5135:49:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    md5_process_bytes ((unsigned char *)passwd, strlen (passwd), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5150:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)nonce, strlen (nonce), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5152:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)cnonce, strlen (cnonce), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5160:49:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    md5_process_bytes ((unsigned char *)method, strlen (method), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5162:47:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    md5_process_bytes ((unsigned char *)path, strlen (path), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5178:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)nonce, strlen (nonce), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5182:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)cnonce, strlen (cnonce), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5184:50:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)qop, strlen (qop), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5196:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        md5_process_bytes ((unsigned char *)nonce, strlen (nonce), &ctx);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5204:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    res_size = strlen (user)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5205:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + strlen (realm)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5206:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + strlen (nonce)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5207:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + strlen (path)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5209:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + (opaque ? strlen (opaque) : 0)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5210:29:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + (algorithm ? strlen (algorithm) : 0)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5212:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
             + strlen (cnonce)
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5373:9:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  len = strlen (ext);
/home/capstone/Desktop/root/wget-1.21.1/src/http.c:5384:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int local_filename_len = strlen (hs->local_file);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:844:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  const char *end = line + strlen (line);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:948:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          homelen = strlen (home);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1159:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  *pstring = xmalloc (strlen (val) + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1222:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  t = s + strlen (s);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1261:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          int len = strlen (*t);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1286:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  const char *end = val + strlen (val);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1393:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  const char *end = val + strlen (val);
/home/capstone/Desktop/root/wget-1.21.1/src/init.c:1696:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        end = val + strlen (val);
/home/capstone/Desktop/root/wget-1.21.1/src/iri.c:149:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  inlen = strlen(in);
/home/capstone/Desktop/root/wget-1.21.1/src/iri.c:244:57:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (do_conversion ("UTF-8", opt.locale, (char *) str, strlen ((char *) str), &new))
/home/capstone/Desktop/root/wget-1.21.1/src/iri.c:367:55:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (do_conversion ("UTF-8", iri->uri_encoding, str, strlen (str), new))
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:221:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          int old_len = strlen (ln->malloced_line);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:230:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          int old_len = strlen (ln->static_line);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:269:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        end = s + strlen (s);
/home/capstone/Desktop/root/wget-1.21.1/src/log.c:849:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    int needed_size = strlen (str) + 1 + (base == 8 ? 3 * nprcnt : 2 * nprcnt);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:480:18:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int size = 3 + strlen (s) + 1;  /* "no-STRING\0" */
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1143:11:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
  bytes = read (com[0], tmp, sizeof (tmp) - 1);
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1221:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (remaining_chars <= (int) strlen (token))
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1235:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      remaining_chars -= strlen (token) + 1;  /* account for " " */
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1269:32:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          line_length -= (int) strlen (compiled_features[i]) + 2;
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1395:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    argstring_length += strlen (argv[i]) + 3 + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/main.c:1407:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      arglen = strlen (argv[i]);
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:124:50:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (!metalink->origin && opt.dir_prefix && strlen (opt.dir_prefix))
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:144:50:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (!metalink->origin && opt.dir_prefix && strlen (opt.dir_prefix))
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:775:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                                    strlen (msig->signature),
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1091:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  str_len = strlen (*str); /* current string length */
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1321:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t key_len = strlen (key);
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1377:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t key_len = strlen (key);
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1504:64:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                                                 header_data + strlen (header_data),
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1552:46:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                               header_data + strlen(header_data),
/home/capstone/Desktop/root/wget-1.21.1/src/metalink.c:1592:52:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
               has_key (header_data, header_data + strlen (header_data),
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:67:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
  usleep (seconds * 1000000);
/home/capstone/Desktop/root/wget-1.21.1/src/mswindows.c:369:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  title_buf = xmalloc (strlen (url) + 20);
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:721:17:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int len = strlen (str);
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:773:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen(hostname);
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:1156:30:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                            (strlen ((char *)name_in_utf8) ==
/home/capstone/Desktop/root/wget-1.21.1/src/openssl.c:1223:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          if (strlen (common_name) != (size_t) ASN1_STRING_length (sdata))
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:100:54:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t namelen = colon ? (size_t) (colon - name) : strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:121:47:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  namelen = colon ? (size_t) (colon - name) : strlen (name);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:657:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      mbi_init (iter, src, strlen (src));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:954:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  mbi_init (iter, mbs, strlen(mbs));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:970:24:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  mbi_init (iter, mbs, strlen(mbs));
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:989:56:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
static int count_cols (const char *mbs) { return (int) strlen(mbs); }
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:994:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int len = strlen(mbs);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1027:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      nbytes = strlen (eta_trans);
/home/capstone/Desktop/root/wget-1.21.1/src/progress.c:1313:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      nbytes = strlen (p);
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:335:51:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        filename_progress = downloaded_filename + strlen (opt.dir_prefix) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:382:34:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                fwrite (line, 1, strlen (line), out2);
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:402:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                        fwrite (line, 1, strlen (line), out2);
/home/capstone/Desktop/root/wget-1.21.1/src/retr.c:540:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                        fwrite (line, 1, strlen (line), out2);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:462:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                          strlen (supported_schemes[i].leading_string)))
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:757:8:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  p += strlen (supported_schemes[scheme].leading_string);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1065:42:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
#define FROB(el) if (url->el) len += 1 + strlen (url->el)
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1084:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    int l = strlen (f_el);                      \
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1175:20:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int dirlen = strlen (edir);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1176:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      int filelen = strlen (efile);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1357:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int l = strlen (str);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1497:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      e = unescaped + strlen (unescaped);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1593:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  inlen = strlen (fname);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1776:57:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        fname_len_check = strdupdelim (u_file, u_file + strlen (u_file));
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1781:55:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      fname_len_check = strdupdelim (u_file, u_file + strlen (u_file));
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1788:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    fname_len_check + strlen (fname_len_check), true, &temp_fnres);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1822:25:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (max_length > 0 && strlen (temp_fnres.base) > max_length)
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:1825:27:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          (unsigned long) strlen (temp_fnres.base));
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2022:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  linklength = strlen (link);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2052:23:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        end1 = base + strlen (base);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2190:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int len = strlen (s);                         \
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2250:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size = (strlen (scheme_str)
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2251:13:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
          + strlen (quoted_host)
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2259:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      size += 1 + strlen (quoted_user);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2261:21:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
        size += 1 + strlen (quoted_passwd);
/home/capstone/Desktop/root/wget-1.21.1/src/url.c:2500:33:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      append_uri_pathel (p, p + strlen(p), test_array[i].escaped, &dest);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:414:15:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
    length += strlen(arg);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:661:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int plen = strlen (prefix);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:974:16:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t len = strlen (directory);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1032:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  result = xmalloc (cut - base + 1 + strlen (file) + 1);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1176:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int pos = (int) strlen (string) - (int) strlen (tail);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1176:43:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  int pos = (int) strlen (string) - (int) strlen (tail);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1371:15:  [1] (buffer) read:Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  
      nread = read (fd, fm->content + fm->length, size - fm->length);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1581:11:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      if (strlen(cached_sep) > 1)
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:1630:12:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  seplen = strlen (sep);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2233:3:  [1] (obsolete) usleep:This C routine is considered obsolete (as opposed to the shell command by the same name).   The interaction of this function with SIGALRM and other timer functions such as sleep(), alarm(), setitimer(), and nanosleep() is unspecified (CWE-676).  Use nanosleep(2) or setitimer(2) instead. 
  usleep (seconds * 1000000);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2504:49:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      rc = pcre2_match(regex, (PCRE2_SPTR) str, strlen(str), 0, 0, match_data, NULL);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2526:14:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  size_t l = strlen (str);
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2644:5:  [1] (buffer) strcpy:Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120).  Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused). Risk is low because the source is a constant character.
    strcpy (buf, "0");
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2822:19:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      pinkeylen = strlen (pinnedpubkey) + 1;
/home/capstone/Desktop/root/wget-1.21.1/src/utils.c:2852:31:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
                       (int) (strlen (begin_pos + 8) * 3) / 4, SHA256_DIGEST_SIZE,
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:171:7:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  n = strlen (str);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:876:26:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  base_filename_length = strlen (opt.warc_filename);
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1031:38:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      base32_decode_alloc (checksum, strlen (checksum), &checksum_v,
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1403:28:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (mime_type == NULL || strlen(mime_type) == 0)
/home/capstone/Desktop/root/wget-1.21.1/src/warc.c:1405:36:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
  if (redirect_location == NULL || strlen(redirect_location) == 0)
/home/capstone/Desktop/root/wget-1.21.1/src/xattr.c:36:53:  [1] (buffer) strlen:Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  
      retval = fsetxattr (fileno (fp), name, value, strlen (value), 0);
