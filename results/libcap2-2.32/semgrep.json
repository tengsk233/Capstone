{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":51,"col":20,"offset":1217},"end":{"line":51,"col":25,"offset":1222},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":51,"col":20,"offset":1217},"end":{"line":51,"col":23,"offset":1220},"abstract_content":"cap"},"$SIGNED":{"start":{"line":51,"col":24,"offset":1221},"end":{"line":51,"col":25,"offset":1222},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dea98770a182f5c0042ee97e953376b799cb471a775db031851e7998a041c9c6eb36893a600d0a90682d90dceef94b040019943874b62f97a56fff0abacfd7ee_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":41,"offset":1238},"extra":{"metavars":{"$NARROW":{"start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":31,"offset":1228},"abstract_content":"set","propagated_value":{"svalue_start":{"line":51,"col":34,"offset":1231},"svalue_end":{"line":51,"col":41,"offset":1238},"svalue_abstract_content":"fn(cap)"}},"$LARGE":{"start":{"line":51,"col":37,"offset":1234},"end":{"line":51,"col":40,"offset":1237},"abstract_content":"cap","propagated_value":{"svalue_start":{"line":51,"col":24,"offset":1221},"svalue_end":{"line":51,"col":25,"offset":1222},"svalue_abstract_content":"0"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3dc5f5fe6edcf3ff760e59afe0c061f04c3a333aab3553ddeab5b6317285bfcd46cfe931ef6fcd85548277cb250421bad5f7a84c036415a8f73a502aad10a560_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":41,"offset":1238},"extra":{"metavars":{"$SIGNED":{"start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":31,"offset":1228},"abstract_content":"set","propagated_value":{"svalue_start":{"line":51,"col":34,"offset":1231},"svalue_end":{"line":51,"col":41,"offset":1238},"svalue_abstract_content":"fn(cap)"}},"$UNSIGNED":{"start":{"line":51,"col":37,"offset":1234},"end":{"line":51,"col":40,"offset":1237},"abstract_content":"cap","propagated_value":{"svalue_start":{"line":51,"col":24,"offset":1221},"svalue_end":{"line":51,"col":25,"offset":1222},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"30f5eb4faa39d7a1086b4ffba82fe0d4bbf8de7ef40f7af9209e920a0807a6ecb63f807da8b17e015e8721d73d069c9de39267c7bdd0e8000cd9db941b0e53e2_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":97,"col":2,"offset":2189},"end":{"line":98,"col":33,"offset":2273},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":34,"offset":33},"abstract_content":"\"Securebits: 0%lo/0x%lx/%u'b%s\\n\""},"$FMT":{"start":{"line":97,"col":9,"offset":2196},"end":{"line":97,"col":42,"offset":2229},"abstract_content":"\"Securebits: 0%lo/0x%lx/%u'b%s\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1dff61c888d9859bcbe5fe08faf894ad4b4ce786075b605bf3840d54dbe70d8ed9220da9b8b4aa730b0363d6a6fd951d3448862fe0cdca91399ca2377864baf2_0","lines":"\tprintf(\"Securebits: 0%lo/0x%lx/%u'b%s\\n\", set, set,\n\t       (unsigned) strlen(b), b);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":187,"col":11,"offset":5000},"end":{"line":187,"col":16,"offset":5005},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":187,"col":11,"offset":5000},"end":{"line":187,"col":12,"offset":5001},"abstract_content":"j"},"$SIGNED":{"start":{"line":187,"col":15,"offset":5004},"end":{"line":187,"col":16,"offset":5005},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cba08f9d39cb182c3cca9d4f868cf5413b74e6502cf631e095dcc811e9c7c9b2a7ab3ad9bbdba2559fd63976833296851e8910a939758fc493eccd7c51413f37_0","lines":"\tunsigned j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":32,"offset":5212},"extra":{"metavars":{"$NARROW":{"start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":12,"offset":5192},"abstract_content":"status"},"$LARGE":{"start":{"line":194,"col":30,"offset":5210},"end":{"line":194,"col":31,"offset":5211},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"531b8f556eb7d940f9b1d59332f42682c7dd4276886562d24828c7d9b8d03ac9032bb8db7c95b25d77309c70dfa25db1c03a9b609c28a9954fe719c49eadf835_0","lines":"\t    status = cap_drop_bound(j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":32,"offset":5212},"extra":{"metavars":{"$SIGNED":{"start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":12,"offset":5192},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":194,"col":30,"offset":5210},"end":{"line":194,"col":31,"offset":5211},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"da7a30e4b5516e66f1bd053d104db0c6bd7c38080342bf2713c10d1050222ea7a1991d10a2bd47baad8c2446927b55bf129509c91cac26bfb8bb1060de22eb59_0","lines":"\t    status = cap_drop_bound(j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":219,"col":30,"offset":5730},"end":{"line":219,"col":46,"offset":5746},"extra":{"metavars":{"$FUN":{"start":{"line":219,"col":30,"offset":5730},"end":{"line":219,"col":36,"offset":5736},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"052ea5fb1cedbc11e721ecc662156e9aa3d3060b5f2a0d3e5b667ff5ca10ad62cca1ff2a9340bb3ce3684606f2e5e9160ab3321a512d6791c41ce5fdb4b18645_0","lines":"    for (ptr = names; (ptr = strtok(ptr, \",\")); ptr = NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":254,"col":11,"offset":6611},"end":{"line":254,"col":16,"offset":6616},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":254,"col":11,"offset":6611},"end":{"line":254,"col":12,"offset":6612},"abstract_content":"j"},"$SIGNED":{"start":{"line":254,"col":15,"offset":6615},"end":{"line":254,"col":16,"offset":6616},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cba08f9d39cb182c3cca9d4f868cf5413b74e6502cf631e095dcc811e9c7c9b2a7ab3ad9bbdba2559fd63976833296851e8910a939758fc493eccd7c51413f37_1","lines":"\tunsigned j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":38,"offset":6832},"extra":{"metavars":{"$NARROW":{"start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":12,"offset":6806},"abstract_content":"status"},"$LARGE":{"start":{"line":261,"col":31,"offset":6825},"end":{"line":261,"col":32,"offset":6826},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"531b8f556eb7d940f9b1d59332f42682c7dd4276886562d24828c7d9b8d03ac9032bb8db7c95b25d77309c70dfa25db1c03a9b609c28a9954fe719c49eadf835_1","lines":"\t    status = cap_set_ambient(j, set);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":38,"offset":6832},"extra":{"metavars":{"$SIGNED":{"start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":12,"offset":6806},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":261,"col":31,"offset":6825},"end":{"line":261,"col":32,"offset":6826},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"da7a30e4b5516e66f1bd053d104db0c6bd7c38080342bf2713c10d1050222ea7a1991d10a2bd47baad8c2446927b55bf129509c91cac26bfb8bb1060de22eb59_1","lines":"\t    status = cap_set_ambient(j, set);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":286,"col":30,"offset":7386},"end":{"line":286,"col":46,"offset":7402},"extra":{"metavars":{"$FUN":{"start":{"line":286,"col":30,"offset":7386},"end":{"line":286,"col":36,"offset":7392},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"052ea5fb1cedbc11e721ecc662156e9aa3d3060b5f2a0d3e5b667ff5ca10ad62cca1ff2a9340bb3ce3684606f2e5e9160ab3321a512d6791c41ce5fdb4b18645_1","lines":"    for (ptr = names; (ptr = strtok(ptr, \",\")); ptr = NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":328,"col":10,"offset":8419},"end":{"line":328,"col":13,"offset":8422},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":328,"col":10,"offset":8419},"end":{"line":328,"col":11,"offset":8420},"abstract_content":"i"},"$SIGNED":{"start":{"line":328,"col":12,"offset":8421},"end":{"line":328,"col":13,"offset":8422},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7574373ff520573f592e4b5c52111de9b7d258088788f7f2f30e37de5c29635e0f90c4c8b2823659c186734a806eacf9438ea0ab4ed465d6a554aa07b5c13daf_0","lines":"    for (i=1; i<argc; ++i) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":329,"col":26,"offset":8464},"end":{"line":329,"col":30,"offset":8468},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_0","lines":"\tif (!strncmp(\"--drop=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":330,"col":15,"offset":8493},"end":{"line":330,"col":19,"offset":8497},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_1","lines":"\t    arg_drop(argv[i]+7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":331,"col":36,"offset":8540},"end":{"line":331,"col":40,"offset":8544},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_2","lines":"\t} else if (!strncmp(\"--dropped=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":333,"col":24,"offset":8601},"end":{"line":333,"col":28,"offset":8605},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_3","lines":"\t    if (cap_from_name(argv[i]+10, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":335,"col":4,"offset":8686},"end":{"line":335,"col":8,"offset":8690},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_4","lines":"\t\t\targv[i] + 10);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":340,"col":4,"offset":8814},"end":{"line":340,"col":8,"offset":8818},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_5","lines":"\t\t\targv[i]+10);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":343,"col":38,"offset":8882},"end":{"line":343,"col":42,"offset":8886},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_6","lines":"\t} else if (!strcmp(\"--has-ambient\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":348,"col":35,"offset":9033},"end":{"line":348,"col":39,"offset":9037},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_7","lines":"\t} else if (!strncmp(\"--addamb=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":349,"col":21,"offset":9068},"end":{"line":349,"col":25,"offset":9072},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_8","lines":"\t    arg_change_amb(argv[i]+9, CAP_SET);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":350,"col":35,"offset":9123},"end":{"line":350,"col":39,"offset":9127},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_9","lines":"\t} else if (!strncmp(\"--delamb=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":351,"col":21,"offset":9158},"end":{"line":351,"col":25,"offset":9162},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_10","lines":"\t    arg_change_amb(argv[i]+9, CAP_CLEAR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":352,"col":33,"offset":9213},"end":{"line":352,"col":37,"offset":9217},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_11","lines":"\t} else if (!strncmp(\"--noamb\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":357,"col":32,"offset":9366},"end":{"line":357,"col":36,"offset":9370},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_12","lines":"\t} else if (!strncmp(\"--inh=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":57,"offset":10139},"extra":{"metavars":{"$FUN":{"start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":18,"offset":10100},"abstract_content":"malloc"},"$X":{"start":{"line":386,"col":19,"offset":10101},"end":{"line":386,"col":41,"offset":10123},"abstract_content":"10+strlen(argv[i]+6)"},"$Y":{"start":{"line":386,"col":44,"offset":10126},"end":{"line":386,"col":56,"offset":10138},"abstract_content":"strlen(text)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a67f896311bcf231b1bd33c48d9e35cb8d9a28c0eba22c0ad940030d6d01e24f52d72284b3e9ceb44275e60506021bd3ef811f2c5db4f26bfe26eae64346200f_0","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":57,"offset":10139},"extra":{"metavars":{"$FUN":{"start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":18,"offset":10100},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bfd58ad3558da3a5b70d8fd66757e9daedd24fcc597de07ac97c4a00300f8938cc43f2d5643c1a21b2d78814df954678df3e1b25a91847ffaa632e7b4b09bed1_0","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":386,"col":31,"offset":10113},"end":{"line":386,"col":35,"offset":10117},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_13","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":391,"col":10,"offset":10231},"end":{"line":391,"col":14,"offset":10235},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_14","lines":"\t    if (argv[i][6] && strcmp(\"none\", argv[i]+6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":391,"col":39,"offset":10260},"end":{"line":391,"col":43,"offset":10264},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_15","lines":"\t    if (argv[i][6] && strcmp(\"none\", argv[i]+6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":43,"offset":10316},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s %s+i\""},"$BUF":{"start":{"line":392,"col":11,"offset":10284},"end":{"line":392,"col":14,"offset":10287},"abstract_content":"ptr","propagated_value":{"svalue_start":{"line":386,"col":12,"offset":10094},"svalue_end":{"line":386,"col":57,"offset":10139},"svalue_abstract_content":"malloc(10+strlen(argv[i]+6)+strlen(text))"}},"$FMT":{"start":{"line":392,"col":16,"offset":10289},"end":{"line":392,"col":25,"offset":10298},"abstract_content":"\"%s %s+i\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"0a56fc2c5fa9ffe2274284a44e4e59ac1ddaeaadf3201dab83007ef31507268e804aae5ec322d2933d0f7569d2cc9753f9bc30b680648039f884c57292f46da1_0","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":43,"offset":10316},"extra":{"metavars":{"$FUN":{"start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":10,"offset":10283},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f619bcf9f6e623e4a0916e114673b07c8e8198d92cd8e44f1a31310d734514c004c2f014d543ae71dd6ab5b5f69c8b35cf9bb3d72c6478f1a2770e9fa5225c87_0","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":392,"col":33,"offset":10306},"end":{"line":392,"col":37,"offset":10310},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_16","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":20,"offset":10351},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3e44e3db8203e27358337f08869436fe85c42f5c1c5f61204dc1633efddc9242cef637fc2ba5e3f31c1d2d18aca92de5aba04e80a78cf1633dd5c05d28ebf082_0","lines":"\t\tstrcpy(ptr, text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":20,"offset":10351},"extra":{"metavars":{"$FUN":{"start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":9,"offset":10340},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"57eef7d76e0f975f4ce4a05759fab08dc72ed019f1e8c4fb9eb0796e957fb959b2aff3c18d663a4359a2f6a588b3b2134f821fb100544602246f7d10c996901a_0","lines":"\t\tstrcpy(ptr, text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":426,"col":33,"offset":11142},"end":{"line":426,"col":37,"offset":11146},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_17","lines":"\t} else if (!strncmp(\"--caps=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":442,"col":26,"offset":11561},"end":{"line":442,"col":30,"offset":11565},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_18","lines":"\t    all = cap_from_text(argv[i]+7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":444,"col":49,"offset":11645},"end":{"line":444,"col":53,"offset":11649},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_19","lines":"\t\tfprintf(stderr, \"unable to interpret [%s]\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":460,"col":56,"offset":12095},"end":{"line":460,"col":60,"offset":12099},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_20","lines":"\t\tfprintf(stderr, \"Unable to set capabilities [%s]\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":469,"col":32,"offset":12304},"end":{"line":469,"col":36,"offset":12308},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_21","lines":"\t} else if (!strcmp(\"--modes\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":480,"col":33,"offset":12560},"end":{"line":480,"col":37,"offset":12564},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_22","lines":"\t} else if (!strncmp(\"--mode=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":481,"col":27,"offset":12601},"end":{"line":481,"col":31,"offset":12605},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_23","lines":"\t    const char *target = argv[i]+7;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":505,"col":35,"offset":13110},"end":{"line":505,"col":39,"offset":13114},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_24","lines":"\t} else if (!strncmp(\"--inmode=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":506,"col":27,"offset":13151},"end":{"line":506,"col":31,"offset":13155},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_25","lines":"\t    const char *target = argv[i]+9;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":513,"col":33,"offset":13374},"end":{"line":513,"col":37,"offset":13378},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_26","lines":"\t} else if (!strncmp(\"--keep=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":517,"col":6,"offset":13430},"end":{"line":517,"col":41,"offset":13465},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":517,"col":6,"offset":13430},"end":{"line":517,"col":11,"offset":13435},"abstract_content":"value"},"$SIGNED":{"start":{"line":517,"col":30,"offset":13454},"end":{"line":517,"col":31,"offset":13455},"abstract_content":"7"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"949a1df61bc50b14f4b8c57566821d6c2245a3b7980517406dba6ddd1a18d1bd6c2e5c6751efc04b6973cd4c9484a8e389f6963c95ab685880aa1962e56b6752_0","lines":"\t    value = strtoul(argv[i]+7, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":517,"col":22,"offset":13446},"end":{"line":517,"col":26,"offset":13450},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_27","lines":"\t    value = strtoul(argv[i]+7, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":41,"offset":13507},"extra":{"metavars":{"$NARROW":{"start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":9,"offset":13475},"abstract_content":"set"},"$LARGE":{"start":{"line":518,"col":35,"offset":13501},"end":{"line":518,"col":40,"offset":13506},"abstract_content":"value","propagated_value":{"svalue_start":{"line":517,"col":14,"offset":13438},"svalue_end":{"line":517,"col":41,"offset":13465},"svalue_abstract_content":"strtoul(argv[i]+7 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"54c1242cec08bd47d76adb43e957317c1df8b363852cec7dd3a58fd265ef9e141638be6dda07a5f1134ce496fcaab15df395042ca11ef48b5f56fb77260154e1_0","lines":"\t    set = prctl(PR_SET_KEEPCAPS, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":41,"offset":13507},"extra":{"metavars":{"$SIGNED":{"start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":9,"offset":13475},"abstract_content":"set"},"$UNSIGNED":{"start":{"line":518,"col":35,"offset":13501},"end":{"line":518,"col":40,"offset":13506},"abstract_content":"value","propagated_value":{"svalue_start":{"line":517,"col":14,"offset":13438},"svalue_end":{"line":517,"col":41,"offset":13465},"svalue_abstract_content":"strtoul(argv[i]+7 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8d5a84fefa7e29d02cc50e32c19b7bbadc00e2c88c5a2d79284cbb28b1148e879c1fd27d068a8c6bf125f22de11ebc5275b450fdfb3558de802f38669521429b_0","lines":"\t    set = prctl(PR_SET_KEEPCAPS, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":524,"col":35,"offset":13670},"end":{"line":524,"col":39,"offset":13674},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_28","lines":"\t} else if (!strncmp(\"--chroot=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":32,"offset":14337},"extra":{"metavars":{"$NARROW":{"start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":12,"offset":14317},"abstract_content":"status"},"$LARGE":{"start":{"line":552,"col":27,"offset":14332},"end":{"line":552,"col":28,"offset":14333},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"91937ec61c8370f31df394cc71f202fd899f5090f2ba841f3fd403614fcf3dd78a84b9a992cf4cbc51a904566827a39f55dd466d75d95faa25115ae0720fc983_0","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":32,"offset":14337},"extra":{"metavars":{"$SIGNED":{"start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":12,"offset":14317},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":552,"col":27,"offset":14332},"end":{"line":552,"col":28,"offset":14333},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9ca57f795f0dc7f0583559daea56b2829b954d57615b69c8fcc88323086d6ad3f5eedf8d49ccb6055510380f7e31280900acd9427419b98288cbad1071f2428f_0","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":552,"col":22,"offset":14327},"end":{"line":552,"col":26,"offset":14331},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_29","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":566,"col":53,"offset":14687},"end":{"line":566,"col":57,"offset":14691},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_30","lines":"\t\tfprintf(stderr, \"Unable to chroot/chdir to [%s]\", argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":569,"col":36,"offset":14752},"end":{"line":569,"col":40,"offset":14756},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_31","lines":"\t} else if (!strncmp(\"--secbits=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":572,"col":6,"offset":14811},"end":{"line":572,"col":42,"offset":14847},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":572,"col":6,"offset":14811},"end":{"line":572,"col":11,"offset":14816},"abstract_content":"value"},"$SIGNED":{"start":{"line":572,"col":30,"offset":14835},"end":{"line":572,"col":32,"offset":14837},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"624f413622fb92149877a1f1e1591eb177c8047c45592c89831dfd5767182fc28d7e2f600c58aaaef92281cfaf9d68df5dedce0f29545a231ee96ea88c504040_0","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":572,"col":22,"offset":14827},"end":{"line":572,"col":26,"offset":14831},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_32","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":37,"offset":14885},"extra":{"metavars":{"$NARROW":{"start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":12,"offset":14860},"abstract_content":"status"},"$LARGE":{"start":{"line":573,"col":31,"offset":14879},"end":{"line":573,"col":36,"offset":14884},"abstract_content":"value","propagated_value":{"svalue_start":{"line":572,"col":14,"offset":14819},"svalue_end":{"line":572,"col":42,"offset":14847},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9e7257724d14e2f0ab28662b9d98c0ab727274c617aead5e154e2deffb0a35b79b8688fab58b3aecc8674cd7cbd9629768afcf37c4461b11a083cc0151faa7_0","lines":"\t    status = cap_set_secbits(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":37,"offset":14885},"extra":{"metavars":{"$SIGNED":{"start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":12,"offset":14860},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":573,"col":31,"offset":14879},"end":{"line":573,"col":36,"offset":14884},"abstract_content":"value","propagated_value":{"svalue_start":{"line":572,"col":14,"offset":14819},"svalue_end":{"line":572,"col":42,"offset":14847},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f92bec419ff8470c20bceafd70c9bf6f269475dab9f5b5f9d093781d7916fc35f884074da7d9123932987851bc966b01ce83aaea7fc8eb9b63a9eaf46603164_0","lines":"\t    status = cap_set_secbits(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":575,"col":3,"offset":14912},"end":{"line":576,"col":17,"offset":14986},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":41,"offset":40},"abstract_content":"\"failed to set securebits to 0%o/0x%x\\n\""},"$ARG1":{"start":{"line":575,"col":11,"offset":14920},"end":{"line":575,"col":17,"offset":14926},"abstract_content":"stderr"},"$FMT":{"start":{"line":575,"col":19,"offset":14928},"end":{"line":575,"col":59,"offset":14968},"abstract_content":"\"failed to set securebits to 0%o/0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ccf49d2fa585138315b556bfbd2c9f3e8b387d803a6b65f774928aadad9c1547eaacd04fb7e6f68a0845d8ceeba87aa0337b0fc900695895cdb75bffa70a3ee2_0","lines":"\t\tfprintf(stderr, \"failed to set securebits to 0%o/0x%x\\n\",\n\t\t\tvalue, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":579,"col":36,"offset":15041},"end":{"line":579,"col":40,"offset":15045},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_33","lines":"\t} else if (!strncmp(\"--forkfor=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":585,"col":6,"offset":15163},"end":{"line":585,"col":42,"offset":15199},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":585,"col":6,"offset":15163},"end":{"line":585,"col":11,"offset":15168},"abstract_content":"value"},"$SIGNED":{"start":{"line":585,"col":30,"offset":15187},"end":{"line":585,"col":32,"offset":15189},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"624f413622fb92149877a1f1e1591eb177c8047c45592c89831dfd5767182fc28d7e2f600c58aaaef92281cfaf9d68df5dedce0f29545a231ee96ea88c504040_1","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":585,"col":22,"offset":15179},"end":{"line":585,"col":26,"offset":15183},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_34","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":589,"col":14,"offset":15258},"end":{"line":589,"col":20,"offset":15264},"extra":{"metavars":{"$FUN":{"start":{"line":589,"col":14,"offset":15258},"end":{"line":589,"col":18,"offset":15262},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fa70f7082e203b8015ac436ecb2ebeaf23d52dfb9242e67e316d347d8f90cb571c4b6abea09344d107723ef42e6009e0b10e0cc40449d88c4e7ed6da0cb42326_0","lines":"\t    child = fork();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":596,"col":35,"offset":15412},"end":{"line":596,"col":39,"offset":15416},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_35","lines":"\t} else if (!strncmp(\"--killit=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":601,"col":6,"offset":15498},"end":{"line":601,"col":41,"offset":15533},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":601,"col":6,"offset":15498},"end":{"line":601,"col":11,"offset":15503},"abstract_content":"value"},"$SIGNED":{"start":{"line":601,"col":30,"offset":15522},"end":{"line":601,"col":31,"offset":15523},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ce554eafc8bc17bb43f7413a69957a915c1a7a1fe706b2f4f9a4e75eee1647a9721502902832d27358fda693a59192821ec58aab209ab9b66a7f2e35e0340801_0","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":601,"col":22,"offset":15514},"end":{"line":601,"col":26,"offset":15518},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_36","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":33,"offset":15654},"extra":{"metavars":{"$NARROW":{"start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":12,"offset":15633},"abstract_content":"retval"},"$LARGE":{"start":{"line":606,"col":27,"offset":15648},"end":{"line":606,"col":32,"offset":15653},"abstract_content":"value","propagated_value":{"svalue_start":{"line":601,"col":14,"offset":15506},"svalue_end":{"line":601,"col":41,"offset":15533},"svalue_abstract_content":"strtoul(argv[i]+9 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"97770cdb80f9f85699c2ce042b55ad2c62e18f624189482c68ea68da322d032c1fc1e89fe6ff3d8c78af66e167c6956a9f0b4d3f0b81d9363c04d1c061c43fb1_0","lines":"\t    retval = kill(child, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":33,"offset":15654},"extra":{"metavars":{"$SIGNED":{"start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":12,"offset":15633},"abstract_content":"retval"},"$UNSIGNED":{"start":{"line":606,"col":27,"offset":15648},"end":{"line":606,"col":32,"offset":15653},"abstract_content":"value","propagated_value":{"svalue_start":{"line":601,"col":14,"offset":15506},"svalue_end":{"line":601,"col":41,"offset":15533},"svalue_abstract_content":"strtoul(argv[i]+9 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a2fe10a0fcbc39bb96aeba5fbca1e5aa1f427d7325ba0942a384ef2aef68898f8f50e8877e32d33c3cccaa70c130b5cc43be17152d87b83e66fe0fa3a2b9a009_0","lines":"\t    retval = kill(child, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":623,"col":32,"offset":16107},"end":{"line":623,"col":36,"offset":16111},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_37","lines":"\t} else if (!strncmp(\"--uid=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":627,"col":6,"offset":16166},"end":{"line":627,"col":41,"offset":16201},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":627,"col":6,"offset":16166},"end":{"line":627,"col":11,"offset":16171},"abstract_content":"value"},"$SIGNED":{"start":{"line":627,"col":30,"offset":16190},"end":{"line":627,"col":31,"offset":16191},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c813e1d5f58ac867ddcc2e1bea83e16580a8e46aebc01400b1e5afe05027d695058890c89dfed2656b2580623d12b10bda3833156d97df242d31fbb6351e002a_0","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":627,"col":22,"offset":16182},"end":{"line":627,"col":26,"offset":16186},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_38","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$NARROW":{"start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":12,"offset":16214},"abstract_content":"status"},"$LARGE":{"start":{"line":628,"col":22,"offset":16224},"end":{"line":628,"col":27,"offset":16229},"abstract_content":"value","propagated_value":{"svalue_start":{"line":627,"col":14,"offset":16174},"svalue_end":{"line":627,"col":41,"offset":16201},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9e7257724d14e2f0ab28662b9d98c0ab727274c617aead5e154e2deffb0a35b79b8688fab58b3aecc8674cd7cbd9629768afcf37c4461b11a083cc0151faa7_1","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$SIGNED":{"start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":12,"offset":16214},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":628,"col":22,"offset":16224},"end":{"line":628,"col":27,"offset":16229},"abstract_content":"value","propagated_value":{"svalue_start":{"line":627,"col":14,"offset":16174},"svalue_end":{"line":627,"col":41,"offset":16201},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f92bec419ff8470c20bceafd70c9bf6f269475dab9f5b5f9d093781d7916fc35f884074da7d9123932987851bc966b01ce83aaea7fc8eb9b63a9eaf46603164_1","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":628,"col":15,"offset":16217},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":628,"col":15,"offset":16217},"end":{"line":628,"col":21,"offset":16223},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f6e6fa34314b87624938cbec314ede7ff00c9450872f7231f8c7084b17dbc095632826794c3b2b967fbc284b37683660b6d2f4cfb68a4f318298892a90aebfdc_0","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":634,"col":36,"offset":16384},"end":{"line":634,"col":40,"offset":16388},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_39","lines":"\t} else if (!strncmp(\"--cap-uid=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":638,"col":6,"offset":16444},"end":{"line":638,"col":42,"offset":16480},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":638,"col":6,"offset":16444},"end":{"line":638,"col":11,"offset":16449},"abstract_content":"value"},"$SIGNED":{"start":{"line":638,"col":30,"offset":16468},"end":{"line":638,"col":32,"offset":16470},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"624f413622fb92149877a1f1e1591eb177c8047c45592c89831dfd5767182fc28d7e2f600c58aaaef92281cfaf9d68df5dedce0f29545a231ee96ea88c504040_2","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":638,"col":22,"offset":16460},"end":{"line":638,"col":26,"offset":16464},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_40","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$NARROW":{"start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":12,"offset":16493},"abstract_content":"status"},"$LARGE":{"start":{"line":639,"col":26,"offset":16507},"end":{"line":639,"col":31,"offset":16512},"abstract_content":"value","propagated_value":{"svalue_start":{"line":638,"col":14,"offset":16452},"svalue_end":{"line":638,"col":42,"offset":16480},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9e7257724d14e2f0ab28662b9d98c0ab727274c617aead5e154e2deffb0a35b79b8688fab58b3aecc8674cd7cbd9629768afcf37c4461b11a083cc0151faa7_2","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$SIGNED":{"start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":12,"offset":16493},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":639,"col":26,"offset":16507},"end":{"line":639,"col":31,"offset":16512},"abstract_content":"value","propagated_value":{"svalue_start":{"line":638,"col":14,"offset":16452},"svalue_end":{"line":638,"col":42,"offset":16480},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f92bec419ff8470c20bceafd70c9bf6f269475dab9f5b5f9d093781d7916fc35f884074da7d9123932987851bc966b01ce83aaea7fc8eb9b63a9eaf46603164_2","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":639,"col":15,"offset":16496},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$1":{"start":{"line":2,"col":5,"offset":7},"end":{"line":2,"col":6,"offset":8},"abstract_content":"u"},"$FUN":{"start":{"line":639,"col":15,"offset":16496},"end":{"line":639,"col":25,"offset":16506},"abstract_content":"cap_setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc438f204af0f7d8b9c852b90021ce9ea379788151d356ad82930c7c84bfdb1f72954c863607ff368daa4c9296eb0a43f4b8af483664b22f8ae0d3621463fd7c_0","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":645,"col":32,"offset":16667},"end":{"line":645,"col":36,"offset":16671},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_41","lines":"\t} else if (!strncmp(\"--gid=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":649,"col":6,"offset":16726},"end":{"line":649,"col":41,"offset":16761},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":649,"col":6,"offset":16726},"end":{"line":649,"col":11,"offset":16731},"abstract_content":"value"},"$SIGNED":{"start":{"line":649,"col":30,"offset":16750},"end":{"line":649,"col":31,"offset":16751},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c813e1d5f58ac867ddcc2e1bea83e16580a8e46aebc01400b1e5afe05027d695058890c89dfed2656b2580623d12b10bda3833156d97df242d31fbb6351e002a_1","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":649,"col":22,"offset":16742},"end":{"line":649,"col":26,"offset":16746},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_42","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$NARROW":{"start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":12,"offset":16774},"abstract_content":"status"},"$LARGE":{"start":{"line":650,"col":22,"offset":16784},"end":{"line":650,"col":27,"offset":16789},"abstract_content":"value","propagated_value":{"svalue_start":{"line":649,"col":14,"offset":16734},"svalue_end":{"line":649,"col":41,"offset":16761},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"aa9e7257724d14e2f0ab28662b9d98c0ab727274c617aead5e154e2deffb0a35b79b8688fab58b3aecc8674cd7cbd9629768afcf37c4461b11a083cc0151faa7_3","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$SIGNED":{"start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":12,"offset":16774},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":650,"col":22,"offset":16784},"end":{"line":650,"col":27,"offset":16789},"abstract_content":"value","propagated_value":{"svalue_start":{"line":649,"col":14,"offset":16734},"svalue_end":{"line":649,"col":41,"offset":16761},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f92bec419ff8470c20bceafd70c9bf6f269475dab9f5b5f9d093781d7916fc35f884074da7d9123932987851bc966b01ce83aaea7fc8eb9b63a9eaf46603164_3","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":650,"col":15,"offset":16777},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"g"},"$FUN":{"start":{"line":650,"col":15,"offset":16777},"end":{"line":650,"col":21,"offset":16783},"abstract_content":"setgid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c4476a99473ddbf6af6fdd53765952721cfdf5fdeb6442e83c2cca373a13f983b9765c9de4e213c8f84fc58f67f4636a00fe1f12adc1ce95a12587ac2b7a0fe_0","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":656,"col":42,"offset":16950},"end":{"line":656,"col":46,"offset":16954},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_43","lines":"        } else if (!strncmp(\"--groups=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":27,"offset":17121},"extra":{"metavars":{"$FUN":{"start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":16,"offset":17110},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"00b55b242b548d97edd10a62301a9271d3d9d1c231f2640ca019762f8c2144ee9b943454bff5cadaee46843a29daab94dccb37c2241e5cef7e87d9fd6d3c2864_0","lines":"\t  buf = calloc(1, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":27,"offset":17121},"extra":{"metavars":{"$CNT":{"start":{"line":663,"col":17,"offset":17111},"end":{"line":663,"col":18,"offset":17112},"abstract_content":"1"},"$LEN":{"start":{"line":663,"col":20,"offset":17114},"end":{"line":663,"col":26,"offset":17120},"abstract_content":"length","propagated_value":{"svalue_start":{"line":662,"col":13,"offset":17064},"svalue_end":{"line":662,"col":42,"offset":17093},"svalue_abstract_content":"sysconf(_SC_GETGR_R_SIZE_MAX)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8461a8f40b90990487f6fd88d497f3a4ed014fd95abeb635c31addfd6a81827fe9eaa0d3d2d866d7703abae1426a8ce95cab2b148c577ca343ea2f1fe3291ee8_0","lines":"\t  buf = calloc(1, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":665,"col":56,"offset":17200},"end":{"line":665,"col":60,"offset":17204},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_44","lines":"\t    fprintf(stderr, \"No memory for [%s] operation\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":670,"col":17,"offset":17288},"end":{"line":670,"col":50,"offset":17321},"extra":{"metavars":{"$FUN":{"start":{"line":670,"col":17,"offset":17288},"end":{"line":670,"col":23,"offset":17294},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"00b55b242b548d97edd10a62301a9271d3d9d1c231f2640ca019762f8c2144ee9b943454bff5cadaee46843a29daab94dccb37c2241e5cef7e87d9fd6d3c2864_1","lines":"\t  group_list = calloc(max_groups, sizeof(gid_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":677,"col":15,"offset":17452},"end":{"line":677,"col":19,"offset":17456},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_45","lines":"\t  for (ptr = argv[i] + 9; (ptr = strtok(ptr, \",\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":677,"col":35,"offset":17472},"end":{"line":677,"col":51,"offset":17488},"extra":{"metavars":{"$FUN":{"start":{"line":677,"col":35,"offset":17472},"end":{"line":677,"col":41,"offset":17478},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"052ea5fb1cedbc11e721ecc662156e9aa3d3060b5f2a0d3e5b667ff5ca10ad62cca1ff2a9340bb3ce3684606f2e5e9160ab3321a512d6791c41ce5fdb4b18645_2","lines":"\t  for (ptr = argv[i] + 9; (ptr = strtok(ptr, \",\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":696,"col":8,"offset":18003},"end":{"line":696,"col":38,"offset":18033},"extra":{"metavars":{"$2":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":696,"col":8,"offset":18003},"end":{"line":696,"col":17,"offset":18012},"abstract_content":"setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2c77d03e7307ae7bad372e2a9d2c6e663b0b7d5b720ab413747d0cefda52dd442dafa2b52e6211a84048c73207745d267c8b625e7bdcefe0950062870ed2748_0","lines":"\t  if (setgroups(g_count, group_list) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":701,"col":33,"offset":18162},"end":{"line":701,"col":37,"offset":18166},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_46","lines":"\t} else if (!strncmp(\"--user=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":707,"col":13,"offset":18295},"end":{"line":707,"col":17,"offset":18299},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_47","lines":"\t    user = argv[i] + 7;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":719,"col":15,"offset":18641},"end":{"line":719,"col":58,"offset":18684},"extra":{"metavars":{"$2":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":5,"offset":7},"abstract_content":"set"},"$FUN":{"start":{"line":719,"col":15,"offset":18641},"end":{"line":719,"col":28,"offset":18654},"abstract_content":"cap_setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1074f1e5edf6a90d2333004b0523d504930f6929dbba901d6f5aba7747c3908c2b253e780d53518c704a24a497b4221b4aa8053efce1ceb96a3be8601fbc1c9d_0","lines":"\t    status = cap_setgroups(pwd->pw_gid, ngroups, groups);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":724,"col":15,"offset":18789},"end":{"line":724,"col":38,"offset":18812},"extra":{"metavars":{"$1":{"start":{"line":2,"col":5,"offset":7},"end":{"line":2,"col":6,"offset":8},"abstract_content":"u"},"$FUN":{"start":{"line":724,"col":15,"offset":18789},"end":{"line":724,"col":25,"offset":18799},"abstract_content":"cap_setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"dc438f204af0f7d8b9c852b90021ce9ea379788151d356ad82930c7c84bfdb1f72954c863607ff368daa4c9296eb0a43f4b8af483664b22f8ae0d3621463fd7c_1","lines":"\t    status = cap_setuid(pwd->pw_uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":730,"col":35,"offset":18986},"end":{"line":730,"col":39,"offset":18990},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_48","lines":"\t} else if (!strncmp(\"--decode=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":737,"col":23,"offset":19210},"end":{"line":737,"col":27,"offset":19214},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_49","lines":"\t    value = strtoull(argv[i]+9, NULL, 16);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":738,"col":6,"offset":19237},"end":{"line":738,"col":33,"offset":19264},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"0x%016llx=\""},"$FMT":{"start":{"line":738,"col":13,"offset":19244},"end":{"line":738,"col":25,"offset":19256},"abstract_content":"\"0x%016llx=\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8f7a3615c6960ca318f478bcf71d890bf88d7768482ad3e2f007017d97aac99b4220235d7aa751fcf8428f3628feb8f420dc0ed91c5da2e64f3614765d3bca24_0","lines":"\t    printf(\"0x%016llx=\", value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":740,"col":11,"offset":19277},"end":{"line":740,"col":16,"offset":19282},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":740,"col":11,"offset":19277},"end":{"line":740,"col":14,"offset":19280},"abstract_content":"cap"},"$SIGNED":{"start":{"line":740,"col":15,"offset":19281},"end":{"line":740,"col":16,"offset":19282},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dea98770a182f5c0042ee97e953376b799cb471a775db031851e7998a041c9c6eb36893a600d0a90682d90dceef94b040019943874b62f97a56fff0abacfd7ee_1","lines":"\t    for (cap=0; (cap < 64) && (value >> cap); ++cap) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":741,"col":3,"offset":19325},"end":{"line":752,"col":4,"offset":19546},"extra":{"metavars":{"$EXPR1":{"start":{"line":741,"col":7,"offset":19329},"end":{"line":741,"col":12,"offset":19334},"abstract_content":"value"},"$EXPR2":{"start":{"line":741,"col":16,"offset":19338},"end":{"line":741,"col":27,"offset":19349},"abstract_content":"1ULL<<cap"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5cbc841a84baff2d1b24490a6b8abdab7375bd6c5fca8fdf01ac42514e1b017d3b0e79f4993f99fa3293085d3b516a99c7813669456e91678878c606f2af5d9d_0","lines":"\t\tif (value & (1ULL << cap)) {\n\t\t    char *ptr;\n\n\t\t    ptr = cap_to_name(cap);\n\t\t    if (ptr != NULL) {\n\t\t\tprintf(\"%s%s\", sep, ptr);\n\t\t\tcap_free(ptr);\n\t\t    } else {\n\t\t\tprintf(\"%s%u\", sep, cap);\n\t\t    }\n\t\t    sep = \",\";\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":755,"col":44,"offset":19616},"end":{"line":755,"col":48,"offset":19620},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_50","lines":"        } else if (!strncmp(\"--supports=\", argv[i], 11)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":758,"col":24,"offset":19678},"end":{"line":758,"col":28,"offset":19682},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_51","lines":"\t    if (cap_from_name(argv[i] + 11, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":760,"col":4,"offset":19765},"end":{"line":760,"col":8,"offset":19769},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_52","lines":"\t\t\targv[i] + 11);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":765,"col":4,"offset":19894},"end":{"line":765,"col":8,"offset":19898},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_53","lines":"\t\t\targv[i] + 11, cap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":768,"col":32,"offset":19963},"end":{"line":768,"col":36,"offset":19967},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_54","lines":"\t} else if (!strcmp(\"--print\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":770,"col":28,"offset":20020},"end":{"line":770,"col":32,"offset":20024},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_55","lines":"\t} else if ((!strcmp(\"--\", argv[i])) || (!strcmp(\"==\", argv[i]))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":770,"col":56,"offset":20048},"end":{"line":770,"col":60,"offset":20052},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_56","lines":"\t} else if ((!strcmp(\"--\", argv[i])) || (!strcmp(\"==\", argv[i]))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":10,"offset":20070},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_57","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":65,"offset":20125},"extra":{"metavars":{"$RET":{"start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":13,"offset":20073},"abstract_content":"argv[i]"},"$FUN":{"start":{"line":771,"col":16,"offset":20076},"end":{"line":771,"col":22,"offset":20082},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"827329e07617bd9a17757c3c7d3f1975c9dc5ae280500ca34788e3da3ee50ca3f85033673302bd9c9f2ce45ee966c9ffc9b5d8b6e5fd7164e50bfcae432eb692_0","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":771,"col":23,"offset":20083},"end":{"line":771,"col":27,"offset":20087},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_58","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":771,"col":57,"offset":20117},"end":{"line":771,"col":61,"offset":20121},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_59","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":772,"col":6,"offset":20132},"end":{"line":772,"col":10,"offset":20136},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_60","lines":"\t    argv[argc] = NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":773,"col":6,"offset":20156},"end":{"line":773,"col":35,"offset":20185},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"v"},"$2":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"e"},"$FUN":{"start":{"line":773,"col":6,"offset":20156},"end":{"line":773,"col":12,"offset":20162},"abstract_content":"execve"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f91589b7503a3604e326190d409ba838693c7deaa212afd75f91fa8d095e3605f427bcf07c61b02f7796a71d72e58fb3f990f2de8b6f92385f159b0096c6427c_0","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":773,"col":13,"offset":20163},"end":{"line":773,"col":17,"offset":20167},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_61","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":773,"col":22,"offset":20172},"end":{"line":773,"col":26,"offset":20176},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_62","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":773,"col":30,"offset":20180},"end":{"line":773,"col":34,"offset":20184},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_63","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":776,"col":34,"offset":20286},"end":{"line":776,"col":38,"offset":20290},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_64","lines":"\t} else if (!strncmp(\"--has-p=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":781,"col":24,"offset":20395},"end":{"line":781,"col":28,"offset":20399},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_65","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":783,"col":4,"offset":20479},"end":{"line":783,"col":8,"offset":20483},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_66","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":788,"col":46,"offset":20657},"end":{"line":788,"col":50,"offset":20661},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_67","lines":"\t\tfprintf(stderr, \"cap[%s] not permitted\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":792,"col":34,"offset":20741},"end":{"line":792,"col":38,"offset":20745},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_68","lines":"\t} else if (!strncmp(\"--has-i=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":797,"col":24,"offset":20850},"end":{"line":797,"col":28,"offset":20854},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_69","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":799,"col":4,"offset":20934},"end":{"line":799,"col":8,"offset":20938},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_70","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":805,"col":48,"offset":21118},"end":{"line":805,"col":52,"offset":21122},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_71","lines":"\t\tfprintf(stderr, \"cap[%s] not inheritable\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":809,"col":34,"offset":21202},"end":{"line":809,"col":38,"offset":21206},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_72","lines":"\t} else if (!strncmp(\"--has-a=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":811,"col":24,"offset":21262},"end":{"line":811,"col":28,"offset":21266},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_73","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":813,"col":4,"offset":21346},"end":{"line":813,"col":8,"offset":21350},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_74","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":817,"col":54,"offset":21465},"end":{"line":817,"col":58,"offset":21469},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_75","lines":"\t\tfprintf(stderr, \"cap[%s] not in ambient vector\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":820,"col":35,"offset":21529},"end":{"line":820,"col":39,"offset":21533},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_76","lines":"\t} else if (!strncmp(\"--is-uid=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":823,"col":6,"offset":21586},"end":{"line":823,"col":41,"offset":21621},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":823,"col":6,"offset":21586},"end":{"line":823,"col":11,"offset":21591},"abstract_content":"value"},"$SIGNED":{"start":{"line":823,"col":30,"offset":21610},"end":{"line":823,"col":31,"offset":21611},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ce554eafc8bc17bb43f7413a69957a915c1a7a1fe706b2f4f9a4e75eee1647a9721502902832d27358fda693a59192821ec58aab209ab9b66a7f2e35e0340801_1","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":823,"col":22,"offset":21602},"end":{"line":823,"col":26,"offset":21606},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_77","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":829,"col":35,"offset":21778},"end":{"line":829,"col":39,"offset":21782},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_78","lines":"\t} else if (!strncmp(\"--is-gid=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":832,"col":6,"offset":21835},"end":{"line":832,"col":41,"offset":21870},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":832,"col":6,"offset":21835},"end":{"line":832,"col":11,"offset":21840},"abstract_content":"value"},"$SIGNED":{"start":{"line":832,"col":30,"offset":21859},"end":{"line":832,"col":31,"offset":21860},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ce554eafc8bc17bb43f7413a69957a915c1a7a1fe706b2f4f9a4e75eee1647a9721502902832d27358fda693a59192821ec58aab209ab9b66a7f2e35e0340801_2","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":832,"col":22,"offset":21851},"end":{"line":832,"col":26,"offset":21855},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_79","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":874,"col":6,"offset":24057},"end":{"line":874,"col":10,"offset":24061},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_80","lines":"\t\t   argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":874,"col":15,"offset":24066},"end":{"line":874,"col":19,"offset":24070},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_81","lines":"\t\t   argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","start":{"line":876,"col":28,"offset":24104},"end":{"line":876,"col":32,"offset":24108},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7e974558ff265bf99b2bf5a538e5adbaa3f28de50bb646a911eee180695c055d4716ab9d590a50ef543935177dc19253a1cf31e2742469a0a85245929dbb0257_82","lines":"\t    exit(strcmp(\"--help\", argv[i]) != 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":60,"col":5,"offset":1330},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$RET":{"start":{"line":60,"col":5,"offset":1330},"end":{"line":60,"col":12,"offset":1337},"abstract_content":"*groups"},"$FUN":{"start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":21,"offset":1346},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"adbe98afeadf94b427deee2ec2ad59e075a28b8b64cad1ea8d63f7dcbc1c8ad6837dfaf0ebac4549590e2b97883b42730dd128fecba57abef69fedf7cd3c6be4_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":21,"offset":1346},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"23f103dfe053f8d07b4db17da71c2f5f01b107cf120ceb174eb0df019d5fd73f2c20ea510f82c07107648435495b79326bc757dae5d2f80ebb62a18cf24e5709_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$CNT":{"start":{"line":60,"col":22,"offset":1347},"end":{"line":60,"col":27,"offset":1352},"abstract_content":"ngrps","propagated_value":{"svalue_start":{"line":45,"col":17,"offset":1063},"svalue_end":{"line":45,"col":28,"offset":1074},"svalue_abstract_content":"NGROUPS_MAX"}},"$LEN":{"start":{"line":60,"col":29,"offset":1354},"end":{"line":60,"col":43,"offset":1368},"abstract_content":"sizeof(char*)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4b7374e5968f687acd59ac8253dfc965257a65d77d59a41cf1fbd3b59e6b2e5715ab099c53a35b24b5dac44bba5fdbfd92239624ebd35c5d44e2256e476b3f06_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":68,"col":3,"offset":1566},"end":{"line":68,"col":39,"offset":1602},"extra":{"metavars":{"$RET":{"start":{"line":68,"col":3,"offset":1566},"end":{"line":68,"col":18,"offset":1581},"abstract_content":"*groups[g_n++]"},"$FUN":{"start":{"line":68,"col":21,"offset":1584},"end":{"line":68,"col":27,"offset":1590},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae4dfae77707c33f7264b0fc3f63e6d46f1b4147d40870839b6832a48468849d88eb56cd1696549aff2d2624c940829e118edc4e60ccfaa9f141b4edf7682a1a_0","lines":"\t(*groups)[g_n++] = strdup(g->gr_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":90,"col":16,"offset":2044},"end":{"line":90,"col":34,"offset":2062},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":16,"offset":2044},"end":{"line":90,"col":21,"offset":2049},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"df9e1d163d6b3a09043bd91ee6ee56aea6f90d536a0faec46698ccbf7b3da2a123bb906a1858c3e1f8a18ada34887d09e677bfcce93ecc998382d1b0246a62fd_0","lines":"    cap_file = fopen(source, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":98,"col":13,"offset":2212},"end":{"line":98,"col":58,"offset":2257},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":98,"col":13,"offset":2212},"end":{"line":98,"col":18,"offset":2217},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"327e8e69887737caa69f2e0d00a40b3ceb75542642a0b1cf461909a27673accb18e1c7f007b239c9a9252a06345b26b8650037ed6f65901181332a6d6289eba0_0","lines":"\t   (line = fgets(buffer, CAP_FILE_BUFFER_SIZE, cap_file))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":148,"col":6,"offset":3170},"end":{"line":148,"col":35,"offset":3199},"extra":{"metavars":{"$RET":{"start":{"line":148,"col":6,"offset":3170},"end":{"line":148,"col":16,"offset":3180},"abstract_content":"cap_string"},"$FUN":{"start":{"line":148,"col":19,"offset":3183},"end":{"line":148,"col":25,"offset":3189},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"24bebf65432d76fa49257d66cee4a8691de9c9abaca746769a6e3228ad99b95d431fc33f0f116064b5966d8ce0d1350035288ea7c80188696ee7cf46980b86a2_0","lines":"\t    cap_string = strdup(cap_text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":44,"offset":3382},"extra":{"metavars":{"$DST":{"start":{"line":159,"col":12,"offset":3350},"end":{"line":159,"col":18,"offset":3356},"abstract_content":"buffer"},"$CHAR":{"start":{"line":159,"col":20,"offset":3358},"end":{"line":159,"col":21,"offset":3359},"abstract_content":"0"},"$LEN":{"start":{"line":159,"col":23,"offset":3361},"end":{"line":159,"col":43,"offset":3381},"abstract_content":"CAP_FILE_BUFFER_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"46f6a070e0c5b0e103cf8fb03407009f0932660319e7516051f70159d08f4600d33bcb2401a25c75c1513d8668e008d381b4741225f72b2471513939fe4f991f_0","lines":"    memset(buffer, 0, CAP_FILE_BUFFER_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":44,"offset":3382},"extra":{"metavars":{"$TYPE":{"start":{"line":80,"col":5,"offset":1826},"end":{"line":80,"col":9,"offset":1830},"abstract_content":"char"},"$LEN":{"start":{"line":80,"col":17,"offset":1838},"end":{"line":80,"col":37,"offset":1858},"abstract_content":"CAP_FILE_BUFFER_SIZE"},"$FUN":{"start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":11,"offset":3349},"abstract_content":"memset"},"$BUF":{"start":{"line":159,"col":12,"offset":3350},"end":{"line":159,"col":18,"offset":3356},"abstract_content":"buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d9d0318a508425cac743ebea9681a3e25dbab0cf8b9e66cb62c76c717c06f492fd9d3492a52993127c16723df244ae5f599af1325a09dc6fb00b4e228ae0e0e2_0","lines":"    memset(buffer, 0, CAP_FILE_BUFFER_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":251,"col":6,"offset":5822},"end":{"line":251,"col":43,"offset":5859},"extra":{"metavars":{"$RET":{"start":{"line":251,"col":6,"offset":5822},"end":{"line":251,"col":11,"offset":5827},"abstract_content":"bound"},"$FUN":{"start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":20,"offset":5836},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e30b2ef56dd417ad7bc971e8cda02d3347304e49e8f0a585a1276ca495709dc7f2a97c64d2705e02caca1c84df23717888a32a0ada0db84a715a9e116be44810_0","lines":"\t    bound = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":43,"offset":5859},"extra":{"metavars":{"$FUN":{"start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":20,"offset":5836},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"23f103dfe053f8d07b4db17da71c2f5f01b107cf120ceb174eb0df019d5fd73f2c20ea510f82c07107648435495b79326bc757dae5d2f80ebb62a18cf24e5709_1","lines":"\t    bound = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":254,"col":3,"offset":5932},"end":{"line":254,"col":42,"offset":5971},"extra":{"metavars":{"$RET":{"start":{"line":254,"col":3,"offset":5932},"end":{"line":254,"col":10,"offset":5939},"abstract_content":"ambient"},"$FUN":{"start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":19,"offset":5948},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"31d22a82c61b4057d75700a7c01084498b1f1055a30c2f217fdfbfd99c01d3662dcb93afb2150d7b57dc780116d1e24d8ba508fe30180398b067051774932071_0","lines":"\t\tambient = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":42,"offset":5971},"extra":{"metavars":{"$FUN":{"start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":19,"offset":5948},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"23f103dfe053f8d07b4db17da71c2f5f01b107cf120ceb174eb0df019d5fd73f2c20ea510f82c07107648435495b79326bc757dae5d2f80ebb62a18cf24e5709_2","lines":"\t\tambient = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":377,"col":5,"offset":8805},"end":{"line":377,"col":31,"offset":8831},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"19c98f28bc807787b78a54e7a117ac432ae2f04e18415f1a138b04299cf0f981e78aa9dc48c7d0accd630bc0c9cec29e9e318aef650ef70f860f355188edda8d_0","lines":"    vsyslog(err, format, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":385,"col":26,"offset":9005},"end":{"line":385,"col":30,"offset":9009},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_0","lines":"    for (; argc-- > 0; ++argv) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":386,"col":15,"offset":9027},"end":{"line":386,"col":19,"offset":9031},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_1","lines":"\tif (!strcmp(*argv, \"debug\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":388,"col":23,"offset":9088},"end":{"line":388,"col":27,"offset":9092},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_2","lines":"\t} else if (!strncmp(*argv, \"config=\", 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":389,"col":32,"offset":9142},"end":{"line":389,"col":36,"offset":9146},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_3","lines":"\t    pcs->conf_filename = 7 + *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":391,"col":47,"offset":9204},"end":{"line":391,"col":51,"offset":9208},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_4","lines":"\t    _pam_log(LOG_ERR, \"unknown option; %s\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":409,"col":22,"offset":9607},"end":{"line":409,"col":26,"offset":9611},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_5","lines":"    parse_args(argc, argv, &pcs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":411,"col":14,"offset":9634},"end":{"line":411,"col":49,"offset":9669},"extra":{"metavars":{"$2":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":5,"offset":7},"abstract_content":"get"},"$FUN":{"start":{"line":411,"col":14,"offset":9634},"end":{"line":411,"col":26,"offset":9646},"abstract_content":"pam_get_user"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9e42fe9541e423618002f8fd029d168cb33e9e696fbbbbcf5177cebcb77894c761343780351ff529c5f851dbf6b09b19bc978eb279501d5a10f7c46635fbb6fe_0","lines":"    retval = pam_get_user(pamh, &pcs.user, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":461,"col":5,"offset":10875},"end":{"line":464,"col":6,"offset":10993},"extra":{"metavars":{"$EXPR1":{"start":{"line":461,"col":11,"offset":10881},"end":{"line":461,"col":16,"offset":10886},"abstract_content":"flags"},"$EXPR2":{"start":{"line":461,"col":19,"offset":10889},"end":{"line":461,"col":37,"offset":10907},"abstract_content":"PAM_ESTABLISH_CRED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1faf273ceecf048d669119c370d10d62c2299d21e4933915d63903f41e08b45d6ba8ed57ecd38f82f15cefa141f22616ca1a9c4715b794dfc3be194e48478b60_0","lines":"    if (!(flags & PAM_ESTABLISH_CRED)) {\n\tD((\"we don't handle much in the way of credentials\"));\n\treturn PAM_IGNORE;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","start":{"line":467,"col":22,"offset":11050},"end":{"line":467,"col":26,"offset":11054},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"60db35ead2d169355d6888b593ecc9fd22a40c7fbf82a7ab686d0aa94408be7eac039ad68049a5a10e0550db60accd87545b2a82c8c17f45c11a09a6ddc96149_6","lines":"    parse_args(argc, argv, &pcs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":35,"col":10,"offset":753},"end":{"line":35,"col":39,"offset":782},"extra":{"metavars":{"$FUN":{"start":{"line":35,"col":10,"offset":753},"end":{"line":35,"col":14,"offset":757},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7d7ff92f678057eb7bca3cfe5d933e96fac54cbe6c74bb700329bfb4462b7e43381065f0df3205b4f0c76c82a067743339b6a1d20f6734eed373aca9ac41c7f3_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":35,"col":10,"offset":753},"end":{"line":35,"col":39,"offset":782},"extra":{"metavars":{"$FD":{"start":{"line":35,"col":15,"offset":758},"end":{"line":35,"col":27,"offset":770},"abstract_content":"STDIN_FILENO"},"$BUF":{"start":{"line":35,"col":29,"offset":772},"end":{"line":35,"col":35,"offset":778},"abstract_content":"buffer"},"$LEN":{"start":{"line":35,"col":37,"offset":780},"end":{"line":35,"col":38,"offset":781},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"972d85d690cd66c2c91c86ad6a342874b0be5c796617af32de1f4ce00f62b25003f92d08827d509fdff9005927bb6ef93dc1ddcebddde086475fe071fa75eff8_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":82,"col":17,"offset":1541},"end":{"line":82,"col":21,"offset":1545},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_0","lines":"\tif (!strcmp(*++argv, \"-q\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":86,"col":15,"offset":1604},"end":{"line":86,"col":19,"offset":1608},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_1","lines":"\tif (!strcmp(*argv, \"-v\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":90,"col":15,"offset":1668},"end":{"line":90,"col":19,"offset":1672},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_2","lines":"\tif (!strcmp(*argv, \"-n\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":96,"col":23,"offset":1826},"end":{"line":96,"col":36,"offset":1839},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"6ea1cbe1a922019c37dce20440f60d95d030202b0b1302e82a572a63d757a39d8437a6105f7cf5b7a919fcf3d25afb2391da87dc57b5849cba4dff413e2c93fa_0","lines":"\t    rootid = (uid_t) atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":96,"col":31,"offset":1834},"end":{"line":96,"col":35,"offset":1838},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_3","lines":"\t    rootid = (uid_t) atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":98,"col":49,"offset":1914},"end":{"line":98,"col":53,"offset":1918},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_4","lines":"\t\tfprintf(stderr, \"invalid rootid!=0 of '%s'\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":104,"col":15,"offset":1972},"end":{"line":104,"col":19,"offset":1976},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_5","lines":"\tif (!strcmp(*argv, \"-r\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":107,"col":19,"offset":2034},"end":{"line":107,"col":23,"offset":2038},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_6","lines":"\t    if (!strcmp(*argv,\"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":108,"col":30,"offset":2076},"end":{"line":108,"col":34,"offset":2080},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_7","lines":"\t\tretval = read_caps(quiet, *argv, buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":113,"col":11,"offset":2161},"end":{"line":113,"col":15,"offset":2165},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_8","lines":"\t\ttext = *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":149,"col":36,"offset":2786},"end":{"line":149,"col":40,"offset":2790},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_9","lines":"\t    cap_on_file = cap_get_file(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":164,"col":43,"offset":3188},"end":{"line":164,"col":47,"offset":3192},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_10","lines":"\t\t    printf(\"%s differs in [%s%s%s]\\n\", *argv,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":172,"col":23,"offset":3410},"end":{"line":172,"col":27,"offset":3414},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_11","lines":"\t\tprintf(\"%s: OK\\n\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":193,"col":31,"offset":3904},"end":{"line":193,"col":35,"offset":3908},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_12","lines":"\t    retval = cap_set_file(*++argv, cap_d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","start":{"line":219,"col":4,"offset":4681},"end":{"line":219,"col":8,"offset":4685},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"be6e5d34c4b00427af1fb35625779089f074ab4989cc8928fbe25a0bef5258bf715add9d649b70f41a83128ec6ec83451d87484f33ba8839d6dff1e3b503c308_13","lines":"\t\t\targv[0], strerror(oerrno));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/libcap2-2.32/contrib/bug400591/bug.c","start":{"line":24,"col":3,"offset":449},"end":{"line":24,"col":32,"offset":478},"extra":{"metavars":{"$ASSERT":{"start":{"line":24,"col":3,"offset":449},"end":{"line":24,"col":9,"offset":455},"abstract_content":"assert"},"$A":{"start":{"line":24,"col":11,"offset":457},"end":{"line":24,"col":15,"offset":461},"abstract_content":"size","propagated_value":{"svalue_start":{"line":23,"col":10,"offset":430},"svalue_end":{"line":23,"col":25,"offset":445},"svalue_abstract_content":"cap_size(caps)"}},"$B":{"start":{"line":24,"col":16,"offset":462},"end":{"line":24,"col":17,"offset":463},"abstract_content":"0"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2aac6abea4551f1ffa3bc34d7023bbb487d4d110f3c4e9ef68349cc5f3c2dbcf50b373edec9bfdeda1071ff30b16df2cd06986bbf0ee07b71caac2185b705d04_0","lines":"  assert (size>0  && size<1024);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/contrib/bug400591/bug.c","start":{"line":26,"col":3,"offset":483},"end":{"line":26,"col":25,"offset":505},"extra":{"metavars":{"$RET":{"start":{"line":26,"col":3,"offset":483},"end":{"line":26,"col":9,"offset":489},"abstract_content":"buffer"},"$FUN":{"start":{"line":26,"col":12,"offset":492},"end":{"line":26,"col":18,"offset":498},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"170aaa23da8db25ba1436615bcb81f69fb09beb251e8af47b255a5b774203bf7757da9c3576b316ad9d5fb1df5996efe377a10ed03586bfed7c62bb0f2fc5ee6_0","lines":"  buffer = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/contrib/bug400591/bug.c","start":{"line":26,"col":12,"offset":492},"end":{"line":26,"col":25,"offset":505},"extra":{"metavars":{"$FUN":{"start":{"line":26,"col":12,"offset":492},"end":{"line":26,"col":18,"offset":498},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"9d3ac5d847a23f70ba099622b034cf018ef3a40085e09195f22a4e0e6af4af9346b267de1944cf6ac75b1d2c60f2a92b7ce24ab2803e33e2d9b01e0293cd8bca_0","lines":"  buffer = malloc (size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","start":{"line":37,"col":32,"offset":757},"end":{"line":37,"col":82,"offset":807},"extra":{"metavars":{"$FUN":{"start":{"line":37,"col":32,"offset":757},"end":{"line":37,"col":39,"offset":764},"abstract_content":"realloc"},"$ARG1":{"start":{"line":37,"col":40,"offset":765},"end":{"line":37,"col":48,"offset":773},"abstract_content":"pointers"},"$X":{"start":{"line":37,"col":50,"offset":775},"end":{"line":37,"col":64,"offset":789},"abstract_content":"pointers_avail","propagated_value":{"svalue_start":{"line":36,"col":34,"offset":703},"svalue_end":{"line":36,"col":55,"offset":724},"svalue_abstract_content":"2*list[i].index+1"}},"$Y":{"start":{"line":37,"col":67,"offset":792},"end":{"line":37,"col":81,"offset":806},"abstract_content":"sizeof(char*)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"361ed38bfe622b95b1b609df6ede4cb222ee2e1ec6e4390e4a90638819f9868ffc3dc9f76dbe2361c35dce4c62e93c4a7a9ad01315229854132ae55f95c2b9a1_0","lines":"                pointers_tmp = realloc(pointers, pointers_avail * sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","start":{"line":37,"col":32,"offset":757},"end":{"line":37,"col":82,"offset":807},"extra":{"metavars":{"$FUN":{"start":{"line":37,"col":32,"offset":757},"end":{"line":37,"col":39,"offset":764},"abstract_content":"realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d64c297ffb054a14319f6429c49c381baca774c6642b6935e3c8b6fb72caa6ab2557e34e0fc90fa979ea29c36da7c650382b04e32c59340ea6de4759b3d13ea3_0","lines":"                pointers_tmp = realloc(pointers, pointers_avail * sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","start":{"line":74,"col":5,"offset":1779},"end":{"line":74,"col":20,"offset":1794},"extra":{"metavars":{"$PTR":{"start":{"line":74,"col":10,"offset":1784},"end":{"line":74,"col":18,"offset":1792},"abstract_content":"pointers"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9b5a4e775bc758baac5668f69340cef551054264bad19c747777edda4ceb4c92feab4111b70a9435ce735a7e38f0e7560f2331e5ae2fc9bcdf13e6912a06a8e1_0","lines":"    free(pointers);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":36,"col":16,"offset":761},"end":{"line":36,"col":58,"offset":803},"extra":{"metavars":{"$FUN":{"start":{"line":36,"col":16,"offset":761},"end":{"line":36,"col":22,"offset":767},"abstract_content":"calloc"},"$ARG1":{"start":{"line":36,"col":23,"offset":768},"end":{"line":36,"col":24,"offset":769},"abstract_content":"1"},"$X":{"start":{"line":36,"col":26,"offset":771},"end":{"line":36,"col":38,"offset":783},"abstract_content":"sizeof __u32"},"$Y":{"start":{"line":36,"col":42,"offset":787},"end":{"line":36,"col":56,"offset":801},"abstract_content":"sizeof*result"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4f93ab42aed1e6b499d5bcca73ff6a87032a6b2fc622798172b1e73b76a73677f48c05faaedc8dc74abf3a794092a6ea607df0bb87cb7e9f8bee465df8d60046_0","lines":"    raw_data = calloc(1, sizeof(__u32) + sizeof(*result));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":36,"col":16,"offset":761},"end":{"line":36,"col":58,"offset":803},"extra":{"metavars":{"$FUN":{"start":{"line":36,"col":16,"offset":761},"end":{"line":36,"col":22,"offset":767},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbbb2ca1f25b4606454cdffce698c9adfb3364c33ccc88b798becfc4bb8aa85e9658be565afa18798ed52e6c2b8c37627b8a07548d68a0af0d8c2668c32e24e0_0","lines":"    raw_data = calloc(1, sizeof(__u32) + sizeof(*result));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":36,"col":16,"offset":761},"end":{"line":36,"col":58,"offset":803},"extra":{"metavars":{"$CNT":{"start":{"line":36,"col":23,"offset":768},"end":{"line":36,"col":24,"offset":769},"abstract_content":"1"},"$LEN":{"start":{"line":36,"col":26,"offset":771},"end":{"line":36,"col":56,"offset":801},"abstract_content":"sizeof __u32+sizeof*result"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"81a758ac04faba6396d68d26056ccbe4adca62daa5f298cbd80892b8517516819c18254461da2b02b37b416d7ac5787da96d6aa13f76529b055981e4ac1dfe9b_0","lines":"    raw_data = calloc(1, sizeof(__u32) + sizeof(*result));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":85,"col":16,"offset":1802},"end":{"line":85,"col":57,"offset":1843},"extra":{"metavars":{"$FUN":{"start":{"line":85,"col":16,"offset":1802},"end":{"line":85,"col":22,"offset":1808},"abstract_content":"malloc"},"$X":{"start":{"line":85,"col":24,"offset":1810},"end":{"line":85,"col":51,"offset":1837},"abstract_content":"sizeof __u32+strlen(old)"},"$Y":{"start":{"line":85,"col":54,"offset":1840},"end":{"line":85,"col":55,"offset":1841},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c2a53929a87de12cd4021f5870d79d2f6eb5217616b2c578d16a8f8c753927151db3d523d9efe1dfd62a332bb8a254b86973b913843ed459c62811b85eebb09d_0","lines":"    raw_data = malloc( sizeof(__u32) + strlen(old) + 1 );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":85,"col":16,"offset":1802},"end":{"line":85,"col":57,"offset":1843},"extra":{"metavars":{"$FUN":{"start":{"line":85,"col":16,"offset":1802},"end":{"line":85,"col":22,"offset":1808},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4880101d96237637a04f06b55d769a9e54a0114fd7fb85c552ad3d1f5367a24eeca0fa3cdaffe6785d1a5cf7c6116a3051cffd2484894924529c524d6d3f4191_0","lines":"    raw_data = malloc( sizeof(__u32) + strlen(old) + 1 );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":92,"col":5,"offset":1948},"end":{"line":92,"col":35,"offset":1978},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"40b3ccc430fde0356026fafc7a0f11bbcd68f0d356ea9f6a7e57a7be03d9ab3515f8be0cc5a2b6de7ed3f448e6bacee50665d580f72c6ace81abd68cc2283661_0","lines":"    strcpy((char *) raw_data, old);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":92,"col":5,"offset":1948},"end":{"line":92,"col":35,"offset":1978},"extra":{"metavars":{"$FUN":{"start":{"line":92,"col":5,"offset":1948},"end":{"line":92,"col":11,"offset":1954},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f990b2a70c15492bf7a97a589e8be791dd273dfabdad511914f5303c7f3433f896c009afb62f0f2794b78e3a66f2b96b030ae801c438b5451cbd3c95c6d52a9e_0","lines":"    strcpy((char *) raw_data, old);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":119,"col":5,"offset":2432},"end":{"line":119,"col":42,"offset":2469},"extra":{"metavars":{"$FUN":{"start":{"line":119,"col":5,"offset":2432},"end":{"line":119,"col":11,"offset":2438},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"96ad1912cdff2818d872371544ed60ec9ef8239497d8c5e47f063038da9f1ac479dadf84f8ac79bbb463d484dbef004729e0148b0848fba17a785c40278352b0_0","lines":"    memcpy(result, cap_d, sizeof(*cap_d));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":137,"col":2,"offset":2748},"end":{"line":137,"col":15,"offset":2761},"extra":{"metavars":{"$PTR":{"start":{"line":137,"col":7,"offset":2753},"end":{"line":137,"col":13,"offset":2759},"abstract_content":"data_p","propagated_value":{"svalue_start":{"line":135,"col":11,"offset":2660},"svalue_end":{"line":135,"col":32,"offset":2681},"svalue_abstract_content":"-1+(__u32*data_p"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9bd5b20162bb068d0a5ae5b54ceab47ca73479e71be73a25920bf37a42d2758f267620b9e2a913cb30b0fac96286a26795904e4246d2c789064bf66fb2f3ca01_0","lines":"\tfree(data_p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","start":{"line":146,"col":7,"offset":2959},"end":{"line":146,"col":20,"offset":2972},"extra":{"metavars":{"$PTR":{"start":{"line":146,"col":12,"offset":2964},"end":{"line":146,"col":18,"offset":2970},"abstract_content":"data_p","propagated_value":{"svalue_start":{"line":144,"col":16,"offset":2897},"svalue_end":{"line":144,"col":37,"offset":2918},"svalue_abstract_content":"-1+(__u32*data_p"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9bd5b20162bb068d0a5ae5b54ceab47ca73479e71be73a25920bf37a42d2758f267620b9e2a913cb30b0fac96286a26795904e4246d2c789064bf66fb2f3ca01_1","lines":"     \tfree(data_p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","start":{"line":56,"col":5,"offset":1296},"end":{"line":56,"col":63,"offset":1354},"extra":{"metavars":{"$FUN":{"start":{"line":56,"col":5,"offset":1296},"end":{"line":56,"col":11,"offset":1302},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"45515a9eed4a54ec5db9565d2275802b06b35de2f50ac57b82e50dc8a857e43637c8b0b7b8589d2ccb92609ca8589c2cd494924c7fb6b2ec4603efc6b4d08757_0","lines":"    memcpy(&result->magic, external_magic, CAP_EXT_MAGIC_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","start":{"line":56,"col":5,"offset":1296},"end":{"line":56,"col":63,"offset":1354},"extra":{"metavars":{"$DST":{"start":{"line":56,"col":12,"offset":1303},"end":{"line":56,"col":26,"offset":1317},"abstract_content":"&result->->magic"},"$SRC":{"start":{"line":56,"col":28,"offset":1319},"end":{"line":56,"col":42,"offset":1333},"abstract_content":"external_magic"},"$LEN":{"start":{"line":56,"col":44,"offset":1335},"end":{"line":56,"col":62,"offset":1353},"abstract_content":"CAP_EXT_MAGIC_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7255eddc9a47698f6f326e8230be9a5cff62b3b3ed9ad3ac55dc8784e8423cded64899f3754d898ded309fd001111e405341a31c7e27e84ab3fd6fa17f30a009_0","lines":"    memcpy(&result->magic, external_magic, CAP_EXT_MAGIC_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","start":{"line":61,"col":7,"offset":1462},"end":{"line":61,"col":10,"offset":1465},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":61,"col":7,"offset":1462},"end":{"line":61,"col":8,"offset":1463},"abstract_content":"j"},"$SIGNED":{"start":{"line":61,"col":9,"offset":1464},"end":{"line":61,"col":10,"offset":1465},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7402c52fab79d9e013f622473754edc44d50e69880109cafe7e70e5c6678c69f166af2fab24faa954cb01016ba6e4d99b136c1119e4a4ff93a5f6fdd56da4f5b_0","lines":"\tfor (j=0; j<CAP_SET_SIZE; ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","start":{"line":97,"col":5,"offset":2393},"end":{"line":98,"col":20,"offset":2439},"extra":{"metavars":{"$EXPR1":{"start":{"line":97,"col":11,"offset":2399},"end":{"line":97,"col":16,"offset":2404},"abstract_content":"cap_d","propagated_value":{"svalue_start":{"line":97,"col":19,"offset":2407},"svalue_end":{"line":97,"col":29,"offset":2417},"svalue_abstract_content":"cap_init()"}},"$EXPR2":{"start":{"line":97,"col":19,"offset":2407},"end":{"line":97,"col":29,"offset":2417},"abstract_content":"cap_init()"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aac45dd10585693dbb07ca05197916f70a2bd2c7b456be25ae6781b7c184cce1afa5f203e6300d2d593cff1b530d808460ec96e5a521ff48dae16697af3bc365_0","lines":"    if (!(cap_d = cap_init()))\n       return NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","start":{"line":104,"col":7,"offset":2562},"end":{"line":104,"col":12,"offset":2567},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":104,"col":7,"offset":2562},"end":{"line":104,"col":10,"offset":2565},"abstract_content":"blk"},"$SIGNED":{"start":{"line":104,"col":11,"offset":2566},"end":{"line":104,"col":12,"offset":2567},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e89501176eca1ccf1b9df0fc9e72bd9fd39d68516d04c9379e09f46f44576c2d557d12bc5a3a89c14ecd15049d3919b4d000c1e5dc8f6a56d01064ebf155485c_0","lines":"\tfor (blk=0; blk<(CAP_SET_SIZE/sizeof(__u32)); ++blk) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":81,"col":10,"offset":1948},"end":{"line":81,"col":13,"offset":1951},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":81,"col":10,"offset":1948},"end":{"line":81,"col":11,"offset":1949},"abstract_content":"i"},"$SIGNED":{"start":{"line":81,"col":12,"offset":1950},"end":{"line":81,"col":13,"offset":1951},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9679436f2394d03a625bff93c4d27cab6ea97014b38a279a6590e99e8cdcc0b42ab8ae427998fbe72690a8875c49f25af9c06839422e5238aab352a5f80da1dc_0","lines":"    for (i=0; i < tocopy; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":86,"col":2,"offset":2147},"end":{"line":90,"col":3,"offset":2307},"extra":{"metavars":{"$EXPR1":{"start":{"line":86,"col":6,"offset":2151},"end":{"line":86,"col":15,"offset":2160},"abstract_content":"magic_etc"},"$EXPR2":{"start":{"line":86,"col":18,"offset":2163},"end":{"line":86,"col":41,"offset":2186},"abstract_content":"VFS_CAP_FLAGS_EFFECTIVE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"38735f7a5a5bce2a32572cc3b856bec5033626485bfc54081b631004f0bbf302c15287311b913ded12167eb79a50c0d2a8b24dafd3ccc15ceacdd58499f60d38_0","lines":"\tif (magic_etc & VFS_CAP_FLAGS_EFFECTIVE) {\n\t    result->u[i].flat[CAP_EFFECTIVE]\n\t\t= result->u[i].flat[CAP_INHERITABLE]\n\t\t| result->u[i].flat[CAP_PERMITTED];\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":146,"col":28,"offset":3517},"end":{"line":146,"col":33,"offset":3522},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":146,"col":28,"offset":3517},"end":{"line":146,"col":29,"offset":3518},"abstract_content":"i"},"$SIGNED":{"start":{"line":146,"col":32,"offset":3521},"end":{"line":146,"col":33,"offset":3522},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9679436f2394d03a625bff93c4d27cab6ea97014b38a279a6590e99e8cdcc0b42ab8ae427998fbe72690a8875c49f25af9c06839422e5238aab352a5f80da1dc_1","lines":"    for (eff_not_zero = 0, i = 0; i < tocopy; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":162,"col":10,"offset":3884},"end":{"line":162,"col":13,"offset":3887},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":162,"col":10,"offset":3884},"end":{"line":162,"col":11,"offset":3885},"abstract_content":"i"},"$SIGNED":{"start":{"line":162,"col":12,"offset":3886},"end":{"line":162,"col":13,"offset":3887},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9679436f2394d03a625bff93c4d27cab6ea97014b38a279a6590e99e8cdcc0b42ab8ae427998fbe72690a8875c49f25af9c06839422e5238aab352a5f80da1dc_2","lines":"    for (i=0; i < tocopy; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":168,"col":2,"offset":4082},"end":{"line":174,"col":3,"offset":4267},"extra":{"metavars":{"$EXPR1":{"start":{"line":169,"col":11,"offset":4109},"end":{"line":169,"col":44,"offset":4142},"abstract_content":"~cap_d->->u[i].flat[CAP_EFFECTIVE]"},"$EXPR2":{"start":{"line":170,"col":6,"offset":4150},"end":{"line":171,"col":41,"offset":4222},"abstract_content":"cap_d->->u[i].flat[CAP_PERMITTED]|cap_d->->u[i].flat[CAP_INHERITABLE]"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"edbef28f3e7202981754bc021671b597505aed7937d308bb536c158a91fb4fc71a4ac00fd02a9e60b57a2b5266e30769c562069fee95ef2d5f380f5476473dac_0","lines":"\tif (eff_not_zero\n\t    && ((~(cap_d->u[i].flat[CAP_EFFECTIVE]))\n\t\t& (cap_d->u[i].flat[CAP_PERMITTED]\n\t\t   | cap_d->u[i].flat[CAP_INHERITABLE]))) {\n\t    errno = EINVAL;\n\t    return -1;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":268,"col":9,"offset":6135},"end":{"line":268,"col":28,"offset":6154},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":9,"offset":6135},"end":{"line":268,"col":14,"offset":6140},"abstract_content":"fstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"80c356957b8cba1a71de5fbf86ffd8fbc996b0a9fff06b3b390e64119d1ad0139f72110d143377e52fecc7de4fab1f601071a184b89264978d2175b688c886cb_0","lines":"    if (fstat(fildes, &buf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":300,"col":9,"offset":6915},"end":{"line":300,"col":30,"offset":6936},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"1116bf6efe0e3d3406a64b1a5e8922aa3e662657919930c25dc8872507001ba4dd108fa55dcffedf4da30afd18d1d538e365f2d2202d50d994131179cd5a85b6_0","lines":"    if (lstat(filename, &buf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","start":{"line":300,"col":9,"offset":6915},"end":{"line":300,"col":30,"offset":6936},"extra":{"metavars":{"$FUN":{"start":{"line":300,"col":9,"offset":6915},"end":{"line":300,"col":14,"offset":6920},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f601cdf6ecae0f90f7f6584e758a19d7b48d6042b90fb6fce6c90c7d42430272b298a621898c8af4ab6988d5210ccfd832afb3412f6013a012efe8d67f426d9a_0","lines":"    if (lstat(filename, &buf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_flag.c","start":{"line":109,"col":11,"offset":2324},"end":{"line":109,"col":14,"offset":2327},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":109,"col":11,"offset":2324},"end":{"line":109,"col":12,"offset":2325},"abstract_content":"i"},"$SIGNED":{"start":{"line":109,"col":13,"offset":2326},"end":{"line":109,"col":14,"offset":2327},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d05c25d9afd8cb72ff56b882f28225dd4f10e939400c774f91ea94d9e81de421affcac844832ddd883a04f3f6c2b939ee5895559fa21dbc3b509bef5fa81253d_0","lines":"\t    for (i=0; i<_LIBCAP_CAPABILITY_U32S; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_flag.c","start":{"line":140,"col":10,"offset":2760},"end":{"line":140,"col":13,"offset":2763},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":140,"col":10,"offset":2760},"end":{"line":140,"col":11,"offset":2761},"abstract_content":"i"},"$SIGNED":{"start":{"line":140,"col":12,"offset":2762},"end":{"line":140,"col":13,"offset":2763},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d05c25d9afd8cb72ff56b882f28225dd4f10e939400c774f91ea94d9e81de421affcac844832ddd883a04f3f6c2b939ee5895559fa21dbc3b509bef5fa81253d_1","lines":"    for (i=0, result=0; i<_LIBCAP_CAPABILITY_U32S; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":380,"col":6,"offset":9314},"end":{"line":380,"col":36,"offset":9344},"extra":{"metavars":{"$NARROW":{"start":{"line":380,"col":6,"offset":9314},"end":{"line":380,"col":9,"offset":9317},"abstract_content":"ret"},"$LARGE":{"start":{"line":380,"col":28,"offset":9336},"end":{"line":380,"col":35,"offset":9343},"abstract_content":"secbits"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4777ed00e066fff5e0e1fce740c3957e13bd9af8a280358271b24116417b70cec742b64adbf526861e3665b5370a8cdf1d5dd181b90f9b7027a334624ee5fc2b_0","lines":"\t    ret = cap_set_secbits(secbits);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":380,"col":6,"offset":9314},"end":{"line":380,"col":36,"offset":9344},"extra":{"metavars":{"$SIGNED":{"start":{"line":380,"col":6,"offset":9314},"end":{"line":380,"col":9,"offset":9317},"abstract_content":"ret"},"$UNSIGNED":{"start":{"line":380,"col":28,"offset":9336},"end":{"line":380,"col":35,"offset":9343},"abstract_content":"secbits"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8d23eac4fd256b1fab6c22bdf2d9781383de517b72ebafa56a60d088759d9ac467fe3bf3ccc4cf088bad017f88146dfd84b16d3e6949cea651fc5cff22d7b02e_0","lines":"\t    ret = cap_set_secbits(secbits);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":491,"col":12,"offset":12103},"end":{"line":491,"col":23,"offset":12114},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":491,"col":12,"offset":12103},"end":{"line":491,"col":18,"offset":12109},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d59765afc59887887fd8159ebfc8cb7beadb6450c4f890b601a29f18c7ba31d290a1517c338aa1367fc97b71d7ff1866a418850800f8405f30b3b62afec7e454_0","lines":"\t    ret = setuid(uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":538,"col":6,"offset":13681},"end":{"line":539,"col":28,"offset":13775},"extra":{"metavars":{"$SIGNED":{"start":{"line":538,"col":6,"offset":13681},"end":{"line":538,"col":9,"offset":13684},"abstract_content":"ret"},"$UNSIGNED":{"start":{"line":538,"col":64,"offset":13739},"end":{"line":538,"col":71,"offset":13746},"abstract_content":"ngroups"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6cb8eef1ba87f99fce6e87039525ec85b7e77f1bcfb1670f2428c245bfdad8007c15ab0e6bed4d5aedb6c95ee6beab1ded95126252891ea9b6b8e4c44f7b41d_0","lines":"\t    ret = _libcap_wsyscall3(sys_setgroups_variant, (long int) ngroups,\n\t\t\t\t  (long int) groups, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":547,"col":12,"offset":13874},"end":{"line":547,"col":23,"offset":13885},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"g"},"$FUN":{"start":{"line":547,"col":12,"offset":13874},"end":{"line":547,"col":18,"offset":13880},"abstract_content":"setgid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2c0cc586d355c3ff09bb408b467c57069962592fdf325b0dbbbafef66af4c1636ae019f13ec23ba7305078f19a32e11597ede62aea1ef4f337a08aa5b9a1d1cd_0","lines":"\t    ret = setgid(gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":550,"col":6,"offset":13912},"end":{"line":550,"col":38,"offset":13944},"extra":{"metavars":{"$SIGNED":{"start":{"line":550,"col":6,"offset":13912},"end":{"line":550,"col":9,"offset":13915},"abstract_content":"ret"},"$UNSIGNED":{"start":{"line":550,"col":22,"offset":13928},"end":{"line":550,"col":29,"offset":13935},"abstract_content":"ngroups"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f6cb8eef1ba87f99fce6e87039525ec85b7e77f1bcfb1670f2428c245bfdad8007c15ab0e6bed4d5aedb6c95ee6beab1ded95126252891ea9b6b8e4c44f7b41d_1","lines":"\t    ret = setgroups(ngroups, groups);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","start":{"line":550,"col":12,"offset":13918},"end":{"line":550,"col":38,"offset":13944},"extra":{"metavars":{"$2":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":550,"col":12,"offset":13918},"end":{"line":550,"col":21,"offset":13927},"abstract_content":"setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4490bdc4fb20a9dcb6827dc0c719f0e6bc2f9f94e4361f0ca4ddca96496bc33926d04e021a94d482dc9fd05142906ad4efc5ebd55e92b6260ca2dbd5e593987e_0","lines":"\t    ret = setgroups(ngroups, groups);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":36,"col":10,"offset":870},"end":{"line":36,"col":18,"offset":878},"extra":{"metavars":{"$NARROW":{"start":{"line":36,"col":10,"offset":870},"end":{"line":36,"col":11,"offset":871},"abstract_content":"n"},"$LARGE":{"start":{"line":36,"col":14,"offset":874},"end":{"line":36,"col":18,"offset":878},"abstract_content":"blks"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"46342e7ac780f499fac9276fd74523bb9a7e84d6a8b776dc2448759e77b6999fe711e536aad5112750e7ed081c8c277ecf060028c6dc1bd9ceb8bf5f604e408a_0","lines":"    for (n = blks; n--; ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":36,"col":10,"offset":870},"end":{"line":36,"col":18,"offset":878},"extra":{"metavars":{"$SIGNED":{"start":{"line":36,"col":10,"offset":870},"end":{"line":36,"col":11,"offset":871},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":36,"col":14,"offset":874},"end":{"line":36,"col":18,"offset":878},"abstract_content":"blks"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9a7e33284577c47b48e0b439346f701e161841d936bee664e2bb4917053e2ded254c383944fa0323f41c160622249e1089a4c0bb9665fda573e06242e567ba8e_0","lines":"    for (n = blks; n--; ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":44,"col":10,"offset":1024},"end":{"line":44,"col":18,"offset":1032},"extra":{"metavars":{"$NARROW":{"start":{"line":44,"col":10,"offset":1024},"end":{"line":44,"col":11,"offset":1025},"abstract_content":"n"},"$LARGE":{"start":{"line":44,"col":14,"offset":1028},"end":{"line":44,"col":18,"offset":1032},"abstract_content":"blks"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"46342e7ac780f499fac9276fd74523bb9a7e84d6a8b776dc2448759e77b6999fe711e536aad5112750e7ed081c8c277ecf060028c6dc1bd9ceb8bf5f604e408a_1","lines":"    for (n = blks; n--; )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":44,"col":10,"offset":1024},"end":{"line":44,"col":18,"offset":1032},"extra":{"metavars":{"$SIGNED":{"start":{"line":44,"col":10,"offset":1024},"end":{"line":44,"col":11,"offset":1025},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":44,"col":14,"offset":1028},"end":{"line":44,"col":18,"offset":1032},"abstract_content":"blks"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9a7e33284577c47b48e0b439346f701e161841d936bee664e2bb4917053e2ded254c383944fa0323f41c160622249e1089a4c0bb9665fda573e06242e567ba8e_1","lines":"    for (n = blks; n--; )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":68,"col":11,"offset":1580},"end":{"line":68,"col":22,"offset":1591},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":68,"col":11,"offset":1580},"end":{"line":68,"col":15,"offset":1584},"abstract_content":"base"},"$SIGNED":{"start":{"line":68,"col":18,"offset":1587},"end":{"line":68,"col":20,"offset":1589},"abstract_content":"32"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cf31191ca80fef34a1e279207df4e337c653f7da7496142322c7483909ed870c96f00b2b185cd293afc64b349cd74a876538b5ebf439b3fa0a4fe03384252b46_0","lines":"\tunsigned base = 32*n;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":81,"col":12,"offset":1789},"end":{"line":81,"col":22,"offset":1799},"extra":{"metavars":{"$FUN":{"start":{"line":81,"col":12,"offset":1789},"end":{"line":81,"col":22,"offset":1799},"abstract_content":"lookupname"},"$UNSIGNED":{"start":{"line":120,"col":10,"offset":2595},"end":{"line":120,"col":11,"offset":2596},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e9d2aa30d4b2f440891dcd5545987034558cb45287c4ba60d8055c3fd3f7a7f52cfe73c2a46d9822e798c298279f17228f16cf81618866633d72d8b72f569934_0","lines":"static int lookupname(char const **strp)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":99,"col":7,"offset":2099},"end":{"line":99,"col":12,"offset":2104},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":99,"col":7,"offset":2099},"end":{"line":99,"col":10,"offset":2102},"abstract_content":"len"},"$SIGNED":{"start":{"line":99,"col":11,"offset":2103},"end":{"line":99,"col":12,"offset":2104},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"28b67251b318c1a1ad8f197d0a49f64b7db39164c0bcc623cf2868947699738502716583b1067b225b2a433e1a970aec28f595ca9f457b5026466f63c2eb29f4_0","lines":"\tfor (len=0; (c = str.constp[len]); ++len) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":99,"col":15,"offset":2107},"end":{"line":99,"col":34,"offset":2126},"extra":{"metavars":{"$NARROW":{"start":{"line":99,"col":15,"offset":2107},"end":{"line":99,"col":16,"offset":2108},"abstract_content":"c","propagated_value":{"svalue_start":{"line":99,"col":19,"offset":2111},"svalue_end":{"line":99,"col":34,"offset":2126},"svalue_abstract_content":"str.constp[len]"}},"$LARGE":{"start":{"line":99,"col":30,"offset":2122},"end":{"line":99,"col":33,"offset":2125},"abstract_content":"len","propagated_value":{"svalue_start":{"line":99,"col":11,"offset":2103},"svalue_end":{"line":99,"col":12,"offset":2104},"svalue_abstract_content":"0"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cc64f69aef4588bbff13a94c23cfd8c93edfb7d0700caf5177d657a60f53606cffb6cca6555280f06a37afe47e0a553c264fa0f072b4a7c1e2b4b17ff2ef0019_0","lines":"\tfor (len=0; (c = str.constp[len]); ++len) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":99,"col":15,"offset":2107},"end":{"line":99,"col":34,"offset":2126},"extra":{"metavars":{"$SIGNED":{"start":{"line":99,"col":15,"offset":2107},"end":{"line":99,"col":16,"offset":2108},"abstract_content":"c","propagated_value":{"svalue_start":{"line":99,"col":19,"offset":2111},"svalue_end":{"line":99,"col":34,"offset":2126},"svalue_abstract_content":"str.constp[len]"}},"$UNSIGNED":{"start":{"line":99,"col":30,"offset":2122},"end":{"line":99,"col":33,"offset":2125},"abstract_content":"len","propagated_value":{"svalue_start":{"line":99,"col":11,"offset":2103},"svalue_end":{"line":99,"col":12,"offset":2104},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"522bb177070ed2f7f982b4eb7ae761945fa9aca3ef2fcfd1a0dd13086db97a2572beac585c452f0b65e84ef2b96fd625390dde6b9289a07078c55859b6ae5896_0","lines":"\tfor (len=0; (c = str.constp[len]); ++len) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":118,"col":6,"offset":2509},"end":{"line":121,"col":7,"offset":2604},"extra":{"metavars":{"$EXPR1":{"start":{"line":118,"col":28,"offset":2531},"end":{"line":118,"col":29,"offset":2532},"abstract_content":"s"},"$EXPR2":{"start":{"line":118,"col":32,"offset":2535},"end":{"line":118,"col":65,"offset":2568},"abstract_content":"namcmp(str.constp _cap_names[n])"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cc02ba8c9fda4e31b094b2f1353b60c9a6b298da7e0e7c4969c4eef6446ec0455f920d564c9c3b705494c7b110f17941eade8c70febbeee44c65afdf9e5f39b6_0","lines":"\t    if (_cap_names[n] && (s = namcmp(str.constp, _cap_names[n]))) {\n\t\t*strp = s;\n\t\treturn n;\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":140,"col":5,"offset":2875},"end":{"line":141,"col":14,"offset":2913},"extra":{"metavars":{"$EXPR1":{"start":{"line":140,"col":11,"offset":2881},"end":{"line":140,"col":14,"offset":2884},"abstract_content":"res","propagated_value":{"svalue_start":{"line":140,"col":17,"offset":2887},"svalue_end":{"line":140,"col":27,"offset":2897},"svalue_abstract_content":"cap_init()"}},"$EXPR2":{"start":{"line":140,"col":17,"offset":2887},"end":{"line":140,"col":27,"offset":2897},"abstract_content":"cap_init()"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"33bfd0c28dd5cd8aa79bce79aa09ee495635220c39da2748bb02f669f50d4a90bf8b2bfaf74b078eb70ab8112f3f1c95f100556554158b7aa3997b5e7c91a7ee_0","lines":"    if (!(res = cap_init()))\n\treturn NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":165,"col":2,"offset":3357},"end":{"line":165,"col":43,"offset":3398},"extra":{"metavars":{"$TYPE":{"start":{"line":161,"col":2,"offset":3295},"end":{"line":161,"col":7,"offset":3300},"abstract_content":"__u32"},"$LEN":{"start":{"line":161,"col":13,"offset":3306},"end":{"line":161,"col":23,"offset":3316},"abstract_content":"__CAP_BLKS"},"$FUN":{"start":{"line":165,"col":2,"offset":3357},"end":{"line":165,"col":8,"offset":3363},"abstract_content":"memset"},"$BUF":{"start":{"line":165,"col":9,"offset":3364},"end":{"line":165,"col":13,"offset":3368},"abstract_content":"list"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"593900bc311bf7d1e28dcf221e2c3e085a27462af5c7b71449e4825536728c98a80fbbc2709e0f834123c9512a4473cb13fb8a6489d4d247587a5ec33745e678_0","lines":"\tmemset(list, 0, sizeof(__u32)*__CAP_BLKS);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":234,"col":14,"offset":5052},"end":{"line":234,"col":16,"offset":5054},"extra":{"metavars":{"$VAR":{"start":{"line":234,"col":14,"offset":5052},"end":{"line":234,"col":16,"offset":5054},"abstract_content":"op"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e7f41fb8ae0620edb32a246fab41d4b75e7ec9903ba3a2715a0d2c48f343e636a6515c591c1244a8cf544b6c5a17c455ee96291da61ffb076abb314cb6aa15f1_0","lines":"\t    switch (op) {               /* how do we interpret the caps? */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":245,"col":3,"offset":5477},"end":{"line":246,"col":51,"offset":5551},"extra":{"metavars":{"$EXPR1":{"start":{"line":245,"col":7,"offset":5481},"end":{"line":245,"col":12,"offset":5486},"abstract_content":"flags"},"$EXPR2":{"start":{"line":245,"col":15,"offset":5489},"end":{"line":245,"col":25,"offset":5499},"abstract_content":"LIBCAP_EFF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"48747b6d6acc923e79f159af5c4b7d5d7719e02a0a96ad0f6a4477024ab84b3e06a4a438ca43112eda975adede8d2b156187a8baa94a7ec3cd64169963cde84f_0","lines":"\t\tif (flags & LIBCAP_EFF)\n\t\t    setbits(res, list, CAP_EFFECTIVE, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":247,"col":3,"offset":5554},"end":{"line":248,"col":51,"offset":5628},"extra":{"metavars":{"$EXPR1":{"start":{"line":247,"col":7,"offset":5558},"end":{"line":247,"col":12,"offset":5563},"abstract_content":"flags"},"$EXPR2":{"start":{"line":247,"col":15,"offset":5566},"end":{"line":247,"col":25,"offset":5576},"abstract_content":"LIBCAP_PER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6d27129006692bec231308eaa12a55b3ed2c82c92be5e38b345087e9267d06f19710ec6641722b0ba5907befdc562af6af7f4a3ba3c5ae079096c1172a09cfd3_0","lines":"\t\tif (flags & LIBCAP_PER)\n\t\t    setbits(res, list, CAP_PERMITTED, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":249,"col":3,"offset":5631},"end":{"line":250,"col":53,"offset":5707},"extra":{"metavars":{"$EXPR1":{"start":{"line":249,"col":7,"offset":5635},"end":{"line":249,"col":12,"offset":5640},"abstract_content":"flags"},"$EXPR2":{"start":{"line":249,"col":15,"offset":5643},"end":{"line":249,"col":25,"offset":5653},"abstract_content":"LIBCAP_INH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0751777f4e79a09520476a9f63a04ca7078677788d71e4e1c517f78e7a80d4c64608d520c0f15ec47b838cd1a14b61f00545f20b75d7ac7ee44e63a9c160d749_0","lines":"\t\tif (flags & LIBCAP_INH)\n\t\t    setbits(res, list, CAP_INHERITABLE, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":254,"col":3,"offset":5746},"end":{"line":255,"col":51,"offset":5820},"extra":{"metavars":{"$EXPR1":{"start":{"line":254,"col":7,"offset":5750},"end":{"line":254,"col":12,"offset":5755},"abstract_content":"flags"},"$EXPR2":{"start":{"line":254,"col":15,"offset":5758},"end":{"line":254,"col":25,"offset":5768},"abstract_content":"LIBCAP_EFF"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"48747b6d6acc923e79f159af5c4b7d5d7719e02a0a96ad0f6a4477024ab84b3e06a4a438ca43112eda975adede8d2b156187a8baa94a7ec3cd64169963cde84f_1","lines":"\t\tif (flags & LIBCAP_EFF)\n\t\t    clrbits(res, list, CAP_EFFECTIVE, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":256,"col":3,"offset":5823},"end":{"line":257,"col":51,"offset":5897},"extra":{"metavars":{"$EXPR1":{"start":{"line":256,"col":7,"offset":5827},"end":{"line":256,"col":12,"offset":5832},"abstract_content":"flags"},"$EXPR2":{"start":{"line":256,"col":15,"offset":5835},"end":{"line":256,"col":25,"offset":5845},"abstract_content":"LIBCAP_PER"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6d27129006692bec231308eaa12a55b3ed2c82c92be5e38b345087e9267d06f19710ec6641722b0ba5907befdc562af6af7f4a3ba3c5ae079096c1172a09cfd3_1","lines":"\t\tif (flags & LIBCAP_PER)\n\t\t    clrbits(res, list, CAP_PERMITTED, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":258,"col":3,"offset":5900},"end":{"line":259,"col":53,"offset":5976},"extra":{"metavars":{"$EXPR1":{"start":{"line":258,"col":7,"offset":5904},"end":{"line":258,"col":12,"offset":5909},"abstract_content":"flags"},"$EXPR2":{"start":{"line":258,"col":15,"offset":5912},"end":{"line":258,"col":25,"offset":5922},"abstract_content":"LIBCAP_INH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"0751777f4e79a09520476a9f63a04ca7078677788d71e4e1c517f78e7a80d4c64608d520c0f15ec47b838cd1a14b61f00545f20b75d7ac7ee44e63a9c160d749_1","lines":"\t\tif (flags & LIBCAP_INH)\n\t\t    clrbits(res, list, CAP_INHERITABLE, cap_blks);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":309,"col":2,"offset":6945},"end":{"line":309,"col":27,"offset":6970},"extra":{"metavars":{"$FUN":{"start":{"line":309,"col":2,"offset":6945},"end":{"line":309,"col":10,"offset":6953},"abstract_content":"asprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7d72808fa4b92b271d8de7f282cb4bcde30b6e35d5aad7f8e20b3e25ac3567438796eae0cadf1732ba641a6fd6532cd6dc1c8dd0550d69b796a1ba78a583b285_0","lines":"\tasprintf(&tmp, \"%u\", cap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":311,"col":2,"offset":7004},"end":{"line":311,"col":12,"offset":7014},"extra":{"metavars":{"$PTR":{"start":{"line":311,"col":7,"offset":7009},"end":{"line":311,"col":10,"offset":7012},"abstract_content":"tmp"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"fb08b6397dce10d785340553c44ed979e95b685ce7140da65888abe11cd51f131785bfd43e6c6e43cbb3ebcfa50850416c1dc752417b313346d35207f9822cf9_0","lines":"\tfree(tmp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":362,"col":5,"offset":8043},"end":{"line":362,"col":36,"offset":8074},"extra":{"metavars":{"$TYPE":{"start":{"line":348,"col":5,"offset":7751},"end":{"line":348,"col":8,"offset":7754},"abstract_content":"int"},"$LEN":{"start":{"line":348,"col":15,"offset":7761},"end":{"line":348,"col":16,"offset":7762},"abstract_content":"8"},"$FUN":{"start":{"line":362,"col":5,"offset":8043},"end":{"line":362,"col":11,"offset":8049},"abstract_content":"memset"},"$BUF":{"start":{"line":362,"col":12,"offset":8050},"end":{"line":362,"col":17,"offset":8055},"abstract_content":"histo"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"97982b9510bf8f9c77699eca0c3562441480297477e27a9559c596a28e23d141a6248c34589f27f475b054093730bc1617befe15f11a35cda2dceef36440276c_0","lines":"    memset(histo, 0, sizeof(histo));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":366,"col":10,"offset":8177},"end":{"line":366,"col":15,"offset":8182},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":366,"col":10,"offset":8177},"end":{"line":366,"col":11,"offset":8178},"abstract_content":"n"},"$SIGNED":{"start":{"line":366,"col":14,"offset":8181},"end":{"line":366,"col":15,"offset":8182},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"12c7c723cbc425a185c2e86e724b1bf528425eb67609686b1818bbf407d46f11c3640dc0d71476b2cf58272683b497224125b8d7d80fd6c80ce27398152661d2_0","lines":"    for (n = 0; n < cmb; n++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":378,"col":9,"offset":8602},"end":{"line":381,"col":32,"offset":8719},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"=%s%s%s\""},"$BUF":{"start":{"line":378,"col":17,"offset":8610},"end":{"line":378,"col":20,"offset":8613},"abstract_content":"buf"},"$FMT":{"start":{"line":378,"col":22,"offset":8615},"end":{"line":378,"col":31,"offset":8624},"abstract_content":"\"=%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"10b5a664cd5c1080a4c1f275d8d5be6e8d6e211884626e9434ffebcc204c82901b2fdb59ace2ed8525cc716c91811126c3efa464f0461386d3658a87ec66c91c_0","lines":"    p = sprintf(buf, \"=%s%s%s\",\n\t\t(m & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t(m & LIBCAP_INH) ? \"i\" : \"\",\n\t\t(m & LIBCAP_PER) ? \"p\" : \"\" ) + buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":378,"col":9,"offset":8602},"end":{"line":381,"col":32,"offset":8719},"extra":{"metavars":{"$FUN":{"start":{"line":378,"col":9,"offset":8602},"end":{"line":378,"col":16,"offset":8609},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_0","lines":"    p = sprintf(buf, \"=%s%s%s\",\n\t\t(m & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t(m & LIBCAP_INH) ? \"i\" : \"\",\n\t\t(m & LIBCAP_PER) ? \"p\" : \"\" ) + buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":378,"col":9,"offset":8602},"end":{"line":381,"col":32,"offset":8719},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"=%s%s%s\""},"$TYPE":{"start":{"line":346,"col":5,"offset":7688},"end":{"line":346,"col":9,"offset":7692},"abstract_content":"char"},"$LEN":{"start":{"line":346,"col":14,"offset":7697},"end":{"line":346,"col":48,"offset":7731},"abstract_content":"CAP_TEXT_SIZE+CAP_TEXT_BUFFER_ZONE"},"$FUN":{"start":{"line":378,"col":9,"offset":8602},"end":{"line":378,"col":16,"offset":8609},"abstract_content":"sprintf"},"$BUF":{"start":{"line":378,"col":17,"offset":8610},"end":{"line":378,"col":20,"offset":8613},"abstract_content":"buf"},"$FMT":{"start":{"line":378,"col":22,"offset":8615},"end":{"line":378,"col":31,"offset":8624},"abstract_content":"\"=%s%s%s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"edefd399c16aa8dadf4f8f598a707b8b51df691cc06e3eaedd5a2e2ba46e5b23e57096c533f02b4c2c179939a1a9f16ff7433a5ee5510461ff6ac22eb432b6a7_0","lines":"    p = sprintf(buf, \"=%s%s%s\",\n\t\t(m & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t(m & LIBCAP_INH) ? \"i\" : \"\",\n\t\t(m & LIBCAP_PER) ? \"p\" : \"\" ) + buf;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":388,"col":7,"offset":8818},"end":{"line":388,"col":12,"offset":8823},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":388,"col":7,"offset":8818},"end":{"line":388,"col":8,"offset":8819},"abstract_content":"n"},"$SIGNED":{"start":{"line":388,"col":11,"offset":8822},"end":{"line":388,"col":12,"offset":8823},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"12c7c723cbc425a185c2e86e724b1bf528425eb67609686b1818bbf407d46f11c3640dc0d71476b2cf58272683b497224125b8d7d80fd6c80ce27398152661d2_1","lines":"\tfor (n = 0; n < cmb; n++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":396,"col":15,"offset":9093},"end":{"line":396,"col":47,"offset":9125},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":6,"offset":5},"abstract_content":"\"%s,\""},"$BUF":{"start":{"line":396,"col":23,"offset":9101},"end":{"line":396,"col":24,"offset":9102},"abstract_content":"p"},"$FMT":{"start":{"line":396,"col":26,"offset":9104},"end":{"line":396,"col":31,"offset":9109},"abstract_content":"\"%s,\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"759cc4a7e66e971e6011adda9c854162a1adf3af1f37dc5a02713ab1c3944ae411399a676a6ef40f575c53d3cfb11ebabd7786e349de08d91442ef9e82a3360d_0","lines":"\t        p += sprintf(p, \"%s,\", this_cap_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":396,"col":15,"offset":9093},"end":{"line":396,"col":47,"offset":9125},"extra":{"metavars":{"$FUN":{"start":{"line":396,"col":15,"offset":9093},"end":{"line":396,"col":22,"offset":9100},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_1","lines":"\t        p += sprintf(p, \"%s,\", this_cap_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":401,"col":2,"offset":9178},"end":{"line":401,"col":12,"offset":9188},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":401,"col":2,"offset":9178},"end":{"line":401,"col":3,"offset":9179},"abstract_content":"n"},"$SIGNED":{"start":{"line":401,"col":6,"offset":9182},"end":{"line":401,"col":7,"offset":9183},"abstract_content":"t"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2d85579b39949c9776c4d0938b8237320904eec57ea6ff6114eb40a96fb564277a01dd24c2b1a9f007c83108888545c7cb58b7f9eb23bfedeb7c1f6fc7ed440d_0","lines":"\tn = t & ~m;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":403,"col":11,"offset":9210},"end":{"line":406,"col":33,"offset":9330},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"+%s%s%s\""},"$BUF":{"start":{"line":403,"col":19,"offset":9218},"end":{"line":403,"col":20,"offset":9219},"abstract_content":"p"},"$FMT":{"start":{"line":403,"col":22,"offset":9221},"end":{"line":403,"col":31,"offset":9230},"abstract_content":"\"+%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6dd451db4c784c52b677baaeecb1cd238109a1cf702173bd8a66676fdd35e72dfd437145cde58706369142a53ccf90af432f591f963e66cb24ce422847db7547_0","lines":"\t    p += sprintf(p, \"+%s%s%s\",\n\t\t\t (n & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t\t (n & LIBCAP_INH) ? \"i\" : \"\",\n\t\t\t (n & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":403,"col":11,"offset":9210},"end":{"line":406,"col":33,"offset":9330},"extra":{"metavars":{"$FUN":{"start":{"line":403,"col":11,"offset":9210},"end":{"line":403,"col":18,"offset":9217},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_2","lines":"\t    p += sprintf(p, \"+%s%s%s\",\n\t\t\t (n & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t\t (n & LIBCAP_INH) ? \"i\" : \"\",\n\t\t\t (n & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":408,"col":2,"offset":9336},"end":{"line":408,"col":12,"offset":9346},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":408,"col":2,"offset":9336},"end":{"line":408,"col":3,"offset":9337},"abstract_content":"n"},"$SIGNED":{"start":{"line":408,"col":7,"offset":9341},"end":{"line":408,"col":8,"offset":9342},"abstract_content":"t"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2d85579b39949c9776c4d0938b8237320904eec57ea6ff6114eb40a96fb564277a01dd24c2b1a9f007c83108888545c7cb58b7f9eb23bfedeb7c1f6fc7ed440d_1","lines":"\tn = ~t & m;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":410,"col":11,"offset":9368},"end":{"line":413,"col":33,"offset":9488},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"-%s%s%s\""},"$BUF":{"start":{"line":410,"col":19,"offset":9376},"end":{"line":410,"col":20,"offset":9377},"abstract_content":"p"},"$FMT":{"start":{"line":410,"col":22,"offset":9379},"end":{"line":410,"col":31,"offset":9388},"abstract_content":"\"-%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"9f6b4dd8ea04f7148e856d8eb199616e65abf9390760c3e8f122f15a017cd362d6366e493e505185623a31c0da751f8327d8421d2aa3c1fde8676dd80fc070a5_0","lines":"\t    p += sprintf(p, \"-%s%s%s\",\n\t\t\t (n & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t\t (n & LIBCAP_INH) ? \"i\" : \"\",\n\t\t\t (n & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":410,"col":11,"offset":9368},"end":{"line":413,"col":33,"offset":9488},"extra":{"metavars":{"$FUN":{"start":{"line":410,"col":11,"offset":9368},"end":{"line":410,"col":18,"offset":9375},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_3","lines":"\t    p += sprintf(p, \"-%s%s%s\",\n\t\t\t (n & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t\t (n & LIBCAP_INH) ? \"i\" : \"\",\n\t\t\t (n & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":422,"col":5,"offset":9642},"end":{"line":422,"col":36,"offset":9673},"extra":{"metavars":{"$TYPE":{"start":{"line":348,"col":5,"offset":7751},"end":{"line":348,"col":8,"offset":7754},"abstract_content":"int"},"$LEN":{"start":{"line":348,"col":15,"offset":7761},"end":{"line":348,"col":16,"offset":7762},"abstract_content":"8"},"$FUN":{"start":{"line":422,"col":5,"offset":9642},"end":{"line":422,"col":11,"offset":9648},"abstract_content":"memset"},"$BUF":{"start":{"line":422,"col":12,"offset":9649},"end":{"line":422,"col":17,"offset":9654},"abstract_content":"histo"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"97982b9510bf8f9c77699eca0c3562441480297477e27a9559c596a28e23d141a6248c34589f27f475b054093730bc1617befe15f11a35cda2dceef36440276c_1","lines":"    memset(histo, 0, sizeof(histo));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":439,"col":8,"offset":10109},"end":{"line":439,"col":40,"offset":10141},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":6,"offset":5},"abstract_content":"\"%s,\""},"$BUF":{"start":{"line":439,"col":16,"offset":10117},"end":{"line":439,"col":17,"offset":10118},"abstract_content":"p"},"$FMT":{"start":{"line":439,"col":19,"offset":10120},"end":{"line":439,"col":24,"offset":10125},"abstract_content":"\"%s,\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"759cc4a7e66e971e6011adda9c854162a1adf3af1f37dc5a02713ab1c3944ae411399a676a6ef40f575c53d3cfb11ebabd7786e349de08d91442ef9e82a3360d_1","lines":"\t\tp += sprintf(p, \"%s,\", this_cap_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":439,"col":8,"offset":10109},"end":{"line":439,"col":40,"offset":10141},"extra":{"metavars":{"$FUN":{"start":{"line":439,"col":8,"offset":10109},"end":{"line":439,"col":15,"offset":10116},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_4","lines":"\t\tp += sprintf(p, \"%s,\", this_cap_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":444,"col":7,"offset":10192},"end":{"line":447,"col":36,"offset":10321},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"+%s%s%s\""},"$BUF":{"start":{"line":444,"col":15,"offset":10200},"end":{"line":444,"col":16,"offset":10201},"abstract_content":"p"},"$FMT":{"start":{"line":444,"col":18,"offset":10203},"end":{"line":444,"col":27,"offset":10212},"abstract_content":"\"+%s%s%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"6dd451db4c784c52b677baaeecb1cd238109a1cf702173bd8a66676fdd35e72dfd437145cde58706369142a53ccf90af432f591f963e66cb24ce422847db7547_1","lines":"\tp += sprintf(p, \"+%s%s%s\",\n\t\t     (t & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t     (t & LIBCAP_INH) ? \"i\" : \"\",\n\t\t     (t & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","start":{"line":444,"col":7,"offset":10192},"end":{"line":447,"col":36,"offset":10321},"extra":{"metavars":{"$FUN":{"start":{"line":444,"col":7,"offset":10192},"end":{"line":444,"col":14,"offset":10199},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fc22aeebe12831d30cc9f5c6181e1f3a0b26ac85757dc2f5d8e9e0b92f08068d899ce748a5ba33398a2b5a58ccfc99e9d9531478ae2b5b4286174536ee7b9c78_5","lines":"\tp += sprintf(p, \"+%s%s%s\",\n\t\t     (t & LIBCAP_EFF) ? \"e\" : \"\",\n\t\t     (t & LIBCAP_INH) ? \"i\" : \"\",\n\t\t     (t & LIBCAP_PER) ? \"p\" : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/psx.c","start":{"line":162,"col":33,"offset":4897},"end":{"line":162,"col":71,"offset":4935},"extra":{"metavars":{"$FUN":{"start":{"line":162,"col":33,"offset":4897},"end":{"line":162,"col":39,"offset":4903},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3ae3dddaea367bdd08ffa12c2a1a03e36640f5892be9a29d1060ae775c3cfef9ba950389602943a68f7bf99c75f2ae997c049ba8142efac97d9bd9febfe34fd6_0","lines":"    registered_thread_t *node = calloc(1, sizeof(registered_thread_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/psx.c","start":{"line":162,"col":33,"offset":4897},"end":{"line":162,"col":71,"offset":4935},"extra":{"metavars":{"$CNT":{"start":{"line":162,"col":40,"offset":4904},"end":{"line":162,"col":41,"offset":4905},"abstract_content":"1"},"$LEN":{"start":{"line":162,"col":43,"offset":4907},"end":{"line":162,"col":70,"offset":4934},"abstract_content":"sizeof(registered_thread_t)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7a0f390a246d5f857afbfd23949190173c8b36058fd622be7869fc90248fd773b81e6f3574a0e1e2603ce3676eec73b6db03581f60dedeeaa09c0a8a4f62d2b4_0","lines":"    registered_thread_t *node = calloc(1, sizeof(registered_thread_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/psx.c","start":{"line":407,"col":2,"offset":12287},"end":{"line":407,"col":12,"offset":12297},"extra":{"metavars":{"$PTR":{"start":{"line":407,"col":7,"offset":12292},"end":{"line":407,"col":10,"offset":12295},"abstract_content":"ref"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"82b9b951fe276b8f68e5222823036888d6f078a120fbade3591370c79055d12e5bc900bf87bcf08987ed8c5805bcfdc401d06c5f0a875352a77b7df52832b544_0","lines":"\tfree(ref);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":60,"col":5,"offset":1330},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$RET":{"start":{"line":60,"col":5,"offset":1330},"end":{"line":60,"col":12,"offset":1337},"abstract_content":"*groups"},"$FUN":{"start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":21,"offset":1346},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"71f8298480fb29a88ef1740950813ce18839d359f718feff4ea479af96a2ee45339dd624627a3c661f904f5b22d8f11c662ddc852fa4469799006ca4d50e8c36_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":21,"offset":1346},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"59afc74d49ad231959407c6409b5149384ef2c6d3287305ffab0c7e467477e627d8f41559209c152f0e5965fe7e79a4f28d163f85e95af422b85cc97281b6f09_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":60,"col":15,"offset":1340},"end":{"line":60,"col":44,"offset":1369},"extra":{"metavars":{"$CNT":{"start":{"line":60,"col":22,"offset":1347},"end":{"line":60,"col":27,"offset":1352},"abstract_content":"ngrps","propagated_value":{"svalue_start":{"line":45,"col":17,"offset":1063},"svalue_end":{"line":45,"col":28,"offset":1074},"svalue_abstract_content":"NGROUPS_MAX"}},"$LEN":{"start":{"line":60,"col":29,"offset":1354},"end":{"line":60,"col":43,"offset":1368},"abstract_content":"sizeof(char*)"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b5c63bb5fdddc1a8f0ff9eb34bd26114b2371f310126b2399b16621aa2887a5a1fa956fab8716dea09fdc4a8091e94ec92d0a4c18c704a865b917172e1d3343f_0","lines":"    *groups = calloc(ngrps, sizeof(char *));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":68,"col":3,"offset":1566},"end":{"line":68,"col":39,"offset":1602},"extra":{"metavars":{"$RET":{"start":{"line":68,"col":3,"offset":1566},"end":{"line":68,"col":18,"offset":1581},"abstract_content":"*groups[g_n++]"},"$FUN":{"start":{"line":68,"col":21,"offset":1584},"end":{"line":68,"col":27,"offset":1590},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ea66ba988d3fb81e231953e8f2030fcb16b61f37099449c8d664a284301308ca5df78a85b134f017b226d766e070201c98c085ff0cbb45402c830e77b6b574cd_0","lines":"\t(*groups)[g_n++] = strdup(g->gr_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":90,"col":16,"offset":2044},"end":{"line":90,"col":34,"offset":2062},"extra":{"metavars":{"$FUN":{"start":{"line":90,"col":16,"offset":2044},"end":{"line":90,"col":21,"offset":2049},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6fd3848f6996a8cb06748257b015dcbfa7a373c68dca29d6dd6ca5378fd5abe47954a3db082d87ab2cae3109d2f5b92309f2548093f93feef8144f0164f7c325_0","lines":"    cap_file = fopen(source, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":98,"col":13,"offset":2212},"end":{"line":98,"col":58,"offset":2257},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"s"},"$FUN":{"start":{"line":98,"col":13,"offset":2212},"end":{"line":98,"col":18,"offset":2217},"abstract_content":"fgets"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2a1252347b02faaddfd42bf3a76795091aab35092fbd1efcd2716de72566c411dd43b6601216ad62e17aa88b961ceb73ad9fcfa101f1f3e2ca276f8aff1d820b_0","lines":"\t   (line = fgets(buffer, CAP_FILE_BUFFER_SIZE, cap_file))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":148,"col":6,"offset":3170},"end":{"line":148,"col":35,"offset":3199},"extra":{"metavars":{"$RET":{"start":{"line":148,"col":6,"offset":3170},"end":{"line":148,"col":16,"offset":3180},"abstract_content":"cap_string"},"$FUN":{"start":{"line":148,"col":19,"offset":3183},"end":{"line":148,"col":25,"offset":3189},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"99e607b57a888f3cdf2ef563127dc429d89d72ae0bc96817b2206518cfd6ef8da09573180f743f9ed84e3831b1aea6cb925287f4d67896303085fe701d82668c_0","lines":"\t    cap_string = strdup(cap_text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":44,"offset":3382},"extra":{"metavars":{"$DST":{"start":{"line":159,"col":12,"offset":3350},"end":{"line":159,"col":18,"offset":3356},"abstract_content":"buffer"},"$CHAR":{"start":{"line":159,"col":20,"offset":3358},"end":{"line":159,"col":21,"offset":3359},"abstract_content":"0"},"$LEN":{"start":{"line":159,"col":23,"offset":3361},"end":{"line":159,"col":43,"offset":3381},"abstract_content":"CAP_FILE_BUFFER_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d4f8c2e5628e27d9eaa23794cc0840edc5638033e9ee4ee6087ea3e65e16587d7f2055705070731e270191c1a13f12a6054fbcc2775ce79f659554b74fce711c_0","lines":"    memset(buffer, 0, CAP_FILE_BUFFER_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":44,"offset":3382},"extra":{"metavars":{"$TYPE":{"start":{"line":80,"col":5,"offset":1826},"end":{"line":80,"col":9,"offset":1830},"abstract_content":"char"},"$LEN":{"start":{"line":80,"col":17,"offset":1838},"end":{"line":80,"col":37,"offset":1858},"abstract_content":"CAP_FILE_BUFFER_SIZE"},"$FUN":{"start":{"line":159,"col":5,"offset":3343},"end":{"line":159,"col":11,"offset":3349},"abstract_content":"memset"},"$BUF":{"start":{"line":159,"col":12,"offset":3350},"end":{"line":159,"col":18,"offset":3356},"abstract_content":"buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d560c0f3249b4d78a4317ece322cb03950dcbc46e77b81419d3e5f9e3368f3af5e15458f51edf00a9c4c73639dfb9e08b1841b79e2cd25cdeaaa0319b012c0af_0","lines":"    memset(buffer, 0, CAP_FILE_BUFFER_SIZE);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":251,"col":6,"offset":5822},"end":{"line":251,"col":43,"offset":5859},"extra":{"metavars":{"$RET":{"start":{"line":251,"col":6,"offset":5822},"end":{"line":251,"col":11,"offset":5827},"abstract_content":"bound"},"$FUN":{"start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":20,"offset":5836},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4957eff02903cd146a708960b59fe95bc9ec1c9d248fd1ab990463db7d5e94bb393f94db0b4dbcb9bc67138bed1156f231d811b52022ef5b9675cf1688813cc1_0","lines":"\t    bound = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":43,"offset":5859},"extra":{"metavars":{"$FUN":{"start":{"line":251,"col":14,"offset":5830},"end":{"line":251,"col":20,"offset":5836},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"59afc74d49ad231959407c6409b5149384ef2c6d3287305ffab0c7e467477e627d8f41559209c152f0e5965fe7e79a4f28d163f85e95af422b85cc97281b6f09_1","lines":"\t    bound = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":254,"col":3,"offset":5932},"end":{"line":254,"col":42,"offset":5971},"extra":{"metavars":{"$RET":{"start":{"line":254,"col":3,"offset":5932},"end":{"line":254,"col":10,"offset":5939},"abstract_content":"ambient"},"$FUN":{"start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":19,"offset":5948},"abstract_content":"calloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d4a8b8cd5abb1ac0cfdc608a25620e15f39f62b40ee4fea4fd25e58618bbf26c0c04797c38deed1ab0320906e3168a64ed5cfdf2c163627990a5cf502ea59290_0","lines":"\t\tambient = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":42,"offset":5971},"extra":{"metavars":{"$FUN":{"start":{"line":254,"col":13,"offset":5942},"end":{"line":254,"col":19,"offset":5948},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"59afc74d49ad231959407c6409b5149384ef2c6d3287305ffab0c7e467477e627d8f41559209c152f0e5965fe7e79a4f28d163f85e95af422b85cc97281b6f09_2","lines":"\t\tambient = calloc(max_caps, sizeof(int));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":377,"col":5,"offset":8805},"end":{"line":377,"col":31,"offset":8831},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"4787ab21ff55565851d49e1485947fcb1b6b154ef24974f50dc3275cc1bdcdc19b2d279f619c6430bed32fc86c1ec3ab09e4563151730803e7035580e9e2a70c_0","lines":"    vsyslog(err, format, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":385,"col":26,"offset":9005},"end":{"line":385,"col":30,"offset":9009},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_0","lines":"    for (; argc-- > 0; ++argv) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":386,"col":15,"offset":9027},"end":{"line":386,"col":19,"offset":9031},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_1","lines":"\tif (!strcmp(*argv, \"debug\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":388,"col":23,"offset":9088},"end":{"line":388,"col":27,"offset":9092},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_2","lines":"\t} else if (!strncmp(*argv, \"config=\", 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":389,"col":32,"offset":9142},"end":{"line":389,"col":36,"offset":9146},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_3","lines":"\t    pcs->conf_filename = 7 + *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":391,"col":47,"offset":9204},"end":{"line":391,"col":51,"offset":9208},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_4","lines":"\t    _pam_log(LOG_ERR, \"unknown option; %s\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":409,"col":22,"offset":9607},"end":{"line":409,"col":26,"offset":9611},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_5","lines":"    parse_args(argc, argv, &pcs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":411,"col":14,"offset":9634},"end":{"line":411,"col":49,"offset":9669},"extra":{"metavars":{"$2":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":5,"offset":7},"abstract_content":"get"},"$FUN":{"start":{"line":411,"col":14,"offset":9634},"end":{"line":411,"col":26,"offset":9646},"abstract_content":"pam_get_user"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c73831949c90788f026d5ed8232c1ec269a8ad6afb482768397ecb868726c8ea6b2b819e2f977f1b36a86f62228c22df35bad6c7e4b935d9f07ac7d5db21c641_0","lines":"    retval = pam_get_user(pamh, &pcs.user, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":461,"col":5,"offset":10875},"end":{"line":464,"col":6,"offset":11019},"extra":{"metavars":{"$EXPR1":{"start":{"line":461,"col":11,"offset":10881},"end":{"line":461,"col":16,"offset":10886},"abstract_content":"flags"},"$EXPR2":{"start":{"line":461,"col":20,"offset":10890},"end":{"line":461,"col":62,"offset":10932},"abstract_content":"PAM_ESTABLISH_CRED|PAM_REINITIALIZE_CRED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4d306360c303342d1beea1a64fa0c25ae4ed69a2868e8563a36bb9ebc63310151790aeef390d8ab9b38fd3d061651d8a83723e4dbdabd0eca403b511deb59f14_0","lines":"    if (!(flags & (PAM_ESTABLISH_CRED | PAM_REINITIALIZE_CRED))) {\n\tD((\"we don't handle much in the way of credentials\"));\n\treturn PAM_IGNORE;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","start":{"line":467,"col":22,"offset":11076},"end":{"line":467,"col":26,"offset":11080},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"c06f2fc0eed6375b441b6465b389c47232a1dca5aaf71f63a4928198711b1ff103e01c447a524e53def957d9e0a1c0c8409599c73e82237c65fafc1dda563a0a_6","lines":"    parse_args(argc, argv, &pcs);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":73,"col":5,"offset":1537},"end":{"line":73,"col":42,"offset":1574},"extra":{"metavars":{"$RET":{"start":{"line":73,"col":5,"offset":1537},"end":{"line":73,"col":15,"offset":1547},"abstract_content":"gr.gr_name"},"$FUN":{"start":{"line":73,"col":18,"offset":1550},"end":{"line":73,"col":24,"offset":1556},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"903da797c4ee881b304dfe0d281ee5fe7b7631981d99cdf1b1b1b66a66b4e3e9e7e32e71e160f23ceb19e047cd73d5ddc0a66b3a30f3055c176e9464c7b53b36_0","lines":"    gr.gr_name = strdup(test_groups[gid]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":74,"col":5,"offset":1580},"end":{"line":74,"col":16,"offset":1591},"extra":{"metavars":{"$TYPE":{"start":{"line":67,"col":8,"offset":1416},"end":{"line":67,"col":20,"offset":1428},"abstract_content":"struct group"},"$VAR":{"start":{"line":74,"col":13,"offset":1588},"end":{"line":74,"col":15,"offset":1590},"abstract_content":"gr"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"03f7d9e1d5899a697f7edff2aa26efce957aaa1ca3c9528024a464bd0995997c2a74653a13fcfee1dcae5638febac50d493827c683901d0f4adcac151dae76d9_0","lines":"    return &gr;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":83,"col":6,"offset":1777},"end":{"line":83,"col":17,"offset":1788},"extra":{"metavars":{"$TYPE":{"start":{"line":77,"col":8,"offset":1602},"end":{"line":77,"col":21,"offset":1615},"abstract_content":"struct passwd"},"$VAR":{"start":{"line":83,"col":14,"offset":1785},"end":{"line":83,"col":16,"offset":1787},"abstract_content":"pw"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"480d5a22dfe56d9b51206df6e01114f2f4020a2bfa5e37b62d260c7107c523dcf43a3da3a8a801a829a882193cf41316070b4f1f7b42dab79d76b6c8da241111_0","lines":"\t    return &pw;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":137,"col":25,"offset":2867},"end":{"line":137,"col":29,"offset":2871},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"16ea2588c658c0b7d786af073ccf1dd756bb519a06f93c7d679b5ed9486c7da3d04dbfafb149531ef383a70039e669b4fb510990efb2a0b557282b17a72ec5f0_0","lines":"    change[A] = strtoul(argv[2], NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":138,"col":25,"offset":2910},"end":{"line":138,"col":29,"offset":2914},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"16ea2588c658c0b7d786af073ccf1dd756bb519a06f93c7d679b5ed9486c7da3d04dbfafb149531ef383a70039e669b4fb510990efb2a0b557282b17a72ec5f0_1","lines":"    change[B] = strtoul(argv[3], NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":139,"col":25,"offset":2953},"end":{"line":139,"col":29,"offset":2957},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"16ea2588c658c0b7d786af073ccf1dd756bb519a06f93c7d679b5ed9486c7da3d04dbfafb149531ef383a70039e669b4fb510990efb2a0b557282b17a72ec5f0_2","lines":"    change[I] = strtoul(argv[4], NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":141,"col":26,"offset":2998},"end":{"line":141,"col":30,"offset":3002},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"16ea2588c658c0b7d786af073ccf1dd756bb519a06f93c7d679b5ed9486c7da3d04dbfafb149531ef383a70039e669b4fb510990efb2a0b557282b17a72ec5f0_3","lines":"    void* args_for_pam = argv+4;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":150,"col":17,"offset":3216},"end":{"line":150,"col":21,"offset":3220},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"16ea2588c658c0b7d786af073ccf1dd756bb519a06f93c7d679b5ed9486c7da3d04dbfafb149531ef383a70039e669b4fb510990efb2a0b557282b17a72ec5f0_4","lines":"    test_user = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":173,"col":5,"offset":3777},"end":{"line":174,"col":37,"offset":3866},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":45,"offset":44},"abstract_content":"\"before: A=0x%016lx B=0x%016lx I=0x%016lx\\n\""},"$FMT":{"start":{"line":173,"col":12,"offset":3784},"end":{"line":173,"col":56,"offset":3828},"abstract_content":"\"before: A=0x%016lx B=0x%016lx I=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9bb0f7c0aaa2b8efc8a29e61875d79b547ba74fbc364229450267c6bd8356fff6c917a18eb7fb173f5b16c538ab88eed5f8c02fb1fa9e5d410e3fc219af30087_0","lines":"    printf(\"before: A=0x%016lx B=0x%016lx I=0x%016lx\\n\",\n\t   before[A], before[B], before[I]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":180,"col":5,"offset":4021},"end":{"line":180,"col":69,"offset":4085},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":45,"offset":44},"abstract_content":"\"diff  : A=0x%016lx B=0x%016lx I=0x%016lx\\n\""},"$FMT":{"start":{"line":180,"col":12,"offset":4028},"end":{"line":180,"col":56,"offset":4072},"abstract_content":"\"diff  : A=0x%016lx B=0x%016lx I=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c6fa8cd66a9bdf3217ffa015adbe71cda51f56ec36e4dc178e26b4a60d8ebccfc45f6a0b8d17931bb7f61a778e5d73b039b3d71581c5bca0ac8569296b37d7d0_0","lines":"    printf(\"diff  : A=0x%016lx B=0x%016lx I=0x%016lx\\n\", dA, dB, dI);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":181,"col":5,"offset":4091},"end":{"line":182,"col":34,"offset":4177},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":45,"offset":44},"abstract_content":"\"after : A=0x%016lx B=0x%016lx I=0x%016lx\\n\""},"$FMT":{"start":{"line":181,"col":12,"offset":4098},"end":{"line":181,"col":56,"offset":4142},"abstract_content":"\"after : A=0x%016lx B=0x%016lx I=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2b30513a75ffba8832b2e962372263e1fb0e06f51aa9b6e3c693ad2fe00a7c45456e5310f520f63ce7932e2039bf2e085720eeacd8721195555a3a7e36f2dad7_0","lines":"    printf(\"after : A=0x%016lx B=0x%016lx I=0x%016lx\\n\",\n\t   after[A], after[B], after[I]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":186,"col":2,"offset":4235},"end":{"line":187,"col":29,"offset":4322},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":51,"offset":50},"abstract_content":"\"Ambient set error: got=0x%016lx, want=0x%016lx\\n\""},"$FMT":{"start":{"line":186,"col":9,"offset":4242},"end":{"line":186,"col":59,"offset":4292},"abstract_content":"\"Ambient set error: got=0x%016lx, want=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"62c6ed0bcdc72ee396b53806d09012b77ffa276df1444287c46a0e153ecce75b906159c5836cadaf0d47759423d4f660dea8cfdd58556281eb5da21a576e177d_0","lines":"\tprintf(\"Ambient set error: got=0x%016lx, want=0x%016lx\\n\",\n\t       after[A], change[A]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":191,"col":2,"offset":4372},"end":{"line":192,"col":41,"offset":4472},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":52,"offset":51},"abstract_content":"\"Bounding set error: got=0x%016lx, want=0x%016lx\\n\""},"$FMT":{"start":{"line":191,"col":9,"offset":4379},"end":{"line":191,"col":60,"offset":4430},"abstract_content":"\"Bounding set error: got=0x%016lx, want=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1e0c985d6e5389e6d0c33eae19da7c4c309048bc22df8ed5fecc9fc06240a60643bc60a92ab5444f1b51a865f4d72c679c8e9dd480bd06ea5782ca90f0cbb8f8_0","lines":"\tprintf(\"Bounding set error: got=0x%016lx, want=0x%016lx\\n\",\n\t       after[B], before[B] ^ change[B]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","start":{"line":196,"col":2,"offset":4528},"end":{"line":197,"col":29,"offset":4619},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":55,"offset":54},"abstract_content":"\"Inheritable set error: got=0x%016lx, want=0x%016lx\\n\""},"$FMT":{"start":{"line":196,"col":9,"offset":4535},"end":{"line":196,"col":63,"offset":4589},"abstract_content":"\"Inheritable set error: got=0x%016lx, want=0x%016lx\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5912e34080308e88d2ca3161fbcc78f21b78977f0d9baa0c7021f763304d1537ab6b2460c30075d428689ea136be93fcc178b16e723188e5dfe56bd90f7c21d3_0","lines":"\tprintf(\"Inheritable set error: got=0x%016lx, want=0x%016lx\\n\",\n\t       after[I], change[I]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":51,"col":20,"offset":1217},"end":{"line":51,"col":25,"offset":1222},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":51,"col":20,"offset":1217},"end":{"line":51,"col":23,"offset":1220},"abstract_content":"cap"},"$SIGNED":{"start":{"line":51,"col":24,"offset":1221},"end":{"line":51,"col":25,"offset":1222},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7f3e40840af9df1082532976cb442850ebad781df74f2fa7bceff0d22fb291230a406e4ccd78059268b60c1068467a116d227dced41f8f0eae04f33e7f6ac2d1_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":41,"offset":1238},"extra":{"metavars":{"$NARROW":{"start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":31,"offset":1228},"abstract_content":"set","propagated_value":{"svalue_start":{"line":51,"col":34,"offset":1231},"svalue_end":{"line":51,"col":41,"offset":1238},"svalue_abstract_content":"fn(cap)"}},"$LARGE":{"start":{"line":51,"col":37,"offset":1234},"end":{"line":51,"col":40,"offset":1237},"abstract_content":"cap","propagated_value":{"svalue_start":{"line":51,"col":24,"offset":1221},"svalue_end":{"line":51,"col":25,"offset":1222},"svalue_abstract_content":"0"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"478882db9bb6f9c4341c8f5001d49d964103b15534abb66a180396688112a0a26a8daf9778bd4d6355f977b6b53b8def4b67af7830a7f65a3d004cc5c03b306f_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":41,"offset":1238},"extra":{"metavars":{"$SIGNED":{"start":{"line":51,"col":28,"offset":1225},"end":{"line":51,"col":31,"offset":1228},"abstract_content":"set","propagated_value":{"svalue_start":{"line":51,"col":34,"offset":1231},"svalue_end":{"line":51,"col":41,"offset":1238},"svalue_abstract_content":"fn(cap)"}},"$UNSIGNED":{"start":{"line":51,"col":37,"offset":1234},"end":{"line":51,"col":40,"offset":1237},"abstract_content":"cap","propagated_value":{"svalue_start":{"line":51,"col":24,"offset":1221},"svalue_end":{"line":51,"col":25,"offset":1222},"svalue_abstract_content":"0"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"311bd766bc7322bf0a954e96804f9d5de9e1b79550de97eaf69c572a6ccba88885462752f306db4eafdd6f6239dda4ee071673a05aceaaffcff51279b6ab8f3c_0","lines":"    for (sep = \"\", cap=0; (set = fn(cap)) >= 0; cap++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":97,"col":2,"offset":2189},"end":{"line":98,"col":33,"offset":2273},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":34,"offset":33},"abstract_content":"\"Securebits: 0%lo/0x%lx/%u'b%s\\n\""},"$FMT":{"start":{"line":97,"col":9,"offset":2196},"end":{"line":97,"col":42,"offset":2229},"abstract_content":"\"Securebits: 0%lo/0x%lx/%u'b%s\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8915755c255f105a2a2b959e1249db1a9aa1a7bf50b32cf5899c6129f2efd412f4b39f1cb7d524fc4a7a5e7631b9eb7cd647674da30a719af1ca6bb9790e2159_0","lines":"\tprintf(\"Securebits: 0%lo/0x%lx/%u'b%s\\n\", set, set,\n\t       (unsigned) strlen(b), b);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":187,"col":11,"offset":5000},"end":{"line":187,"col":16,"offset":5005},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":187,"col":11,"offset":5000},"end":{"line":187,"col":12,"offset":5001},"abstract_content":"j"},"$SIGNED":{"start":{"line":187,"col":15,"offset":5004},"end":{"line":187,"col":16,"offset":5005},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ed6ec97d33d1ce904ad89389405562aabf19e28a3966ebb4e9d4161c630b17c5eb8cf426d8273196c98c0ac1b9b8b9839da2d9960a65f1ff4e5398b8a6f20be0_0","lines":"\tunsigned j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":32,"offset":5212},"extra":{"metavars":{"$NARROW":{"start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":12,"offset":5192},"abstract_content":"status"},"$LARGE":{"start":{"line":194,"col":30,"offset":5210},"end":{"line":194,"col":31,"offset":5211},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e20bd982e6dc24237f9c033bfb141fa15c531f700066668023db4bdff3eaf3b6f9bee918bbb4728b9797c475aacd7bceadb4fc12ba5ec6065a188c0772566040_0","lines":"\t    status = cap_drop_bound(j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":32,"offset":5212},"extra":{"metavars":{"$SIGNED":{"start":{"line":194,"col":6,"offset":5186},"end":{"line":194,"col":12,"offset":5192},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":194,"col":30,"offset":5210},"end":{"line":194,"col":31,"offset":5211},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c854cc4f9eece3f9b9456452e54dee0b8eeb58cd78ee6f78824f8b9146fa36fb2ef8c4aa7ddbf30e1a25a980f4d7e44118cf016582efce50e9eaae24dc0a1f0b_0","lines":"\t    status = cap_drop_bound(j);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":219,"col":30,"offset":5730},"end":{"line":219,"col":46,"offset":5746},"extra":{"metavars":{"$FUN":{"start":{"line":219,"col":30,"offset":5730},"end":{"line":219,"col":36,"offset":5736},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f54ab9767914af9daa07355c555023a667cd3f93dbf8cc687b724406abc34c6b0dd199c913aab806ed105a9cf46178beb85ff63daa1f141c472c7f9be8c22cec_0","lines":"    for (ptr = names; (ptr = strtok(ptr, \",\")); ptr = NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":254,"col":11,"offset":6611},"end":{"line":254,"col":16,"offset":6616},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":254,"col":11,"offset":6611},"end":{"line":254,"col":12,"offset":6612},"abstract_content":"j"},"$SIGNED":{"start":{"line":254,"col":15,"offset":6615},"end":{"line":254,"col":16,"offset":6616},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ed6ec97d33d1ce904ad89389405562aabf19e28a3966ebb4e9d4161c630b17c5eb8cf426d8273196c98c0ac1b9b8b9839da2d9960a65f1ff4e5398b8a6f20be0_1","lines":"\tunsigned j = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":38,"offset":6832},"extra":{"metavars":{"$NARROW":{"start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":12,"offset":6806},"abstract_content":"status"},"$LARGE":{"start":{"line":261,"col":31,"offset":6825},"end":{"line":261,"col":32,"offset":6826},"abstract_content":"j"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e20bd982e6dc24237f9c033bfb141fa15c531f700066668023db4bdff3eaf3b6f9bee918bbb4728b9797c475aacd7bceadb4fc12ba5ec6065a188c0772566040_1","lines":"\t    status = cap_set_ambient(j, set);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":38,"offset":6832},"extra":{"metavars":{"$SIGNED":{"start":{"line":261,"col":6,"offset":6800},"end":{"line":261,"col":12,"offset":6806},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":261,"col":31,"offset":6825},"end":{"line":261,"col":32,"offset":6826},"abstract_content":"j"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"c854cc4f9eece3f9b9456452e54dee0b8eeb58cd78ee6f78824f8b9146fa36fb2ef8c4aa7ddbf30e1a25a980f4d7e44118cf016582efce50e9eaae24dc0a1f0b_1","lines":"\t    status = cap_set_ambient(j, set);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":286,"col":30,"offset":7386},"end":{"line":286,"col":46,"offset":7402},"extra":{"metavars":{"$FUN":{"start":{"line":286,"col":30,"offset":7386},"end":{"line":286,"col":36,"offset":7392},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f54ab9767914af9daa07355c555023a667cd3f93dbf8cc687b724406abc34c6b0dd199c913aab806ed105a9cf46178beb85ff63daa1f141c472c7f9be8c22cec_1","lines":"    for (ptr = names; (ptr = strtok(ptr, \",\")); ptr = NULL) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":328,"col":10,"offset":8419},"end":{"line":328,"col":13,"offset":8422},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":328,"col":10,"offset":8419},"end":{"line":328,"col":11,"offset":8420},"abstract_content":"i"},"$SIGNED":{"start":{"line":328,"col":12,"offset":8421},"end":{"line":328,"col":13,"offset":8422},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"531c5ed09557e5c72bdd142592b51663043e85bcdd2aefd04f664d8f11d379f1ee7fa51fbbf67882879e62a57b007c022558a32af2fce71a9163e8eb48d4322a_0","lines":"    for (i=1; i<argc; ++i) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":329,"col":26,"offset":8464},"end":{"line":329,"col":30,"offset":8468},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_0","lines":"\tif (!strncmp(\"--drop=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":330,"col":15,"offset":8493},"end":{"line":330,"col":19,"offset":8497},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_1","lines":"\t    arg_drop(argv[i]+7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":331,"col":36,"offset":8540},"end":{"line":331,"col":40,"offset":8544},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_2","lines":"\t} else if (!strncmp(\"--dropped=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":333,"col":24,"offset":8601},"end":{"line":333,"col":28,"offset":8605},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_3","lines":"\t    if (cap_from_name(argv[i]+10, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":335,"col":4,"offset":8686},"end":{"line":335,"col":8,"offset":8690},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_4","lines":"\t\t\targv[i] + 10);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":340,"col":4,"offset":8814},"end":{"line":340,"col":8,"offset":8818},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_5","lines":"\t\t\targv[i]+10);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":343,"col":38,"offset":8882},"end":{"line":343,"col":42,"offset":8886},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_6","lines":"\t} else if (!strcmp(\"--has-ambient\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":348,"col":35,"offset":9033},"end":{"line":348,"col":39,"offset":9037},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_7","lines":"\t} else if (!strncmp(\"--addamb=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":349,"col":21,"offset":9068},"end":{"line":349,"col":25,"offset":9072},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_8","lines":"\t    arg_change_amb(argv[i]+9, CAP_SET);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":350,"col":35,"offset":9123},"end":{"line":350,"col":39,"offset":9127},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_9","lines":"\t} else if (!strncmp(\"--delamb=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":351,"col":21,"offset":9158},"end":{"line":351,"col":25,"offset":9162},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_10","lines":"\t    arg_change_amb(argv[i]+9, CAP_CLEAR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":352,"col":33,"offset":9213},"end":{"line":352,"col":37,"offset":9217},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_11","lines":"\t} else if (!strncmp(\"--noamb\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":357,"col":32,"offset":9366},"end":{"line":357,"col":36,"offset":9370},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_12","lines":"\t} else if (!strncmp(\"--inh=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":57,"offset":10139},"extra":{"metavars":{"$FUN":{"start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":18,"offset":10100},"abstract_content":"malloc"},"$X":{"start":{"line":386,"col":19,"offset":10101},"end":{"line":386,"col":41,"offset":10123},"abstract_content":"10+strlen(argv[i]+6)"},"$Y":{"start":{"line":386,"col":44,"offset":10126},"end":{"line":386,"col":56,"offset":10138},"abstract_content":"strlen(text)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"35f535c1e411e3a5e083632f10febdc3d13e2bf1a5e5cf79364ad2b8ff96ead0d77a7def823c57fe347122cf83185d4659ea67261e67372994f00ed62ef13c26_0","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":57,"offset":10139},"extra":{"metavars":{"$FUN":{"start":{"line":386,"col":12,"offset":10094},"end":{"line":386,"col":18,"offset":10100},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79f0afb2f4c98cc47a29b1dffb85bc768373696da34ea18befced7082a2ac10b6ef1a0f3349c8d429b0c329196e03240e72f21c0d5bc1bbf51d41f4bdb97be93_0","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":386,"col":31,"offset":10113},"end":{"line":386,"col":35,"offset":10117},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_13","lines":"\t    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":391,"col":10,"offset":10231},"end":{"line":391,"col":14,"offset":10235},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_14","lines":"\t    if (argv[i][6] && strcmp(\"none\", argv[i]+6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":391,"col":39,"offset":10260},"end":{"line":391,"col":43,"offset":10264},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_15","lines":"\t    if (argv[i][6] && strcmp(\"none\", argv[i]+6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":43,"offset":10316},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":10,"offset":9},"abstract_content":"\"%s %s+i\""},"$BUF":{"start":{"line":392,"col":11,"offset":10284},"end":{"line":392,"col":14,"offset":10287},"abstract_content":"ptr","propagated_value":{"svalue_start":{"line":386,"col":12,"offset":10094},"svalue_end":{"line":386,"col":57,"offset":10139},"svalue_abstract_content":"malloc(10+strlen(argv[i]+6)+strlen(text))"}},"$FMT":{"start":{"line":392,"col":16,"offset":10289},"end":{"line":392,"col":25,"offset":10298},"abstract_content":"\"%s %s+i\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"825a0ccf58767d4fab0d16e2958467de1637f55c626792e0ace2f69c7ab484fa5de3142369481572ecd52fd13fca5a0de10fb22be9f8e728d4c3c7ac318b9b9b_0","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":43,"offset":10316},"extra":{"metavars":{"$FUN":{"start":{"line":392,"col":3,"offset":10276},"end":{"line":392,"col":10,"offset":10283},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8eb70c189a2bdd4e5522be224889f7bbad595c371670a14a0cc4e8a6aca2030d14f0105faea44aad19fd04ac601b82e219e9e693e08101d097d8cc45dcbb8395_0","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":392,"col":33,"offset":10306},"end":{"line":392,"col":37,"offset":10310},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_16","lines":"\t\tsprintf(ptr, \"%s %s+i\", text, argv[i]+6);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":20,"offset":10351},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b4cc857c52170998a5d0a5f87aa8b96f50334b8efd81a38869bf74a0463439e131a4e927d7605e289f54b9085d435eeb0102eb6c9cb31d2b6c4c68592c19e541_0","lines":"\t\tstrcpy(ptr, text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":20,"offset":10351},"extra":{"metavars":{"$FUN":{"start":{"line":394,"col":3,"offset":10334},"end":{"line":394,"col":9,"offset":10340},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1d9f51d471a4cf292e5f7cd392d3dd874b4a88e537f49b02a990e69ddd5d660a6dd8feaf0311c92dd73b8bbc3c9a298a92a5cda2046632105b531a064d3fd2e0_0","lines":"\t\tstrcpy(ptr, text);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":426,"col":33,"offset":11142},"end":{"line":426,"col":37,"offset":11146},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_17","lines":"\t} else if (!strncmp(\"--caps=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":442,"col":26,"offset":11561},"end":{"line":442,"col":30,"offset":11565},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_18","lines":"\t    all = cap_from_text(argv[i]+7);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":444,"col":49,"offset":11645},"end":{"line":444,"col":53,"offset":11649},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_19","lines":"\t\tfprintf(stderr, \"unable to interpret [%s]\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":460,"col":56,"offset":12095},"end":{"line":460,"col":60,"offset":12099},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_20","lines":"\t\tfprintf(stderr, \"Unable to set capabilities [%s]\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":469,"col":32,"offset":12304},"end":{"line":469,"col":36,"offset":12308},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_21","lines":"\t} else if (!strcmp(\"--modes\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":480,"col":33,"offset":12560},"end":{"line":480,"col":37,"offset":12564},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_22","lines":"\t} else if (!strncmp(\"--mode=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":481,"col":27,"offset":12601},"end":{"line":481,"col":31,"offset":12605},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_23","lines":"\t    const char *target = argv[i]+7;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":505,"col":35,"offset":13110},"end":{"line":505,"col":39,"offset":13114},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_24","lines":"\t} else if (!strncmp(\"--inmode=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":506,"col":27,"offset":13151},"end":{"line":506,"col":31,"offset":13155},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_25","lines":"\t    const char *target = argv[i]+9;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":513,"col":33,"offset":13374},"end":{"line":513,"col":37,"offset":13378},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_26","lines":"\t} else if (!strncmp(\"--keep=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":517,"col":6,"offset":13430},"end":{"line":517,"col":41,"offset":13465},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":517,"col":6,"offset":13430},"end":{"line":517,"col":11,"offset":13435},"abstract_content":"value"},"$SIGNED":{"start":{"line":517,"col":30,"offset":13454},"end":{"line":517,"col":31,"offset":13455},"abstract_content":"7"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"22916cb2745b670cfc43c48c62abd9608c13b9e5ea0853e97ca0c37f02da4590399cc22597fb43ee62440ac08120e4b7026a21ac79c4abdf0d86ce2879bdd2be_0","lines":"\t    value = strtoul(argv[i]+7, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":517,"col":22,"offset":13446},"end":{"line":517,"col":26,"offset":13450},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_27","lines":"\t    value = strtoul(argv[i]+7, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":41,"offset":13507},"extra":{"metavars":{"$NARROW":{"start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":9,"offset":13475},"abstract_content":"set"},"$LARGE":{"start":{"line":518,"col":35,"offset":13501},"end":{"line":518,"col":40,"offset":13506},"abstract_content":"value","propagated_value":{"svalue_start":{"line":517,"col":14,"offset":13438},"svalue_end":{"line":517,"col":41,"offset":13465},"svalue_abstract_content":"strtoul(argv[i]+7 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bc73ceb6f503376b867e07dda35d7a0b8795d121f3889c88f9d30f7c00fa193b36f29a2cc33d9dcf041ef8763d3750378bd231efdf4af32c031e71fc43f9e657_0","lines":"\t    set = prctl(PR_SET_KEEPCAPS, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":41,"offset":13507},"extra":{"metavars":{"$SIGNED":{"start":{"line":518,"col":6,"offset":13472},"end":{"line":518,"col":9,"offset":13475},"abstract_content":"set"},"$UNSIGNED":{"start":{"line":518,"col":35,"offset":13501},"end":{"line":518,"col":40,"offset":13506},"abstract_content":"value","propagated_value":{"svalue_start":{"line":517,"col":14,"offset":13438},"svalue_end":{"line":517,"col":41,"offset":13465},"svalue_abstract_content":"strtoul(argv[i]+7 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"797323d3b3bc353ef11ffef5513451424cd7f4cd41384d66e736eda7515b908b658599b186f37effad61c6b44e6153d3a07f1fae8c0835acd854ec1a7b9bcef5_0","lines":"\t    set = prctl(PR_SET_KEEPCAPS, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":524,"col":35,"offset":13670},"end":{"line":524,"col":39,"offset":13674},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_28","lines":"\t} else if (!strncmp(\"--chroot=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":32,"offset":14337},"extra":{"metavars":{"$NARROW":{"start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":12,"offset":14317},"abstract_content":"status"},"$LARGE":{"start":{"line":552,"col":27,"offset":14332},"end":{"line":552,"col":28,"offset":14333},"abstract_content":"i"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b3a69f4b2e52f82d07f7bf1c2f9801890daff57d00d6b659b03f7c6efcc5f4f41c72a3d6f2483309d2adfae5dde4a1d27a28ab4826cbde776e77191beb7046f6_0","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":32,"offset":14337},"extra":{"metavars":{"$SIGNED":{"start":{"line":552,"col":6,"offset":14311},"end":{"line":552,"col":12,"offset":14317},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":552,"col":27,"offset":14332},"end":{"line":552,"col":28,"offset":14333},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"36d5b3fef9ee71ccb5f47523526b9d003fc95e11f0bf625acedf21ec17883ac8ca0a03989960f82850972972bff73063c402b138c6d271412e9820a97abd0476_0","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":552,"col":22,"offset":14327},"end":{"line":552,"col":26,"offset":14331},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_29","lines":"\t    status = chroot(argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":566,"col":53,"offset":14687},"end":{"line":566,"col":57,"offset":14691},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_30","lines":"\t\tfprintf(stderr, \"Unable to chroot/chdir to [%s]\", argv[i]+9);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":569,"col":36,"offset":14752},"end":{"line":569,"col":40,"offset":14756},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_31","lines":"\t} else if (!strncmp(\"--secbits=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":572,"col":6,"offset":14811},"end":{"line":572,"col":42,"offset":14847},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":572,"col":6,"offset":14811},"end":{"line":572,"col":11,"offset":14816},"abstract_content":"value"},"$SIGNED":{"start":{"line":572,"col":30,"offset":14835},"end":{"line":572,"col":32,"offset":14837},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d539c6507e43ce18ae401244e4093eb8f0e3588984def5d421a07575058a2859d5606e2a748ee979b23c4ea60c50045573a93bb9c459e9c4462aa942b2d0fc3d_0","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":572,"col":22,"offset":14827},"end":{"line":572,"col":26,"offset":14831},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_32","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":37,"offset":14885},"extra":{"metavars":{"$NARROW":{"start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":12,"offset":14860},"abstract_content":"status"},"$LARGE":{"start":{"line":573,"col":31,"offset":14879},"end":{"line":573,"col":36,"offset":14884},"abstract_content":"value","propagated_value":{"svalue_start":{"line":572,"col":14,"offset":14819},"svalue_end":{"line":572,"col":42,"offset":14847},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34847bca425057289cdcce58413bf19cea5fe0fb27ade3f5d6bf8f91708e45defe34a3692ef3eabebee7d2f18a812e0ae9bc5a801acb1374c98f0becc217bfbf_0","lines":"\t    status = cap_set_secbits(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":37,"offset":14885},"extra":{"metavars":{"$SIGNED":{"start":{"line":573,"col":6,"offset":14854},"end":{"line":573,"col":12,"offset":14860},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":573,"col":31,"offset":14879},"end":{"line":573,"col":36,"offset":14884},"abstract_content":"value","propagated_value":{"svalue_start":{"line":572,"col":14,"offset":14819},"svalue_end":{"line":572,"col":42,"offset":14847},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9f28909085606c96092ec5160f74417630799f184e52de1ac55c957d3239aebd721c78173cfd5cf54e889a5308dfd2279104d6c5e265f527c72fb8f92ae67db7_0","lines":"\t    status = cap_set_secbits(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":575,"col":3,"offset":14912},"end":{"line":576,"col":17,"offset":14986},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":41,"offset":40},"abstract_content":"\"failed to set securebits to 0%o/0x%x\\n\""},"$ARG1":{"start":{"line":575,"col":11,"offset":14920},"end":{"line":575,"col":17,"offset":14926},"abstract_content":"stderr"},"$FMT":{"start":{"line":575,"col":19,"offset":14928},"end":{"line":575,"col":59,"offset":14968},"abstract_content":"\"failed to set securebits to 0%o/0x%x\\n\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e569ed0e99158093e03d1b66adbe88967c639bb498365adf16c72f6f5861d48b2cfbf67dc525052ef9a8584c635c4670a9451d97ac969d9bee35f446fb0c4cf6_0","lines":"\t\tfprintf(stderr, \"failed to set securebits to 0%o/0x%x\\n\",\n\t\t\tvalue, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":579,"col":36,"offset":15041},"end":{"line":579,"col":40,"offset":15045},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_33","lines":"\t} else if (!strncmp(\"--forkfor=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":585,"col":6,"offset":15163},"end":{"line":585,"col":42,"offset":15199},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":585,"col":6,"offset":15163},"end":{"line":585,"col":11,"offset":15168},"abstract_content":"value"},"$SIGNED":{"start":{"line":585,"col":30,"offset":15187},"end":{"line":585,"col":32,"offset":15189},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d539c6507e43ce18ae401244e4093eb8f0e3588984def5d421a07575058a2859d5606e2a748ee979b23c4ea60c50045573a93bb9c459e9c4462aa942b2d0fc3d_1","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":585,"col":22,"offset":15179},"end":{"line":585,"col":26,"offset":15183},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_34","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":589,"col":14,"offset":15258},"end":{"line":589,"col":20,"offset":15264},"extra":{"metavars":{"$FUN":{"start":{"line":589,"col":14,"offset":15258},"end":{"line":589,"col":18,"offset":15262},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ae46519c3924c0793f397c23eb82ebb8d5491b2c35ed6a2237ef54cbba235119ae23e9d787c9a7eb7a802b27cbe4a431af3808259e02a30148f95b772dd3ff78_0","lines":"\t    child = fork();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":596,"col":35,"offset":15412},"end":{"line":596,"col":39,"offset":15416},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_35","lines":"\t} else if (!strncmp(\"--killit=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":601,"col":6,"offset":15498},"end":{"line":601,"col":41,"offset":15533},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":601,"col":6,"offset":15498},"end":{"line":601,"col":11,"offset":15503},"abstract_content":"value"},"$SIGNED":{"start":{"line":601,"col":30,"offset":15522},"end":{"line":601,"col":31,"offset":15523},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec7c95eb4feab5055cbcc83727ae6f8dd47d16848a4fc6c256e8baeedcddb05150a5f9bc2382d7032aebe014329cadd3cba46fbbfcc40c5c7a0f88a5591118f3_0","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":601,"col":22,"offset":15514},"end":{"line":601,"col":26,"offset":15518},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_36","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":33,"offset":15654},"extra":{"metavars":{"$NARROW":{"start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":12,"offset":15633},"abstract_content":"retval"},"$LARGE":{"start":{"line":606,"col":27,"offset":15648},"end":{"line":606,"col":32,"offset":15653},"abstract_content":"value","propagated_value":{"svalue_start":{"line":601,"col":14,"offset":15506},"svalue_end":{"line":601,"col":41,"offset":15533},"svalue_abstract_content":"strtoul(argv[i]+9 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"729056c57fbc8ad45274949ce77512aeebfa9b923a46a23e22c5cd59fb09bf60de6259d0a9c8e5e7d39109221d7094d36509ef3045d2c740c7174aaaeac7623d_0","lines":"\t    retval = kill(child, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":33,"offset":15654},"extra":{"metavars":{"$SIGNED":{"start":{"line":606,"col":6,"offset":15627},"end":{"line":606,"col":12,"offset":15633},"abstract_content":"retval"},"$UNSIGNED":{"start":{"line":606,"col":27,"offset":15648},"end":{"line":606,"col":32,"offset":15653},"abstract_content":"value","propagated_value":{"svalue_start":{"line":601,"col":14,"offset":15506},"svalue_end":{"line":601,"col":41,"offset":15533},"svalue_abstract_content":"strtoul(argv[i]+9 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4511a6c3ca0a8d2722ccdd7f18d8721d7f5237ecc408025473261ac384999e6ff839da5b820e38de671a80a09a1d6943e36c99435054941fd16ebbd288c3727a_0","lines":"\t    retval = kill(child, value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":623,"col":32,"offset":16107},"end":{"line":623,"col":36,"offset":16111},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_37","lines":"\t} else if (!strncmp(\"--uid=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":627,"col":6,"offset":16166},"end":{"line":627,"col":41,"offset":16201},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":627,"col":6,"offset":16166},"end":{"line":627,"col":11,"offset":16171},"abstract_content":"value"},"$SIGNED":{"start":{"line":627,"col":30,"offset":16190},"end":{"line":627,"col":31,"offset":16191},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45d9bc8c90ab3860584fb7235cd710ad77bfbee329911547d5e3b4dc9adef04aa790a19b4fa0371124d32b3e0b9799a18307ca4138a4d4ea4873011171eaf8b0_0","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":627,"col":22,"offset":16182},"end":{"line":627,"col":26,"offset":16186},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_38","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$NARROW":{"start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":12,"offset":16214},"abstract_content":"status"},"$LARGE":{"start":{"line":628,"col":22,"offset":16224},"end":{"line":628,"col":27,"offset":16229},"abstract_content":"value","propagated_value":{"svalue_start":{"line":627,"col":14,"offset":16174},"svalue_end":{"line":627,"col":41,"offset":16201},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34847bca425057289cdcce58413bf19cea5fe0fb27ade3f5d6bf8f91708e45defe34a3692ef3eabebee7d2f18a812e0ae9bc5a801acb1374c98f0becc217bfbf_1","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$SIGNED":{"start":{"line":628,"col":6,"offset":16208},"end":{"line":628,"col":12,"offset":16214},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":628,"col":22,"offset":16224},"end":{"line":628,"col":27,"offset":16229},"abstract_content":"value","propagated_value":{"svalue_start":{"line":627,"col":14,"offset":16174},"svalue_end":{"line":627,"col":41,"offset":16201},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9f28909085606c96092ec5160f74417630799f184e52de1ac55c957d3239aebd721c78173cfd5cf54e889a5308dfd2279104d6c5e265f527c72fb8f92ae67db7_1","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":628,"col":15,"offset":16217},"end":{"line":628,"col":28,"offset":16230},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":628,"col":15,"offset":16217},"end":{"line":628,"col":21,"offset":16223},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"04e66c48bcf170d9aef35499553f7d92201b2a1f05a1ca138e59995622aad2d273c8944c633e2eeb694899d1b57041e31db57063e1f85bad8698a6b84ce3f2bc_0","lines":"\t    status = setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":634,"col":36,"offset":16384},"end":{"line":634,"col":40,"offset":16388},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_39","lines":"\t} else if (!strncmp(\"--cap-uid=\", argv[i], 10)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":638,"col":6,"offset":16444},"end":{"line":638,"col":42,"offset":16480},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":638,"col":6,"offset":16444},"end":{"line":638,"col":11,"offset":16449},"abstract_content":"value"},"$SIGNED":{"start":{"line":638,"col":30,"offset":16468},"end":{"line":638,"col":32,"offset":16470},"abstract_content":"10"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d539c6507e43ce18ae401244e4093eb8f0e3588984def5d421a07575058a2859d5606e2a748ee979b23c4ea60c50045573a93bb9c459e9c4462aa942b2d0fc3d_2","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":638,"col":22,"offset":16460},"end":{"line":638,"col":26,"offset":16464},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_40","lines":"\t    value = strtoul(argv[i]+10, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$NARROW":{"start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":12,"offset":16493},"abstract_content":"status"},"$LARGE":{"start":{"line":639,"col":26,"offset":16507},"end":{"line":639,"col":31,"offset":16512},"abstract_content":"value","propagated_value":{"svalue_start":{"line":638,"col":14,"offset":16452},"svalue_end":{"line":638,"col":42,"offset":16480},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34847bca425057289cdcce58413bf19cea5fe0fb27ade3f5d6bf8f91708e45defe34a3692ef3eabebee7d2f18a812e0ae9bc5a801acb1374c98f0becc217bfbf_2","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$SIGNED":{"start":{"line":639,"col":6,"offset":16487},"end":{"line":639,"col":12,"offset":16493},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":639,"col":26,"offset":16507},"end":{"line":639,"col":31,"offset":16512},"abstract_content":"value","propagated_value":{"svalue_start":{"line":638,"col":14,"offset":16452},"svalue_end":{"line":638,"col":42,"offset":16480},"svalue_abstract_content":"strtoul(argv[i]+10 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9f28909085606c96092ec5160f74417630799f184e52de1ac55c957d3239aebd721c78173cfd5cf54e889a5308dfd2279104d6c5e265f527c72fb8f92ae67db7_2","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":639,"col":15,"offset":16496},"end":{"line":639,"col":32,"offset":16513},"extra":{"metavars":{"$1":{"start":{"line":2,"col":5,"offset":7},"end":{"line":2,"col":6,"offset":8},"abstract_content":"u"},"$FUN":{"start":{"line":639,"col":15,"offset":16496},"end":{"line":639,"col":25,"offset":16506},"abstract_content":"cap_setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a13e862f027073a5a510ea9a8ebaff4b7c2c7cc1c92ac601771aabf504dd368527477fdcdea8d5320ac7034975bb17e9e53240ebcb669a48aa815a60952deba_0","lines":"\t    status = cap_setuid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":645,"col":32,"offset":16667},"end":{"line":645,"col":36,"offset":16671},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_41","lines":"\t} else if (!strncmp(\"--gid=\", argv[i], 6)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":649,"col":6,"offset":16726},"end":{"line":649,"col":41,"offset":16761},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":649,"col":6,"offset":16726},"end":{"line":649,"col":11,"offset":16731},"abstract_content":"value"},"$SIGNED":{"start":{"line":649,"col":30,"offset":16750},"end":{"line":649,"col":31,"offset":16751},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"45d9bc8c90ab3860584fb7235cd710ad77bfbee329911547d5e3b4dc9adef04aa790a19b4fa0371124d32b3e0b9799a18307ca4138a4d4ea4873011171eaf8b0_1","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":649,"col":22,"offset":16742},"end":{"line":649,"col":26,"offset":16746},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_42","lines":"\t    value = strtoul(argv[i]+6, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$NARROW":{"start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":12,"offset":16774},"abstract_content":"status"},"$LARGE":{"start":{"line":650,"col":22,"offset":16784},"end":{"line":650,"col":27,"offset":16789},"abstract_content":"value","propagated_value":{"svalue_start":{"line":649,"col":14,"offset":16734},"svalue_end":{"line":649,"col":41,"offset":16761},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"34847bca425057289cdcce58413bf19cea5fe0fb27ade3f5d6bf8f91708e45defe34a3692ef3eabebee7d2f18a812e0ae9bc5a801acb1374c98f0becc217bfbf_3","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$SIGNED":{"start":{"line":650,"col":6,"offset":16768},"end":{"line":650,"col":12,"offset":16774},"abstract_content":"status"},"$UNSIGNED":{"start":{"line":650,"col":22,"offset":16784},"end":{"line":650,"col":27,"offset":16789},"abstract_content":"value","propagated_value":{"svalue_start":{"line":649,"col":14,"offset":16734},"svalue_end":{"line":649,"col":41,"offset":16761},"svalue_abstract_content":"strtoul(argv[i]+6 NULL 0)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"9f28909085606c96092ec5160f74417630799f184e52de1ac55c957d3239aebd721c78173cfd5cf54e889a5308dfd2279104d6c5e265f527c72fb8f92ae67db7_3","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":650,"col":15,"offset":16777},"end":{"line":650,"col":28,"offset":16790},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":2,"offset":4},"abstract_content":"g"},"$FUN":{"start":{"line":650,"col":15,"offset":16777},"end":{"line":650,"col":21,"offset":16783},"abstract_content":"setgid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db6fa71f801558b85cf959d182a1354d9a4a24e8543c984f931d739a77ef44eab1622c49f4f3e1d98445a07dfa88b348b9c232d81cdcfab4ea37200fd3041f9f_0","lines":"\t    status = setgid(value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":656,"col":42,"offset":16950},"end":{"line":656,"col":46,"offset":16954},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_43","lines":"        } else if (!strncmp(\"--groups=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":27,"offset":17121},"extra":{"metavars":{"$FUN":{"start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":16,"offset":17110},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4678d6f10b033a8e04de3de4c10a35e7556a28e6867afa0dbfdba3ef72d2fb74190d2d9b832a933f0f612d1f0f37b81f9dd42bda4e465f57e7a8c0e03a4c382b_0","lines":"\t  buf = calloc(1, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":663,"col":10,"offset":17104},"end":{"line":663,"col":27,"offset":17121},"extra":{"metavars":{"$CNT":{"start":{"line":663,"col":17,"offset":17111},"end":{"line":663,"col":18,"offset":17112},"abstract_content":"1"},"$LEN":{"start":{"line":663,"col":20,"offset":17114},"end":{"line":663,"col":26,"offset":17120},"abstract_content":"length","propagated_value":{"svalue_start":{"line":662,"col":13,"offset":17064},"svalue_end":{"line":662,"col":42,"offset":17093},"svalue_abstract_content":"sysconf(_SC_GETGR_R_SIZE_MAX)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ac7deb92bd68ab91922a8abaad6cce60b261dde2dbef73ed54ce67f3716547010face8baf29f3fac83b9410058ce1e2803918236da2eb1dcee191111f31561ef_0","lines":"\t  buf = calloc(1, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":665,"col":56,"offset":17200},"end":{"line":665,"col":60,"offset":17204},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_44","lines":"\t    fprintf(stderr, \"No memory for [%s] operation\\n\", argv[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":670,"col":17,"offset":17288},"end":{"line":670,"col":50,"offset":17321},"extra":{"metavars":{"$FUN":{"start":{"line":670,"col":17,"offset":17288},"end":{"line":670,"col":23,"offset":17294},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4678d6f10b033a8e04de3de4c10a35e7556a28e6867afa0dbfdba3ef72d2fb74190d2d9b832a933f0f612d1f0f37b81f9dd42bda4e465f57e7a8c0e03a4c382b_1","lines":"\t  group_list = calloc(max_groups, sizeof(gid_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":677,"col":15,"offset":17452},"end":{"line":677,"col":19,"offset":17456},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_45","lines":"\t  for (ptr = argv[i] + 9; (ptr = strtok(ptr, \",\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":677,"col":35,"offset":17472},"end":{"line":677,"col":51,"offset":17488},"extra":{"metavars":{"$FUN":{"start":{"line":677,"col":35,"offset":17472},"end":{"line":677,"col":41,"offset":17478},"abstract_content":"strtok"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f54ab9767914af9daa07355c555023a667cd3f93dbf8cc687b724406abc34c6b0dd199c913aab806ed105a9cf46178beb85ff63daa1f141c472c7f9be8c22cec_2","lines":"\t  for (ptr = argv[i] + 9; (ptr = strtok(ptr, \",\"));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":696,"col":8,"offset":18003},"end":{"line":696,"col":38,"offset":18033},"extra":{"metavars":{"$2":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":696,"col":8,"offset":18003},"end":{"line":696,"col":17,"offset":18012},"abstract_content":"setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4f4ae5f2bfd441541250fafba40d1775ece636e38be599fa5c2c0a376e53b74b05668862edd9289dcda6a70fd7e60d803f5d1aaa7f6bf20fd09d205ff0d1f21e_0","lines":"\t  if (setgroups(g_count, group_list) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":701,"col":33,"offset":18162},"end":{"line":701,"col":37,"offset":18166},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_46","lines":"\t} else if (!strncmp(\"--user=\", argv[i], 7)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":707,"col":13,"offset":18295},"end":{"line":707,"col":17,"offset":18299},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_47","lines":"\t    user = argv[i] + 7;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":719,"col":15,"offset":18641},"end":{"line":719,"col":58,"offset":18684},"extra":{"metavars":{"$2":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":5,"offset":7},"abstract_content":"set"},"$FUN":{"start":{"line":719,"col":15,"offset":18641},"end":{"line":719,"col":28,"offset":18654},"abstract_content":"cap_setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"83357c885838be38407ce8212773fe5728817da0c31a0928db2d9af7f72ad157001660e425f86415da0eeda8909ea9df48d6e93c679087ed133ee64c7972f409_0","lines":"\t    status = cap_setgroups(pwd->pw_gid, ngroups, groups);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":724,"col":15,"offset":18789},"end":{"line":724,"col":38,"offset":18812},"extra":{"metavars":{"$1":{"start":{"line":2,"col":5,"offset":7},"end":{"line":2,"col":6,"offset":8},"abstract_content":"u"},"$FUN":{"start":{"line":724,"col":15,"offset":18789},"end":{"line":724,"col":25,"offset":18799},"abstract_content":"cap_setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a13e862f027073a5a510ea9a8ebaff4b7c2c7cc1c92ac601771aabf504dd368527477fdcdea8d5320ac7034975bb17e9e53240ebcb669a48aa815a60952deba_1","lines":"\t    status = cap_setuid(pwd->pw_uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":730,"col":35,"offset":18986},"end":{"line":730,"col":39,"offset":18990},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_48","lines":"\t} else if (!strncmp(\"--decode=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":737,"col":23,"offset":19210},"end":{"line":737,"col":27,"offset":19214},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_49","lines":"\t    value = strtoull(argv[i]+9, NULL, 16);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":738,"col":6,"offset":19237},"end":{"line":738,"col":33,"offset":19264},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":13,"offset":12},"abstract_content":"\"0x%016llx=\""},"$FMT":{"start":{"line":738,"col":13,"offset":19244},"end":{"line":738,"col":25,"offset":19256},"abstract_content":"\"0x%016llx=\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1420aa8f31b21cabef2fdafdce3094a82add22fad76ff1ce8e2459d32f6aca6fb112d76594f1a6c49eac260d7b0e2f50e15ede119ae00b084ff2be7c50ada8b8_0","lines":"\t    printf(\"0x%016llx=\", value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":740,"col":11,"offset":19277},"end":{"line":740,"col":16,"offset":19282},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":740,"col":11,"offset":19277},"end":{"line":740,"col":14,"offset":19280},"abstract_content":"cap"},"$SIGNED":{"start":{"line":740,"col":15,"offset":19281},"end":{"line":740,"col":16,"offset":19282},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7f3e40840af9df1082532976cb442850ebad781df74f2fa7bceff0d22fb291230a406e4ccd78059268b60c1068467a116d227dced41f8f0eae04f33e7f6ac2d1_1","lines":"\t    for (cap=0; (cap < 64) && (value >> cap); ++cap) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":741,"col":3,"offset":19325},"end":{"line":752,"col":4,"offset":19546},"extra":{"metavars":{"$EXPR1":{"start":{"line":741,"col":7,"offset":19329},"end":{"line":741,"col":12,"offset":19334},"abstract_content":"value"},"$EXPR2":{"start":{"line":741,"col":16,"offset":19338},"end":{"line":741,"col":27,"offset":19349},"abstract_content":"1ULL<<cap"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"837ac2543ec0869d5439acc466149390257020d06e0e49e448088575387bbe61b2deb8351352d3d3dd4cf182f7ff589ea9f3ca4e19015c9994d44f5e3a8e5975_0","lines":"\t\tif (value & (1ULL << cap)) {\n\t\t    char *ptr;\n\n\t\t    ptr = cap_to_name(cap);\n\t\t    if (ptr != NULL) {\n\t\t\tprintf(\"%s%s\", sep, ptr);\n\t\t\tcap_free(ptr);\n\t\t    } else {\n\t\t\tprintf(\"%s%u\", sep, cap);\n\t\t    }\n\t\t    sep = \",\";\n\t\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":755,"col":44,"offset":19616},"end":{"line":755,"col":48,"offset":19620},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_50","lines":"        } else if (!strncmp(\"--supports=\", argv[i], 11)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":758,"col":24,"offset":19678},"end":{"line":758,"col":28,"offset":19682},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_51","lines":"\t    if (cap_from_name(argv[i] + 11, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":760,"col":4,"offset":19765},"end":{"line":760,"col":8,"offset":19769},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_52","lines":"\t\t\targv[i] + 11);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":765,"col":4,"offset":19894},"end":{"line":765,"col":8,"offset":19898},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_53","lines":"\t\t\targv[i] + 11, cap);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":768,"col":32,"offset":19963},"end":{"line":768,"col":36,"offset":19967},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_54","lines":"\t} else if (!strcmp(\"--print\", argv[i])) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":770,"col":28,"offset":20020},"end":{"line":770,"col":32,"offset":20024},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_55","lines":"\t} else if ((!strcmp(\"--\", argv[i])) || (!strcmp(\"==\", argv[i]))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":770,"col":56,"offset":20048},"end":{"line":770,"col":60,"offset":20052},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_56","lines":"\t} else if ((!strcmp(\"--\", argv[i])) || (!strcmp(\"==\", argv[i]))) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":10,"offset":20070},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_57","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":65,"offset":20125},"extra":{"metavars":{"$RET":{"start":{"line":771,"col":6,"offset":20066},"end":{"line":771,"col":13,"offset":20073},"abstract_content":"argv[i]"},"$FUN":{"start":{"line":771,"col":16,"offset":20076},"end":{"line":771,"col":22,"offset":20082},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2625720beab42632e0e869b5d920e5b37ed1214de84a3a926ef0a94b4af0e9df0bbebaebd21cb50bff35278aa520482b2b85ab1f6149492cf61def38ea8f5b06_0","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":771,"col":23,"offset":20083},"end":{"line":771,"col":27,"offset":20087},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_58","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":771,"col":57,"offset":20117},"end":{"line":771,"col":61,"offset":20121},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_59","lines":"\t    argv[i] = strdup(argv[i][0] == '-' ? \"/bin/bash\" : argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":772,"col":6,"offset":20132},"end":{"line":772,"col":10,"offset":20136},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_60","lines":"\t    argv[argc] = NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":773,"col":6,"offset":20156},"end":{"line":773,"col":35,"offset":20185},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"v"},"$2":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"e"},"$FUN":{"start":{"line":773,"col":6,"offset":20156},"end":{"line":773,"col":12,"offset":20162},"abstract_content":"execve"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"371b867e60c4ab18e91c06dcb399f6c7c92347d7615baf4a63f5e276d3ad7125c72cba50f6fe0ed84f5c000d5c9c47ad0081ce13e886461483ec3635e8dfea90_0","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":773,"col":13,"offset":20163},"end":{"line":773,"col":17,"offset":20167},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_61","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":773,"col":22,"offset":20172},"end":{"line":773,"col":26,"offset":20176},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_62","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":773,"col":30,"offset":20180},"end":{"line":773,"col":34,"offset":20184},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_63","lines":"\t    execve(argv[i], argv+i, envp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":776,"col":34,"offset":20286},"end":{"line":776,"col":38,"offset":20290},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_64","lines":"\t} else if (!strncmp(\"--has-p=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":781,"col":24,"offset":20395},"end":{"line":781,"col":28,"offset":20399},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_65","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":783,"col":4,"offset":20479},"end":{"line":783,"col":8,"offset":20483},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_66","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":788,"col":46,"offset":20657},"end":{"line":788,"col":50,"offset":20661},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_67","lines":"\t\tfprintf(stderr, \"cap[%s] not permitted\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":792,"col":34,"offset":20741},"end":{"line":792,"col":38,"offset":20745},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_68","lines":"\t} else if (!strncmp(\"--has-i=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":797,"col":24,"offset":20850},"end":{"line":797,"col":28,"offset":20854},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_69","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":799,"col":4,"offset":20934},"end":{"line":799,"col":8,"offset":20938},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_70","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":805,"col":48,"offset":21118},"end":{"line":805,"col":52,"offset":21122},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_71","lines":"\t\tfprintf(stderr, \"cap[%s] not inheritable\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":809,"col":34,"offset":21202},"end":{"line":809,"col":38,"offset":21206},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_72","lines":"\t} else if (!strncmp(\"--has-a=\", argv[i], 8)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":811,"col":24,"offset":21262},"end":{"line":811,"col":28,"offset":21266},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_73","lines":"\t    if (cap_from_name(argv[i]+8, &cap) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":813,"col":4,"offset":21346},"end":{"line":813,"col":8,"offset":21350},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_74","lines":"\t\t\targv[i] + 8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":817,"col":54,"offset":21465},"end":{"line":817,"col":58,"offset":21469},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_75","lines":"\t\tfprintf(stderr, \"cap[%s] not in ambient vector\\n\", argv[i]+8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":820,"col":35,"offset":21529},"end":{"line":820,"col":39,"offset":21533},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_76","lines":"\t} else if (!strncmp(\"--is-uid=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":823,"col":6,"offset":21586},"end":{"line":823,"col":41,"offset":21621},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":823,"col":6,"offset":21586},"end":{"line":823,"col":11,"offset":21591},"abstract_content":"value"},"$SIGNED":{"start":{"line":823,"col":30,"offset":21610},"end":{"line":823,"col":31,"offset":21611},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec7c95eb4feab5055cbcc83727ae6f8dd47d16848a4fc6c256e8baeedcddb05150a5f9bc2382d7032aebe014329cadd3cba46fbbfcc40c5c7a0f88a5591118f3_1","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":823,"col":22,"offset":21602},"end":{"line":823,"col":26,"offset":21606},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_77","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":829,"col":35,"offset":21778},"end":{"line":829,"col":39,"offset":21782},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_78","lines":"\t} else if (!strncmp(\"--is-gid=\", argv[i], 9)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":832,"col":6,"offset":21835},"end":{"line":832,"col":41,"offset":21870},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":832,"col":6,"offset":21835},"end":{"line":832,"col":11,"offset":21840},"abstract_content":"value"},"$SIGNED":{"start":{"line":832,"col":30,"offset":21859},"end":{"line":832,"col":31,"offset":21860},"abstract_content":"9"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ec7c95eb4feab5055cbcc83727ae6f8dd47d16848a4fc6c256e8baeedcddb05150a5f9bc2382d7032aebe014329cadd3cba46fbbfcc40c5c7a0f88a5591118f3_2","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":832,"col":22,"offset":21851},"end":{"line":832,"col":26,"offset":21855},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_79","lines":"\t    value = strtoul(argv[i]+9, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":874,"col":6,"offset":24059},"end":{"line":874,"col":10,"offset":24063},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_80","lines":"\t\t   argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":874,"col":15,"offset":24068},"end":{"line":874,"col":19,"offset":24072},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_81","lines":"\t\t   argv[0], argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","start":{"line":876,"col":28,"offset":24106},"end":{"line":876,"col":32,"offset":24110},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"13f088f9728f42c7f5307d896c598098ade71c3c63ad52cdbbe492040e5059367002ba627d345cdc21c0b15a731112cbd80027419f45105247df92668904c58d_82","lines":"\t    exit(strcmp(\"--help\", argv[i]) != 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":84,"col":17,"offset":1698},"end":{"line":84,"col":43,"offset":1724},"extra":{"metavars":{"$1":{"start":{"line":2,"col":1,"offset":3},"end":{"line":2,"col":4,"offset":6},"abstract_content":"opt"},"$FUN":{"start":{"line":84,"col":17,"offset":1698},"end":{"line":84,"col":23,"offset":1704},"abstract_content":"getopt"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"855376f8fb02bc870c2b4fe9a57527664e380415d860b4ba7c50e8e8be4943e66177a4df1524d5fad0e2e75e6b5c3c6d7cb3a4937aa61d5e966fefc744bfa88e_0","lines":"    while ((c = getopt(argc, argv, \"rvhn\")) > 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":84,"col":30,"offset":1711},"end":{"line":84,"col":34,"offset":1715},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_0","lines":"    while ((c = getopt(argc, argv, \"rvhn\")) > 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":100,"col":10,"offset":1916},"end":{"line":100,"col":14,"offset":1920},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_1","lines":"    if (!argv[optind])","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":103,"col":20,"offset":1960},"end":{"line":103,"col":24,"offset":1964},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_2","lines":"    for (i=optind; argv[i] != NULL; i++) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":106,"col":6,"offset":2010},"end":{"line":106,"col":28,"offset":2032},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"bf35b15e477a65c46acc442eb4f8bb749a55556abc0f1bf7a27f625294674964727ea8901ee0b0a1f1c5a43087f4e2ec8c1f7143f86c396ef7c8c9ad5ee3838f_0","lines":"\tif (lstat(argv[i], &stbuf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":106,"col":6,"offset":2010},"end":{"line":106,"col":28,"offset":2032},"extra":{"metavars":{"$FUN":{"start":{"line":106,"col":6,"offset":2010},"end":{"line":106,"col":11,"offset":2015},"abstract_content":"lstat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7d4aebd148997e3949183ee51013429914f7998bd5db0426c79b864af04c19995e4cf8353151895253e1534d74676b3885c457169160ba7d21af67323cabe350_0","lines":"\tif (lstat(argv[i], &stbuf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":106,"col":12,"offset":2016},"end":{"line":106,"col":16,"offset":2020},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_3","lines":"\tif (lstat(argv[i], &stbuf) != 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":107,"col":35,"offset":2075},"end":{"line":107,"col":39,"offset":2079},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_4","lines":"\t    fprintf(stderr, \"%s (%s)\\n\", argv[i], strerror(errno));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":109,"col":11,"offset":2137},"end":{"line":109,"col":15,"offset":2141},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_5","lines":"\t    nftw(argv[i], do_getcap, 20, FTW_PHYS);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","start":{"line":113,"col":16,"offset":2293},"end":{"line":113,"col":20,"offset":2297},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"6b0f8e4ae521a96228067de7a25a48b7d4d41e4344cfe4000baa56f71c7e754860d55f4d52b0c95f3f94e95157c42b0b6530d034bf96e19ac863c2cf7535b868_6","lines":"\t    do_getcap(argv[i], &stbuf, tflag, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":38,"col":13,"offset":945},"end":{"line":38,"col":17,"offset":949},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_0","lines":"    for ( ++argv; --argc > 0; ++argv ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":38,"col":33,"offset":965},"end":{"line":38,"col":37,"offset":969},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_1","lines":"    for ( ++argv; --argc > 0; ++argv ) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":43,"col":14,"offset":1029},"end":{"line":43,"col":18,"offset":1033},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_2","lines":"\tif (!strcmp(argv[0], \"--help\") || !strcmp(argv[0], \"--usage\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":43,"col":44,"offset":1059},"end":{"line":43,"col":48,"offset":1063},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_3","lines":"\tif (!strcmp(argv[0], \"--help\") || !strcmp(argv[0], \"--usage\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":45,"col":21,"offset":1117},"end":{"line":45,"col":25,"offset":1121},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_4","lines":"\t} else if (!strcmp(argv[0], \"--verbose\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":48,"col":21,"offset":1195},"end":{"line":48,"col":25,"offset":1199},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_5","lines":"\t} else if (!strcmp(argv[0], \"--ugly\") || !strcmp(argv[0], \"--legacy\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":48,"col":51,"offset":1225},"end":{"line":48,"col":55,"offset":1229},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_6","lines":"\t} else if (!strcmp(argv[0], \"--ugly\") || !strcmp(argv[0], \"--legacy\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":53,"col":8,"offset":1293},"end":{"line":53,"col":21,"offset":1306},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"2bf155e817966e15376b9a473703f86a432aa8b23ca0e8ee6213f6db2d1b632961fcdcfa604f108c6482e3e45a1a793e0f2b26085a3b8c3a1ea86ab6ed88c7bb_0","lines":"\tpid = atoi(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":53,"col":13,"offset":1298},"end":{"line":53,"col":17,"offset":1302},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_7","lines":"\tpid = atoi(argv[0]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":64,"col":42,"offset":1602},"end":{"line":64,"col":46,"offset":1606},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_8","lines":"\t\tprintf(\"Capabilities for '%s': %s\\n\", *argv, result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":66,"col":51,"offset":1699},"end":{"line":66,"col":55,"offset":1703},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_9","lines":"\t\tfprintf(stderr, \"Capabilities for `%s': %s\\n\", *argv, result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","start":{"line":68,"col":23,"offset":1750},"end":{"line":68,"col":27,"offset":1754},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec2849bb858d6dd3610f7a51ee4086576426831f5815de6fb6b962c38fb483c4896049254b6b297da88ab4144c054f00910688dc6c12fd3221b0504f1585b5d5_10","lines":"\t\tprintf(\"%s: %s\\n\", *argv, result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c","start":{"line":47,"col":30,"offset":1311},"end":{"line":47,"col":34,"offset":1315},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a0fe6ba886e6d96ebee880c436f02b28ef2db641c38e7c843d94b50c0b072771d795095fc4a85eff17f2e2a3119753322591293a57f8ac5ea82661fe0df6d25a_0","lines":"    new_caps = cap_from_text(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c","start":{"line":60,"col":5,"offset":1671},"end":{"line":60,"col":28,"offset":1694},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"v"},"$2":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"p"},"$FUN":{"start":{"line":60,"col":5,"offset":1671},"end":{"line":60,"col":11,"offset":1677},"abstract_content":"execvp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"81dea8ec7c15b22d1141219398292f309d144471015e6e13310bc327fee6797429626cd2de9b15a084172cbf6bdc5aaad5651f72eacb2e2466be343d6a44d7a2_0","lines":"    execvp(argv[2], argv+2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c","start":{"line":60,"col":12,"offset":1678},"end":{"line":60,"col":16,"offset":1682},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a0fe6ba886e6d96ebee880c436f02b28ef2db641c38e7c843d94b50c0b072771d795095fc4a85eff17f2e2a3119753322591293a57f8ac5ea82661fe0df6d25a_1","lines":"    execvp(argv[2], argv+2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c","start":{"line":60,"col":21,"offset":1687},"end":{"line":60,"col":25,"offset":1691},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a0fe6ba886e6d96ebee880c436f02b28ef2db641c38e7c843d94b50c0b072771d795095fc4a85eff17f2e2a3119753322591293a57f8ac5ea82661fe0df6d25a_2","lines":"    execvp(argv[2], argv+2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":40,"col":10,"offset":1112},"end":{"line":40,"col":39,"offset":1141},"extra":{"metavars":{"$FUN":{"start":{"line":40,"col":10,"offset":1112},"end":{"line":40,"col":14,"offset":1116},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78b41b183dd535c10df6e2f952ee52f32c62c3396f9d0630193535d94d59c90a11aac9cda7ed9378870b08e8ae18850c777650b4bc142aeac2bee28fdf5433be_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":40,"col":10,"offset":1112},"end":{"line":40,"col":39,"offset":1141},"extra":{"metavars":{"$FD":{"start":{"line":40,"col":15,"offset":1117},"end":{"line":40,"col":27,"offset":1129},"abstract_content":"STDIN_FILENO"},"$BUF":{"start":{"line":40,"col":29,"offset":1131},"end":{"line":40,"col":35,"offset":1137},"abstract_content":"buffer"},"$LEN":{"start":{"line":40,"col":37,"offset":1139},"end":{"line":40,"col":38,"offset":1140},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6a79845c52a554c9e058863692667a14563d0ec31baa235f97fabd35867e9464fd1f40c3f9078622526bcf4e54e6099888855ae68d058ed137abfb3f236eb40d_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":78,"col":17,"offset":1643},"end":{"line":78,"col":21,"offset":1647},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76241a58ac76ab58e574630591fdde613b7d3b28c5f0349ee18d439dd680e623be6b626ba4a28364e89830455aa615a800a0c5c99a7a83e25775826af448cd66_0","lines":"\tif (!strcmp(*++argv,\"-q\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":82,"col":15,"offset":1705},"end":{"line":82,"col":19,"offset":1709},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76241a58ac76ab58e574630591fdde613b7d3b28c5f0349ee18d439dd680e623be6b626ba4a28364e89830455aa615a800a0c5c99a7a83e25775826af448cd66_1","lines":"\tif (!strcmp(*argv,\"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":83,"col":33,"offset":1750},"end":{"line":83,"col":37,"offset":1754},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76241a58ac76ab58e574630591fdde613b7d3b28c5f0349ee18d439dd680e623be6b626ba4a28364e89830455aa615a800a0c5c99a7a83e25775826af448cd66_2","lines":"\t    retval = read_caps(quiet, *argv, buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":88,"col":14,"offset":1834},"end":{"line":88,"col":18,"offset":1838},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76241a58ac76ab58e574630591fdde613b7d3b28c5f0349ee18d439dd680e623be6b626ba4a28364e89830455aa615a800a0c5c99a7a83e25775826af448cd66_3","lines":"\t    text = *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":110,"col":8,"offset":2189},"end":{"line":110,"col":21,"offset":2202},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"65b083d1dc33c829f1e5df4ab4314fb88f648c025ba77427a2ab4a3e288da40ee732b3d6ff4f6a3d3825c9e5f810f6ef66966db718755684cb8453f81e87b6c7_0","lines":"\tpid = atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","start":{"line":110,"col":16,"offset":2197},"end":{"line":110,"col":20,"offset":2201},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"76241a58ac76ab58e574630591fdde613b7d3b28c5f0349ee18d439dd680e623be6b626ba4a28364e89830455aa615a800a0c5c99a7a83e25775826af448cd66_4","lines":"\tpid = atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":46,"col":12,"offset":1288},"end":{"line":46,"col":38,"offset":1314},"extra":{"metavars":{"$FUN":{"start":{"line":46,"col":12,"offset":1288},"end":{"line":46,"col":16,"offset":1292},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"32af6b9ad1da92fc84e009b7672a901fb52e1c73b9d85ecd3ef00f39b32d9e9bebeacb032a34e0f1d2e4fc9ae50ddcc67580dad2fa9eb150e4f51e1d80b706e2_0","lines":"    while (read(fd, buf, sizeof(buf)) == -1 && errno == EINTR) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":72,"col":31,"offset":1776},"end":{"line":72,"col":35,"offset":1780},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_0","lines":"\tstruct passwd *pw = getpwnam(argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":74,"col":51,"offset":1848},"end":{"line":74,"col":55,"offset":1852},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_1","lines":"\t    fprintf(stderr, \"sucap: No such user: %s\\n\", argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":82,"col":30,"offset":1971},"end":{"line":82,"col":34,"offset":1975},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_2","lines":"\tstruct group *gr = getgrnam(argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":84,"col":52,"offset":2044},"end":{"line":84,"col":56,"offset":2048},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_3","lines":"\t    fprintf(stderr, \"sucap: No such group: %s\\n\", argv[2]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":91,"col":9,"offset":2152},"end":{"line":91,"col":29,"offset":2172},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"g"},"$FUN":{"start":{"line":91,"col":9,"offset":2152},"end":{"line":91,"col":16,"offset":2159},"abstract_content":"setpgid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d21a27c22c89ec9cef171a02ad0bdc9402f8dc25850afc60863431dec78627a1436ca5a45f12c9a8f6c3b35a4c28358ee408132580d7c56ab55ba8ff1285745f_0","lines":"    if (setpgid(0, getpid())) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":96,"col":9,"offset":2252},"end":{"line":96,"col":23,"offset":2266},"extra":{"metavars":{"$FUN":{"start":{"line":96,"col":9,"offset":2252},"end":{"line":96,"col":13,"offset":2256},"abstract_content":"pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"91b3dbf64b1b4d37f2964b810229314009dce9b97600afc40548c2671847bc823bd82b453b64fe4a60829537c68541b959271f1b6347fa2adcc59a048ed0135a_0","lines":"    if (pipe(pipe_fds)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":117,"col":11,"offset":2610},"end":{"line":117,"col":17,"offset":2616},"extra":{"metavars":{"$FUN":{"start":{"line":117,"col":11,"offset":2610},"end":{"line":117,"col":15,"offset":2614},"abstract_content":"fork"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a544a3956d1a640c9535dee508e2b865520b827ff765033641c239b6a57ba9a9559e3f6026b2ab3cd1873e158642b71d027db189e103e41cf5157a696552d57e_0","lines":"    pid = fork();","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":133,"col":19,"offset":2976},"end":{"line":133,"col":34,"offset":2991},"extra":{"metavars":{"$2":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"set"},"$FUN":{"start":{"line":133,"col":19,"offset":2976},"end":{"line":133,"col":28,"offset":2985},"abstract_content":"setgroups"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"308ce874ba8fd7e234465c519cf45b59638aff3b121001a8730a4d87b6d0b835bc5dd281d56fb366a38d85899de3b664d0e937f0f2581a4da0985cab492a7ba2_0","lines":"\tif (!getuid() && setgroups(0, 0)) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":139,"col":2,"offset":3113},"end":{"line":139,"col":20,"offset":3131},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"g"},"$FUN":{"start":{"line":139,"col":2,"offset":3113},"end":{"line":139,"col":10,"offset":3121},"abstract_content":"setregid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb20c7a2a06d445b886738e0951d3f44ee83147140b51cb8cb171598537f3720414f74e0c0bf55e5bf4e37eda3c30299b1f5c9c344272705932fa840318d7fd0_0","lines":"\tsetregid(gid, gid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":140,"col":2,"offset":3134},"end":{"line":140,"col":20,"offset":3152},"extra":{"metavars":{"$1":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"u"},"$FUN":{"start":{"line":140,"col":2,"offset":3134},"end":{"line":140,"col":10,"offset":3142},"abstract_content":"setreuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"96773fdcb0e2c6fb7ad41366467bb31f6c5fc88ac4aacb49c472374628e8c3d8fda094aefe0e35f43c22d5876aba66f9dff3bb3a6b1b7f2c5a1343a96d2d7f86_0","lines":"\tsetreuid(uid, uid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":175,"col":2,"offset":3978},"end":{"line":175,"col":25,"offset":4001},"extra":{"metavars":{"$1":{"start":{"line":2,"col":2,"offset":4},"end":{"line":2,"col":3,"offset":5},"abstract_content":"v"},"$2":{"start":{"line":2,"col":3,"offset":5},"end":{"line":2,"col":4,"offset":6},"abstract_content":"p"},"$FUN":{"start":{"line":175,"col":2,"offset":3978},"end":{"line":175,"col":8,"offset":3984},"abstract_content":"execvp"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1eef10739e28825f5c0f3f5269227e94fb824db2286a67462e1948379d9b74e7580b1536a446db28a4db5f89362069eb7dc6e98f2bf9763c3dc436fae90ad6cc_0","lines":"\texecvp(argv[3], argv+3);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":175,"col":9,"offset":3985},"end":{"line":175,"col":13,"offset":3989},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_4","lines":"\texecvp(argv[3], argv+3);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","start":{"line":175,"col":18,"offset":3994},"end":{"line":175,"col":22,"offset":3998},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1e8e0797c615eaac3f072b0cb7492f2b03f7a57ce3816ea4c17cb01df7beef9d8588233a35c19fd9df241adf7dd13c4780da9916a7d69a932568b00b96e808b7_5","lines":"\texecvp(argv[3], argv+3);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":54,"col":10,"offset":1231},"end":{"line":54,"col":39,"offset":1260},"extra":{"metavars":{"$FUN":{"start":{"line":54,"col":10,"offset":1231},"end":{"line":54,"col":14,"offset":1235},"abstract_content":"read"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ddec87d3662598cf444dde9be79d2fe00c8c5025c4233b1944ba51783525b2e3b0450ce20aca69db614f6d28d9b9a3bad3cdb566892d75108bcb725ebaa6119d_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":54,"col":10,"offset":1231},"end":{"line":54,"col":39,"offset":1260},"extra":{"metavars":{"$FD":{"start":{"line":54,"col":15,"offset":1236},"end":{"line":54,"col":27,"offset":1248},"abstract_content":"STDIN_FILENO"},"$BUF":{"start":{"line":54,"col":29,"offset":1250},"end":{"line":54,"col":35,"offset":1256},"abstract_content":"buffer"},"$LEN":{"start":{"line":54,"col":37,"offset":1258},"end":{"line":54,"col":38,"offset":1259},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7f156f7ad60f88da7fa9b7fe1a81632ca01eb38c47a629c1ca591a1e50bcbc7ff25bc2fbf333fa3c8d6e4d33d0feaf6cb3692e777f18cdd8be0c938a6310699a_0","lines":"\tint j = read(STDIN_FILENO, buffer, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":101,"col":17,"offset":2019},"end":{"line":101,"col":21,"offset":2023},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_0","lines":"\tif (!strcmp(*++argv, \"-q\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":105,"col":15,"offset":2082},"end":{"line":105,"col":19,"offset":2086},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_1","lines":"\tif (!strcmp(*argv, \"-v\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":109,"col":15,"offset":2146},"end":{"line":109,"col":19,"offset":2150},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_2","lines":"\tif (!strcmp(*argv, \"-n\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":115,"col":23,"offset":2304},"end":{"line":115,"col":36,"offset":2317},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"b5af08ed630f740d00d0b9f0078a43934eb9f8b71104ad1c72d59f687d4287bda031aacba60c82d9666f709bd01868ce99b97b21153cf158127e47d746f3b250_0","lines":"\t    rootid = (uid_t) atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":115,"col":31,"offset":2312},"end":{"line":115,"col":35,"offset":2316},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_3","lines":"\t    rootid = (uid_t) atoi(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":117,"col":49,"offset":2392},"end":{"line":117,"col":53,"offset":2396},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_4","lines":"\t\tfprintf(stderr, \"invalid rootid!=0 of '%s'\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":123,"col":15,"offset":2450},"end":{"line":123,"col":19,"offset":2454},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_5","lines":"\tif (!strcmp(*argv, \"-r\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":126,"col":19,"offset":2512},"end":{"line":126,"col":23,"offset":2516},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_6","lines":"\t    if (!strcmp(*argv,\"-\")) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":127,"col":30,"offset":2554},"end":{"line":127,"col":34,"offset":2558},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_7","lines":"\t\tretval = read_caps(quiet, *argv, buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":132,"col":11,"offset":2639},"end":{"line":132,"col":15,"offset":2643},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_8","lines":"\t\ttext = *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":168,"col":36,"offset":3264},"end":{"line":168,"col":40,"offset":3268},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_9","lines":"\t    cap_on_file = cap_get_file(*++argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":183,"col":43,"offset":3666},"end":{"line":183,"col":47,"offset":3670},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_10","lines":"\t\t    printf(\"%s differs in [%s%s%s]\\n\", *argv,","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":191,"col":23,"offset":3888},"end":{"line":191,"col":27,"offset":3892},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_11","lines":"\t\tprintf(\"%s: OK\\n\", *argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":212,"col":31,"offset":4382},"end":{"line":212,"col":35,"offset":4386},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_12","lines":"\t    retval = cap_set_file(*++argv, cap_d);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","start":{"line":238,"col":4,"offset":5159},"end":{"line":238,"col":8,"offset":5163},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"38a6e3529f561ef1c3e720846158f2edbf5ac6f926dbb6e77ec2ff31e293201e834d9f9d76cf6c2dc8d64d073995cc2a1ea9bc14cf121a87f035e6f8accb9a39_13","lines":"\t\t\targv[0], strerror(oerrno));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":28,"offset":27}}]],"message":"Syntax error at line /home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c:20:\n `#include \"cap_names.list.h\"` was unexpected","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","spans":[{"file":"/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","start":{"line":20,"col":1,"offset":0},"end":{"line":20,"col":28,"offset":27}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Avoid-sys-capability.h-on-build-architecture.patch/libcap/_makenames.c","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":28,"offset":27}}]],"message":"Syntax error at line /home/capstone/Desktop/root/libcap2-2.32/.pc/Avoid-sys-capability.h-on-build-architecture.patch/libcap/_makenames.c:21:\n `#include \"cap_names.list.h\"` was unexpected","path":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Avoid-sys-capability.h-on-build-architecture.patch/libcap/_makenames.c","spans":[{"file":"/home/capstone/Desktop/root/libcap2-2.32/.pc/Avoid-sys-capability.h-on-build-architecture.patch/libcap/_makenames.c","start":{"line":21,"col":1,"offset":0},"end":{"line":21,"col":28,"offset":27}}]},{"code":3,"level":"warn","type":"Syntax error","message":"Syntax error at line /home/capstone/Desktop/root/libcap2-2.32/libcap/cap_names.list.h:1:\n `{\"cap_chown\",0},\n{\"cap_dac_override\",1},\n{\"cap_dac_read_search\",2},\n{\"cap_fowner\",3},\n{\"cap_fsetid\",4},\n{\"cap_kill\",5},\n{\"cap_setgid\",6},\n{\"cap_setuid\",7},\n{\"cap_setpcap\",8},\n{\"cap_linux_immutable\",9},\n{\"cap_net_bind_service\",10},\n{\"cap_net_broadcast\",11},\n{\"cap_net_admin\",12},\n{\"cap_net_raw\",13},\n{\"cap_ipc_lock\",14},\n{\"cap_ipc_owner\",15},\n{\"cap_sys_module\",16},\n{\"cap_sys_rawio\",17},\n{\"cap_sys_chroot\",18},\n{\"cap_sys_ptrace\",19},\n{\"cap_sys_pacct\",20},\n{\"cap_sys_admin\",21},\n{\"cap_sys_boot\",22},\n{\"cap_sys_nice\",23},\n{\"cap_sys_resource\",24},\n{\"cap_sys_time\",25},\n{\"cap_sys_tty_config\",26},\n{\"cap_mknod\",27},\n{\"cap_lease\",28},\n{\"cap_audit_write\",29},\n{\"cap_audit_control\",30},\n{\"cap_setfcap\",31},\n{\"cap_mac_override\",32},\n{\"cap_mac_admin\",33},\n{\"cap_syslog\",34},\n{\"cap_wake_alarm\",35},\n{\"cap_block_suspend\",36},\n{\"cap_audit_read\",37},\n` was unexpected","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_names.list.h"},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":51,"col":1,"offset":0},"end":{"line":52,"col":55,"offset":112}},{"path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":159,"col":25,"offset":0},"end":{"line":159,"col":28,"offset":3}},{"path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":176,"col":25,"offset":0},"end":{"line":176,"col":28,"offset":3}}]],"message":"Syntax error at line /home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h:51:\n `# _LIBCAP_CAPABILITY_VERSION  _LINUX_CAPABILITY_VERSION_1\n# _LIBCAP_CAPABILITY_U32S     _LINUX_CAPABILITY_U32S_1` was unexpected","path":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","spans":[{"file":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":51,"col":1,"offset":0},"end":{"line":52,"col":55,"offset":112}},{"file":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":159,"col":25,"offset":0},"end":{"line":159,"col":28,"offset":3}},{"file":"/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","start":{"line":176,"col":25,"offset":0},"end":{"line":176,"col":28,"offset":3}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/libcap2-2.32/.pc/Avoid-sys-capability.h-on-build-architecture.patch/libcap/_makenames.c","/home/capstone/Desktop/root/libcap2-2.32/.pc/Spelling-fixes.patch/progs/capsh.c","/home/capstone/Desktop/root/libcap2-2.32/.pc/pam_cap-Honor-PAM_REINITIALIZE_CRED.patch/pam_cap/pam_cap.c","/home/capstone/Desktop/root/libcap2-2.32/.pc/setcap-error-message.patch/progs/setcap.c","/home/capstone/Desktop/root/libcap2-2.32/contrib/bug400591/bug.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_file.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_flag.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_names.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_names.list.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_proc.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_test.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/sys/capability.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/sys/psx_syscall.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/sys/securebits.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/uapi/linux/capability.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/uapi/linux/prctl.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/include/uapi/linux/securebits.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h","/home/capstone/Desktop/root/libcap2-2.32/libcap/psx.c","/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c","/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test.c","/home/capstone/Desktop/root/libcap2-2.32/pam_cap/test_pam_cap.c","/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c","/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c","/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c","/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c","/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c","/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c","/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c","/home/capstone/Desktop/root/libcap2-2.32/template.c"]},"interfile_languages_used":[],"skipped_rules":[]}