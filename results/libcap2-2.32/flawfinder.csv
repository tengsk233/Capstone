File,Line,Column,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c,92,5,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"    strcpy((char *) raw_data, old);",a7c7e42a5eccb5d1b47642f41c07f701d2530cfc723922354e6eeac78f32707b
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,378,9,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"    p = sprintf(buf, ""=%s%s%s"",",f127ad204a1cb1dfd1e85663c4f2e2ba4e47e6c41bf4c59cb5e4c99c3948d225
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,396,15,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	        p += sprintf(p, ""%s,"", this_cap_name);",b3010f7bef0fb692da5c9af984a67fe48b532beb3295eb0cc9f2bd9c13b1b9d2
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,403,11,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	    p += sprintf(p, ""+%s%s%s"",",efa2525143a386441b7c2272481bd462b02d06b00f04aea1eca5b665ae29b044
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,410,11,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	    p += sprintf(p, ""-%s%s%s"",",cc973dc7f6883ca654c74b86ddc54987a342d76812d9c71dbcf71632d3eaec7f
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,439,8,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		p += sprintf(p, ""%s,"", this_cap_name);",b3010f7bef0fb692da5c9af984a67fe48b532beb3295eb0cc9f2bd9c13b1b9d2
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,444,7,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"	p += sprintf(p, ""+%s%s%s"",",efa2525143a386441b7c2272481bd462b02d06b00f04aea1eca5b665ae29b044
/home/capstone/Desktop/root/libcap2-2.32/libcap/libcap.h,161,5,4,format,fprintf,"If format strings can be influenced by an attacker, they can be exploited (CWE-134)",Use a constant for the format specification,,CWE-134,"    fprintf(stderr, f, ## x); \",c7c4a8c92c5ef082014d905f77500768defdd992ae68425f8e7abc51dbd78200
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,392,3,4,buffer,sprintf,Does not check for buffer overflows (CWE-120),"Use sprintf_s, snprintf, or vsnprintf",,CWE-120,"		sprintf(ptr, ""%s %s+i"", text, argv[i]+6);",4ac6aa3c43b5e1f1ed6a8b0047c899451c3504249ff766279ce96d0be8b59b82
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,394,3,4,buffer,strcpy,Does not check for buffer overflows when copying to destination [MS-banned] (CWE-120),"Consider using snprintf, strcpy_s, or strlcpy (warning: strncpy easily misused)",,CWE-120,"		strcpy(ptr, text);",a48668544ac4f1a40c94f6a284e03d1a8f98aa121e5a89c79f39fd1dbfacd86b
/home/capstone/Desktop/root/libcap2-2.32/progs/old/execcap.c,60,5,4,shell,execvp,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"    execvp(argv[2], argv+2);",1b1fb48f3fe0b3d084f9714acf4c2aa1c87e803dcf40ed4bd8883d1da2347204
/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c,175,2,4,shell,execvp,This causes a new program to execute and is difficult to use safely (CWE-78),try using a library call that implements the same functionality if available,,CWE-78,"	execvp(argv[3], argv+3);",315094e1f15481d064d2105128744547bdfbad56ad10c6f60d073d329d85ee14
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,552,15,3,misc,chroot,"chroot can be very helpful, but is hard to use correctly (CWE-250, CWE-22)","Make sure the program immediately chdir(""/""), closes file descriptors, and drops root privileges, and that all necessary files (and no more!) are in the new root",,"CWE-250, CWE-22",	    status = chroot(argv[i]+9);,50af28d3351fad503ef73a61555e5ce427f5f98fb7003072ff934ba66de5058c
/home/capstone/Desktop/root/libcap2-2.32/progs/getcap.c,84,17,3,buffer,getopt,"Some older implementations do not protect against internal buffer overflows (CWE-120, CWE-20)","Check implementation on installation, or limit the size of all string inputs",,"CWE-120, CWE-20","    while ((c = getopt(argc, argv, ""rvhn"")) > 0) {",3a1c0c379bd7ad307524028885730b0546d9ee9cbdeb8cfb9f818aeb45e1c691
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c,119,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(result, cap_d, sizeof(*cap_d));",5d450e44eb2f805a408517f927727a3bfab7cc3ad7fc2af1e74bf20283182f8a
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_extint.c,56,5,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120),Make sure destination can always hold the source data,,CWE-120,"    memcpy(&result->magic, external_magic, CAP_EXT_MAGIC_SIZE);",d884efec7da131e9fd84ff1a051948f61a57164c83d17e81523fa20a7771a211
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,346,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[CAP_TEXT_SIZE+CAP_TEXT_BUFFER_ZONE];,55aed9eb6a4bf006c1acb2cf6d68d830ba023fec8fb73e893cf0f09625f7447c
/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c,80,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,"    char buffer[CAP_FILE_BUFFER_SIZE], *line;",472e5c9e1a9d2ac637559e3e3bfc8da9dd0f619981f1cb0149b650fc4781a995
/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c,90,16,2,misc,fopen,"Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362)",,,CWE-362,"    cap_file = fopen(source, ""r"");",976b593bd4e91eacffb4569b7f18c3b72cf2e503b8dbc0c959634dc3235deeda
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,32,12,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    static char string[8*sizeof(unsigned long) + 1];,b4f3626e37585c76ea8a77f01eb5ebf90f6b00625ad8abbd97fdbb4b48c5d954
/home/capstone/Desktop/root/libcap2-2.32/progs/getpcaps.c,53,8,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	pid = atoi(argv[0]);,91d2778bcce488faf766dd68984653a3f714fe7da90323ffafbcbe601480d932
/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c,66,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer[MAXCAP+1];,7959a70328e37d69523a8cf68381d98da513f820b9ecb5b76fa20e2eec4ac345
/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c,110,8,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	pid = atoi(*++argv);,2ac84bbd420c6bff18e6d5311d04751174ef011be9387a2eb6294839096f7414
/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c,45,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buf[1];,c86b2e2fbb2673105f218b8df7ea0e79535bfdf002f5b75bcd0f6e81012d9173
/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c,81,5,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120)","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length",,CWE-119!/CWE-120,    char buffer[MAXCAP+1];,7959a70328e37d69523a8cf68381d98da513f820b9ecb5b76fa20e2eec4ac345
/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c,115,23,2,integer,atoi,"Unless checked, the resulting number can exceed the expected range (CWE-190)","If source untrusted, check both minimum and maximum, even if the input had no minus sign (large numbers can roll over into negative number; consider saving to an unsigned value if that is intended)",,CWE-190,	    rootid = (uid_t) atoi(*++argv);,40d81ca20252978230227c3a37a18b6d2cda741351293b2b8a299a39889c7221
/home/capstone/Desktop/root/libcap2-2.32/libcap/_makenames.c,45,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	int n = strlen(list[i].name);,e2ad1e27222330f6f88094a4df1da41ba08a6830d026a33603b1bbd408179ecf
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c,85,40,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    raw_data = malloc( sizeof(__u32) + strlen(old) + 1 );,961fd394e2319726575a57ffde1c55eb22702cf893cc726ea175f5c139a9cae5
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_alloc.c,143,18,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	size_t length = strlen(data_p) + sizeof(__u32);,7b0411c15b23991e07d991b0aad1cc9a10c95c2b5a1a47bdd21c79e4c7afeb21
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,391,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	        if ((strlen(this_cap_name) + (p - buf)) > CAP_TEXT_SIZE) {,785993441e15fcf24e7a4164a82c1460617420c1002a0d38d5b023d3ac11c709
/home/capstone/Desktop/root/libcap2-2.32/libcap/cap_text.c,434,15,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	        if ((strlen(this_cap_name) + (p - buf)) > CAP_TEXT_SIZE) {,785993441e15fcf24e7a4164a82c1460617420c1002a0d38d5b023d3ac11c709
/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c,214,32,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,    ssize_t conf_caps_length = strlen(conf_caps);,12f68a68fee607e5e3f515866755f1777a7c811339fb272304b70623bda3295e
/home/capstone/Desktop/root/libcap2-2.32/pam_cap/pam_cap.c,275,10,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    if (strlen(token) < 4) {,e219a8a1320da1617dad99eea9fd9ad7dd383efa7c65b2dd45870260e966a442
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,98,20,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,"	       (unsigned) strlen(b), b);",bb4050d1de60b544cad925baa7faa6906de76ef286966c08389a5e9454f79cc8
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,386,24,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));,b4dc487c402e30581a373471e4a66de406139e066a65aea733ea88738cb55e3f
/home/capstone/Desktop/root/libcap2-2.32/progs/capsh.c,386,44,1,buffer,strlen,Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126),,,CWE-126,	    ptr = malloc(10 + strlen(argv[i]+6) + strlen(text));,b4dc487c402e30581a373471e4a66de406139e066a65aea733ea88738cb55e3f
/home/capstone/Desktop/root/libcap2-2.32/progs/old/setpcaps.c,40,10,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","	int j = read(STDIN_FILENO, buffer, i);",e13f29a1137636d28ac3652ac3f56ac03cf790ad18456c4d7ce9f571bd81f653
/home/capstone/Desktop/root/libcap2-2.32/progs/old/sucap.c,46,12,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","    while (read(fd, buf, sizeof(buf)) == -1 && errno == EINTR) {",1012c3ba50f36e6b3ec945fda60c5428c2cda4012bda205d265ba248cd0e5b84
/home/capstone/Desktop/root/libcap2-2.32/progs/setcap.c,54,10,1,buffer,read,"Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20)",,,"CWE-120, CWE-20","	int j = read(STDIN_FILENO, buffer, i);",e13f29a1137636d28ac3652ac3f56ac03cf790ad18456c4d7ce9f571bd81f653
