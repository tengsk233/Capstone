{"version":"1.99.0","results":[{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":41,"offset":2848},"extra":{"metavars":{"$RET":{"start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":28,"offset":2835},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":108,"col":31,"offset":2838},"end":{"line":108,"col":37,"offset":2844},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ef40d43091fb27222c8d59e181654b6b0bd7d98cd0a702d4e8549e16466e37b1008213bc62d1aff4ec85f1a7d64c48691ff6695d57d27ed8f33940a25b76757_0","lines":"      pe->specific_err_info = strdup (t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":93,"offset":3271},"extra":{"metavars":{"$FUN":{"start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":46,"offset":3224},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8bd465125f13b4d0b27731d0a11e052dd41024c078277b1dc41023c20e15066abca49458f7f8f389876da73a0fbf2db85b8cafd49c3ed1ceb1a1774d91644272_0","lines":"  prompt = GCR_PROMPT (gcr_system_prompt_open (pe->timeout ? pe->timeout : -1, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":98,"offset":3619},"extra":{"metavars":{"$RET":{"start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":32,"offset":3553},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":136,"col":35,"offset":3556},"end":{"line":136,"col":41,"offset":3562},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ef40d43091fb27222c8d59e181654b6b0bd7d98cd0a702d4e8549e16466e37b1008213bc62d1aff4ec85f1a7d64c48691ff6695d57d27ed8f33940a25b76757_1","lines":"          pe->specific_err_info = strdup (\"Timeout: the Gcr system prompter was already in use.\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":162,"col":7,"offset":4387},"end":{"line":162,"col":16,"offset":4396},"extra":{"metavars":{"$PTR":{"start":{"line":162,"col":13,"offset":4393},"end":{"line":162,"col":14,"offset":4394},"abstract_content":"p","propagated_value":{"svalue_start":{"line":153,"col":7,"offset":4196},"svalue_end":{"line":153,"col":30,"offset":4219},"svalue_abstract_content":"pinentry_get_title(pe)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f502e76edec303b4a1b079ee5316243e8802476f878227af7ce95f59e38ecf85f69a69a9a908924280fe4a56e7ae959ff3c1172973be09b789e03e689dfcdb25_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":215,"col":3,"offset":5791},"end":{"line":216,"col":47,"offset":5885},"extra":{"metavars":{"$FUN":{"start":{"line":215,"col":3,"offset":5791},"end":{"line":215,"col":11,"offset":5799},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"247d49f638c6405007f9d24fcc332836449d69fd0ed625d57f896385f284a127aeef8d3a224d236c863655e15059b09e531e69de8d053673dc586bbf947ffaa5_0","lines":"  snprintf (window_id, sizeof (window_id), \"%lu\",\n            (long unsigned int)pe->parent_wid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":68,"offset":6607},"extra":{"metavars":{"$RET":{"start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":28,"offset":6567},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":246,"col":31,"offset":6570},"end":{"line":246,"col":37,"offset":6576},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8ef40d43091fb27222c8d59e181654b6b0bd7d98cd0a702d4e8549e16466e37b1008213bc62d1aff4ec85f1a7d64c48691ff6695d57d27ed8f33940a25b76757_2","lines":"      pe->specific_err_info = strdup (\"Failed to create GMainLoop\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"56a083dbd217308899378b25cf2f15ef5d8c57fc15b81f314f3af0d117fb7da60c4576fe822b34038cfd1b8685fbc443ed45ee6367512d88cb4f0a1061ee2db0_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{"$FUN":{"start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":12,"offset":8959},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"db8886c6590d03dcd88d43c5a56e3fbb88173ccdc3a640f08849b415b122a0824669b55f5e5dc398920c3e44f1b1ae001d31e033d73cbb6f28bf9df1a8416708_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":492,"col":31,"offset":13924},"end":{"line":492,"col":71,"offset":13964},"extra":{"metavars":{"$FUN":{"start":{"line":492,"col":31,"offset":13924},"end":{"line":492,"col":53,"offset":13946},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8bd465125f13b4d0b27731d0a11e052dd41024c078277b1dc41023c20e15066abca49458f7f8f389876da73a0fbf2db85b8cafd49c3ed1ceb1a1774d91644272_1","lines":"  prompt = GCR_SYSTEM_PROMPT (gcr_system_prompt_open (0, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":521,"col":8,"offset":14702},"end":{"line":521,"col":43,"offset":14737},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":521,"col":8,"offset":14702},"end":{"line":521,"col":14,"offset":14708},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a7e4f5d96c76f26001cddcedfc4db789cbe2fd1b2b3a86b4036e8143b41f2338685f1c24afa18675082c345bb1098f513b6e291d29aa6fb4c73a70cbb08c2b93_0","lines":"  if (!getenv (\"DBUS_SESSION_BUS_ADDRESS\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","start":{"line":544,"col":30,"offset":15482},"end":{"line":544,"col":34,"offset":15486},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ba471ca9a3d7eb5a56eedd68394ce9b0823e877979217eb31b252040be616a3a7a919a11640cdefea8e6d230d29dd6de110baa8bd821ffdd210cc2703ea8fea1_0","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":41,"offset":2848},"extra":{"metavars":{"$RET":{"start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":28,"offset":2835},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":108,"col":31,"offset":2838},"end":{"line":108,"col":37,"offset":2844},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3fafd3b31f0bf3a91311dc37f865a9548491235fe7ac37fff840ff3b250bb4232526007915ead6028f13e135fbec10ebd11e7681516b51e078815015d1e676c_0","lines":"      pe->specific_err_info = strdup (t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":93,"offset":3271},"extra":{"metavars":{"$FUN":{"start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":46,"offset":3224},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3f2a337bbc27ce2eea26bd32081751756cbb1492f953346548190a8fa5f4d1e1617e3d58de64dacbd951890e112363f55fab601d72d37906952a18dab72e1f9e_0","lines":"  prompt = GCR_PROMPT (gcr_system_prompt_open (pe->timeout ? pe->timeout : -1, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":98,"offset":3619},"extra":{"metavars":{"$RET":{"start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":32,"offset":3553},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":136,"col":35,"offset":3556},"end":{"line":136,"col":41,"offset":3562},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3fafd3b31f0bf3a91311dc37f865a9548491235fe7ac37fff840ff3b250bb4232526007915ead6028f13e135fbec10ebd11e7681516b51e078815015d1e676c_1","lines":"          pe->specific_err_info = strdup (\"Timeout: the Gcr system prompter was already in use.\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":162,"col":7,"offset":4387},"end":{"line":162,"col":16,"offset":4396},"extra":{"metavars":{"$PTR":{"start":{"line":162,"col":13,"offset":4393},"end":{"line":162,"col":14,"offset":4394},"abstract_content":"p","propagated_value":{"svalue_start":{"line":153,"col":7,"offset":4196},"svalue_end":{"line":153,"col":30,"offset":4219},"svalue_abstract_content":"pinentry_get_title(pe)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f90bfad60e6b3a9f24fe9fedd9dde1560047cac8c3d4d7b8e58607e9088f308f5a8810ecc18cdf99c43eaaf1ee9b189c438b30c7792d620e276a9a050911cbba_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":215,"col":3,"offset":5791},"end":{"line":216,"col":47,"offset":5885},"extra":{"metavars":{"$FUN":{"start":{"line":215,"col":3,"offset":5791},"end":{"line":215,"col":11,"offset":5799},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8a843241d434e3fa9f01b058a51048d9d19fc557be693007579e692a31cc6e0bc3d6e20b1c858eaee757c7b5e91590292da6078752114782e39853e9a260e384_0","lines":"  snprintf (window_id, sizeof (window_id), \"%lu\",\n            (long unsigned int)pe->parent_wid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":68,"offset":6607},"extra":{"metavars":{"$RET":{"start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":28,"offset":6567},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":246,"col":31,"offset":6570},"end":{"line":246,"col":37,"offset":6576},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f3fafd3b31f0bf3a91311dc37f865a9548491235fe7ac37fff840ff3b250bb4232526007915ead6028f13e135fbec10ebd11e7681516b51e078815015d1e676c_2","lines":"      pe->specific_err_info = strdup (\"Failed to create GMainLoop\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"3d87ca81396edb72714dd66ef9dd875a4c0f484d10b741369d65524214503db565259bb84670287e682a96a12d56c8f24874c497c66104174570acfc6eae62c1_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{"$FUN":{"start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":12,"offset":8959},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5f039153a3d1573a1ec5b1ef3745bade9567e159ad501b586315cda4aaceaa5c22afa38845ba2c73243e84162bdcfd39b30b99a6e1ba5d147ac76df09c02cf67_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":492,"col":31,"offset":13925},"end":{"line":492,"col":71,"offset":13965},"extra":{"metavars":{"$FUN":{"start":{"line":492,"col":31,"offset":13925},"end":{"line":492,"col":53,"offset":13947},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3f2a337bbc27ce2eea26bd32081751756cbb1492f953346548190a8fa5f4d1e1617e3d58de64dacbd951890e112363f55fab601d72d37906952a18dab72e1f9e_1","lines":"  prompt = GCR_SYSTEM_PROMPT (gcr_system_prompt_open (0, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":521,"col":8,"offset":14703},"end":{"line":521,"col":43,"offset":14738},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":521,"col":8,"offset":14703},"end":{"line":521,"col":14,"offset":14709},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6a76f34bc5731e5c2bef7d1f1260ba787975d64051354c42a8730c2cedf1bf5d7741ffbba26aacc19c55035b7fc0eaecce734cb42d9ff2b2d8f45c22e7ffd0d5_0","lines":"  if (!getenv (\"DBUS_SESSION_BUS_ADDRESS\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","start":{"line":544,"col":30,"offset":15483},"end":{"line":544,"col":34,"offset":15487},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ba6cba7bd268eefc6dbab887260e7a33798293dd571da929c5a24f9894b4432b72ce6bb78f42a19c623b2c8042d6835844a4f48d385154f229d07a82330cc525_0","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":151,"col":11,"offset":4547},"end":{"line":151,"col":17,"offset":4553},"extra":{"metavars":{"$VAR":{"start":{"line":151,"col":11,"offset":4547},"end":{"line":151,"col":17,"offset":4553},"abstract_content":"status"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4c6c355b6fe6429495815fc3fe1391845a657bcee94bb40d7ca491e3353300d5fb515da795e6845ae9bb7b3d3c191bc23be7335723f6420316eead640deb062b_0","lines":"  switch (status) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":314,"col":2,"offset":9288},"end":{"line":314,"col":27,"offset":9313},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"96e4d3afbe5edcefd59172c94fc090bbd46dcb7bf2169243d88eb3d1af41febff3b53503ec3bd54811d65414351b300699d8a36313dd2900e0e569917253d1ef_0","lines":"\tstrcpy (pinentry->pin, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":314,"col":2,"offset":9288},"end":{"line":314,"col":27,"offset":9313},"extra":{"metavars":{"$FUN":{"start":{"line":314,"col":2,"offset":9288},"end":{"line":314,"col":8,"offset":9294},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7534f8538d350aaf4b4e4b41731a06f79f01c7bcc83be6ffb0020e624463b58f6b886052b9206fa8f211cb70c808783acb7d96069a30f381bfd6109d05bbaf5a_0","lines":"\tstrcpy (pinentry->pin, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":399,"col":7,"offset":11007},"end":{"line":399,"col":45,"offset":11045},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"96e4d3afbe5edcefd59172c94fc090bbd46dcb7bf2169243d88eb3d1af41febff3b53503ec3bd54811d65414351b300699d8a36313dd2900e0e569917253d1ef_1","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":399,"col":7,"offset":11007},"end":{"line":399,"col":45,"offset":11045},"extra":{"metavars":{"$FUN":{"start":{"line":399,"col":7,"offset":11007},"end":{"line":399,"col":13,"offset":11013},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7534f8538d350aaf4b4e4b41731a06f79f01c7bcc83be6ffb0020e624463b58f6b886052b9206fa8f211cb70c808783acb7d96069a30f381bfd6109d05bbaf5a_1","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":399,"col":7,"offset":11007},"end":{"line":399,"col":45,"offset":11045},"extra":{"metavars":{"$TYPE":{"start":{"line":375,"col":3,"offset":10465},"end":{"line":375,"col":7,"offset":10469},"abstract_content":"char"},"$LEN":{"start":{"line":375,"col":16,"offset":10478},"end":{"line":375,"col":18,"offset":10480},"abstract_content":"50"},"$FUN":{"start":{"line":399,"col":7,"offset":11007},"end":{"line":399,"col":13,"offset":11013},"abstract_content":"strcpy"},"$BUF":{"start":{"line":399,"col":14,"offset":11014},"end":{"line":399,"col":21,"offset":11021},"abstract_content":"textbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ccf07a6eefd873e7755142b242e3e9e3431fa6f31dd288ac864b3a6d3962d5a1a94126a65e0f768851e2b208a9aeecdb8d079ab4d3dffe456f200d8fb131684c_0","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":404,"col":7,"offset":11115},"end":{"line":404,"col":61,"offset":11169},"extra":{"metavars":{"$FUN":{"start":{"line":404,"col":7,"offset":11115},"end":{"line":404,"col":15,"offset":11123},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"277b840b093775cda922f378a6b456505490cb8596256f764e5c568be1ba8831ed7dc7ace705a23a8dfed8c2a8c865c6f46928428a6697c7c2e41fc1cb5f9ea0_0","lines":"      snprintf (textbuf, sizeof textbuf, \"(%d%%)\", -percent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":411,"col":7,"offset":11286},"end":{"line":411,"col":58,"offset":11337},"extra":{"metavars":{"$FUN":{"start":{"line":411,"col":7,"offset":11286},"end":{"line":411,"col":15,"offset":11294},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"277b840b093775cda922f378a6b456505490cb8596256f764e5c568be1ba8831ed7dc7ace705a23a8dfed8c2a8c865c6f46928428a6697c7c2e41fc1cb5f9ea0_1","lines":"      snprintf (textbuf, sizeof textbuf, \"%d%%\", percent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":470,"col":3,"offset":12997},"end":{"line":470,"col":70,"offset":13064},"extra":{"metavars":{"$EXPR1":{"start":{"line":470,"col":13,"offset":13007},"end":{"line":470,"col":49,"offset":13043},"abstract_content":"gtk_dialog_run(GTK_DIALOG(dialog))"},"$EXPR2":{"start":{"line":470,"col":53,"offset":13047},"end":{"line":470,"col":68,"offset":13062},"abstract_content":"GTK_RESPONSE_OK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c587fbb5f7657958d9cd30a9fb6cb366af46f238be699ed81b0ed3b8a8b230b2f2e097f75fad15f5a741c4e09740cec76367897836eafeb67b3694c7c6bacf1f_0","lines":"  result = (gtk_dialog_run (GTK_DIALOG (dialog)) == GTK_RESPONSE_OK);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":638,"col":7,"offset":17519},"end":{"line":638,"col":16,"offset":17528},"extra":{"metavars":{"$PTR":{"start":{"line":638,"col":13,"offset":17525},"end":{"line":638,"col":14,"offset":17526},"abstract_content":"p","propagated_value":{"svalue_start":{"line":631,"col":7,"offset":17339},"svalue_end":{"line":631,"col":36,"offset":17368},"svalue_abstract_content":"pinentry_get_title(pinentry)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c4206a1db4687606935397414091e9b16667a1404cdf7a77f0297de7903b879085ad5ab805e5a615d7e03318dded064002f28bc0fd7209d9bcfb71b633e6223e_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":951,"col":36,"offset":27250},"end":{"line":951,"col":40,"offset":27254},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ac6f3f2c400030a73ec9df81cb1a168fb7bb49673d195d5d9973bfdfa53df88ff39fbb5665b23d0ba8b039ae85d10aeadd6d761c04256db67b1c5ece75aaeb7d_0","lines":"  if (pinentry_have_display (argc, argv))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":953,"col":37,"offset":27299},"end":{"line":953,"col":41,"offset":27303},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ac6f3f2c400030a73ec9df81cb1a168fb7bb49673d195d5d9973bfdfa53df88ff39fbb5665b23d0ba8b039ae85d10aeadd6d761c04256db67b1c5ece75aaeb7d_1","lines":"      if (! gtk_init_check (&argc, &argv))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":965,"col":21,"offset":27569},"end":{"line":965,"col":25,"offset":27573},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ac6f3f2c400030a73ec9df81cb1a168fb7bb49673d195d5d9973bfdfa53df88ff39fbb5665b23d0ba8b039ae85d10aeadd6d761c04256db67b1c5ece75aaeb7d_2","lines":"  gtk_init (&argc, &argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","start":{"line":968,"col":30,"offset":27613},"end":{"line":968,"col":34,"offset":27617},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ac6f3f2c400030a73ec9df81cb1a168fb7bb49673d195d5d9973bfdfa53df88ff39fbb5665b23d0ba8b039ae85d10aeadd6d761c04256db67b1c5ece75aaeb7d_3","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/curses/pinentry-curses.c","start":{"line":39,"col":30,"offset":1155},"end":{"line":39,"col":34,"offset":1159},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2ce14750b9d2c7ef344f5acc3ea681f1f9475f27c45a2321215256fb42f962cc4600620024dd726a2e02b2b4b344e7a9afba0bb0f466ca589ca8aefc08bc31a8_0","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/emacs/pinentry-emacs.c","start":{"line":43,"col":30,"offset":1185},"end":{"line":43,"col":34,"offset":1189},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"f71c6a066aca810bf95ab97fe85b658ee1f689a981a8bb1cb4aa4afc34831c1056726016057be6ff7d85716d21627d13e6bcb62f57cedbfa30b6ef129b56ed9c_0","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":41,"offset":2848},"extra":{"metavars":{"$RET":{"start":{"line":108,"col":7,"offset":2814},"end":{"line":108,"col":28,"offset":2835},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":108,"col":31,"offset":2838},"end":{"line":108,"col":37,"offset":2844},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7cdc4837ee179c0e416dfedc24466ccccea5b7c96abcf8a7f476b166af2ded57e4543cb82957a77eb31d96e5dd5d5490d9d742ada0456426834b08c7d10ec3c2_0","lines":"      pe->specific_err_info = strdup (t);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":93,"offset":3271},"extra":{"metavars":{"$FUN":{"start":{"line":129,"col":24,"offset":3202},"end":{"line":129,"col":46,"offset":3224},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"100e2020e8648a6989743d69f3133a48de0b7831aabcb2320e0dd3923cec4a6d8d11952813187612ca9dd134c184799101aa62925237819097116b54d379bad0_0","lines":"  prompt = GCR_PROMPT (gcr_system_prompt_open (pe->timeout ? pe->timeout : -1, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":98,"offset":3619},"extra":{"metavars":{"$RET":{"start":{"line":136,"col":11,"offset":3532},"end":{"line":136,"col":32,"offset":3553},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":136,"col":35,"offset":3556},"end":{"line":136,"col":41,"offset":3562},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7cdc4837ee179c0e416dfedc24466ccccea5b7c96abcf8a7f476b166af2ded57e4543cb82957a77eb31d96e5dd5d5490d9d742ada0456426834b08c7d10ec3c2_1","lines":"          pe->specific_err_info = strdup (\"Timeout: the Gcr system prompter was already in use.\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":162,"col":7,"offset":4387},"end":{"line":162,"col":16,"offset":4396},"extra":{"metavars":{"$PTR":{"start":{"line":162,"col":13,"offset":4393},"end":{"line":162,"col":14,"offset":4394},"abstract_content":"p","propagated_value":{"svalue_start":{"line":153,"col":7,"offset":4196},"svalue_end":{"line":153,"col":30,"offset":4219},"svalue_abstract_content":"pinentry_get_title(pe)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3b9c43b492c4f130cfc9f76eae7b5c2d3803cdb3a8a873c946fcb472c9b3a373f1d7838e3282bc078764aad6f4ddd9ad95641957094f309ef258889fb6df8c65_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":215,"col":3,"offset":5791},"end":{"line":216,"col":47,"offset":5885},"extra":{"metavars":{"$FUN":{"start":{"line":215,"col":3,"offset":5791},"end":{"line":215,"col":11,"offset":5799},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1c6d8d3ca3dda801ee2af2fece75685e7c4f19f040adb8df134426d1acba1c322eaa95de0cfa331d6ba1a422bcf950f63f81f34eaaed85f03b24749b9b44efc6_0","lines":"  snprintf (window_id, sizeof (window_id), \"%lu\",\n            (long unsigned int)pe->parent_wid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":68,"offset":6607},"extra":{"metavars":{"$RET":{"start":{"line":246,"col":7,"offset":6546},"end":{"line":246,"col":28,"offset":6567},"abstract_content":"pe->->specific_err_info"},"$FUN":{"start":{"line":246,"col":31,"offset":6570},"end":{"line":246,"col":37,"offset":6576},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7cdc4837ee179c0e416dfedc24466ccccea5b7c96abcf8a7f476b166af2ded57e4543cb82957a77eb31d96e5dd5d5490d9d742ada0456426834b08c7d10ec3c2_2","lines":"      pe->specific_err_info = strdup (\"Failed to create GMainLoop\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"27917408196221c1c1e7665f4fed6d93e50ad14cdf50310e8e734131d3e72e358d3efa4d58a447bad9df5c25bd9e62649491d822de04577eb8dfe4054592c5fe_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":32,"offset":8979},"extra":{"metavars":{"$FUN":{"start":{"line":324,"col":6,"offset":8953},"end":{"line":324,"col":12,"offset":8959},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8dd1783048588a14b47488233784fb9e615e0e9a255e82c61b2277e43adb510f00f2ed44974e490c7da2d9efaf86783f370bc271acbd9bb54b0400bb2271e58c_0","lines":"\t    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":492,"col":31,"offset":13931},"end":{"line":492,"col":71,"offset":13971},"extra":{"metavars":{"$FUN":{"start":{"line":492,"col":31,"offset":13931},"end":{"line":492,"col":53,"offset":13953},"abstract_content":"gcr_system_prompt_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"100e2020e8648a6989743d69f3133a48de0b7831aabcb2320e0dd3923cec4a6d8d11952813187612ca9dd134c184799101aa62925237819097116b54d379bad0_1","lines":"  prompt = GCR_SYSTEM_PROMPT (gcr_system_prompt_open (0, NULL, &error));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":521,"col":8,"offset":14709},"end":{"line":521,"col":43,"offset":14744},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":521,"col":8,"offset":14709},"end":{"line":521,"col":14,"offset":14715},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4c271d18dc096e8724d0123370434f343fcea8771b6295c40ee5a3428f44e2678396a62d88bd2ef343b174d1467acacf1902f00ff2f78567276544477f42e6b8_0","lines":"  if (!getenv (\"DBUS_SESSION_BUS_ADDRESS\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","start":{"line":544,"col":30,"offset":15489},"end":{"line":544,"col":34,"offset":15493},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"00626c88fd9b8ed23556a45f5551ae385914a575e9e05e0e86485eb96f7186c3265904c54c03d839011b99fcaafa28d651760847df407e9e50c9ecaae39b7675_0","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":151,"col":11,"offset":4547},"end":{"line":151,"col":17,"offset":4553},"extra":{"metavars":{"$VAR":{"start":{"line":151,"col":11,"offset":4547},"end":{"line":151,"col":17,"offset":4553},"abstract_content":"status"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8f08f0c176cbad53c5a3a898f5d992d58abc8b74ea488089cd92649a8c0447921be1d2e63ce903d0a70d638dd4476b20b711c2f4f4cac82508f6db88a3fd9dc2_0","lines":"  switch (status) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":316,"col":2,"offset":9353},"end":{"line":316,"col":27,"offset":9378},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"577e07b98f2abe1812aefe54c0b4937936fa16ced7471f0f68bd503329bccd81ff1481a5c5c8b4328060efdc7c7892ade2cd41fbc0e5e490bf846e72cbf975a0_0","lines":"\tstrcpy (pinentry->pin, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":316,"col":2,"offset":9353},"end":{"line":316,"col":27,"offset":9378},"extra":{"metavars":{"$FUN":{"start":{"line":316,"col":2,"offset":9353},"end":{"line":316,"col":8,"offset":9359},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e74a94aa80feb875b824bf655d0821a6360de5ba817001d258245df1c323d6ca913bd0cd254c3451641dc59caf1c71c5b5a6e233916c7d5e530128acab8d73bd_0","lines":"\tstrcpy (pinentry->pin, s);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":401,"col":7,"offset":11072},"end":{"line":401,"col":45,"offset":11110},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"577e07b98f2abe1812aefe54c0b4937936fa16ced7471f0f68bd503329bccd81ff1481a5c5c8b4328060efdc7c7892ade2cd41fbc0e5e490bf846e72cbf975a0_1","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":401,"col":7,"offset":11072},"end":{"line":401,"col":45,"offset":11110},"extra":{"metavars":{"$FUN":{"start":{"line":401,"col":7,"offset":11072},"end":{"line":401,"col":13,"offset":11078},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e74a94aa80feb875b824bf655d0821a6360de5ba817001d258245df1c323d6ca913bd0cd254c3451641dc59caf1c71c5b5a6e233916c7d5e530128acab8d73bd_1","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":401,"col":7,"offset":11072},"end":{"line":401,"col":45,"offset":11110},"extra":{"metavars":{"$TYPE":{"start":{"line":377,"col":3,"offset":10530},"end":{"line":377,"col":7,"offset":10534},"abstract_content":"char"},"$LEN":{"start":{"line":377,"col":16,"offset":10543},"end":{"line":377,"col":18,"offset":10545},"abstract_content":"50"},"$FUN":{"start":{"line":401,"col":7,"offset":11072},"end":{"line":401,"col":13,"offset":11078},"abstract_content":"strcpy"},"$BUF":{"start":{"line":401,"col":14,"offset":11079},"end":{"line":401,"col":21,"offset":11086},"abstract_content":"textbuf"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ec90ab99633dd911298d4ccca8da695557fd0e0ef7fcbec7bbfacf17b0d9724e65a2e2826daed6cba5a063ed54e4c365af9fc85b41f7b82dd778d6b8e0fe8c0d_0","lines":"      strcpy(textbuf, QUALITYBAR_EMPTY_TEXT);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":406,"col":7,"offset":11180},"end":{"line":406,"col":61,"offset":11234},"extra":{"metavars":{"$FUN":{"start":{"line":406,"col":7,"offset":11180},"end":{"line":406,"col":15,"offset":11188},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ecef367a5e61bf106874271abdfce2db4c820c99dee8b3920728a773278eeb823d1112f9934598a8ddd3d28bd0e41341652a4340e42e95edbf5351eff51f4e74_0","lines":"      snprintf (textbuf, sizeof textbuf, \"(%d%%)\", -percent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":413,"col":7,"offset":11351},"end":{"line":413,"col":58,"offset":11402},"extra":{"metavars":{"$FUN":{"start":{"line":413,"col":7,"offset":11351},"end":{"line":413,"col":15,"offset":11359},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ecef367a5e61bf106874271abdfce2db4c820c99dee8b3920728a773278eeb823d1112f9934598a8ddd3d28bd0e41341652a4340e42e95edbf5351eff51f4e74_1","lines":"      snprintf (textbuf, sizeof textbuf, \"%d%%\", percent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":472,"col":3,"offset":13062},"end":{"line":472,"col":70,"offset":13129},"extra":{"metavars":{"$EXPR1":{"start":{"line":472,"col":13,"offset":13072},"end":{"line":472,"col":49,"offset":13108},"abstract_content":"gtk_dialog_run(GTK_DIALOG(dialog))"},"$EXPR2":{"start":{"line":472,"col":53,"offset":13112},"end":{"line":472,"col":68,"offset":13127},"abstract_content":"GTK_RESPONSE_OK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"35124abeb18b553daa912207ab7df6c427b58a986e96b6c38268e4131874894336358aeaaea07b268fcc16a35adf583a9313003b58ddd1354791a148096bf0c7_0","lines":"  result = (gtk_dialog_run (GTK_DIALOG (dialog)) == GTK_RESPONSE_OK);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":640,"col":7,"offset":17584},"end":{"line":640,"col":16,"offset":17593},"extra":{"metavars":{"$PTR":{"start":{"line":640,"col":13,"offset":17590},"end":{"line":640,"col":14,"offset":17591},"abstract_content":"p","propagated_value":{"svalue_start":{"line":633,"col":7,"offset":17404},"svalue_end":{"line":633,"col":36,"offset":17433},"svalue_abstract_content":"pinentry_get_title(pinentry)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"aab102ba04c5c7ff19d8c4a4e33e2fdbcc2bcb75527299762b8ab223d26de9c7c3dc022c12248ce08c82d9d80b097f70f0b77180b3cf3b48eb3c497c26a36048_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":953,"col":36,"offset":27315},"end":{"line":953,"col":40,"offset":27319},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"060007ebfcb2fe29512995fab715f8a1051c1e6924e3691eb9fccfed10e3d6c0afbef110f73bc972817d5a5ccbad41e486a4999810b69f65f8ed5faf5f671259_0","lines":"  if (pinentry_have_display (argc, argv))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":955,"col":37,"offset":27364},"end":{"line":955,"col":41,"offset":27368},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"060007ebfcb2fe29512995fab715f8a1051c1e6924e3691eb9fccfed10e3d6c0afbef110f73bc972817d5a5ccbad41e486a4999810b69f65f8ed5faf5f671259_1","lines":"      if (! gtk_init_check (&argc, &argv))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":967,"col":21,"offset":27634},"end":{"line":967,"col":25,"offset":27638},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"060007ebfcb2fe29512995fab715f8a1051c1e6924e3691eb9fccfed10e3d6c0afbef110f73bc972817d5a5ccbad41e486a4999810b69f65f8ed5faf5f671259_2","lines":"  gtk_init (&argc, &argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","start":{"line":970,"col":30,"offset":27678},"end":{"line":970,"col":34,"offset":27682},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"060007ebfcb2fe29512995fab715f8a1051c1e6924e3691eb9fccfed10e3d6c0afbef110f73bc972817d5a5ccbad41e486a4999810b69f65f8ed5faf5f671259_3","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":111,"col":3,"offset":3314},"end":{"line":111,"col":34,"offset":3345},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3943b53bb8a2a9fe009a803f28bbd887053d91df5ddbe120f9b2204ece7edf9df6d73e70a6940e919435989ed24a9a54d7d2a3c91c06db030d02fd74699866f2_0","lines":"  vfprintf (stderr, fmt, arg_ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":122,"col":3,"offset":3524},"end":{"line":122,"col":34,"offset":3555},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3943b53bb8a2a9fe009a803f28bbd887053d91df5ddbe120f9b2204ece7edf9df6d73e70a6940e919435989ed24a9a54d7d2a3c91c06db030d02fd74699866f2_1","lines":"  vfprintf (stderr, fmt, arg_ptr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":134,"col":3,"offset":3721},"end":{"line":135,"col":6,"offset":3783},"extra":{"metavars":{"$EXPR1":{"start":{"line":134,"col":8,"offset":3726},"end":{"line":134,"col":16,"offset":3734},"abstract_content":"p=string"},"$EXPR2":{"start":{"line":134,"col":18,"offset":3736},"end":{"line":134,"col":52,"offset":3770},"abstract_content":"*p&&isspace(*(unsigned char*p)"},"$EXPR3":{"start":{"line":134,"col":55,"offset":3773},"end":{"line":134,"col":58,"offset":3776},"abstract_content":"p++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"97c78047b507a97ffa8aba72c28337a18a16c9127a53393a5ec8d556ed2ee17f8dc5b5b675022f530e1034e9c0049fa6550caab3496b75b99366288668f624c8_0","lines":"  for (p=string; *p && isspace (*(unsigned char*)p) ; p++)\n    ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":334,"col":3,"offset":9491},"end":{"line":348,"col":6,"offset":9970},"extra":{"metavars":{"$EXPR1":{"start":{"line":334,"col":9,"offset":9497},"end":{"line":334,"col":19,"offset":9507},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":334,"col":23,"offset":9511},"end":{"line":334,"col":28,"offset":9516},"abstract_content":"1<<15"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b250fdcc49b368f30bd81a543aad430b8dc5cf4a2ece326036530f8ea76d4b7f67d8d5ba494b1cb06b5a7c657c64b98d217bf22fedc7ee41b624b5143caf5709_0","lines":"  if( !(arg->flags & (1<<15)) )\n    {\n      /* Initialize this instance. */\n      arg->internal.idx = 0;\n      arg->internal.last = NULL;\n      arg->internal.inarg = 0;\n      arg->internal.stopped = 0;\n      arg->internal.aliases = NULL;\n      arg->internal.cur_alias = NULL;\n      arg->internal.iio_list = NULL;\n      arg->err = 0;\n      arg->flags |= 1<<15; /* Mark as initialized.  */\n      if ( *arg->argc < 0 )\n        jnlib_log_bug (\"invalid argument for arg_parse\\n\");\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":422,"col":19,"offset":12579},"end":{"line":422,"col":45,"offset":12605},"extra":{"metavars":{"$FUN":{"start":{"line":422,"col":19,"offset":12579},"end":{"line":422,"col":32,"offset":12592},"abstract_content":"jnlib_xmalloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"6bb3616b4fa02ed9c5453d0e4ccdd9ad33b9cccc9b981ab570a69215cab3f97337cd994ab21567e5b563b013b6b4ceeb18809a730adb1aef086926146e93eb1b_0","lines":"    ALIAS_DEF a = jnlib_xmalloc( sizeof *a );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":460,"col":11,"offset":13554},"end":{"line":460,"col":20,"offset":13563},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":460,"col":11,"offset":13554},"end":{"line":460,"col":15,"offset":13558},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a4c87e437c9b64fe7d2f1058800e8ebadd8899a1cf816e1cc5dfc551356e2f189252e99d7f4e2939aa7b4a45056dc11846a6686a1e672ca9752397203a5d37f_0","lines":"      c = getc (fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":469,"col":15,"offset":13716},"end":{"line":469,"col":20,"offset":13721},"extra":{"metavars":{"$VAR":{"start":{"line":469,"col":15,"offset":13716},"end":{"line":469,"col":20,"offset":13721},"abstract_content":"state"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"8510b505cfbcaf458a91c69e6b854491f63d066e423ab7295ba55b54ffe2c73bd565c22384c704962f9b6b349a22915301bd88d13ec046fb01266330d6af4b63_0","lines":"      switch (state)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":504,"col":22,"offset":14514},"end":{"line":504,"col":59,"offset":14551},"extra":{"metavars":{"$FUN":{"start":{"line":504,"col":22,"offset":14514},"end":{"line":504,"col":34,"offset":14526},"abstract_content":"jnlib_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"864f7b30e48566398d0c7d3c2da1fbec0ae7a9cfe3f41d5008ce6125921ba8b580565776d8aa182c6556793c9ccb4f738d7854bc0344d3fdc96a7232dd0664bb_0","lines":"              item = jnlib_malloc (sizeof *item + namelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":507,"col":15,"offset":14618},"end":{"line":507,"col":40,"offset":14643},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"5c5e5fe7c8de9e6c40905fdee7a451f8bd529efd5bca6067b80d0e96fea5dfc08b43b22ca2509fc2e5539a8659ec6d8888b044fe2736302e2b94db884d04f282_0","lines":"              strcpy (item->name, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":507,"col":15,"offset":14618},"end":{"line":507,"col":40,"offset":14643},"extra":{"metavars":{"$FUN":{"start":{"line":507,"col":15,"offset":14618},"end":{"line":507,"col":21,"offset":14624},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f971af28cc8e272bd791e3f94afb3bf581c27a578db17bf927ac1cf6fc7524f497b93111ec545796e211186345166af38e319dca2ba11870dba42fc19ed6549d_0","lines":"              strcpy (item->name, name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":564,"col":10,"offset":16238},"end":{"line":564,"col":20,"offset":16248},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":564,"col":10,"offset":16238},"end":{"line":564,"col":16,"offset":16244},"abstract_content":"buflen"},"$SIGNED":{"start":{"line":564,"col":19,"offset":16247},"end":{"line":564,"col":20,"offset":16248},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"90b88dae4ce3e7b0f288b422e0faaa19c4976dfaff667ca716cd8ecc1ff3f7d6147ff05ca4c533ba6f34555c6b8175be629d8237273b1171770d2251380561e1_0","lines":"  size_t buflen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":576,"col":11,"offset":16476},"end":{"line":576,"col":20,"offset":16485},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"c"},"$FUN":{"start":{"line":576,"col":11,"offset":16476},"end":{"line":576,"col":15,"offset":16480},"abstract_content":"getc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5a4c87e437c9b64fe7d2f1058800e8ebadd8899a1cf816e1cc5dfc551356e2f189252e99d7f4e2939aa7b4a45056dc11846a6686a1e672ca9752397203a5d37f_1","lines":"      c = getc (fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":593,"col":15,"offset":16976},"end":{"line":621,"col":51,"offset":18206},"extra":{"metavars":{"$EXPR1":{"start":{"line":593,"col":20,"offset":16981},"end":{"line":593,"col":35,"offset":16996},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":593,"col":38,"offset":16999},"end":{"line":593,"col":57,"offset":17018},"abstract_content":"ARGPARSE_OPT_IGNORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"126adcae04570eafe8fdd83f329f2c6d02724fa9417bbe94a445be2a2e265a09807adbc8ea2766b9f817fbf5a9281407e944a9606218674b588f70fc39141d18_0","lines":"              if ((opts[idx].flags & ARGPARSE_OPT_IGNORE))\n                {\n                  state = i = 0;\n                  continue;\n                }\n              else if (!opts[idx].short_opt )\n                {\n                  if (!strcmp (keyword, \"ignore-invalid-option\"))\n                    {\n                      /* No argument - ignore this meta option.  */\n                      state = i = 0;\n                      continue;\n                    }\n                  else if (ignore_invalid_option_p (arg, keyword))\n                    {\n                      /* This invalid option is in the iio list.  */\n                      state = i = 0;\n                      continue;\n                    }\n                  arg->r_opt = ((opts[idx].flags & ARGPARSE_OPT_COMMAND)\n                                ? ARGPARSE_INVALID_COMMAND\n                                : ARGPARSE_INVALID_OPTION);\n                }\n              else if (!(opts[idx].flags & ARGPARSE_TYPE_MASK))\n                arg->r_type = 0; /* Does not take an arg. */\n              else if ((opts[idx].flags & ARGPARSE_OPT_OPTIONAL) )\n                arg->r_type = 0; /* Arg is optional.  */\n              else\n                arg->r_opt = ARGPARSE_MISSING_ARG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":616,"col":20,"offset":17907},"end":{"line":621,"col":51,"offset":18206},"extra":{"metavars":{"$EXPR1":{"start":{"line":616,"col":26,"offset":17913},"end":{"line":616,"col":41,"offset":17928},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":616,"col":44,"offset":17931},"end":{"line":616,"col":62,"offset":17949},"abstract_content":"ARGPARSE_TYPE_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"546f34726effefbcd26971c34726ebf47d19b3c9d860b34a01f5a80ea4a3124fde5d853ea4e9430789846c569fcad6fe2062dfb230d77163169d00c5079751f1_0","lines":"              else if (!(opts[idx].flags & ARGPARSE_TYPE_MASK))\n                arg->r_type = 0; /* Does not take an arg. */\n              else if ((opts[idx].flags & ARGPARSE_OPT_OPTIONAL) )\n                arg->r_type = 0; /* Arg is optional.  */\n              else\n                arg->r_opt = ARGPARSE_MISSING_ARG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":618,"col":20,"offset":18032},"end":{"line":621,"col":51,"offset":18206},"extra":{"metavars":{"$EXPR1":{"start":{"line":618,"col":25,"offset":18037},"end":{"line":618,"col":40,"offset":18052},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":618,"col":43,"offset":18055},"end":{"line":618,"col":64,"offset":18076},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1206db5f3c44630eb698534def013a265831b43edef5a0b07afc7fd9bf1c8b9e374a787af71861dc03749145bffd7a08aab34e4eb078ee164a8f24293d5d1235_0","lines":"              else if ((opts[idx].flags & ARGPARSE_OPT_OPTIONAL) )\n                arg->r_type = 0; /* Arg is optional.  */\n              else\n                arg->r_opt = ARGPARSE_MISSING_ARG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":630,"col":20,"offset":18419},"end":{"line":635,"col":51,"offset":18721},"extra":{"metavars":{"$EXPR1":{"start":{"line":630,"col":26,"offset":18425},"end":{"line":630,"col":41,"offset":18440},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":630,"col":44,"offset":18443},"end":{"line":630,"col":62,"offset":18461},"abstract_content":"ARGPARSE_TYPE_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"546f34726effefbcd26971c34726ebf47d19b3c9d860b34a01f5a80ea4a3124fde5d853ea4e9430789846c569fcad6fe2062dfb230d77163169d00c5079751f1_1","lines":"              else if (!(opts[idx].flags & ARGPARSE_TYPE_MASK))\n                arg->r_type = 0; /* Does not take an arg. */\n              else if ((opts[idx].flags & ARGPARSE_OPT_OPTIONAL))\n                arg->r_type = 0; /* No optional argument. */\n              else\n                arg->r_opt = ARGPARSE_MISSING_ARG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":632,"col":20,"offset":18544},"end":{"line":635,"col":51,"offset":18721},"extra":{"metavars":{"$EXPR1":{"start":{"line":632,"col":25,"offset":18549},"end":{"line":632,"col":40,"offset":18564},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":632,"col":43,"offset":18567},"end":{"line":632,"col":64,"offset":18588},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1206db5f3c44630eb698534def013a265831b43edef5a0b07afc7fd9bf1c8b9e374a787af71861dc03749145bffd7a08aab34e4eb078ee164a8f24293d5d1235_1","lines":"              else if ((opts[idx].flags & ARGPARSE_OPT_OPTIONAL))\n                arg->r_type = 0; /* No optional argument. */\n              else\n                arg->r_opt = ARGPARSE_MISSING_ARG;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":668,"col":20,"offset":19637},"end":{"line":698,"col":18,"offset":20663},"extra":{"metavars":{"$EXPR1":{"start":{"line":668,"col":26,"offset":19643},"end":{"line":668,"col":41,"offset":19658},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":668,"col":44,"offset":19661},"end":{"line":668,"col":62,"offset":19679},"abstract_content":"ARGPARSE_TYPE_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"546f34726effefbcd26971c34726ebf47d19b3c9d860b34a01f5a80ea4a3124fde5d853ea4e9430789846c569fcad6fe2062dfb230d77163169d00c5079751f1_2","lines":"              else if (!(opts[idx].flags & ARGPARSE_TYPE_MASK))\n                arg->r_opt = ARGPARSE_UNEXPECTED_ARG;\n              else\n                {\n                  char *p;\n\n                  if (!buffer)\n                    {\n                      keyword[i] = 0;\n                      buffer = jnlib_strdup (keyword);\n                      if (!buffer)\n                        arg->r_opt = ARGPARSE_OUT_OF_CORE;\n\t\t    }\n                  else\n                    buffer[i] = 0;\n\n                  if (buffer)\n                    {\n                      trim_spaces (buffer);\n                      p = buffer;\n                      if (*p == '\"')\n                        {\n                          /* Remove quotes. */\n                          p++;\n                          if (*p && p[strlen(p)-1] == '\\\"' )\n                            p[strlen(p)-1] = 0;\n                        }\n                      if (!set_opt_arg (arg, opts[idx].flags, p))\n                        jnlib_free(buffer);\n                    }\n                }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":692,"col":37,"offset":20415},"end":{"line":692,"col":51,"offset":20429},"extra":{"metavars":{"$STR":{"start":{"line":692,"col":37,"offset":20415},"end":{"line":692,"col":38,"offset":20416},"abstract_content":"p"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64e4f296c1178e9b59eb6fa55529beb864723ad30d13e07013cd4805b54ca85d1ec70f744176277afce24c329d192fe711428d101affebfc46f5b90810e6cceb_0","lines":"                          if (*p && p[strlen(p)-1] == '\\\"' )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":693,"col":29,"offset":20468},"end":{"line":693,"col":43,"offset":20482},"extra":{"metavars":{"$STR":{"start":{"line":693,"col":29,"offset":20468},"end":{"line":693,"col":30,"offset":20469},"abstract_content":"p"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64e4f296c1178e9b59eb6fa55529beb864723ad30d13e07013cd4805b54ca85d1ec70f744176277afce24c329d192fe711428d101affebfc46f5b90810e6cceb_1","lines":"                            p[strlen(p)-1] = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":713,"col":12,"offset":21028},"end":{"line":829,"col":10,"offset":24603},"extra":{"metavars":{"$COND":{"start":{"line":713,"col":16,"offset":21032},"end":{"line":713,"col":27,"offset":21043},"abstract_content":"state==-1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"74ee2b61d685604321bbbf6a1018accd15762ed1b986e5a893cf57e7d9ec47bfe5c40888869b3ece02bb83cfdbdb65871cfd26c006b51a0cbef0587fd7ea35c3_0","lines":"      else if (state == -1)\n        ; /* Skip. */\n      else if (state == 0 && isascii (c) && isspace(c))\n        ; /* Skip leading white space.  */\n      else if (state == 0 && c == '#' )\n        state = 1;\t/* Start of a comment.  */\n      else if (state == 1)\n        ; /* Skip comments. */\n      else if (state == 2 && isascii (c) && isspace(c))\n        {\n          /* Check keyword.  */\n          keyword[i] = 0;\n          for (i=0; opts[i].short_opt; i++ )\n            if (opts[i].long_opt && !strcmp (opts[i].long_opt, keyword))\n              break;\n          idx = i;\n          arg->r_opt = opts[idx].short_opt;\n          if ((opts[idx].flags & ARGPARSE_OPT_IGNORE))\n            {\n              state = 1; /* Process like a comment.  */\n            }\n          else if (!opts[idx].short_opt)\n            {\n              if (!strcmp (keyword, \"alias\"))\n                {\n                  in_alias = 1;\n                  state = 3;\n                }\n              else if (!strcmp (keyword, \"ignore-invalid-option\"))\n                {\n                  if (ignore_invalid_option_add (arg, fp))\n                    {\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                  state = i = 0;\n                  ++*lineno;\n                }\n              else if (ignore_invalid_option_p (arg, keyword))\n                state = 1; /* Process like a comment.  */\n              else\n                {\n                  arg->r_opt = ((opts[idx].flags & ARGPARSE_OPT_COMMAND)\n                                ? ARGPARSE_INVALID_COMMAND\n                                : ARGPARSE_INVALID_OPTION);\n                  state = -1; /* Skip rest of line and leave.  */\n                }\n            }\n          else\n            state = 3;\n        }\n      else if (state == 3)\n        {\n          /* Skip leading spaces of the argument.  */\n          if (!isascii (c) || !isspace(c))\n            {\n              i = 0;\n              keyword[i++] = c;\n              state = 4;\n            }\n        }\n      else if (state == 4)\n        {\n          /* Collect the argument. */\n          if (buffer)\n            {\n              if (i < buflen-1)\n                buffer[i++] = c;\n              else\n                {\n                  char *tmp;\n                  size_t tmplen = buflen + 50;\n\n                  tmp = jnlib_realloc (buffer, tmplen);\n                  if (tmp)\n                    {\n                      buflen = tmplen;\n                      buffer = tmp;\n                      buffer[i++] = c;\n                    }\n                  else\n                    {\n                      jnlib_free (buffer);\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                }\n            }\n          else if (i < DIM(keyword)-1)\n            keyword[i++] = c;\n          else\n            {\n              size_t tmplen = DIM(keyword) + 50;\n              buffer = jnlib_malloc (tmplen);\n              if (buffer)\n                {\n                  buflen = tmplen;\n                  memcpy(buffer, keyword, i);\n                  buffer[i++] = c;\n                }\n              else\n                {\n                  arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                  break;\n                }\n            }\n        }\n      else if (i >= DIM(keyword)-1)\n        {\n          arg->r_opt = ARGPARSE_KEYWORD_TOO_LONG;\n          state = -1; /* Skip rest of line and leave.  */\n        }\n      else\n        {\n          keyword[i++] = c;\n          state = 2;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":715,"col":12,"offset":21078},"end":{"line":829,"col":10,"offset":24603},"extra":{"metavars":{"$COND":{"start":{"line":715,"col":16,"offset":21082},"end":{"line":715,"col":55,"offset":21121},"abstract_content":"state==0&&isascii(c)&&isspace(c)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"574f19892df5be2ff5f1dbb9eb79c717dafd80e1508fb3c762794d7bc6276bb9e298341a9712bad4bdd8165cee4250a8c47de19ceb370746976bad99f252db11_0","lines":"      else if (state == 0 && isascii (c) && isspace(c))\n        ; /* Skip leading white space.  */\n      else if (state == 0 && c == '#' )\n        state = 1;\t/* Start of a comment.  */\n      else if (state == 1)\n        ; /* Skip comments. */\n      else if (state == 2 && isascii (c) && isspace(c))\n        {\n          /* Check keyword.  */\n          keyword[i] = 0;\n          for (i=0; opts[i].short_opt; i++ )\n            if (opts[i].long_opt && !strcmp (opts[i].long_opt, keyword))\n              break;\n          idx = i;\n          arg->r_opt = opts[idx].short_opt;\n          if ((opts[idx].flags & ARGPARSE_OPT_IGNORE))\n            {\n              state = 1; /* Process like a comment.  */\n            }\n          else if (!opts[idx].short_opt)\n            {\n              if (!strcmp (keyword, \"alias\"))\n                {\n                  in_alias = 1;\n                  state = 3;\n                }\n              else if (!strcmp (keyword, \"ignore-invalid-option\"))\n                {\n                  if (ignore_invalid_option_add (arg, fp))\n                    {\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                  state = i = 0;\n                  ++*lineno;\n                }\n              else if (ignore_invalid_option_p (arg, keyword))\n                state = 1; /* Process like a comment.  */\n              else\n                {\n                  arg->r_opt = ((opts[idx].flags & ARGPARSE_OPT_COMMAND)\n                                ? ARGPARSE_INVALID_COMMAND\n                                : ARGPARSE_INVALID_OPTION);\n                  state = -1; /* Skip rest of line and leave.  */\n                }\n            }\n          else\n            state = 3;\n        }\n      else if (state == 3)\n        {\n          /* Skip leading spaces of the argument.  */\n          if (!isascii (c) || !isspace(c))\n            {\n              i = 0;\n              keyword[i++] = c;\n              state = 4;\n            }\n        }\n      else if (state == 4)\n        {\n          /* Collect the argument. */\n          if (buffer)\n            {\n              if (i < buflen-1)\n                buffer[i++] = c;\n              else\n                {\n                  char *tmp;\n                  size_t tmplen = buflen + 50;\n\n                  tmp = jnlib_realloc (buffer, tmplen);\n                  if (tmp)\n                    {\n                      buflen = tmplen;\n                      buffer = tmp;\n                      buffer[i++] = c;\n                    }\n                  else\n                    {\n                      jnlib_free (buffer);\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                }\n            }\n          else if (i < DIM(keyword)-1)\n            keyword[i++] = c;\n          else\n            {\n              size_t tmplen = DIM(keyword) + 50;\n              buffer = jnlib_malloc (tmplen);\n              if (buffer)\n                {\n                  buflen = tmplen;\n                  memcpy(buffer, keyword, i);\n                  buffer[i++] = c;\n                }\n              else\n                {\n                  arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                  break;\n                }\n            }\n        }\n      else if (i >= DIM(keyword)-1)\n        {\n          arg->r_opt = ARGPARSE_KEYWORD_TOO_LONG;\n          state = -1; /* Skip rest of line and leave.  */\n        }\n      else\n        {\n          keyword[i++] = c;\n          state = 2;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":719,"col":12,"offset":21263},"end":{"line":829,"col":10,"offset":24603},"extra":{"metavars":{"$COND":{"start":{"line":719,"col":16,"offset":21267},"end":{"line":719,"col":26,"offset":21277},"abstract_content":"state==1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a7ba797dc3a397260d2259794b7312137bfaec551dd54b2a5b722fd66729cc089406cc91289498abac62eff5bfaff8a523367653b380196835a40985e0031a7c_0","lines":"      else if (state == 1)\n        ; /* Skip comments. */\n      else if (state == 2 && isascii (c) && isspace(c))\n        {\n          /* Check keyword.  */\n          keyword[i] = 0;\n          for (i=0; opts[i].short_opt; i++ )\n            if (opts[i].long_opt && !strcmp (opts[i].long_opt, keyword))\n              break;\n          idx = i;\n          arg->r_opt = opts[idx].short_opt;\n          if ((opts[idx].flags & ARGPARSE_OPT_IGNORE))\n            {\n              state = 1; /* Process like a comment.  */\n            }\n          else if (!opts[idx].short_opt)\n            {\n              if (!strcmp (keyword, \"alias\"))\n                {\n                  in_alias = 1;\n                  state = 3;\n                }\n              else if (!strcmp (keyword, \"ignore-invalid-option\"))\n                {\n                  if (ignore_invalid_option_add (arg, fp))\n                    {\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                  state = i = 0;\n                  ++*lineno;\n                }\n              else if (ignore_invalid_option_p (arg, keyword))\n                state = 1; /* Process like a comment.  */\n              else\n                {\n                  arg->r_opt = ((opts[idx].flags & ARGPARSE_OPT_COMMAND)\n                                ? ARGPARSE_INVALID_COMMAND\n                                : ARGPARSE_INVALID_OPTION);\n                  state = -1; /* Skip rest of line and leave.  */\n                }\n            }\n          else\n            state = 3;\n        }\n      else if (state == 3)\n        {\n          /* Skip leading spaces of the argument.  */\n          if (!isascii (c) || !isspace(c))\n            {\n              i = 0;\n              keyword[i++] = c;\n              state = 4;\n            }\n        }\n      else if (state == 4)\n        {\n          /* Collect the argument. */\n          if (buffer)\n            {\n              if (i < buflen-1)\n                buffer[i++] = c;\n              else\n                {\n                  char *tmp;\n                  size_t tmplen = buflen + 50;\n\n                  tmp = jnlib_realloc (buffer, tmplen);\n                  if (tmp)\n                    {\n                      buflen = tmplen;\n                      buffer = tmp;\n                      buffer[i++] = c;\n                    }\n                  else\n                    {\n                      jnlib_free (buffer);\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                }\n            }\n          else if (i < DIM(keyword)-1)\n            keyword[i++] = c;\n          else\n            {\n              size_t tmplen = DIM(keyword) + 50;\n              buffer = jnlib_malloc (tmplen);\n              if (buffer)\n                {\n                  buflen = tmplen;\n                  memcpy(buffer, keyword, i);\n                  buffer[i++] = c;\n                }\n              else\n                {\n                  arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                  break;\n                }\n            }\n        }\n      else if (i >= DIM(keyword)-1)\n        {\n          arg->r_opt = ARGPARSE_KEYWORD_TOO_LONG;\n          state = -1; /* Skip rest of line and leave.  */\n        }\n      else\n        {\n          keyword[i++] = c;\n          state = 2;\n        }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":730,"col":11,"offset":21646},"end":{"line":762,"col":23,"offset":22812},"extra":{"metavars":{"$EXPR1":{"start":{"line":730,"col":16,"offset":21651},"end":{"line":730,"col":31,"offset":21666},"abstract_content":"opts[idx].flags"},"$EXPR2":{"start":{"line":730,"col":34,"offset":21669},"end":{"line":730,"col":53,"offset":21688},"abstract_content":"ARGPARSE_OPT_IGNORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"126adcae04570eafe8fdd83f329f2c6d02724fa9417bbe94a445be2a2e265a09807adbc8ea2766b9f817fbf5a9281407e944a9606218674b588f70fc39141d18_1","lines":"          if ((opts[idx].flags & ARGPARSE_OPT_IGNORE))\n            {\n              state = 1; /* Process like a comment.  */\n            }\n          else if (!opts[idx].short_opt)\n            {\n              if (!strcmp (keyword, \"alias\"))\n                {\n                  in_alias = 1;\n                  state = 3;\n                }\n              else if (!strcmp (keyword, \"ignore-invalid-option\"))\n                {\n                  if (ignore_invalid_option_add (arg, fp))\n                    {\n                      arg->r_opt = ARGPARSE_OUT_OF_CORE;\n                      break;\n                    }\n                  state = i = 0;\n                  ++*lineno;\n                }\n              else if (ignore_invalid_option_p (arg, keyword))\n                state = 1; /* Process like a comment.  */\n              else\n                {\n                  arg->r_opt = ((opts[idx].flags & ARGPARSE_OPT_COMMAND)\n                                ? ARGPARSE_INVALID_COMMAND\n                                : ARGPARSE_INVALID_OPTION);\n                  state = -1; /* Skip rest of line and leave.  */\n                }\n            }\n          else\n            state = 3;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":784,"col":26,"offset":23340},"end":{"line":784,"col":46,"offset":23360},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":784,"col":26,"offset":23340},"end":{"line":784,"col":32,"offset":23346},"abstract_content":"tmplen"},"$SIGNED":{"start":{"line":784,"col":44,"offset":23358},"end":{"line":784,"col":46,"offset":23360},"abstract_content":"50"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d80f04f4fc90a54019c375e7ef427f30b6fc69ed0d7e71dfeb27979ccb044387d5151c74751756753b5b82c41a97bbc0dd2ec0c25cdc83697e3abd5d53584020_0","lines":"                  size_t tmplen = buflen + 50;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":786,"col":25,"offset":23387},"end":{"line":786,"col":55,"offset":23417},"extra":{"metavars":{"$FUN":{"start":{"line":786,"col":25,"offset":23387},"end":{"line":786,"col":38,"offset":23400},"abstract_content":"jnlib_realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5154696457157edd9d8b77e665a5da70d93629b713dadc0ae3236a3d83d9890767b2de0325c0d8502122b62e65446c6d38b53ae6bdb0420e07867c287f8a44ad_0","lines":"                  tmp = jnlib_realloc (buffer, tmplen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":805,"col":22,"offset":23951},"end":{"line":805,"col":48,"offset":23977},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":805,"col":22,"offset":23951},"end":{"line":805,"col":28,"offset":23957},"abstract_content":"tmplen"},"$SIGNED":{"start":{"line":805,"col":46,"offset":23975},"end":{"line":805,"col":48,"offset":23977},"abstract_content":"50"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d80f04f4fc90a54019c375e7ef427f30b6fc69ed0d7e71dfeb27979ccb044387d5151c74751756753b5b82c41a97bbc0dd2ec0c25cdc83697e3abd5d53584020_1","lines":"              size_t tmplen = DIM(keyword) + 50;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":806,"col":24,"offset":24002},"end":{"line":806,"col":45,"offset":24023},"extra":{"metavars":{"$FUN":{"start":{"line":806,"col":24,"offset":24002},"end":{"line":806,"col":36,"offset":24014},"abstract_content":"jnlib_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"864f7b30e48566398d0c7d3c2da1fbec0ae7a9cfe3f41d5008ce6125921ba8b580565776d8aa182c6556793c9ccb4f738d7854bc0344d3fdc96a7232dd0664bb_1","lines":"              buffer = jnlib_malloc (tmplen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":810,"col":19,"offset":24122},"end":{"line":810,"col":45,"offset":24148},"extra":{"metavars":{"$FUN":{"start":{"line":810,"col":19,"offset":24122},"end":{"line":810,"col":25,"offset":24128},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d2a2e6611b2dbf736b194fd9d76c3350ab5fbe4f44d0af86ea89d695424d03b2271475f5d10d1068878585b109f92a746cb13a541efc4296b5724b956cecdcbd_0","lines":"                  memcpy(buffer, keyword, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":810,"col":19,"offset":24122},"end":{"line":810,"col":45,"offset":24148},"extra":{"metavars":{"$DST":{"start":{"line":810,"col":26,"offset":24129},"end":{"line":810,"col":32,"offset":24135},"abstract_content":"buffer","propagated_value":{"svalue_start":{"line":806,"col":24,"offset":24002},"svalue_end":{"line":806,"col":45,"offset":24023},"svalue_abstract_content":"jnlib_malloc(tmplen)"}},"$SRC":{"start":{"line":810,"col":34,"offset":24137},"end":{"line":810,"col":41,"offset":24144},"abstract_content":"keyword"},"$LEN":{"start":{"line":810,"col":43,"offset":24146},"end":{"line":810,"col":44,"offset":24147},"abstract_content":"i"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d11de9dc0f7ea2c1b5a28fcad2ef5e54bf74c912885ef85f8c193ed81c3726875555218ffa20dfb129da0dc07b7f4405f42a03263ec6aebe24abe3139f076be8_0","lines":"                  memcpy(buffer, keyword, i);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":896,"col":3,"offset":26126},"end":{"line":896,"col":7,"offset":26130},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_0","lines":"  argv = *arg->argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":899,"col":3,"offset":26175},"end":{"line":903,"col":6,"offset":26309},"extra":{"metavars":{"$EXPR1":{"start":{"line":899,"col":25,"offset":26197},"end":{"line":899,"col":35,"offset":26207},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":899,"col":38,"offset":26210},"end":{"line":899,"col":56,"offset":26228},"abstract_content":"ARGPARSE_FLAG_ARG0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"94475407615ed5e803c40d2babf0ce9710c90a52d23dd2d7eec99423158f0f174df348b40f30763b7ba9cbec6a37d60086a8302f9ce2e2b402aa4710432ac2ac_0","lines":"  if (!idx && argc && !(arg->flags & ARGPARSE_FLAG_ARG0))\n    {\n      /* Skip the first argument.  */\n      argc--; argv++; idx++;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":902,"col":15,"offset":26289},"end":{"line":902,"col":19,"offset":26293},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_1","lines":"      argc--; argv++; idx++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":913,"col":8,"offset":26435},"end":{"line":913,"col":12,"offset":26439},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_2","lines":"  s = *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":916,"col":3,"offset":26470},"end":{"line":1130,"col":6,"offset":32520},"extra":{"metavars":{"$EXPR1":{"start":{"line":916,"col":33,"offset":26500},"end":{"line":916,"col":43,"offset":26510},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":916,"col":46,"offset":26513},"end":{"line":916,"col":63,"offset":26530},"abstract_content":"ARGPARSE_FLAG_ALL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"711b655a2612aa90f1578e655cb739675bc047de67e528219227f8a9f9229380b9060d6e94b810c34c786aed0ce19edaf359310faca4b7568a6bee1d0f5c662e_0","lines":"  if (arg->internal.stopped && (arg->flags & ARGPARSE_FLAG_ALL))\n    {\n      arg->r_opt = ARGPARSE_IS_ARG;  /* Not an option but an argument.  */\n      arg->r_type = 2;\n      arg->r.ret_str = s;\n      argc--; argv++; idx++; /* set to next one */\n    }\n  else if( arg->internal.stopped )\n    {\n      arg->r_opt = 0;\n      goto leave; /* Ready.  */\n    }\n  else if ( *s == '-' && s[1] == '-' )\n    {\n      /* Long option.  */\n      char *argpos;\n\n      arg->internal.inarg = 0;\n      if (!s[2] && !(arg->flags & ARGPARSE_FLAG_NOSTOP))\n        {\n          /* Stop option processing.  */\n          arg->internal.stopped = 1;\n          arg->flags |= ARGPARSE_FLAG_STOP_SEEN;\n          argc--; argv++; idx++;\n          goto next_one;\n\t}\n\n      argpos = strchr( s+2, '=' );\n      if ( argpos )\n        *argpos = 0;\n      i = find_long_option ( arg, opts, s+2 );\n      if ( argpos )\n        *argpos = '=';\n\n      if ( i < 0 && !strcmp ( \"help\", s+2) )\n        show_help (opts, arg->flags);\n      else if ( i < 0 && !strcmp ( \"version\", s+2) )\n        {\n          if (!(arg->flags & ARGPARSE_FLAG_NOVERSION))\n            {\n              show_version ();\n              exit(0);\n            }\n\t}\n      else if ( i < 0 && !strcmp( \"warranty\", s+2))\n        {\n          writestrings (0, strusage (16), \"\\n\", NULL);\n          exit (0);\n\t}\n      else if ( i < 0 && !strcmp( \"dump-options\", s+2) )\n        {\n          for (i=0; opts[i].short_opt; i++ )\n            {\n              if (opts[i].long_opt && !(opts[i].flags & ARGPARSE_OPT_IGNORE))\n                writestrings (0, \"--\", opts[i].long_opt, \"\\n\", NULL);\n\t    }\n          writestrings (0, \"--dump-options\\n--help\\n--version\\n--warranty\\n\",\n                        NULL);\n          exit (0);\n\t}\n\n      if ( i == -2 )\n        arg->r_opt = ARGPARSE_AMBIGUOUS_OPTION;\n      else if ( i == -1 )\n        {\n          arg->r_opt = ARGPARSE_INVALID_OPTION;\n          arg->r.ret_str = s+2;\n\t}\n      else\n        arg->r_opt = opts[i].short_opt;\n      if ( i < 0 )\n        ;\n      else if ( (opts[i].flags & ARGPARSE_TYPE_MASK) )\n        {\n          if ( argpos )\n            {\n              s2 = argpos+1;\n              if ( !*s2 )\n                s2 = NULL;\n\t    }\n          else\n            s2 = argv[1];\n          if ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              arg->r_type = ARGPARSE_TYPE_NONE; /* Argument is optional.  */\n\t    }\n          else if ( !s2 )\n            {\n              arg->r_opt = ARGPARSE_MISSING_ARG;\n\t    }\n          else if ( !argpos && *s2 == '-'\n                    && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              /* The argument is optional and the next seems to be an\n                 option.  We do not check this possible option but\n                 assume no argument */\n              arg->r_type = ARGPARSE_TYPE_NONE;\n\t    }\n          else\n            {\n              set_opt_arg (arg, opts[i].flags, s2);\n              if ( !argpos )\n                {\n                  argc--; argv++; idx++; /* Skip one.  */\n\t\t}\n\t    }\n\t}\n      else\n        {\n          /* Does not take an argument. */\n          if ( argpos )\n            arg->r_type = ARGPARSE_UNEXPECTED_ARG;\n          else\n            arg->r_type = 0;\n\t}\n      argc--; argv++; idx++; /* Set to next one.  */\n    }\n    else if ( (*s == '-' && s[1]) || arg->internal.inarg )\n      {\n        /* Short option.  */\n\tint dash_kludge = 0;\n\n\ti = 0;\n\tif ( !arg->internal.inarg )\n          {\n\t    arg->internal.inarg++;\n\t    if ( (arg->flags & ARGPARSE_FLAG_ONEDASH) )\n              {\n                for (i=0; opts[i].short_opt; i++ )\n                  if ( opts[i].long_opt && !strcmp (opts[i].long_opt, s+1))\n                    {\n                      dash_kludge = 1;\n                      break;\n\t\t    }\n              }\n          }\n\ts += arg->internal.inarg;\n\n\tif (!dash_kludge )\n          {\n\t    for (i=0; opts[i].short_opt; i++ )\n              if ( opts[i].short_opt == *s )\n                break;\n          }\n\n\tif ( !opts[i].short_opt && ( *s == 'h' || *s == '?' ) )\n          show_help (opts, arg->flags);\n\n\targ->r_opt = opts[i].short_opt;\n\tif (!opts[i].short_opt )\n          {\n\t    arg->r_opt = (opts[i].flags & ARGPARSE_OPT_COMMAND)?\n              ARGPARSE_INVALID_COMMAND:ARGPARSE_INVALID_OPTION;\n\t    arg->internal.inarg++; /* Point to the next arg.  */\n\t    arg->r.ret_str = s;\n          }\n\telse if ( (opts[i].flags & ARGPARSE_TYPE_MASK) )\n          {\n\t    if ( s[1] && !dash_kludge )\n              {\n\t\ts2 = s+1;\n\t\tset_opt_arg (arg, opts[i].flags, s2);\n              }\n\t    else\n              {\n\t\ts2 = argv[1];\n\t\tif ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse if ( !s2 )\n                  {\n\t\t    arg->r_opt = ARGPARSE_MISSING_ARG;\n                  }\n\t\telse if ( *s2 == '-' && s2[1]\n                          && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    /* The argument is optional and the next seems to\n\t               be an option.  We do not check this possible\n\t               option but assume no argument.  */\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse\n                  {\n\t\t    set_opt_arg (arg, opts[i].flags, s2);\n\t\t    argc--; argv++; idx++; /* Skip one.  */\n                  }\n              }\n\t    s = \"x\"; /* This is so that !s[1] yields false.  */\n          }\n\telse\n          {\n            /* Does not take an argument.  */\n\t    arg->r_type = ARGPARSE_TYPE_NONE;\n\t    arg->internal.inarg++; /* Point to the next arg.  */\n          }\n\tif ( !s[1] || dash_kludge )\n          {\n            /* No more concatenated short options.  */\n\t    arg->internal.inarg = 0;\n\t    argc--; argv++; idx++;\n          }\n      }\n  else if ( arg->flags & ARGPARSE_FLAG_MIXED )\n    {\n      arg->r_opt = ARGPARSE_IS_ARG;\n      arg->r_type = 2;\n      arg->r.ret_str = s;\n      argc--; argv++; idx++; /* Set to next one.  */\n    }\n  else\n    {\n      arg->internal.stopped = 1; /* Stop option processing.  */\n      goto next_one;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":921,"col":15,"offset":26677},"end":{"line":921,"col":19,"offset":26681},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_3","lines":"      argc--; argv++; idx++; /* set to next one */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":934,"col":7,"offset":26950},"end":{"line":941,"col":3,"offset":27198},"extra":{"metavars":{"$EXPR1":{"start":{"line":934,"col":22,"offset":26965},"end":{"line":934,"col":32,"offset":26975},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":934,"col":35,"offset":26978},"end":{"line":934,"col":55,"offset":26998},"abstract_content":"ARGPARSE_FLAG_NOSTOP"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e16aa50a6365faa1a81b8163a19eada430ec20940a4fb8afca4993c535052162dbdb9c4fa010e7826fafc302a3e2da493c3897bae7ac4e0749c606a5abf61e0e_0","lines":"      if (!s[2] && !(arg->flags & ARGPARSE_FLAG_NOSTOP))\n        {\n          /* Stop option processing.  */\n          arg->internal.stopped = 1;\n          arg->flags |= ARGPARSE_FLAG_STOP_SEEN;\n          argc--; argv++; idx++;\n          goto next_one;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":939,"col":19,"offset":27156},"end":{"line":939,"col":23,"offset":27160},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_4","lines":"          argc--; argv++; idx++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":954,"col":11,"offset":27523},"end":{"line":958,"col":14,"offset":27649},"extra":{"metavars":{"$EXPR1":{"start":{"line":954,"col":17,"offset":27529},"end":{"line":954,"col":27,"offset":27539},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":954,"col":30,"offset":27542},"end":{"line":954,"col":53,"offset":27565},"abstract_content":"ARGPARSE_FLAG_NOVERSION"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cee2adac3b0b9a3e9c3e8354ed11fa58b6ca15b4a32e0aff05f3f72376f3fbf7ec431df2bc796f6e8d729bcd3deb08dac344f25ed9604e3f68518320b5ffa59f_0","lines":"          if (!(arg->flags & ARGPARSE_FLAG_NOVERSION))\n            {\n              show_version ();\n              exit(0);\n            }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":969,"col":15,"offset":27933},"end":{"line":970,"col":70,"offset":28066},"extra":{"metavars":{"$EXPR1":{"start":{"line":969,"col":41,"offset":27959},"end":{"line":969,"col":54,"offset":27972},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":969,"col":57,"offset":27975},"end":{"line":969,"col":76,"offset":27994},"abstract_content":"ARGPARSE_OPT_IGNORE"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7869aba9e7181dfba10791bea144eefc17b31ea7fed8b2407a3df1e61e5c5234d513ce95f13de404b507fdc2d43b5b646a4fdaaaa9a14bd6976ebfc3d0de8e09_0","lines":"              if (opts[i].long_opt && !(opts[i].flags & ARGPARSE_OPT_IGNORE))\n                writestrings (0, \"--\", opts[i].long_opt, \"\\n\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":986,"col":7,"offset":28452},"end":{"line":1030,"col":3,"offset":29703},"extra":{"metavars":{"$COND":{"start":{"line":986,"col":12,"offset":28457},"end":{"line":986,"col":17,"offset":28462},"abstract_content":"i<0"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a877781c741c748c704d27080a3a7cdd5540cd3f896600496dc14bbcb4652d869494c282bdb6d0021b9331d80a480083834c2653d51802a1e993cb1ea4848136_0","lines":"      if ( i < 0 )\n        ;\n      else if ( (opts[i].flags & ARGPARSE_TYPE_MASK) )\n        {\n          if ( argpos )\n            {\n              s2 = argpos+1;\n              if ( !*s2 )\n                s2 = NULL;\n\t    }\n          else\n            s2 = argv[1];\n          if ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              arg->r_type = ARGPARSE_TYPE_NONE; /* Argument is optional.  */\n\t    }\n          else if ( !s2 )\n            {\n              arg->r_opt = ARGPARSE_MISSING_ARG;\n\t    }\n          else if ( !argpos && *s2 == '-'\n                    && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              /* The argument is optional and the next seems to be an\n                 option.  We do not check this possible option but\n                 assume no argument */\n              arg->r_type = ARGPARSE_TYPE_NONE;\n\t    }\n          else\n            {\n              set_opt_arg (arg, opts[i].flags, s2);\n              if ( !argpos )\n                {\n                  argc--; argv++; idx++; /* Skip one.  */\n\t\t}\n\t    }\n\t}\n      else\n        {\n          /* Does not take an argument. */\n          if ( argpos )\n            arg->r_type = ARGPARSE_UNEXPECTED_ARG;\n          else\n            arg->r_type = 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":988,"col":12,"offset":28486},"end":{"line":1030,"col":3,"offset":29703},"extra":{"metavars":{"$EXPR1":{"start":{"line":988,"col":18,"offset":28492},"end":{"line":988,"col":31,"offset":28505},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":988,"col":34,"offset":28508},"end":{"line":988,"col":52,"offset":28526},"abstract_content":"ARGPARSE_TYPE_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d256c37137f7d1977f00120a3ce253411cc335b9f95910d598b0bfaa234c26a69dfd186cba0d1e1ec187c534b398df4754d2f21d8221d8ebcb685420cd1cc582_0","lines":"      else if ( (opts[i].flags & ARGPARSE_TYPE_MASK) )\n        {\n          if ( argpos )\n            {\n              s2 = argpos+1;\n              if ( !*s2 )\n                s2 = NULL;\n\t    }\n          else\n            s2 = argv[1];\n          if ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              arg->r_type = ARGPARSE_TYPE_NONE; /* Argument is optional.  */\n\t    }\n          else if ( !s2 )\n            {\n              arg->r_opt = ARGPARSE_MISSING_ARG;\n\t    }\n          else if ( !argpos && *s2 == '-'\n                    && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              /* The argument is optional and the next seems to be an\n                 option.  We do not check this possible option but\n                 assume no argument */\n              arg->r_type = ARGPARSE_TYPE_NONE;\n\t    }\n          else\n            {\n              set_opt_arg (arg, opts[i].flags, s2);\n              if ( !argpos )\n                {\n                  argc--; argv++; idx++; /* Skip one.  */\n\t\t}\n\t    }\n\t}\n      else\n        {\n          /* Does not take an argument. */\n          if ( argpos )\n            arg->r_type = ARGPARSE_UNEXPECTED_ARG;\n          else\n            arg->r_type = 0;\n\t}","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":997,"col":18,"offset":28699},"end":{"line":997,"col":22,"offset":28703},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_5","lines":"            s2 = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":998,"col":11,"offset":28718},"end":{"line":1021,"col":7,"offset":29514},"extra":{"metavars":{"$EXPR1":{"start":{"line":998,"col":24,"offset":28731},"end":{"line":998,"col":37,"offset":28744},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":998,"col":40,"offset":28747},"end":{"line":998,"col":61,"offset":28768},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb083c7deaf8c3f83a6d7175c37eacb98cd015d5725e1bc91af3773ecb0714bcf4f19d659e080591ab3ae080aa2805201fd069f8eb34092645c14131997efb25_0","lines":"          if ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              arg->r_type = ARGPARSE_TYPE_NONE; /* Argument is optional.  */\n\t    }\n          else if ( !s2 )\n            {\n              arg->r_opt = ARGPARSE_MISSING_ARG;\n\t    }\n          else if ( !argpos && *s2 == '-'\n                    && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              /* The argument is optional and the next seems to be an\n                 option.  We do not check this possible option but\n                 assume no argument */\n              arg->r_type = ARGPARSE_TYPE_NONE;\n\t    }\n          else\n            {\n              set_opt_arg (arg, opts[i].flags, s2);\n              if ( !argpos )\n                {\n                  argc--; argv++; idx++; /* Skip one.  */\n\t\t}\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1006,"col":16,"offset":28981},"end":{"line":1021,"col":7,"offset":29514},"extra":{"metavars":{"$EXPR1":{"start":{"line":1007,"col":25,"offset":29032},"end":{"line":1007,"col":38,"offset":29045},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":1007,"col":41,"offset":29048},"end":{"line":1007,"col":62,"offset":29069},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb083c7deaf8c3f83a6d7175c37eacb98cd015d5725e1bc91af3773ecb0714bcf4f19d659e080591ab3ae080aa2805201fd069f8eb34092645c14131997efb25_1","lines":"          else if ( !argpos && *s2 == '-'\n                    && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n            {\n              /* The argument is optional and the next seems to be an\n                 option.  We do not check this possible option but\n                 assume no argument */\n              arg->r_type = ARGPARSE_TYPE_NONE;\n\t    }\n          else\n            {\n              set_opt_arg (arg, opts[i].flags, s2);\n              if ( !argpos )\n                {\n                  argc--; argv++; idx++; /* Skip one.  */\n\t\t}\n\t    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1019,"col":27,"offset":29472},"end":{"line":1019,"col":31,"offset":29476},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_6","lines":"                  argc--; argv++; idx++; /* Skip one.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1031,"col":15,"offset":29718},"end":{"line":1031,"col":19,"offset":29722},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_7","lines":"      argc--; argv++; idx++; /* Set to next one.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1042,"col":6,"offset":29964},"end":{"line":1050,"col":16,"offset":30264},"extra":{"metavars":{"$EXPR1":{"start":{"line":1042,"col":12,"offset":29970},"end":{"line":1042,"col":22,"offset":29980},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":1042,"col":25,"offset":29983},"end":{"line":1042,"col":46,"offset":30004},"abstract_content":"ARGPARSE_FLAG_ONEDASH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b9450ee1fc46ef004ece0e600a9ed15a4efe941b43d81babcc8963502c284edd9c65f851242cbb99cfe44581dab4cf7e4c74b2e5783f3ddbb6e27da5a7b8ebad_0","lines":"\t    if ( (arg->flags & ARGPARSE_FLAG_ONEDASH) )\n              {\n                for (i=0; opts[i].short_opt; i++ )\n                  if ( opts[i].long_opt && !strcmp (opts[i].long_opt, s+1))\n                    {\n                      dash_kludge = 1;\n                      break;\n\t\t    }\n              }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1072,"col":7,"offset":30850},"end":{"line":1111,"col":12,"offset":32045},"extra":{"metavars":{"$EXPR1":{"start":{"line":1072,"col":13,"offset":30856},"end":{"line":1072,"col":26,"offset":30869},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":1072,"col":29,"offset":30872},"end":{"line":1072,"col":47,"offset":30890},"abstract_content":"ARGPARSE_TYPE_MASK"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d256c37137f7d1977f00120a3ce253411cc335b9f95910d598b0bfaa234c26a69dfd186cba0d1e1ec187c534b398df4754d2f21d8221d8ebcb685420cd1cc582_1","lines":"\telse if ( (opts[i].flags & ARGPARSE_TYPE_MASK) )\n          {\n\t    if ( s[1] && !dash_kludge )\n              {\n\t\ts2 = s+1;\n\t\tset_opt_arg (arg, opts[i].flags, s2);\n              }\n\t    else\n              {\n\t\ts2 = argv[1];\n\t\tif ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse if ( !s2 )\n                  {\n\t\t    arg->r_opt = ARGPARSE_MISSING_ARG;\n                  }\n\t\telse if ( *s2 == '-' && s2[1]\n                          && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    /* The argument is optional and the next seems to\n\t               be an option.  We do not check this possible\n\t               option but assume no argument.  */\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse\n                  {\n\t\t    set_opt_arg (arg, opts[i].flags, s2);\n\t\t    argc--; argv++; idx++; /* Skip one.  */\n                  }\n              }\n\t    s = \"x\"; /* This is so that !s[1] yields false.  */\n          }\n\telse\n          {\n            /* Does not take an argument.  */\n\t    arg->r_type = ARGPARSE_TYPE_NONE;\n\t    arg->internal.inarg++; /* Point to the next arg.  */\n          }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1081,"col":8,"offset":31056},"end":{"line":1081,"col":12,"offset":31060},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_8","lines":"\t\ts2 = argv[1];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1082,"col":3,"offset":31067},"end":{"line":1102,"col":20,"offset":31787},"extra":{"metavars":{"$EXPR1":{"start":{"line":1082,"col":16,"offset":31080},"end":{"line":1082,"col":29,"offset":31093},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":1082,"col":32,"offset":31096},"end":{"line":1082,"col":53,"offset":31117},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb083c7deaf8c3f83a6d7175c37eacb98cd015d5725e1bc91af3773ecb0714bcf4f19d659e080591ab3ae080aa2805201fd069f8eb34092645c14131997efb25_2","lines":"\t\tif ( !s2 && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse if ( !s2 )\n                  {\n\t\t    arg->r_opt = ARGPARSE_MISSING_ARG;\n                  }\n\t\telse if ( *s2 == '-' && s2[1]\n                          && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    /* The argument is optional and the next seems to\n\t               be an option.  We do not check this possible\n\t               option but assume no argument.  */\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse\n                  {\n\t\t    set_opt_arg (arg, opts[i].flags, s2);\n\t\t    argc--; argv++; idx++; /* Skip one.  */\n                  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1090,"col":8,"offset":31307},"end":{"line":1102,"col":20,"offset":31787},"extra":{"metavars":{"$EXPR1":{"start":{"line":1091,"col":31,"offset":31362},"end":{"line":1091,"col":44,"offset":31375},"abstract_content":"opts[i].flags"},"$EXPR2":{"start":{"line":1091,"col":47,"offset":31378},"end":{"line":1091,"col":68,"offset":31399},"abstract_content":"ARGPARSE_OPT_OPTIONAL"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"cb083c7deaf8c3f83a6d7175c37eacb98cd015d5725e1bc91af3773ecb0714bcf4f19d659e080591ab3ae080aa2805201fd069f8eb34092645c14131997efb25_3","lines":"\t\telse if ( *s2 == '-' && s2[1]\n                          && (opts[i].flags & ARGPARSE_OPT_OPTIONAL) )\n                  {\n\t\t    /* The argument is optional and the next seems to\n\t               be an option.  We do not check this possible\n\t               option but assume no argument.  */\n\t\t    arg->r_type = ARGPARSE_TYPE_NONE;\n                  }\n\t\telse\n                  {\n\t\t    set_opt_arg (arg, opts[i].flags, s2);\n\t\t    argc--; argv++; idx++; /* Skip one.  */\n                  }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1101,"col":15,"offset":31736},"end":{"line":1101,"col":19,"offset":31740},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_9","lines":"\t\t    argc--; argv++; idx++; /* Skip one.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1116,"col":14,"offset":32185},"end":{"line":1116,"col":18,"offset":32189},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_10","lines":"\t    argc--; argv++; idx++;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1119,"col":8,"offset":32227},"end":{"line":1130,"col":6,"offset":32520},"extra":{"metavars":{"$EXPR1":{"start":{"line":1119,"col":13,"offset":32232},"end":{"line":1119,"col":23,"offset":32242},"abstract_content":"arg->->flags"},"$EXPR2":{"start":{"line":1119,"col":26,"offset":32245},"end":{"line":1119,"col":45,"offset":32264},"abstract_content":"ARGPARSE_FLAG_MIXED"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"65473c5b7d65c94cab4b98a1d898b9eb91ea9ded94c200c23e989cc8689f24eaebc8a29af73832cc8ecd98b7a3c70436ed7effe84e4b3123ab7293e95e41e655_0","lines":"  else if ( arg->flags & ARGPARSE_FLAG_MIXED )\n    {\n      arg->r_opt = ARGPARSE_IS_ARG;\n      arg->r_type = 2;\n      arg->r.ret_str = s;\n      argc--; argv++; idx++; /* Set to next one.  */\n    }\n  else\n    {\n      arg->internal.stopped = 1; /* Stop option processing.  */\n      goto next_one;\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1124,"col":15,"offset":32372},"end":{"line":1124,"col":19,"offset":32376},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_11","lines":"      argc--; argv++; idx++; /* Set to next one.  */","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1134,"col":16,"offset":32566},"end":{"line":1134,"col":20,"offset":32570},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_12","lines":"  *arg->argv = argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1145,"col":7,"offset":32794},"end":{"line":1145,"col":51,"offset":32838},"extra":{"metavars":{"$NARROW":{"start":{"line":1145,"col":7,"offset":32794},"end":{"line":1145,"col":11,"offset":32798},"abstract_content":"base"},"$LARGE":{"start":{"line":1145,"col":15,"offset":32802},"end":{"line":1145,"col":20,"offset":32807},"abstract_content":"flags"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"94381304017d732bb27e5776e569796e2136523a9412fbd553c78a9f572668239d1e963fbb8ecf2a683e66969c91678783c43c4a45b2125cc1890d9d9f54eaaa_0","lines":"  int base = (flags & ARGPARSE_OPT_PREFIX)? 0 : 10;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1145,"col":7,"offset":32794},"end":{"line":1145,"col":51,"offset":32838},"extra":{"metavars":{"$SIGNED":{"start":{"line":1145,"col":7,"offset":32794},"end":{"line":1145,"col":11,"offset":32798},"abstract_content":"base"},"$UNSIGNED":{"start":{"line":1145,"col":15,"offset":32802},"end":{"line":1145,"col":20,"offset":32807},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bd424805a48bca037f487563f6a8a9ad1312df1058358182586478700dd76ff8ae735e9402c3d69802362f8492cb4fa6fc4758e19a03a309ca207528e94b7e86_0","lines":"  int base = (flags & ARGPARSE_OPT_PREFIX)? 0 : 10;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1148,"col":13,"offset":32863},"end":{"line":1148,"col":54,"offset":32904},"extra":{"metavars":{"$VAR":{"start":{"line":1148,"col":13,"offset":32863},"end":{"line":1148,"col":54,"offset":32904},"abstract_content":"arg->->r_type=flags&ARGPARSE_TYPE_MASK"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e9a3a12a58d96542ca9a874d29b6d221a0622f24c1546b0a0ff0cefedda7fc9710fccc0e745865d65650e852607acdd9922f1d68177adc45ed9536f3ebf97aba_0","lines":"  switch ( (arg->r_type = (flags & ARGPARSE_TYPE_MASK)) )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1216,"col":9,"offset":34521},"end":{"line":1216,"col":44,"offset":34556},"extra":{"metavars":{"$COND":{"start":{"line":1216,"col":14,"offset":34526},"end":{"line":1216,"col":42,"offset":34554},"abstract_content":"is_utf8&&*s&0xc0!=0x80"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"876ecb14153723bb950ac5075edcb8af52c2ceb701e784e33aa511cb27c0fba55bbbca1b5bac74ecb23c12d1902a5f39e5fb5b64b7e7be564f87a60c63392fb6_0","lines":"        if ( is_utf8 && (*s&0xc0) != 0x80 )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1375,"col":2,"offset":39232},"end":{"line":1377,"col":64,"offset":39393},"extra":{"metavars":{"$EXPR1":{"start":{"line":1375,"col":8,"offset":39238},"end":{"line":1375,"col":13,"offset":39243},"abstract_content":"flags"},"$EXPR2":{"start":{"line":1375,"col":16,"offset":39246},"end":{"line":1375,"col":37,"offset":39267},"abstract_content":"ARGPARSE_FLAG_ONEDASH"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a62e1bb3584dfbd1cd2c7ac10aa740dac1171892c183bcbe2a9aba28829cb30804e47ef92f3c1078f961e793617bb94ea0986bac0e6fb65543e0cd8dbb78cb6_0","lines":"\tif ( (flags & ARGPARSE_FLAG_ONEDASH) )\n          writestrings (0, \"\\n(A single dash may be used \"\n                        \"instead of the double ones)\\n\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1379,"col":3,"offset":39402},"end":{"line":1383,"col":6,"offset":39506},"extra":{"metavars":{"$EXPR1":{"start":{"line":1379,"col":9,"offset":39408},"end":{"line":1379,"col":10,"offset":39409},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1379,"col":11,"offset":39410},"svalue_end":{"line":1379,"col":23,"offset":39422},"svalue_abstract_content":"strusage(19)"}},"$EXPR2":{"start":{"line":1379,"col":11,"offset":39410},"end":{"line":1379,"col":23,"offset":39422},"abstract_content":"strusage(19)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c232f1238659b36b42bf55ff5d0bf57330cd38f4df41c025250c1fbc622e2e13532563f77b9344e16d7b3a612b0b004ce0a51b614498a20eca72a8c08cdf7909_0","lines":"  if ( (s=strusage(19)) )\n    {\n      writestrings (0, \"\\n\", NULL);\n      writestrings (0, s, NULL);\n    }","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1396,"col":3,"offset":39664},"end":{"line":1397,"col":42,"offset":39728},"extra":{"metavars":{"$EXPR1":{"start":{"line":1396,"col":8,"offset":39669},"end":{"line":1396,"col":9,"offset":39670},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1396,"col":10,"offset":39671},"svalue_end":{"line":1396,"col":23,"offset":39684},"svalue_abstract_content":"strusage(12)"}},"$EXPR2":{"start":{"line":1396,"col":10,"offset":39671},"end":{"line":1396,"col":23,"offset":39684},"abstract_content":"strusage(12)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6412e20741a7acc6d8a90fbd9ef1ac8633c8b4e6364786e2ba6865aedfe608b289492e0e8913448540169ee41e3cf2877ec797eb4c56bb713df8e3a79ed8f0b4_0","lines":"  if ((s=strusage (12)))\n    writestrings (0, \" (\", s, \")\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1401,"col":5,"offset":39845},"end":{"line":1402,"col":39,"offset":39905},"extra":{"metavars":{"$EXPR1":{"start":{"line":1401,"col":10,"offset":39850},"end":{"line":1401,"col":11,"offset":39851},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1401,"col":12,"offset":39852},"svalue_end":{"line":1401,"col":24,"offset":39864},"svalue_abstract_content":"strusage(i)"}},"$EXPR2":{"start":{"line":1401,"col":12,"offset":39852},"end":{"line":1401,"col":24,"offset":39864},"abstract_content":"strusage(i)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04e6efb00faed6e1a88599313d1fd11ec931f86f9f080d4e41fd2db82de62b349c5cd7b8baf9d1f16739913309f3da7cdad9abb4a1668ba4bc9bb9ab34c43a2c_0","lines":"    if ((s=strusage (i)))\n      writestrings (0, s, \"\\n\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1404,"col":3,"offset":39935},"end":{"line":1405,"col":37,"offset":39994},"extra":{"metavars":{"$EXPR1":{"start":{"line":1404,"col":8,"offset":39940},"end":{"line":1404,"col":9,"offset":39941},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1404,"col":10,"offset":39942},"svalue_end":{"line":1404,"col":23,"offset":39955},"svalue_abstract_content":"strusage(14)"}},"$EXPR2":{"start":{"line":1404,"col":10,"offset":39942},"end":{"line":1404,"col":23,"offset":39955},"abstract_content":"strusage(14)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c87fbc4ea1701ad9996f3c7afd5ef6bb4289811e9c0dbb4c16367742373862c33d906734a60aba70327599dcc2476f9622cdc8f6824f4788aa07a8f06169ec1_0","lines":"  if ((s=strusage (14)))\n    writestrings (0, s, \"\\n\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1407,"col":3,"offset":40022},"end":{"line":1408,"col":37,"offset":40082},"extra":{"metavars":{"$EXPR1":{"start":{"line":1407,"col":8,"offset":40027},"end":{"line":1407,"col":9,"offset":40028},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1407,"col":10,"offset":40029},"svalue_end":{"line":1407,"col":23,"offset":40042},"svalue_abstract_content":"strusage(10)"}},"$EXPR2":{"start":{"line":1407,"col":10,"offset":40029},"end":{"line":1407,"col":23,"offset":40042},"abstract_content":"strusage(10)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"25881c821748624e7eec0a40ab65b57d7c71e018efcc5b184966c44bd445bce3ed9285d2163f426f8b8f17563e3432cc5093c5f0a0c527e2f8dbf850eedb4d9d_0","lines":"  if( (s=strusage (10)) )\n    writestrings (0, s, \"\\n\", NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1410,"col":3,"offset":40113},"end":{"line":1411,"col":31,"offset":40167},"extra":{"metavars":{"$EXPR1":{"start":{"line":1410,"col":9,"offset":40119},"end":{"line":1410,"col":10,"offset":40120},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1410,"col":11,"offset":40121},"svalue_end":{"line":1410,"col":23,"offset":40133},"svalue_abstract_content":"strusage(15)"}},"$EXPR2":{"start":{"line":1410,"col":11,"offset":40121},"end":{"line":1410,"col":23,"offset":40133},"abstract_content":"strusage(15)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"dc5df5b49ddc8f307fd77a374297198aa81e05a732165599883c691d44d3db54d5f448dbf78ad983d22e80b85f60b5886237d44128505660cc441ecc33e0f0b3_0","lines":"  if ( (s=strusage(15)) )\n    writestrings (0, s, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1413,"col":3,"offset":40186},"end":{"line":1414,"col":31,"offset":40238},"extra":{"metavars":{"$EXPR1":{"start":{"line":1413,"col":8,"offset":40191},"end":{"line":1413,"col":9,"offset":40192},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1413,"col":10,"offset":40193},"svalue_end":{"line":1413,"col":22,"offset":40205},"svalue_abstract_content":"strusage(18)"}},"$EXPR2":{"start":{"line":1413,"col":10,"offset":40193},"end":{"line":1413,"col":22,"offset":40205},"abstract_content":"strusage(18)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5eae86c759e920e38fffb9ec0479d9836227b6851b80d36331e62caa1280d565d23d70c44ceeaaade3086dbdf0b3e752f9a21c7a5758506183fc0100e07f78c0_0","lines":"  if ((s=strusage(18)))\n    writestrings (0, s, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1417,"col":5,"offset":40303},"end":{"line":1418,"col":33,"offset":40359},"extra":{"metavars":{"$EXPR1":{"start":{"line":1417,"col":11,"offset":40309},"end":{"line":1417,"col":12,"offset":40310},"abstract_content":"s","propagated_value":{"svalue_start":{"line":1417,"col":13,"offset":40311},"svalue_end":{"line":1417,"col":25,"offset":40323},"svalue_abstract_content":"strusage(i)"}},"$EXPR2":{"start":{"line":1417,"col":13,"offset":40311},"end":{"line":1417,"col":25,"offset":40323},"abstract_content":"strusage(i)"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04e6efb00faed6e1a88599313d1fd11ec931f86f9f080d4e41fd2db82de62b349c5cd7b8baf9d1f16739913309f3da7cdad9abb4a1668ba4bc9bb9ab34c43a2c_1","lines":"    if ( (s=strusage (i)) )\n      writestrings (0, s, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1488,"col":12,"offset":42151},"end":{"line":1488,"col":17,"offset":42156},"extra":{"metavars":{"$VAR":{"start":{"line":1488,"col":12,"offset":42151},"end":{"line":1488,"col":17,"offset":42156},"abstract_content":"level"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d18e82d491f4d821612f6713ab7276c77e2767e5fcc26766dda7a81db280f96ca81202b8cd260e523408b43b57c207d53b6f8867f696f982f8c309432bacf8ff_0","lines":"  switch ( level )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1564,"col":35,"offset":44538},"end":{"line":1564,"col":39,"offset":44542},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_13","lines":"  ARGPARSE_ARGS pargs = { &argc, &argv, (ARGPARSE_FLAG_ALL","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":1587,"col":33,"offset":45373},"end":{"line":1587,"col":37,"offset":45377},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e3f9296dcbe440441d99378ed07bf748d489e52b7e54f9252791a7f7a642c9b30b47d4a370047fd4e083c0edffcd6d3fbf690de18566ddc175a0f80b567fc7d7_14","lines":"    printf (\"%3d -> (%s)\\n\", i, argv[i] );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":48,"col":5,"offset":1325},"end":{"line":48,"col":24,"offset":1344},"extra":{"metavars":{"$TYPE":{"start":{"line":40,"col":18,"offset":1101},"end":{"line":40,"col":30,"offset":1113},"abstract_content":"SecretSchema"},"$EXPR":{"start":{"line":40,"col":44,"offset":1127},"end":{"line":47,"col":6,"offset":1319},"abstract_content":"{\"org.gnupg.Passphrase\"SECRET_SCHEMA_NONE{{\"stored-by\"SECRET_SCHEMA_ATTRIBUTE_STRING}{\"keygrip\"SECRET_SCHEMA_ATTRIBUTE_STRING}{\"NULL\"0}}}"},"$VAR":{"start":{"line":48,"col":13,"offset":1333},"end":{"line":48,"col":23,"offset":1343},"abstract_content":"the_schema"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"29dd7f96ce83559379cafa150a7ce7d639fe64db42b5b76b4168cb61e118dc7eb0bc4ca14e482a100a8648b94e571d8cb38dace4b983a89e5fd0a322e489959a_0","lines":"    return &the_schema;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":57,"col":11,"offset":1464},"end":{"line":57,"col":54,"offset":1507},"extra":{"metavars":{"$FUN":{"start":{"line":57,"col":11,"offset":1464},"end":{"line":57,"col":17,"offset":1470},"abstract_content":"malloc"},"$X":{"start":{"line":57,"col":19,"offset":1472},"end":{"line":57,"col":33,"offset":1486},"abstract_content":"sizeof prefix"},"$Y":{"start":{"line":57,"col":37,"offset":1490},"end":{"line":57,"col":53,"offset":1506},"abstract_content":"strlen(keygrip)"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f64155e8a66ae7bfbb9e15429bc837edd92e1cf20ac2f7a3a25a6bc4f59218a5a5d45607fcd0067e26cc464500bd21ed6cd6169060b3e58f01858e612c1e785e_0","lines":"  label = malloc (sizeof (prefix) + strlen (keygrip));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":57,"col":11,"offset":1464},"end":{"line":57,"col":54,"offset":1507},"extra":{"metavars":{"$FUN":{"start":{"line":57,"col":11,"offset":1464},"end":{"line":57,"col":17,"offset":1470},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"69e5ab48b22551f57f4210ef3b50942fd90fc4c6839e11afa3d6ae4c3f7a0669876eca239a210fa4989b0659388e7952fed4428868b87b1a2428e53c98d7681b_0","lines":"  label = malloc (sizeof (prefix) + strlen (keygrip));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":60,"col":7,"offset":1534},"end":{"line":60,"col":50,"offset":1577},"extra":{"metavars":{"$FUN":{"start":{"line":60,"col":7,"offset":1534},"end":{"line":60,"col":13,"offset":1540},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"d932fdf29fe6e6bdfe25a24cd77dd80056aea179d6282ebb4d1a261567c98308452314c27d94b8fbb27a07db30294c3d1b02ef872d20e069d2226ea774dc1fbd_0","lines":"      memcpy (label, prefix, sizeof (prefix) - 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":61,"col":7,"offset":1585},"end":{"line":61,"col":52,"offset":1630},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2f2e5211619f6e0a9edb143ed8f04f793c0bd5c7a524dffa18228e0b5ebc566eb82e8df0f210554aa413a9df47d71b7396fbedf7b0025fd9897226b0f00ad720_0","lines":"      strcpy (&label[sizeof (prefix) - 1], keygrip);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":61,"col":7,"offset":1585},"end":{"line":61,"col":52,"offset":1630},"extra":{"metavars":{"$FUN":{"start":{"line":61,"col":7,"offset":1585},"end":{"line":61,"col":13,"offset":1591},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b05f10e05eda9a419d33f6b29ff8626e050b348a2ecf7482d8ba6b4118c66b86d360082b86ceb440692456b93143848060ad693f8d0c921191af5cb941ae3c9c_0","lines":"      strcpy (&label[sizeof (prefix) - 1], keygrip);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":93,"col":3,"offset":2257},"end":{"line":93,"col":16,"offset":2270},"extra":{"metavars":{"$PTR":{"start":{"line":93,"col":9,"offset":2263},"end":{"line":93,"col":14,"offset":2268},"abstract_content":"label","propagated_value":{"svalue_start":{"line":77,"col":11,"offset":1838},"svalue_end":{"line":77,"col":37,"offset":1864},"svalue_abstract_content":"keygrip_to_label(keygrip)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"87e0ee753f7ba44ea947eef55249466bec0488c358bd4cb729470e42927be98ee352d8fee696a1b3c3d0ee8d838046f81328e492754d802e63fb4c977a84c37d_0","lines":"  free (label);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":116,"col":7,"offset":2651},"end":{"line":116,"col":20,"offset":2664},"extra":{"metavars":{"$EXPR":{"start":{"line":116,"col":7,"offset":2651},"end":{"line":116,"col":12,"offset":2656},"abstract_content":"error","propagated_value":{"svalue_start":{"line":105,"col":19,"offset":2445},"svalue_end":{"line":105,"col":23,"offset":2449},"svalue_abstract_content":"NULL"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a2e229edc908c6ef8dd4b8b608c0cd0156f48660866b17fc53ae534ee3376260b21d3d1ec23e6cd4e9f7c6ff0b3fba6030e2a06f6ab8699e61af266ce4d29a1_0","lines":"  if (error != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":131,"col":15,"offset":3081},"end":{"line":131,"col":52,"offset":3118},"extra":{"metavars":{"$FUN":{"start":{"line":131,"col":15,"offset":3081},"end":{"line":131,"col":28,"offset":3094},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b06f65bcd0c4829c7b2a1d2e0b2b3485e01af9da756fe0087cb7af9f35bf75924d376c8b05c6ac928b802fb5f50474bda776c3efbf6f6653042281239d8aa07e_0","lines":"  password2 = secmem_malloc (strlen (password) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":133,"col":5,"offset":3141},"end":{"line":133,"col":32,"offset":3168},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2f2e5211619f6e0a9edb143ed8f04f793c0bd5c7a524dffa18228e0b5ebc566eb82e8df0f210554aa413a9df47d71b7396fbedf7b0025fd9897226b0f00ad720_1","lines":"    strcpy(password2, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":133,"col":5,"offset":3141},"end":{"line":133,"col":32,"offset":3168},"extra":{"metavars":{"$FUN":{"start":{"line":133,"col":5,"offset":3141},"end":{"line":133,"col":11,"offset":3147},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b05f10e05eda9a419d33f6b29ff8626e050b348a2ecf7482d8ba6b4118c66b86d360082b86ceb440692456b93143848060ad693f8d0c921191af5cb941ae3c9c_1","lines":"    strcpy(password2, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","start":{"line":157,"col":7,"offset":3730},"end":{"line":157,"col":20,"offset":3743},"extra":{"metavars":{"$EXPR":{"start":{"line":157,"col":7,"offset":3730},"end":{"line":157,"col":12,"offset":3735},"abstract_content":"error","propagated_value":{"svalue_start":{"line":154,"col":19,"offset":3609},"svalue_end":{"line":154,"col":23,"offset":3613},"svalue_abstract_content":"NULL"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7a2e229edc908c6ef8dd4b8b608c0cd0156f48660866b17fc53ae534ee3376260b21d3d1ec23e6cd4e9f7c6ff0b3fba6030e2a06f6ab8699e61af266ce4d29a1_1","lines":"  if (error != NULL)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":189,"col":23,"offset":4480},"end":{"line":189,"col":49,"offset":4506},"extra":{"metavars":{"$FUN":{"start":{"line":189,"col":23,"offset":4480},"end":{"line":189,"col":32,"offset":4489},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_0","lines":"  old_ctype = strdup (setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":190,"col":3,"offset":4511},"end":{"line":190,"col":48,"offset":4556},"extra":{"metavars":{"$FUN":{"start":{"line":190,"col":3,"offset":4511},"end":{"line":190,"col":12,"offset":4520},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_1","lines":"  setlocale (LC_CTYPE, lc_ctype? lc_ctype : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":197,"col":7,"offset":4699},"end":{"line":197,"col":20,"offset":4712},"extra":{"metavars":{"$PTR":{"start":{"line":197,"col":13,"offset":4705},"end":{"line":197,"col":18,"offset":4710},"abstract_content":"local","propagated_value":{"svalue_start":{"line":185,"col":11,"offset":4383},"svalue_end":{"line":185,"col":52,"offset":4424},"svalue_abstract_content":"pinentry_utf8_to_local(lc_ctype string)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2d19ac56b96471a2c0275fc546899f1194bc30857733ab7603bc0d089b1e653442bf86b8d6dd5392023ec9a6a04038724870badc83a78ac245755feb92f4e12_0","lines":"      free (local);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":200,"col":9,"offset":4745},"end":{"line":200,"col":42,"offset":4778},"extra":{"metavars":{"$FUN":{"start":{"line":200,"col":9,"offset":4745},"end":{"line":200,"col":15,"offset":4751},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7f359429da59f7668ad0a6bcffa2fd919c75b6094403ebe83e7c9e302a46b43163cbf7c83996bfbfeaa1d3fbbe1f72166681197ff38d7557c064b52c33f719be_0","lines":"  wcs = calloc (len + 1, sizeof(wchar_t));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":203,"col":7,"offset":4804},"end":{"line":203,"col":20,"offset":4817},"extra":{"metavars":{"$PTR":{"start":{"line":203,"col":13,"offset":4810},"end":{"line":203,"col":18,"offset":4815},"abstract_content":"local","propagated_value":{"svalue_start":{"line":185,"col":11,"offset":4383},"svalue_end":{"line":185,"col":52,"offset":4424},"svalue_abstract_content":"pinentry_utf8_to_local(lc_ctype string)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2d19ac56b96471a2c0275fc546899f1194bc30857733ab7603bc0d089b1e653442bf86b8d6dd5392023ec9a6a04038724870badc83a78ac245755feb92f4e12_1","lines":"      free (local);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":211,"col":3,"offset":4930},"end":{"line":211,"col":16,"offset":4943},"extra":{"metavars":{"$PTR":{"start":{"line":211,"col":9,"offset":4936},"end":{"line":211,"col":14,"offset":4941},"abstract_content":"local","propagated_value":{"svalue_start":{"line":185,"col":11,"offset":4383},"svalue_end":{"line":185,"col":52,"offset":4424},"svalue_abstract_content":"pinentry_utf8_to_local(lc_ctype string)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b2d19ac56b96471a2c0275fc546899f1194bc30857733ab7603bc0d089b1e653442bf86b8d6dd5392023ec9a6a04038724870badc83a78ac245755feb92f4e12_2","lines":"  free (local);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":216,"col":7,"offset":4982},"end":{"line":216,"col":38,"offset":5013},"extra":{"metavars":{"$FUN":{"start":{"line":216,"col":7,"offset":4982},"end":{"line":216,"col":16,"offset":4991},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_2","lines":"      setlocale (LC_CTYPE, old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":601,"col":5,"offset":13842},"end":{"line":601,"col":24,"offset":13861},"extra":{"metavars":{"$PTR":{"start":{"line":601,"col":11,"offset":13848},"end":{"line":601,"col":22,"offset":13859},"abstract_content":"description"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"04dbeb33bd21e8da67a43c2fa87ad99e48df33709c5ef27b9d729c17929a4bf4b5223870662ef99ac8636a2e57237b037b8a529bf82e8d9922120bb02602054e_0","lines":"    free (description);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":603,"col":5,"offset":13879},"end":{"line":603,"col":18,"offset":13892},"extra":{"metavars":{"$PTR":{"start":{"line":603,"col":11,"offset":13885},"end":{"line":603,"col":16,"offset":13890},"abstract_content":"error"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f6f7b1394c26c3fa376ed1bbac02349de9ca9939e0e4b0684324af4e6c134cdbcc94a2723b7b0a5e32066a6f592b0fd5e58e7f63a1c09d5ba73a5982ab4dd31c_0","lines":"    free (error);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":605,"col":5,"offset":13911},"end":{"line":605,"col":19,"offset":13925},"extra":{"metavars":{"$PTR":{"start":{"line":605,"col":11,"offset":13917},"end":{"line":605,"col":17,"offset":13923},"abstract_content":"prompt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ad303ce9e48b3e0b03420ea1bfbf2dc5b4b80d3447135b1a45c45157eb27168e6f1c27b3a5f0d5be3d272429b150ec5afebb4bf3e648baafdb1d623e0176a460_0","lines":"    free (prompt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":657,"col":15,"offset":14878},"end":{"line":657,"col":24,"offset":14887},"extra":{"metavars":{"$VAR":{"start":{"line":657,"col":15,"offset":14878},"end":{"line":657,"col":24,"offset":14887},"abstract_content":"diag->->pos"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e43edd8a84cb27039dea2e11b6c9437715d079e851f23aea7a6217901f07f9ba4e606a9b66241d6b21020d4a0d4b222d35a57643dd3f14dc3996d51e73d1fd78_0","lines":"      switch (diag->pos)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":839,"col":7,"offset":19242},"end":{"line":839,"col":54,"offset":19289},"extra":{"metavars":{"$RET":{"start":{"line":839,"col":7,"offset":19242},"end":{"line":839,"col":16,"offset":19251},"abstract_content":"old_ctype"},"$FUN":{"start":{"line":839,"col":19,"offset":19254},"end":{"line":839,"col":25,"offset":19260},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"05b1a91a8654613eb047d46545a5418b401890f5cd2b05d4f6918ffcede7e781023334f8aba1f6c2a0853a3cc020d7f67a4b684238d5077cfd45d10349eb5a23_0","lines":"      old_ctype = strdup (setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":839,"col":27,"offset":19262},"end":{"line":839,"col":53,"offset":19288},"extra":{"metavars":{"$FUN":{"start":{"line":839,"col":27,"offset":19262},"end":{"line":839,"col":36,"offset":19271},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_3","lines":"      old_ctype = strdup (setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":840,"col":7,"offset":19297},"end":{"line":840,"col":47,"offset":19337},"extra":{"metavars":{"$FUN":{"start":{"line":840,"col":7,"offset":19297},"end":{"line":840,"col":16,"offset":19306},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_4","lines":"      setlocale (LC_CTYPE, pinentry->lc_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":843,"col":5,"offset":19356},"end":{"line":843,"col":29,"offset":19380},"extra":{"metavars":{"$FUN":{"start":{"line":843,"col":5,"offset":19356},"end":{"line":843,"col":14,"offset":19365},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_5","lines":"    setlocale (LC_CTYPE, \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":849,"col":15,"offset":19475},"end":{"line":849,"col":36,"offset":19496},"extra":{"metavars":{"$FUN":{"start":{"line":849,"col":15,"offset":19475},"end":{"line":849,"col":20,"offset":19480},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4a9b6713159c9c0c1038ac55bb41b6784c3d270e40f5727508973bce032194d802fa174b7de1d0f006a5e13d77dbeb16ca0f88e15898cafda766aaa1f0873a81_0","lines":"      ttyfi = fopen (tty_name, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":856,"col":15,"offset":19712},"end":{"line":856,"col":36,"offset":19733},"extra":{"metavars":{"$FUN":{"start":{"line":856,"col":15,"offset":19712},"end":{"line":856,"col":20,"offset":19717},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4a9b6713159c9c0c1038ac55bb41b6784c3d270e40f5727508973bce032194d802fa174b7de1d0f006a5e13d77dbeb16ca0f88e15898cafda766aaa1f0873a81_1","lines":"      ttyfo = fopen (tty_name, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":936,"col":11,"offset":21704},"end":{"line":936,"col":42,"offset":21735},"extra":{"metavars":{"$FUN":{"start":{"line":936,"col":11,"offset":21704},"end":{"line":936,"col":20,"offset":21713},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_6","lines":"          setlocale (LC_CTYPE, old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":937,"col":11,"offset":21747},"end":{"line":937,"col":28,"offset":21764},"extra":{"metavars":{"$PTR":{"start":{"line":937,"col":17,"offset":21753},"end":{"line":937,"col":26,"offset":21762},"abstract_content":"old_ctype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3a551c4aa630fbca1b67aedde76860256ecffc62dd168ef9e2613b0715006ebdc407857c242100c68970de509cc5c1a5934c1120be0e8d9ee589a53d6a91c5df_0","lines":"          free (old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-break-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":966,"col":15,"offset":22305},"end":{"line":966,"col":16,"offset":22306},"extra":{"metavars":{"$VAR":{"start":{"line":966,"col":15,"offset":22305},"end":{"line":966,"col":16,"offset":22306},"abstract_content":"c","propagated_value":{"svalue_start":{"line":956,"col":11,"offset":22058},"svalue_end":{"line":956,"col":26,"offset":22073},"svalue_abstract_content":"wgetch(stdscr)"}},"$VAL1":{"start":{"line":976,"col":7,"offset":22420},"end":{"line":976,"col":9,"offset":22422},"abstract_content":"27"},"$VAL2":{"start":{"line":1024,"col":7,"offset":23448},"end":{"line":1024,"col":11,"offset":23452},"abstract_content":"'\\t'"}},"message":"The software omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/484","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f48a89423aa4a1f364b230bbecb28cd74d4ead46d277672909bcc37ba5e9e0994c874b3a87e45b441ff2cf8484670078d609339adf77ed311945f135e04e2419_0","lines":"      switch (c)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1055,"col":12,"offset":24112},"end":{"line":1055,"col":20,"offset":24120},"extra":{"metavars":{"$VAR":{"start":{"line":1055,"col":12,"offset":24112},"end":{"line":1055,"col":20,"offset":24120},"abstract_content":"diag.pos"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c60b204f49ab85b0c8cdfcea592f2da5cdaeb0b0dc2f32d1f6a1f875a93d89fd924a676b647d2963e92c71b75646f6d07b7ecaf1dcd78f3eac1be5f88d85044f_0","lines":"\t  switch (diag.pos)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1099,"col":7,"offset":24926},"end":{"line":1099,"col":38,"offset":24957},"extra":{"metavars":{"$FUN":{"start":{"line":1099,"col":7,"offset":24926},"end":{"line":1099,"col":16,"offset":24935},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2f8749f9facd7b543807bd93965236a688cbe1d6216a3b00eb6be91acd76d878fa57b525b884cafa03cc1d3ce1b54eb0b4121c129f193606fdaf9829dda77cd0_7","lines":"      setlocale (LC_CTYPE, old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1100,"col":7,"offset":24965},"end":{"line":1100,"col":24,"offset":24982},"extra":{"metavars":{"$PTR":{"start":{"line":1100,"col":13,"offset":24971},"end":{"line":1100,"col":22,"offset":24980},"abstract_content":"old_ctype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3a551c4aa630fbca1b67aedde76860256ecffc62dd168ef9e2613b0715006ebdc407857c242100c68970de509cc5c1a5934c1120be0e8d9ee589a53d6a91c5df_1","lines":"      free (old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1108,"col":3,"offset":25122},"end":{"line":1108,"col":18,"offset":25137},"extra":{"metavars":{"$PTR":{"start":{"line":1108,"col":9,"offset":25128},"end":{"line":1108,"col":16,"offset":25135},"abstract_content":"diag.ok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eaa60e3c24eaf4357995ff3d80c6dffbb03439c3711404ab41bb6e0328404d41b52d8a045be76329d549f1fa5e2333f2d48633af8a2c9236cbc81824d70dfba0_0","lines":"  free (diag.ok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1110,"col":5,"offset":25161},"end":{"line":1110,"col":24,"offset":25180},"extra":{"metavars":{"$PTR":{"start":{"line":1110,"col":11,"offset":25167},"end":{"line":1110,"col":22,"offset":25178},"abstract_content":"diag.cancel"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4594ced2eb16199dc7be797131523eb61de5a0da0cea5a35ababf5d7307f79f173fa3eb84aef77ece0a9ac7d46d5f4a6d7fb40ce9a53876bb40b64dcb0c0dc6c_0","lines":"    free (diag.cancel);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1112,"col":5,"offset":25203},"end":{"line":1112,"col":23,"offset":25221},"extra":{"metavars":{"$PTR":{"start":{"line":1112,"col":11,"offset":25209},"end":{"line":1112,"col":21,"offset":25219},"abstract_content":"diag.notok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bfb9a15f779d3dc15f27e418a1c2afd0bc5c9a81d8e576f5c582acdbe84ae84c97d45588df9cc04a46657e963279d4e65d80e35e88a8c442c2c407b921e11d18_0","lines":"    free (diag.notok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1122,"col":6,"offset":25472},"end":{"line":1122,"col":38,"offset":25504},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"99a2df1a344ff6788d7885d3d327f52308c9f7b53f727ab9b255810dff4b199e703dec4c41301728bf68c2ee04d2dc10e4b80a7458af184dec77cc5a91b109ca_0","lines":"\t    strcpy (pinentry->pin, pin_utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1122,"col":6,"offset":25472},"end":{"line":1122,"col":38,"offset":25504},"extra":{"metavars":{"$FUN":{"start":{"line":1122,"col":6,"offset":25472},"end":{"line":1122,"col":12,"offset":25478},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b9fdad144bc15b4cad61ee5237fe0016297066cb2d9d917fe4c6e51855784174389c09000443cbd90a8bb4fc90a6265cbaff471a838d48d64e17718579193e09_0","lines":"\t    strcpy (pinentry->pin, pin_utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1150,"col":7,"offset":26002},"end":{"line":1150,"col":39,"offset":26034},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"f3bc94c55cb7d8cd23955f9eda9c362fa0f60a3cbad55fe1bcdf5f3464fac64e4d4eef4cb3845291269adb0f49791a49692f373edf7370c0480916b05060339f_0","lines":"  if (stat (pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":1150,"col":7,"offset":26002},"end":{"line":1150,"col":39,"offset":26034},"extra":{"metavars":{"$FUN":{"start":{"line":1150,"col":7,"offset":26002},"end":{"line":1150,"col":11,"offset":26006},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b10bd2492739a7a1efb70d588655154abacc03870fd140d49f3a2a724a9b383457d1d80121968d0bc596f99934451113343f182d5cc543f32d0ebe4cb7edf585_0","lines":"  if (stat (pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":114,"col":7,"offset":3215},"end":{"line":114,"col":28,"offset":3236},"extra":{"metavars":{"$EXPR":{"start":{"line":114,"col":7,"offset":3215},"end":{"line":114,"col":10,"offset":3218},"abstract_content":"uid","propagated_value":{"svalue_start":{"line":113,"col":9,"offset":3198},"svalue_end":{"line":113,"col":18,"offset":3207},"svalue_abstract_content":"getuid()"}}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"92f9410650d62c7362875d1e58bfab046ae5894bdf413c3004a4cc3a3f06ef2fdf1e0ebf8ea8eecb0c97714a1fbb3c1f074a518a39c1b8b367c2ddf310c7335b_0","lines":"  if (uid != (uint32_t) uid)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":120,"col":12,"offset":3324},"end":{"line":120,"col":29,"offset":3341},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":120,"col":12,"offset":3324},"end":{"line":120,"col":18,"offset":3330},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1efaddbfa361e3eb70148c7d72f3411a3e77fc37ef565bda55fde3e8baff9137009badb5864c93346dc774389be88d42c2223a5d9aa0842a1b894a8016025935_0","lines":"  tmpdir = getenv (\"TMPDIR\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":124,"col":14,"offset":3409},"end":{"line":124,"col":70,"offset":3465},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":124,"col":14,"offset":3409},"end":{"line":124,"col":15,"offset":3410},"abstract_content":"n"},"$SIGNED":{"start":{"line":124,"col":68,"offset":3463},"end":{"line":124,"col":69,"offset":3464},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5cdbd89072d42ebde72b4144be876ad5b1168e1ca2852cb5d77c778d21484bb64859ba8ad6bf779e5ba98956efc9bced5ee247ef0374fb8699a4d4bf38138131_0","lines":"      size_t n = confstr (_CS_DARWIN_USER_TEMP_DIR, NULL, (size_t) 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":127,"col":13,"offset":3499},"end":{"line":127,"col":40,"offset":3526},"extra":{"metavars":{"$RET":{"start":{"line":127,"col":13,"offset":3499},"end":{"line":127,"col":27,"offset":3513},"abstract_content":"tmpdir_storage","propagated_value":{"svalue_start":{"line":127,"col":30,"offset":3516},"svalue_end":{"line":127,"col":40,"offset":3526},"svalue_abstract_content":"malloc(n)"}},"$FUN":{"start":{"line":127,"col":30,"offset":3516},"end":{"line":127,"col":36,"offset":3522},"abstract_content":"malloc"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"2989dd86d0d1feee9bdfe46f75fdab535f332c44bb88ec2762c854a61c51160a0764afbcb82fa1e3b5de2b995612664f5bccd4a393158f6cac92e4d69fc0ded0_0","lines":"\t  tmpdir = tmpdir_storage = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":127,"col":30,"offset":3516},"end":{"line":127,"col":40,"offset":3526},"extra":{"metavars":{"$FUN":{"start":{"line":127,"col":30,"offset":3516},"end":{"line":127,"col":36,"offset":3522},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b545b4302de8cb4c4e3f7d7ef028701a275922a713050e8c0b0db98ff30bcfab2d0324c77dcdd417d4cc2d92a8ad9ab7fae66594ae81e72602bc2724bf623ccb_0","lines":"\t  tmpdir = tmpdir_storage = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":140,"col":25,"offset":3745},"end":{"line":143,"col":9,"offset":3848},"extra":{"metavars":{"$FUN":{"start":{"line":140,"col":25,"offset":3745},"end":{"line":140,"col":31,"offset":3751},"abstract_content":"malloc"},"$X":{"start":{"line":140,"col":33,"offset":3753},"end":{"line":142,"col":27,"offset":3839},"abstract_content":"strlen(tmpdir)+strlen(\"/emacs\")+10+strlen(\"/\")+strlen(socket_name)"},"$Y":{"start":{"line":143,"col":7,"offset":3846},"end":{"line":143,"col":8,"offset":3847},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"33352d2809e4b84eb984d80cf0984a2d00a32b488470724793ee527c2a0939f68d7f9dee96b989d72863ea4fcd67e5fb8c1b9eaeafffe3678134de2015bd1db6_0","lines":"  socket_name_storage = malloc (strlen (tmpdir)\n\t\t\t\t+ strlen (\"/emacs\") + 10 + strlen (\"/\")\n\t\t\t\t+ strlen (socket_name)\n\t\t\t\t+ 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":140,"col":25,"offset":3745},"end":{"line":143,"col":9,"offset":3848},"extra":{"metavars":{"$FUN":{"start":{"line":140,"col":25,"offset":3745},"end":{"line":140,"col":31,"offset":3751},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b545b4302de8cb4c4e3f7d7ef028701a275922a713050e8c0b0db98ff30bcfab2d0324c77dcdd417d4cc2d92a8ad9ab7fae66594ae81e72602bc2724bf623ccb_1","lines":"  socket_name_storage = malloc (strlen (tmpdir)\n\t\t\t\t+ strlen (\"/emacs\") + 10 + strlen (\"/\")\n\t\t\t\t+ strlen (socket_name)\n\t\t\t\t+ 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":147,"col":7,"offset":3931},"end":{"line":147,"col":29,"offset":3953},"extra":{"metavars":{"$PTR":{"start":{"line":147,"col":13,"offset":3937},"end":{"line":147,"col":27,"offset":3951},"abstract_content":"tmpdir_storage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5ad044747940649046a5aa35847c92c7f595b1de926f53719776d363ab8a148acde5c19bbb596ec6ec2d1b4f39a848526514a17c5ccd28bdac0ed58f272b04df_0","lines":"      free (tmpdir_storage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-sprintf-vsprintf","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":151,"col":3,"offset":3979},"end":{"line":152,"col":33,"offset":4066},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"%s/emacs%u/%s\""},"$BUF":{"start":{"line":151,"col":12,"offset":3988},"end":{"line":151,"col":31,"offset":4007},"abstract_content":"socket_name_storage","propagated_value":{"svalue_start":{"line":140,"col":25,"offset":3745},"svalue_end":{"line":143,"col":9,"offset":3848},"svalue_abstract_content":"malloc(strlen(tmpdir)+strlen(\"/emacs\")+10+strlen(\"/\")+strlen(socket_name)+1)"}},"$FMT":{"start":{"line":151,"col":33,"offset":4009},"end":{"line":151,"col":48,"offset":4024},"abstract_content":"\"%s/emacs%u/%s\""}},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"9f07a6f2c099dee09c8993600e61dbaa53008b0d893ecb66cbf998f2d0d7f9730ab5b7de46dfaf60989ba4833fc543ee3e2c9edce0606d28e07b49be993bc430_0","lines":"  sprintf (socket_name_storage, \"%s/emacs%u/%s\", tmpdir,\n\t   (uint32_t) uid, socket_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":151,"col":3,"offset":3979},"end":{"line":152,"col":33,"offset":4066},"extra":{"metavars":{"$FUN":{"start":{"line":151,"col":3,"offset":3979},"end":{"line":151,"col":10,"offset":3986},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"51b854a6e52ebe8451be95c11956ee3dfc830648ce8d279530a14c018ad0f22c13a4116c66fb8b6fe031e42835068a33e23feb76727f34ba37b65048a24b63dd_0","lines":"  sprintf (socket_name_storage, \"%s/emacs%u/%s\", tmpdir,\n\t   (uint32_t) uid, socket_name);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":153,"col":3,"offset":4070},"end":{"line":153,"col":25,"offset":4092},"extra":{"metavars":{"$PTR":{"start":{"line":153,"col":9,"offset":4076},"end":{"line":153,"col":23,"offset":4090},"abstract_content":"tmpdir_storage"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5ad044747940649046a5aa35847c92c7f595b1de926f53719776d363ab8a148acde5c19bbb596ec6ec2d1b4f39a848526514a17c5ccd28bdac0ed58f272b04df_1","lines":"  free (tmpdir_storage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":162,"col":3,"offset":4276},"end":{"line":162,"col":48,"offset":4321},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b3f4402afe4b8a29b6dab6ed5bb44b7f716e10bf9be8b57d34dc6d20a3c56371c0b9767297fd5ca48a2240176b230c17b0affb3c04b4b13fdfa1872a46c7d67d_0","lines":"  strcpy (unaddr.sun_path, socket_name_storage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":162,"col":3,"offset":4276},"end":{"line":162,"col":48,"offset":4321},"extra":{"metavars":{"$FUN":{"start":{"line":162,"col":3,"offset":4276},"end":{"line":162,"col":9,"offset":4282},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b45883e897ca1cffceb937ea06da76b0ec1512c2b23e7fdf64739f1bbf9c05c0d02f3e3a5516a788b4e16edd1daf4210385dfa39ef6a92195366d4cde949022_0","lines":"  strcpy (unaddr.sun_path, socket_name_storage);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":166,"col":7,"offset":4419},"end":{"line":166,"col":39,"offset":4451},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"ec637ca8cd0dd07aae4ec61d628a39b443f99766208c0a4363100aeb00c9912c8367eb23c9bf4f90d799dfc2a8a7e929bb33a95f2399450be599106ef9e13e99_0","lines":"  if (stat (unaddr.sun_path, &statbuf) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":166,"col":7,"offset":4419},"end":{"line":166,"col":39,"offset":4451},"extra":{"metavars":{"$FUN":{"start":{"line":166,"col":7,"offset":4419},"end":{"line":166,"col":11,"offset":4423},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb44019c1bbfd0d2ed6f7ed827b53459e8684e1fe43cdabe78a4e92add3b0ff6e4ed6ec4f99500a8eef68d81eefac06d35298e4f4a8f1f8ea786f4bb2b8bf719_0","lines":"  if (stat (unaddr.sun_path, &statbuf) == -1)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":205,"col":10,"offset":5195},"end":{"line":205,"col":19,"offset":5204},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":205,"col":10,"offset":5195},"end":{"line":205,"col":15,"offset":5200},"abstract_content":"count"},"$SIGNED":{"start":{"line":205,"col":18,"offset":5203},"end":{"line":205,"col":19,"offset":5204},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"92729dc1dc78f165f1d24924a208e13eccc385908adbf79228f016be1edb9d73589d4f7618245f6beb448dfed5d5b6b1beef054a0413e5d0243880fd24bcc8f0_0","lines":"  size_t count = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":208,"col":8,"offset":5240},"end":{"line":208,"col":18,"offset":5250},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":208,"col":8,"offset":5240},"end":{"line":208,"col":14,"offset":5246},"abstract_content":"offset"},"$SIGNED":{"start":{"line":208,"col":17,"offset":5249},"end":{"line":208,"col":18,"offset":5250},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bb77304eb885e760a9c5bb718ae33edc260f58cea455aec362128712ae7513672238d8a33d8de3923ae3150726f4337dfcb457ed877e6874b3f017855d6df64a_0","lines":"  for (offset = 0; offset < length; offset++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":220,"col":3,"offset":5403},"end":{"line":220,"col":37,"offset":5437},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":220,"col":3,"offset":5403},"end":{"line":220,"col":16,"offset":5416},"abstract_content":"buffer_length"},"$SIGNED":{"start":{"line":220,"col":36,"offset":5436},"end":{"line":220,"col":37,"offset":5437},"abstract_content":"2"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"1f48cfa9b8f7fb7eedf7897f71439480bb8e200521bc935d4a0e03f38f6d7181d5178f875b7c2bb3034147225279a1e18c36002e6fa621c7581559fdbcc6abac_0","lines":"  buffer_length = length + count * 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":221,"col":12,"offset":5450},"end":{"line":221,"col":38,"offset":5476},"extra":{"metavars":{"$FUN":{"start":{"line":221,"col":12,"offset":5450},"end":{"line":221,"col":18,"offset":5456},"abstract_content":"malloc"},"$X":{"start":{"line":221,"col":20,"offset":5458},"end":{"line":221,"col":33,"offset":5471},"abstract_content":"buffer_length","propagated_value":{"svalue_start":{"line":220,"col":19,"offset":5419},"svalue_end":{"line":220,"col":37,"offset":5437},"svalue_abstract_content":"length+count*2"}},"$Y":{"start":{"line":221,"col":36,"offset":5474},"end":{"line":221,"col":37,"offset":5475},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bf0bdf0218b20bc918ef19ccaca0f45595bb140f41923d61a81d70c3904e5989d39089a86a18bebb26bf1f05eb2dcfc72fb77300a8118a26abea6f35f339f772_0","lines":"  buffer = malloc (buffer_length + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":221,"col":12,"offset":5450},"end":{"line":221,"col":38,"offset":5476},"extra":{"metavars":{"$FUN":{"start":{"line":221,"col":12,"offset":5450},"end":{"line":221,"col":18,"offset":5456},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b545b4302de8cb4c4e3f7d7ef028701a275922a713050e8c0b0db98ff30bcfab2d0324c77dcdd417d4cc2d92a8ad9ab7fae66594ae81e72602bc2724bf623ccb_2","lines":"  buffer = malloc (buffer_length + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":226,"col":8,"offset":5536},"end":{"line":226,"col":18,"offset":5546},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":226,"col":8,"offset":5536},"end":{"line":226,"col":14,"offset":5542},"abstract_content":"offset"},"$SIGNED":{"start":{"line":226,"col":17,"offset":5545},"end":{"line":226,"col":18,"offset":5546},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bb77304eb885e760a9c5bb718ae33edc260f58cea455aec362128712ae7513672238d8a33d8de3923ae3150726f4337dfcb457ed877e6874b3f017855d6df64a_1","lines":"  for (offset = 0; offset < length; offset++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":228,"col":11,"offset":5591},"end":{"line":228,"col":27,"offset":5607},"extra":{"metavars":{"$SIGNED":{"start":{"line":228,"col":11,"offset":5591},"end":{"line":228,"col":12,"offset":5592},"abstract_content":"c"},"$UNSIGNED":{"start":{"line":228,"col":20,"offset":5600},"end":{"line":228,"col":26,"offset":5606},"abstract_content":"offset"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"f8485f4b7a1c92d234bcfd5691b214272a77feeaa51b0f7fbff099d32d7ec6cf4654d0b678ac740f1a597d7f51306cf11eec59bc1dfaa576c26cf6bc42c10757_0","lines":"      int c = data[offset];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":232,"col":4,"offset":5665},"end":{"line":232,"col":32,"offset":5693},"extra":{"metavars":{"$FUN":{"start":{"line":232,"col":4,"offset":5665},"end":{"line":232,"col":11,"offset":5672},"abstract_content":"sprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"51b854a6e52ebe8451be95c11956ee3dfc830648ce8d279530a14c018ad0f22c13a4116c66fb8b6fe031e42835068a33e23feb76727f34ba37b65048a24b63dd_1","lines":"\t  sprintf (out_p, \"%%%02X\", c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":232,"col":4,"offset":5665},"end":{"line":232,"col":32,"offset":5693},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"%%%02X\""},"$ARG1":{"start":{"line":232,"col":13,"offset":5674},"end":{"line":232,"col":18,"offset":5679},"abstract_content":"out_p"},"$FMT":{"start":{"line":232,"col":20,"offset":5681},"end":{"line":232,"col":28,"offset":5689},"abstract_content":"\"%%%02X\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"5215b6c0be3821df1c6b59b9b05edb76824f341879e17d66d6b82dad6b45fe57d953a4e7662ee69c2a040191e76cf68af9898d0fc2c965597b37e26a970faf24_0","lines":"\t  sprintf (out_p, \"%%%02X\", c);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":280,"col":14,"offset":6537},"end":{"line":280,"col":72,"offset":6595},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":280,"col":14,"offset":6537},"end":{"line":280,"col":18,"offset":6541},"abstract_content":"part"},"$SIGNED":{"start":{"line":280,"col":34,"offset":6557},"end":{"line":280,"col":50,"offset":6573},"abstract_content":"SEND_BUFFER_SIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e19c56c87a5fda7fce17cd05f3f51adb5faea0c4f84833706b19d5a081304af8a7c863f36353015479da4c2f083f6accd0a5157b89fc3b7c7a6f4ac1bfb491fe_0","lines":"      size_t part = MIN (length, SEND_BUFFER_SIZE - send_buffer_length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":281,"col":7,"offset":6603},"end":{"line":281,"col":62,"offset":6658},"extra":{"metavars":{"$FUN":{"start":{"line":281,"col":7,"offset":6603},"end":{"line":281,"col":13,"offset":6609},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3c4f7692b5c996866f764942d4d7001d31248bb8f2835288aa98e749030442c86af8242bd2c30c1cd3161467a53a67a58de765ece6338f65512c09350ae53d3d_0","lines":"      memcpy (&send_buffer[send_buffer_length], buffer, part);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":298,"col":6,"offset":7147},"end":{"line":299,"col":34,"offset":7222},"extra":{"metavars":{"$FUN":{"start":{"line":298,"col":6,"offset":7147},"end":{"line":298,"col":13,"offset":7154},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86f666a75d63bbd18193dd96bf24ad9afc0d94937ada99f5c8431d5c2c3a66b0dd88ad60f97223fec175f9e7aa83ff69ff07a558d2ced10e003f7f52beaa28b2_0","lines":"\t    memmove (send_buffer, &send_buffer[sent],\n\t\t     send_buffer_length - sent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":298,"col":6,"offset":7147},"end":{"line":299,"col":34,"offset":7222},"extra":{"metavars":{"$DST":{"start":{"line":298,"col":15,"offset":7156},"end":{"line":298,"col":26,"offset":7167},"abstract_content":"send_buffer"},"$SRC":{"start":{"line":298,"col":28,"offset":7169},"end":{"line":298,"col":46,"offset":7187},"abstract_content":"&send_buffer[sent]"},"$LEN":{"start":{"line":299,"col":8,"offset":7196},"end":{"line":299,"col":33,"offset":7221},"abstract_content":"send_buffer_length-sent"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fd80029ab98ec4c3ec402c495c7b6b6f4c90d0b7cc7fb0a5a34e60172f36e3764956fda013ef1f1b3533c61c795082ef83fe7b33deb942e53a80448f99b3829f_0","lines":"\t    memmove (send_buffer, &send_buffer[sent],\n\t\t     send_buffer_length - sent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":298,"col":6,"offset":7147},"end":{"line":299,"col":34,"offset":7222},"extra":{"metavars":{"$TYPE":{"start":{"line":90,"col":8,"offset":2644},"end":{"line":90,"col":12,"offset":2648},"abstract_content":"char"},"$LEN":{"start":{"line":90,"col":25,"offset":2661},"end":{"line":90,"col":45,"offset":2681},"abstract_content":"SEND_BUFFER_SIZE+1"},"$FUN":{"start":{"line":298,"col":6,"offset":7147},"end":{"line":298,"col":13,"offset":7154},"abstract_content":"memmove"},"$BUF":{"start":{"line":298,"col":15,"offset":7156},"end":{"line":298,"col":26,"offset":7167},"abstract_content":"send_buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"2512dfc2b4344e502219e25b8471a3209d1da6b7767734495be07639921c941d2f8c8151a9d168126c562463ed847ea99655fc859f1e3474f243abab9afa9c3c_0","lines":"\t    memmove (send_buffer, &send_buffer[sent],\n\t\t     send_buffer_length - sent);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":319,"col":10,"offset":7651},"end":{"line":319,"col":20,"offset":7661},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":319,"col":10,"offset":7651},"end":{"line":319,"col":16,"offset":7657},"abstract_content":"offset"},"$SIGNED":{"start":{"line":319,"col":19,"offset":7660},"end":{"line":319,"col":20,"offset":7661},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"bb77304eb885e760a9c5bb718ae33edc260f58cea455aec362128712ae7513672238d8a33d8de3923ae3150726f4337dfcb457ed877e6874b3f017855d6df64a_2","lines":"  size_t offset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":323,"col":10,"offset":7764},"end":{"line":323,"col":25,"offset":7779},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":323,"col":10,"offset":7764},"end":{"line":323,"col":21,"offset":7775},"abstract_content":"read_offset"},"$SIGNED":{"start":{"line":323,"col":24,"offset":7778},"end":{"line":323,"col":25,"offset":7779},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"186386aba26a8b1530ef0ba376a786dba19dffe97679fc5d8f8aa343181b5a1498110c972830da4f3785cd9d6bf5a8f1c2a3313b0cc31d292ed3cdb18242d123_0","lines":"  size_t read_offset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":351,"col":4,"offset":8289},"end":{"line":351,"col":73,"offset":8358},"extra":{"metavars":{"$SIGNED":{"start":{"line":351,"col":4,"offset":8289},"end":{"line":351,"col":6,"offset":8291},"abstract_content":"rl"},"$UNSIGNED":{"start":{"line":351,"col":32,"offset":8317},"end":{"line":351,"col":43,"offset":8328},"abstract_content":"read_offset"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"fa41dd7a0387af6b11fca5d8be92c3f9b778a6ab043cbe5fc201678f6c8ddbb6ae812e5883a7d7aafccb8040450216a9cd1f3c7ec9556863c1128b7bcfc305e9_0","lines":"\t  rl = recv (s, read_buffer + read_offset, LINELENGTH - read_offset, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":351,"col":9,"offset":8294},"end":{"line":351,"col":73,"offset":8358},"extra":{"metavars":{"$FUN":{"start":{"line":351,"col":9,"offset":8294},"end":{"line":351,"col":13,"offset":8298},"abstract_content":"recv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a3cce0ea945e7faa7c2ac920f88e547411251245b285180f15b9bcc8b5e24a008067b839e1f05e5893087fa418c6c83750acfbc57d8b0199907ddc4cea164231_0","lines":"\t  rl = recv (s, read_buffer + read_offset, LINELENGTH - read_offset, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":377,"col":4,"offset":9012},"end":{"line":377,"col":19,"offset":9027},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":377,"col":4,"offset":9012},"end":{"line":377,"col":15,"offset":9023},"abstract_content":"read_offset"},"$SIGNED":{"start":{"line":377,"col":18,"offset":9026},"end":{"line":377,"col":19,"offset":9027},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"186386aba26a8b1530ef0ba376a786dba19dffe97679fc5d8f8aa343181b5a1498110c972830da4f3785cd9d6bf5a8f1c2a3313b0cc31d292ed3cdb18242d123_1","lines":"\t  read_offset = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":392,"col":22,"offset":9351},"end":{"line":392,"col":34,"offset":9363},"extra":{"metavars":{"$PTR1":{"start":{"line":392,"col":22,"offset":9351},"end":{"line":392,"col":27,"offset":9356},"abstract_content":"end_p"},"$PTR2":{"start":{"line":392,"col":30,"offset":9359},"end":{"line":392,"col":34,"offset":9363},"abstract_content":"data","propagated_value":{"svalue_start":{"line":391,"col":15,"offset":9323},"svalue_end":{"line":391,"col":20,"offset":9328},"svalue_abstract_content":"p+2"}}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"35755de709db75cccf14ac41c252551ff9c085f103301f96759fb6f9914ff606065086d23b5e6acde14f0b35953cfbfa0ffac87bee26e7061420f3b319994d9a_0","lines":"\t      data_length = end_p - data;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":395,"col":5,"offset":9401},"end":{"line":395,"col":47,"offset":9443},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":395,"col":5,"offset":9401},"end":{"line":395,"col":20,"offset":9416},"abstract_content":"needed_capacity"},"$SIGNED":{"start":{"line":395,"col":46,"offset":9442},"end":{"line":395,"col":47,"offset":9443},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"dae66e70cd98028c162413669bd8df6534e4140f1c8f98f726bd3a939b96a21e35048e68b64627f4507d09db972042c81ec9bf159a6ea392d1de7c07e8b2f682_0","lines":"\t\t  needed_capacity = offset + data_length + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":405,"col":5,"offset":9714},"end":{"line":405,"col":48,"offset":9757},"extra":{"metavars":{"$FUN":{"start":{"line":405,"col":5,"offset":9714},"end":{"line":405,"col":11,"offset":9720},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3c4f7692b5c996866f764942d4d7001d31248bb8f2835288aa98e749030442c86af8242bd2c30c1cd3161467a53a67a58de765ece6338f65512c09350ae53d3d_1","lines":"\t\t  memcpy (&buffer[offset], data, data_length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":425,"col":9,"offset":10246},"end":{"line":428,"col":52,"offset":10327},"extra":{"metavars":{"$COND":{"start":{"line":425,"col":13,"offset":10250},"end":{"line":425,"col":22,"offset":10259},"abstract_content":"*p=='#'"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"913442bb933034f3653804bcaa9055ba8ee26d29273a382362b83b949c2145b92f10aa4c5400d1446b381746f502747ca5390c4bddcf41d4e28cbad31768b218_0","lines":"\t  else if (*p == '#')\n\t    ;\n\t  else\n\t    fprintf (stderr, \"invalid response: %s\\n\", p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":434,"col":4,"offset":10413},"end":{"line":434,"col":36,"offset":10445},"extra":{"metavars":{"$FUN":{"start":{"line":434,"col":4,"offset":10413},"end":{"line":434,"col":11,"offset":10420},"abstract_content":"memmove"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"86f666a75d63bbd18193dd96bf24ad9afc0d94937ada99f5c8431d5c2c3a66b0dd88ad60f97223fec175f9e7aa83ff69ff07a558d2ced10e003f7f52beaa28b2_1","lines":"\t  memmove (read_buffer, p, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":434,"col":4,"offset":10413},"end":{"line":434,"col":36,"offset":10445},"extra":{"metavars":{"$TYPE":{"start":{"line":321,"col":3,"offset":7689},"end":{"line":321,"col":7,"offset":7693},"abstract_content":"char"},"$LEN":{"start":{"line":321,"col":20,"offset":7706},"end":{"line":321,"col":34,"offset":7720},"abstract_content":"LINELENGTH+1"},"$FUN":{"start":{"line":434,"col":4,"offset":10413},"end":{"line":434,"col":11,"offset":10420},"abstract_content":"memmove"},"$BUF":{"start":{"line":434,"col":13,"offset":10422},"end":{"line":434,"col":24,"offset":10433},"abstract_content":"read_buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"bb837ce58b7df96d3325f7b3ec948e4370b2f4e9b4da7bbe7afad0566e09abd4ddc1cc6f623ac842ad70f5da83a4c5281c4df950417283c30c3286a501be6b61_0","lines":"\t  memmove (read_buffer, p, length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":460,"col":3,"offset":10892},"end":{"line":460,"col":18,"offset":10907},"extra":{"metavars":{"$PTR":{"start":{"line":460,"col":9,"offset":10898},"end":{"line":460,"col":16,"offset":10905},"abstract_content":"escaped","propagated_value":{"svalue_start":{"line":453,"col":13,"offset":10750},"svalue_end":{"line":453,"col":27,"offset":10764},"svalue_abstract_content":"escape(value)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f0b9814c4cb058255e7aac165fe4b2c39b7c4930ef6f0768c8c5176821f07fb60782c9e8ede672721f2468b191522bc66ddb46acc8bc127a2a13d3128426b84a_0","lines":"  free (escaped);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":477,"col":7,"offset":11184},"end":{"line":477,"col":16,"offset":11193},"extra":{"metavars":{"$PTR":{"start":{"line":477,"col":13,"offset":11190},"end":{"line":477,"col":14,"offset":11191},"abstract_content":"p","propagated_value":{"svalue_start":{"line":473,"col":7,"offset":11101},"svalue_end":{"line":473,"col":30,"offset":11124},"svalue_abstract_content":"pinentry_get_title(pe)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1e9ed2267d16ae877bb494306b7f66cc53337ac51d9af12cc13785f40981fe649eb2db6d96988c74bc52c82af3c7cc1072eca05d18fa601e08144ce72db87efb_0","lines":"      free (p);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":519,"col":12,"offset":12294},"end":{"line":519,"col":34,"offset":12316},"extra":{"metavars":{"$FUN":{"start":{"line":519,"col":12,"offset":12294},"end":{"line":519,"col":25,"offset":12307},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"08458dc54d7157442ef2c46aff6cbdd9ca1e09b9a46fca87a5f6617d846c9854eef93843e166359fa5fac808910058d5f466d2f286a32d821e00a59583f3e2e2_0","lines":"  buffer = secmem_malloc (length);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":540,"col":5,"offset":12771},"end":{"line":540,"col":31,"offset":12797},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"b3f4402afe4b8a29b6dab6ed5bb44b7f716e10bf9be8b57d34dc6d20a3c56371c0b9767297fd5ca48a2240176b230c17b0affb3c04b4b13fdfa1872a46c7d67d_1","lines":"    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":540,"col":5,"offset":12771},"end":{"line":540,"col":31,"offset":12797},"extra":{"metavars":{"$FUN":{"start":{"line":540,"col":5,"offset":12771},"end":{"line":540,"col":11,"offset":12777},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3b45883e897ca1cffceb937ea06da76b0ec1512c2b23e7fdf64739f1bbf9c05c0d02f3e3a5516a788b4e16edd1daf4210385dfa39ef6a92195366d4cde949022_1","lines":"    strcpy (pe->pin, password);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":586,"col":7,"offset":13602},"end":{"line":586,"col":39,"offset":13634},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"ec637ca8cd0dd07aae4ec61d628a39b443f99766208c0a4363100aeb00c9912c8367eb23c9bf4f90d799dfc2a8a7e929bb33a95f2399450be599106ef9e13e99_1","lines":"  if (stat (pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":586,"col":7,"offset":13602},"end":{"line":586,"col":39,"offset":13634},"extra":{"metavars":{"$FUN":{"start":{"line":586,"col":7,"offset":13602},"end":{"line":586,"col":11,"offset":13606},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bb44019c1bbfd0d2ed6f7ed827b53459e8684e1fe43cdabe78a4e92add3b0ff6e4ed6ec4f99500a8eef68d81eefac06d35298e4f4a8f1f8ea786f4bb2b8bf719_1","lines":"  if (stat (pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":673,"col":12,"offset":15562},"end":{"line":673,"col":35,"offset":15585},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":673,"col":12,"offset":15562},"end":{"line":673,"col":18,"offset":15568},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1efaddbfa361e3eb70148c7d72f3411a3e77fc37ef565bda55fde3e8baff9137009badb5864c93346dc774389be88d42c2223a5d9aa0842a1b894a8016025935_1","lines":"  envvar = getenv (\"INSIDE_EMACS\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":689,"col":3,"offset":15939},"end":{"line":689,"col":28,"offset":15964},"extra":{"metavars":{"$ASSERT":{"start":{"line":689,"col":3,"offset":15939},"end":{"line":689,"col":9,"offset":15945},"abstract_content":"assert"},"$A":{"start":{"line":689,"col":11,"offset":15947},"end":{"line":689,"col":23,"offset":15959},"abstract_content":"emacs_socket"},"$B":{"start":{"line":689,"col":26,"offset":15962},"end":{"line":689,"col":27,"offset":15963},"abstract_content":"0"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c503486523a1b2995b8e9ef075e80f6260416ba117a6b56b7179ea4f7d990afd2933a5b19bbc00b335818635a1adfbe69ae5c6b1a12056d76017a2d7214383a3_0","lines":"  assert (emacs_socket < 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":137,"col":7,"offset":3953},"end":{"line":137,"col":31,"offset":3977},"extra":{"metavars":{"$PTR":{"start":{"line":137,"col":13,"offset":3959},"end":{"line":137,"col":29,"offset":3975},"abstract_content":"pinentry.ttyname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9ec759a457164cce410a71e15b5acdd5f082bf69a61715fcdce3e0f14ed1dafd6c413b8a52fbe5fa1237e101f36ffdd357e66934ad01bacb5d5bfa3cb8271139_0","lines":"      free (pinentry.ttyname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":138,"col":7,"offset":3984},"end":{"line":138,"col":31,"offset":4008},"extra":{"metavars":{"$PTR":{"start":{"line":138,"col":13,"offset":3990},"end":{"line":138,"col":29,"offset":4006},"abstract_content":"pinentry.ttytype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba766fdda030030add3d97e29573455a244fea74102e287a92151a174cf0a62a9d2c8f0f2812135bae760c1261c6b01f84120afcd8e8f663027bfb3ae3d4d1cc_0","lines":"      free (pinentry.ttytype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":139,"col":7,"offset":4015},"end":{"line":139,"col":32,"offset":4040},"extra":{"metavars":{"$PTR":{"start":{"line":139,"col":13,"offset":4021},"end":{"line":139,"col":30,"offset":4038},"abstract_content":"pinentry.ttyalert"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b7a7ee4d803ebc827d45691cc12c05cda52eb7e452cf931d805e1e5e199cc8bf174c1bae9cac15b43e9a670b7ff7eab31158a141357ac6498147be3d2a21111b_0","lines":"      free (pinentry.ttyalert);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":140,"col":7,"offset":4047},"end":{"line":140,"col":32,"offset":4072},"extra":{"metavars":{"$PTR":{"start":{"line":140,"col":13,"offset":4053},"end":{"line":140,"col":30,"offset":4070},"abstract_content":"pinentry.lc_ctype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"838b8e444e1b9ab32880f454913d86ca10a7fecb6cdb6a174e552a47a0856d36bc02715a2456ba605b8c3269ab228e61261271a19ca2d977421c656c3a43e1e2_0","lines":"      free (pinentry.lc_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":141,"col":7,"offset":4079},"end":{"line":141,"col":35,"offset":4107},"extra":{"metavars":{"$PTR":{"start":{"line":141,"col":13,"offset":4085},"end":{"line":141,"col":33,"offset":4105},"abstract_content":"pinentry.lc_messages"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6270c38caad48117a8175cbccd5ffe77dd79daeff8a82d7fc182b4ddf7e814ca98dbc680e2cc8165f4ade9b04d1156509bd8b93a690e1b911dc3b288d33e6bf5_0","lines":"      free (pinentry.lc_messages);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":142,"col":7,"offset":4114},"end":{"line":142,"col":34,"offset":4141},"extra":{"metavars":{"$PTR":{"start":{"line":142,"col":13,"offset":4120},"end":{"line":142,"col":32,"offset":4139},"abstract_content":"pinentry.default_ok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a12b283a6d82c49f5d570bc6f87ae66fbe9dc18fb16a56203d2df8786bbf23ef85e757ab8517b5434d6a707bd14dee5c40cdbb120c7d7a460c942e43de1d80e9_0","lines":"      free (pinentry.default_ok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":143,"col":7,"offset":4148},"end":{"line":143,"col":38,"offset":4179},"extra":{"metavars":{"$PTR":{"start":{"line":143,"col":13,"offset":4154},"end":{"line":143,"col":36,"offset":4177},"abstract_content":"pinentry.default_cancel"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6dec3f54f3f602bc57591711ca53ec60f5e6326af5f2db9edfc30d241131e4cbf80e4a9269a925fa46e9f5a3d03c7a83aee12511fe8534a1e9982a02832a3360_0","lines":"      free (pinentry.default_cancel);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":144,"col":7,"offset":4186},"end":{"line":144,"col":38,"offset":4217},"extra":{"metavars":{"$PTR":{"start":{"line":144,"col":13,"offset":4192},"end":{"line":144,"col":36,"offset":4215},"abstract_content":"pinentry.default_prompt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"e72414261ea634ae4bafadcf7221d0f9fd2917b66aacdd097d834e50a7d9170c64d9e0287f37e847702ba4a1c5129a8de5776c818555893eaa3feb7ef721ec17_0","lines":"      free (pinentry.default_prompt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":145,"col":7,"offset":4224},"end":{"line":145,"col":38,"offset":4255},"extra":{"metavars":{"$PTR":{"start":{"line":145,"col":13,"offset":4230},"end":{"line":145,"col":36,"offset":4253},"abstract_content":"pinentry.default_pwmngr"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"418ae9c75739ce6d44cca19c2557822af12a0588b2fbd33058eb2a7edac1ec42f66dbf93ecca56ffbb1a1eedb64567723650e6f30bc4760c16d557986e3102ad_0","lines":"      free (pinentry.default_pwmngr);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":146,"col":7,"offset":4262},"end":{"line":146,"col":39,"offset":4294},"extra":{"metavars":{"$PTR":{"start":{"line":146,"col":13,"offset":4268},"end":{"line":146,"col":37,"offset":4292},"abstract_content":"pinentry.default_cf_visi"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a5180a492a790db023a5b14392a5b0f90e45d0b6824adee4751b58991100737191fb340a60dd3422275a8b5e7f3e9dc68f4ca0f4efb52998a54a83ff47daa204_0","lines":"      free (pinentry.default_cf_visi);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":147,"col":7,"offset":4301},"end":{"line":147,"col":39,"offset":4333},"extra":{"metavars":{"$PTR":{"start":{"line":147,"col":13,"offset":4307},"end":{"line":147,"col":37,"offset":4331},"abstract_content":"pinentry.default_tt_visi"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"654f58d477f7614f3f1dcb5c12123357c4e0c5589cd9c01c3ac3919f5cfe61ec723fe2121f8182e78959aa62cd8c6414cf91c73975dbb5c64ce80163904bd13e_0","lines":"      free (pinentry.default_tt_visi);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":148,"col":7,"offset":4340},"end":{"line":148,"col":39,"offset":4372},"extra":{"metavars":{"$PTR":{"start":{"line":148,"col":13,"offset":4346},"end":{"line":148,"col":37,"offset":4370},"abstract_content":"pinentry.default_tt_hide"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b6e2313a40ef91dbc0a5b6cb90f703084d5d62c62357651c7db4215fc6ff7abd18381220a36ee89c5055e6dc6d8d147ce8f76945b3d1ecdc3f78da5315cd306b_0","lines":"      free (pinentry.default_tt_hide);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":149,"col":7,"offset":4379},"end":{"line":149,"col":34,"offset":4406},"extra":{"metavars":{"$PTR":{"start":{"line":149,"col":13,"offset":4385},"end":{"line":149,"col":32,"offset":4404},"abstract_content":"pinentry.touch_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"22b15e5c2f9c0fd5a373a03a96333fa45b68c233f01b3b7aab9f548735eac0d29d4023816a0bd99f98317d1b3be4b9596115e7bfeb82864d429381707dcfc65f_0","lines":"      free (pinentry.touch_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":150,"col":7,"offset":4413},"end":{"line":150,"col":34,"offset":4440},"extra":{"metavars":{"$PTR":{"start":{"line":150,"col":13,"offset":4419},"end":{"line":150,"col":32,"offset":4438},"abstract_content":"pinentry.owner_host"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3b414fe7f642ee75a09f6b10d0fe92296ec1bf0d06ae3cabfa523644078bf99132cbf672dd23ea7251bfb7d109a7c55247f60775774eef22937bd061e3abb3f9_0","lines":"      free (pinentry.owner_host);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":151,"col":7,"offset":4447},"end":{"line":151,"col":31,"offset":4471},"extra":{"metavars":{"$PTR":{"start":{"line":151,"col":13,"offset":4453},"end":{"line":151,"col":29,"offset":4469},"abstract_content":"pinentry.display"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a213ebcee8615d87f876b0f84dab994f7a7f3775dd8abce0466115edb1415680b27a2548c944dc8c881f09c226e898a5cd07af3723024b7d713df2f92b2b4a1e_0","lines":"      free (pinentry.display);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":154,"col":3,"offset":4481},"end":{"line":154,"col":25,"offset":4503},"extra":{"metavars":{"$PTR":{"start":{"line":154,"col":9,"offset":4487},"end":{"line":154,"col":23,"offset":4501},"abstract_content":"pinentry.title"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9ce996f577ee16b3add1b2aee71f481970de98a0c2c82f3ee3c6ccc4ce34b0999641803e4194eaade447879f1df906a1a57d334486c53769198c5882a8a21dd_0","lines":"  free (pinentry.title);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":155,"col":3,"offset":4506},"end":{"line":155,"col":31,"offset":4534},"extra":{"metavars":{"$PTR":{"start":{"line":155,"col":9,"offset":4512},"end":{"line":155,"col":29,"offset":4532},"abstract_content":"pinentry.description"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77c7cf8a0bf5279fd50e5efd5ce211d9044953172050de33a6f447e705888040e674a9c43e53a73e4ead57d0025604eb4f2647598ddb2f7367b4beb568486d38_0","lines":"  free (pinentry.description);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":156,"col":3,"offset":4537},"end":{"line":156,"col":25,"offset":4559},"extra":{"metavars":{"$PTR":{"start":{"line":156,"col":9,"offset":4543},"end":{"line":156,"col":23,"offset":4557},"abstract_content":"pinentry.error"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcf0d89ed1d48d27ff555ad06912c6b177c293680da74704b6f5456ed9b8dace8cf33632f520190a1223cb4248984cca94038040077dfcc5ea8f2490f01b334b_0","lines":"  free (pinentry.error);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":157,"col":3,"offset":4562},"end":{"line":157,"col":26,"offset":4585},"extra":{"metavars":{"$PTR":{"start":{"line":157,"col":9,"offset":4568},"end":{"line":157,"col":24,"offset":4583},"abstract_content":"pinentry.prompt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2910f524637dcf033d3c1986b70e128f7f3faceb4f46342c330d6b3e6d8db473a652070c6f348c19c77468d57b4d6e1f4beb103040bf721012b8d1c5d571cb5f_0","lines":"  free (pinentry.prompt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":158,"col":3,"offset":4588},"end":{"line":158,"col":22,"offset":4607},"extra":{"metavars":{"$PTR":{"start":{"line":158,"col":9,"offset":4594},"end":{"line":158,"col":20,"offset":4605},"abstract_content":"pinentry.ok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"900acd30dff0fcce31c7e794b3ded116e1b14ce96f87527980abf5246dc44889455428442ea92424e9f8031d0c05511cc9f50d335220ebb12ff95690e99e0a46_0","lines":"  free (pinentry.ok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":159,"col":3,"offset":4610},"end":{"line":159,"col":25,"offset":4632},"extra":{"metavars":{"$PTR":{"start":{"line":159,"col":9,"offset":4616},"end":{"line":159,"col":23,"offset":4630},"abstract_content":"pinentry.notok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1bca7220136ad6cf26a7b68dd0a62dae7d66f98e40700b22750627a2b4386aa0ea119743c4100fa29ee17ccbb4cbf9ee89e480bdcf46634c06f580f00b635e80_0","lines":"  free (pinentry.notok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":160,"col":3,"offset":4635},"end":{"line":160,"col":26,"offset":4658},"extra":{"metavars":{"$PTR":{"start":{"line":160,"col":9,"offset":4641},"end":{"line":160,"col":24,"offset":4656},"abstract_content":"pinentry.cancel"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"64eefe9089b82b6865ee52cf1d608cb97db382de1a753646a3e8197d673785c805a5c5f9fb1cc6d8e64c94ab29799ea4deabd9e956712d9aaaa9921bdb29f779_0","lines":"  free (pinentry.cancel);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":162,"col":3,"offset":4691},"end":{"line":162,"col":37,"offset":4725},"extra":{"metavars":{"$PTR":{"start":{"line":162,"col":9,"offset":4697},"end":{"line":162,"col":35,"offset":4723},"abstract_content":"pinentry.repeat_passphrase"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0c982f3fe8b570e6090a4af1be08702b7ee08eebdef2dd0245728ddad9a209ceb6c45298d04d102bb12eb705cd6583ddb8af7fbe5c59ce8c99890691d74ebab_0","lines":"  free (pinentry.repeat_passphrase);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":163,"col":3,"offset":4728},"end":{"line":163,"col":39,"offset":4764},"extra":{"metavars":{"$PTR":{"start":{"line":163,"col":9,"offset":4734},"end":{"line":163,"col":37,"offset":4762},"abstract_content":"pinentry.repeat_error_string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a15d2f8f3f922c3a4dccba89bf3709c62e4c6745235ff632d45543d5e326e0d4ec65c07371b3a02f533cd1c03daf8a2367401c4af1ee1a872dbd077cead3bea1_0","lines":"  free (pinentry.repeat_error_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":164,"col":3,"offset":4767},"end":{"line":164,"col":31,"offset":4795},"extra":{"metavars":{"$PTR":{"start":{"line":164,"col":9,"offset":4773},"end":{"line":164,"col":29,"offset":4793},"abstract_content":"pinentry.quality_bar"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"75acd9c366d654b90fa2b1c44822c9519aacd040a1c0c8744ab981308666bdad17609ce7d3c0500047c0760f19cb4b44a762dfe522d550acdaab474ed775d12e_0","lines":"  free (pinentry.quality_bar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":165,"col":3,"offset":4798},"end":{"line":165,"col":34,"offset":4829},"extra":{"metavars":{"$PTR":{"start":{"line":165,"col":9,"offset":4804},"end":{"line":165,"col":32,"offset":4827},"abstract_content":"pinentry.quality_bar_tt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68f066cac9a301c35589ffd9f3b69a65797edbb1740826ba0fed4dc46864e9b6de32b5510c2ac80cb933838f6982872257b17c45a163bea983aa7d2648d0fe27_0","lines":"  free (pinentry.quality_bar_tt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":166,"col":3,"offset":4832},"end":{"line":166,"col":27,"offset":4856},"extra":{"metavars":{"$PTR":{"start":{"line":166,"col":9,"offset":4838},"end":{"line":166,"col":25,"offset":4854},"abstract_content":"pinentry.keyinfo"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"75fca0cf411ea86ac62930c3c536d01154a43c5c77534635e346f9588b4f5d0e58289866211bbc4e75b6a75b8cb7a3e50f07cc5a01c5a34d97b3ff0c75101bce_0","lines":"  free (pinentry.keyinfo);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":167,"col":3,"offset":4859},"end":{"line":167,"col":37,"offset":4893},"extra":{"metavars":{"$PTR":{"start":{"line":167,"col":9,"offset":4865},"end":{"line":167,"col":35,"offset":4891},"abstract_content":"pinentry.specific_err_info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a457fcb3dffae428bdb8cb45d2a9250bd62fa42a05cbf000437b4cfffff7633eb2f3e31dbc667b67a4d655733e8a81fb462dcbda77370ac33a1a3bf9a1207fb3_0","lines":"  free (pinentry.specific_err_info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":247,"col":10,"offset":7031},"end":{"line":247,"col":39,"offset":7060},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":247,"col":10,"offset":7031},"end":{"line":247,"col":19,"offset":7040},"abstract_content":"input_len"},"$SIGNED":{"start":{"line":247,"col":38,"offset":7059},"end":{"line":247,"col":39,"offset":7060},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"43e72f50a97c471029b4948bc0607ed9544d3c1ff84d87bc20e66df67be1b1c50d52dad4cb9708c2ad333934a259ad44e4ac5ee9332732b133ad55438995aad4_0","lines":"  size_t input_len = strlen (text) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":268,"col":23,"offset":7505},"end":{"line":268,"col":49,"offset":7531},"extra":{"metavars":{"$FUN":{"start":{"line":268,"col":23,"offset":7505},"end":{"line":268,"col":32,"offset":7514},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_0","lines":"  old_ctype = strdup (setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":271,"col":3,"offset":7571},"end":{"line":271,"col":33,"offset":7601},"extra":{"metavars":{"$FUN":{"start":{"line":271,"col":3,"offset":7571},"end":{"line":271,"col":12,"offset":7580},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_1","lines":"  setlocale (LC_CTYPE, lc_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":275,"col":3,"offset":7699},"end":{"line":275,"col":34,"offset":7730},"extra":{"metavars":{"$FUN":{"start":{"line":275,"col":3,"offset":7699},"end":{"line":275,"col":12,"offset":7708},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_2","lines":"  setlocale (LC_CTYPE, old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":280,"col":25,"offset":7888},"end":{"line":280,"col":44,"offset":7907},"extra":{"metavars":{"$X":{"start":{"line":279,"col":16,"offset":7840},"end":{"line":279,"col":25,"offset":7849},"abstract_content":"input_len","propagated_value":{"svalue_start":{"line":247,"col":22,"offset":7043},"svalue_end":{"line":247,"col":39,"offset":7060},"svalue_abstract_content":"strlen(text)+1"}},"$Y":{"start":{"line":279,"col":28,"offset":7852},"end":{"line":279,"col":38,"offset":7862},"abstract_content":"MB_LEN_MAX"},"$FUN":{"start":{"line":280,"col":25,"offset":7888},"end":{"line":280,"col":31,"offset":7894},"abstract_content":"malloc"},"$N":{"start":{"line":280,"col":33,"offset":7896},"end":{"line":280,"col":43,"offset":7906},"abstract_content":"output_len","propagated_value":{"svalue_start":{"line":279,"col":16,"offset":7840},"svalue_end":{"line":279,"col":38,"offset":7862},"svalue_abstract_content":"input_len*MB_LEN_MAX"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"97858009d212c27779712b01b12b7d6503993986c6eb809d803c7a7ce8bcfe66e9cd793c87e52f3f669c91b9092457427c66adbbd8926679a9e97b9e27a95f09_0","lines":"  output_buf = output = malloc (output_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":280,"col":25,"offset":7888},"end":{"line":280,"col":44,"offset":7907},"extra":{"metavars":{"$FUN":{"start":{"line":280,"col":25,"offset":7888},"end":{"line":280,"col":31,"offset":7894},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_0","lines":"  output_buf = output = malloc (output_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":284,"col":8,"offset":7949},"end":{"line":284,"col":45,"offset":7986},"extra":{"metavars":{"$FUN":{"start":{"line":284,"col":8,"offset":7949},"end":{"line":284,"col":18,"offset":7959},"abstract_content":"iconv_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"408d037d1ecb15a9406165bb13d5a093f5d5c1b3ff9e79e45381ae7d8cd4352a72fee7c22fbb2c2f97357c9a465bb54d0ebb49ab07a4070704e85cd8a7f6a5a0_0","lines":"  cd = iconv_open (target_encoding, \"UTF-8\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":289,"col":7,"offset":8158},"end":{"line":289,"col":25,"offset":8176},"extra":{"metavars":{"$PTR":{"start":{"line":289,"col":13,"offset":8164},"end":{"line":289,"col":23,"offset":8174},"abstract_content":"output_buf","propagated_value":{"svalue_start":{"line":280,"col":25,"offset":7888},"svalue_end":{"line":280,"col":44,"offset":7907},"svalue_abstract_content":"malloc(output_len)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77097bf18b5d07edb2a32188d946e205d5eb3f075968a8aaa07464666ac4a929e2f922e0d286ca9b5b058220fdda2bcac9a221f777fea8a368783bf79dc258fa_0","lines":"      free (output_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":299,"col":7,"offset":8524},"end":{"line":299,"col":25,"offset":8542},"extra":{"metavars":{"$PTR":{"start":{"line":299,"col":13,"offset":8530},"end":{"line":299,"col":23,"offset":8540},"abstract_content":"output_buf","propagated_value":{"svalue_start":{"line":280,"col":25,"offset":7888},"svalue_end":{"line":280,"col":44,"offset":7907},"svalue_abstract_content":"malloc(output_len)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77097bf18b5d07edb2a32188d946e205d5eb3f075968a8aaa07464666ac4a929e2f922e0d286ca9b5b058220fdda2bcac9a221f777fea8a368783bf79dc258fa_1","lines":"      free (output_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":318,"col":10,"offset":8986},"end":{"line":318,"col":39,"offset":9015},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":318,"col":10,"offset":8986},"end":{"line":318,"col":19,"offset":8995},"abstract_content":"input_len"},"$SIGNED":{"start":{"line":318,"col":38,"offset":9014},"end":{"line":318,"col":39,"offset":9015},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"43e72f50a97c471029b4948bc0607ed9544d3c1ff84d87bc20e66df67be1b1c50d52dad4cb9708c2ad333934a259ad44e4ac5ee9332732b133ad55438995aad4_1","lines":"  size_t input_len = strlen (text) + 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":334,"col":28,"offset":9386},"end":{"line":334,"col":53,"offset":9411},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":28,"offset":9386},"end":{"line":334,"col":41,"offset":9399},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55de6c27c621634ddd0bbd4a234e79ff5a1dc1c32e75cc4e05fc0c64c6fca4d6b390126168a5535ba05c04932bbbdbc0477d1345ab40db1e66a10992b66a3bf6_0","lines":"      output_buf = secure? secmem_malloc (input_len) : malloc (input_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":334,"col":56,"offset":9414},"end":{"line":334,"col":74,"offset":9432},"extra":{"metavars":{"$X":{"start":{"line":318,"col":22,"offset":8998},"end":{"line":318,"col":35,"offset":9011},"abstract_content":"strlen(text)"},"$Y":{"start":{"line":318,"col":38,"offset":9014},"end":{"line":318,"col":39,"offset":9015},"abstract_content":"1"},"$FUN":{"start":{"line":334,"col":56,"offset":9414},"end":{"line":334,"col":62,"offset":9420},"abstract_content":"malloc"},"$N":{"start":{"line":334,"col":64,"offset":9422},"end":{"line":334,"col":73,"offset":9431},"abstract_content":"input_len","propagated_value":{"svalue_start":{"line":318,"col":22,"offset":8998},"svalue_end":{"line":318,"col":39,"offset":9015},"svalue_abstract_content":"strlen(text)+1"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"65b024398d2173d6025e483f9b11e51ea2edcc2254bf2d6f532d203dcb94a63998a1ac251102805a814b75ab8808e1a5c4eb3f3fbc9b447049c856dac115d3e5_0","lines":"      output_buf = secure? secmem_malloc (input_len) : malloc (input_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":334,"col":56,"offset":9414},"end":{"line":334,"col":74,"offset":9432},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":56,"offset":9414},"end":{"line":334,"col":62,"offset":9420},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_1","lines":"      output_buf = secure? secmem_malloc (input_len) : malloc (input_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":336,"col":9,"offset":9464},"end":{"line":336,"col":35,"offset":9490},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"8781e9f45ba84fb5a586afb90fd1cedaa612d5ade3a829946679c85efe8d75d0a9f9bef60a370ea0838e2aeb9c21fcf39fcffd7fa4e13cc377adefcd8fb42ad4_0","lines":"        strcpy (output_buf, input);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":336,"col":9,"offset":9464},"end":{"line":336,"col":35,"offset":9490},"extra":{"metavars":{"$FUN":{"start":{"line":336,"col":9,"offset":9464},"end":{"line":336,"col":15,"offset":9470},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf2cf755b00cca3f6a8de95fb51cbd19bc720209c2e92f2cd4cc1bab95ced90e0b6251bed2614d803f67226569fda9a5d874193eeaf796da537ba8c76897c428_0","lines":"        strcpy (output_buf, input);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":340,"col":23,"offset":9546},"end":{"line":340,"col":49,"offset":9572},"extra":{"metavars":{"$FUN":{"start":{"line":340,"col":23,"offset":9546},"end":{"line":340,"col":32,"offset":9555},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_3","lines":"  old_ctype = strdup (setlocale (LC_CTYPE, NULL));","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":343,"col":3,"offset":9612},"end":{"line":343,"col":33,"offset":9642},"extra":{"metavars":{"$FUN":{"start":{"line":343,"col":3,"offset":9612},"end":{"line":343,"col":12,"offset":9621},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_4","lines":"  setlocale (LC_CTYPE, lc_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":345,"col":3,"offset":9689},"end":{"line":345,"col":34,"offset":9720},"extra":{"metavars":{"$FUN":{"start":{"line":345,"col":3,"offset":9689},"end":{"line":345,"col":12,"offset":9698},"abstract_content":"setlocale"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"42f58e43960532258fa10f3887bbc604c56730fb8316e789830c57dbed2b5d24f1963253bee671b25da69e9e71ee2509be8971243e173c0b911c6192fbd09c80_5","lines":"  setlocale (LC_CTYPE, old_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":350,"col":33,"offset":9886},"end":{"line":350,"col":59,"offset":9912},"extra":{"metavars":{"$FUN":{"start":{"line":350,"col":33,"offset":9886},"end":{"line":350,"col":46,"offset":9899},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55de6c27c621634ddd0bbd4a234e79ff5a1dc1c32e75cc4e05fc0c64c6fca4d6b390126168a5535ba05c04932bbbdbc0477d1345ab40db1e66a10992b66a3bf6_1","lines":"  output_buf = output = secure? secmem_malloc (output_len):malloc (output_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":350,"col":60,"offset":9913},"end":{"line":350,"col":79,"offset":9932},"extra":{"metavars":{"$X":{"start":{"line":349,"col":16,"offset":9830},"end":{"line":349,"col":25,"offset":9839},"abstract_content":"input_len","propagated_value":{"svalue_start":{"line":318,"col":22,"offset":8998},"svalue_end":{"line":318,"col":39,"offset":9015},"svalue_abstract_content":"strlen(text)+1"}},"$Y":{"start":{"line":349,"col":28,"offset":9842},"end":{"line":349,"col":38,"offset":9852},"abstract_content":"MB_LEN_MAX"},"$FUN":{"start":{"line":350,"col":60,"offset":9913},"end":{"line":350,"col":66,"offset":9919},"abstract_content":"malloc"},"$N":{"start":{"line":350,"col":68,"offset":9921},"end":{"line":350,"col":78,"offset":9931},"abstract_content":"output_len","propagated_value":{"svalue_start":{"line":349,"col":16,"offset":9830},"svalue_end":{"line":349,"col":38,"offset":9852},"svalue_abstract_content":"input_len*MB_LEN_MAX"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"97858009d212c27779712b01b12b7d6503993986c6eb809d803c7a7ce8bcfe66e9cd793c87e52f3f669c91b9092457427c66adbbd8926679a9e97b9e27a95f09_1","lines":"  output_buf = output = secure? secmem_malloc (output_len):malloc (output_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":350,"col":60,"offset":9913},"end":{"line":350,"col":79,"offset":9932},"extra":{"metavars":{"$FUN":{"start":{"line":350,"col":60,"offset":9913},"end":{"line":350,"col":66,"offset":9919},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_2","lines":"  output_buf = output = secure? secmem_malloc (output_len):malloc (output_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":354,"col":8,"offset":9974},"end":{"line":354,"col":45,"offset":10011},"extra":{"metavars":{"$FUN":{"start":{"line":354,"col":8,"offset":9974},"end":{"line":354,"col":18,"offset":9984},"abstract_content":"iconv_open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"408d037d1ecb15a9406165bb13d5a093f5d5c1b3ff9e79e45381ae7d8cd4352a72fee7c22fbb2c2f97357c9a465bb54d0ebb49ab07a4070704e85cd8a7f6a5a0_1","lines":"  cd = iconv_open (\"UTF-8\", source_encoding);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":363,"col":9,"offset":10286},"end":{"line":363,"col":27,"offset":10304},"extra":{"metavars":{"$PTR":{"start":{"line":363,"col":15,"offset":10292},"end":{"line":363,"col":25,"offset":10302},"abstract_content":"output_buf","propagated_value":{"svalue_start":{"line":350,"col":16,"offset":9869},"svalue_end":{"line":350,"col":22,"offset":9875},"svalue_abstract_content":"output"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77097bf18b5d07edb2a32188d946e205d5eb3f075968a8aaa07464666ac4a929e2f922e0d286ca9b5b058220fdda2bcac9a221f777fea8a368783bf79dc258fa_2","lines":"        free (output_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":377,"col":9,"offset":10755},"end":{"line":377,"col":27,"offset":10773},"extra":{"metavars":{"$PTR":{"start":{"line":377,"col":15,"offset":10761},"end":{"line":377,"col":25,"offset":10771},"abstract_content":"output_buf","propagated_value":{"svalue_start":{"line":350,"col":16,"offset":9869},"svalue_end":{"line":350,"col":22,"offset":9875},"svalue_abstract_content":"output"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77097bf18b5d07edb2a32188d946e205d5eb3f075968a8aaa07464666ac4a929e2f922e0d286ca9b5b058220fdda2bcac9a221f777fea8a368783bf79dc258fa_3","lines":"        free (output_buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":400,"col":11,"offset":11342},"end":{"line":400,"col":42,"offset":11373},"extra":{"metavars":{"$FUN":{"start":{"line":400,"col":11,"offset":11342},"end":{"line":400,"col":19,"offset":11350},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_0","lines":"          snprintf (p, 4, \"%%%02X\", s[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-memory-address-exposure","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":400,"col":11,"offset":11342},"end":{"line":400,"col":42,"offset":11373},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"%%%02X\""},"$ARG1":{"start":{"line":400,"col":21,"offset":11352},"end":{"line":400,"col":22,"offset":11353},"abstract_content":"p"},"$ARG2":{"start":{"line":400,"col":24,"offset":11355},"end":{"line":400,"col":25,"offset":11356},"abstract_content":"4"},"$FMT":{"start":{"line":400,"col":27,"offset":11358},"end":{"line":400,"col":35,"offset":11366},"abstract_content":"\"%%%02X\""}},"message":"The software generates an error message that includes sensitive information about its environment, users, or associated data. In particular, exposure of memory addresses might defeat ASLR.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/200","https://cwe.mitre.org/data/definitions/209","https://cwe.mitre.org/data/definitions/497","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"70664b96d0ef7a73f5c0640287938df8dd41a0d759198772c46c4cefba7722f357009f1399ad2d708b660493953ab16e29cad554d2f19309ab18f62ab16bc1b4_0","lines":"          snprintf (p, 4, \"%%%02X\", s[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":400,"col":11,"offset":11342},"end":{"line":400,"col":42,"offset":11373},"extra":{"metavars":{"$BUF":{"start":{"line":400,"col":21,"offset":11352},"end":{"line":400,"col":22,"offset":11353},"abstract_content":"p"},"$LEN":{"start":{"line":400,"col":24,"offset":11355},"end":{"line":400,"col":25,"offset":11356},"abstract_content":"4"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"2987b8af319ac8f29e5a5af27cd43ede1e6b4a6648ea02970138f284b96898b957a67d49d22f9b6b22a8f3a4ef8d6fce82b0da8dcf8663d0ae057e7c747863d4_0","lines":"          snprintf (p, 4, \"%%%02X\", s[i]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":423,"col":3,"offset":11732},"end":{"line":423,"col":61,"offset":11790},"extra":{"metavars":{"$FUN":{"start":{"line":423,"col":3,"offset":11732},"end":{"line":423,"col":11,"offset":11740},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_1","lines":"  snprintf (buffer, sizeof buffer, \"/proc/%lu/cmdline\", pid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":426,"col":8,"offset":11833},"end":{"line":426,"col":28,"offset":11853},"extra":{"metavars":{"$FUN":{"start":{"line":426,"col":8,"offset":11833},"end":{"line":426,"col":13,"offset":11838},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79eef16d5a19bb8aee4490597c20aa22fcf2db56ce38a938bfd5e8f5060b8cd0b984499f4b0331cd65fd43e1492e76951b3f96631bbb1febd7f5b245209bb410_0","lines":"  fp = fopen (buffer, \"rb\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":429,"col":3,"offset":11885},"end":{"line":429,"col":47,"offset":11929},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":429,"col":3,"offset":11885},"end":{"line":429,"col":4,"offset":11886},"abstract_content":"n"},"$SIGNED":{"start":{"line":429,"col":22,"offset":11904},"end":{"line":429,"col":23,"offset":11905},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b9d0b73519d87a93cae23dcbb5bd04ec688f7586378f10de5809f79c2c0af4932ee45e9e06c8a066ac0808ba4fbe043e5ca4e04f704a5478c892ff570a934655_0","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":429,"col":7,"offset":11889},"end":{"line":429,"col":47,"offset":11929},"extra":{"metavars":{"$FUN":{"start":{"line":429,"col":7,"offset":11889},"end":{"line":429,"col":12,"offset":11894},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1c2b88bb1422821fcfbaf899d2ae2187a00418af5c3b170b0bc2793ecd1a5122dbf35e53c638f4c84aa0efa6f087b7cfdc08bbfbd39dea13bc82ad579bce2742_0","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":429,"col":7,"offset":11889},"end":{"line":429,"col":47,"offset":11929},"extra":{"metavars":{"$PTR":{"start":{"line":429,"col":14,"offset":11896},"end":{"line":429,"col":20,"offset":11902},"abstract_content":"buffer"},"$LEN":{"start":{"line":429,"col":22,"offset":11904},"end":{"line":429,"col":23,"offset":11905},"abstract_content":"1"},"$NITEMS":{"start":{"line":429,"col":25,"offset":11907},"end":{"line":429,"col":42,"offset":11924},"abstract_content":"sizeof buffer-1"},"$FS":{"start":{"line":429,"col":44,"offset":11926},"end":{"line":429,"col":46,"offset":11928},"abstract_content":"fp","propagated_value":{"svalue_start":{"line":426,"col":8,"offset":11833},"svalue_end":{"line":426,"col":28,"offset":11853},"svalue_abstract_content":"fopen(buffer\"rb\")"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e40a020eec6f6cdfeb31fd885f939c551d3743904756e9160e4083171644a42acf65cc8a4032924764f02de9d087c989c53aecf4b856337cbca5514d95c8da00_0","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":429,"col":7,"offset":11889},"end":{"line":429,"col":47,"offset":11929},"extra":{"metavars":{"$TYPE":{"start":{"line":419,"col":3,"offset":11684},"end":{"line":419,"col":7,"offset":11688},"abstract_content":"char"},"$LEN":{"start":{"line":419,"col":15,"offset":11696},"end":{"line":419,"col":18,"offset":11699},"abstract_content":"200"},"$FUN":{"start":{"line":429,"col":7,"offset":11889},"end":{"line":429,"col":12,"offset":11894},"abstract_content":"fread"},"$BUF":{"start":{"line":429,"col":14,"offset":11896},"end":{"line":429,"col":20,"offset":11902},"abstract_content":"buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"a6f3017177bc374e4da41f1f035026ccfdd6878eda78765ea5f97ae7c12d45920f8fe065fcc728fa864654154c297ee0bcfa4a0fb07d47d8ee2cd7f2399620be_0","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":442,"col":8,"offset":12270},"end":{"line":442,"col":11,"offset":12273},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":442,"col":8,"offset":12270},"end":{"line":442,"col":9,"offset":12271},"abstract_content":"i"},"$SIGNED":{"start":{"line":442,"col":10,"offset":12272},"end":{"line":442,"col":11,"offset":12273},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"78da24ba04431aa9d1b3177d54f896ba977185a6c7524a5dc688ded742edc37000783f92d8a2a2b54183f146902bcb91c54e7ae25351460aad31f509d311d59f_0","lines":"  for (i=0; i < n; i++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":469,"col":3,"offset":12986},"end":{"line":469,"col":60,"offset":13043},"extra":{"metavars":{"$FUN":{"start":{"line":469,"col":3,"offset":12986},"end":{"line":469,"col":11,"offset":12994},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_2","lines":"  snprintf (buffer, sizeof buffer, \"/proc/%lu/status\", pid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":472,"col":8,"offset":13086},"end":{"line":472,"col":28,"offset":13106},"extra":{"metavars":{"$FUN":{"start":{"line":472,"col":8,"offset":13086},"end":{"line":472,"col":13,"offset":13091},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"79eef16d5a19bb8aee4490597c20aa22fcf2db56ce38a938bfd5e8f5060b8cd0b984499f4b0331cd65fd43e1492e76951b3f96631bbb1febd7f5b245209bb410_1","lines":"  fp = fopen (buffer, \"rb\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":475,"col":3,"offset":13138},"end":{"line":475,"col":47,"offset":13182},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":475,"col":3,"offset":13138},"end":{"line":475,"col":4,"offset":13139},"abstract_content":"n"},"$SIGNED":{"start":{"line":475,"col":22,"offset":13157},"end":{"line":475,"col":23,"offset":13158},"abstract_content":"1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"b9d0b73519d87a93cae23dcbb5bd04ec688f7586378f10de5809f79c2c0af4932ee45e9e06c8a066ac0808ba4fbe043e5ca4e04f704a5478c892ff570a934655_1","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":475,"col":7,"offset":13142},"end":{"line":475,"col":47,"offset":13182},"extra":{"metavars":{"$FUN":{"start":{"line":475,"col":7,"offset":13142},"end":{"line":475,"col":12,"offset":13147},"abstract_content":"fread"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"1c2b88bb1422821fcfbaf899d2ae2187a00418af5c3b170b0bc2793ecd1a5122dbf35e53c638f4c84aa0efa6f087b7cfdc08bbfbd39dea13bc82ad579bce2742_1","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":475,"col":7,"offset":13142},"end":{"line":475,"col":47,"offset":13182},"extra":{"metavars":{"$PTR":{"start":{"line":475,"col":14,"offset":13149},"end":{"line":475,"col":20,"offset":13155},"abstract_content":"buffer"},"$LEN":{"start":{"line":475,"col":22,"offset":13157},"end":{"line":475,"col":23,"offset":13158},"abstract_content":"1"},"$NITEMS":{"start":{"line":475,"col":25,"offset":13160},"end":{"line":475,"col":42,"offset":13177},"abstract_content":"sizeof buffer-1"},"$FS":{"start":{"line":475,"col":44,"offset":13179},"end":{"line":475,"col":46,"offset":13181},"abstract_content":"fp","propagated_value":{"svalue_start":{"line":472,"col":8,"offset":13086},"svalue_end":{"line":472,"col":28,"offset":13106},"svalue_abstract_content":"fopen(buffer\"rb\")"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e40a020eec6f6cdfeb31fd885f939c551d3743904756e9160e4083171644a42acf65cc8a4032924764f02de9d087c989c53aecf4b856337cbca5514d95c8da00_1","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":475,"col":7,"offset":13142},"end":{"line":475,"col":47,"offset":13182},"extra":{"metavars":{"$TYPE":{"start":{"line":464,"col":3,"offset":12920},"end":{"line":464,"col":7,"offset":12924},"abstract_content":"char"},"$LEN":{"start":{"line":464,"col":15,"offset":12932},"end":{"line":464,"col":18,"offset":12935},"abstract_content":"400"},"$FUN":{"start":{"line":475,"col":7,"offset":13142},"end":{"line":475,"col":12,"offset":13147},"abstract_content":"fread"},"$BUF":{"start":{"line":475,"col":14,"offset":13149},"end":{"line":475,"col":20,"offset":13155},"abstract_content":"buffer"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1921a7a2ed591201f620908ac757f001fc6850dcba32ecb6ef46c0deff6c03f3f4b55ab271bb91fd43700af0a699f75ddfeb57d0d8e7af46db6d3839b1d53314_0","lines":"  n = fread (buffer, 1, sizeof buffer - 1, fp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":489,"col":3,"offset":13552},"end":{"line":489,"col":39,"offset":13588},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":489,"col":3,"offset":13552},"end":{"line":489,"col":6,"offset":13555},"abstract_content":"end"},"$SIGNED":{"start":{"line":489,"col":27,"offset":13576},"end":{"line":489,"col":28,"offset":13577},"abstract_content":"6"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7e6ea70590f37041710c5628952bc28a0cc1a1760fccb44d7d531b06d683b08ebf31c6846fc8cd6f920489339a72929c3fddb9d31607cbef6eb57ab5baffa3b1_0","lines":"  end = strcspn (buffer + 6, \"\\n\") + 6;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":496,"col":7,"offset":13744},"end":{"line":496,"col":24,"offset":13761},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"dcc8e9c323685d9ec8f44fa6c6b3691f5f41c8f4b2a33fb0c91ab2aa6a1d5bfec1b4869108f5a3cc54bcb809db1fbd9dffe222ab77c01cecc2252317c43874b6_0","lines":"  if (atoi (uidstr + 6) != uid)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":513,"col":5,"offset":14095},"end":{"line":513,"col":31,"offset":14121},"extra":{"metavars":{"$RET":{"start":{"line":513,"col":5,"offset":14095},"end":{"line":513,"col":10,"offset":14100},"abstract_content":"title"},"$FUN":{"start":{"line":513,"col":13,"offset":14103},"end":{"line":513,"col":19,"offset":14109},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed6ccbe64175fa6e1556e486f0e4a10527b7f76e9a0ce7e700672f79865a5e82c3fb33559d8c6b02c66f06998a62e6404205ea40fd1c73d08cdacaea67629af0_0","lines":"    title = strdup (pe->title);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":532,"col":9,"offset":14642},"end":{"line":533,"col":78,"offset":14763},"extra":{"metavars":{"$FUN":{"start":{"line":532,"col":9,"offset":14642},"end":{"line":532,"col":17,"offset":14650},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_3","lines":"        snprintf (buf, sizeof buf, \"[%lu]@%s (%s)\",\n                  pe->owner_pid, pe->owner_host, cmdline ? cmdline : pidname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":532,"col":9,"offset":14642},"end":{"line":533,"col":78,"offset":14763},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":16,"offset":15},"abstract_content":"\"[%lu]@%s (%s)\""},"$TYPE":{"start":{"line":517,"col":7,"offset":14185},"end":{"line":517,"col":11,"offset":14189},"abstract_content":"char"},"$LEN":{"start":{"line":517,"col":16,"offset":14194},"end":{"line":517,"col":19,"offset":14197},"abstract_content":"200"},"$FUN":{"start":{"line":532,"col":9,"offset":14642},"end":{"line":532,"col":17,"offset":14650},"abstract_content":"snprintf"},"$BUF":{"start":{"line":532,"col":19,"offset":14652},"end":{"line":532,"col":22,"offset":14655},"abstract_content":"buf"},"$N":{"start":{"line":532,"col":24,"offset":14657},"end":{"line":532,"col":34,"offset":14667},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":532,"col":36,"offset":14669},"end":{"line":532,"col":51,"offset":14684},"abstract_content":"\"[%lu]@%s (%s)\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"ef5d0cfb1ae247cd795a721d48ada2bf198ff97939f8d574d0c14250f8509577d03b6ebe5d3050f03fe6ddb1f2c31313aa270836ac128a13fbbbc6ef81d4e5f8_0","lines":"        snprintf (buf, sizeof buf, \"[%lu]@%s (%s)\",\n                  pe->owner_pid, pe->owner_host, cmdline ? cmdline : pidname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":535,"col":9,"offset":14804},"end":{"line":536,"col":49,"offset":14891},"extra":{"metavars":{"$FUN":{"start":{"line":535,"col":9,"offset":14804},"end":{"line":535,"col":17,"offset":14812},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_4","lines":"        snprintf (buf, sizeof buf, \"[%lu]@%s\",\n                  pe->owner_pid, pe->owner_host);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":535,"col":9,"offset":14804},"end":{"line":536,"col":49,"offset":14891},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"[%lu]@%s\""},"$TYPE":{"start":{"line":517,"col":7,"offset":14185},"end":{"line":517,"col":11,"offset":14189},"abstract_content":"char"},"$LEN":{"start":{"line":517,"col":16,"offset":14194},"end":{"line":517,"col":19,"offset":14197},"abstract_content":"200"},"$FUN":{"start":{"line":535,"col":9,"offset":14804},"end":{"line":535,"col":17,"offset":14812},"abstract_content":"snprintf"},"$BUF":{"start":{"line":535,"col":19,"offset":14814},"end":{"line":535,"col":22,"offset":14817},"abstract_content":"buf"},"$N":{"start":{"line":535,"col":24,"offset":14819},"end":{"line":535,"col":34,"offset":14829},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":535,"col":36,"offset":14831},"end":{"line":535,"col":46,"offset":14841},"abstract_content":"\"[%lu]@%s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"1b46c620d0c7a5904141c4e714a5400519a32622ab16f391895b2b200736fd771237c3c499fe1630a6c0f17d340193077e4aa766128f76e4491d6f62f2fc3412_0","lines":"        snprintf (buf, sizeof buf, \"[%lu]@%s\",\n                  pe->owner_pid, pe->owner_host);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":538,"col":9,"offset":14912},"end":{"line":539,"col":33,"offset":14995},"extra":{"metavars":{"$FUN":{"start":{"line":538,"col":9,"offset":14912},"end":{"line":538,"col":17,"offset":14920},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_5","lines":"        snprintf (buf, sizeof buf, \"[%lu] <unknown host>\",\n                  pe->owner_pid);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":541,"col":7,"offset":15034},"end":{"line":541,"col":22,"offset":15049},"extra":{"metavars":{"$PTR":{"start":{"line":541,"col":13,"offset":15040},"end":{"line":541,"col":20,"offset":15047},"abstract_content":"pidname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"66eda78daa63f607aec5d84175068634896854e2f1b232c4acdd25dfd360ca2c0a8e511763e504dc70c5407840d49ff9779e406135f722e8ca079c60772fea62_0","lines":"      free (pidname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":542,"col":7,"offset":15056},"end":{"line":542,"col":22,"offset":15071},"extra":{"metavars":{"$PTR":{"start":{"line":542,"col":13,"offset":15062},"end":{"line":542,"col":20,"offset":15069},"abstract_content":"cmdline"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6c6a95f4d9ecda0a6b0035e576d17f1485f99f3196a0e9d57db9895ec22423cc74ebe49338288bc3db1c1fd853f491dfb0993bf3e0110f569deb0371d621ea5c_0","lines":"      free (cmdline);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":543,"col":7,"offset":15078},"end":{"line":543,"col":27,"offset":15098},"extra":{"metavars":{"$RET":{"start":{"line":543,"col":7,"offset":15078},"end":{"line":543,"col":12,"offset":15083},"abstract_content":"title"},"$FUN":{"start":{"line":543,"col":15,"offset":15086},"end":{"line":543,"col":21,"offset":15092},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed6ccbe64175fa6e1556e486f0e4a10527b7f76e9a0ce7e700672f79865a5e82c3fb33559d8c6b02c66f06998a62e6404205ea40fd1c73d08cdacaea67629af0_1","lines":"      title = strdup (buf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":547,"col":5,"offset":15145},"end":{"line":547,"col":34,"offset":15174},"extra":{"metavars":{"$RET":{"start":{"line":547,"col":5,"offset":15145},"end":{"line":547,"col":10,"offset":15150},"abstract_content":"title"},"$FUN":{"start":{"line":547,"col":13,"offset":15153},"end":{"line":547,"col":19,"offset":15159},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ed6ccbe64175fa6e1556e486f0e4a10527b7f76e9a0ce7e700672f79865a5e82c3fb33559d8c6b02c66f06998a62e6404205ea40fd1c73d08cdacaea67629af0_2","lines":"    title = strdup (this_pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":577,"col":5,"offset":16051},"end":{"line":577,"col":17,"offset":16063},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":577,"col":5,"offset":16051},"end":{"line":577,"col":11,"offset":16057},"abstract_content":"length"},"$SIGNED":{"start":{"line":577,"col":14,"offset":16060},"end":{"line":577,"col":17,"offset":16063},"abstract_content":"300"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"d8f3c46fb4bec6f2df4a1da3f446e237d4111143995bbcd0faa1df6f0259e3100093a06abaa59f0358b2709264e7f97d4d3683800f0166fb7cdfb5bd7df58f92_0","lines":"    length = 300;  /* Limit so that it definitely fits into an Assuan","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":580,"col":13,"offset":16162},"end":{"line":580,"col":59,"offset":16208},"extra":{"metavars":{"$FUN":{"start":{"line":580,"col":13,"offset":16162},"end":{"line":580,"col":26,"offset":16175},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"55de6c27c621634ddd0bbd4a234e79ff5a1dc1c32e75cc4e05fc0c64c6fca4d6b390126168a5535ba05c04932bbbdbc0477d1345ab40db1e66a10992b66a3bf6_2","lines":"  command = secmem_malloc (strlen (prefix) + 3*length + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":583,"col":3,"offset":16242},"end":{"line":583,"col":27,"offset":16266},"extra":{"metavars":{"$FUN":{"start":{"line":583,"col":3,"offset":16242},"end":{"line":583,"col":9,"offset":16248},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf2cf755b00cca3f6a8de95fb51cbd19bc720209c2e92f2cd4cc1bab95ced90e0b6251bed2614d803f67226569fda9a5d874193eeaf796da537ba8c76897c428_1","lines":"  strcpy (command, prefix);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":597,"col":11,"offset":16551},"end":{"line":597,"col":55,"offset":16595},"extra":{"metavars":{"$SIGNED":{"start":{"line":597,"col":11,"offset":16551},"end":{"line":597,"col":13,"offset":16553},"abstract_content":"rc"},"$UNSIGNED":{"start":{"line":597,"col":47,"offset":16587},"end":{"line":597,"col":54,"offset":16594},"abstract_content":"linelen"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"5e04efd3309ae683b3208bb54f10c8c40c76baceee9ee56b603d13e1c65d76fc92af24f48575b118f78729d237b16b0ca41d44f45ca955244fc26d123e09946d_0","lines":"          rc = assuan_read_line (ctx, &line, &linelen);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":617,"col":15,"offset":17347},"end":{"line":617,"col":28,"offset":17360},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"dcc8e9c323685d9ec8f44fa6c6b3691f5f41c8f4b2a33fb0c91ab2aa6a1d5bfec1b4869108f5a3cc54bcb809db1fbd9dffe222ab77c01cecc2252317c43874b6_1","lines":"      value = atoi (line+2);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":648,"col":10,"offset":17865},"end":{"line":648,"col":40,"offset":17895},"extra":{"metavars":{"$FUN":{"start":{"line":648,"col":10,"offset":17865},"end":{"line":648,"col":24,"offset":17879},"abstract_content":"secmem_realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5c657d5b0890668d333cd6c78da83f05c1f463597d84164de1af171c58b04ee25f3e9c5e131a0050a7db78b82e395b32c415a8a281c6c286628a2bc51297703c_0","lines":"  newp = secmem_realloc (pin->pin, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-suspicious-assert","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":672,"col":3,"offset":18218},"end":{"line":672,"col":28,"offset":18243},"extra":{"metavars":{"$ASSERT":{"start":{"line":672,"col":3,"offset":18218},"end":{"line":672,"col":9,"offset":18224},"abstract_content":"assert"},"$A":{"start":{"line":672,"col":11,"offset":18226},"end":{"line":672,"col":23,"offset":18238},"abstract_content":"pin->->pin_len"},"$B":{"start":{"line":672,"col":26,"offset":18241},"end":{"line":672,"col":27,"offset":18242},"abstract_content":"0"}},"message":"Most codebases define assertion macros which compile to a no-op on non-debug builds. If assertions are the only line of defense against untrusted input, the software may be exposed to attacks that leverage the lack of proper input checks.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://legends2k.github.io/note/assert_vs_if/","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f6f1c5bcae4c9845593cc82fa8ae601da57893bf58c9289f9313c8cf6051dfb9141b9d712c79063e4f138f02dda767307a7af711efe92ad61ee6c9ea15fb4410_0","lines":"  assert (pin->pin_len > 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":720,"col":3,"offset":19185},"end":{"line":720,"col":33,"offset":19215},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"8781e9f45ba84fb5a586afb90fd1cedaa612d5ade3a829946679c85efe8d75d0a9f9bef60a370ea0838e2aeb9c21fcf39fcffd7fa4e13cc377adefcd8fb42ad4_1","lines":"  strcpy (this_pgmname, pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":720,"col":3,"offset":19185},"end":{"line":720,"col":33,"offset":19215},"extra":{"metavars":{"$FUN":{"start":{"line":720,"col":3,"offset":19185},"end":{"line":720,"col":9,"offset":19191},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"cf2cf755b00cca3f6a8de95fb51cbd19bc720209c2e92f2cd4cc1bab95ced90e0b6251bed2614d803f67226569fda9a5d874193eeaf796da537ba8c76897c428_2","lines":"  strcpy (this_pgmname, pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":720,"col":3,"offset":19185},"end":{"line":720,"col":33,"offset":19215},"extra":{"metavars":{"$TYPE":{"start":{"line":72,"col":8,"offset":1802},"end":{"line":72,"col":12,"offset":1806},"abstract_content":"char"},"$LEN":{"start":{"line":72,"col":26,"offset":1820},"end":{"line":72,"col":28,"offset":1822},"abstract_content":"50"},"$FUN":{"start":{"line":720,"col":3,"offset":19185},"end":{"line":720,"col":9,"offset":19191},"abstract_content":"strcpy"},"$BUF":{"start":{"line":720,"col":11,"offset":19193},"end":{"line":720,"col":23,"offset":19205},"abstract_content":"this_pgmname"}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"7b31e043c8bae051202de1dccfacc18a998a8dc08521764c13282410840de81aec3b41a0ffbb68c741f8ce77da6e63616164456dd9fa1095baa2c0874eba05d8_0","lines":"  strcpy (this_pgmname, pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":746,"col":24,"offset":19822},"end":{"line":746,"col":28,"offset":19826},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_0","lines":"  for (; argc; argc--, argv++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":748,"col":21,"offset":19856},"end":{"line":748,"col":25,"offset":19860},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_1","lines":"      if (!strcmp (*argv, \"--display\"))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":750,"col":15,"offset":19900},"end":{"line":750,"col":19,"offset":19904},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_2","lines":"          if (argv[1] && !remember_display)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":752,"col":42,"offset":19985},"end":{"line":752,"col":46,"offset":19989},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_3","lines":"              remember_display = strdup (argv[1]);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":764,"col":27,"offset":20308},"end":{"line":764,"col":31,"offset":20312},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_4","lines":"      else if (!strncmp (*argv, \"--display=\", 10))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":768,"col":43,"offset":20432},"end":{"line":768,"col":47,"offset":20436},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_5","lines":"              remember_display = strdup (*argv+10);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":785,"col":9,"offset":20793},"end":{"line":785,"col":27,"offset":20811},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":4,"offset":3},"abstract_content":"get"},"$FUN":{"start":{"line":785,"col":9,"offset":20793},"end":{"line":785,"col":15,"offset":20799},"abstract_content":"getenv"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"78205df29694d9b18a97bfdd47fea69de7a2252eb89fab9532ee9e6a6e3c83662c9841e490c3354d810fd6bcab69e4865a7a3875c0086381fe05e4ab1ea90135_0","lines":"    s = getenv (\"DISPLAY\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":816,"col":20,"offset":21393},"end":{"line":816,"col":50,"offset":21423},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":816,"col":20,"offset":21393},"end":{"line":816,"col":21,"offset":21394},"abstract_content":"n"},"$SIGNED":{"start":{"line":816,"col":24,"offset":21397},"end":{"line":816,"col":26,"offset":21399},"abstract_content":"50"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"53395279c1e9ee2c923828051e27b10bea2be49f31b36dfacf563ce81a284855b07a2ad23d60c8decb735e9339e8dfe958f36a37a59275c41ae36e290fad3fd3_0","lines":"            size_t n = 50 + strlen (this_pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":817,"col":19,"offset":21443},"end":{"line":817,"col":29,"offset":21453},"extra":{"metavars":{"$X":{"start":{"line":816,"col":24,"offset":21397},"end":{"line":816,"col":26,"offset":21399},"abstract_content":"50"},"$Y":{"start":{"line":816,"col":29,"offset":21402},"end":{"line":816,"col":50,"offset":21423},"abstract_content":"strlen(this_pgmname)"},"$FUN":{"start":{"line":817,"col":19,"offset":21443},"end":{"line":817,"col":25,"offset":21449},"abstract_content":"malloc"},"$N":{"start":{"line":817,"col":27,"offset":21451},"end":{"line":817,"col":28,"offset":21452},"abstract_content":"n","propagated_value":{"svalue_start":{"line":816,"col":24,"offset":21397},"svalue_end":{"line":816,"col":50,"offset":21423},"svalue_abstract_content":"50+strlen(this_pgmname)"}}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"8faabcaa8dfdc4880c185771af47d601b3e10cf5ad3dd2deace98ba0d5334a8167fe0a4be402118b3ece374688948331d34c72af63017ce680b9bebf1697e50c_0","lines":"            str = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":817,"col":19,"offset":21443},"end":{"line":817,"col":29,"offset":21453},"extra":{"metavars":{"$FUN":{"start":{"line":817,"col":19,"offset":21443},"end":{"line":817,"col":25,"offset":21449},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_3","lines":"            str = malloc (n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":820,"col":17,"offset":21508},"end":{"line":821,"col":40,"offset":21602},"extra":{"metavars":{"$FUN":{"start":{"line":820,"col":17,"offset":21508},"end":{"line":820,"col":25,"offset":21516},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_6","lines":"                snprintf (str, n, \"Usage: %s [options] (-h for help)\",\n                          this_pgmname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":838,"col":3,"offset":21905},"end":{"line":838,"col":12,"offset":21914},"extra":{"metavars":{"$TYPE":{"start":{"line":72,"col":8,"offset":1802},"end":{"line":72,"col":12,"offset":1806},"abstract_content":"char"},"$ARR":{"start":{"line":72,"col":13,"offset":1807},"end":{"line":72,"col":25,"offset":1819},"abstract_content":"this_pgmname"},"$LEN":{"start":{"line":72,"col":26,"offset":1820},"end":{"line":72,"col":28,"offset":1822},"abstract_content":"50"},"$PTR":{"start":{"line":838,"col":10,"offset":21912},"end":{"line":838,"col":11,"offset":21913},"abstract_content":"p"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ca56f15f6899f8d539f9ce1aedd89f865c1ca617510808c6f1a3d7ffa95201e1b61b84377aed05e2eee770070af68d8ddfb67e73af62bd388e7bfa7fd0da841a_0","lines":"  return p;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":913,"col":35,"offset":24261},"end":{"line":913,"col":39,"offset":24265},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e9450b4554588cfd94ece37c5f288cc73d6c4c8dce0f087ff94aa137467e533ca58d3b53f50bbaede7965ee20f3165eda62bb1552d67f346c5a4e334698218a8_6","lines":"  ARGPARSE_ARGS pargs = { &argc, &argv, 0 };","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1051,"col":21,"offset":27469},"end":{"line":1051,"col":33,"offset":27481},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"dcc8e9c323685d9ec8f44fa6c6b3691f5f41c8f4b2a33fb0c91ab2aa6a1d5bfec1b4869108f5a3cc54bcb809db1fbd9dffe222ab77c01cecc2252317c43874b6_2","lines":"      sleep (*value?atoi (value):5);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1058,"col":2,"offset":27627},"end":{"line":1058,"col":26,"offset":27651},"extra":{"metavars":{"$PTR":{"start":{"line":1058,"col":8,"offset":27633},"end":{"line":1058,"col":24,"offset":27649},"abstract_content":"pinentry.display"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a213ebcee8615d87f876b0f84dab994f7a7f3775dd8abce0466115edb1415680b27a2548c944dc8c881f09c226e898a5cd07af3723024b7d713df2f92b2b4a1e_1","lines":"\tfree (pinentry.display);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1066,"col":2,"offset":27836},"end":{"line":1066,"col":26,"offset":27860},"extra":{"metavars":{"$PTR":{"start":{"line":1066,"col":8,"offset":27842},"end":{"line":1066,"col":24,"offset":27858},"abstract_content":"pinentry.ttyname"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"9ec759a457164cce410a71e15b5acdd5f082bf69a61715fcdce3e0f14ed1dafd6c413b8a52fbe5fa1237e101f36ffdd357e66934ad01bacb5d5bfa3cb8271139_1","lines":"\tfree (pinentry.ttyname);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1074,"col":2,"offset":28045},"end":{"line":1074,"col":26,"offset":28069},"extra":{"metavars":{"$PTR":{"start":{"line":1074,"col":8,"offset":28051},"end":{"line":1074,"col":24,"offset":28067},"abstract_content":"pinentry.ttytype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"ba766fdda030030add3d97e29573455a244fea74102e287a92151a174cf0a62a9d2c8f0f2812135bae760c1261c6b01f84120afcd8e8f663027bfb3ae3d4d1cc_1","lines":"\tfree (pinentry.ttytype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1082,"col":2,"offset":28256},"end":{"line":1082,"col":27,"offset":28281},"extra":{"metavars":{"$PTR":{"start":{"line":1082,"col":8,"offset":28262},"end":{"line":1082,"col":25,"offset":28279},"abstract_content":"pinentry.ttyalert"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b7a7ee4d803ebc827d45691cc12c05cda52eb7e452cf931d805e1e5e199cc8bf174c1bae9cac15b43e9a670b7ff7eab31158a141357ac6498147be3d2a21111b_1","lines":"\tfree (pinentry.ttyalert);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1090,"col":2,"offset":28470},"end":{"line":1090,"col":27,"offset":28495},"extra":{"metavars":{"$PTR":{"start":{"line":1090,"col":8,"offset":28476},"end":{"line":1090,"col":25,"offset":28493},"abstract_content":"pinentry.lc_ctype"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"838b8e444e1b9ab32880f454913d86ca10a7fecb6cdb6a174e552a47a0856d36bc02715a2456ba605b8c3269ab228e61261271a19ca2d977421c656c3a43e1e2_1","lines":"\tfree (pinentry.lc_ctype);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1098,"col":2,"offset":28690},"end":{"line":1098,"col":30,"offset":28718},"extra":{"metavars":{"$PTR":{"start":{"line":1098,"col":8,"offset":28696},"end":{"line":1098,"col":28,"offset":28716},"abstract_content":"pinentry.lc_messages"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"6270c38caad48117a8175cbccd5ffe77dd79daeff8a82d7fc182b4ddf7e814ca98dbc680e2cc8165f4ade9b04d1156509bd8b93a690e1b911dc3b288d33e6bf5_1","lines":"\tfree (pinentry.lc_messages);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1108,"col":7,"offset":28923},"end":{"line":1108,"col":34,"offset":28950},"extra":{"metavars":{"$PTR":{"start":{"line":1108,"col":13,"offset":28929},"end":{"line":1108,"col":32,"offset":28948},"abstract_content":"pinentry.owner_host"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3b414fe7f642ee75a09f6b10d0fe92296ec1bf0d06ae3cabfa523644078bf99132cbf672dd23ea7251bfb7d109a7c55247f60775774eef22937bd061e3abb3f9_1","lines":"      free (pinentry.owner_host);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1133,"col":23,"offset":29674},"end":{"line":1133,"col":58,"offset":29709},"extra":{"metavars":{"$RET":{"start":{"line":1133,"col":23,"offset":29674},"end":{"line":1133,"col":42,"offset":29693},"abstract_content":"pinentry.owner_host"},"$FUN":{"start":{"line":1133,"col":45,"offset":29696},"end":{"line":1133,"col":51,"offset":29702},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"da804a43afaf8fc74541729545157f21a61bcc4b23c37a0448b187a43ba09a505f171f2346194a36edbda2e608be32239b0e9de3441e52f357f5ccf52fc0ea99_0","lines":"                      pinentry.owner_host = strdup (endp);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1134,"col":23,"offset":29733},"end":{"line":1136,"col":26,"offset":29847},"extra":{"metavars":{"$EXPR1":{"start":{"line":1134,"col":28,"offset":29738},"end":{"line":1134,"col":52,"offset":29762},"abstract_content":"endp=pinentry.owner_host"},"$EXPR2":{"start":{"line":1135,"col":28,"offset":29791},"end":{"line":1135,"col":49,"offset":29812},"abstract_content":"*endp&&*endp!=' '"},"$EXPR3":{"start":{"line":1135,"col":51,"offset":29814},"end":{"line":1135,"col":57,"offset":29820},"abstract_content":"endp++"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"64cb8a71fbbe4352ccf7dd2da9ca4f7bdd76a72fcfccf0eb93988ff4c9bfa29f6c30837f3be963d1e97f132a4c980ba67ed41dd9d7bb004a5c9125506199275b_0","lines":"                      for (endp=pinentry.owner_host;\n                           *endp && *endp != ' '; endp++)\n                        ;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1145,"col":29,"offset":30025},"end":{"line":1145,"col":41,"offset":30037},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"dcc8e9c323685d9ec8f44fa6c6b3691f5f41c8f4b2a33fb0c91ab2aa6a1d5bfec1b4869108f5a3cc54bcb809db1fbd9dffe222ab77c01cecc2252317c43874b6_3","lines":"      pinentry.parent_wid = atoi (value);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1151,"col":9,"offset":30190},"end":{"line":1151,"col":36,"offset":30217},"extra":{"metavars":{"$PTR":{"start":{"line":1151,"col":15,"offset":30196},"end":{"line":1151,"col":34,"offset":30215},"abstract_content":"pinentry.touch_file"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"22b15e5c2f9c0fd5a373a03a96333fa45b68c233f01b3b7aab9f548735eac0d29d4023816a0bd99f98317d1b3be4b9596115e7bfeb82864d429381707dcfc65f_1","lines":"        free (pinentry.touch_file);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1212,"col":9,"offset":31973},"end":{"line":1212,"col":40,"offset":32004},"extra":{"metavars":{"$PTR":{"start":{"line":1212,"col":15,"offset":31979},"end":{"line":1212,"col":38,"offset":32002},"abstract_content":"pinentry.invisible_char"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1675d528ec7609abeef1c9f004aaf838cbb72c6f0638a8a9c0aecee9bfd44609be2466e040d5b9e8245ffa428fe75720e5bde3d125623b687bed1fe9d12d3ca9_0","lines":"        free (pinentry.invisible_char);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1255,"col":3,"offset":32776},"end":{"line":1259,"col":63,"offset":32989},"extra":{"metavars":{"$FUN":{"start":{"line":1255,"col":3,"offset":32776},"end":{"line":1255,"col":11,"offset":32784},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_7","lines":"  snprintf (buf, sizeof buf, \"%s.%s %d %s\",\n            pgm,\n            pe->specific_err_loc? pe->specific_err_loc : \"?\",\n            pe->specific_err,\n            pe->specific_err_info? pe->specific_err_info : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1255,"col":3,"offset":32776},"end":{"line":1259,"col":63,"offset":32989},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":14,"offset":13},"abstract_content":"\"%s.%s %d %s\""},"$TYPE":{"start":{"line":1246,"col":3,"offset":32639},"end":{"line":1246,"col":7,"offset":32643},"abstract_content":"char"},"$LEN":{"start":{"line":1246,"col":12,"offset":32648},"end":{"line":1246,"col":15,"offset":32651},"abstract_content":"500"},"$FUN":{"start":{"line":1255,"col":3,"offset":32776},"end":{"line":1255,"col":11,"offset":32784},"abstract_content":"snprintf"},"$BUF":{"start":{"line":1255,"col":13,"offset":32786},"end":{"line":1255,"col":16,"offset":32789},"abstract_content":"buf"},"$N":{"start":{"line":1255,"col":18,"offset":32791},"end":{"line":1255,"col":28,"offset":32801},"abstract_content":"sizeof buf"},"$FMT":{"start":{"line":1255,"col":30,"offset":32803},"end":{"line":1255,"col":43,"offset":32816},"abstract_content":"\"%s.%s %d %s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"595a5361615ff7141a3b40a4dff22706b7c3c47da5dc672a2595d85b4e98e414bb872e40257e90217836c01cc8fd1c2ba4b664e827243c4129e358ff426aa100_0","lines":"  snprintf (buf, sizeof buf, \"%s.%s %d %s\",\n            pgm,\n            pe->specific_err_loc? pe->specific_err_loc : \"?\",\n            pe->specific_err,\n            pe->specific_err_info? pe->specific_err_info : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1272,"col":10,"offset":33170},"end":{"line":1272,"col":36,"offset":33196},"extra":{"metavars":{"$FUN":{"start":{"line":1272,"col":10,"offset":33170},"end":{"line":1272,"col":16,"offset":33176},"abstract_content":"malloc"},"$X":{"start":{"line":1272,"col":18,"offset":33178},"end":{"line":1272,"col":31,"offset":33191},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1272,"col":34,"offset":33194},"end":{"line":1272,"col":35,"offset":33195},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_0","lines":"  newd = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1272,"col":10,"offset":33170},"end":{"line":1272,"col":36,"offset":33196},"extra":{"metavars":{"$FUN":{"start":{"line":1272,"col":10,"offset":33170},"end":{"line":1272,"col":16,"offset":33176},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_4","lines":"  newd = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1278,"col":5,"offset":33314},"end":{"line":1278,"col":33,"offset":33342},"extra":{"metavars":{"$PTR":{"start":{"line":1278,"col":11,"offset":33320},"end":{"line":1278,"col":31,"offset":33340},"abstract_content":"pinentry.description"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"77c7cf8a0bf5279fd50e5efd5ce211d9044953172050de33a6f447e705888040e674a9c43e53a73e4ead57d0025604eb4f2647598ddb2f7367b4beb568486d38_1","lines":"    free (pinentry.description);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1291,"col":10,"offset":33498},"end":{"line":1291,"col":36,"offset":33524},"extra":{"metavars":{"$FUN":{"start":{"line":1291,"col":10,"offset":33498},"end":{"line":1291,"col":16,"offset":33504},"abstract_content":"malloc"},"$X":{"start":{"line":1291,"col":18,"offset":33506},"end":{"line":1291,"col":31,"offset":33519},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1291,"col":34,"offset":33522},"end":{"line":1291,"col":35,"offset":33523},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_1","lines":"  newp = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1291,"col":10,"offset":33498},"end":{"line":1291,"col":36,"offset":33524},"extra":{"metavars":{"$FUN":{"start":{"line":1291,"col":10,"offset":33498},"end":{"line":1291,"col":16,"offset":33504},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_5","lines":"  newp = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1297,"col":5,"offset":33637},"end":{"line":1297,"col":28,"offset":33660},"extra":{"metavars":{"$PTR":{"start":{"line":1297,"col":11,"offset":33643},"end":{"line":1297,"col":26,"offset":33658},"abstract_content":"pinentry.prompt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"2910f524637dcf033d3c1986b70e128f7f3faceb4f46342c330d6b3e6d8db473a652070c6f348c19c77468d57b4d6e1f4beb103040bf721012b8d1c5d571cb5f_1","lines":"    free (pinentry.prompt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1313,"col":5,"offset":34034},"end":{"line":1313,"col":29,"offset":34058},"extra":{"metavars":{"$PTR":{"start":{"line":1313,"col":11,"offset":34040},"end":{"line":1313,"col":27,"offset":34056},"abstract_content":"pinentry.keyinfo"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"75fca0cf411ea86ac62930c3c536d01154a43c5c77534635e346f9588b4f5d0e58289866211bbc4e75b6a75b8cb7a3e50f07cc5a01c5a34d97b3ff0c75101bce_1","lines":"    free (pinentry.keyinfo);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-malloc-calloc-realloc","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1316,"col":5,"offset":34109},"end":{"line":1316,"col":37,"offset":34141},"extra":{"metavars":{"$RET":{"start":{"line":1316,"col":5,"offset":34109},"end":{"line":1316,"col":21,"offset":34125},"abstract_content":"pinentry.keyinfo"},"$FUN":{"start":{"line":1316,"col":24,"offset":34128},"end":{"line":1316,"col":30,"offset":34134},"abstract_content":"strdup"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://cwe.mitre.org/data/definitions/690","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"793b7ef45a309d496b8f44081eea3633e7939e9e27fcb73f24be554489d5a4d745fc797395a1b33d12945e3055f2179743fbcb9bd50a38fd4c99ccce07446bc7_0","lines":"    pinentry.keyinfo = strdup (line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1331,"col":7,"offset":34298},"end":{"line":1331,"col":33,"offset":34324},"extra":{"metavars":{"$FUN":{"start":{"line":1331,"col":7,"offset":34298},"end":{"line":1331,"col":13,"offset":34304},"abstract_content":"malloc"},"$X":{"start":{"line":1331,"col":15,"offset":34306},"end":{"line":1331,"col":28,"offset":34319},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1331,"col":31,"offset":34322},"end":{"line":1331,"col":32,"offset":34323},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_2","lines":"  p = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1331,"col":7,"offset":34298},"end":{"line":1331,"col":33,"offset":34324},"extra":{"metavars":{"$FUN":{"start":{"line":1331,"col":7,"offset":34298},"end":{"line":1331,"col":13,"offset":34304},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_6","lines":"  p = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1336,"col":3,"offset":34406},"end":{"line":1336,"col":37,"offset":34440},"extra":{"metavars":{"$PTR":{"start":{"line":1336,"col":9,"offset":34412},"end":{"line":1336,"col":35,"offset":34438},"abstract_content":"pinentry.repeat_passphrase"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0c982f3fe8b570e6090a4af1be08702b7ee08eebdef2dd0245728ddad9a209ceb6c45298d04d102bb12eb705cd6583ddb8af7fbe5c59ce8c99890691d74ebab_1","lines":"  free (pinentry.repeat_passphrase);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1349,"col":7,"offset":34598},"end":{"line":1349,"col":33,"offset":34624},"extra":{"metavars":{"$FUN":{"start":{"line":1349,"col":7,"offset":34598},"end":{"line":1349,"col":13,"offset":34604},"abstract_content":"malloc"},"$X":{"start":{"line":1349,"col":15,"offset":34606},"end":{"line":1349,"col":28,"offset":34619},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1349,"col":31,"offset":34622},"end":{"line":1349,"col":32,"offset":34623},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_3","lines":"  p = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1349,"col":7,"offset":34598},"end":{"line":1349,"col":33,"offset":34624},"extra":{"metavars":{"$FUN":{"start":{"line":1349,"col":7,"offset":34598},"end":{"line":1349,"col":13,"offset":34604},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_7","lines":"  p = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1354,"col":3,"offset":34706},"end":{"line":1354,"col":39,"offset":34742},"extra":{"metavars":{"$PTR":{"start":{"line":1354,"col":9,"offset":34712},"end":{"line":1354,"col":37,"offset":34740},"abstract_content":"pinentry.repeat_error_string"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a15d2f8f3f922c3a4dccba89bf3709c62e4c6745235ff632d45543d5e326e0d4ec65c07371b3a02f533cd1c03daf8a2367401c4af1ee1a872dbd077cead3bea1_1","lines":"  free (pinentry.repeat_error_string);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1367,"col":10,"offset":34902},"end":{"line":1367,"col":36,"offset":34928},"extra":{"metavars":{"$FUN":{"start":{"line":1367,"col":10,"offset":34902},"end":{"line":1367,"col":16,"offset":34908},"abstract_content":"malloc"},"$X":{"start":{"line":1367,"col":18,"offset":34910},"end":{"line":1367,"col":31,"offset":34923},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1367,"col":34,"offset":34926},"end":{"line":1367,"col":35,"offset":34927},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_4","lines":"  newe = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1367,"col":10,"offset":34902},"end":{"line":1367,"col":36,"offset":34928},"extra":{"metavars":{"$FUN":{"start":{"line":1367,"col":10,"offset":34902},"end":{"line":1367,"col":16,"offset":34908},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_8","lines":"  newe = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1373,"col":5,"offset":35040},"end":{"line":1373,"col":27,"offset":35062},"extra":{"metavars":{"$PTR":{"start":{"line":1373,"col":11,"offset":35046},"end":{"line":1373,"col":25,"offset":35060},"abstract_content":"pinentry.error"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcf0d89ed1d48d27ff555ad06912c6b177c293680da74704b6f5456ed9b8dace8cf33632f520190a1223cb4248984cca94038040077dfcc5ea8f2490f01b334b_1","lines":"    free (pinentry.error);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1386,"col":10,"offset":35208},"end":{"line":1386,"col":36,"offset":35234},"extra":{"metavars":{"$FUN":{"start":{"line":1386,"col":10,"offset":35208},"end":{"line":1386,"col":16,"offset":35214},"abstract_content":"malloc"},"$X":{"start":{"line":1386,"col":18,"offset":35216},"end":{"line":1386,"col":31,"offset":35229},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1386,"col":34,"offset":35232},"end":{"line":1386,"col":35,"offset":35233},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_5","lines":"  newo = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1386,"col":10,"offset":35208},"end":{"line":1386,"col":36,"offset":35234},"extra":{"metavars":{"$FUN":{"start":{"line":1386,"col":10,"offset":35208},"end":{"line":1386,"col":16,"offset":35214},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_9","lines":"  newo = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1392,"col":5,"offset":35343},"end":{"line":1392,"col":24,"offset":35362},"extra":{"metavars":{"$PTR":{"start":{"line":1392,"col":11,"offset":35349},"end":{"line":1392,"col":22,"offset":35360},"abstract_content":"pinentry.ok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"900acd30dff0fcce31c7e794b3ded116e1b14ce96f87527980abf5246dc44889455428442ea92424e9f8031d0c05511cc9f50d335220ebb12ff95690e99e0a46_1","lines":"    free (pinentry.ok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1405,"col":10,"offset":35508},"end":{"line":1405,"col":36,"offset":35534},"extra":{"metavars":{"$FUN":{"start":{"line":1405,"col":10,"offset":35508},"end":{"line":1405,"col":16,"offset":35514},"abstract_content":"malloc"},"$X":{"start":{"line":1405,"col":18,"offset":35516},"end":{"line":1405,"col":31,"offset":35529},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1405,"col":34,"offset":35532},"end":{"line":1405,"col":35,"offset":35533},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_6","lines":"  newo = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1405,"col":10,"offset":35508},"end":{"line":1405,"col":36,"offset":35534},"extra":{"metavars":{"$FUN":{"start":{"line":1405,"col":10,"offset":35508},"end":{"line":1405,"col":16,"offset":35514},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_10","lines":"  newo = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1411,"col":5,"offset":35646},"end":{"line":1411,"col":27,"offset":35668},"extra":{"metavars":{"$PTR":{"start":{"line":1411,"col":11,"offset":35652},"end":{"line":1411,"col":25,"offset":35666},"abstract_content":"pinentry.notok"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"1bca7220136ad6cf26a7b68dd0a62dae7d66f98e40700b22750627a2b4386aa0ea119743c4100fa29ee17ccbb4cbf9ee89e480bdcf46634c06f580f00b635e80_1","lines":"    free (pinentry.notok);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1424,"col":10,"offset":35818},"end":{"line":1424,"col":36,"offset":35844},"extra":{"metavars":{"$FUN":{"start":{"line":1424,"col":10,"offset":35818},"end":{"line":1424,"col":16,"offset":35824},"abstract_content":"malloc"},"$X":{"start":{"line":1424,"col":18,"offset":35826},"end":{"line":1424,"col":31,"offset":35839},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1424,"col":34,"offset":35842},"end":{"line":1424,"col":35,"offset":35843},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_7","lines":"  newc = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1424,"col":10,"offset":35818},"end":{"line":1424,"col":36,"offset":35844},"extra":{"metavars":{"$FUN":{"start":{"line":1424,"col":10,"offset":35818},"end":{"line":1424,"col":16,"offset":35824},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_11","lines":"  newc = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1430,"col":5,"offset":35957},"end":{"line":1430,"col":28,"offset":35980},"extra":{"metavars":{"$PTR":{"start":{"line":1430,"col":11,"offset":35963},"end":{"line":1430,"col":26,"offset":35978},"abstract_content":"pinentry.cancel"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"64eefe9089b82b6865ee52cf1d608cb97db382de1a753646a3e8197d673785c805a5c5f9fb1cc6d8e64c94ab29799ea4deabd9e956712d9aaaa9921bdb29f779_1","lines":"    free (pinentry.cancel);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1442,"col":24,"offset":36152},"end":{"line":1442,"col":35,"offset":36163},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"dcc8e9c323685d9ec8f44fa6c6b3691f5f41c8f4b2a33fb0c91ab2aa6a1d5bfec1b4869108f5a3cc54bcb809db1fbd9dffe222ab77c01cecc2252317c43874b6_4","lines":"    pinentry.timeout = atoi (line);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1454,"col":10,"offset":36288},"end":{"line":1454,"col":36,"offset":36314},"extra":{"metavars":{"$FUN":{"start":{"line":1454,"col":10,"offset":36288},"end":{"line":1454,"col":16,"offset":36294},"abstract_content":"malloc"},"$X":{"start":{"line":1454,"col":18,"offset":36296},"end":{"line":1454,"col":31,"offset":36309},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1454,"col":34,"offset":36312},"end":{"line":1454,"col":35,"offset":36313},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_8","lines":"  newt = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1454,"col":10,"offset":36288},"end":{"line":1454,"col":36,"offset":36314},"extra":{"metavars":{"$FUN":{"start":{"line":1454,"col":10,"offset":36288},"end":{"line":1454,"col":16,"offset":36294},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_12","lines":"  newt = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1460,"col":5,"offset":36426},"end":{"line":1460,"col":27,"offset":36448},"extra":{"metavars":{"$PTR":{"start":{"line":1460,"col":11,"offset":36432},"end":{"line":1460,"col":25,"offset":36446},"abstract_content":"pinentry.title"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"c9ce996f577ee16b3add1b2aee71f481970de98a0c2c82f3ee3c6ccc4ce34b0999641803e4194eaade447879f1df906a1a57d334486c53769198c5882a8a21dd_1","lines":"    free (pinentry.title);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1475,"col":12,"offset":36643},"end":{"line":1475,"col":38,"offset":36669},"extra":{"metavars":{"$FUN":{"start":{"line":1475,"col":12,"offset":36643},"end":{"line":1475,"col":18,"offset":36649},"abstract_content":"malloc"},"$X":{"start":{"line":1475,"col":20,"offset":36651},"end":{"line":1475,"col":33,"offset":36664},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1475,"col":36,"offset":36667},"end":{"line":1475,"col":37,"offset":36668},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_9","lines":"  newval = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1475,"col":12,"offset":36643},"end":{"line":1475,"col":38,"offset":36669},"extra":{"metavars":{"$FUN":{"start":{"line":1475,"col":12,"offset":36643},"end":{"line":1475,"col":18,"offset":36649},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_13","lines":"  newval = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1481,"col":5,"offset":36791},"end":{"line":1481,"col":33,"offset":36819},"extra":{"metavars":{"$PTR":{"start":{"line":1481,"col":11,"offset":36797},"end":{"line":1481,"col":31,"offset":36817},"abstract_content":"pinentry.quality_bar"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"75acd9c366d654b90fa2b1c44822c9519aacd040a1c0c8744ab981308666bdad17609ce7d3c0500047c0760f19cb4b44a762dfe522d550acdaab474ed775d12e_1","lines":"    free (pinentry.quality_bar);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1496,"col":16,"offset":37063},"end":{"line":1496,"col":42,"offset":37089},"extra":{"metavars":{"$FUN":{"start":{"line":1496,"col":16,"offset":37063},"end":{"line":1496,"col":22,"offset":37069},"abstract_content":"malloc"},"$X":{"start":{"line":1496,"col":24,"offset":37071},"end":{"line":1496,"col":37,"offset":37084},"abstract_content":"strlen(line)"},"$Y":{"start":{"line":1496,"col":40,"offset":37087},"end":{"line":1496,"col":41,"offset":37088},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3e61013e4126eeca3a9aff016f325d6bdb8ae43dc4dff674a38f02cd6180021473cf4141e877fa8e6ab568892ee94fe3242b1e96c0396f3f9812d6ffa7e24256_10","lines":"      newval = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1496,"col":16,"offset":37063},"end":{"line":1496,"col":42,"offset":37089},"extra":{"metavars":{"$FUN":{"start":{"line":1496,"col":16,"offset":37063},"end":{"line":1496,"col":22,"offset":37069},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"68ff7326f925ed03a39c28cf3cd9bb502b548515a4f629a3f8c4db4085d76dd075a7e23ef0bd02ea8c294ca1a00fc288cd5cb2f8e393650ef1f5b80f098c2542_14","lines":"      newval = malloc (strlen (line) + 1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1505,"col":5,"offset":37258},"end":{"line":1505,"col":36,"offset":37289},"extra":{"metavars":{"$PTR":{"start":{"line":1505,"col":11,"offset":37264},"end":{"line":1505,"col":34,"offset":37287},"abstract_content":"pinentry.quality_bar_tt"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"68f066cac9a301c35589ffd9f3b69a65797edbb1740826ba0fed4dc46864e9b6de32b5510c2ac80cb933838f6982872257b17c45a163bea983aa7d2648d0fe27_1","lines":"    free (pinentry.quality_bar_tt);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1553,"col":4,"offset":38569},"end":{"line":1553,"col":40,"offset":38605},"extra":{"metavars":{"$FUN":{"start":{"line":1553,"col":4,"offset":38569},"end":{"line":1553,"col":10,"offset":38575},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3610a33326650b19985f1bc5bd5ffd7ce54a25c8915135f0fa0add119fcbbe2113833f6e43b734dcae91efa08df7c3ca65f4d45263bacb98a3398c19d712a97c_0","lines":"\t  memcpy (pinentry.pin, password, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1553,"col":4,"offset":38569},"end":{"line":1553,"col":40,"offset":38605},"extra":{"metavars":{"$DST":{"start":{"line":1553,"col":12,"offset":38577},"end":{"line":1553,"col":24,"offset":38589},"abstract_content":"pinentry.pin"},"$SRC":{"start":{"line":1553,"col":26,"offset":38591},"end":{"line":1553,"col":34,"offset":38599},"abstract_content":"password"},"$LEN":{"start":{"line":1553,"col":36,"offset":38601},"end":{"line":1553,"col":39,"offset":38604},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"af094dbb44e54d2004cb83d65d10aeb95ab63df0943be8f821d1f4a2c9fee46741706cd2dd87602a4c74a41376588f5f7e0f62604a256dde6dec5fe6764cba12_0","lines":"\t  memcpy (pinentry.pin, password, len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1584,"col":3,"offset":39302},"end":{"line":1584,"col":37,"offset":39336},"extra":{"metavars":{"$PTR":{"start":{"line":1584,"col":9,"offset":39308},"end":{"line":1584,"col":35,"offset":39334},"abstract_content":"pinentry.specific_err_info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a457fcb3dffae428bdb8cb45d2a9250bd62fa42a05cbf000437b4cfffff7633eb2f3e31dbc667b67a4d655733e8a81fb462dcbda77370ac33a1a3bf9a1207fb3_1","lines":"  free (pinentry.specific_err_info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1594,"col":7,"offset":39599},"end":{"line":1594,"col":29,"offset":39621},"extra":{"metavars":{"$PTR":{"start":{"line":1594,"col":13,"offset":39605},"end":{"line":1594,"col":27,"offset":39619},"abstract_content":"pinentry.error"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcf0d89ed1d48d27ff555ad06912c6b177c293680da74704b6f5456ed9b8dace8cf33632f520190a1223cb4248984cca94038040077dfcc5ea8f2490f01b334b_2","lines":"      free (pinentry.error);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1599,"col":7,"offset":39703},"end":{"line":1599,"col":41,"offset":39737},"extra":{"metavars":{"$PTR":{"start":{"line":1599,"col":13,"offset":39709},"end":{"line":1599,"col":39,"offset":39735},"abstract_content":"pinentry.repeat_passphrase"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"d0c982f3fe8b570e6090a4af1be08702b7ee08eebdef2dd0245728ddad9a209ceb6c45298d04d102bb12eb705cd6583ddb8af7fbe5c59ce8c99890691d74ebab_2","lines":"      free (pinentry.repeat_passphrase);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1666,"col":3,"offset":41724},"end":{"line":1666,"col":37,"offset":41758},"extra":{"metavars":{"$PTR":{"start":{"line":1666,"col":9,"offset":41730},"end":{"line":1666,"col":35,"offset":41756},"abstract_content":"pinentry.specific_err_info"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"a457fcb3dffae428bdb8cb45d2a9250bd62fa42a05cbf000437b4cfffff7633eb2f3e31dbc667b67a4d655733e8a81fb462dcbda77370ac33a1a3bf9a1207fb3_2","lines":"  free (pinentry.specific_err_info);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1673,"col":7,"offset":41943},"end":{"line":1673,"col":29,"offset":41965},"extra":{"metavars":{"$PTR":{"start":{"line":1673,"col":13,"offset":41949},"end":{"line":1673,"col":27,"offset":41963},"abstract_content":"pinentry.error"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"bcf0d89ed1d48d27ff555ad06912c6b177c293680da74704b6f5456ed9b8dace8cf33632f520190a1223cb4248984cca94038040077dfcc5ea8f2490f01b334b_3","lines":"      free (pinentry.error);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1734,"col":7,"offset":43242},"end":{"line":1734,"col":72,"offset":43307},"extra":{"metavars":{"$FUN":{"start":{"line":1734,"col":7,"offset":43242},"end":{"line":1734,"col":15,"offset":43250},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_8","lines":"      snprintf (buffer, sizeof buffer, \"%lu\", (unsigned long)getpid ());","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1745,"col":7,"offset":43598},"end":{"line":1748,"col":47,"offset":43743},"extra":{"metavars":{"$FUN":{"start":{"line":1745,"col":7,"offset":43598},"end":{"line":1745,"col":15,"offset":43606},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_9","lines":"      snprintf (buffer, sizeof buffer, \"%s%s%s\",\n                s,\n                flavor_flag? \":\":\"\",\n                flavor_flag? flavor_flag : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1745,"col":7,"offset":43598},"end":{"line":1748,"col":47,"offset":43743},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":9,"offset":8},"abstract_content":"\"%s%s%s\""},"$TYPE":{"start":{"line":1724,"col":3,"offset":43062},"end":{"line":1724,"col":7,"offset":43066},"abstract_content":"char"},"$LEN":{"start":{"line":1724,"col":15,"offset":43074},"end":{"line":1724,"col":18,"offset":43077},"abstract_content":"100"},"$FUN":{"start":{"line":1745,"col":7,"offset":43598},"end":{"line":1745,"col":15,"offset":43606},"abstract_content":"snprintf"},"$BUF":{"start":{"line":1745,"col":17,"offset":43608},"end":{"line":1745,"col":23,"offset":43614},"abstract_content":"buffer"},"$N":{"start":{"line":1745,"col":25,"offset":43616},"end":{"line":1745,"col":38,"offset":43629},"abstract_content":"sizeof buffer"},"$FMT":{"start":{"line":1745,"col":40,"offset":43631},"end":{"line":1745,"col":48,"offset":43639},"abstract_content":"\"%s%s%s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d94f519d704c674cc7c02caf8c1f1ff9b446f491cf2f2635395969f292d72b0103ed7c58dcb8e704957ffe7e86677beac073926fb1b7a5db6de1994e56062fbb_0","lines":"      snprintf (buffer, sizeof buffer, \"%s%s%s\",\n                s,\n                flavor_flag? \":\":\"\",\n                flavor_flag? flavor_flag : \"\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1756,"col":7,"offset":43995},"end":{"line":1759,"col":59,"offset":44214},"extra":{"metavars":{"$FUN":{"start":{"line":1756,"col":7,"offset":43995},"end":{"line":1756,"col":15,"offset":44003},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"0866130e1c9dd865df234a99bb249bddb37e32774747ad319dcfbcbfb8f00cd20848f162d9b8b980bc668dc766cec713858c2f33a87e381f3e7887f045c28222_10","lines":"      snprintf (buffer, sizeof buffer, \"%s %s %s\",\n                pinentry.ttyname? pinentry.ttyname : \"-\",\n                pinentry.ttytype? pinentry.ttytype : \"-\",\n                pinentry.display? pinentry.display : \"-\" );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-write-into-stack-buffer","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1756,"col":7,"offset":43995},"end":{"line":1759,"col":59,"offset":44214},"extra":{"metavars":{"$1":{"start":{"line":1,"col":1,"offset":0},"end":{"line":1,"col":11,"offset":10},"abstract_content":"\"%s %s %s\""},"$TYPE":{"start":{"line":1724,"col":3,"offset":43062},"end":{"line":1724,"col":7,"offset":43066},"abstract_content":"char"},"$LEN":{"start":{"line":1724,"col":15,"offset":43074},"end":{"line":1724,"col":18,"offset":43077},"abstract_content":"100"},"$FUN":{"start":{"line":1756,"col":7,"offset":43995},"end":{"line":1756,"col":15,"offset":44003},"abstract_content":"snprintf"},"$BUF":{"start":{"line":1756,"col":17,"offset":44005},"end":{"line":1756,"col":23,"offset":44011},"abstract_content":"buffer"},"$N":{"start":{"line":1756,"col":25,"offset":44013},"end":{"line":1756,"col":38,"offset":44026},"abstract_content":"sizeof buffer"},"$FMT":{"start":{"line":1756,"col":40,"offset":44028},"end":{"line":1756,"col":50,"offset":44038},"abstract_content":"\"%s %s %s\""}},"message":"The software directly writes into a stack buffer. This might lead to a stack-based buffer overflow.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/121","https://github.com/googleprojectzero/weggli"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"e082c719abe382c39900dbc24bdf9c982cb8c2417ac9edb4cc4dc990005328400502d7a40bf41b65748a8871e8c706093de91fec83851056150d84255e7000a3_0","lines":"      snprintf (buffer, sizeof buffer, \"%s %s %s\",\n                pinentry.ttyname? pinentry.ttyname : \"-\",\n                pinentry.ttytype? pinentry.ttytype : \"-\",\n                pinentry.display? pinentry.display : \"-\" );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1784,"col":10,"offset":44746},"end":{"line":1784,"col":33,"offset":44769},"extra":{"metavars":{"$STR":{"start":{"line":1784,"col":10,"offset":44746},"end":{"line":1784,"col":14,"offset":44750},"abstract_content":"line"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"233f203f3fa4b8551b9f878276529186bd51853a009770b542a1517472cee89f3edd00755c2b2bf6f3e624e3bbb265736eae94656746a3ea319cfdc3be6bfc2e_0","lines":"  while (line[strlen (line) - 1] == ' ')","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1785,"col":5,"offset":44782},"end":{"line":1785,"col":28,"offset":44805},"extra":{"metavars":{"$STR":{"start":{"line":1785,"col":5,"offset":44782},"end":{"line":1785,"col":9,"offset":44786},"abstract_content":"line"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"233f203f3fa4b8551b9f878276529186bd51853a009770b542a1517472cee89f3edd00755c2b2bf6f3e624e3bbb265736eae94656746a3ea319cfdc3be6bfc2e_1","lines":"    line[strlen (line) - 1] = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1862,"col":16,"offset":46795},"end":{"line":1862,"col":36,"offset":46815},"extra":{"metavars":{"$FUN":{"start":{"line":1862,"col":16,"offset":46795},"end":{"line":1862,"col":29,"offset":46808},"abstract_content":"assuan_fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"050e0f634301a94442f9827e0a56668333b461b83dc391391038fb6b2d5b49d41a7d00324788fd860705e655ef7102c121de6ea831a3da998d09acf02ca72a9e_0","lines":"  filedes[0] = assuan_fdopen (infd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":1863,"col":16,"offset":46832},"end":{"line":1863,"col":37,"offset":46853},"extra":{"metavars":{"$FUN":{"start":{"line":1863,"col":16,"offset":46832},"end":{"line":1863,"col":29,"offset":46845},"abstract_content":"assuan_fdopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"050e0f634301a94442f9827e0a56668333b461b83dc391391038fb6b2d5b49d41a7d00324788fd860705e655ef7102c121de6ea831a3da998d09acf02ca72a9e_1","lines":"  filedes[1] = assuan_fdopen (outfd);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":66,"col":42,"offset":1989},"end":{"line":66,"col":72,"offset":2019},"extra":{"metavars":{"$FUN":{"start":{"line":66,"col":42,"offset":1989},"end":{"line":66,"col":55,"offset":2002},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"5b2fc1f9c39428c3cba7c63ec4ffc77aa39b1be9ecfbad34ecb8bdcec5fbe2a8d50918a0bf2f8dde0ce6e0f3040594245613d11c2ebe5f4acdd0ff5a289d0cf5_0","lines":"            return static_cast<pointer>( secmem_malloc( n * sizeof(T) ) );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":70,"col":3,"offset":1658},"end":{"line":70,"col":35,"offset":1690},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"da0264a94f7d5b01d134d7114a923f617c70fde0cde51105f085493f8755b9b31e6d623e131a73cf472b0dc5c50c9e6d149bbe1280ab2f16ab16da3639d966d2_0","lines":"  vfprintf(stderr, template, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":80,"col":3,"offset":1796},"end":{"line":80,"col":35,"offset":1828},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"da0264a94f7d5b01d134d7114a923f617c70fde0cde51105f085493f8755b9b31e6d623e131a73cf472b0dc5c50c9e6d149bbe1280ab2f16ab16da3639d966d2_1","lines":"  vfprintf(stderr, template, args);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":135,"col":5,"offset":2927},"end":{"line":135,"col":24,"offset":2946},"extra":{"metavars":{"$SIGNED":{"start":{"line":135,"col":5,"offset":2927},"end":{"line":135,"col":8,"offset":2930},"abstract_content":"err"},"$UNSIGNED":{"start":{"line":135,"col":21,"offset":2943},"end":{"line":135,"col":22,"offset":2944},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a93fc86c0d4c1d3ae786d8866c6f52e84da48fe72eab6dea178cbd906085d7645328d6b6bac221a20709ea1f04156e0d31428f85fb36761236f3755eeb1da36b_0","lines":"    err = mlock( p, n );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":162,"col":2,"offset":3408},"end":{"line":162,"col":21,"offset":3427},"extra":{"metavars":{"$SIGNED":{"start":{"line":162,"col":2,"offset":3408},"end":{"line":162,"col":5,"offset":3411},"abstract_content":"err"},"$UNSIGNED":{"start":{"line":162,"col":18,"offset":3424},"end":{"line":162,"col":19,"offset":3425},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a93fc86c0d4c1d3ae786d8866c6f52e84da48fe72eab6dea178cbd906085d7645328d6b6bac221a20709ea1f04156e0d31428f85fb36761236f3755eeb1da36b_1","lines":"\terr = mlock( p, n );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":167,"col":5,"offset":3483},"end":{"line":167,"col":24,"offset":3502},"extra":{"metavars":{"$SIGNED":{"start":{"line":167,"col":5,"offset":3483},"end":{"line":167,"col":8,"offset":3486},"abstract_content":"err"},"$UNSIGNED":{"start":{"line":167,"col":21,"offset":3499},"end":{"line":167,"col":22,"offset":3500},"abstract_content":"n"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"a93fc86c0d4c1d3ae786d8866c6f52e84da48fe72eab6dea178cbd906085d7645328d6b6bac221a20709ea1f04156e0d31428f85fb36761236f3755eeb1da36b_2","lines":"    err = mlock( p, n );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":173,"col":6,"offset":3584},"end":{"line":173,"col":19,"offset":3597},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":173,"col":6,"offset":3584},"end":{"line":173,"col":12,"offset":3590},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbdfb7c370202421cbb825ee08a264c410d5b9399c1b470bdd4b638ccfa3f0af6bdc9f9869165754073b3f0c236f1ee4f3f78f17a3a7471f2e2908230265231c_0","lines":"\tif( setuid( uid ) || getuid() != geteuid()  )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-setuid-seteuid","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":173,"col":6,"offset":3584},"end":{"line":173,"col":19,"offset":3597},"extra":{"metavars":{"$FUN":{"start":{"line":173,"col":6,"offset":3584},"end":{"line":173,"col":12,"offset":3590},"abstract_content":"setuid"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions. If the program calls a function to drop privileges but  does not check the return code to ensure that privileges were  successfully dropped, then the program will continue to operate with  the higher privileges.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://lwn.net/Articles/451985/","https://www.usenix.org/legacy/events/sec02/full_papers/chen/chen.pdf","https://www.openwall.com/lists/oss-security/2023/12/30/4"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64c34613af371a9a34016f9b0bed1c0e70abe6b54913fe62e355a4b4bd5a8c570ee5947349537458795550b5a949759eb0e64a98bf02a4691c2226967b4005ce_0","lines":"\tif( setuid( uid ) || getuid() != geteuid()  )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":206,"col":5,"offset":4191},"end":{"line":206,"col":18,"offset":4204},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":206,"col":5,"offset":4191},"end":{"line":206,"col":11,"offset":4197},"abstract_content":"pgsize"},"$SIGNED":{"start":{"line":206,"col":14,"offset":4200},"end":{"line":206,"col":18,"offset":4204},"abstract_content":"4096"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"3b9da68cd5b96658979d13982e73b2646a7aeba4ab2cf4e4abce9926a2aac665ef9add29a789d8728a2550c11c43a53aa945fd1cda0f63e09891a3963b945841_0","lines":"    pgsize = 4096;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":210,"col":5,"offset":4232},"end":{"line":210,"col":52,"offset":4279},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":210,"col":5,"offset":4232},"end":{"line":210,"col":13,"offset":4240},"abstract_content":"poolsize"},"$SIGNED":{"start":{"line":210,"col":28,"offset":4255},"end":{"line":210,"col":34,"offset":4261},"abstract_content":"pgsize","propagated_value":{"svalue_start":{"line":206,"col":14,"offset":4200},"svalue_end":{"line":206,"col":18,"offset":4204},"svalue_abstract_content":"4096"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"4051c3c9695e7fec3477e1a462c953fc86ee4229afbdbd0b92f69e1d4c20e8763c4ea8e9f691e7baaaa4a1aecc92f11ea4216702a25f56a97047f95d992f8843_0","lines":"    poolsize = (poolsize + pgsize -1 ) & ~(pgsize-1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":217,"col":7,"offset":4455},"end":{"line":217,"col":32,"offset":4480},"extra":{"metavars":{"$FUN":{"start":{"line":217,"col":7,"offset":4455},"end":{"line":217,"col":11,"offset":4459},"abstract_content":"open"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7833d020f584821bbb289702bae5462b7256a5011eba30c01555dc08f023e02673c351c25dc64136db87d6a2640d613cadc2a8728c8ccec4c69ae2894ed1c9a0_0","lines":"\tfd = open(\"/dev/zero\", O_RDWR);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":239,"col":9,"offset":4945},"end":{"line":239,"col":27,"offset":4963},"extra":{"metavars":{"$FUN":{"start":{"line":239,"col":9,"offset":4945},"end":{"line":239,"col":15,"offset":4951},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e3902994a6659cdd7aefc66b7cb33196a7324df578d269af68534bc59466feb0642f3f4613390036771464ed2c6cb1a90d09ebacf710d7defe9791c8dc2c69e9_0","lines":"\tpool = malloc( poolsize );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":247,"col":5,"offset":5140},"end":{"line":247,"col":16,"offset":5151},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":247,"col":5,"offset":5140},"end":{"line":247,"col":12,"offset":5147},"abstract_content":"poollen"},"$SIGNED":{"start":{"line":247,"col":15,"offset":5150},"end":{"line":247,"col":16,"offset":5151},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f911b8e017a87491c04b36940ad7ce91d2bcac954fefff758b8303262bc15bcd5dfbde168855c7600ce55f5e397f944a6bb49b2d6ccc43b4c296960671154d2_0","lines":"    poollen = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":263,"col":5,"offset":5351},"end":{"line":263,"col":27,"offset":5373},"extra":{"metavars":{"$NARROW":{"start":{"line":263,"col":5,"offset":5351},"end":{"line":263,"col":15,"offset":5361},"abstract_content":"no_warning"},"$LARGE":{"start":{"line":263,"col":18,"offset":5364},"end":{"line":263,"col":23,"offset":5369},"abstract_content":"flags"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"4ec0e9b4f0e09eba895d027bfbb5f80dea3a25a11caeb094c63a7c3ef14572b2269310ddc4d4b72d5783b49bb9425ff425d379231445564ae244712652151e4d_0","lines":"    no_warning = flags & 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":263,"col":5,"offset":5351},"end":{"line":263,"col":27,"offset":5373},"extra":{"metavars":{"$SIGNED":{"start":{"line":263,"col":5,"offset":5351},"end":{"line":263,"col":15,"offset":5361},"abstract_content":"no_warning"},"$UNSIGNED":{"start":{"line":263,"col":18,"offset":5364},"end":{"line":263,"col":23,"offset":5369},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e1b098565b3eabf62ad9018fe391d11000e23c9f964dca689753f5f7113e25367ccbdae824a61a8e44d632b94959684e890ab39f10a6be3484a2e3e6f9427299_0","lines":"    no_warning = flags & 1;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":264,"col":5,"offset":5379},"end":{"line":264,"col":32,"offset":5406},"extra":{"metavars":{"$NARROW":{"start":{"line":264,"col":5,"offset":5379},"end":{"line":264,"col":20,"offset":5394},"abstract_content":"suspend_warning"},"$LARGE":{"start":{"line":264,"col":23,"offset":5397},"end":{"line":264,"col":28,"offset":5402},"abstract_content":"flags"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"318f6b4507d5d8d2e44990bd6017f8a93d8e97d27161cd972b3ee7582d11957f73671db69b78783eaad233190eba01efe17b8bcc5f542421783da0f1dead62b8_0","lines":"    suspend_warning = flags & 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":264,"col":5,"offset":5379},"end":{"line":264,"col":32,"offset":5406},"extra":{"metavars":{"$SIGNED":{"start":{"line":264,"col":5,"offset":5379},"end":{"line":264,"col":20,"offset":5394},"abstract_content":"suspend_warning"},"$UNSIGNED":{"start":{"line":264,"col":23,"offset":5397},"end":{"line":264,"col":28,"offset":5402},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"40d655aa9b11d968e88784bb7fcd3ba29062ed589950e8c4181dffc1059fe452faf8b8977980eb274377669cbbfbe6bdd4dcf1d2241dc89c063c49c563e32a81_0","lines":"    suspend_warning = flags & 2;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":274,"col":1,"offset":5584},"end":{"line":274,"col":17,"offset":5600},"extra":{"metavars":{"$FUN":{"start":{"line":274,"col":1,"offset":5584},"end":{"line":274,"col":17,"offset":5600},"abstract_content":"secmem_get_flags"},"$SIGNED":{"start":{"line":280,"col":12,"offset":5713},"end":{"line":280,"col":17,"offset":5718},"abstract_content":"flags"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"ae587dfa7b8203325dd7b1ee8774d7d6cf970882ff1b56368f382871ce47ab6d597ec5ec51ddd7912332ceee86c2812638623b0fc7b80476a433258a40c03375_0","lines":"secmem_get_flags(void)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":278,"col":5,"offset":5634},"end":{"line":278,"col":35,"offset":5664},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":278,"col":5,"offset":5634},"end":{"line":278,"col":10,"offset":5639},"abstract_content":"flags"},"$SIGNED":{"start":{"line":278,"col":14,"offset":5643},"end":{"line":278,"col":24,"offset":5653},"abstract_content":"no_warning"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"e1b098565b3eabf62ad9018fe391d11000e23c9f964dca689753f5f7113e25367ccbdae824a61a8e44d632b94959684e890ab39f10a6be3484a2e3e6f9427299_1","lines":"    flags  = no_warning      ? 1:0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":297,"col":10,"offset":5985},"end":{"line":297,"col":23,"offset":5998},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":297,"col":10,"offset":5985},"end":{"line":297,"col":16,"offset":5991},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"bbdfb7c370202421cbb825ee08a264c410d5b9399c1b470bdd4b638ccfa3f0af6bdc9f9869165754073b3f0c236f1ee4f3f78f17a3a7471f2e2908230265231c_1","lines":"\t    if( setuid( uid ) || getuid() != geteuid() )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-unchecked-ret-setuid-seteuid","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":297,"col":10,"offset":5985},"end":{"line":297,"col":23,"offset":5998},"extra":{"metavars":{"$FUN":{"start":{"line":297,"col":10,"offset":5985},"end":{"line":297,"col":16,"offset":5991},"abstract_content":"setuid"}},"message":"The software does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions. If the program calls a function to drop privileges but  does not check the return code to ensure that privileges were  successfully dropped, then the program will continue to operate with  the higher privileges.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/252","https://lwn.net/Articles/451985/","https://www.usenix.org/legacy/events/sec02/full_papers/chen/chen.pdf","https://www.openwall.com/lists/oss-security/2023/12/30/4"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"64c34613af371a9a34016f9b0bed1c0e70abe6b54913fe62e355a4b4bd5a8c570ee5947349537458795550b5a949759eb0e64a98bf02a4691c2226967b4005ce_1","lines":"\t    if( setuid( uid ) || getuid() != geteuid() )","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":304,"col":6,"offset":6127},"end":{"line":304,"col":26,"offset":6147},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":304,"col":6,"offset":6127},"end":{"line":304,"col":7,"offset":6128},"abstract_content":"n"},"$SIGNED":{"start":{"line":304,"col":10,"offset":6131},"end":{"line":304,"col":26,"offset":6147},"abstract_content":"DEFAULT_POOLSIZE"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"21f37acd0b43469f60ac5f8d41ca7a77aa82a04e7ceb3c98feb54104120177a7a68d84badd60852b5dfb2b7c883a141c2508b2df942075567de4d764a870b51c_0","lines":"\t    n = DEFAULT_POOLSIZE;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":332,"col":5,"offset":6703},"end":{"line":332,"col":35,"offset":6733},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":332,"col":5,"offset":6703},"end":{"line":332,"col":9,"offset":6707},"abstract_content":"size"},"$SIGNED":{"start":{"line":332,"col":21,"offset":6719},"end":{"line":332,"col":23,"offset":6721},"abstract_content":"31"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"74a677e82e7e24cca20426e830cfa40538af010e45621649434a6c603259dc6c27196d3d6e4a52cb6847598d97c2a113daa6fe92207f8b98de47c269f9d5eae0_0","lines":"    size = ((size + 31) / 32) * 32;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":381,"col":14,"offset":7685},"end":{"line":381,"col":36,"offset":7707},"extra":{"metavars":{"$FUN":{"start":{"line":381,"col":14,"offset":7685},"end":{"line":381,"col":27,"offset":7698},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c647e79a21151bf09ea32c682b79ae66ba03e0fc70fdcafabeb8aa9191e622ac3ca26210867f8407473ee31c3deade430549f8308abb0d67262a94b79332203f_0","lines":"      return secmem_malloc(newsize);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":387,"col":9,"offset":7893},"end":{"line":387,"col":33,"offset":7917},"extra":{"metavars":{"$FUN":{"start":{"line":387,"col":9,"offset":7893},"end":{"line":387,"col":22,"offset":7906},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c647e79a21151bf09ea32c682b79ae66ba03e0fc70fdcafabeb8aa9191e622ac3ca26210867f8407473ee31c3deade430549f8308abb0d67262a94b79332203f_1","lines":"    a = secmem_malloc( newsize );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":388,"col":5,"offset":7923},"end":{"line":388,"col":23,"offset":7941},"extra":{"metavars":{"$FUN":{"start":{"line":388,"col":5,"offset":7923},"end":{"line":388,"col":11,"offset":7929},"abstract_content":"memcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"b874a0dcb85ea75e8eaba62edb3c6960726044c447380772113944ba9126d67056aa9369519447f5244c6acdf6cbf12fd552c397cab089c1b70eb08233c5f8c8_0","lines":"    memcpy(a, p, size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":441,"col":5,"offset":8999},"end":{"line":441,"col":15,"offset":9009},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":441,"col":5,"offset":8999},"end":{"line":441,"col":13,"offset":9007},"abstract_content":"poolsize"},"$SIGNED":{"start":{"line":441,"col":14,"offset":9008},"end":{"line":441,"col":15,"offset":9009},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7ee61e56fd64e3033fc56264f4f7d9224df1fc08f45881c15690f1c6b2fd56df3322fb1603112d8af3e523dbc5500580835e0691f3434f6a85f352790a891e0b_0","lines":"    poolsize=0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":442,"col":5,"offset":9015},"end":{"line":442,"col":14,"offset":9024},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":442,"col":5,"offset":9015},"end":{"line":442,"col":12,"offset":9022},"abstract_content":"poollen"},"$SIGNED":{"start":{"line":442,"col":13,"offset":9023},"end":{"line":442,"col":14,"offset":9024},"abstract_content":"0"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"6f911b8e017a87491c04b36940ad7ce91d2bcac954fefff758b8303262bc15bcd5dfbde168855c7600ce55f5e397f944a6bb49b2d6ccc43b4c296960671154d2_1","lines":"    poollen=0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-typos","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":59,"col":14,"offset":1552},"end":{"line":61,"col":16,"offset":1606},"extra":{"metavars":{"$EXPR1":{"start":{"line":59,"col":14,"offset":1552},"end":{"line":59,"col":21,"offset":1559},"abstract_content":"written"},"$EXPR2":{"start":{"line":59,"col":25,"offset":1563},"end":{"line":59,"col":27,"offset":1565},"abstract_content":"-1"}},"message":"The programmer accidentally uses the wrong operator, which changes the application logic in security-relevant ways. This rule also covers some other common typo patterns.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/480","https://cwe.mitre.org/data/definitions/481","https://cwe.mitre.org/data/definitions/482","https://cwe.mitre.org/data/definitions/483","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"LOW"},"severity":"INFO","fingerprint":"3271a54849879394689984e2aec4ce53e54f23683c60d04cead5b50e024058ba477b21b625f4c91a3f66ef53848efca71cf109cd7b341319e3132d25e2a8f334_0","lines":"             written == -1 && errno == EINTR\n#endif\n             );","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-format-string-bugs","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":80,"col":11,"offset":1838},"end":{"line":80,"col":36,"offset":1863},"extra":{"metavars":{},"message":"The software uses a function that accepts a format string as an argument, but the format string originates from an external source. This can lead  to buffer overflows, denial of service, or data representation problems.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/134","https://julianor.tripod.com/bc/formatstring-1.2.pdf","http://phrack.org/issues/70/13.html#article","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf"],"confidence":"MEDIUM"},"severity":"ERROR","fingerprint":"3aa260ab8bf34646903294575cb094306b858d224518758444114c32f64a2d99b5fb367bd9ddae72ad65eadea05a89868017999306a9bcfa95fb5a9bdf255b45_0","lines":"    ret = vfprintf(stderr, fmt, va);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":109,"col":9,"offset":2277},"end":{"line":109,"col":25,"offset":2293},"extra":{"metavars":{"$1":{"start":{"line":1,"col":4,"offset":3},"end":{"line":1,"col":5,"offset":4},"abstract_content":"u"},"$FUN":{"start":{"line":109,"col":9,"offset":2277},"end":{"line":109,"col":15,"offset":2283},"abstract_content":"setuid"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a89c678088a59a7ae7b6e14f255c4d6de1def561a615394dce80f4e543aece33094fe70f4f590bf82372db765b573eff730dbefec384a755c959cc9140ab5b07_0","lines":"    if (setuid(real_uid) < 0) {","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":73,"col":1,"offset":1879},"end":{"line":73,"col":7,"offset":1885},"extra":{"metavars":{"$FUN":{"start":{"line":73,"col":1,"offset":1879},"end":{"line":73,"col":7,"offset":1885},"abstract_content":"button"},"$LARGE":{"start":{"line":78,"col":12,"offset":1979},"end":{"line":78,"col":13,"offset":1980},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"3f2022f5c531aa25a6798c78fa86b357755795e4b274478577391c740db4981fb385909afb6ad49d54d28a957fc1333728057a092dfac67614a9c07850580abf_0","lines":"button (char *text, char *default_text, FILE *ttyfo)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-pointer-subtraction","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":156,"col":31,"offset":3530},"end":{"line":156,"col":41,"offset":3540},"extra":{"metavars":{"$PTR1":{"start":{"line":156,"col":31,"offset":3530},"end":{"line":156,"col":34,"offset":3533},"abstract_content":"eol"},"$PTR2":{"start":{"line":156,"col":37,"offset":3536},"end":{"line":156,"col":41,"offset":3540},"abstract_content":"text"}},"message":"The software subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/469","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"58f37f0728c4d41a04477498bdd31c16f0e443159fe36f5bcff354e1b91ddc60624a7913b35fa29393df3908013c3bd8decfa64b090238760475bc48c435500f_0","lines":"      fwrite (text, (size_t) (eol - text), 1, ttyfo);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":179,"col":8,"offset":3876},"end":{"line":179,"col":14,"offset":3882},"extra":{"metavars":{"$NARROW":{"start":{"line":179,"col":8,"offset":3876},"end":{"line":179,"col":10,"offset":3878},"abstract_content":"ok"},"$LARGE":{"start":{"line":179,"col":13,"offset":3881},"end":{"line":179,"col":14,"offset":3882},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"fca82e00089541b0a00f308dde573e76efef531785de4193eb1ff758d325d60a38361704589248315133abf47c59fe2a6c1e3388e9def18f4f6f804c171d6957_0","lines":"  char ok = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":180,"col":8,"offset":3891},"end":{"line":180,"col":17,"offset":3900},"extra":{"metavars":{"$NARROW":{"start":{"line":180,"col":8,"offset":3891},"end":{"line":180,"col":13,"offset":3896},"abstract_content":"notok"},"$LARGE":{"start":{"line":180,"col":16,"offset":3899},"end":{"line":180,"col":17,"offset":3900},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"614acc06d61539c849d7e98f69ca358277ebea32b411c2241f1079e49ff339ab3bbde4fcaf1c643e34eac35be4a006c895b7baf6180ff69623d6625fca2d4c42_0","lines":"  char notok = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-truncation","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":181,"col":8,"offset":3909},"end":{"line":181,"col":18,"offset":3919},"extra":{"metavars":{"$NARROW":{"start":{"line":181,"col":8,"offset":3909},"end":{"line":181,"col":14,"offset":3915},"abstract_content":"cancel"},"$LARGE":{"start":{"line":181,"col":17,"offset":3918},"end":{"line":181,"col":18,"offset":3919},"abstract_content":"0"}},"message":"Truncation errors occur when a primitive is cast to a primitive of a  smaller size and data is lost in the conversion. The value cannot be  trusted and the application will be in an undefined state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/197","https://cwe.mitre.org/data/definitions/681","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"685f6a0c734332820d9ed9974d0fc4bdb69cf89e0fe64f6adb900ae16b0934bffaf4c819300fe578bb79745cf16b2a29c9d7917f797211ccc14affcc63861266_0","lines":"  char cancel = 0;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":201,"col":3,"offset":4268},"end":{"line":201,"col":20,"offset":4285},"extra":{"metavars":{"$PTR":{"start":{"line":201,"col":9,"offset":4274},"end":{"line":201,"col":18,"offset":4283},"abstract_content":"msgbuffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b31369a408a80718754d4b012e4f197436b8aaf5614cacdac5f2180ae2c34484dff67144ac8e89971f2f4f0f0960810fb4c9d60d9f567db38f8f4bcb1912f0bc_0","lines":"  free (msgbuffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":250,"col":15,"offset":5381},"end":{"line":250,"col":28,"offset":5394},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":250,"col":15,"offset":5381},"end":{"line":250,"col":20,"offset":5386},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7482dc6cc3f47be8aecc9fa5c5c45f65e4c7cc1452204d96c2965c3aa7fabe344ba1318fa5554ed178a27caa1c01999b5d628d1388e314045ea0fcceb85ca92a_0","lines":"      input = fgetc (ttyfi);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":320,"col":12,"offset":6507},"end":{"line":320,"col":31,"offset":6526},"extra":{"metavars":{"$FUN":{"start":{"line":320,"col":12,"offset":6507},"end":{"line":320,"col":25,"offset":6520},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"03cf7225fcc65414ea3973581c14546c8f7eef90dd67690f568947e678a10fe7642dccbe26d00a3b79a6c983e99e2309fd986a69fcbd4f7768a1bee9558b09ec_0","lines":"  buffer = secmem_malloc (len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":334,"col":16,"offset":6812},"end":{"line":334,"col":48,"offset":6844},"extra":{"metavars":{"$FUN":{"start":{"line":334,"col":16,"offset":6812},"end":{"line":334,"col":30,"offset":6826},"abstract_content":"secmem_realloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8b0fc0c5952a253e1d7ef8a3cd0af217bfc0d77dbc73ceef3198201c4fe675fa5c3e3485c4efd0c924d27e3fecb8c043878189b543107bec7d804d40529577d4_0","lines":"\t  char *tmp = secmem_realloc (buffer, new_len);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":344,"col":11,"offset":6969},"end":{"line":344,"col":24,"offset":6982},"extra":{"metavars":{"$1":{"start":{"line":1,"col":5,"offset":4},"end":{"line":1,"col":6,"offset":5},"abstract_content":"c"},"$FUN":{"start":{"line":344,"col":11,"offset":6969},"end":{"line":344,"col":16,"offset":6974},"abstract_content":"fgetc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7482dc6cc3f47be8aecc9fa5c5c45f65e4c7cc1452204d96c2965c3aa7fabe344ba1318fa5554ed178a27caa1c01999b5d628d1388e314045ea0fcceb85ca92a_1","lines":"      c = fgetc (ttyfi);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":397,"col":3,"offset":7796},"end":{"line":397,"col":20,"offset":7813},"extra":{"metavars":{"$PTR":{"start":{"line":397,"col":9,"offset":7802},"end":{"line":397,"col":18,"offset":7811},"abstract_content":"msgbuffer"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"b31369a408a80718754d4b012e4f197436b8aaf5614cacdac5f2180ae2c34484dff67144ac8e89971f2f4f0f0960810fb4c9d60d9f567db38f8f4bcb1912f0bc_1","lines":"  free (msgbuffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":410,"col":10,"offset":8076},"end":{"line":410,"col":36,"offset":8102},"extra":{"metavars":{"$STR":{"start":{"line":410,"col":10,"offset":8076},"end":{"line":410,"col":16,"offset":8082},"abstract_content":"prompt"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e67c8743f163254e51989e20c48cbc3b0d5a88a156a7363da845c23dd5d7f38562f1db3ae56e2e54fdf6462314682c9c5a0e81f8cdebc37d15847cdcc712649f_0","lines":"\t       (prompt[strlen(prompt) - 1] == ':'","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":411,"col":6,"offset":8115},"end":{"line":411,"col":32,"offset":8141},"extra":{"metavars":{"$STR":{"start":{"line":411,"col":6,"offset":8115},"end":{"line":411,"col":12,"offset":8121},"abstract_content":"prompt"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e67c8743f163254e51989e20c48cbc3b0d5a88a156a7363da845c23dd5d7f38562f1db3ae56e2e54fdf6462314682c9c5a0e81f8cdebc37d15847cdcc712649f_1","lines":"\t\t|| prompt[strlen(prompt) - 1] == '?') ? \"\" : \":\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":432,"col":7,"offset":8559},"end":{"line":432,"col":33,"offset":8585},"extra":{"metavars":{"$STR":{"start":{"line":432,"col":7,"offset":8559},"end":{"line":432,"col":13,"offset":8565},"abstract_content":"prompt"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e67c8743f163254e51989e20c48cbc3b0d5a88a156a7363da845c23dd5d7f38562f1db3ae56e2e54fdf6462314682c9c5a0e81f8cdebc37d15847cdcc712649f_2","lines":"\t\t   (prompt[strlen(prompt) - 1] == ':'","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-off-by-one","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":433,"col":10,"offset":8602},"end":{"line":433,"col":36,"offset":8628},"extra":{"metavars":{"$STR":{"start":{"line":433,"col":10,"offset":8602},"end":{"line":433,"col":16,"offset":8608},"abstract_content":"prompt"}},"message":"The software calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/193","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"e67c8743f163254e51989e20c48cbc3b0d5a88a156a7363da845c23dd5d7f38562f1db3ae56e2e54fdf6462314682c9c5a0e81f8cdebc37d15847cdcc712649f_3","lines":"\t\t    || prompt[strlen(prompt) - 1] == '?') ? \"\" : \":\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-access-stat-lstat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":483,"col":7,"offset":9549},"end":{"line":483,"col":38,"offset":9580},"extra":{"metavars":{},"message":"The software checks the state of a resource before using it, but the  resource's state can change between the check and the use in a way that  invalidates the results of the check. This canmcause the software to  perform invalid actions when the resource is inman unexpected state.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/367","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"WARNING","fingerprint":"046a945bd3aa724a481aa96c846d426ceb4b3859cb714f7f3557d7a2300c69e4d10f91d63602b1fd9e0d413903784c409794bf1ed13c5363e2a1e18870a682cb_0","lines":"  if (stat(pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":483,"col":7,"offset":9549},"end":{"line":483,"col":38,"offset":9580},"extra":{"metavars":{"$FUN":{"start":{"line":483,"col":7,"offset":9549},"end":{"line":483,"col":11,"offset":9553},"abstract_content":"stat"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"ff7b3b795fc9086a179fc15ab3e068ebc781f2dd4f2cfbe5ebd742fead727143d6de85f8339b51bc1bf7330fc392e6edee48e6bf6f442a1b1c122830beceb244_0","lines":"  if (stat(pinentry->touch_file, &st))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":528,"col":15,"offset":10437},"end":{"line":528,"col":45,"offset":10467},"extra":{"metavars":{"$FUN":{"start":{"line":528,"col":15,"offset":10437},"end":{"line":528,"col":20,"offset":10442},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a44655ca987e2384c5c64ed4811be6b3f23088aadd54d8d02cdff6cfb6126326eda4829bfcd512b4cf64be51a4e5ae11d0aa75c42b2f2066883097f18f02eb5c_0","lines":"      ttyfi = fopen (pinentry->ttyname, \"r\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":533,"col":19,"offset":10543},"end":{"line":533,"col":49,"offset":10573},"extra":{"metavars":{"$FUN":{"start":{"line":533,"col":19,"offset":10543},"end":{"line":533,"col":24,"offset":10548},"abstract_content":"fopen"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a44655ca987e2384c5c64ed4811be6b3f23088aadd54d8d02cdff6cfb6126326eda4829bfcd512b4cf64be51a4e5ae11d0aa75c42b2f2066883097f18f02eb5c_1","lines":"          ttyfo = fopen (pinentry->ttyname, \"w\");","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","start":{"line":574,"col":29,"offset":11221},"end":{"line":574,"col":33,"offset":11225},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"d3ec3e7b31518b281fae54ddc33aca771d4bc7c4193941b4c0256f040515818d44c81589546c1e57f7869fed05d3f7d77fa2e61b898011c7c7b9c9c8c591605b_0","lines":"  pinentry_parse_opts(argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":85,"col":3,"offset":2196},"end":{"line":85,"col":48,"offset":2241},"extra":{"metavars":{"$FUN":{"start":{"line":85,"col":3,"offset":2196},"end":{"line":85,"col":11,"offset":2204},"abstract_content":"snprintf"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"f26f238f7f467b3705f4908eaef5191786beda833679369de0cb8d4fa6efb5f8de3a2981900074aa0ad17f59a1971b13e5bb354b89b04acdd8d49235b752fc50_0","lines":"  snprintf (strerr, sizeof strerr, \"ec=%d\", ec);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-ret-stack-address","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":92,"col":3,"offset":2457},"end":{"line":92,"col":17,"offset":2471},"extra":{"metavars":{"$TYPE":{"start":{"line":78,"col":10,"offset":1968},"end":{"line":78,"col":14,"offset":1972},"abstract_content":"char"},"$LEN":{"start":{"line":78,"col":22,"offset":1980},"end":{"line":78,"col":25,"offset":1983},"abstract_content":"256"},"$PTR":{"start":{"line":92,"col":10,"offset":2464},"end":{"line":92,"col":16,"offset":2470},"abstract_content":"strerr"}},"message":"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/562","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://rules.sonarsource.com/c/type/Bug/RSPEC-946"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7ea971e31e376ea7e08dfc9554e2e78d2b6bce8b3359f65e960422ebb0d6e064fcecaa43955b2201121f5b1a4e53da9e1d816a26d24518e926621e7314151d90_0","lines":"  return strerr;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":169,"col":3,"offset":4551},"end":{"line":169,"col":73,"offset":4621},"extra":{"metavars":{"$SIGNED":{"start":{"line":169,"col":3,"offset":4551},"end":{"line":169,"col":4,"offset":4552},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":169,"col":48,"offset":4596},"end":{"line":169,"col":51,"offset":4599},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb18c6bc89ebb136e08f2d91f802b27db7e10c79a5833abb02017e8cdbe98a8d12e54ad15cd61f3c480555d571f4d5e69207f44bbc96eefad36da018dbda6cdb_0","lines":"  n = WideCharToMultiByte (CP_UTF8, 0, string, len, NULL, 0, NULL, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":173,"col":20,"offset":4673},"end":{"line":173,"col":39,"offset":4692},"extra":{"metavars":{"$FUN":{"start":{"line":173,"col":20,"offset":4673},"end":{"line":173,"col":33,"offset":4686},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"82a3cbfde9134ee472cb86473aa78744038953562e4b2a9e732fa8c1aa2b2ed6c7fa14ddaa2baaf3d671cd2eabea99ae1cb27784b87a15ecf2d645b4eba1cb05_0","lines":"  result = secure? secmem_malloc (n+1) : malloc (n+1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-integer-wraparound","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":173,"col":42,"offset":4695},"end":{"line":173,"col":54,"offset":4707},"extra":{"metavars":{"$FUN":{"start":{"line":173,"col":42,"offset":4695},"end":{"line":173,"col":48,"offset":4701},"abstract_content":"malloc"},"$X":{"start":{"line":173,"col":50,"offset":4703},"end":{"line":173,"col":51,"offset":4704},"abstract_content":"n","propagated_value":{"svalue_start":{"line":169,"col":7,"offset":4555},"svalue_end":{"line":169,"col":73,"offset":4621},"svalue_abstract_content":"WideCharToMultiByte(CP_UTF8 0 string len NULL 0 NULL NULL)"}},"$Y":{"start":{"line":173,"col":52,"offset":4705},"end":{"line":173,"col":53,"offset":4706},"abstract_content":"1"}},"message":"The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/190","https://cwe.mitre.org/data/definitions/128","https://cwe.mitre.org/data/definitions/131","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples","https://dustri.org/b/playing-with-weggli.html"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"0a6e0ab6dc299ad64642cb036e55e2fc839da15b567e8c2bf5ea5ee5098001e79088f758b09c29eca371d92b0ab97d0fc88b7cc9bf86b6f5384f40319ffb7cd6_0","lines":"  result = secure? secmem_malloc (n+1) : malloc (n+1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":173,"col":42,"offset":4695},"end":{"line":173,"col":54,"offset":4707},"extra":{"metavars":{"$FUN":{"start":{"line":173,"col":42,"offset":4695},"end":{"line":173,"col":48,"offset":4701},"abstract_content":"malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"8136e3e1f32d63103b75248c1354ad0b841bc732bde9b29117a62794753369f9a2514e29e476e0c1f090d455e0de528a20cfde5bbcc4a3e932dcd3cdaa7f5457_0","lines":"  result = secure? secmem_malloc (n+1) : malloc (n+1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":173,"col":42,"offset":4695},"end":{"line":173,"col":54,"offset":4707},"extra":{"metavars":{"$LEN":{"start":{"line":173,"col":50,"offset":4703},"end":{"line":173,"col":53,"offset":4706},"abstract_content":"n+1"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"910771b6bcacaf65906cab97b0828e4d034d4b6251ccb61cc0f979db886bb72051225f2292c6b70dffe32677c0992d95754319b0106c04147c74b6f69367efaf_0","lines":"  result = secure? secmem_malloc (n+1) : malloc (n+1);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":176,"col":3,"offset":4743},"end":{"line":176,"col":75,"offset":4815},"extra":{"metavars":{"$SIGNED":{"start":{"line":176,"col":3,"offset":4743},"end":{"line":176,"col":4,"offset":4744},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":176,"col":48,"offset":4788},"end":{"line":176,"col":51,"offset":4791},"abstract_content":"len"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb18c6bc89ebb136e08f2d91f802b27db7e10c79a5833abb02017e8cdbe98a8d12e54ad15cd61f3c480555d571f4d5e69207f44bbc96eefad36da018dbda6cdb_1","lines":"  n = WideCharToMultiByte (CP_UTF8, 0, string, len, result, n, NULL, NULL);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":182,"col":9,"offset":4903},"end":{"line":182,"col":23,"offset":4917},"extra":{"metavars":{"$PTR":{"start":{"line":182,"col":15,"offset":4909},"end":{"line":182,"col":21,"offset":4915},"abstract_content":"result"}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"4a401c87f30a9698d74ea9f6297be2498711b58e3e7516e7147a27920e78e2c83fe19c74c082ca4d91f856ac0dbc966a9745c20cdd53f2826d7995e41a439342_0","lines":"        free (result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":198,"col":3,"offset":5181},"end":{"line":198,"col":61,"offset":5239},"extra":{"metavars":{"$SIGNED":{"start":{"line":198,"col":3,"offset":5181},"end":{"line":198,"col":4,"offset":5182},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":198,"col":48,"offset":5226},"end":{"line":198,"col":51,"offset":5229},"abstract_content":"len","propagated_value":{"svalue_start":{"line":196,"col":16,"offset":5161},"svalue_end":{"line":196,"col":31,"offset":5176},"svalue_abstract_content":"strlen(string)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb18c6bc89ebb136e08f2d91f802b27db7e10c79a5833abb02017e8cdbe98a8d12e54ad15cd61f3c480555d571f4d5e69207f44bbc96eefad36da018dbda6cdb_2","lines":"  n = MultiByteToWideChar (CP_UTF8, 0, string, len, NULL, 0);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":202,"col":12,"offset":5283},"end":{"line":202,"col":42,"offset":5313},"extra":{"metavars":{"$FUN":{"start":{"line":202,"col":12,"offset":5283},"end":{"line":202,"col":18,"offset":5289},"abstract_content":"calloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"a4be15bf58ab7bbb66a1cc0d4ac41c0a11aadf9f9e077ec16c02cf9007ae93c8aa85da59c923e33ce9de029d40fda8cb8a2c3c3853e27885617e75edd90c21db_0","lines":"  result = calloc ((n+1), sizeof *result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":202,"col":12,"offset":5283},"end":{"line":202,"col":42,"offset":5313},"extra":{"metavars":{"$CNT":{"start":{"line":202,"col":21,"offset":5292},"end":{"line":202,"col":24,"offset":5295},"abstract_content":"n+1"},"$LEN":{"start":{"line":202,"col":27,"offset":5298},"end":{"line":202,"col":41,"offset":5312},"abstract_content":"sizeof*result"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"907efa0b25f7bd4dd14e408fbdb4c342a166e7b45f777ecd7278491f5d9d8e8ca77bfa345b2c374f697ef2d5e33558cdcbf8329cd4aafa381ecac9c425053c59_0","lines":"  result = calloc ((n+1), sizeof *result);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":205,"col":3,"offset":5349},"end":{"line":205,"col":63,"offset":5409},"extra":{"metavars":{"$SIGNED":{"start":{"line":205,"col":3,"offset":5349},"end":{"line":205,"col":4,"offset":5350},"abstract_content":"n"},"$UNSIGNED":{"start":{"line":205,"col":48,"offset":5394},"end":{"line":205,"col":51,"offset":5397},"abstract_content":"len","propagated_value":{"svalue_start":{"line":196,"col":16,"offset":5161},"svalue_end":{"line":196,"col":31,"offset":5176},"svalue_abstract_content":"strlen(string)"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"cb18c6bc89ebb136e08f2d91f802b27db7e10c79a5833abb02017e8cdbe98a8d12e54ad15cd61f3c480555d571f4d5e69207f44bbc96eefad36da018dbda6cdb_3","lines":"  n = MultiByteToWideChar (CP_UTF8, 0, string, len, result, n);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-mismatched-memory-management","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":370,"col":11,"offset":9055},"end":{"line":370,"col":23,"offset":9067},"extra":{"metavars":{"$PTR":{"start":{"line":370,"col":17,"offset":9061},"end":{"line":370,"col":21,"offset":9065},"abstract_content":"wbuf","propagated_value":{"svalue_start":{"line":364,"col":14,"offset":8883},"svalue_end":{"line":364,"col":36,"offset":8905},"svalue_abstract_content":"utf8_to_wchar(string)"}}},"message":"The software attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource. Due to inherent limitations of Semgrep, this rule might generate many false positives and should therefore be customized for your codebase.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/762","https://cwe.mitre.org/data/definitions/590","https://github.com/struct/mms"],"confidence":"LOW"},"severity":"INFO","fingerprint":"7bb055f6c0d1c371a999dbaaf85074028666cf43a62a7495f49014e3c989903678825edbaa881c6c49228a135fc85ad0576425e332aed2aa3a9083146df2f9ee_0","lines":"          free (wbuf);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":443,"col":11,"offset":10790},"end":{"line":443,"col":14,"offset":10793},"extra":{"metavars":{"$VAR":{"start":{"line":443,"col":11,"offset":10790},"end":{"line":443,"col":14,"offset":10793},"abstract_content":"msg"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"eeb98919428c3a4e1d993c8562a30b5862e64d0ed0ccf138b68af35310ac775f52b469c56e1d85a00290d602f1dfc834d30770ea1a30cb856fa00f23e898571b_0","lines":"  switch (msg)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-missing-default-in-switch","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":497,"col":15,"offset":12567},"end":{"line":497,"col":30,"offset":12582},"extra":{"metavars":{"$VAR":{"start":{"line":497,"col":15,"offset":12567},"end":{"line":497,"col":30,"offset":12582},"abstract_content":"LOWORD(wparam)"}},"message":"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/478","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://github.com/returntocorp/semgrep/issues/4939"],"confidence":"LOW"},"severity":"INFO","fingerprint":"f2441f9f411053de73018478305cd19d56e8caa567549f2cd0abc2c2ae87daa442d5650c6e32926511fd067f18eef88f16ed6d666f7f4a741ce0923f275069e4_0","lines":"      switch (LOWORD (wparam))","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":547,"col":10,"offset":13630},"end":{"line":547,"col":29,"offset":13649},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":547,"col":10,"offset":13630},"end":{"line":547,"col":23,"offset":13643},"abstract_content":"w_buffer_size"},"$SIGNED":{"start":{"line":547,"col":26,"offset":13646},"end":{"line":547,"col":29,"offset":13649},"abstract_content":"255"}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"7aea2aed6e290a7506819bc9558eeea48bebf8ef5c6b81f147a8dac1af09a5685a03fb5ebc5954fc0110fe71bf2233c213563418a064ebd46a31521846f5a182_0","lines":"  size_t w_buffer_size = 255;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":551,"col":14,"offset":13709},"end":{"line":551,"col":68,"offset":13763},"extra":{"metavars":{"$FUN":{"start":{"line":551,"col":14,"offset":13709},"end":{"line":551,"col":27,"offset":13722},"abstract_content":"secmem_malloc"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"82a3cbfde9134ee472cb86473aa78744038953562e4b2a9e732fa8c1aa2b2ed6c7fa14ddaa2baaf3d671cd2eabea99ae1cb27784b87a15ecf2d645b4eba1cb05_1","lines":"  w_buffer = secmem_malloc ((w_buffer_size + 1) * sizeof *w_buffer);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-signed-unsigned-conversion","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":555,"col":3,"offset":13797},"end":{"line":555,"col":74,"offset":13868},"extra":{"metavars":{"$UNSIGNED":{"start":{"line":555,"col":3,"offset":13797},"end":{"line":555,"col":8,"offset":13802},"abstract_content":"nchar"},"$SIGNED":{"start":{"line":555,"col":60,"offset":13854},"end":{"line":555,"col":73,"offset":13867},"abstract_content":"w_buffer_size","propagated_value":{"svalue_start":{"line":547,"col":26,"offset":13646},"svalue_end":{"line":547,"col":29,"offset":13649},"svalue_abstract_content":"255"}}},"message":"The software uses a signed primitive and performs a cast to an unsigned primitive, or uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value. When the result of a function is to be used as a size parameter, using negative return values can have unexpected results. Although less frequent an issue, unsigned-to-signed conversion can be  the precursor to buffer underwrite conditions. Buffer underwrites  occur frequently when large unsigned values are cast to signed values,  and then used as indexes into a buffer or for pointer arithmetic.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/195","https://cwe.mitre.org/data/definitions/196","https://cwe.mitre.org/data/definitions/194","https://cwe.mitre.org/data/definitions/191","https://cwe.mitre.org/data/definitions/681","https://cwe.mitre.org/data/definitions/789","https://g.co/kgs/PCHQjJ","https://github.com/struct/mms","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","http://www.phrack.org/issues/60/10.html#article","https://docs.microsoft.com/en-us/cpp/sanitizers/asan-error-examples"],"confidence":"LOW"},"severity":"WARNING","fingerprint":"71e52ee1e6e1b5f0f3ec8523342daa12f7bea1cb4fcf585c46da427f9596834eb7ac24888bebbd4a4abb643dc4160ba66ed5df9396aa6b98493a48251d6d0996_0","lines":"  nchar = GetDlgItemTextW (dlg, IDC_PINENT_TEXT, w_buffer, w_buffer_size);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-strcpy-stpcpy-strcat","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":563,"col":9,"offset":14070},"end":{"line":563,"col":33,"offset":14094},"extra":{"metavars":{},"message":"A buffer overflow condition exists when a program attempts to put more data in a buffer than it can hold, or when a program attempts to put data in a memory area outside of the boundaries of a buffer.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://cwe.mitre.org/data/definitions/676","https://cwe.mitre.org/data/definitions/120","https://cwe.mitre.org/data/definitions/787","https://g.co/kgs/PCHQjJ"],"confidence":"HIGH"},"severity":"ERROR","fingerprint":"2510e9389035ca0502430c01f1168f1dee5b5e2349f88c1a0052d3fe2ca7f396d8d1a6405240b9eba17eb465e973fd2544672c083d3adae00735261233331b60_0","lines":"        strcpy (pe->pin, s_utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":563,"col":9,"offset":14070},"end":{"line":563,"col":33,"offset":14094},"extra":{"metavars":{"$FUN":{"start":{"line":563,"col":9,"offset":14070},"end":{"line":563,"col":15,"offset":14076},"abstract_content":"strcpy"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"7fbae6578e9020cc8d85e293d3814e0188ead95050265d059fbac5914630aaa456d388034cd8a4772708e9e2008955f6d6e0884e8aa22f3e0be60c45d2de434c_0","lines":"        strcpy (pe->pin, s_utf8);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":627,"col":10,"offset":16200},"end":{"line":627,"col":14,"offset":16204},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_0","lines":"  char **argv = *argvp;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":636,"col":16,"offset":16310},"end":{"line":636,"col":20,"offset":16314},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_1","lines":"  for (argc--, argv++; argc; argc--, argv++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":636,"col":38,"offset":16332},"end":{"line":636,"col":42,"offset":16336},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_2","lines":"  for (argc--, argv++; argc; argc--, argv++)","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":638,"col":12,"offset":16357},"end":{"line":638,"col":16,"offset":16361},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_3","lines":"      s = *argv;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-interesting-api-calls","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":647,"col":23,"offset":16668},"end":{"line":647,"col":66,"offset":16711},"extra":{"metavars":{"$FUN":{"start":{"line":647,"col":23,"offset":16668},"end":{"line":647,"col":40,"offset":16685},"abstract_content":"w32ce_finish_pipe"}},"message":"Locate all calls to interesting and potentially insecure API functions (candidate points). The auditor can backtrace from these candidate points to find pathways allowing access from untrusted input.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://github.com/0xdea/ghidra-scripts/blob/main/Rhabdomancer.java","https://github.com/x509cert/banned/blob/master/banned.h","https://g.co/kgs/PCHQjJ","https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf","https://learn.microsoft.com/en-us/windows-hardware/drivers/devtest/28719-banned-api-usage-use-updated-function-replacement"],"confidence":"MEDIUM"},"severity":"WARNING","fingerprint":"c4c6c8e595d88154f49e7636d46c8909a4aa44b477e31566c9f5c584c965469e8d4d8bc28165b09b54ab6cee9e7efd69bf4511b4144a7bc0c56f162c43920fb8_0","lines":"            fd = (int)w32ce_finish_pipe (atoi (s+5), s[3] != '0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-insecure-api-atoi-atol-atof","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":647,"col":42,"offset":16687},"end":{"line":647,"col":52,"offset":16697},"extra":{"metavars":{},"message":"The atoi(), atol(), atof(), and similar functions don't handle errors. They don't check for integer overflow and can return a negative value.  They have undefined behavior if the value of the result cannot be  represented. They return 0 (or 0.0) if the string does not represent  an integer (or decimal), which is indistinguishable from a correctly  formatted, zero-denoting input string.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://rules.sonarsource.com/c/type/Bug/RSPEC-989","https://wiki.sei.cmu.edu/confluence/display/c/ERR34-C.+Detect+errors+when+converting+a+string+to+a+number"],"confidence":"HIGH"},"severity":"INFO","fingerprint":"7b1ff19a7eeffa0e678d5564ca8896d6c0a973f6b42d40ee56c5bc4c8846d6d98b805295175954be82a6683f19b5efe39c84e7d9e5f835d9ea4066cdae41ed2b_0","lines":"            fd = (int)w32ce_finish_pipe (atoi (s+5), s[3] != '0');","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":664,"col":7,"offset":17002},"end":{"line":664,"col":11,"offset":17006},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_4","lines":"      argv = *argvp;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":666,"col":9,"offset":17056},"end":{"line":666,"col":13,"offset":17060},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_5","lines":"        argv[i] = argv[i + fixup];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":666,"col":19,"offset":17066},"end":{"line":666,"col":23,"offset":17070},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_6","lines":"        argv[i] = argv[i + fixup];","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":668,"col":9,"offset":17127},"end":{"line":668,"col":13,"offset":17131},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_7","lines":"        argv[i] = NULL;","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":687,"col":35,"offset":17385},"end":{"line":687,"col":39,"offset":17389},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_8","lines":"  parse_std_file_handles (&argc, &argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}},{"check_id":"SEAM.semgrep-rules.c.raptor-argv-envp-access","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":692,"col":30,"offset":17457},"end":{"line":692,"col":34,"offset":17461},"extra":{"metavars":{},"message":"The program accesses command-line arguments or environment variables, which are controlled by potential attackers.","metadata":{"author":"Marco Ivaldi <raptor@0xdeadbeef.info>","references":["https://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html"],"confidence":"MEDIUM"},"severity":"INFO","fingerprint":"8ad43d20a4f40990ed6a9c0c722eeb198157f3e253c34986d3182dc3b18a3ea9c8221a36eb815e9d412c9659638c43f6ede02fcbb44428985e875ae5232727a4_9","lines":"  pinentry_parse_opts (argc, argv);","is_ignored":false,"validation_state":"NO_VALIDATOR","engine_kind":"OSS"}}],"errors":[{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":292,"col":39,"offset":0},"end":{"line":292,"col":43,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":366,"col":39,"offset":0},"end":{"line":366,"col":43,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c:292:\n `char` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":292,"col":39,"offset":0},"end":{"line":292,"col":43,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","start":{"line":366,"col":39,"offset":0},"end":{"line":366,"col":43,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":69,"col":5,"offset":0},"end":{"line":69,"col":9,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":77,"col":5,"offset":0},"end":{"line":77,"col":51,"offset":46}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":78,"col":5,"offset":0},"end":{"line":80,"col":26,"offset":118}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":81,"col":5,"offset":0},"end":{"line":83,"col":26,"offset":120}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":84,"col":5,"offset":0},"end":{"line":84,"col":86,"offset":81}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":85,"col":5,"offset":0},"end":{"line":85,"col":88,"offset":83}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":86,"col":5,"offset":0},"end":{"line":86,"col":31,"offset":26}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":106,"col":5,"offset":0},"end":{"line":106,"col":9,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h:69:\n `enum` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":69,"col":5,"offset":0},"end":{"line":69,"col":9,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":77,"col":5,"offset":0},"end":{"line":77,"col":51,"offset":46}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":78,"col":5,"offset":0},"end":{"line":80,"col":26,"offset":118}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":81,"col":5,"offset":0},"end":{"line":83,"col":26,"offset":120}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":84,"col":5,"offset":0},"end":{"line":84,"col":86,"offset":81}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":85,"col":5,"offset":0},"end":{"line":85,"col":88,"offset":83}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":86,"col":5,"offset":0},"end":{"line":86,"col":31,"offset":26}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","start":{"line":106,"col":5,"offset":0},"end":{"line":106,"col":9,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":83,"col":30,"offset":0},"end":{"line":83,"col":46,"offset":16}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":88,"col":5,"offset":0},"end":{"line":96,"col":61,"offset":585}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":99,"col":5,"offset":0},"end":{"line":101,"col":59,"offset":180}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":104,"col":44,"offset":0},"end":{"line":104,"col":48,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":105,"col":5,"offset":0},"end":{"line":105,"col":79,"offset":74}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":106,"col":5,"offset":0},"end":{"line":106,"col":97,"offset":92}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":107,"col":5,"offset":0},"end":{"line":107,"col":21,"offset":16}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":161,"col":1,"offset":0},"end":{"line":161,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":185,"col":5,"offset":0},"end":{"line":185,"col":9,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":185,"col":23,"offset":0},"end":{"line":185,"col":42,"offset":19}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":192,"col":5,"offset":0},"end":{"line":192,"col":9,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":210,"col":1,"offset":0},"end":{"line":210,"col":15,"offset":14}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":214,"col":5,"offset":0},"end":{"line":214,"col":11,"offset":6}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":214,"col":27,"offset":0},"end":{"line":214,"col":32,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":217,"col":5,"offset":0},"end":{"line":217,"col":18,"offset":13}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":222,"col":5,"offset":0},"end":{"line":222,"col":43,"offset":38}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h:83:\n `: public TQFrame` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":83,"col":30,"offset":0},"end":{"line":83,"col":46,"offset":16}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":88,"col":5,"offset":0},"end":{"line":96,"col":61,"offset":585}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":99,"col":5,"offset":0},"end":{"line":101,"col":59,"offset":180}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":104,"col":44,"offset":0},"end":{"line":104,"col":48,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":105,"col":5,"offset":0},"end":{"line":105,"col":79,"offset":74}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":106,"col":5,"offset":0},"end":{"line":106,"col":97,"offset":92}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":107,"col":5,"offset":0},"end":{"line":107,"col":21,"offset":16}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":161,"col":1,"offset":0},"end":{"line":161,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":185,"col":5,"offset":0},"end":{"line":185,"col":9,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":185,"col":23,"offset":0},"end":{"line":185,"col":42,"offset":19}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":192,"col":5,"offset":0},"end":{"line":192,"col":9,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":210,"col":1,"offset":0},"end":{"line":210,"col":15,"offset":14}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":214,"col":5,"offset":0},"end":{"line":214,"col":11,"offset":6}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":214,"col":27,"offset":0},"end":{"line":214,"col":32,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":217,"col":5,"offset":0},"end":{"line":217,"col":18,"offset":13}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","start":{"line":222,"col":5,"offset":0},"end":{"line":222,"col":43,"offset":38}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":281,"col":1,"offset":0},"end":{"line":282,"col":4,"offset":10}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":314,"col":42,"offset":0},"end":{"line":314,"col":48,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c:281:\n `#endif\n  ;` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":281,"col":1,"offset":0},"end":{"line":282,"col":4,"offset":10}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","start":{"line":314,"col":42,"offset":0},"end":{"line":314,"col":48,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":30,"col":27,"offset":0},"end":{"line":30,"col":30,"offset":3}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":30,"col":40,"offset":0},"end":{"line":30,"col":45,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":31,"col":21,"offset":0},"end":{"line":31,"col":26,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":31,"col":58,"offset":0},"end":{"line":31,"col":65,"offset":7}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":35,"col":9,"offset":0},"end":{"line":35,"col":14,"offset":5}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h:30:\n `int` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":30,"col":27,"offset":0},"end":{"line":30,"col":30,"offset":3}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":30,"col":40,"offset":0},"end":{"line":30,"col":45,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":31,"col":21,"offset":0},"end":{"line":31,"col":26,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":31,"col":58,"offset":0},"end":{"line":31,"col":65,"offset":7}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","start":{"line":35,"col":9,"offset":0},"end":{"line":35,"col":14,"offset":5}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":35,"col":18,"offset":0},"end":{"line":35,"col":19,"offset":1}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":36,"col":24,"offset":0},"end":{"line":36,"col":25,"offset":1}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":65,"col":45,"offset":0},"end":{"line":65,"col":46,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h:35:\n `&` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":35,"col":18,"offset":0},"end":{"line":35,"col":19,"offset":1}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":36,"col":24,"offset":0},"end":{"line":36,"col":25,"offset":1}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","start":{"line":65,"col":45,"offset":0},"end":{"line":65,"col":46,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":49,"col":24,"offset":0},"end":{"line":49,"col":58,"offset":34}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":50,"col":24,"offset":0},"end":{"line":50,"col":46,"offset":22}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":51,"col":24,"offset":0},"end":{"line":51,"col":42,"offset":18}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":52,"col":24,"offset":0},"end":{"line":52,"col":48,"offset":24}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":86,"col":11,"offset":0},"end":{"line":86,"col":16,"offset":5}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h:49:\n `description READ description WRITE` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":49,"col":24,"offset":0},"end":{"line":49,"col":58,"offset":34}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":50,"col":24,"offset":0},"end":{"line":50,"col":46,"offset":22}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":51,"col":24,"offset":0},"end":{"line":51,"col":42,"offset":18}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":52,"col":24,"offset":0},"end":{"line":52,"col":48,"offset":24}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","start":{"line":86,"col":11,"offset":0},"end":{"line":86,"col":16,"offset":5}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":304,"col":8,"offset":0},"end":{"line":304,"col":16,"offset":8}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":305,"col":6,"offset":0},"end":{"line":307,"col":12,"offset":33}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":308,"col":4,"offset":0},"end":{"line":308,"col":16,"offset":12}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":309,"col":9,"offset":0},"end":{"line":309,"col":10,"offset":1}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":311,"col":18,"offset":0},"end":{"line":311,"col":21,"offset":3}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":319,"col":5,"offset":0},"end":{"line":319,"col":6,"offset":1}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":607,"col":1,"offset":0},"end":{"line":607,"col":2,"offset":1}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c:304:\n `new[j] =` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":304,"col":8,"offset":0},"end":{"line":304,"col":16,"offset":8}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":305,"col":6,"offset":0},"end":{"line":307,"col":12,"offset":33}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":308,"col":4,"offset":0},"end":{"line":308,"col":16,"offset":12}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":309,"col":9,"offset":0},"end":{"line":309,"col":10,"offset":1}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":311,"col":18,"offset":0},"end":{"line":311,"col":21,"offset":3}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":319,"col":5,"offset":0},"end":{"line":319,"col":6,"offset":1}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","start":{"line":607,"col":1,"offset":0},"end":{"line":607,"col":2,"offset":1}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":53,"col":7,"offset":0},"end":{"line":55,"col":14,"offset":57}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":57,"col":14,"offset":0},"end":{"line":57,"col":15,"offset":1}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":60,"col":1,"offset":0},"end":{"line":61,"col":15,"offset":21}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c:53:\n `do\n        written = write (fd, ptr, todo);\n      while (` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":53,"col":7,"offset":0},"end":{"line":55,"col":14,"offset":57}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":57,"col":14,"offset":0},"end":{"line":57,"col":15,"offset":1}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","start":{"line":60,"col":1,"offset":0},"end":{"line":61,"col":15,"offset":21}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":90,"col":33,"offset":0},"end":{"line":90,"col":50,"offset":17}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":102,"col":14,"offset":0},"end":{"line":102,"col":18,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":107,"col":15,"offset":0},"end":{"line":107,"col":19,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":117,"col":5,"offset":0},"end":{"line":117,"col":39,"offset":34}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":122,"col":5,"offset":0},"end":{"line":122,"col":36,"offset":31}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":123,"col":5,"offset":0},"end":{"line":123,"col":54,"offset":49}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":124,"col":5,"offset":0},"end":{"line":124,"col":19,"offset":14}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":128,"col":33,"offset":0},"end":{"line":128,"col":37,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":173,"col":18,"offset":0},"end":{"line":173,"col":21,"offset":3}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":173,"col":26,"offset":0},"end":{"line":173,"col":32,"offset":6}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":185,"col":12,"offset":0},"end":{"line":185,"col":17,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":186,"col":12,"offset":0},"end":{"line":186,"col":17,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":191,"col":12,"offset":0},"end":{"line":191,"col":17,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":195,"col":12,"offset":0},"end":{"line":195,"col":17,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":252,"col":33,"offset":0},"end":{"line":252,"col":54,"offset":21}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":254,"col":23,"offset":0},"end":{"line":254,"col":28,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":254,"col":46,"offset":0},"end":{"line":254,"col":50,"offset":4}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":255,"col":5,"offset":0},"end":{"line":255,"col":24,"offset":19}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h:90:\n `: public TQShared` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":90,"col":33,"offset":0},"end":{"line":90,"col":50,"offset":17}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":102,"col":14,"offset":0},"end":{"line":102,"col":18,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":107,"col":15,"offset":0},"end":{"line":107,"col":19,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":117,"col":5,"offset":0},"end":{"line":117,"col":39,"offset":34}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":122,"col":5,"offset":0},"end":{"line":122,"col":36,"offset":31}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":123,"col":5,"offset":0},"end":{"line":123,"col":54,"offset":49}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":124,"col":5,"offset":0},"end":{"line":124,"col":19,"offset":14}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":128,"col":33,"offset":0},"end":{"line":128,"col":37,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":173,"col":18,"offset":0},"end":{"line":173,"col":21,"offset":3}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":173,"col":26,"offset":0},"end":{"line":173,"col":32,"offset":6}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":185,"col":12,"offset":0},"end":{"line":185,"col":17,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":186,"col":12,"offset":0},"end":{"line":186,"col":17,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":191,"col":12,"offset":0},"end":{"line":191,"col":17,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":195,"col":12,"offset":0},"end":{"line":195,"col":17,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":252,"col":33,"offset":0},"end":{"line":252,"col":54,"offset":21}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":254,"col":23,"offset":0},"end":{"line":254,"col":28,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":254,"col":46,"offset":0},"end":{"line":254,"col":50,"offset":4}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","start":{"line":255,"col":5,"offset":0},"end":{"line":255,"col":24,"offset":19}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":424,"col":13,"offset":0},"end":{"line":424,"col":21,"offset":8}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c:424:\n `CALLBACK` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","start":{"line":424,"col":13,"offset":0},"end":{"line":424,"col":21,"offset":8}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":65,"col":16,"offset":0},"end":{"line":65,"col":24,"offset":8}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":69,"col":16,"offset":0},"end":{"line":69,"col":26,"offset":10}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":28,"offset":10}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":75,"col":17,"offset":0},"end":{"line":75,"col":25,"offset":8}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":79,"col":16,"offset":0},"end":{"line":79,"col":26,"offset":10}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":80,"col":18,"offset":0},"end":{"line":80,"col":28,"offset":10}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":142,"col":4,"offset":0},"end":{"line":142,"col":17,"offset":13}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":144,"col":4,"offset":0},"end":{"line":144,"col":10,"offset":6}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":179,"col":1,"offset":0},"end":{"line":179,"col":14,"offset":13}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":181,"col":1,"offset":0},"end":{"line":181,"col":7,"offset":6}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c:65:\n `template` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":65,"col":16,"offset":0},"end":{"line":65,"col":24,"offset":8}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":69,"col":16,"offset":0},"end":{"line":69,"col":26,"offset":10}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":70,"col":18,"offset":0},"end":{"line":70,"col":28,"offset":10}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":75,"col":17,"offset":0},"end":{"line":75,"col":25,"offset":8}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":79,"col":16,"offset":0},"end":{"line":79,"col":26,"offset":10}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":80,"col":18,"offset":0},"end":{"line":80,"col":28,"offset":10}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":142,"col":4,"offset":0},"end":{"line":142,"col":17,"offset":13}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":144,"col":4,"offset":0},"end":{"line":144,"col":10,"offset":6}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":179,"col":1,"offset":0},"end":{"line":179,"col":14,"offset":13}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","start":{"line":181,"col":1,"offset":0},"end":{"line":181,"col":7,"offset":6}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":135,"col":7,"offset":0},"end":{"line":135,"col":11,"offset":4}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c:135:\n `else` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","start":{"line":135,"col":7,"offset":0},"end":{"line":135,"col":11,"offset":4}}]},{"code":3,"level":"warn","type":["PartialParsing",[{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":35,"col":25,"offset":0},"end":{"line":35,"col":59,"offset":34}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":36,"col":25,"offset":0},"end":{"line":36,"col":47,"offset":22}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":38,"col":25,"offset":0},"end":{"line":38,"col":49,"offset":24}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":64,"col":8,"offset":0},"end":{"line":64,"col":13,"offset":5}},{"path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":9,"offset":8}}]],"message":"Syntax error at line /home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h:35:\n `description READ description WRITE` was unexpected","path":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","spans":[{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":35,"col":25,"offset":0},"end":{"line":35,"col":59,"offset":34}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":36,"col":25,"offset":0},"end":{"line":36,"col":47,"offset":22}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":38,"col":25,"offset":0},"end":{"line":38,"col":49,"offset":24}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":64,"col":8,"offset":0},"end":{"line":64,"col":13,"offset":5}},{"file":"/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","start":{"line":67,"col":1,"offset":0},"end":{"line":67,"col":9,"offset":8}}]}],"paths":{"scanned":["/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0004-gnome3-Use-the-default-dbus-timeout-when-checking-fo.patch/gnome3/pinentry-gnome3.c","/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0005-gnome3-correctly-detect-when-no-GNOME-screenlock-exi.patch/gnome3/pinentry-gnome3.c","/home/capstone/Desktop/root/pinentry-1.1.0/.pc/0007-gtk2-When-X11-input-grabbing-fails-try-again-over-0..patch/gtk+-2/pinentry-gtk-2.c","/home/capstone/Desktop/root/pinentry-1.1.0/curses/pinentry-curses.c","/home/capstone/Desktop/root/pinentry-1.1.0/emacs/pinentry-emacs.c","/home/capstone/Desktop/root/pinentry-1.1.0/fltk/passwindow.h","/home/capstone/Desktop/root/pinentry-1.1.0/fltk/pinwindow.h","/home/capstone/Desktop/root/pinentry-1.1.0/fltk/qualitypasswindow.h","/home/capstone/Desktop/root/pinentry-1.1.0/gnome3/pinentry-gnome3.c","/home/capstone/Desktop/root/pinentry-1.1.0/gtk+-2/pinentry-gtk-2.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/argparse.h","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/password-cache.h","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-curses.h","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry-emacs.h","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.c","/home/capstone/Desktop/root/pinentry-1.1.0/pinentry/pinentry.h","/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentryconfirm.h","/home/capstone/Desktop/root/pinentry-1.1.0/qt/pinentrydialog.h","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/memory.h","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem++.h","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem-util.h","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/secmem.c","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.c","/home/capstone/Desktop/root/pinentry-1.1.0/secmem/util.h","/home/capstone/Desktop/root/pinentry-1.1.0/tqt/pinentrydialog.h","/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqinternal_p.h","/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqlineedit.h","/home/capstone/Desktop/root/pinentry-1.1.0/tqt/secqstring.h","/home/capstone/Desktop/root/pinentry-1.1.0/tty/pinentry-tty.c","/home/capstone/Desktop/root/pinentry-1.1.0/w32/main.c","/home/capstone/Desktop/root/pinentry-1.1.0/w32/resource.h"]},"interfile_languages_used":[],"skipped_rules":[]}